procedure
refgbl $autousage
body
let $autousage="none"
!
! Create a large graphics file (280 values; 140 2d coordinate sets)
ibis-gen int1 nc=2 nr=46 datacol=(1,2) data=( +
    1,1, 5,5,   44.32,2.214, 30,12.5, 2,2,  0,0,  1,1,  20,1,  20,20, 1,20, +
    1,1, 32,13, 78., 23.29,  43,83,   48,1, 0,0,  2,2,  19,2,  19,19, 2,19, +
    2,2, 38,3,  11,23,       1,5,     35,2, 33,2, 0,0,  44,2,  2,3,   53,3, +
    2,3, 45,4,  4,4,         34,5,    3,4,  45,5, 33,2, 23,23, 34,33, 3,2, +
    1,1, 69,90, 8,9,         5,6,     0,4,  8,7)
ibis-gen int2 nc=2 nr=93 datacol=(1,2) data=(5,9, 3,8, 7,4, +
    3,4, 5,9, 8,7, 8,3, 6,7, 5,8, 9,7, 1,3, 2,1, 3,6, +
    2,4, 5,9, 3,7, 2,4, 0,2, 1,9, 3,8, 4,9, 7,8, 3,4, +
    5,1, 7,4, 7,3, 1,9, 0,8, 7,5, 4,7, 0,9, 8,6, 0,9, +
    5,4, 7,8, 7,0, 5,9, 2,8, 4,3, 5,7, 4,5, 1,8, 7,3, +
    4,9, 8,3, 6,7, 5,8, 7,2, 1,3, 8,5, 7,9, 5,8, 7,6, +
    8,9, 6,8, 4,7, 1,6, 8,5, 6,3, 4,5, 8,9, 3,4, 6,7, +
    5,7, 8,6, 1,0, 7,4, 6,7, 8,3, 1,4, 6,0, 7,3, 6,5, +
    7,8, 4,1, 6,3, 7,8, 0,5, 6,4, 1,3, 9,8, 7,3, 4,8, +
    8,7, 4,3, 1,8, 5,7, 1,3, 4,1, 3,7, 4,1, 3,7, 4,7)
ibis-catenate INP=(int1,int2) OUT=inta
ibis-copy inta polya 'ibis-1 'row
label-list polya
ibis-list polya gr1dim=2 'nohead
!
! The first test will transfer the file from (x,y) to (l,s), with (x=0,y=0)
! equivalent to (l=50,s=1)

tibisgr-convert polya  out=polyao 
label-list polyao
ibis-list polyao gr1dim=2 'nohead

! Make sure that big files are ok (FR#85711)
ibis-gen c nc=2 nr=100000 index=1
tibisgr-convert c  out=c1
ibis-list c1 gr1=2 nr=10

!
! Create a smaller graphics file to test repeats
ibis-gen polyb 'ibis-1 'row datacol=(1,2) data=( +
    4,5, 6,7, 22,1, 42,1, 8,3.3, 44.221,47.34)
!
! Try the second and third tests
tibisgr-convert polyb repeat=5 out=polybo 
ibis-list polyb gr1dim=2 'nohead
tibisgr-convert polyb repeat=5 rstart=3 out=polybo 
ibis-list polybo gr1dim=2 'nohead
!
! Try one of the tests again, this time trying SETGR on an output file
tibisgr-convert polyb  out=polybo 'write
label-list polybo
ibis-list polybo gr1dim=2 'nohead
!
!
! The fifth test will transfer the file from (x,y) to (l,s), with (x=0,y=0)
! equivalent to (l=50,s=1), but treating the input and output files as 5d
! files.
tibisgr-convert polya dimen=5 out=polyao2
label-list polyao2
ibis-list polyao2 gr1dim=5 'nohead
!
! Display several coordinates from a graphics file
tibisgr-print polya dimen=2 coord=6
tibisgr-print polya dimen=2 coord=3
tibisgr-print polya dimen=2 coord=10
tibisgr-print polya dimen=2 coord=40
tibisgr-print polya dimen=2 coord=-1
tibisgr-print polya dimen=2 coord=15
tibisgr-print polya dimen=2 coord=14 extra=4
tibisgr-print polya dimen=2 coord=62 extra=6
tibisgr-print polya dimen=2 coord=124 extra=4
tibisgr-print polya dimen=2 coord=130 extra=12
!
! Change the perceived dimension of the file and try again -- IBIS-1 only!
tibisgr-print polya dimen=3 coord=6
tibisgr-print polya dimen=3 coord=3
tibisgr-print polya dimen=3 coord=40
tibisgr-print polya dimen=3 coord=9
tibisgr-print polya dimen=3 coord=7 extra=4
tibisgr-print polya dimen=3 coord=46 extra=4
tibisgr-print polya dimen=3 coord=92 extra=4
tibisgr-print polya dimen=3 coord=86 extra=4
!
! Create a lot of graphic files for test #6, which takes 18 input files
ibis-gen f 'ibis-1 'row nc=2 nr=1  datacol=(1,2) data=(6,206)
ibis-gen g 'ibis-1 'row nc=2 nr=1  datacol=(1,2) data=(7,207)
ibis-gen h 'ibis-1 'row nc=2 nr=1  datacol=(1,2) data=(8,208)
ibis-gen i 'ibis-1 'row nc=2 nr=1  datacol=(1,2) data=(9,209)
ibis-gen j 'ibis-1 'row nc=2 nr=1  datacol=(1,2) data=(10,2010)
ibis-gen k 'ibis-1 'row nc=2 nr=1  datacol=(1,2) data=(11,2011)
ibis-gen l 'ibis-1 'row nc=2 nr=1  datacol=(1,2) data=(12,2012)
ibis-gen m 'ibis-1 'row nc=2 nr=1  datacol=(1,2) data=(13,2013)
ibis-gen n 'ibis-1 'row nc=2 nr=1  datacol=(1,2) data=(14,2014)
ibis-gen o 'ibis-1 'row nc=2 nr=1  datacol=(1,2) data=(15,2015)
ibis-gen p 'ibis-1 'row nc=2 nr=1  datacol=(1,2) data=(16,2016)
ibis-gen q 'ibis-1 'row nc=2 nr=1  datacol=(1,2) data=(17,2017)
ibis-gen r 'ibis-1 'row nc=2 nr=1  datacol=(1,2) data=(18,2018)
tibisgr-bigcopy  +
    inp=(polya,polyao,polyb,polybo,polyao2,f,g,h,i,j,k,l,m,n,o,p,q,r) +
    out=(out1,out2)
label-list out1
ibis-list out1 gr1=2 'nohead
label-list out2
ibis-list out2 gr1=2 'nohead
!
! Test new UPDATE mode (uses C interface)
ibis-list polya gr1=2 'nohead nr=10
tibisgr-update  polya  dim=2
ibis-list polya gr1=2 'nohead nr=10
!
end-proc

