      SUBROUTINE MODTRAN3(FULLFILE,TABFILE,PLTABFILE,SUNFILE,DIRACFILE, 
     +             UFTAPXFILE,H2OX,O3X,O2X,CH4X,SO2X,TEMPADJX,          
     +          CODEX,MODELX,ITYPEX,IEMSCTX,IMULTX,M1X,M2X,M3X,M4X,M5X, 
     +             M6X,MDEFX,IMX,NOPRNTX,TBOUNDX,SPECALB,               
     +          LDISORT,ISTRM,LSUN1,ISUNX,CO2MIXX,                      
     +          IHAZEX,ISEASNX,IVULCNX,ICSTLX,ICLDX,IVSAX,VISX,WSSX,    
     +             WHHX,RAINRTX,GNDALTX,                                
     +          H1X,H2X,ANGLEX,RANGEX,BETAX,ROX,LENX,PHIX,              
     +          IV1X,IV2X,IDVX,IRESX,YFLAGX,XFLAGX,DLIMITX,             
     +          CTHIKX,CALTX,CEXTX,ISEEDX,                              
     +          NCRALTX,NCRSPCX,CWAVLNX,CCOLWDX,CCOLIPX,CHUMIDX,        
     +             ASYMWDX,ASYMIPX,                                     
     +          ZCVSAX,ZTVSAX,ZINVSAX,                                  
     +          MLX,IRD1X,IRD2X,TITLEX,                                 
     +          ZMDLIN,PIN,TIN,WMOLIN,XMOLIN,JCHARIN,JCHARXIN,          
     +          AHAZEX,EQLWCZX,RRATZX,IHA1X,ICLD1X,IVUL1X,ISEA1X,ICHR1X,
     +          IREGX,AWCCONX,TITLE2DX,WAVLENX,VXX,EXTCX,ABSCX,ASYMX,   
     +          ZCLDX,CLDX,CLDICEX,RRX,                                 
     +          IPARMX,IPHX,IDAYX,ISOURCX,                              
     +          PARM1X,PARM2X,PARM3X,PARM4X,TIMEX,PSIPOX,ANGLEMX,GX,    
     +          NANGLSX,ANGFX,FX,                                       
     +          WAVELEN,TRANSMIT,PATHRAD,SKYRAD)                        
Calley      SUBROUTINE DRIVER                                           
C                                                                       
C     INCLUDE PARAMETERS                                                
      INCLUDE 'PARAM.LST'                                               
C                                                                       
C     declare subroutine argument arrays                                
      REAL SPECALB(50000),ZMDLIN(LAYDIM),PIN(LAYDIM),TIN(LAYDIM)        
      REAL WMOLIN(12,LAYDIM),XMOLIN(NSPECX,LAYDIM),AHAZEX(LAYDIM)       
      REAL EQLWCZX(LAYDIM),RRATZX(LAYDIM),AWCCONX(4)                    
      REAL WAVLENX(NWAVLN),VXX(NWAVLN),EXTCX(NAER,NWAVLN)               
      REAL ABSCX(NAER,NWAVLN),ASYMX(NAER,NWAVLN),ANGFX(50),FX(4,50)     
      REAL ZCLDX(NZCLD),CLDX(NZCLD),CLDICEX(NZCLD),RRX(NZCLD)           
      REAL WAVELEN(*),TRANSMIT(*),PATHRAD(*),SKYRAD(*)                  
      INTEGER IHA1X(LAYDIM),ICLD1X(LAYDIM),IVUL1X(LAYDIM),ISEA1X(LAYDIM)
      INTEGER ICHR1X(LAYDIM),IREGX(4)                                   
      LOGICAL LDISORT,LSUN1                                             
      CHARACTER*80 FULLFILE,TABFILE,PLTABFILE,SUNFILE,DIRACFILE,FILEX   
      CHARACTER*80 UFTAPXFILE                                           
      CHARACTER*8 DLIMITX                                               
      CHARACTER*4 TITLEX(16),TITLE2DX(18,4)                             
      CHARACTER*1 JCHARIN(15,LAYDIM),JCHARXIN(LAYDIM),YFLAGX,XFLAGX     
      CHARACTER*1 CODEX                                                 
C                                                                       
C     LIST COMMONS                                                      
      INTEGER KPOINT                                                    
      REAL WAVLEN,EXTC,ABSC,ASYM,AWCCON,TX,W,RELHUM,PATM,TBBY,WPATH     
      COMMON/BASE/WAVLEN(MXWVLN),EXTC(NAER,MXWVLN),ABSC(NAER,MXWVLN),   
     1  ASYM(NAER,MXWVLN),AWCCON(NAER),KPOINT(NSPC),TX(KMAX),W(KMAX),   
     2  RELHUM(LAYDIM),PATM(LAYTHR),TBBY(LAYTHR),WPATH(LAYTHR,KMAX)     
C                                                                       
C     FILE UNIT NUMBERS                                                 
C       IRD      MODTRAN INPUT FILE, tape5, UNIT NUMBER (1).            
C       IPR      MODTRAN STANDARD OUTPUT FILE, tape6, UNIT NUMBER (2).  
C       IPU      MODTRAN SPECTRAL DATA FILE, tape7, UNIT NUMBER (7).    
C       NPR      PRINTOUT LEVEL SWITCH (1=small,0=normal,-1=large).     
C       IPR1     MODTRAN FLUX OUTPUT FILE, tape8, UNIT NUMBER (8).      
C       ISCRCH   MULTIPLE SCATTERING SCRATCH FILE UNIT NUMBER (10).     
C       ITB      MOLECULAR BAND MODEL PARAMETER FILE UNIT NUMBER (9).   
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                           
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                       
      INTEGER MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT                     
      REAL TBOUND,SALB                                                  
      LOGICAL MODTRN                                                    
      COMMON/CARD1/MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB,   
     1  MODTRN                                                          
      INTEGER M4,M5,M6,MDEF,IRD1,IRD2                                   
      COMMON/CARD1A/M4,M5,M6,MDEF,IRD1,IRD2                             
      INTEGER IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA                       
      REAL VIS,WSS,WHH,RAINRT                                           
      COMMON/CARD2/IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,VIS,WSS,WHH,     
     1  RAINRT                                                          
      INTEGER NCRALT,NCRSPC                                             
      REAL CTHIK,CALT,CEXT,CWAVLN,CCOLWD,CCOLIP,CHUMID,ASYMWD,ASYMIP    
      COMMON/CARD2A/CTHIK,CALT,CEXT,NCRALT,NCRSPC,                      
     1  CWAVLN,CCOLWD,CCOLIP,CHUMID,ASYMWD,ASYMIP                       
      INTEGER IREG,IREGC                                                
      REAL ALTB                                                         
      COMMON/CARD2D/IREG(4),ALTB(4),IREGC(4)                            
      INTEGER LENN                                                      
      REAL H1,H2,ANGLE,RANGE,BETA,REE                                   
      COMMON/CARD3/H1,H2,ANGLE,RANGE,BETA,REE,LENN                      
      INTEGER IPH                                                       
      REAL G                                                            
      COMMON/CARD3A/IPH,G                                               
      INTEGER IV1,IV2,IDV,IFWHM                                         
      COMMON/CARD4/IV1,IV2,IDV,IFWHM                                    
C                                                                       
C       PI       THE CONSTANT PI                                        
C       DEG      NUMBER OF DEGREES IN ONE RADIAN.                       
C       BIGNUM   MAXIMUM SINGLE PRECISION NUMBER.                       
C       BIGEXP   MAXIMUM EXPONENTIAL ARGUMENT WITHOUT OVERFLOW.         
      REAL PI,DEG,BIGNUM,BIGEXP                                         
      COMMON/CNSTNS/PI,DEG,BIGNUM,BIGEXP                                
      INTEGER IKMAX,ML,ISSGEO,IMULT                                     
      COMMON/CNTRL/IKMAX,ML,ISSGEO,IMULT                                
      REAL ZM,PM,TM,RFNDX,DENSTY                                        
      COMMON/MODEL/ZM(LAYDIM),PM(LAYDIM),TM(LAYDIM),                    
     1  RFNDX(LAYDIM),DENSTY(KMAX,LAYDIM)                               
      INTEGER JTURN,LJ                                                  
      REAL ATHETA,ADBETA,PHASFN,AH1,ARH,ANGSUN,TBBYS,PATMS,WPATHS       
      COMMON/SOLS/JTURN,LJ(LAYTWO+1),ATHETA(LAYDIM+1),                  
     1  ADBETA(LAYDIM+1),PHASFN(LAYTWO,4),AH1(LAYTWO),ARH(LAYTWO),      
     2  ANGSUN,TBBYS(LAYTHR,12),PATMS(LAYTHR,12),WPATHS(LAYTHR,KMAX)    
      REAL RHH                                                          
      COMMON/MART/RHH                                                   
      INTEGER NANGLS                                                    
      REAL ANGF,F                                                       
      COMMON/USRDTA/NANGLS,ANGF(50),F(4,50)                             
      REAL HMDLZ                                                        
      COMMON/MDLZ/HMDLZ(8)                                              
      INTEGER IHVSA                                                     
      REAL ZVSA,RHVSA,AHVSA                                             
      COMMON/ZVSALY/ZVSA(10),RHVSA(10),AHVSA(10),IHVSA(10)              
      CHARACTER*4 HHAZE,HSEASN,HVULCN,BLANK,HMET,HMODEL,HTRRAD          
      COMMON/TITL/HHAZE(5,16),HSEASN(5,2),HVULCN(5,8),BLANK,            
     1  HMET(5,2),HMODEL(5,8),HTRRAD(6,4)                               
      REAL VSB                                                          
      COMMON/VSBD/VSB(10)                                               
C                                                                       
C     /PATH/                                                            
C       QTHETA  COSINE OF PATH ZENITH AT PATH BOUNDARIES.               
C       AHT     ALTITUDES AT PATH BOUNDARIES.                           
C       TPH     TEMPERATURE AT PATH BOUNDARIES.                         
C       IMAP    MAPPING FROM PATH SEGMENTS TO LAYERS.                   
      INTEGER IMAP                                                      
      REAL QTHETA,AHT,TPH                                               
      COMMON/PATH/QTHETA(LAYTWO),AHT(LAYTWO),TPH(LAYTWO),IMAP(LAYTWO)   
      REAL GNDALT                                                       
      COMMON/GRAUND/GNDALT                                              
      REAL SMALL                                                        
      COMMON/SMALL3/SMALL                                               
      LOGICAL LSAME                                                     
      COMMON/SOLAR/LSAME                                                
      REAL CO2RAT                                                       
      COMMON/CO2MIX/CO2RAT                                              
      REAL H2O,O3,O2,CH4,SO2,TEMPADJ                                    
      COMMON /MOLFACS/ H2O,O3,O2,CH4,SO2,TEMPADJ                        
      CHARACTER*80 MOLFILE,CFCFILE                                      
      COMMON /BMPFILES/ MOLFILE,CFCFILE                                 
C                                                                       
C     DECLARE LOCAL ARRAYS                                              
      INTEGER ICH(4)                                                    
      REAL QTHETS(LAYTWO)                                               
C                                                                       
C     DECLARE LOCAL VARIABLES:                                          
C       PHI      ZENITH ANGLE AT TARGET (H2) TO OBSERVER (H1) [DEG].    
      CHARACTER CODE*1,YFLAG*1,XFLAG*1,DLIMIT*8                         
      LOGICAL DIS,SUN1,GROUND,LOPEN                                     
      DOUBLE PRECISION UANG                                             
      INTEGER IRPT,NSTR,NL,I,J,JPRT,LSALB,ISUN,IK,ISEED,MDLSAV,ICLDSV,  
     1  IPARM,IDAY,ISOURC,ITYPSV,LENNSV,IPRMSV,IPHSV,IDAYSV,ICR,        
     2  ISRCSV,MM1,MM2,MM3,IHVUL,IHMET,MSOFF,IERROR,IMSMX,IPLOT         
      REAL TBNDSV,SALBSV,CO2MX,ZCVSA,ZTVSA,ZINVSA,RAINSV,CPROB,         
     1  PARM1,PARM2,PARM3,PARM4,TIME,PSIPO,ANGLEM,RO,H1SAV,H2SAV,       
     2  ANGSAV,RNGSAV,BETASV,PRM1SV,PRM2SV,PRM3SV,PRM4SV,TIMESV,        
     3  GSV,ANGMSV,ALAM1,ALAM2,BENDNG,BETAH2,PHI                        
Calley     3  GSV,ANGMSV,SALBV,DUMN,ALAM1,ALAM2,BENDNG,BETAH2,PHI       
C@                                                                      
C@    HDATE AND HTIME CARRY THE DATA AND TIME AND MUST                  
C@    BE DOUBLE PRECISION ON A 32 BIT WORD COMPUTER                     
C@    DOUBLE PRECISION HDATE,HTIME                                      
CSSI  REAL TSEC,TSEC0                                                   
C                                                                       
C     LIST DATA                                                         
C       LFIRST   LOGICAL FLAG, TRUE WHEN FIRST SOLAR PARAMETERS ARE     
C                READ IN A SERIES OF RUNS INVOLVING SOLAR PARAMETERS.   
C       LRDSUN   LOGICAL FLAG, SET TO TRUE IF SOLAR IRRADIANCES ARE     
C                USED AT A RESOLUTION OF OTHER THAN 5 CM-1.             
C       IBNDWD   BAND MODEL BIN WIDTH [CM-1].                           
C       MXFREQ   MAXIMUM BAND MODEL PARAMETER FREQUENCY [CM-1].         
C       KNTRVL   NUMBER OF ABSORPTION COEFFICIENTS PER SPECTRAL BIN.    
C       SUNFIL   NAME OF FILE CONTAINING SOLAR IRRADIANCES.             
      LOGICAL LFIRST,LRDSUN                                             
      INTEGER IBNDWD,MXFREQ,KNTRVL                                      
      CHARACTER*60 SUNFIL                                               
      DATA IRPT/0/,LFIRST/.TRUE./,LRDSUN/.FALSE./,                      
     1  IBNDWD/1/,MXFREQ/22681/,KNTRVL/1/,SUNFIL/                       
     2  'DATA/sun3                                                   '/ 
C                                                                       
C     load molecular scaling factors                                    
      H2O = H2OX                                                        
      O3 = O3X                                                          
      O2 = O2X                                                          
      CH4 = CH4X                                                        
      SO2 = SO2X                                                        
      TEMPADJ = TEMPADJX                                                
C                                                                       
C     load band model file names                                        
      MOLFILE = DIRACFILE                                               
      CFCFILE = UFTAPXFILE                                              
C                                                                       
C     IRD, IPR, IPU AND IPR1 ARE UNIT NUMBERS FOR INPUT, STANDARD       
C     OUTPUT, PLOT OUTPUT AND EXTRA OUTPUT FILES, RESPECTIVELY.         
      IRD=1                                                             
      IPR=2                                                             
      IPU=7                                                             
      IPR1=8                                                            
      ITB=9                                                             
      ISCRCH=10                                                         
      IPLOT=12                                                          
      ICR=13                                                            
      IF (FULLFILE .EQ. 'DUMMY' .OR. FULLFILE .EQ. 'NULL' .OR.          
     +    FULLFILE .EQ. 'dummy' .OR. FULLFILE .EQ. 'null') THEN         
          IPR = -1                                                      
      ELSE                                                              
          OPEN (IPR,FILE=FULLFILE,STATUS='UNKNOWN')                     
      END IF                                                            
      IF (TABFILE .EQ. 'DUMMY' .OR. TABFILE .EQ. 'NULL' .OR.            
     +    TABFILE .EQ. 'dummy' .OR. TABFILE .EQ. 'null') THEN           
          IPJ = -1                                                      
      ELSE                                                              
          IPJ = 21                                                      
          OPEN (IPJ,FILE=TABFILE,STATUS='UNKNOWN')                      
      END IF                                                            
      IF (PLTABFILE .EQ. 'DUMMY' .OR. PLTABFILE .EQ. 'NULL' .OR.        
     +    PLTABFILE .EQ. 'dummy' .OR. PLTABFILE .EQ. 'null') THEN       
          IPU = -1                                                      
          IPR1 = -1                                                     
      ELSE                                                              
          OPEN (IPU,FILE=PLTABFILE,STATUS='UNKNOWN')                    
          FILEX = 'tape8.' // PLTABFILE                                 
          OPEN (IPR1,FILE=FILEX,STATUS='UNKNOWN')                       
      END IF                                                            
Calley      OPEN(IRD,FILE='tape5',STATUS='OLD')                         
Calley      OPEN(IPR,FILE='tape6',STATUS='UNKNOWN')                     
Calley      CLOSE(IPR,STATUS='DELETE')                                  
Calley      OPEN(IPR,FILE='tape6',STATUS='NEW')                         
Calley      OPEN(IPU,FILE='tape7',STATUS='UNKNOWN')                     
Calley      CLOSE(IPU,STATUS='DELETE')                                  
Calley      OPEN(IPU,FILE='tape7',STATUS='NEW')                         
Calley      OPEN(IPR1,FILE='tape8',STATUS='UNKNOWN')                    
Calley      CLOSE(IPR1,STATUS='DELETE')                                 
Calley      OPEN(IPR1,FILE='tape8',STATUS='NEW')                        
      OPEN(ISCRCH,STATUS='SCRATCH',FORM='UNFORMATTED')                  
Calley      OPEN(28,FILE='DATA/refbkg',STATUS='OLD')                    
C                                                                       
C     DEFINE CONSTANTS                                                  
C       BIGNUM  CUTOFF FOR AVOIDING OVERFLOWS                           
C       BIGEXP  ARGUMENT CUTOFF FOR AVOIDING OVERFLOWS IN EXP FUNCTION  
C       NL      NUMBER OF BOUNDARIES IN THE STANDARD MODELS 1 TO 6      
      PI=2.*ASIN(1.)                                                    
      DEG=180./PI                                                       
      RANGE=0.                                                          
      SMALL=2.                                                          
      BIGNUM=1.0E35                                                     
      BIGEXP=87.0                                                       
      NL=36                                                             
C@                                                                      
C@    TIME AND DATE                                                     
C@      THE USER MAY WISH TO INCLUDE SUBROUTINES FDATE AND FCLOCK WHICH 
C@      RETURN THE DATE AND TIME IN MM/DD/YY AND HH.MM.SS FORMATS,      
C@      RESPECTIVELY. THE REQUIRED ROUTINES FOR A CDC 6600 ARE INCLUDED 
C@      AT THE END OF DRIVER IN COMMENT CARDS STARTING WITH "C@".       
C@    CALL FDATE(HDATE)                                                 
C@    CALL FCLOCK(HTIME)                                                
CSSI  CALL SECOND(TSEC0)                                                
C                                                                       
C     START CALCULATION                                                 
   10 CONTINUE                                                          
      IREG(1)=0                                                         
      IREG(2)=0                                                         
      IREG(3)=0                                                         
      IREG(4)=0                                                         
Calley      WRITE(IPR,'(A,20X,A)')                                      
      IF (IPR .GT. 0) WRITE(IPR,'(A,20X,A)')                            
     1  '1','*****  MODTRAN3.5   Version 1.2   April 97  *****'         
C@    WRITE(IPR,'(22X,A,3X,A)HDATE,HTIME                                
      DO 30 I=1,NAER                                                    
          DO 20 J=1,MXWVLN                                              
              EXTC(I,J)=0.                                              
              ABSC(I,J)=0.                                              
              ASYM(I,J)=0.                                              
   20     CONTINUE                                                      
   30 CONTINUE                                                          
      JPRT=0                                                            
C                                                                       
C     CARD 1                                                            
Calley      READ(IRD,'(A1,I4,12I5,F8.3,F7.2)')CODE,MODEL,ITYPE,IEMSCT,  
Calley     1  IMULT,M1,M2,M3,M4,M5,M6,MDEF,IM,NOPRNT,TBOUND,SALB        
      CODE = CODEX                                                      
      MODEL = MODELX                                                    
      ITYPE = ITYPEX                                                    
      IEMSCT = IEMSCTX                                                  
      IMULT = IMULTX                                                    
      M1 = M1X                                                          
      M2 = M2X                                                          
      M3 = M3X                                                          
      M4 = M4X                                                          
      M5 = M5X                                                          
      M6 = M6X                                                          
      MDEF = MDEFX                                                      
      IM = IMX                                                          
      NOPRNT = NOPRNTX                                                  
      TBOUND = TBOUNDX                                                  
      SALB = SPECALB(IV1X)                                              
      IF(IMULT.NE.0 .AND. IEMSCT.NE.1 .AND. IEMSCT.NE.2)THEN            
Calley    WRITE(IPR,'(A)')'0   MULTIPLE SCATTERING HAS BEEN TURNED OFF' 
          IF (IPR .GT. 0) WRITE(IPR,'(A)')                              
     +                    '0   MULTIPLE SCATTERING HAS BEEN TURNED OFF' 
          IMULT=0                                                       
      ENDIF                                                             
CalleyWRITE(IPR,'(2A,I4,12I5,F8.3,F7.2)')'0 CARD 1  *****',CODE,MODEL,  
Calley1 ITYPE,IEMSCT,IMULT,M1,M2,M3,M4,M5,M6,MDEF,IM,NOPRNT,TBOUND,SALB 
      IF (IPR .GT. 0) WRITE(IPR,'(2A,I4,12I5,F8.3,F7.2)')               
     +                 '0 CARD 1  *****',CODE,MODEL,ITYPE,IEMSCT,IMULT, 
     +                 M1,M2,M3,M4,M5,M6,MDEF,IM,NOPRNT,TBOUND,SALB     
      MODTRN=.TRUE.                                                     
      IF(CODE.EQ.'L' .OR. CODE.EQ.'l' .OR.                              
     1  CODE.EQ.'F' .OR. CODE.EQ.'f')MODTRN=.FALSE.                     
C                                                                       
C     OPEN COOLING RATE FILE IF MULTIPLE SCATTERING                     
C     IS ON AND THE FILE IS NOT ALREADY OPEN.                           
CORK  IF(IMULT.NE.0 .AND. NOPRNT.NE.1)THEN                              
CORK      INQUIRE(IPLOT,OPENED=LOPEN)                                   
CORK      IF(.NOT.LOPEN)THEN                                            
CORK          OPEN(ICR,FILE='clrates',STATUS='UNKNOWN')                 
CORK          CLOSE(ICR,STATUS='DELETE')                                
CORK          OPEN(ICR,FILE='clrates',STATUS='NEW')                     
CORK      ENDIF                                                         
CORK  ENDIF                                                             
      TBNDSV=TBOUND                                                     
      LSALB=0                                                           
      SALBSV=SALB                                                       
      IF(SALB.LT.0)LSALB=-INT(SALB)                                     
C                                                                       
C     SET THE NUMBER OF SPECIES TREATED WITH THE 1 CM-1 BAND MODEL.     
C     ALSO, FOR EACH SPECIES, SET THE POINTER WHICH MAPS THE HITRAN     
C     NUMERICAL LABEL TO THE LOWTRAN NUMERICAL LABEL.                   
      KPOINT( 1)=17                                                     
      KPOINT( 2)=36                                                     
      KPOINT( 3)=31                                                     
      KPOINT( 4)=47                                                     
      KPOINT( 5)=44                                                     
      KPOINT( 6)=46                                                     
      KPOINT( 7)=50                                                     
      KPOINT( 8)=54                                                     
      KPOINT( 9)=56                                                     
      KPOINT(10)=55                                                     
      KPOINT(11)=52                                                     
      KPOINT(12)=11                                                     
      IRD1=0                                                            
      IRD2=0                                                            
      IF(MODEL.EQ.0)LENN=0                                              
      IF(MODEL.GE.1 .AND. MODEL.LE.6)THEN                               
          IF(M1.EQ.0)M1=MODEL                                           
          IF(M2.EQ.0)M2=MODEL                                           
          IF(M3.EQ.0)M3=MODEL                                           
          IF(M4.EQ.0)M4=MODEL                                           
          IF(M5.EQ.0)M5=MODEL                                           
          IF(M6.EQ.0)M6=MODEL                                           
          IF(MDEF.EQ.0)MDEF=1                                           
      ENDIF                                                             
      NPR=NOPRNT                                                        
C                                                                       
C     CARD 1B                                                           
Calley      READ(IRD,'(2(L1,I4),F10.3)')DIS,NSTR,SUN1,ISUN,CO2MX        
      DIS = LDISORT                                                     
      NSTR = ISTRM                                                      
      SUN1 = LSUN1                                                      
      ISUN = ISUNX                                                      
      CO2MX = CO2MIXX                                                   
      IF(CO2MX.LE.0.)CO2MX=330.                                         
      IF(IMULT.EQ.0)DIS=.FALSE.                                         
Calley      WRITE(IPR,'(A,2(L1,I4),F10.3)')                             
      IF (IPR .GT. 0) WRITE(IPR,'(A,2(L1,I4),F10.3)')                   
     1  '0 CARD 1B *****',DIS,NSTR,SUN1,ISUN,CO2MX                      
      CO2RAT=CO2MX/330.                                                 
      IF(IEMSCT.GE.2)THEN                                               
C                                                                       
C         SUN TO BE USED.                                               
          SUNFIL = SUNFILE                                              
          IF(SUN1)THEN                                                  
C                                                                       
C             READ SOLAR IRRADIANCES.                                   
              CALL RDSUN(ISUN,SUNFIL)                                   
              IF(ISUN.NE.5)LRDSUN=.TRUE.                                
          ELSEIF(LRDSUN)THEN                                            
C                                                                       
C             SOLAR IRRADIANCE BLOCK DATA WAS OVER-WRITTEN,             
C             BUT IS NOW NEEDED SO IT MUST BE REGENERATED.              
              ISUN=5                                                    
              CALL RDSUN(ISUN,SUNFIL)                                   
              LRDSUN=.FALSE.                                            
          ENDIF                                                         
      ENDIF                                                             
C                                                                       
C     CARD 2 AEROSOL MODEL                                              
Calley      READ(IRD,'(6I5,5F10.5)')                                    
Calley 1  IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,VIS,WSS,WHH,RAINRT,GNDALT 
      IHAZE = IHAZEX                                                    
      ISEASN = ISEASNX                                                  
      IVULCN = IVULCNX                                                  
      ICSTL = ICSTLX                                                    
      ICLD = ICLDX                                                      
      IVSA = IVSAX                                                      
      VIS = VISX                                                        
      WSS = WSSX                                                        
      WHH = WHHX                                                        
      RAINRT = RAINRTX                                                  
      GNDALT = GNDALTX                                                  
Calley      WRITE(IPR,'(/A,6I5,5F10.5)')'0 CARD 2  *****',              
      IF (IPR .GT. 0) WRITE(IPR,'(/A,6I5,5F10.5)')'0 CARD 2  *****',    
     1  IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,VIS,WSS,WHH,RAINRT,GNDALT   
C                                                                       
C     CHECK IF IHAZE OR ICLD NEED TO BE RESET.                          
C       IF IHAZE < 0, THEN NO AEROSOLS BUT CLOUDS IF 0 < ICLD < 11      
C       IF IHAZE = 0, THEN NO AEROSOLS AND NO CLOUDS                    
C       IF IHAZE > 0, THEN AEROSOLS AND, IF ICLD > 0, CLOUDS            
      IF(IHAZE.EQ.0 .AND. ICLD.NE.0)THEN                                
C                                                                       
C         RESET ICLD TO ZERO - NO CLOUDS                                
Calley          WRITE(IPR,'(/2A,I3,A)')' WARNING:  INPUT ICLD IS BEING',
Calley     1      ' RESET FROM',ICLD,' TO 0 SINCE IHAZE EQUALS 0.'      
          IF (IPR .GT. 0) WRITE(IPR,'(/2A,I3,A)')                       
     +               ' WARNING:  INPUT ICLD IS BEING RESET FROM',ICLD,  
     +                                   ' TO 0 SINCE IHAZE EQUALS 0.'  
          ICLD=0                                                        
      ELSEIF(IHAZE.LT.0)THEN                                            
C                                                                       
C         FOR INTERNAL USE, SET IHAZE TO ZERO (CLOUDS WILL BE           
C         INCLUDED IF ICLD IS BETWEEN 1 AND 10, INCLUSIVE).             
          IHAZE=0                                                       
      ENDIF                                                             
C                                                                       
C     CHECK GROUND ALTITUDE.                                            
Calley      IF(GNDALT.NE.0.)WRITE(IPR,'(A,F10.5)')'0   GNDALT =',GNDALT 
      IF (GNDALT.NE.0. .AND. IPR.GT.0) WRITE(IPR,'(A,F10.5)')           
     +                                            '0   GNDALT =',GNDALT 
      IF(GNDALT.GE.6.)THEN                                              
Calley          WRITE(IPR,'(A,F10.5)')                                  
          IF (IPR .GT. 0) WRITE(IPR,'(A,F10.5)')                        
     1      '0   GNDALT > 6 KM RESET TO 0 KM; GNDALT WAS',GNDALT        
          GNDALT=0.                                                     
      ENDIF                                                             
      IF(VIS.LE.0. .AND. IHAZE.GT.0)VIS=VSB(IHAZE)                      
      RHH=0.                                                            
      IF(MODEL.GE.1 .AND. MODEL.LE.6)THEN                               
          ML=NL                                                         
          IF((MODEL.EQ.3 .OR. MODEL.EQ.5) .AND. ISEASN.EQ.0)ISEASN=2    
          IF(IVSA.EQ.1 .AND. IHAZE.EQ.3)                                
     1      CALL MARINE(VIS,MODEL,WSS,WHH,ICSTL,EXTC,ABSC,1)            
          ICH(1)=IHAZE                                                  
          ICH(2)=6                                                      
          ICH(3)=9+IVULCN                                               
      ENDIF                                                             
      ICH(4)=18                                                         
      IF(ICH(1).LE.0)ICH(1)=1                                           
      IF(ICH(3).LE.9)ICH(3)=10                                          
      IF(ICLD.EQ.11)THEN                                                
          ICH(4)=ICH(3)                                                 
          ICH(3)=ICH(2)                                                 
          ICH(2)=ICLD                                                   
      ENDIF                                                             
Calley      IF(RAINRT.NE.0.)WRITE(IPR,'(A,F9.3,A)')                     
      IF(RAINRT.NE.0.0 .AND. IPR.GT.0) WRITE(IPR,'(A,F9.3,A)')          
     1  '0   RAIN MODEL CALLED, RAIN RATE = ',RAINRT,' MM/HR'           
      CTHIK=-99.                                                        
      CALT=-99.                                                         
      CEXT=-99.                                                         
      ISEED=-99                                                         
      NCRALT=-99                                                        
      NCRSPC=-99                                                        
      CWAVLN=-99.                                                       
      CCOLWD=-99.                                                       
      CCOLIP=-99.                                                       
      CHUMID=-99.                                                       
      ASYMWD=-99.                                                       
      ASYMIP=-99.                                                       
      IF(ICLD.GE.18)THEN                                                
C                                                                       
C         CARD 2A MODEL CIRRUS                                          
Calley          READ(IRD,'(3F8.3,I4)')CTHIK,CALT,CEXT,ISEED             
          CTHIK = CTHIKX                                                
          CALT = CALTX                                                  
          CEXT = CEXTX                                                  
          ISEED = ISEEDX                                                
          IF(CTHIK.LT.0.)CTHIK=0.                                       
          IF(CALT.LT.0.)CALT=0.                                         
          IF(CEXT.LT.0.)CEXT=0.                                         
Calley          WRITE(IPR,'(A,3F8.3,I4)')                               
          IF (IPR .GT. 0) WRITE(IPR,'(A,3F8.3,I4)')                     
     1      '0 CARD 2A *****',CTHIK,CALT,CEXT,ISEED                     
      ELSEIF(ICLD.GE.1 .AND. ICLD.LE.10)THEN                            
C                                                                       
C         CARD 2A MODEL CLOUDS                                          
Calley          READ(IRD,'(3F8.3,2I4,6F8.3)')CTHIK,CALT,CEXT,NCRALT,    
Calley     1      NCRSPC,CWAVLN,CCOLWD,CCOLIP,CHUMID,ASYMWD,ASYMIP      
          CTHIK = CTHIKX                                                
          CALT = CALTX                                                  
          CEXT = CEXTX                                                  
          NCRALT = NCRALTX                                              
          NCRSPC = NCRSPCX                                              
          CWAVLN = CWAVLNX                                              
          CCOLWD = CCOLWDX                                              
          CCOLIP = CCOLIPX                                              
          CHUMID = CHUMIDX                                              
          ASYMWD = ASYMWDX                                              
          ASYMIP = ASYMIPX                                              
Calley    WRITE(IPR,'(A,3F8.3,2I4,6F8.3)')'0 CARD 2A *****',CTHIK,CALT, 
Calley    1 CEXT,NCRALT,NCRSPC,CWAVLN,CCOLWD,CCOLIP,CHUMID,ASYMWD,ASYMIP
          IF (IPR .GT. 0) WRITE(IPR,'(A,3F8.3,2I4,6F8.3)')              
     +                 '0 CARD 2A *****',CTHIK,CALT,CEXT,NCRALT,NCRSPC, 
     +                 CWAVLN,CCOLWD,CCOLIP,CHUMID,ASYMWD,ASYMIP        
      ENDIF                                                             
C                                                                       
C     CARD 2B VERTICAL STRUCTURE ALGORITHM                              
      ZCVSA=-99.                                                        
      ZTVSA=-99.                                                        
      ZINVSA=-99.                                                       
      IF(IVSA.EQ.1)THEN                                                 
Calley          READ(IRD,'(3F10.5)')ZCVSA,ZTVSA,ZINVSA                  
          ZCVSA = ZCVSAX                                                
          ZTVSA = ZTVSAX                                                
          ZINVSA = ZINVSAX                                              
Calley      WRITE(IPR,'(A,3F10.5)')'0 CARD 2B *****',ZCVSA,ZTVSA,ZINVSA 
          IF (IPR .GT. 0) WRITE(IPR,'(A,3F10.5)') '0 CARD 2B *****',    
     +                                               ZCVSA,ZTVSA,ZINVSA 
          CALL VSA(IHAZE,VIS,ZCVSA,ZTVSA,ZINVSA,ZVSA,RHVSA,AHVSA,IHVSA) 
      ENDIF                                                             
      MDLSAV=MODEL                                                      
      IF(MODEL.EQ.0)MDLSAV=8                                            
      DO 70 I=1,5                                                       
          HMODEL(I,7)=HMODEL(I,MDLSAV)                                  
   70 CONTINUE                                                          
      IF(IM.EQ.1)THEN                                                   
          IF(MODEL.EQ.7 .OR. MODEL.EQ.0)THEN                            
C                                                                       
C             CARD 2C:  USER SUPPLIED ATMOSPHERIC PROFILE               
Calley           READ(IRD,'(3I5,18A4)')ML,IRD1,IRD2,(HMODEL(I,7),I=1,5) 
              ML = MLX                                                  
              IRD1 = IRD1X                                              
              IRD2 = IRD2X                                              
              DO I=1,5                                                  
                  HMODEL(I,7) = TITLEX(I)                               
              END DO                                                    
Calley              WRITE(IPR,'(A,3I5,18A4)')                           
              IF (IPR .GT. 0) WRITE(IPR,'(A,3I5,18A4)')                 
     1          '0 CARD 2C *****',ML,IRD1,IRD2,(HMODEL(I,7),I=1,5)      
Calley              IF(IVSA.EQ.1)CALL RDNSM                             
              IF (IVSA.EQ.1) THEN                                       
                  IF (IPR .GT. 0) WRITE (IPR,*)                         
     +      'VSA and user-specified model combination is not permitted' 
                  RETURN                                                
              END IF                                                    
          ENDIF                                                         
      ENDIF                                                             
      IF(ICLD.GE.1 .AND. ICLD.LE.10)THEN                                
C                                                                       
C         CLOUD/RAIN MODELS 1-10 ARE NOW SET UP IN ROUTINE CRDRIV, NOT  
C         ROUTINE AERNSM; TEMPORARILY SET ICLD AND RAINRT TO ZERO.      
          ICLDSV=ICLD                                                   
          RAINSV=RAINRT                                                 
          ICLD=0                                                        
          RAINRT=0.                                                     
Calley          CALL AERNSM(JPRT,GNDALT,ICH)                            
          CALL AERNSM(JPRT,GNDALT,ICH,ZMDLIN,PIN,TIN,WMOLIN,XMOLIN,     
     +                JCHARIN,JCHARXIN,AHAZEX,EQLWCZX,RRATZX,IHA1X,     
     +                ICLD1X,IVUL1X,ISEA1X,ICHR1X)                      
          ICLD=ICLDSV                                                   
          RAINRT=RAINSV                                                 
Calley          CALL CRDRIV                                             
          CALL CRDRIV(ZCLDX,CLDX,CLDICEX,RRX,WAVLENX,EXTCX,ABSCX,ASYMX) 
      ELSE                                                              
Calley          CALL AERNSM(JPRT,GNDALT,ICH)                            
          CALL AERNSM(JPRT,GNDALT,ICH,ZMDLIN,PIN,TIN,WMOLIN,XMOLIN,     
     +                JCHARIN,JCHARXIN,AHAZEX,EQLWCZX,RRATZX,IHA1X,     
     +                ICLD1X,IVUL1X,ISEA1X,ICHR1X)                      
      ENDIF                                                             
C                                                                       
C     CHECK GROUND ALTITUDE.                                            
      IF(GNDALT.LT.ZM(1))THEN                                           
C                                                                       
C         RAISE GROUND ALTITUDE TO THE BOTTOM OF ATMOSPHERE.            
Calley          WRITE(IPR,'(2A,F8.4,A,/10X,A,F8.4,A)')' WARNING: ',     
          IF (IPR .GT. 0) WRITE(IPR,'(2A,F8.4,A,/10X,A,F8.4,A)')        
     +      ' WARNING: ',                                               
     1      ' THE INPUT GROUND ALTITUDE (',GNDALT,' KM) IS BEING',      
     2      ' RAISED TO THE BOTTOM OF THE ATMOSPHERE,',ZM(1),' KM.'     
          GNDALT=ZM(1)                                                  
      ENDIF                                                             
      IF(ICLD.GE.20)THEN                                                
C                                                                       
C         SET UP CIRRUS MODEL                                           
          CALL CIRRUS(CTHIK,CALT,ISEED,CPROB,CEXT)                      
Calley          WRITE(IPR,'(15X,A)')                                    
          IF (IPR .GT. 0) WRITE(IPR,'(15X,A)')                          
     1      'CIRRUS ATTENUATION INCLUDED (N O A A CIRRUS)'              
          IF(ISEED.EQ.0)THEN                                            
Calley              WRITE(IPR,'((15X,2A,F10.5,A))')' CIRRUS THICKNESS', 
              IF (IPR .GT. 0) WRITE(IPR,'((15X,2A,F10.5,A))')           
     +          ' CIRRUS THICKNESS',                                    
     1          ' DEFAULTED TO MEAN VALUE OF',CTHIK,'KM','CIRRUS',      
     2          ' BASE ALTITUDE DEFAULTED TO MEAN VALUE OF',CALT,'KM'   
          ELSE                                                          
              IF(CTHIK.NE.0.)THEN                                       
Calley                WRITE(IPR,'(15X,2A,F10.5,A)')' CIRRUS THICKNESS', 
                  IF (IPR .GT. 0) WRITE(IPR,'(15X,2A,F10.5,A)')         
     +              ' CIRRUS THICKNESS',                                
     1              ' USER DETERMINED TO BE',CTHIK,'KM'                 
              ELSE                                                      
Calley               WRITE(IPR,'(15X,2A,F10.5,A)')'CIRRUS ATTENUATION', 
                  IF (IPR .GT. 0) WRITE(IPR,'(15X,2A,F10.5,A)')         
     +              'CIRRUS ATTENUATION',                               
     1              ' STATISTICALLY DETERMINED TO BE',CTHIK,'KM'        
              ENDIF                                                     
              IF(CALT.NE.0)THEN                                         
Calley             WRITE(IPR,'(15X,2A,F10.5,A)')'CIRRUS BASE ALTITUDE', 
                  IF (IPR .GT. 0) WRITE(IPR,'(15X,2A,F10.5,A)')         
     +              'CIRRUS BASE ALTITUDE',                             
     1              ' USER DETERMINED TO BE',CALT,'KM'                  
              ELSE                                                      
Calley             WRITE(IPR,'(15X,2A,F10.5,A)')'CIRRUS BASE ALTITUDE', 
                  IF (IPR .GT. 0) WRITE(IPR,'(15X,2A,F10.5,A)')         
     +              'CIRRUS BASE ALTITUDE',                             
     1              ' STATISTICALLY DETERMINED TO BE',CALT,'KM'         
              ENDIF                                                     
          ENDIF                                                         
Calley          WRITE(IPR,'(15X,A,F7.1,A)')                             
          IF (IPR .GT. 0) WRITE(IPR,'(15X,A,F7.1,A)')                   
     1      'PROBABILITY OF CLOUD OCCURRING IS',CPROB,' PERCENT'        
      ENDIF                                                             
C                                                                       
C*****CARD 2E:  USER-SUPPLIED AEROSOL EXTINCTION,                       
C               ABSORPTION, AND ASYMMETRY                               
Calley      IF(IHAZE.EQ.7 .OR. ICLD.EQ.11)CALL RDEXA                    
      IF(IHAZE.EQ.7 .OR. ICLD.EQ.11) CALL RDEXA(IREGX,AWCCONX,TITLE2DX, 
     +                                          VXX,EXTCX,ABSCX,ASYMX)  
   80 CONTINUE                                                          
      IPARM =-99                                                        
      IPH   =-99                                                        
      IDAY  =-99                                                        
      ISOURC=-99                                                        
      PARM1 =-99.                                                       
      PARM2 =-99.                                                       
      PARM3 =-99.                                                       
      PARM4 =-99.                                                       
      TIME  =-99.                                                       
      PSIPO =-99.                                                       
      ANGLEM=-99.                                                       
      G     =-99.                                                       
C                                                                       
C*****CARD 3 GEOMETRY PARAMETERS                                        
      IF(IEMSCT.LT.3)THEN                                               
Calley          READ(IRD,'(6F10.5,I5,5X,F10.5)')                        
Calley     1      H1,H2,ANGLE,RANGE,BETA,RO,LENN,PHI                    
          H1 = H1X                                                      
          H2 = H2X                                                      
          ANGLE = ANGLEX                                                
          RANGE = RANGEX                                                
          BETA = BETAX                                                  
          RO = ROX                                                      
          LENN = LENX                                                   
          PHI = PHIX                                                    
Calley          WRITE(IPR,'(A,6F10.5,I5,5X,F10.5)')                     
          IF (IPR .GT. 0) WRITE(IPR,'(A,6F10.5,I5,5X,F10.5)')           
     1      '0 CARD 3  *****',H1,H2,ANGLE,RANGE,BETA,RO,LENN,PHI        
      ELSE                                                              
C                                                                       
C         CARD 3 FOR DIRECTLY TRANSMITTED SOLAR IRRADIANCE (IEMSCT=3)   
Calley          READ(IRD,'(2(3F10.5,I5,F15.5,I5))')                     
Calley     1      H1,H2,ANGLE,IDAY,RO,ISOURC,ANGLEM                     
          H1 = H1X                                                      
          H2 = H2X                                                      
          ANGLE = ANGLEX                                                
          IDAY = IDAYX                                                  
          RO = ROX                                                      
          ISOURC = ISOURCX                                              
          ANGLEM = ANGLEMX                                              
Calley          WRITE(IPR,'(A,2(3F10.5,I5,F15.5,I5))')                  
          IF (IPR .GT. 0) WRITE(IPR,'(A,2(3F10.5,I5,F15.5,I5))')        
     1      '0 CARD 3   *****',H1,H2,ANGLE,IDAY,RO,ISOURC,ANGLEM        
          ITYPE=3                                                       
          RANGE=0.                                                      
          BETA=0.                                                       
          LENN=0                                                        
          PHI=0.                                                        
      ENDIF                                                             
C                                                                       
C     REE IS THE RADIUS OF THE EARTH USED BY MODTRAN                    
      REE=6371.23                                                       
      IF(MODEL.EQ.0)THEN                                                
          RO=REE                                                        
      ELSEIF(RO.GT.0.)THEN                                              
          REE=RO                                                        
      ELSEIF(MODEL.EQ.1)THEN                                            
          REE=6378.39                                                   
      ELSEIF(MODEL.EQ.4)THEN                                            
          REE=6356.91                                                   
      ELSEIF(MODEL.EQ.5)THEN                                            
          REE=6356.91                                                   
      ENDIF                                                             
      IF(IEMSCT.EQ.2)THEN                                               
C                                                                       
C         CARD 3A1                                                      
Calley          READ(IRD,'(4I5)')IPARM,IPH,IDAY,ISOURC                  
          IPARM = IPARMX                                                
          IPH = IPHX                                                    
          IDAY = IDAYX                                                  
          ISOURC = ISOURCX                                              
Calley      WRITE(IPR,'(A,4I5)')'0 CARD 3A1*****',IPARM,IPH,IDAY,ISOURC 
          IF (IPR .GT. 0) WRITE(IPR,'(A,4I5)') '0 CARD 3A1*****',       
     +                                         IPARM,IPH,IDAY,ISOURC    
C                                                                       
C         CARD 3A2                                                      
Calley          READ(IRD,'(8F10.5)')                                    
Calley     1      PARM1,PARM2,PARM3,PARM4,TIME,PSIPO,ANGLEM,G           
          PARM1 = PARM1X                                                
          PARM2 = PARM2X                                                
          PARM3 = PARM3X                                                
          PARM4 = PARM4X                                                
          TIME = TIMEX                                                  
          PSIPO = PSIPOX                                                
          ANGLEM = ANGLEMX                                              
          G = GX                                                        
Calley          WRITE(IPR,'(A,8F10.5)')'0 CARD 3A2*****',               
          IF (IPR .GT. 0) WRITE(IPR,'(A,8F10.5)')'0 CARD 3A2*****',     
     1      PARM1,PARM2,PARM3,PARM4,TIME,PSIPO,ANGLEM,G                 
          REWIND(ISCRCH)                                                
          IF(LFIRST .AND. IMULT.EQ.1)THEN                               
C                                                                       
C             SAVE SOLAR PARAMETERS FOR COMPARING LATER.                
              LFIRST=.FALSE.                                            
              CALL SVSOLA(IPARM,IPH,IDAY,ISOURC,PARM1,PARM2,PARM3,      
     1          PARM4,TIME,G,ANGLEM,IPRMSV,IPHSV,IDAYSV,ISRCSV,         
     2          PRM1SV,PRM2SV,PRM3SV,PRM4SV,TIMESV,GSV,ANGMSV)          
              LSAME=.FALSE.                                             
C                                                                       
C         PRESENTLY, FLUXES ARE NOT SAVED IF THE CORRELATED-K METHOD    
C         IS USED SINCE THE SCRATCH FILE CAN GROW TOO LARGE.            
          ELSEIF(IMULT.EQ.1 .AND. IRPT.EQ.3 .AND.                       
     1      .NOT.DIS .AND. KNTRVL.EQ.1)THEN                             
C                                                                       
C             NOW COMPARE SOLAR PARAMETERS; LSAME IS TRUE IF THEY MATCH.
              CALL COMPAR(IPARM,IPH,IDAY,ISOURC,PARM1,PARM2,PARM3,      
     1          PARM4,TIME,G,ANGLEM,IPRMSV,IPHSV,IDAYSV,ISRCSV,         
     2          PRM1SV,PRM2SV,PRM3SV,PRM4SV,TIMESV,GSV,ANGMSV,LSAME)    
              CALL SVSOLA(IPARM,IPH,IDAY,ISOURC,PARM1,PARM2,PARM3,      
     1          PARM4,TIME,G,ANGLEM,IPRMSV,IPHSV,IDAYSV,ISRCSV,         
     2          PRM1SV,PRM2SV,PRM3SV,PRM4SV,TIMESV,GSV,ANGMSV)          
          ELSE                                                          
C                                                                       
C             PREPARE FOR ADDITIONAL MULTIPLE SOLAR SCATTERING RUNS.    
              LFIRST=.TRUE.                                             
              LSAME=.FALSE.                                             
          ENDIF                                                         
          IF(IPH.EQ.0)THEN                                              
              IF(G.GT..9999)THEN                                        
                  G=.9999                                               
              ELSEIF(G.LT.-.9999)THEN                                   
                  G=-.9999                                              
              ENDIF                                                     
          ELSEIF(IPH.EQ.1)THEN                                          
C                                                                       
C             CARD 3B1 USER DEFINED PHASE FUNCTION                      
Calley              READ(IRD,'(I5)')NANGLS                              
              NANGLS = NANGLSX                                          
Calley              WRITE(IPR,'(A,I5)')' CARD 3B1*****',NANGLS          
              IF (IPR .GT. 0)WRITE(IPR,'(A,I5)')' CARD 3B1*****',NANGLS 
C                                                                       
C             CARD 3B2                                                  
Calley              READ(IRD,'((5E10.3))')                              
Calley     1          (ANGF(I),F(1,I),F(2,I),F(3,I),F(4,I),I=1,NANGLS)  
              DO I=1,NANGLS                                             
                  ANGF(I) = ANGFX(I)                                    
                  DO II=1,4                                             
                      F(II,I) = FX(II,I)                                
                  END DO                                                
              END DO                                                    
Calley          WRITE(IPR,'(A,5E10.3,/(15X,5E10.3))')'0 CARD 3B2*****', 
              IF (IPR .GT. 0) WRITE(IPR,'(A,5E10.3,/(15X,5E10.3))')     
     +          '0 CARD 3B2*****',                                      
     1          (ANGF(I),F(1,I),F(2,I),F(3,I),F(4,I),I=1,NANGLS)        
          ENDIF                                                         
      ENDIF                                                             
   90 CONTINUE                                                          
      IF(IRPT.NE.3)THEN                                                 
C                                                                       
C         CARD 4 WAVENUMBER                                             
Calley     READ(IRD,'(4I10,2A1,A8)')IV1,IV2,IDV,IFWHM,YFLAG,XFLAG,DLIMIT
          IV1 = IV1X                                                    
          IV2 = IV2X                                                    
          IDV = IDVX                                                    
          IFWHM = IRESX                                                 
          YFLAG = YFLAGX                                                
          XFLAG = XFLAGX                                                
          DLIMIT = DLIMITX                                              
C                                                                       
C         CHECK plot.dat FILE FLAGS                                     
          IF(YFLAG.EQ.'R' .OR. YFLAG.EQ.'r')THEN                        
C                                                                       
C             WRITE SPECTRAL RADIANCES (TRANSMITTANCES IF IEMSCT=0      
C             OR TRANSMITTED SOLAR IRRADIANCES IF IEMSCT=3)             
              YFLAG='R'                                                 
              IF(IEMSCT.EQ.0)YFLAG='T'                                  
          ELSEIF(YFLAG.EQ.'T' .OR. YFLAG.EQ.'t')THEN                    
C                                                                       
C             WRITE TRANSMITTANCES                                      
              YFLAG='T'                                                 
          ELSE                                                          
C                                                                       
C             DO NOT WRITE TO THE plot.dat FILE.                        
              YFLAG='N'                                                 
          ENDIF                                                         
          IF(YFLAG.NE.'N')THEN                                          
              IF(XFLAG.EQ.'N' .OR. XFLAG.EQ.'n')THEN                    
                  XFLAG='N'                                             
              ELSEIF(XFLAG.EQ.'M' .OR. XFLAG.EQ.'m')THEN                
                  XFLAG='M'                                             
              ELSE                                                      
                  XFLAG='W'                                             
              ENDIF                                                     
              INQUIRE(IPLOT,OPENED=LOPEN)                               
              IF(.NOT.LOPEN)THEN                                        
C                                                                       
C                 OPEN plot.dat FILE                                    
Calley                  OPEN(IPLOT,FILE='plot.dat',STATUS='UNKNOWN')    
Calley                  CLOSE(IPLOT,STATUS='DELETE')                    
Calley                  OPEN(IPLOT,FILE='plot.dat',STATUS='NEW')        
                  FILEX = 'plot.' // PLTABFILE                          
                  OPEN (IPLOT,FILE=FILEX,STATUS='UNKNOWN')              
              ENDIF                                                     
          ENDIF                                                         
          IF(DIS .AND. IV2.LE.20)DIS=.FALSE.                            
          IF(DIS .AND. IV1.LE.10)IV1=10                                 
Calley         WRITE(IPR,'(A,4I10)')'0 CARD 4  *****',IV1,IV2,IDV,IFWHM 
          IF (IPR .GT. 0) WRITE(IPR,'(A,4I10)') '0 CARD 4  *****',      
     +                                          IV1,IV2,IDV,IFWHM       
          SALB=SALBSV                                                   
Calley          IF(SALB.LT.0)CALL RHOEPS(-1,LSALB,SALBV,DUMN)           
          IF(IDV.LE.0)THEN                                              
Calley              WRITE(IPR,'(/2A,I10,A)')' WARNING:  IDV IS BEING',  
              IF (IPR .GT. 0) WRITE(IPR,'(/2A,I10,A)')                  
     +          ' WARNING:  IDV IS BEING',                              
     1          ' RESET FROM',IDV,' CM-1 TO 1 CM-1.'                    
              IDV=1                                                     
          ENDIF                                                         
          IF(IFWHM.LE.0)THEN                                            
Calley            WRITE(IPR,'(/2A,I10,A)')' WARNING:  IFWHM IS BEING ', 
              IF (IPR .GT. 0) WRITE(IPR,'(/2A,I10,A)')                  
     +          ' WARNING:  IFWHM IS BEING ',                           
     1          ' RESET FROM',IFWHM,' CM-1 TO 2 CM-1'                   
              IFWHM=2                                                   
          ENDIF                                                         
          IF(IHAZE.EQ.3 .AND. IV1.LT.250)THEN                           
              IHAZE=4                                                   
Calley        WRITE(IPR,'(//2A,/12X,2A)')' **WARNING** NAVY HAZE MODEL',
              IF (IPR .GT. 0) WRITE(IPR,'(//2A,/12X,2A)')               
     +          ' **WARNING** NAVY HAZE MODEL',                         
     1          ' CAN NOT BE USED BELOW 250 CM-1.',' PROGRAM WILL',     
     2          ' SWITCH TO LOWTRAN 5 MARITIME HAZE MODEL (IHAZE=4).'   
          ENDIF                                                         
      ENDIF                                                             
      IF(IRPT.NE.4)THEN                                                 
Calley          WRITE(IPR,'(7A)')                                       
          IF (IPR .GT. 0) WRITE(IPR,'(7A)')                             
     1      '0 PROGRAM WILL COMPUTE ',(HTRRAD(I,IEMSCT+1),I=1,6)        
Calley          IF(ISOURC.EQ.1)WRITE(IPR,'(A)')'   LUNAR SOURCE ONLY'   
          IF(ISOURC.EQ.1 .AND. IPR.GT.0) WRITE(IPR,'(A)')               
     +                                        '   LUNAR SOURCE ONLY'    
Calley          IF(IMULT.NE.0)WRITE(IPR,'(A)')                          
          IF(IMULT.NE.0 .AND. IPR.GT.0) WRITE(IPR,'(A)')                
     1      '0 CALCULATIONS WILL BE DONE USING MULTIPLE SCATTERING'     
          IF(MODEL.GT.0)THEN                                            
              MM1=M1                                                    
              IF(MM1.EQ.0)MM1=MODEL                                     
              MM2=M2                                                    
              IF(MM2.EQ.0)MM2=MODEL                                     
              MM3=M3                                                    
              IF(MM3.EQ.0)MM3=MODEL                                     
Calley            WRITE(IPR,'(A,/(10X,A,I5,6A))')'0 ATMOSPHERIC MODEL', 
              IF (IPR .GT. 0) WRITE(IPR,'(A,/(10X,A,I5,6A))')           
     +          '0 ATMOSPHERIC MODEL',                                  
     1          'TEMPERATURE =',MM1,'     ',(HMODEL(I,MM1),I=1,5),      
     2          'WATER VAPOR =',MM2,'     ',(HMODEL(I,MM2),I=1,5),      
     3          'OZONE       =',MM3,'     ',(HMODEL(I,MM3),I=1,5)       
Calley              WRITE(IPR,'(22X,4(A,I6))')                          
              IF (IPR .GT. 0) WRITE(IPR,'(22X,4(A,I6))')                
     1          'M4 =',M4,' M5 =',M5,' M6 =',M6,' MDEF =' ,MDEF         
          ENDIF                                                         
          IF(IHAZE.GT.0 .AND. JPRT.NE.0)THEN                            
              IF(ISEASN.EQ.0)ISEASN=1                                   
              IF(IVULCN.LE.0)IVULCN=1                                   
              IHVUL=IVULCN+10                                           
              IF(IVULCN.EQ.6)IHVUL=11                                   
              IF(IVULCN.EQ.7)IHVUL=11                                   
              IF(IVULCN.EQ.8)IHVUL=13                                   
              IHMET=1                                                   
              IF(IVULCN.GT.1)IHMET=2                                    
Calley              WRITE(IPR,'(A,/10X,A,T35,A,T60,A,T85,A,             
              IF (IPR .GT. 0) WRITE(IPR,'(A,/10X,A,T35,A,T60,A,T85,A,   
     1          //10X,A,T35,5A,T60,F5.1,A,                              
     2          /(10X,A,T35,5A,T60,5A,T85,5A))')'0 AEROSOL MODEL',      
     3          'REGIME','AEROSOL TYPE','PROFILE','SEASON',             
     4          'BOUNDARY LAYER (0-2 KM)',(HHAZE(I,IHAZE),I=1,5),       
     5          VIS,' KM VIS AT SEA LEVEL',                             
     6          'TROPOSPHERE  (2-10KM)',(HHAZE(I,6),I=1,5),             
     7          (HHAZE(I,6),I=1,5),(HSEASN(I,ISEASN),I=1,5),            
     8          'STRATOSPHERE (10-30KM)',(HHAZE(I,IHVUL),I=1,5),        
     9          (HVULCN(I,IVULCN),I=1,5),(HSEASN(I,ISEASN),I=1,5),      
     &          'UPPER ATMOS (30-100KM)',(HHAZE(I,16),I=1,5),           
     1          (HMET(I,IHMET),I=1,5)                                   
          ENDIF                                                         
          IF(ITYPE.EQ.1)THEN                                            
Calley            WRITE(IPR,'(A,/(10X,A,F11.5,A))')'0 HORIZONTAL PATH', 
              IF (IPR .GT. 0) WRITE(IPR,'(A,/(10X,A,F11.5,A))')         
     +          '0 HORIZONTAL PATH',                                    
     1          'ALTITUDE =',H1,' KM','RANGE    =',RANGE,' KM'          
          ELSEIF(ITYPE.EQ.2)THEN                                        
Calley              WRITE(IPR,'(A,6(/10X,A,F11.5,A),/10X,A,I7)')        
              IF (IPR .GT. 0) WRITE(IPR,                                
     +          '(A,6(/10X,A,F11.5,A),/10X,A,I7)')                      
     1          '0 SLANT PATH, H1 TO H2','H1    =',H1   ,' KM',         
     2          'H2    =',H2   ,' KM'   ,'ANGLE =',ANGLE,' DEG',        
     3          'RANGE =',RANGE,' KM'   ,'BETA  =',BETA ,' DEG',        
     4          'PHI   =',PHI  ,' DEG'  ,'LENN  =',LENN                 
          ELSEIF(PHI.LE.0.)THEN                                         
Calley              WRITE(IPR,'(A,/(10X,A,F11.5,A))')                   
              IF (IPR .GT. 0) WRITE(IPR,'(A,/(10X,A,F11.5,A))')         
     1          '0 SLANT PATH TO SPACE','H1    =',H1,' KM',             
     2          'HMIN  =',H2,' KM','ANGLE =',ANGLE,' DEG'               
          ELSE                                                          
Calley              WRITE(IPR,'(A,/(10X,A,F11.5,A))')                   
              IF (IPR .GT. 0) WRITE(IPR,'(A,/(10X,A,F11.5,A))')         
     1          '0 SLANT PATH TO SPACE',                                
     2          'H2    =',H2,' KM','PHI   =',PHI,' DEG'                 
          ENDIF                                                         
          IF(IEMSCT.EQ.2)THEN                                           
C                                                                       
C             INTREPRET SOLAR SCATTERING PARAMETERS                     
Calley              WRITE(IPR,'(A)')                                    
              IF (IPR .GT. 0) WRITE(IPR,'(A)')                          
     1          '0 SINGLE SCATTERING CONTROL PARAMETERS SUMMARY'        
              IF(IPARM.EQ.2)THEN                                        
Calley                  WRITE(IPR,'(/(10X,A,T42,F10.4,A))')             
                  IF (IPR .GT. 0) WRITE(IPR,'(/(10X,A,T42,F10.4,A))')   
     1              'RELATIVE AZIMUTH AT H1 =',PARM1,                   
     2              ' DEG EAST OF NORTH',                               
     3              'SOLAR ZENITH AT H1 =',PARM2,' DEG'                 
              ELSEIF(IPARM.EQ.12)THEN                                   
Calley                  WRITE(IPR,'(/(10X,A,T42,F10.4,A))')             
                  IF (IPR .GT. 0) WRITE(IPR,'(/(10X,A,T42,F10.4,A))')   
     1              'RELATIVE AZIMUTH AT H2 =',PARM1,                   
     2              ' DEG EAST OF NORTH',                               
     3              'SOLAR ZENITH AT H2 =',PARM2,' DEG'                 
              ELSE                                                      
                  IF(IPARM.LT.2)THEN                                    
Calley                      WRITE(IPR,'(/(10X,A,T42,F10.4,A))')         
                      IF (IPR.GT.0) WRITE(IPR,'(/(10X,A,T42,F10.4,A))') 
     1                  'LATITUDE AT H1 =',PARM1,                       
     2                  ' DEG NORTH OF EQUATOR',                        
     3                  'LONGITUDE AT H1 =',PARM2,                      
     4                  ' DEG WEST OF GREENWICH'                        
                  ELSE                                                  
Calley                      WRITE(IPR,'(/(10X,A,T42,F10.4,A))')         
                      IF (IPR.GT.0) WRITE(IPR,'(/(10X,A,T42,F10.4,A))') 
     1                  'LATITUDE AT H2 =',PARM1,                       
     2                  ' DEG NORTH OF EQUATOR',                        
     3                  'LONGITUDE AT H2 =',PARM2,                      
     4                  ' DEG WEST OF GREENWICH'                        
                  ENDIF                                                 
                  IF(IPARM.EQ.1 .OR. IPARM.EQ.11)                       
     1              CALL SUBSOL(PARM3,PARM4,TIME,IDAY)                  
Calley                  WRITE(IPR,'(/(10X,A,T42,F10.4,A))')             
                  IF (IPR .GT. 0) WRITE(IPR,'(/(10X,A,T42,F10.4,A))')   
     5              'SUBSOLAR LATITUDE =',PARM3,                        
     6              ' DEG NORTH OF EQUATOR',                            
     7              'SUBSOLAR LONGITUDE =',PARM4,                       
     8              ' DEG WEST OF GREENWICH'                            
              ENDIF                                                     
              IF(IPARM.LE.2)THEN                                        
Calley                  WRITE(IPR,'((10X,A,T42,F10.4,A))')              
                  IF (IPR .GT. 0) WRITE(IPR,'((10X,A,T42,F10.4,A))')    
     1              'TIME (<0 UNDEF) =',TIME ,' GREENWICH TIME',        
     2              'PATH AZIMUTH (FROM H1 TO H2) =',PSIPO,             
     3              ' DEG EAST OF NORTH'                                
              ELSE                                                      
Calley                  WRITE(IPR,'((10X,A,T42,F10.4,A))')              
                  IF (IPR .GT. 0) WRITE(IPR,'((10X,A,T42,F10.4,A))')    
     1              'TIME (<0 UNDEF) =',TIME ,' GREENWICH TIME',        
     2              'PATH AZIMUTH (FROM H2 TO H1) =',PSIPO,             
     3              ' DEG EAST OF NORTH'                                
              ENDIF                                                     
Calley             WRITE(IPR,'(10X,A,T42,I10)')'DAY OF THE YEAR =',IDAY 
              IF (IPR .GT. 0) WRITE(IPR,'(10X,A,T42,I10)')              
     +                                         'DAY OF THE YEAR =',IDAY 
Calley              IF(ISOURC.EQ.0)WRITE(IPR,'(A)')                     
              IF(ISOURC.EQ.0 .AND. IPR.GT.0) WRITE(IPR,'(A)')           
     1          '0 EXTRATERRESTIAL SOURCE IS THE SUN'                   
Calley              IF(ISOURC.EQ.1)WRITE(IPR,'(2A,F10.3,A)')            
              IF(ISOURC.EQ.1 .AND. IPR.GT.0) WRITE(IPR,'(2A,F10.3,A)')  
     1          '0 EXTRATERRESTIAL SOURCE IS THE MOON,',                
     2          ' MOON PHASE ANGLE =',ANGLEM,' DEG'                     
Calley              IF(IPH.EQ.0)WRITE(IPR,'(A,F10.5)')                  
              IF(IPH.EQ.0 .AND. IPR.GT.0) WRITE(IPR,'(A,F10.5)')        
     1          '0 H-G PHASE FUNCTION ,G=',G                            
Calley              IF(IPH.EQ.1)WRITE(IPR,'(A)')                        
              IF(IPH.EQ.1 .AND. IPR.GT.0) WRITE(IPR,'(A)')              
     1          '0 USER SUPPLIED PHASE FUNCTION'                        
Calley              IF(IPH.EQ.2)WRITE (IPR,'(A)')                       
              IF(IPH.EQ.2 .AND. IPR.GT.0) WRITE (IPR,'(A)')             
     1          '0 PHASE FUNCTION FROM MIE DATA BASE'                   
          ENDIF                                                         
      ENDIF                                                             
      IF(IRPT.NE.3)THEN                                                 
          IF(MODTRN)THEN                                                
              IV1=IBNDWD*((IV1+IBNDWD/2)/IBNDWD)                        
              IV2=IBNDWD*((IV2+IBNDWD/2)/IBNDWD)                        
              IDV=IBNDWD+IBNDWD*((IDV-IBNDWD)/IBNDWD)                   
              IF(IV1.GT.MXFREQ .AND. IBNDWD.LT.5)THEN                   
                  IV1=5*((IV1+2)/5)                                     
                  IV2=5*((IV2+2)/5)                                     
                  IDV=5+5*((IDV-5)/5)                                   
Calley             WRITE(IPR,'(/2A,I6,A,/10X,2A)')' WARNING:  No band', 
                  IF (IPR .GT. 0) WRITE(IPR,'(/2A,I6,A,/10X,2A)')       
     +              ' WARNING:  No band',                               
     1              ' model parameters above',MXFREQ,' CM-1.',' The',   
     2              ' spectral step size has been increased to 5 CM-1.' 
              ENDIF                                                     
              IF(IFWHM.LT.IBNDWD)IFWHM=IBNDWD                           
              IF(IFWHM.GT.50*IBNDWD)IFWHM=50*IBNDWD                     
          ELSE                                                          
              IV1=5*((IV1+2)/5)                                         
              IV2=5*((IV2+2)/5)                                         
              IDV=5+5*((IDV-5)/5)                                       
              IBNDWD=IDV                                                
              IFWHM=IBNDWD                                              
          ENDIF                                                         
          IF(IV2.LT.IV1+IDV)THEN                                        
Calley              WRITE(IPR,'(/A)')                                   
              IF (IPR .GT. 0) WRITE(IPR,'(/A)')                         
     1          ' IV2 WAS LESS THAN IV1 + IDV AND HAS BEEN RESET.'      
              IV2=IV1+IDV                                               
          ENDIF                                                         
          ALAM1= 99999.98                                               
          IF(IV1.NE.0)ALAM1=10000./IV1                                  
          ALAM2=10000./IV2                                              
Calley          WRITE(IPR,'(A,2(/13X,A,I10,A,F10.2,A),/(11X,A,I10,A))') 
          IF (IPR .GT. 0) WRITE(IPR,                                    
     +      '(A,2(/13X,A,I10,A,F10.2,A),/(11X,A,I10,A))')               
     1      ' FREQUENCY RANGE','IV1 =',IV1,' CM-1  (',ALAM1,            
     2      ' MICRONS)','IV2 =',IV2,' CM-1  (',ALAM2,' MICRONS)',       
     3      '  IDV =',IDV,' CM-1','IFWHM =',IFWHM,' CM-1'               
          IF(IRPT.NE.4)THEN                                             
C                                                                       
C             LOAD ATMOSPHERIC PROFILE INTO /MODEL/                     
              CALL XPROFL                                               
              CALL STDMDL(ICH(1))                                       
          ENDIF                                                         
      ENDIF                                                             
C                                                                       
C     INITIALIZE COOLING RATE FITTING COEFFICIENTS                      
CORK  IF(IMULT.NE.0)CALL COOL0(ICR,IRPT)                                
      TBOUND=TBNDSV                                                     
      DO 110 I=1,LAYTHR                                                 
          DO 100 J=1,KMAX                                               
              WPATH(I,J)=0.                                             
              WPATHS(I,J)=0.                                            
  100 CONTINUE                                                          
  110 CONTINUE                                                          
C                                                                       
C     IF TARGET-BASED (H2) ZENITH ANGLE (PHI) HAS BEEN INPUT,           
C     CONVERT TO OBSERVER-BASED (H1) LINE-OF-SIGHT PARAMETERS.          
      ISSGEO=0                                                          
      IF(ITYPE.GT.1 .AND. PHI.GT.0.)THEN                                
          IF(H2.LT.GNDALT)THEN                                          
Calley        WRITE(IPR,'(2(A,F10.5),(A))')'  OBSERVER ALTITUDE (H2 =', 
              IF (IPR .GT. 0) WRITE(IPR,'(2(A,F10.5),(A))')             
     +          '  OBSERVER ALTITUDE (H2 =',                            
     1          H2,' KM) BELOW GROUND (GNDALT =',GNDALT,' KM).',        
     2          '    H2 WAS RESET TO GNDALT.'                           
              H2=GNDALT                                                 
          ENDIF                                                         
          CALL CNVPHI(IERROR,ITYPE,H1,H2,ANGLE,RANGE,BETA,LENN,PHI)     
          IF(IERROR.NE.0)GOTO140                                        
      ELSEIF(H1.LT.GNDALT)THEN                                          
Calley        WRITE(IPR,'(2(A,F10.5),(A))')'  OBSERVER ALTITUDE (H1 =', 
          IF (IPR .GT. 0) WRITE(IPR,'(2(A,F10.5),(A))')                 
     +      '  OBSERVER ALTITUDE (H1 =',                                
     1      H1,' KM) BELOW GROUND (GNDALT =',GNDALT,' KM).',            
     2      '    H1 WAS RESET TO GNDALT.'                               
          H1=GNDALT                                                     
      ENDIF                                                             
C                                                                       
C     SAVE LINE-OF-SIGHT PARAMETERS SO /CARD3/ CAN BE USED              
C     DURING MULTIPLE SCATTERING PATH CALCULATIONS.                     
      H1SAV=H1                                                          
      H2SAV=H2                                                          
      ANGSAV=ANGLE                                                      
      RNGSAV=RANGE                                                      
      BETASV=BETA                                                       
      ITYPSV=ITYPE                                                      
      LENNSV=LENN                                                       
C                                                                       
C     ADJUST GEOMETRY INPUTS FOR SOLAR/LUNAR CALCULATIONS.              
      IF(IEMSCT.EQ.2)THEN                                               
          CALL NEWSRC(H1SAV,H2SAV,ANGSAV,RNGSAV,BETASV,LENNSV,          
     1      IPARM,PARM1,PARM2,PARM3,PARM4,PSIPO,BETAH2,IERROR)          
          IF(IERROR.NE.0)GOTO140                                        
      ENDIF                                                             
      IF(IMULT.NE.0)THEN                                                
          H1=GNDALT                                                     
          H2=ZM(ML)                                                     
          ITYPE=2                                                       
          ANGLE=0.                                                      
          BETA=0.                                                       
          RANGE=0.                                                      
          MSOFF=LAYTWO                                                  
          CALL GEO(IERROR,BENDNG,MSOFF,ICH(1))                          
          IMSMX=IKMAX                                                   
          IF(IEMSCT.EQ.2)THEN                                           
              IF(IMULT.EQ.1 .OR. BETAH2.LE.0.)THEN                      
C                                                                       
C                 SOLAR CONTRIBUTIONS TO MULTIPLE SCATTERING AT H1      
                  CALL SSGEO(IERROR,IPH,PARM1,PARM2,PARM3,              
     1              PARM4,PSIPO,G,MSOFF,ICH(1),KNTRVL)                  
              ELSE                                                      
C                                                                       
C                 SOLAR CONTRIBUTIONS TO MULTIPLE SCATTERING AT H2      
                  CALL H2SRC(BETAH2,IPH,PARM1,PARM2,PARM3,              
     1              PARM4,PSIPO,G,MSOFF,ICH(1),KNTRVL)                  
              ENDIF                                                     
          ENDIF                                                         
      ENDIF                                                             
      H1=H1SAV                                                          
      H2=H2SAV                                                          
      ANGLE=ANGSAV                                                      
      RANGE=RNGSAV                                                      
      BETA=BETASV                                                       
      ITYPE=ITYPSV                                                      
      LENN=LENNSV                                                       
C                                                                       
C     TRACE PATH THROUGH THE ATMOSPHERE AND CALCULATE ABSORBER AMOUNTS  
      ISSGEO=0                                                          
      MSOFF=0                                                           
      CALL GEO(IERROR,BENDNG,MSOFF,ICH(1))                              
      CALL AERTMP                                                       
C                                                                       
C     SAVE ZENITH ANGLE DATA.                                           
      UANG=DBLE(ANGLE)                                                  
      IF(IMULT.NE.0)THEN                                                
          DO 120 IK=1,IKMAX                                             
              QTHETS(IK)=QTHETA(IK)                                     
  120     CONTINUE                                                      
      ENDIF                                                             
      IF(IERROR.GT.0)GOTO140                                            
      IF(IEMSCT.EQ.3 .AND. IERROR.EQ. -5)THEN                           
Calley          WRITE(IPR,'(/2A)')' DIRECT PATH TO SUN INTERSECTS',     
          IF (IPR .GT. 0) WRITE(IPR,'(/2A)')                            
     +      ' DIRECT PATH TO SUN INTERSECTS',                           
     1      ' THE EARTH: SKIP TO NEXT CASE'                             
          GOTO140                                                       
      ENDIF                                                             
C                                                                       
C     THE SECOND CALL TO SSGEO IS TO GET THE CORRECT ANGLES             
C     FOR PHASE FUNCTIONS AND TO SAVE SOLAR PATH INFORMATION.           
      IF(IEMSCT.EQ.2)CALL SSGEO(IERROR,IPH,PARM1,                       
     1  PARM2,PARM3,PARM4,PSIPO,G,MSOFF,ICH(1),KNTRVL)                  
      IF(IERROR.GT.0)GOTO140                                            
      IF(IMULT.NE.0)THEN                                                
          DO 130 IK=1,IKMAX                                             
              QTHETA(IK)=QTHETS(IK)                                     
  130     CONTINUE                                                      
      ENDIF                                                             
C                                                                       
C     LOAD AEROSOL EXTINCTION, ABSORPTION, AND ASYMMETRY COEFFICIENTS   
      CALL EXABIN(ICH)                                                  
C                                                                       
C     WRITE HEADER DATA TO TAPE 7                                       
Calley      WRITE(IPU ,'(A1,I4,12I5,F8.3,F7.2)')CODE,MODEL,ITYPE,IEMSCT,
      IF (IPU .GT. 0) WRITE(IPU ,'(A1,I4,12I5,F8.3,F7.2)') CODE,MODEL,  
     +  ITYPE,IEMSCT,                                                   
     1  IMULT,M1,M2,M3,M4,M5,M6,MDEF,IM,NOPRNT,TBOUND,SALB              
Calley      WRITE(IPR1,'(A1,I4,12I5,F8.3,F7.2)')CODE,MODEL,ITYPE,IEMSCT,
      IF (IPR1 .GT. 0) WRITE(IPR1,'(A1,I4,12I5,F8.3,F7.2)') CODE,       
     +  MODEL,ITYPE,IEMSCT,                                             
     1  IMULT,M1,M2,M3,M4,M5,M6,MDEF,IM,NOPRNT,TBOUND,SALB              
Calley      WRITE(IPU ,'(6I5,5F10.5)')                                  
      IF (IPU .GT. 0) WRITE(IPU ,'(6I5,5F10.5)')                        
     1  IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,VIS,WSS,WHH,RAINRT,GNDALT   
Calley      WRITE(IPR1,'(6I5,5F10.5)')                                  
      IF (IPR1 .GT. 0) WRITE(IPR1,'(6I5,5F10.5)')                       
     1  IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,VIS,WSS,WHH,RAINRT,GNDALT   
      IF(ICLD.LT.1 .OR. ICLD.GT.10)THEN                                 
Calley          WRITE(IPU ,'(3F8.3,I4)')CTHIK,CALT,CEXT,ISEED           
          IF (IPU .GT. 0) WRITE(IPU ,'(3F8.3,I4)')CTHIK,CALT,CEXT,ISEED 
Calley          WRITE(IPR1,'(3F8.3,I4)')CTHIK,CALT,CEXT,ISEED           
          IF (IPR1 .GT. 0)WRITE(IPR1,'(3F8.3,I4)')CTHIK,CALT,CEXT,ISEED 
      ELSE                                                              
Calley          WRITE(IPU ,'(3F8.3,2I4,6F8.3)')CTHIK,CALT,CEXT,         
          IF (IPU .GT. 0)WRITE(IPU,'(3F8.3,2I4,6F8.3)')CTHIK,CALT,CEXT, 
     1      NCRALT,NCRSPC,CWAVLN,CCOLWD,CCOLIP,CHUMID,ASYMWD,ASYMIP     
Calley          WRITE(IPR1,'(3F8.3,2I4,6F8.3)')CTHIK,CALT,CEXT,         
          IF (IPR1.GT.0)WRITE(IPR1,'(3F8.3,2I4,6F8.3)')CTHIK,CALT,CEXT, 
     1      NCRALT,NCRSPC,CWAVLN,CCOLWD,CCOLIP,CHUMID,ASYMWD,ASYMIP     
      ENDIF                                                             
Calley      WRITE(IPU ,'(3F10.5)')ZCVSA,ZTVSA,ZINVSA                    
      IF (IPU .GT. 0) WRITE(IPU ,'(3F10.5)')ZCVSA,ZTVSA,ZINVSA          
Calley      WRITE(IPR1,'(3F10.5)')ZCVSA,ZTVSA,ZINVSA                    
      IF (IPR1 .GT. 0) WRITE(IPR1,'(3F10.5)')ZCVSA,ZTVSA,ZINVSA         
Calley      WRITE(IPU ,'(I5,18A4)')ML,(HMODEL(I,7),I=1,5)               
      IF (IPU .GT. 0) WRITE(IPU ,'(I5,18A4)')ML,(HMODEL(I,7),I=1,5)     
Calley      WRITE(IPR1,'(I5,18A4)')ML,(HMODEL(I,7),I=1,5)               
      IF (IPR1 .GT. 0) WRITE(IPR1,'(I5,18A4)')ML,(HMODEL(I,7),I=1,5)    
      IF(MODEL.EQ.0)THEN                                                
          HMDLZ(8)=RANGE                                                
Calley          WRITE(IPU ,'(3F10.5,1P5E10.3)')(HMDLZ(I),I=1,8)         
          IF (IPU.GT.0) WRITE(IPU ,'(3F10.5,1P5E10.3)')(HMDLZ(I),I=1,8) 
Calley          WRITE(IPR1,'(3F10.5,1P5E10.3)')(HMDLZ(I),I=1,8)         
          IF (IPR1.GT.0)WRITE(IPR1,'(3F10.5,1P5E10.3)')(HMDLZ(I),I=1,8) 
      ELSE                                                              
Calley          WRITE(IPU ,'(6F10.5,I5)')H1,H2,ANGLE,RANGE,BETA,RO,LENN 
          IF (IPU .GT. 0) WRITE(IPU ,'(6F10.5,I5)') H1,H2,ANGLE,RANGE,  
     +                                              BETA,RO,LENN        
Calley          WRITE(IPR1,'(6F10.5,I5)')H1,H2,ANGLE,RANGE,BETA,RO,LENN 
          IF (IPR1 .GT. 0) WRITE(IPR1,'(6F10.5,I5)') H1,H2,ANGLE,RANGE, 
     +                                               BETA,RO,LENN       
      ENDIF                                                             
Calley      WRITE(IPU ,'(4I5)')IPARM,IPH,IDAY,ISOURC                    
      IF (IPU .GT. 0) WRITE(IPU ,'(4I5)')IPARM,IPH,IDAY,ISOURC          
Calley      WRITE(IPR1,'(4I5)')IPARM,IPH,IDAY,ISOURC                    
      IF (IPR1 .GT. 0) WRITE(IPR1,'(4I5)')IPARM,IPH,IDAY,ISOURC         
CalleyWRITE(IPU ,'(8F10.5)')PARM1,PARM2,PARM3,PARM4,TIME,PSIPO,ANGLEM,G 
      IF (IPU .GT. 0) WRITE(IPU ,'(8F10.5)') PARM1,PARM2,PARM3,PARM4,   
     +                                       TIME,PSIPO,ANGLEM,G        
CalleyWRITE(IPR1,'(8F10.5)')PARM1,PARM2,PARM3,PARM4,TIME,PSIPO,ANGLEM,G 
      IF (IPR1 .GT. 0) WRITE(IPR1,'(8F10.5)') PARM1,PARM2,PARM3,PARM4,  
     +                                        TIME,PSIPO,ANGLEM,G       
Calley      WRITE(IPU ,'(4I10)')IV1,IV2,IDV,IFWHM                       
      IF (IPU .GT. 0) WRITE(IPU ,'(4I10)')IV1,IV2,IDV,IFWHM             
Calley      WRITE(IPR1,'(4I10)')IV1,IV2,IDV,IFWHM                       
      IF (IPR1 .GT. 0) WRITE(IPR1,'(4I10)')IV1,IV2,IDV,IFWHM            
Calley      REWIND 28                                                   
C                                                                       
C     CARD 5                                                            
Calley      READ(IRD,'(I5)')IRPT                                        
      IRPT = 0                                                          
Calley      WRITE(IPU,'(I5)')IRPT                                       
      IF (IPU .GT. 0) WRITE(IPU,'(I5)')IRPT                             
Calley      WRITE(IPR1,'(I5)')IRPT                                      
      IF (IPR1 .GT. 0) WRITE(IPR1,'(I5)')IRPT                           
      GROUND=.FALSE.                                                    
      IF(H2.LE.GNDALT)GROUND=.TRUE.                                     
      CALL TRANS(DIS,NSTR,UANG,IPH,ISOURC,IDAY,ANGLEM,                  
     1  GROUND,LSALB,IMSMX,KNTRVL,YFLAG,XFLAG,DLIMIT,IPLOT,             
     2  SPECALB,WAVELEN,TRANSMIT,PATHRAD,SKYRAD,IPJ)                    
Calley     1  GROUND,LSALB,IMSMX,KNTRVL,YFLAG,XFLAG,DLIMIT,IPLOT)       
  140 CONTINUE                                                          
C                                                                       
C     WRITE END OF FILE LABEL FOR TAPE7 AND TAPE8                       
Calley      WRITE(IPU ,'(A)')' -9999.'                                  
      IF (IPU .GT. 0) WRITE(IPU ,'(A)')' -9999.'                        
Calley      WRITE(IPR1,'(A)')' -9999.'                                  
      IF (IPR1 .GT. 0) WRITE(IPR1,'(A)')' -9999.'                       
      IF(IERROR.GT.0)THEN                                               
Calley          READ(IRD,'(I5)',END=150)IRPT                            
          IRPT = 0                                                      
Calley          WRITE(IPU ,'(I5)')IRPT                                  
          IF (IPU .GT. 0) WRITE(IPU ,'(I5)')IRPT                        
Calley          WRITE(IPR1,'(I5)')IRPT                                  
          IF (IPR1 .GT. 0) WRITE(IPR1,'(I5)')IRPT                       
      ENDIF                                                             
Calley      WRITE(IPR,'(A,I5)')'0 CARD 5 *****',IRPT                    
      IF (IPR .GT. 0) WRITE(IPR,'(A,I5)')'0 CARD 5 *****',IRPT          
CSSI  CALL SECOND(TSEC)                                                 
CSSI  WRITE(IPR,'(/F10.3,A)')TSEC-TSEC0,                                
CSSI 1  ' SECONDS WERE REQUIRED TO COMPLETE THIS RUN.'                  
CSSI  TSEC0=TSEC                                                        
      IF(IRPT.LE.0 .OR. IRPT.EQ.2 .OR. IRPT.GE.5)RETURN                 
      IF(IRPT.EQ.4)GOTO90                                               
      SALB=SALBSV                                                       
      IF(IRPT.EQ.3)GOTO80                                               
C                                                                       
C     IRPT=1:  START NEXT FULL CALCULATION                              
      GOTO10                                                            
  150 CONTINUE                                                          
C                                                                       
C     RETURN TO MAIN                                                    
      RETURN                                                            
      END                                                               
      FUNCTION   AB(WAVL,A,CEN,B,C)                                     
CCC                                                                     
CCC    DESCRIBES THE IMAGINARY PART OF THE DIELECTRIC CONSTANT          
CCC                                                                     
      AB=-A*EXP(-ABS((ALOG10(10000.*WAVL/CEN)/B))**C)                   
      RETURN                                                            
      END                                                               
      BLOCK DATA ABCD                                                   
C>    BLOCK DATA                                                        
      COMMON /ABC/ FACTOR(3),ANH3(2),ACO2(10),ACO(3),                   
     X             ACH4(4),ANO2(3),AN2O(11),AO2(6),AO3(5),              
     X             ASO2(4),AH2O(14),ANO,                                
     X             AANH3(2),BBNH3(2),CCNH3(2),                          
     X             AACO2(10),BBCO2(10),CCCO2(10),                       
     X             AACO(3),BBCO(3),CCCO(3),                             
     X             AACH4(4),BBCH4(4),CCCH4(4),                          
     X             AANO2(3),BBNO2(3),CCNO2(3),                          
     X             AAN2O(11),BBN2O(11),CCN2O(11),                       
     X             AAO2(6),BBO2(6),CCO2(6),                             
     X             AAO3(5),BBO3(5),CCO3(5),                             
     X             AASO2(4),BBSO2(4),CCSO2(4),                          
     X             AAH2O(14),BBH2O(14),CCH2O(14),                       
     X             AANO     ,BBNO     ,CCNO                             
      DATA FACTOR/1.0,0.09,0.015/                                       
      DATA ANH3/.4704,.6035/                                            
      DATA ACO2/.6176,.6810,.6033,.6146,.6513,.6050,                    
     1 .6160,.7070,.7070,.7070/                                         
      DATA ACO/.6397,.6133,.6133/                                       
      DATA ACH4/.5844,.5844,.5844,.5844/                                
      DATA ANO/.6613/                                                   
      DATA ANO2/.7249,.7249,.7249/                                      
      DATA AN2O/.8997,.7201,.7201,.7201,.7201,.7201,                    
     1 .6933,.6933,.6933,.6933,.6933/                                   
      DATA AO2/.6011,.5641,.5641,.5641,.5641,.5641/                     
      DATA AO3/.8559,.7593,.7819,.9175,.7703/                           
      DATA ASO2/.8907,.8466,.8466,.8466/                                
      DATA AH2O/.5274,.5299,.5416,.5479,.5495,.5464,.5454,              
     1 .5474,.5579,.5621,.5847,.6076,.6508,.6570/                       
      DATA AANH3/.285772,.134244/                                       
      DATA BBNH3/.269839,.353937/                                       
      DATA CCNH3/19.9507,27.8458/                                       
      DATA AACO2/.120300,.069728,.134448,.123189,.090948,               
     1 .132717,.121835,.054348,.054348,.054348/                         
      DATA BBCO2/.348172,.303510,.354002,.349583,.327160,               
     1 .353435,.348936,.280674,.280674,.280674/                         
      DATA CCCO2/29.4277,37.0842,27.8241,29.0834,33.4608,               
     1 28.0093,29.2436,40.1951,40.1951,40.1951/                         
      DATA AACO/.100401,.124454,.124454/                                
      DATA BBCO/.335296,.350165,.350165/                                
      DATA CCCO/32.0496,28.9354,28.9354/                                
      DATA AACH4/.154447,.154447,.154447,.154447/                       
      DATA BBCH4/.357657,.357657,.357657,.357657/                       
      DATA CCCH4/25.8920,25.8920,25.8920,25.8920/                       
      DATA AANO/.083336/                                                
      DATA BBNO/.319585/                                                
      DATA CCNO/34.6834/                                                
      DATA AANO2/.045281,.045281,.045281/                               
      DATA BBNO2/.264248,.264248,.264248/                               
      DATA CCNO2/42.2784,42.2784,42.2784/                               
      DATA AAN2O/.001679,.047599,.047599,.047599,.047599,               
     1 .047599,.062106,.062106,.062106,.062106,.062106/                 
      DATA BBN2O/.095621,.268696,.268696,.268696,.268696,               
     1 .268696,.292891,.292891,.292891,.292891,.292891/                 
      DATA CCN2O/59.3660,41.7251,41.7251,41.7251,41.7251,               
     1 41.7251,38.5667,38.5667,38.5667,38.5667,38.5667/                 
      DATA AAO2/.136706,.177087,.177087,.177087,.177087,.177087/        
      DATA BBO2/.354683,.355447,.355447,.355447,.355447,.355447/        
      DATA CCO2/27.5869,24.1314,24.1314,24.1314,24.1314,24.1314/        
      DATA AAO3/.006712,.030870,.023278,.000458,.027004/                
      DATA BBO3/.138026,.231722,.209952,.078492,.221153/                
      DATA CCO3/55.6442,46.1189,48.5155,60.7802,47.2982/                
      DATA AASO2/.002468,.008192,.008192,.008192/                       
      DATA BBSO2/.104307,.147065,.147065,.147065/                       
      DATA CCSO2/58.6298,54.8078,54.8078,54.8078/                       
      DATA AAH2O/.219312,.216415,.206349,.196196,.194540,.198500,       
     1 .198500,.196196,.184148,.179360,.154120,.130095,.091341,.086549/ 
      DATA BBH2O/.334884,.336904,.343272,.348610,.349810,.347498,       
     1 .347498,.348610,.353429,.354864,.357640,.352497,.327526,.322898/ 
      DATA CCH2O/21.8352,21.9588,22.4234,22.9517,23.0750,22.8262,       
     1 22.8262,22.9517,23.6654,23.9774,25.9207,28.2957,33.3998,34.1575/ 
      END                                                               
      SUBROUTINE ABCDTA(IV)                                             
C                                                                       
      COMMON /ABC/ FACTOR(3),ANH3(2),ACO2(10),ACO(3),                   
     X             ACH4(4),ANO2(3),AN2O(11),AO2(6),AO3(5),              
     X             ASO2(4),AH2O(14),ANO,                                
     X             AANH3(2),BBNH3(2),CCNH3(2),                          
     X             AACO2(10),BBCO2(10),CCCO2(10),                       
     X             AACO(3),BBCO(3),CCCO(3),                             
     X             AACH4(4),BBCH4(4),CCCH4(4),                          
     X             AANO2(3),BBNO2(3),CCNO2(3),                          
     X             AAN2O(11),BBN2O(11),CCN2O(11),                       
     X             AAO2(6),BBO2(6),CCO2(6),                             
     X             AAO3(5),BBO3(5),CCO3(5),                             
     X             AASO2(4),BBSO2(4),CCSO2(4),                          
     X             AAH2O(14),BBH2O(14),CCH2O(14),                       
     X             AANO     ,BBNO     ,CCNO                             
C                                                                       
      COMMON/AABBCC/AA(11),BB(11),CC(11),IBND(11),QA(11),CPS(11)        
C                                                                       
C    MOL                                                                
C     1    H2O (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C     2    CO2 (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C     3    O3  (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C     4    N2O (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C     5    CO  (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C     6    CH4 (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C     7    O2  (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C     8    NO  (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C     9    SO2 (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C    10    NO2 (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C    11    NH3 (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C                                                                       
C  ---H2O                                                               
      IMOL=1                                                            
      IW=-1                                                             
      IF(IV.GE.     0.AND.IV.LE.   345) IW=17                           
      IF(IV.GE.   350.AND.IV.LE.  1000) IW=18                           
      IF(IV.GE.  1005.AND.IV.LE.  1640) IW=19                           
      IF(IV.GE.  1645.AND.IV.LE.  2530) IW=20                           
      IF(IV.GE.  2535.AND.IV.LE.  3420) IW=21                           
      IF(IV.GE.  3425.AND.IV.LE.  4310) IW=22                           
      IF(IV.GE.  4315.AND.IV.LE.  6150) IW=23                           
      IF(IV.GE.  6155.AND.IV.LE.  8000) IW=24                           
      IF(IV.GE.  8005.AND.IV.LE.  9615) IW=25                           
      IF(IV.GE.  9620.AND.IV.LE. 11540) IW=26                           
      IF(IV.GE. 11545.AND.IV.LE. 13070) IW=27                           
      IF(IV.GE. 13075.AND.IV.LE. 14860) IW=28                           
      IF(IV.GE. 14865.AND.IV.LE. 16045) IW=29                           
      IF(IV.GE. 16340.AND.IV.LE. 17860) IW=30                           
      IBAND=IW - 16                                                     
      IBND(IMOL)=IW                                                     
      IF(IW .GT.  0) THEN                                               
           QA(IMOL)= AH2O(IBAND)                                        
           AA(IMOL) =AAH2O(IBAND)                                       
           BB(IMOL) =BBH2O(IBAND)                                       
           CC(IMOL) =CCH2O(IBAND)                                       
      ENDIF                                                             
C  ---O3                                                                
      IMOL=3                                                            
      IW=-1                                                             
      IF (IV .GE.     0 .AND. IV .LE.   200)  IW=31                     
      IF (IV .GE.   515 .AND. IV .LE.  1275)  IW=32                     
      IF (IV .GE.  1630 .AND. IV .LE.  2295)  IW=33                     
      IF (IV .GE.  2670 .AND. IV .LE.  2845)  IW=34                     
      IF (IV .GE.  2850 .AND. IV .LE.  3260)  IW=35                     
      IBAND     =IW - 30                                                
      IBND(IMOL)=IW                                                     
      IF(IW .GT.  0) THEN                                               
           QA(IMOL)=AO3(IBAND)                                          
           AA(IMOL)=AAO3(IBAND)                                         
           BB(IMOL)=BBO3(IBAND)                                         
           CC(IMOL)=CCO3(IBAND)                                         
      ENDIF                                                             
C  ---CO2                                                               
      IMOL=2                                                            
      IW=-1                                                             
      IF (IV .GE.   425 .AND. IV .LE.   835)  IW=36                     
      IF (IV .GE.   840 .AND. IV .LE.  1440)  IW=37                     
      IF (IV .GE.  1805 .AND. IV .LE.  2855)  IW=38                     
      IF (IV .GE.  3070 .AND. IV .LE.  3755)  IW=39                     
      IF (IV .GE.  3760 .AND. IV .LE.  4065)  IW=40                     
      IF (IV .GE.  4530 .AND. IV .LE.  5380)  IW=41                     
      IF (IV .GE.  5905 .AND. IV .LE.  7025)  IW=42                     
      IF((IV .GE.  7395 .AND. IV .LE.  7785) .OR.                       
     *   (IV .GE.  8030 .AND. IV .LE.  8335) .OR.                       
     *   (IV .GE.  9340 .AND. IV .LE.  9670)) IW=43                     
      IBAND=IW - 35                                                     
      IBND(IMOL)=IW                                                     
      IF(IW .GT.  0) THEN                                               
           QA(IMOL)=ACO2(IBAND)                                         
           AA(IMOL)=AACO2(IBAND)                                        
           BB(IMOL)=BBCO2(IBAND)                                        
           CC(IMOL)=CCCO2(IBAND)                                        
      ENDIF                                                             
C  ---CO                                                                
      IMOL=5                                                            
      IW=-1                                                             
      IF (IV .GE.     0 .AND. IV .LE.   175) IW=44                      
      IF((IV .GE.  1940 .AND. IV .LE.  2285) .OR.                       
     *   (IV .GE.  4040 .AND. IV .LE.  4370)) IW=45                     
      IBAND=IW - 43                                                     
      IBND(IMOL)=IW                                                     
      IF(IW .GT.  0) THEN                                               
           QA(IMOL)=ACO(IBAND)                                          
           AA(IMOL)=AACO(IBAND)                                         
           BB(IMOL)=BBCO(IBAND)                                         
           CC(IMOL)=CCCO(IBAND)                                         
      ENDIF                                                             
C  ---CH4                                                               
      IMOL=6                                                            
      IW=-1                                                             
      IF((IV .GE.  1065 .AND. IV .LE.  1775) .OR.                       
     *   (IV .GE.  2345 .AND. IV .LE.  3230) .OR.                       
     *   (IV .GE.  4110 .AND. IV .LE.  4690) .OR.                       
     *   (IV .GE.  5865 .AND. IV .LE.  6135))IW=46                      
      IBAND=IW - 45                                                     
      IBND(IMOL)=IW                                                     
      IF(IW .GT.  0) THEN                                               
           QA(IMOL)=ACH4(IBAND)                                         
           AA(IMOL)=AACH4(IBAND)                                        
           BB(IMOL)=BBCH4(IBAND)                                        
           CC(IMOL)=CCCH4(IBAND)                                        
      ENDIF                                                             
C  ---N2O                                                               
      IMOL=4                                                            
      IW=-1                                                             
      IF (IV .GE.     0 .AND. IV .LE.   120)  IW=47                     
      IF((IV .GE.   490 .AND. IV .LE.   775) .OR.                       
     *   (IV .GE.   865 .AND. IV .LE.   995) .OR.                       
     *   (IV .GE.  1065 .AND. IV .LE.  1385) .OR.                       
     *   (IV .GE.  1545 .AND. IV .LE.  2040) .OR.                       
     *   (IV .GE.  2090 .AND. IV .LE.  2655)) IW=48                     
      IF((IV .GE.  2705 .AND. IV .LE.  2865) .OR.                       
     *   (IV .GE.  3245 .AND. IV .LE.  3925) .OR.                       
     *   (IV .GE.  4260 .AND. IV .LE.  4470) .OR.                       
     *   (IV .GE.  4540 .AND. IV .LE.  4785) .OR.                       
     *   (IV .GE.  4910 .AND. IV .LE.  5165)) IW=49                     
      IBAND=IW - 46                                                     
      IBND(IMOL)=IW                                                     
C                                                                       
      IF(IW .EQ. 49)IBAND=7                                             
C                                                                       
C     THIS CORRECTION IS ONLY FOR N2O AS CURRENTLY WRITTEN              
C                                                                       
      IF(IW .GT.  0) THEN                                               
           QA(IMOL)=AN2O(IBAND)                                         
           AA(IMOL)=AAN2O(IBAND)                                        
           BB(IMOL)=BBN2O(IBAND)                                        
           CC(IMOL)=CCN2O(IBAND)                                        
      ENDIF                                                             
C  ---O2                                                                
      IMOL=7                                                            
      IW=-1                                                             
      IF (IV .GE.     0 .AND. IV .LE.   265)  IW=50                     
      IF((IV .GE.  7650 .AND. IV .LE.  8080) .OR.                       
     *   (IV .GE.  9235 .AND. IV .LE.  9490) .OR.                       
     *   (IV .GE. 12850 .AND. IV .LE. 13220) .OR.                       
     *   (IV .GE. 14300 .AND. IV .LE. 14600) .OR.                       
     *   (IV .GE. 15695 .AND. IV .LE. 15955)) IW=51                     
       IF(IV .GE. 49600 .AND. IV. LE. 52710)  IW=51                     
      IBAND=IW - 49                                                     
      IBND(IMOL)=IW                                                     
      IF(IW .GT.  0) THEN                                               
           QA(IMOL)=AO2(IBAND)                                          
           IF(IV .GE. 49600 .AND. IV. LE. 52710)  QA(IMOL) =.4704       
           AA(IMOL)=AAO2(IBAND)                                         
           BB(IMOL)=BBO2(IBAND)                                         
           CC(IMOL)=CCO2(IBAND)                                         
      ENDIF                                                             
C  ---NH3                                                               
      IMOL=11                                                           
      IW=-1                                                             
      IF (IV .GE.     0 .AND. IV .LE.   385)  IW=52                     
      IF (IV .GE.   390 .AND. IV .LE.  2150)  IW=53                     
      IBAND=IW - 51                                                     
      IBND(IMOL)=IW                                                     
      IF(IW .GT.  0) THEN                                               
           QA(IMOL)=ANH3(IBAND)                                         
           AA(IMOL)=AANH3(IBAND)                                        
           BB(IMOL)=BBNH3(IBAND)                                        
           CC(IMOL)=CCNH3(IBAND)                                        
      ENDIF                                                             
C  ---NO                                                                
      IMOL=8                                                            
      IW=-1                                                             
      IF (IV .GE.  1700 .AND. IV .LE.  2005) IW =54                     
      IBAND=IW - 53                                                     
      IBND(IMOL)=IW                                                     
      IF(IW .GT.  0) THEN                                               
           QA(IMOL)=ANO                                                 
           AA(IMOL)=AANO                                                
           BB(IMOL)=BBNO                                                
           CC(IMOL)=CCNO                                                
      ENDIF                                                             
C  ---NO2                                                               
      IW=-1                                                             
      IMOL=10                                                           
      IF((IV .GE.   580 .AND. IV .LE.   925) .OR.                       
     *   (IV .GE.  1515 .AND. IV .LE.  1695) .OR.                       
     *   (IV .GE.  2800 .AND. IV .LE.  2970)) IW=55                     
      IBAND=IW - 54                                                     
      IBND(IMOL)=IW                                                     
      IF(IW .GT.  0) THEN                                               
           QA(IMOL)=ANO2(IBAND)                                         
           AA(IMOL)=AANO2(IBAND)                                        
           BB(IMOL)=BBNO2(IBAND)                                        
           CC(IMOL)=CCNO2(IBAND)                                        
      ENDIF                                                             
C  ---SO2                                                               
      IMOL=9                                                            
      IW=-1                                                             
      IF (IV .GE.     0 .AND. IV .LE.   185)  IW=56                     
      IF((IV .GE.   400 .AND. IV .LE.   650) .OR.                       
     *   (IV .GE.   950 .AND. IV .LE.  1460) .OR.                       
     *   (IV .GE.  2415 .AND. IV .LE.  2580)) IW=57                     
      IBAND=IW - 55                                                     
      IBND(IMOL)=IW                                                     
      IF(IW .GT.  0) THEN                                               
           QA(IMOL)=ASO2(IBAND)                                         
           AA(IMOL)=AASO2(IBAND)                                        
           BB(IMOL)=BBSO2(IBAND)                                        
           CC(IMOL)=CCSO2(IBAND)                                        
      ENDIF                                                             
      RETURN                                                            
      END                                                               
      SUBROUTINE AEREXT(V,MNAER)                                        
C                                                                       
C     INTERPOLATES AEROSOL EXTINCTION, ABSORPTION, AND ASYMMETRY        
C     COEFFICIENTS FOR THE WAVENUMBER, V.                               
C     MNAER   MINIMUM AEROSOL INDEX TO BE USED                          
C             (=1 FOR ALL AEROSOLS, =6 FOR CLOUDS ONLY).                
      REAL V                                                            
      INTEGER MNAER                                                     
C                                                                       
C     MODIFIED FOR ASYMMETRY  - JAN 1986 (A.E.R. INC.)                  
      INCLUDE 'PARAM.LST'                                               
      INTEGER KPOINT                                                    
      REAL WAVLEN,EXTC,ABSC,ASYM,AWCCON,TX,W,RELHUM,PATM,TBBY,WPATH     
      COMMON/BASE/WAVLEN(MXWVLN),EXTC(NAER,MXWVLN),ABSC(NAER,MXWVLN),   
     1  ASYM(NAER,MXWVLN),AWCCON(NAER),KPOINT(NSPC),TX(KMAX),W(KMAX),   
     2  RELHUM(LAYDIM),PATM(LAYTHR),TBBY(LAYTHR),WPATH(LAYTHR,KMAX)     
      COMMON/EXTD/VX0(NWAVLN),DUMDAT(NWAVLN,81)                         
      REAL EXTV,ABSV,ASYV                                               
      COMMON/AER/EXTV(NAER),ABSV(NAER),ASYV(NAER)                       
      REAL TAER                                                         
      COMMON/AERTM/TAER(NAER)                                           
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                           
      INTEGER NCRALT,NCRSPC                                             
      REAL CTHIK,CALT,CEXT,CWAVLN,CCOLWD,CCOLIP,CHUMID,ASYMWD,ASYMIP    
      COMMON/CARD2A/CTHIK,CALT,CEXT,NCRALT,NCRSPC,                      
     1  CWAVLN,CCOLWD,CCOLIP,CHUMID,ASYMWD,ASYMIP                       
      INTEGER IPH                                                       
      REAL G                                                            
      COMMON/CARD3A/IPH,G                                               
C                                                                       
C     LIST DATA                                                         
      LOGICAL LWARN                                                     
      DATA LWARN/.TRUE./                                                
C                                                                       
C     NO EXTINCTION ASSUMED FOR V=0.                                    
      MXAER=7                                                           
      IF(V.LE.1.E-5)THEN                                                
          DO 10 IAER=MNAER,MXAER                                        
              EXTV(IAER)=0.                                             
              ABSV(IAER)=0.                                             
              ASYV(IAER)=0.                                             
   10     CONTINUE                                                      
          IF(IPH.EQ.0)GOTO90                                            
          RETURN                                                        
      ENDIF                                                             
C                                                                       
C     CHECK FOR USER-DEFINED CLOUD SPECTRAL DATA                        
      ALAM=10000./V                                                     
      IF(NCRSPC.GE.2)THEN                                               
C                                                                       
C         USER-DEFINED CLOUD SPECTRAL DATA (IAER=6 AND IAER=7)          
C         IS BASED ON "WAVLEN" WAVELENGTHS, NOT "VX0" WAVELENGTHS.      
          MXAER=5                                                       
          IF(ALAM.LT.WAVLEN(1) .OR. ALAM.GT.WAVLEN(NCRSPC))THEN         
Calley              IF(LWARN)THEN                                       
              IF(LWARN .AND. IPR.GT.0)THEN                              
                  WRITE(IPR,'(2A,F8.4,A,/10X,2(A,F8.4),A,/10X,A,F8.4,   
     1              2A,/10X,2A,/)')' WARNING:  CLOUD SPECTRAL DATA IS', 
     2              ' REQUIRED AT',ALAM,' MICRONS, BUT DATA WAS ONLY',  
     3              ' INPUT FROM',WAVLEN(1),' TO',WAVLEN(NCRSPC),       
     4              ' MICRONS.  END POINT DATA WILL BE USED',           
     5              ' FOR',ALAM,' MICRONS.  THIS WARNING IS',           
     6              ' NOT REPEATED IF ADDITIONAL DATA',                 
     7              ' IS REQUIRED THAT FALLS OUTSIDE',                  
     8              ' THE INPUT SPECTRAL RANGE.'                        
                  LWARN=.FALSE.                                         
              ENDIF                                                     
              IWAV=1                                                    
              IF(ALAM.GT.WAVLEN(NCRSPC))IWAV=NCRSPC                     
              EXTV(6)=EXTC(6,IWAV)                                      
              ABSV(6)=ABSC(6,IWAV)                                      
              ASYV(6)=ASYM(6,IWAV)                                      
              EXTV(7)=EXTC(7,IWAV)                                      
              ABSV(7)=ABSC(7,IWAV)                                      
              ASYV(7)=ASYM(7,IWAV)                                      
          ELSE                                                          
              IWAVM1=1                                                  
              DO 20 IWAV=2,NCRSPC-1                                     
                  IF(ALAM.LE.WAVLEN(IWAV))GOTO30                        
   20         IWAVM1=IWAV                                               
              IWAV=NCRSPC                                               
   30         CONTINUE                                                  
              FACTOR=(WAVLEN(IWAV)-ALAM)/(WAVLEN(IWAV)-WAVLEN(IWAVM1))  
              EXTV(6)=EXTC(6,IWAV)+FACTOR*(EXTC(6,IWAVM1)-EXTC(6,IWAV)) 
              ABSV(6)=ABSC(6,IWAV)+FACTOR*(ABSC(6,IWAVM1)-ABSC(6,IWAV)) 
              ASYV(6)=ASYM(6,IWAV)+FACTOR*(ASYM(6,IWAVM1)-ASYM(6,IWAV)) 
              EXTV(7)=EXTC(7,IWAV)+FACTOR*(EXTC(7,IWAVM1)-EXTC(7,IWAV)) 
              ABSV(7)=ABSC(7,IWAV)+FACTOR*(ABSC(7,IWAVM1)-ABSC(7,IWAV)) 
              ASYV(7)=ASYM(7,IWAV)+FACTOR*(ASYM(7,IWAVM1)-ASYM(7,IWAV)) 
          ENDIF                                                         
          IF(MNAER.GE.6)RETURN                                          
      ENDIF                                                             
C                                                                       
C     COMPUTE MICROWAVE ATTENUATION COEFFICIENTS (THE AWCCON FACTOR IS  
C     INCLUDED IN CALLS TO GAMFOG BECAUSE EXTV AND ABSV ARE MULTIPLIED  
C     BY COLUMN DENSITIES WHICH HAVE BEEN DIVIDED BY THIS FACTOR).      
      VMN=10000./VX0(NWAVLN)                                            
      IF(V.LE.VMN)THEN                                                  
          DO 40 IAER=MNAER,MXAER                                        
              EXTV(IAER)=GAMFOG(IAER,V,TAER(IAER),AWCCON(IAER))         
              ABSV(IAER)=EXTV(IAER)                                     
              ASYV(IAER)=0.                                             
   40     CONTINUE                                                      
          IF(IPH.EQ.0)GOTO90                                            
          RETURN                                                        
      ENDIF                                                             
C                                                                       
C     DETERMINE BRACKETING WAVELENGTHS                                  
      NWAVM1=NWAVLN-1                                                   
      IWAVM1=1                                                          
      DO 50 IWAV=2,NWAVM1                                               
          IF(ALAM.LE.VX0(IWAV))GOTO70                                   
   50 IWAVM1=IWAV                                                       
C                                                                       
C     ALAM IS BETWEEN 200 AND 300 MICRONS.  DEFINE THE                  
C     300 MICRON SPECTRAL DATA BEFORE INTERPOLATION                     
      FACTOR=(VX0(NWAVLN)-ALAM)/(VX0(NWAVLN)-VX0(NWAVM1))               
      DO 60 IAER=MNAER,MXAER                                            
          GMFOG=GAMFOG(IAER,VMN,TAER(IAER),AWCCON(IAER))                
          EXTV(IAER)=GMFOG+FACTOR*(EXTC(IAER,NWAVM1)-GMFOG)             
          ABSV(IAER)=GMFOG+FACTOR*(ABSC(IAER,NWAVM1)-GMFOG)             
          ASYV(IAER)=FACTOR*ASYM(IAER,NWAVM1)                           
   60 CONTINUE                                                          
      IF(IPH.EQ.0)GOTO90                                                
      RETURN                                                            
C                                                                       
C     COMPUTE INFRARED SPECTRAL DATA                                    
   70 CONTINUE                                                          
      FACTOR=(VX0(IWAV)-ALAM)/(VX0(IWAV)-VX0(IWAVM1))                   
      DO 80 IAER=MNAER,MXAER                                            
          EXTV(IAER)=EXTC(IAER,IWAV)+                                   
     1      FACTOR*(EXTC(IAER,IWAVM1)-EXTC(IAER,IWAV))                  
          ABSV(IAER)=ABSC(IAER,IWAV)+                                   
     1      FACTOR*(ABSC(IAER,IWAVM1)-ABSC(IAER,IWAV))                  
          ASYV(IAER)=ASYM(IAER,IWAV)+                                   
     1      FACTOR*(ASYM(IAER,IWAVM1)-ASYM(IAER,IWAV))                  
   80 CONTINUE                                                          
      IF(IPH.NE.0)RETURN                                                
C                                                                       
C     OVERWRITE AEROSOL ASYMMETRY FACTORS WITH USER-DEFINED VALUE       
   90 CONTINUE                                                          
      DO 100 IAER=MNAER,5                                               
          ASYV(IAER)=G                                                  
  100 CONTINUE                                                          
      RETURN                                                            
      END                                                               
Calley      SUBROUTINE AERNSM(JPRT,GNDALT,ICH)                          
      SUBROUTINE AERNSM(JPRT,GNDALT,ICH,ZMDLIN,PIN,TIN,WMOLIN,XMOLIN,   
     +                  JCHARIN,JCHARXIN,AHAZEX,EQLWCZX,RRATZX,IHA1X,   
     +                  ICLD1X,IVUL1X,ISEA1X,ICHR1X)                    
      INTEGER ICH(4)                                                    
      INCLUDE 'PARAM.LST'                                               
C********************************************************************** 
C     DEFINES ALTITUDE DEPENDENT VARIABLES Z,P,T,WH,WO AND HAZE         
C     CLD RAIN  CLDTYPE                                                 
C     IT ALSO DEFINES ALTITUDE DEPENDENT VARIABLES WAIR,WCO2,WCO,       
C     WCH4,WN2O,WO2,WNH3,WNO,WNO2, AND WSO2                             
C     LOADS HAZE INTO APPROPRATE LOCATION                               
C********************************************************************** 
C                                                                       
C                                                                       
C                                                                       
C     CONVENTION                                                        
C     MMOLX = MAXIMUM NUMBER OF NEW SPECIES (IDENTIFIED BY "X")         
C     MMOL  = MAXIMUM NUMBER OF OLD SPECIES (W/O SUFFIX "X")            
C     THESE DEFINE THE MAXIMUM ARRAY SIZES.                             
C                                                                       
C     THE ACTUAL NUMBER OF PARAMETERS ARE:                              
C     NSPC = ACTUAL NUMBER OF OLD SPECIES (12), CAN'T EXCEED MMOL       
C     NSPECX = ACTUAL NUMBER OF "X" SPECIES,     CAN'T EXCEED MMOLX     
C                                                                       
C     PARAMETER KMAX DENOTES THE NUMBER OF MODTRAN "SPECIES".           
C     THIS INCLUDES THE 12 ORIGINAL BAND MODEL PARAMETER MOLECULES      
C     PLUS A HOST OF OTHER ABSORPTION AND/OR SCATTERING SOURCES.        
                                                                        
C                                                                       
C                                                                       
C                                                                       
C     TRANS VARIABLES                                                   
C                                                                       
      REAL ZMDLIN(LAYDIM),PIN(LAYDIM),TIN(LAYDIM),WMOLIN(12,LAYDIM)     
      REAL XMOLIN(NSPECX,LAYDIM),AHAZEX(LAYDIM),EQLWCZX(LAYDIM)         
      REAL RRATZX(LAYDIM)                                               
      INTEGER IHA1X(LAYDIM),ICLD1X(LAYDIM),IVUL1X(LAYDIM)               
      INTEGER ISEA1X(LAYDIM),ICHR1X(LAYDIM)                             
      CHARACTER*1 JCHARIN(15,LAYDIM),JCHARXIN(LAYDIM)                   
C                                                                       
      INTEGER KPOINT                                                    
      REAL WAVLEN,EXTC,ABSC,ASYM,AWCCON,TX,W,RELHUM,PATM,TBBY,WPATH     
      COMMON/BASE/WAVLEN(MXWVLN),EXTC(NAER,MXWVLN),ABSC(NAER,MXWVLN),   
     1  ASYM(NAER,MXWVLN),AWCCON(NAER),KPOINT(NSPC),TX(KMAX),W(KMAX),   
     2  RELHUM(LAYDIM),PATM(LAYTHR),TBBY(LAYTHR),WPATH(LAYTHR,KMAX)     
      COMMON /MDATA/P(LAYDIM),T(LAYDIM),WH(LAYDIM),WCO2(LAYDIM),        
     X WO(LAYDIM),WN2O(LAYDIM),WCO(LAYDIM),WCH4(LAYDIM),WO2(LAYDIM)     
C                                                                       
      COMMON /MDATAX/ WMOLXT(MMOLX,LAYDIM)                              
C                                                                       
      COMMON /MDATA1/ WNO(LAYDIM),WSO2(LAYDIM),WNO2(LAYDIM),            
     X WNH3(LAYDIM),WAIR(LAYDIM),WHNO3(LAYDIM)                          
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                          
      COMMON /CARD1/ MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB  
     1  ,MODTRN                                                         
      LOGICAL MODTRN                                                    
      COMMON /CARD1A/ M4,M5,M6,MDEF,IRD1,IRD2                           
      COMMON /CARD1B/ JUNIT(15),WMOL(12),WAIR1,JLOW                     
      COMMON /CARD2/ IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,VIS,WSS,WHH,   
     1    RAINRT                                                        
      INTEGER NCRALT,NCRSPC                                             
      REAL CTHIK,CALT,CEXT,CWAVLN,CCOLWD,CCOLIP,CHUMID,ASYMWD,ASYMIP    
      COMMON/CARD2A/CTHIK,CALT,CEXT,NCRALT,NCRSPC,                      
     1  CWAVLN,CCOLWD,CCOLIP,CHUMID,ASYMWD,ASYMIP                       
      COMMON /CARD2D/ IREG(4),ALTB(4),IREGC(4)                          
      INTEGER IKMAX,ML,ISSGEO,IMULT                                     
      COMMON/CNTRL/IKMAX,ML,ISSGEO,IMULT                                
      COMMON /MART/ RHH                                                 
      REAL ZM,PM,TM,RFNDX,DENSTY                                        
      COMMON/MODEL/ZM(LAYDIM),PM(LAYDIM),TM(LAYDIM),                    
     1  RFNDX(LAYDIM),DENSTY(KMAX,LAYDIM)                               
      COMMON /ZVSALY/ ZVSA(10),RHVSA(10),AHVSA(10),IHVSA(10)            
      COMMON /MDLZ/HMDLZ(8)                                             
      CHARACTER*4  HZ         ,SEASN     ,VULCN     ,BLANK,             
     X            HMET        ,HMODEL     ,HTRRAD                       
      COMMON /TITL/ HZ(5,16),SEASN(5,2),VULCN(5,8),BLANK,               
     X HMET(5,2),HMODEL(5,8),HTRRAD(6,4)                                
      REAL H2O,O3,O2,CH4,SO2,TEMPADJ                                    
      COMMON /MOLFACS/ H2O,O3,O2,CH4,SO2,TEMPADJ                        
      CHARACTER*4  AHOL1,AHOL2   ,AHOL3   , AHLVSA   ,AHUS              
      DIMENSION AHOL1(5),AHOL2(5),AHOL3(5), AHLVSA(5),AHUS(5)           
      DIMENSION  ITY1(LAYDIM),IH1(LAYDIM),IS1(LAYDIM),IVL1(LAYDIM),     
     1    ZGN(LAYDIM)                                                   
      CHARACTER*4  AHAHOL   ,HHOL                                       
      DIMENSION AHAHOL(5,13),HHOL(5)                                    
      DIMENSION CLDTOP(10),AHAST(LAYDIM)                                
C                                                                       
C                                                                       
      CHARACTER*1 JCHAR,BL,JCHARX                                       
      COMMON /CRD1BX/JUNITX,WMOLX(MMOLX)                                
      DIMENSION  JCHAR(15)                                              
      DATA AHLVSA/'VSA ','DEFI','NED ','    ','    '/                   
      DATA  AHUS /'USER',' DEF','INED','    ','    '/                   
      DATA AHAHOL/                                                      
     1 'CUMU','LUS ','    ','    ','    ',                              
     2 'ALTO','STRA','TUS ','    ','    ',                              
     3 'STRA','TUS ','    ','    ','    ',                              
     4 'STRA','TUS ','STRA','TO C','UM  ',                              
     5 'NIMB','OSTR','ATUS','    ','    ',                              
     6 'DRIZ','ZLE ','2.0 ','MM/H','R   ',                              
     7 'LT R','AIN ','5.0 ','MM/H','R   ',                              
     8 'MOD ','RAIN',' 12.','5 MM','/HR ',                              
     9 'HEAV','Y RA','IN 2','5 MM','/HR ',                              
     A 'EXTR','EME ','RAIN',' 75M','M/HR',                              
     B 'USER',' ATM','OSPH','ERE ','    ',                              
     C 'USER',' RAI','N NO',' CLO','UD  ',                              
     D 'CIRR','US C','LOUD','    ','    ' /                             
      DATA CLDTOP / 3.,3.,1.,2.,.66,1.,.66,.66,3.,3./                   
C                                                                       
C     F(A) IS SATURATED WATER WAPOR DENSITY AT TEMP T,A=TZERO/T         
C                                                                       
      F(A)=EXP(18.9766-14.9595*A-2.43882*A*A)*A                         
C                                                                       
C                                                                       
C     ZM  COMMON /MODEL/ FINAL ALTITUDE FOR LOWTRAN                     
C     ZK  ALTITUDE FOR CLOUD                                            
C     ZSC ALTITUDE FOR AEROSOLS  GNDALT                                 
C                                                                       
C                                                                       
      IREGC(1) = 0                                                      
      IREGC(2) = 0                                                      
      IREGC(3) = 0                                                      
      IREGC(4) = 0                                                      
      ICONV =1                                                          
      IRD0 = 1                                                          
      IF((MODEL .EQ. 0.) . OR. (MODEL .EQ. 7)) THEN                     
            IF(IM. NE. 1) RETURN                                        
      ENDIF                                                             
      IF((MODEL .GT. 0.) .AND. (MODEL .LT. 7)) IRD0 = 0                 
      IF((IRD0  .EQ. 1)  .AND. (IVSA.EQ.1)   ) THEN                     
           IRD0 = 0                                                     
           IRD1 = 0                                                     
           IRD2 = 0                                                     
           ICONV =0                                                     
           ML = ML + 10 - JLOW                                          
Calley           IF(ML.GT.LAYDIM)WRITE(IPR,910)                         
           IF(ML.GT.LAYDIM .AND. IPR.GT.0)WRITE(IPR,910)                
           IF(ML.GT.LAYDIM)ML=LAYDIM                                    
           ZVSA(10)=ZVSA(9)+0.01                                        
           RHVSA(10)=0.                                                 
           AHVSA(10)=0.                                                 
           IHVSA(10)=0                                                  
Calley           IF(MODEL.EQ.0)WRITE (IPR,900)                          
           IF(MODEL.EQ.0 .AND. IPR.GT.0)WRITE (IPR,900)                 
900   FORMAT('   ERROR MODEL EQ 0 AND ARMY MODEL CANNOT MIX')           
           IF(MODEL.EQ.0)STOP                                           
910   FORMAT('  ERROR ML GT 24 AND ARMY MODEL TOP LAYER TRUNCATED')     
      ENDIF                                                             
      ICL=0                                                             
      IDSR=0                                                            
      IF(ICLD.EQ.18 .OR. ICLD.EQ.19)THEN                                
          CALL CIRR18                                                   
          CLDD=.1*CTHIK                                                 
          CLD0=CALT-.5*CLDD                                             
          IF(CLD0.LE.GNDALT)CLD0=GNDALT                                 
          CLD1=CLD0+CLDD                                                
          CLD2=CLD0+CTHIK                                               
          CLD3=CLD1+CTHIK                                               
      ENDIF                                                             
      IF(MODEL.GE.1 .AND. MODEL.LE.6)CALL FLAYZ(ML,ICLD,GNDALT,IVSA)    
      JPRT=1                                                            
      IF(MODEL.EQ.0  .OR. MODEL.EQ.7) JPRT=0                            
      IF(IVSA.EQ.1) JPRT=0                                              
      IF(ICLD.GE.1 .AND.ICLD.LT.20) JPRT=0                              
      IF(RAINRT.GT.0.) JPRT=0                                           
      IF(GNDALT.GT.0.) JPRT=0                                           
C                                                                       
      DO 6 II = 1,4                                                     
6     ALTB(II) = 0.                                                     
      T0=273.15                                                         
      IC1=1                                                             
      N=7                                                               
      IF(IVULCN.LE.0) IVULCN=1                                          
      IF(ISEASN.LE.0) ISEASN=1                                          
Calley      IF(JPRT.EQ.0) THEN                                          
      IF(JPRT.EQ.0 .AND. IPR.GT.0) THEN                                 
         WRITE(IPR,925) MODEL,ICLD                                      
         IF(MODEL .EQ.7)WRITE(IPR,94)                                   
 94      FORMAT(/,10X,' MODEL 0 / 7 USER INPUT DATA ',//)               
C                                                                       
      ENDIF                                                             
C                                                                       
C                                                                       
      DO 100 K=1,ML                                                     
C                                                                       
C    LOOP OVER LAYERS                                                   
C                                                                       
      RH = 0.                                                           
      WH(K)  =0.                                                        
      WO(K)  =0.                                                        
C                                                                       
      IHA1=0                                                            
      ICLD1=0                                                           
      ISEA1=0                                                           
      IVUL1=0                                                           
      VIS1=0.                                                           
      AHAZE=0.                                                          
      EQLWCZ=0.                                                         
      RRATZ=0.                                                          
      ICHR = 0                                                          
      HAZECZ=0.                                                         
      DENSTY(16,K)=0.                                                   
C     NEW                                                               
C                                                                       
      WAIR(K) = 0                                                       
      WCO2(K) = 0                                                       
      WCO(K)  = 0                                                       
      WCH4(K) = 0                                                       
      WN2O(K) = 0                                                       
      WO2(K)  = 0                                                       
      WNH3(K) = 0                                                       
      WNO (K) = 0                                                       
      WNO2(K) = 0                                                       
      WSO2(K) = 0                                                       
      WHNO3(K)= 0                                                       
      DO 10 KM = 1,15                                                   
      JCHAR(KM) = ' '                                                   
      IF(KM. GT. 12) GO TO 10                                           
      WMOL(KM) = 0.                                                     
10    CONTINUE                                                          
      JCHARX = ' '                                                      
C                                                                       
C                                                                       
C        PARAMETERS - JCHAR = INPUT KEY (SEE BELOW)                     
C                                                                       
C                                                                       
C     ***  ROUTINE ALSO ACCEPTS VARIABLE UNITS ON PRESS AND TEMP        
C                                                                       
C          SEE INPUT KEY BELOW                                          
C                                                                       
C                                                                       
C                                                                       
C     FOR MOLECULAR SPECIES ONLY                                        
C                                                                       
C       JCHAR   JUNIT                                                   
C                                                                       
C     " ",A      10    VOLUME MIXING RATIO (PPMV)                       
C         B      11    NUMBER DENSITY (CM-3)                            
C         C      12    MASS MIXING RATIO (GM(K)/KG(AIR))                
C         D      13    MASS DENSITY (GM M-3)                            
C         E      14    PARTIAL PRESSURE (MB)                            
C         F      15    DEW POINT TEMP (TD IN T(K)) - H2O ONLY           
C         G      16     "    "     "  (TD IN T(C)) - H2O ONLY           
C         H      17    RELATIVE HUMIDITY (RH IN PERCENT) - H2O ONLY     
C         I      18    AVAILABLE FOR USER DEFINITION                    
C        1-6    1-6    DEFAULT TO SPECIFIED MODEL ATMOSPHERE            
C                                                                       
C     ****************************************************************  
C     ****************************************************************  
C                                                                       
C     ***** OTHER 'JCHAR' SPECIFICATIONS -                              
C                                                                       
C       JCHAR   JUNIT                                                   
C                                                                       
C      " ",A     10    PRESSURE IN (MB)                                 
C          B     11       "     "  (ATM)                                
C          C     12       "     "  (TORR)                               
C         1-6   1-6    DEFAULT TO SPECIFIED MODEL ATMOSPHERE            
C                                                                       
C      " ",A     10    AMBIENT TEMPERATURE IN DEG(K)                    
C          B     11       "         "       "  " (C)                    
C          C     12       "         "       "  " (F)                    
C         1-6   1-6    DEFAULT TO SPECIFIED MODEL ATMOSPHERE            
C                                                                       
C     ***** DEFINITION OF "DEFAULT" CHOICES FOR PROFILE SELECTION ***** 
C                                                                       
C      FOR THE USER WHO WISHES TO ENTER ONLY SELECTED ORIGINAL          
C      VERTICAL PROFILES AND WANTS STANDARD ATMOSPHERE SPECIFICATIONS   
C      FOR THE OTHERS, THE FOLLOWING OPTION IS AVAILABLE                
C                                                                       
C     *** JCHAR(P,T OR K) MUST = 1-6 (AS ABOVE)                         
C                                                                       
C      FOR MOLECULES 8-35, ONLY US STD PROFILES ARE AVIALABLE           
C      THEREFORE, WHEN  'JCHAR(K) = 1-5', JCHAR(K) WILL BE RESET TO 6   
C                                                                       
C                                                                       
      IF(IRD0 .EQ. 1) THEN                                              
Calley          READ(IRD,80)ZM(K),P(K),T(K),WMOL(1),WMOL(2),WMOL(3),    
Calley     X     (JCHAR(KM),KM=1,15),JCHARX                             
           ZM(K) = ZMDLIN(K)                                            
           P(K) = PIN(K)                                                
           T(K) = TIN(K)                                                
           WMOL(1) = WMOLIN(1,K)                                        
           WMOL(2) = WMOLIN(2,K)                                        
           WMOL(3) = WMOLIN(3,K)                                        
           DO KM=1,15                                                   
               JCHAR(KM) = JCHARIN(KM,K)                                
           END DO                                                       
           JCHARX = JCHARXIN(K)                                         
80         FORMAT ( F10.3,5E10.3,15A1,A1)                               
Calley          WRITE(IPR,81)ZM(K),P(K),T(K),WMOL(1),WMOL(2),WMOL(3),   
Calley     X     JCHAR,JCHARX                                           
           IF (IPR .GT. 0) WRITE(IPR,81)ZM(K),P(K),T(K),WMOL(1),        
     X                                  WMOL(2),WMOL(3),JCHAR,JCHARX    
81         FORMAT (F10.3,1P5E10.3,10X,15A1,A1)                          
      ENDIF                                                             
      IF(IRD1 .EQ. 1) THEN                                              
Calley         READ(IRD,83)(WMOL(KM),KM=4,12)                           
         DO KM=4,12                                                     
             WMOL(KM) = WMOLIN(KM,K)                                    
         END DO                                                         
 83      FORMAT((8E10.3))                                               
Calley         WRITE(IPR,84)(WMOL(KM),KM=4,12)                          
         IF (IPR .GT. 0) WRITE(IPR,84)(WMOL(KM),KM=4,12)                
 84      FORMAT((1P8E10.3))                                             
         IF (MDEF .EQ. 2) THEN                                          
C           THE EXTRA SPECIES (I. E., THE WMOLX SPECIES) WILL BE READ IF
C           MDEF .EQ. 2 AND IRD1 .EQ. 1.                                
C           THEY WILL BE READ 8 SPECIES AT A TIME UNTIL ALL SPECIES ARE 
C           READ.                                                       
            NROWX = INT(REAL(NSPECX)/REAL(8))+1                         
            MROWX = MOD(NSPECX,8)                                       
            IF (MROWX .EQ. 0) THEN                                      
               MAXROW =  NROWX-1                                        
            ELSE                                                        
               MAXROW = NROWX                                           
            ENDIF                                                       
            DO 85 KROWX = 1, MAXROW                                     
               IBEGX = (KROWX-1)*8+1                                    
               IENDX = IBEGX+8-1                                        
               IF (KROWX .EQ. NROWX) IENDX = IBEGX + MROWX-1            
Calley               READ(IRD,83)(WMOLX(KMX),KMX=IBEGX,IENDX)           
               DO KMX=IBEGX,IENDX                                       
                   WMOLX(KMX) = XMOLIN(KMX,K)                           
               END DO                                                   
Calley               WRITE(IPR,84)(WMOLX(KMX),KMX=IBEGX,IENDX)          
               IF (IPR .GT. 0)WRITE(IPR,84)(WMOLX(KMX),KMX=IBEGX,IENDX) 
 85         CONTINUE                                                    
         ENDIF                                                          
      ENDIF                                                             
C                                                                       
C                                                                       
C     AHAZE =  AEROSOL VISIBLE EXTINCTION COFF (KM-1)                   
C     AT A WAVELENGTH OF 0.55 MICROMETERS                               
C                                                                       
C     EQLWCZ=LIQUID WATER CONTENT (PPMV) AT ALT Z                       
C            FOR AEROSOL, CLOUD OR FOG MODELS                           
C                                                                       
C     RRATZ=RAIN RATE (MM/HR) AT ALT Z                                  
C                                                                       
C     IHA1 AEROSOL MODEL USED FOR SPECTRAL DEPENDENCE OF EXTINCTION     
C                                                                       
C     IVUL1 STRATOSPHERIC AEROSOL MODEL USED FOR SPECTRAL DEPENDENCE    
C     OF EXT AT Z                                                       
C                                                                       
C     ICLD1 CLOUD MODEL USED FOR SPECTRAL DEPENDENCE OF EXT AT Z        
C                                                                       
C     ONLY ONE OF IHA1,ICLD1  OR IVUL1 IS ALLOWED                       
C     IHA1 NE 0 OTHERS IGNORED                                          
C     IHA1 EQ 0 AND ICLD1 NE 0 USE ICLD1                                
C                                                                       
C     IF AHAZE AND EQLWCZ ARE BOUTH ZERO                                
C        DEFAULT PROFILE ARE LOADED FROM IHA1,ICLD1,IVUL1               
C     ISEA1 = AEROSOL SEASON CONTROL FOR ALTITUDE Z                     
C                                                                       
C     ICHR  CHANGE AEROSOL PROFILE REGION FOR IHA1 = 7                  
C                                                                       
      IF(IRD2 .EQ. 1) THEN                                              
Calley           READ(IRD,82) AHAZE,EQLWCZ,RRATZ,IHA1,ICLD1,IVUL1,ISEA1,
Calley     X ICHR                                                       
           AHAZE = AHAZEX(K)                                            
           EQLWCZ = EQLWCZX(K)                                          
           RRATZ = RRATZX(K)                                            
           IHA1 = IHA1X(K)                                              
           ICLD1 = ICLD1X(K)                                            
           IVUL1 = IVUL1X(K)                                            
           ISEA1 = ISEA1X(K)                                            
           ICHR = ICHR1X(K)                                             
Calley         WRITE(IPR,82) AHAZE,EQLWCZ,RRATZ,IHA1,ICLD1,IVUL1,ISEA1, 
Calley     X ICHR                                                       
           IF (IPR .GT. 0) WRITE(IPR,82) AHAZE,EQLWCZ,RRATZ,IHA1,ICLD1, 
     X                                   IVUL1,ISEA1,ICHR               
82         FORMAT(10X,3F10.3,5I5)                                       
      ELSE                                                              
           RRATZ = RAINRT                                               
           IF(ZM(K).GT.6.)RRATZ = 0                                     
      ENDIF                                                             
      ICLDS = ICLD1                                                     
      IF( ICHR.EQ. 1) THEN                                              
         IF(IHA1. EQ. 0) THEN                                           
             IF(ICLD1. NE. 11) ICHR = 0                                 
         ELSE                                                           
             IF(IHA1 . NE.  7) ICHR = 0                                 
         ENDIF                                                          
      ENDIF                                                             
      IF(MODEL .EQ. 0) THEN                                             
           HMDLZ(1) =   ZM(K)                                           
           HMDLZ(2) =    P(K)                                           
           HMDLZ(3) =    T(K)                                           
           HMDLZ(4) = WMOL(1)                                           
           HMDLZ(5) = WMOL(2)                                           
           HMDLZ(6) = WMOL(3)                                           
           HMDLZ(7) = AHAZE                                             
      ENDIF                                                             
      DO 12 KM = 1,15                                                   
         JUNIT(KM) = JOU(JCHAR(KM))                                     
 12   CONTINUE                                                          
      JUNITX = JOU(JCHARX)                                              
      IF(IRD0 .EQ. 0) THEN                                              
          JUNIT(1) = M1                                                 
          JUNIT(2) = M1                                                 
          JUNIT(3) = M2                                                 
          JUNIT(4) =  6                                                 
          JUNIT(5) = M3                                                 
          JUNIT(6) = M5                                                 
          JUNIT(7) = M6                                                 
          JUNIT(8) = M4                                                 
          JUNIT(9) =  6                                                 
          JUNIT(10)=  6                                                 
          JUNIT(11)=  6                                                 
          JUNIT(12)=  6                                                 
          JUNIT(13)=  6                                                 
          JUNIT(14)=  6                                                 
          JUNIT(15)=  6                                                 
          JUNITX = 6                                                    
      ELSE                                                              
          BL = ' '                                                      
          IF((M1   .GT.0).AND.(JCHAR(1).EQ.BL))                         
     X    JUNIT(1) = M1                                                 
          IF((M1   .GT.0).AND.(JCHAR(2).EQ.BL))                         
     X    JUNIT(2) = M1                                                 
          IF((M2   .GT.0).AND.(JCHAR(3).EQ.BL))                         
     X    JUNIT(3) = M2                                                 
          IF((MDEF .GT.0).AND.(JCHAR(4).EQ.BL))                         
     X    JUNIT(4) = 6                                                  
          IF((M3   .GT.0).AND.(JCHAR(5).EQ.BL))                         
     X    JUNIT(5) = M3                                                 
          IF((M5   .GT.0).AND.(JCHAR(6).EQ.BL))                         
     X    JUNIT(6) = M5                                                 
          IF((M6   .GT.0).AND.(JCHAR(7).EQ.BL))                         
     X    JUNIT(7) = M6                                                 
          IF((M4   .GT.0).AND.(JCHAR(8).EQ.BL))                         
     X    JUNIT(8) = M4                                                 
          IF((MDEF .GT.0).AND.(JCHAR(9).EQ.BL))                         
     X    JUNIT(9) = 6                                                  
          IF((MDEF .GT.0).AND.(JCHAR(10).EQ.BL))                        
     X    JUNIT(10)= 6                                                  
          IF((MDEF .GT.0).AND.(JCHAR(11).EQ.BL))                        
     X    JUNIT(11)= 6                                                  
          IF((MDEF .GT.0).AND.(JCHAR(12).EQ.BL))                        
     X    JUNIT(12)= 6                                                  
          IF((MDEF .GT.0).AND.(JCHAR(13).EQ.BL))                        
     X    JUNIT(13)= 6                                                  
          IF((MDEF .GT.0).AND.(JCHAR(14).EQ.BL))                        
     X    JUNIT(14)= 6                                                  
          IF((MDEF .GT.0).AND.(JCHARX   .EQ.BL))                        
     X    JUNITX   = 6                                                  
      ENDIF                                                             
      IF(ICONV .EQ. 1) THEN                                             
         CALL CHECK(P(K),JUNIT(1),1)                                    
         CALL CHECK(T(K),JUNIT(2),2)                                    
         CALL DEFALT(ZM(K),P(K),T(K))                                   
         CALL CONVRT (P(K),T(K))                                        
         WMOL(1) = WMOL(1) * H2O                                        
         WMOL(3) = WMOL(3) * O3                                         
         WMOL(6) = WMOL(6) * CH4                                        
         WMOL(7) = WMOL(7) * O2                                         
         WMOL(9) = WMOL(9) * SO2                                        
         T(K)    = T(K) + TEMPADJ                                       
         WH(K)    = WMOL(1)                                             
         WCO2(K)  = WMOL(2)                                             
         WO(K)    = WMOL(3)                                             
         WN2O(K)  = WMOL(4)                                             
         WCO(K)   = WMOL(5)                                             
         WCH4(K)  = WMOL(6)                                             
         WO2(K)   = WMOL(7)                                             
         WNO(K)   = WMOL(8)                                             
         WSO2(K)  = WMOL(9)                                             
         WNO2(K)  = WMOL(10)                                            
         WNH3(K)  = WMOL(11)                                            
         WHNO3(K) = WMOL(12)                                            
         WAIR(K)  = WAIR1                                               
         DO 500 I = 1, NSPECX                                           
            WMOLXT(I,K) = WMOLX(I)                                      
 500     CONTINUE                                                       
      ELSE                                                              
         CALL VSANSM(K,AHAZE,IHA1,ZNEW)                                 
         ZM(K) = ZNEW                                                   
      ENDIF                                                             
C                                                                       
C                                                                       
C     GNDALT NOT ZERO                                                   
C                                                                       
      ZSC=ZM(K)                                                         
      IF(GNDALT.GT.0. .AND. ZM(K).LT.6.)THEN                            
           ASC=6./(6.-GNDALT)                                           
           CON=-ASC*GNDALT                                              
           ZSC=ASC*ZM(K)+CON -1.E-4                                     
           IF(ZSC.LT.0.)ZSC=0.                                          
      ENDIF                                                             
      ZGN(K)=ZSC                                                        
C                                                                       
C                                                                       
      IF(ICLD1.EQ.0) ICLD1=ICLD                                         
      IF(ICLD1.GT.11) ICLD1=0                                           
      IF(IHA1.NE.0) IVUL1=0                                             
      IF(IHA1.NE.0) ICLD1=0                                             
      IF(ICLD1.NE.0) IVUL1=0                                            
      IF((AHAZE.NE.0.).OR.(EQLWCZ.NE.0.)) GO TO 8                       
C      ********        ERRATA SEPT 19                                   
CC    IF(RRATZ.NE.0.) GO TO 8                                           
C      *****           END ERRATA                                       
      IF((IVSA.EQ.1).AND.(ICLD1.EQ.0)) THEN                             
           IF(MODEL.NE.7)CALL LAYVSA(K,RH,AHAZE,IHA1,ZM)                
      ELSE                                                              
           CALL LAYCLD(K,EQLWCZ,RRATZ,ICLD1,GNDALT)                     
C          ***********************  ERRATA SEPT 19                      
           IF(RAINRT.GT.0. AND. ZM(K).LT.6.)RRATZ=RAINRT                
C           *********************      END ERRATA                       
           IF(ICLD1 . LT.  1) GO TO 8                                   
           IF(ICLD1 . GT. 10) GO TO 8                                   
C     ***************  ERRATA JUNE 21 89 NEXT CARD                      
           IF(ZM(K).GT.CLDTOP(ICLD1)+GNDALT)THEN                        
C     ***************  END ERRATA                                       
              RRATZ = 0.                                                
           ENDIF                                                        
      ENDIF                                                             
8     CONTINUE                                                          
      ICLDC = ICLD                                                      
      IF(ICLDS .NE. 0) ICLDC = ICLDS                                    
C                                                                       
      IF(ICLDS. EQ. 18 .OR. ICLDS .EQ. 19) THEN                         
           IF(AHAZE . GT. 0) THEN                                       
                DENSTY(16,K) = AHAZE                                    
                AHAZE    = 0.                                           
                GO TO 46                                                
           ENDIF                                                        
           IF(EQLWCZ .GT. 0) THEN                                       
                IF(ICLDS .EQ. 18) CON = 3.446E-3                        
                IF(ICLDS .EQ. 19) CON = 5.811E-2                        
                DENSTY(16,K) = EQLWCZ/CON                               
                EQLWCZ = 0.                                             
                GO TO 46                                                
           ENDIF                                                        
      ENDIF                                                             
      IF(ICLDC.EQ.18 .OR. ICLDC.EQ.19)THEN                              
          IF(ZM(K).LE.CLD0 .OR. ZM(K).GE.CLD3)THEN                      
              DENSTY(16,K)=0.                                           
          ELSEIF(ZM(K).LT.CLD1)THEN                                     
              DENSTY(16,K)=CEXT*(ZM(K)-CLD0)/CLDD                       
          ELSEIF(ZM(K).LE.CLD2)THEN                                     
              DENSTY(16,K)=CEXT                                         
          ELSE                                                          
              DENSTY(16,K)=CEXT*(CLD3-ZM(K))/CLDD                       
          ENDIF                                                         
      ENDIF                                                             
46    DENSTY(66,K)=EQLWCZ                                               
      IF(ICLDS.EQ.0. AND. DENSTY(66,K).EQ.0.)ICLD1=0                    
      DENSTY(3,K)=RRATZ                                                 
      IF(MODEL  .EQ. 0 .OR. MODEL .EQ. 7) THEN                          
C     DONT CHANGE RH                                                    
      ELSE                                                              
            IF(EQLWCZ.GT.0.0) RH=100.0                                  
            IF(RRATZ .GT.0.0) RH=100.0                                  
      ENDIF                                                             
      AHAST(K)=AHAZE                                                    
C     IHA1  IS IHAZE FOR THIS LAYER                                     
C     ISEA1 IS ISEASN FOR THIS LAYER                                    
C     IVUL1 IS IVULCN FOR THE LAYER                                     
      IF(ISEA1.EQ.0) ISEA1=ISEASN                                       
      ITYAER=IHAZE                                                      
      IF(IHA1.GT.0) ITYAER=IHA1                                         
      IF(IVUL1.GT.0) IVULCN=IVUL1                                       
      IF(IVUL1.LE.0) IVUL1=IVULCN                                       
C                                                                       
      IF(K.EQ.1) GO TO 23                                               
      IF(ICHR .EQ. 1) GO TO 20                                          
      IF(ICLD1.NE.IREGC(IC1))GO TO 19                                   
      IF(IHA1 .EQ. 0 .AND. ICLD1. EQ. 0) THEN                           
           IF(ZSC.GT.2.)ITYAER=6                                        
           IF(ZSC.GT.10.)ITYAER=IVULCN+10                               
           IF(ZSC.GT.30.) ITYAER=19                                     
           IF(ITYAER.EQ.ICH(IC1))GO TO 23                               
      ENDIF                                                             
      IF(ICLD1 .EQ. 0 .AND. IHA1.EQ. 0) GO TO 20                        
      N = 7                                                             
      IF(IC1 .GT. 1) N= IC1 + 10                                        
      IF(IHA1 .EQ. 0) GO TO 23                                          
      IF(IHA1 .NE.ICH(IC1)) GO TO 20                                    
      GO TO 23                                                          
19    IF(ICLD1 .NE. 0) THEN                                             
           IF(ICLD1. EQ. IREGC(1)) THEN                                 
               N = 7                                                    
               ALTB(1) = ZM(K)                                          
               GO TO 24                                                 
           ENDIF                                                        
           IF(IC1 .EQ. 1) GO TO 20                                      
           IF(ICLD1. EQ. IREGC(2)) THEN                                 
               N = 12                                                   
               ALTB(2) = ZM(K)                                          
               GO TO 24                                                 
           ENDIF                                                        
           IF(IC1 .EQ. 2) GO TO 20                                      
           IF(ICLD1. EQ. IREGC(3)) THEN                                 
               N = 13                                                   
               ALTB(3) = ZM(K)                                          
               GO TO 24                                                 
           ENDIF                                                        
      ELSE                                                              
            IF(IHA1 .EQ. 0 .AND. ICLD1. EQ. 0) THEN                     
                 IF(ZSC.GT.2.)ITYAER=6                                  
                 IF(ZSC.GT.10.)ITYAER=IVULCN+10                         
                 IF(ZSC.GT.30.) ITYAER=19                               
            ENDIF                                                       
           IF(ITYAER.EQ.ICH(  1))THEN                                   
               N = 7                                                    
               ALTB(1) = ZM(K)                                          
               GO TO 24                                                 
           ENDIF                                                        
           IF(IC1 .EQ. 1) GO TO 20                                      
           IF(ITYAER.EQ.ICH(  2))THEN                                   
               N = 12                                                   
               ALTB(2) = ZM(K)                                          
               GO TO 24                                                 
           ENDIF                                                        
           IF(IC1 .EQ. 2) GO TO 20                                      
           IF(ITYAER.EQ.ICH(  3))THEN                                   
               N = 13                                                   
               ALTB(3) = ZM(K)                                          
               GO TO 24                                                 
           ENDIF                                                        
      ENDIF                                                             
20    IC1=IC1+1                                                         
C                                                                       
C                                                                       
C                                                                       
      N=IC1+10                                                          
      IF(RH.GT.0.) RHH=RH                                               
      IF(IC1.LE.4) GO TO 23                                             
      IC1=4                                                             
      N=14                                                              
      ITYAER=ICH(IC1)                                                   
23    ICH(IC1)=ITYAER                                                   
      IREGC(IC1) = ICLD1                                                
      ALTB(IC1) = ZM(K)                                                 
C                                                                       
C     FOR LVSA OR CLD OR RAIN ONLY                                      
C                                                                       
24    IF (RH.GT.  0.0) THEN                                             
            TA=T0/T(K)                                                  
            WH(K)  =F(TA)*0.01*RH                                       
C                                                                       
      ENDIF                                                             
   40 CONTINUE                                                          
      DENSTY(7,K)=0.                                                    
      DENSTY(12,K)=0.                                                   
      DENSTY(13,K)=0.                                                   
      DENSTY(14,K)=0.                                                   
      DENSTY(15,K)=0.                                                   
      TS=273.15/T(K)                                                    
      WTEMP=WH(K)                                                       
      RELHUM(K)=0.                                                      
      IF(WTEMP.LE.0.) GO TO 45                                          
      RELHUM(K) = 100.0*WTEMP/F(TS)                                     
Calley      IF(RELHUM(K).GT.100.)WRITE(IPR,930)RELHUM(K),ZM(K)          
      IF(RELHUM(K).GT.100.0 .AND. IPR.GT.0)WRITE(IPR,930)RELHUM(K),ZM(K)
      IF( RELHUM(K) .GT. 100.) RELHUM(K)=100.                           
Calley      IF(RELHUM(K).LT.0.)WRITE(IPR,930)RELHUM(K),ZM(K)            
      IF(RELHUM(K).LT.0.0 .AND. IPR.GT.0) WRITE(IPR,930)RELHUM(K),ZM(K) 
930   FORMAT(' ***ERROR RELHUM ' ,E15.4,'  AT ALT  ',F12.3)             
      IF( RELHUM(K) .LT.   0.) RELHUM(K)=0.                             
45    RHH=RELHUM(K)                                                     
      RH=RHH                                                            
      IF (VIS1.LE.0.0) VIS1=VIS                                         
      IF (AHAZE.EQ.0.0) GO TO 47                                        
      DENSTY(N,K)=AHAZE                                                 
      IF(ITYAER.EQ.3) GO TO 47                                          
      IF(ITYAER.EQ.10)GO TO 47                                          
C     AHAZE IS IN LOWTRAN NUMBER DENSTY UNITS                           
      GO TO 50                                                          
47    CONTINUE                                                          
C                                                                       
C     AHAZE NOT INPUT OR NAVY MARITIME MODEL IS CALLED                  
C                                                                       
C     CHECK IF GNDALT NOT ZERO                                          
C                                                                       
      IF(GNDALT.GT.0. .AND. ZM(K).LT.6.)THEN                            
           J=IFIX(ZSC+1.0E-6)+1                                         
           FAC=ZSC-FLOAT(J-1)                                           
      ELSE                                                              
      J=IFIX(ZM(K)+1.0E-6)+1                                            
      IF(ZM(K).GE.25.)J=IFIX((ZM(K)-25.)/ 5.+26.)                       
      IF(ZM(K).GE.50.)J=IFIX((ZM(K)-50.)/20.+31.)                       
      IF(ZM(K).GE.70.)J=IFIX((ZM(K)-70.)/30.+32.)                       
      IF (J.GT.32) J=32                                                 
      FAC=ZM(K)-FLOAT(J-1)                                              
      IF (J.LT.26) GO TO 125                                            
      FAC=(ZM(K)-5.*FLOAT(J-26)-25.)/5.                                 
      IF(J.GE.31)FAC=(ZM(K)-50.)/20.                                    
      IF(J.GE.32)FAC=(ZM(K)-70.)/30.                                    
      ENDIF                                                             
125   L=J+1                                                             
      IF (FAC.GT.1.0) FAC=1.0                                           
      IF(ITYAER.EQ.3.AND.ICL.EQ.0)THEN                                  
           CALL MARINE(VIS1,MODEL,WSS,WHH,ICSTL,EXTC,ABSC,IC1)          
           IREG(IC1) = 1                                                
           VIS=VIS1                                                     
           ICL = ICL + 1                                                
      ENDIF                                                             
      IF(ITYAER.EQ.10.AND.IDSR.EQ.0)THEN                                
           CALL DESATT(WSS,VIS1)                                        
           IREG(IC1) = 1                                                
           VIS=VIS1                                                     
           IDSR = IDSR + 1                                              
      ENDIF                                                             
      IF(AHAZE.GT.0.0) GO TO 50                                         
      IF(IHA1.LE.0) IHA1=IHAZE                                          
Calley      CALL CLDPRF(K,ICLD1,IHA1,IC1,ICH(IC1),HAZECZ)               
      CALL CLDPRF(K,ICLD1,IHA1,IC1,ICH(IC1),HAZECZ,IPR)                 
      CALL AERPRF(J,  VIS1,HAZ1,IHA1,      ISEA1,IVUL1,NN)              
      CALL AERPRF(L,  VIS1,HAZ2,IHA1,      ISEA1,IVUL1,NN)              
      HAZE=0.                                                           
      IF ((HAZ1.LE.0.0).OR.(HAZ2.LE.0.0)) GO TO 48                      
      HAZE=HAZ1*(HAZ2/HAZ1)**FAC                                        
48    CONTINUE                                                          
      IF(DENSTY(66,K).GT.0.)HAZE=HAZECZ                                 
      DENSTY(N,K)=HAZE                                                  
50    CONTINUE                                                          
      ITY1(K)=ITYAER                                                    
      IH1(K)=IHA1                                                       
      IF(AHAZE.NE.0)IH1(K)=-99                                          
      IS1(K)=ISEA1                                                      
      IVL1(K)=IVUL1                                                     
100   CONTINUE                                                          
C                                                                       
C     END OF LOOP                                                       
C                                                                       
      IHH=ICLD                                                          
      IF(IHH.LE.0) IHH=12                                               
      IF(IHH.GT.12)IHH=12                                               
      IF(ICLD.GE.18)IHH=13                                              
      DO 105 II=1,5                                                     
      HHOL(II)=AHAHOL(II,IHH)                                           
      IF(IVSA.NE.0) HHOL(II)=AHLVSA(II)                                 
105   CONTINUE                                                          
Calley      IF(ICLD .NE. 0) THEN                                        
      IF(ICLD.NE.0 .AND. IPR.GT.0) THEN                                 
           IF(JPRT.EQ.0)WRITE (IPR,904) HHOL                            
904        FORMAT(//'0 CLOUD AND OR RAIN TYPE CHOSEN IS   ',5A4)        
      ENDIF                                                             
Calley      IF(JPRT.EQ.0)WRITE(IPR,905)                                 
      IF(JPRT.EQ.0 .AND. IPR.GT.0)WRITE(IPR,905)                        
C                                                                       
C 905 FORMAT(//,T7,'Z',T17,'P',T26,'T',T32,'REL H', T41,'H2O',          
905   FORMAT(1H1,//,T7,'Z',T17,'P',T26,'T',T32,'REL H', T41,'H2O',      
     1 T49,'CLD AMT',T59,'RAIN RATE', T90,'AEROSOL'/,                   
     2 T6,'(KM)',T16,'(MB)',T25,'(K)',T33,'(%)',T39,'(GM M-3)',T49,     
     3 '(GM M-3)',T59,'(MM HR-1)',T69,                                  
     4 'TYPE', T90,'PROFILE')                                           
      IF(JPRT.EQ.1) RETURN                                              
      DO 60 KK=1,ML                                                     
      DO 52 IJ=1,5                                                      
      AHOL1(IJ)=BLANK                                                   
      AHOL2(IJ)=BLANK                                                   
52    AHOL3(IJ)=BLANK                                                   
      ITYAER=ITY1(KK)                                                   
      IF(ITYAER.LE.0) ITYAER=1                                          
      IF(ITYAER . EQ.  16) ITYAER = 11                                  
      IF(ITYAER . EQ.  17) ITYAER = 11                                  
      IF(ITYAER . EQ.  18) ITYAER = 13                                  
C     ***************  ERRATA JUNE 21 89 NEXT CARD                      
      IF(ITYAER . EQ.  19) ITYAER = 11                                  
C     ***************  END ERRATA                                       
      IHA1=IH1(KK)                                                      
      ISEA1=IS1(KK)                                                     
      IVUL1=IVL1(KK)                                                    
      DO 54 IJ=1,5                                                      
      AHOL1(IJ)=  HZ(IJ,ITYAER)                                         
      IF(IVSA.EQ.1) AHOL1(IJ)=HHOL(IJ)                                  
      IF(DENSTY(66,KK).GT.0. .OR. DENSTY(3,KK).GT.0.)AHOL1(IJ)=HHOL(IJ) 
      IF(IHAZE.EQ.0) AHOL1(IJ)=HHOL(IJ)                                 
      AHOL2(IJ)=AHUS(IJ)                                                
      IF(AHAST(KK).EQ.0) AHOL2(IJ)=AHOL1(IJ)                            
      IF(DENSTY(66,KK).GT.0. .OR. DENSTY(3,KK).GT.0.)AHOL2(IJ)=HHOL(IJ) 
54    IF (ZGN(KK).GT.2.0) AHOL3(IJ)=SEASN(IJ,ISEA1)                     
Calley60    WRITE(IPR,915)ZM(KK),P(KK),T(KK),RELHUM(KK),WH(KK),         
Calley     1  DENSTY(66,KK),DENSTY(3,KK),AHOL1,AHOL2,AHOL3              
      IF (IPR .GT. 0) WRITE(IPR,915) ZM(KK),P(KK),T(KK),RELHUM(KK),     
     +              WH(KK),DENSTY(66,KK),DENSTY(3,KK),AHOL1,AHOL2,AHOL3 
60    CONTINUE                                                          
915   FORMAT(2F10.3,2F8.2,1P3E10.3,1X,5A4,5A4,5A4)                      
      RETURN                                                            
C                                                                       
925   FORMAT(//,' MODEL ATMOSPHERE NO. ',I5,' ICLD =',I5,//)            
      END                                                               
      SUBROUTINE AERPRF (I,  VIS,HAZE,IHAZE,     ISEASN,IVULCN,N)       
C***********************************************************************
C     WILL COMPUTE DENSITY    PROFILES FOR AEROSOLS                     
C***********************************************************************
      COMMON/PRFD  /ZHT(34),HZ2K(34,5),FAWI50(34),                      
     1FAWI23(34),SPSU50(34),SPSU23(34),BASTFW(34),                      
     2VUMOFW(34),HIVUFW(34),EXVUFW(34),BASTSS(34),                      
     3VUMOSS(34),HIVUSS(34),EXVUSS(34),UPNATM(34),                      
     3VUTONO(34),VUTOEX(34),EXUPAT(34)                                  
      DIMENSION VS(5)                                                   
      DATA VS/50.,23.,10.,5.,2./                                        
      HAZE=0.                                                           
      N=7                                                               
      IF (IHAZE.EQ.0) RETURN                                            
      IF (ZHT(I).GT.2.0) GO TO 15                                       
      DO 5 J=2,5                                                        
      IF (VIS.GE.VS(J)) GO TO 10                                        
    5 CONTINUE                                                          
      J=5                                                               
   10 CONST=1./(1./VS(J)-1./VS(J-1))                                    
      HAZE=CONST*( (HZ2K(I,J)-HZ2K(I,J-1))/VIS +                        
     1 HZ2K(I,J-1)/VS(J) - HZ2K(I,J )/VS(J-1) )                         
      IF(ZHT(I).GT.2.0) GO TO 15                                        
      RETURN                                                            
   15 IF (ZHT(I).GT.10.) GO TO 35                                       
      CONST=1./(1./23.-1./50.)                                          
      IF (ISEASN.GT.1) GO TO 25                                         
      IF (VIS.LE.23.) HAZI=SPSU23(I)                                    
      IF (VIS.LE.23.) GO TO 200                                         
      IF (ZHT(I).GT.4.0) GO TO 20                                       
      HAZI=CONST*((SPSU23(I)-SPSU50(I))/VIS+SPSU50(I)/23.-SPSU23(I)/50.)
      GO TO 200                                                         
   20 HAZI=SPSU50(I)                                                    
      GO TO 200                                                         
   25 IF (VIS.LE.23.) HAZI=FAWI23(I)                                    
      IF (VIS.LE.23.) GO TO 200                                         
      IF (ZHT(I).GT.4.0) GO TO 30                                       
      HAZI=CONST*((FAWI23(I)-FAWI50(I))/VIS+FAWI50(I)/23.-FAWI23(I)/50.)
      GO TO 200                                                         
   30 HAZI=FAWI50(I)                                                    
      GO TO 200                                                         
   35 IF (ZHT(I).GT.30.0) GO TO 75                                      
      HAZI=BASTSS(I)                                                    
      IF (ISEASN.GT.1) GO TO 55                                         
      IF (IVULCN.EQ.0) HAZI=BASTSS(I)                                   
      IF (IVULCN.EQ.0) GO TO 200                                        
      GO TO (40,45,50,50,45,45,50,52), IVULCN                           
   40 HAZI=BASTSS(I)                                                    
      GO TO 200                                                         
   45 HAZI=VUMOSS(I)                                                    
      GO TO 200                                                         
   50 HAZI=HIVUSS(I)                                                    
      GO TO 200                                                         
52    HAZI=EXVUSS(I)                                                    
      GO TO 200                                                         
   55 IF (IVULCN.EQ.0) HAZI=BASTFW(I)                                   
      IF (IVULCN.EQ.0) GO TO 200                                        
      GO TO (60,65,70,70,65,65,70,72), IVULCN                           
   60 HAZI=BASTFW(I)                                                    
      GO TO 200                                                         
   65 HAZI=VUMOFW(I)                                                    
      GO TO 200                                                         
   70 HAZI=HIVUFW(I)                                                    
      GO TO 200                                                         
72    HAZI=EXVUFW(I)                                                    
      GO TO 200                                                         
   75 N=14                                                              
      IF (IVULCN.GT.1) GO TO 80                                         
      HAZI=UPNATM(I)                                                    
      GO TO 200                                                         
   80 HAZI=VUTONO(I)                                                    
200   IF(HAZI.GT.0) HAZE=HAZI                                           
      RETURN                                                            
      END                                                               
      SUBROUTINE AERTMP                                                 
C                                                                       
C     THIS ROUTINE DETERMINES AEROSOL DENSITY                           
C     WEIGHTED PATH AVERAGED TEMPERATURES                               
      INCLUDE 'PARAM.LST'                                               
      INTEGER KPOINT                                                    
      REAL WAVLEN,EXTC,ABSC,ASYM,AWCCON,TX,W,RELHUM,PATM,TBBY,WPATH     
      COMMON/BASE/WAVLEN(MXWVLN),EXTC(NAER,MXWVLN),ABSC(NAER,MXWVLN),   
     1  ASYM(NAER,MXWVLN),AWCCON(NAER),KPOINT(NSPC),TX(KMAX),W(KMAX),   
     2  RELHUM(LAYDIM),PATM(LAYTHR),TBBY(LAYTHR),WPATH(LAYTHR,KMAX)     
      INTEGER IKMAX,ML,ISSGEO,IMULT                                     
      COMMON/CNTRL/IKMAX,ML,ISSGEO,IMULT                                
      REAL TAER                                                         
      COMMON/AERTM/TAER(NAER)                                           
C                                                                       
C     DECLARE LOCAL VARIABLES                                           
      INTEGER IAER,M,IK                                                 
C                                                                       
C     LIST DATA                                                         
      INTEGER MAP(NAER)                                                 
      DATA MAP/7,12,13,14,16,66,67/                                     
      DO 20 IAER=1,NAER                                                 
          M=MAP(IAER)                                                   
          TAER(IAER)=TBBY(1)                                            
          IF(W(M).LE.0)GOTO20                                           
          TAER(IAER)=TBBY(1)*WPATH(1,M)                                 
          DO 10 IK=2,IKMAX                                              
              TAER(IAER)=TAER(IAER)+TBBY(IK)*WPATH(IK,M)                
   10     CONTINUE                                                      
          TAER(IAER)=TAER(IAER)/W(M)                                    
   20 CONTINUE                                                          
      RETURN                                                            
      END                                                               
      FUNCTION   AITK(ARG,VAL,X,NDIM)                                   
C                                                                       
C      IBM SCIENTIFIC SUBROUTINE                                        
C     AITKEN INTERPOLATION ROUTINE                                      
C                                                                       
      DIMENSION ARG(NDIM),VAL(NDIM)                                     
      IF(NDIM-1)9,7,1                                                   
C                                                                       
C     START OF AITKEN-LOOP                                              
    1 DO 6 J=2,NDIM                                                     
      IEND=J-1                                                          
      DO 2 I=1,IEND                                                     
      H=ARG(I)-ARG(J)                                                   
      IF(H)2,13,2                                                       
    2 VAL(J)=(VAL(I)*(X-ARG(J))-VAL(J)*(X-ARG(I)))/H                    
    6 CONTINUE                                                          
C     END OF AITKEN-LOOP                                                
C                                                                       
    7 J=NDIM                                                            
    8 AITK=VAL(J)                                                       
    9 RETURN                                                            
C                                                                       
C     THERE ARE TWO IDENTICAL ARGUMENT VALUES IN VECTOR ARG             
   13 CONTINUE                                                          
CCC   IER=3                                                             
      J=IEND                                                            
      GO TO 8                                                           
      END                                                               
      SUBROUTINE  ALBTRN( ALBEDO, AMB, APB, ARRAY, B, BDR, CBAND, CC,   
     $                    CMU, CWT, EVAL, EVECC, GL, GC, GU, IPVT,      
     $                    KK, LL, NLYR, NN, NSTR, NUMU, PRNT, TAUCPR,   
     $                    UMU, U0U, WK, YLMC, YLMU, Z, AAD, EVALD,      
     $                    EVECCD, WKD, MI, MI9M2, MAXULV, MAXUMU,       
     $                    MXCMU, MXUMU, NNLYRI, ALBMED, TRNMED )        
                                                                        
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
                                                                        
                                                                        
C        SPECIAL CASE TO GET ONLY ALBEDO AND TRANSMISSIVITY             
C        OF ENTIRE MEDIUM AS A FUNCTION OF INCIDENT BEAM ANGLE          
C        (MANY SIMPLIFICATIONS BECAUSE BOUNDARY CONDITION IS JUST       
C        ISOTROPIC ILLUMINATION, THERE ARE NO THERMAL SOURCES, AND      
C        PARTICULAR SOLUTIONS DO NOT NEED TO BE COMPUTED).  SEE         
C        REF. S2 AND REFERENCES THEREIN FOR THEORY.                     
                                                                        
C        ROUTINES CALLED:  ALTRIN, LEPOLY, PRALTR, SETMTX, SOLVE1,      
C                          SOLEIG, ZEROIT                               
                                                                        
      LOGICAL  PRNT(*)                                                  
      INTEGER  NLYR, NUMU, NSTR                                         
      REAL*8     UMU(*), U0U( MAXUMU,* )                                
                                                                        
      INTEGER IPVT(*)                                                   
      REAL*8    ALBMED(*), AMB( MI,* ), APB( MI,*), ARRAY( MXCMU,* ),   
     $        B(*), BDR( MI,0:* ), CBAND( MI9M2,* ), CC( MXCMU,* ),     
     $        CMU(*), CWT(*), EVAL(*), EVECC( MXCMU,* ),                
     $        GL( 0:MXCMU,* ), GC( MXCMU,MXCMU,* ), GU( MXUMU,MXCMU,* ),
     $        KK( MXCMU,* ), LL( MXCMU,* ), TAUCPR( 0:* ), TRNMED(*),   
     $        WK(*), YLMC( 0:MXCMU,* ), YLMU( 0:MXCMU,* ), Z(*)         
      DOUBLE PRECISION   AAD( MI,* ), EVALD(*) , EVECCD( MI,* ), WKD(*) 
                                                                        
      LOGICAL  LAMBER, LYRCUT                                           
                                                                        
                                                                        
C                    ** SET DISORT VARIABLES THAT ARE IGNORED IN THIS   
C                    ** SPECIAL CASE BUT ARE NEEDED BELOW IN ARGUMENT   
C                    ** LISTS OF SUBROUTINES SHARED WITH GENERAL CASE   
      NCUT = NLYR                                                       
      LYRCUT = .FALSE.                                                  
      FISOT = 1.0                                                       
      LAMBER = .TRUE.                                                   
                                                                        
      MAZIM = 0                                                         
      DELM0 = 1.0                                                       
C                          ** GET LEGENDRE POLYNOMIALS FOR COMPUTATIONAL
C                          ** AND USER POLAR ANGLE COSINES              
                                                                        
      CALL  LEPOLY( NUMU, MAZIM, MXCMU, NSTR-1, UMU, YLMU )             
      CALL  LEPOLY( NN,   MAZIM, MXCMU, NSTR-1, CMU, YLMC )             
                                                                        
C                       ** EVALUATE LEGENDRE POLYNOMIALS WITH NEGATIVE  
C                       ** -CMU- FROM THOSE WITH POSITIVE -CMU-;        
C                       ** DAVE/ARMSTRONG EQ. (15)                      
      SGN  = -1.0                                                       
      DO  5  L = MAZIM, NSTR-1                                          
         SGN = - SGN                                                    
         DO  5  IQ = NN+1, NSTR                                         
            YLMC( L,IQ ) = SGN * YLMC( L,IQ-NN )                        
    5 CONTINUE                                                          
C                                  ** ZERO BOTTOM REFLECTIVITY          
C                                  ** (-ALBEDO- IS USED ONLY IN ANALYTIC
C                                  ** FORMULAE INVOLVING ALBEDO = 0     
C                                  ** SOLUTIONS; EQS 16-17 OF REF S2)   
      CALL  ZEROIT( BDR, MI*(MI+1) )                                    
                                                                        
                                                                        
C ===================  BEGIN LOOP ON COMPUTATIONAL LAYERS  =============
                                                                        
      DO 100  LC = 1, NLYR                                              
                                                                        
C                        ** SOLVE EIGENFUNCTION PROBLEM IN EQ. STWJ(8B) 
                                                                        
         CALL  SOLEIG( AMB, APB, ARRAY, CMU, CWT, GL(0,LC), MI, MAZIM,  
     $                 MXCMU, NN, NSTR, WK, YLMC, CC, EVECC, EVAL,      
     $                 KK(1,LC), GC(1,1,LC), AAD, WKD, EVECCD, EVALD)   
                                                                        
C                          ** INTERPOLATE EIGENVECTORS TO USER ANGLES   
                                                                        
         CALL  TERPEV( CWT, EVECC, GL(0,LC), GU(1,1,LC), MAZIM, MXCMU,  
     $                 MXUMU, NN, NSTR, NUMU, WK, YLMC, YLMU )          
100   CONTINUE                                                          
                                                                        
C ===================  END LOOP ON COMPUTATIONAL LAYERS  ===============
                                                                        
C                      ** SET COEFFICIENT MATRIX OF EQUATIONS COMBINING 
C                      ** BOUNDARY AND LAYER INTERFACE CONDITIONS       
                                                                        
      CALL  SETMTX( BDR, CBAND, CMU, CWT, DELM0, GC, KK, LAMBER,        
     $              LYRCUT, MI, MI9M2, MXCMU, NCOL, NCUT, NNLYRI,       
     $              NN, NSTR, TAUCPR, WK )                              
                                                                        
      CALL  ZEROIT( U0U, MAXUMU*MAXULV )                                
                                                                        
      NHOM = 2                                                          
      IF( NLYR.EQ.1 )  NHOM = 1                                         
      SPHALB = 0.0                                                      
      SPHTRN = 0.0                                                      
      DO 200  IHOM = 1, NHOM                                            
C                             ** SOLVE FOR CONSTANTS OF INTEGRATION IN  
C                             ** HOMOGENEOUS SOLUTION FOR ILLUMINATION  
C                             ** FROM TOP (IHOM=1), THEN BOTTOM (IHOM=2)
                                                                        
         CALL  SOLVE1( B, CBAND, FISOT, IHOM, IPVT, LL, MI9M2, MXCMU,   
     $                 NCOL, NLYR, NN, NNLYRI, NSTR, Z )                
                                                                        
C                             ** COMPUTE AZIMUTHALLY-AVERAGED INTENSITY 
C                             ** AT USER ANGLES; GIVES ALBEDO IF MULTI- 
C                             ** LAYER (EQ. 9 OF REF S2); GIVES BOTH    
C                             ** ALBEDO AND TRANSMISSIVITY IF SINGLE    
C                             ** LAYER (EQS. 3-4 OF REF S2)             
                                                                        
         CALL  ALTRIN( GU, KK, LL, MXCMU, MXUMU, MAXUMU, NLYR,          
     $                 NN, NSTR, NUMU, TAUCPR, UMU, U0U, WK )           
                                                                        
         IF ( IHOM.EQ.1 )  THEN                                         
C                                   ** SAVE ALBEDOS;  FLIP TRANSMISSIV. 
C                                   ** END OVER END TO CORRESPOND TO    
C                                   ** POSITIVE -UMU- INST. OF NEGATIVE 
            DO 120  IU = 1, NUMU/2                                      
               ALBMED(IU) = U0U( IU + NUMU/2, 1 )                       
               IF( NLYR.EQ.1 )  TRNMED(IU) = U0U( NUMU/2+1-IU, 2 )      
     $                          + EXP( - TAUCPR(NLYR) / UMU(IU+NUMU/2) )
120         CONTINUE                                                    
C                                    ** GET SPHERICAL ALBEDO AND, FOR 1 
C                                    ** LAYER, SPHERICAL TRANSMISSIVITY 
            IF( ALBEDO.GT.0.0 )                                         
     $          CALL SPALTR( CMU, CWT, GC, KK, LL, MXCMU, NLYR,         
     $                       NN, NSTR, TAUCPR, SPHALB, SPHTRN )         
                                                                        
         ELSE IF ( IHOM.EQ.2 )  THEN                                    
C                                      ** SAVE TRANSMISSIVITIES         
            DO 140  IU = 1, NUMU/2                                      
               TRNMED(IU) = U0U( IU + NUMU/2, 1 )                       
     $                      + EXP( - TAUCPR(NLYR) / UMU(IU+NUMU/2) )    
140         CONTINUE                                                    
C                             ** GET SPHERICAL ALBEDO AND TRANSMISSIVITY
            IF( ALBEDO.GT.0.0 )                                         
     $          CALL SPALTR( CMU, CWT, GC, KK, LL, MXCMU, NLYR,         
     $                       NN, NSTR, TAUCPR, SPHTRN, SPHALB )         
         END IF                                                         
200   CONTINUE                                                          
                                                                        
      IF ( ALBEDO.GT.0.0 )  THEN                                        
C                                ** REF. S2, EQS. 16-17 (THESE EQS. HAVE
C                                ** A SIMPLE PHYSICAL INTERPRETATION    
C                                ** LIKE THAT OF THE DOUBLING EQS.)     
         DO 220  IU = 1, NUMU                                           
            ALBMED(IU) = ALBMED(IU) + ( ALBEDO / (1.-ALBEDO*SPHALB) )   
     $                                * SPHTRN * TRNMED(IU)             
            TRNMED(IU) = TRNMED(IU) + ( ALBEDO / (1.-ALBEDO*SPHALB) )   
     $                                * SPHALB * TRNMED(IU)             
220      CONTINUE                                                       
      END IF                                                            
C                          ** RETURN -UMU- TO ALL POSITIVE VALUES, TO   
C                          ** AGREE WITH ORDERING IN -ALBMED,TRNMED-    
      NUMU = NUMU / 2                                                   
      DO 230  IU = 1, NUMU                                              
        UMU(IU) = UMU(IU+NUMU)                                          
 230  CONTINUE                                                          
                                                                        
      IF ( PRNT(6) )  CALL  PRALTR( UMU, NUMU, ALBMED, TRNMED )         
                                                                        
      RETURN                                                            
      END                                                               
      SUBROUTINE  ALTRIN( GU, KK, LL, MXCMU, MXUMU, MAXUMU, NLYR,       
     $                    NN, NSTR, NUMU, TAUCPR, UMU, U0U, WK )        
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
                                                                        
C       COMPUTES AZIMUTHALLY-AVERAGED INTENSITY AT TOP AND BOTTOM       
C       OF MEDIUM (RELATED TO ALBEDO AND TRANSMISSION OF MEDIUM BY      
C       RECIPROCITY PRINCIPLES;  SEE REF S2).  USER POLAR ANGLES ARE    
C       USED AS INCIDENT BEAM ANGLES. (THIS IS A VERY SPECIALIZED       
C       VERSION OF 'USRINT')                                            
                                                                        
C       ** NOTE **  USER INPUT VALUES OF -UMU- (ASSUMED POSITIVE) ARE   
C                   TEMPORARILY IN UPPER LOCATIONS OF  -UMU-  AND       
C                   CORRESPONDING NEGATIVES ARE IN LOWER LOCATIONS      
C                   (THIS MAKES -GU- COME OUT RIGHT).  I.E. THE CONTENTS
C                   OF THE TEMPORARY -UMU- ARRAY ARE:                   
                                                                        
C                     -UMU(NUMU),..., -UMU(1), UMU(1),..., UMU(NUMU)    
                                                                        
C   I N P U T    V A R I A B L E S:                                     
                                                                        
C       GU     :  EIGENVECTORS INTERPOLATED TO USER POLAR ANGLES        
C                 (I.E., G IN EQ. SC(1) )                               
C       KK     :  EIGENVALUES OF COEFF. MATRIX IN EQ. SS(7)             
C       LL     :  CONSTANTS OF INTEGRATION IN EQ. SC(1), OBTAINED       
C                 BY SOLVING SCALED VERSION OF EQ. SC(5);               
C                 EXPONENTIAL TERM OF EQ. SC(12) NOT INCLUDED           
C       NN     :  ORDER OF DOUBLE-GAUSS QUADRATURE (NSTR/2)             
C       TAUCPR :  CUMULATIVE OPTICAL DEPTH (DELTA-M-SCALED)             
C       (REMAINDER ARE 'DISORT' INPUT VARIABLES)                        
                                                                        
C   O U T P U T    V A R I A B L E:                                     
                                                                        
C       U0U  :    DIFFUSE AZIMUTHALLY-AVERAGED INTENSITY AT TOP AND     
C                 BOTTOM OF MEDIUM (DIRECTLY TRANSMITTED COMPONENT,     
C                 CORRESPONDING TO -BNDINT- IN 'USRINT', IS OMITTED).   
                                                                        
C   I N T E R N A L    V A R I A B L E S:                               
                                                                        
C       DTAU   :  OPTICAL DEPTH OF A COMPUTATIONAL LAYER                
C       PALINT :  NON-BOUNDARY-FORCED INTENSITY COMPONENT               
C       UTAUPR :  OPTICAL DEPTHS OF USER OUTPUT LEVELS (DELTA-M SCALED) 
C       WK     :  SCRATCH VECTOR FOR SAVING 'EXP' EVALUATIONS           
C       ALL THE EXPONENTIAL FACTORS (I.E., EXP1, EXPN,... ETC.)         
C       COME FROM THE SUBSTITUTION OF CONSTANTS OF INTEGRATION IN       
C       EQ. SC(12) INTO EQS. S1(8-9).  ALL HAVE NEGATIVE ARGUMENTS.     
C+---------------------------------------------------------------------+
                                                                        
      REAL*8     UTAUPR( 2 )                                            
      REAL*8     GU( MXUMU,MXCMU,* ), KK( MXCMU,* ), LL( MXCMU,* ), MU, 
     $         TAUCPR( 0:* ), UMU(*), U0U( MAXUMU,* ), WK(*)            
                                                                        
                                                                        
      UTAUPR(1) = 0.0                                                   
      UTAUPR(2) = TAUCPR( NLYR )                                        
      DO 100  LU = 1, 2                                                 
         IF ( LU.EQ.1 )  THEN                                           
            IUMIN = NUMU / 2 + 1                                        
            IUMAX = NUMU                                                
            SGN = 1.0                                                   
         ELSE                                                           
            IUMIN = 1                                                   
            IUMAX = NUMU / 2                                            
            SGN = - 1.0                                                 
         END IF                                                         
C                                   ** LOOP OVER POLAR ANGLES AT WHICH  
C                                   ** ALBEDOS/TRANSMISSIVITIES DESIRED 
C                                   ** ( UPWARD ANGLES AT TOP BOUNDARY, 
C                                   ** DOWNWARD ANGLES AT BOTTOM )      
         DO 50  IU = IUMIN, IUMAX                                       
            MU = UMU(IU)                                                
C                                     ** INTEGRATE FROM TOP TO BOTTOM   
C                                     ** COMPUTATIONAL LAYER            
            PALINT = 0.0                                                
            DO 30  LC = 1, NLYR                                         
                                                                        
               DTAU = TAUCPR(LC) - TAUCPR(LC-1)                         
               EXP1 =  DEXP( (UTAUPR(LU) - TAUCPR(LC-1)) / MU )         
               EXP2 =  DEXP( (UTAUPR(LU) - TAUCPR( LC )) / MU )         
                                                                        
C                                      ** -KK- IS NEGATIVE              
               DO 20  IQ = 1, NN                                        
                  WK(IQ) = DEXP( KK(IQ,LC) * DTAU )                     
                  DENOM = 1.0 + MU * KK(IQ,LC)                          
                  IF ( DABS(DENOM).LT.0.0001 ) THEN                     
C                                                   ** L'HOSPITAL LIMIT 
                     EXPN = DTAU / MU * EXP2                            
                  ELSE                                                  
                     EXPN = ( EXP1 * WK(IQ) - EXP2 ) * SGN / DENOM      
                  END IF                                                
                  PALINT = PALINT + GU(IU,IQ,LC) * LL(IQ,LC) * EXPN     
20             CONTINUE                                                 
C                                      ** -KK- IS POSITIVE              
               DO 21  IQ = NN+1, NSTR                                   
                  DENOM = 1.0 + MU * KK(IQ,LC)                          
                  IF ( DABS(DENOM).LT.0.0001 ) THEN                     
                     EXPN = - DTAU / MU * EXP1                          
                  ELSE                                                  
                     EXPN = ( EXP1 - EXP2 * WK(NSTR+1-IQ) ) *SGN / DENOM
                  END IF                                                
                  PALINT = PALINT + GU(IU,IQ,LC) * LL(IQ,LC) * EXPN     
21             CONTINUE                                                 
                                                                        
30          CONTINUE                                                    
                                                                        
            U0U( IU, LU ) = PALINT                                      
                                                                        
 50      CONTINUE                                                       
100   CONTINUE                                                          
                                                                        
      RETURN                                                            
      END                                                               
      SUBROUTINE  ASYMTX( A, EVEC, EVAL, M, IA, IEVEC, IER, WK,         
     $                    AAD, EVECD, EVALD, WKD )                      
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
                                                                        
C    =======  D O U B L E    P R E C I S I O N    V E R S I O N  ====== 
                                                                        
C       SOLVES EIGENFUNCTION PROBLEM FOR REAL ASYMMETRIC MATRIX         
C       FOR WHICH IT IS KNOWN A PRIORI THAT THE EIGENVALUES ARE REAL.   
                                                                        
C       THIS IS AN ADAPTATION OF A SUBROUTINE EIGRF IN THE IMSL         
C       LIBRARY TO USE REAL INSTEAD OF COMPLEX ARITHMETIC, ACCOUNTING   
C       FOR THE KNOWN FACT THAT THE EIGENVALUES AND EIGENVECTORS IN     
C       THE DISCRETE ORDINATE SOLUTION ARE REAL.  OTHER CHANGES INCLUDE 
C       PUTTING ALL THE CALLED SUBROUTINES IN-LINE, DELETING THE        
C       PERFORMANCE INDEX CALCULATION, UPDATING MANY DO-LOOPS           
C       TO FORTRAN77, AND IN CALCULATING THE MACHINE PRECISION          
C       TOL INSTEAD OF SPECIFYING IT IN A DATA STATEMENT.               
                                                                        
C       EIGRF IS BASED PRIMARILY ON EISPACK ROUTINES.  THE MATRIX IS    
C       FIRST BALANCED USING THE PARLETT-REINSCH ALGORITHM.  THEN       
C       THE MARTIN-WILKINSON ALGORITHM IS APPLIED.                      
                                                                        
C       REFERENCES:                                                     
C          DONGARRA, J. AND C. MOLER, EISPACK -- A PACKAGE FOR SOLVING  
C             MATRIX EIGENVALUE PROBLEMS, IN COWELL, ED., 1984:         
C             SOURCES AND DEVELOPMENT OF MATHEMATICAL SOFTWARE,         
C             PRENTICE-HALL, ENGLEWOOD CLIFFS, NJ                       
C         PARLETT AND REINSCH, 1969: BALANCING A MATRIX FOR CALCULATION 
C             OF EIGENVALUES AND EIGENVECTORS, NUM. MATH. 13, 293-304   
C         WILKINSON, J., 1965: THE ALGEBRAIC EIGENVALUE PROBLEM,        
C             CLARENDON PRESS, OXFORD                                   
                                                                        
C   I N P U T    V A R I A B L E S:                                     
                                                                        
C        A    :  INPUT ASYMMETRIC MATRIX, DESTROYED AFTER SOLVED        
C        M    :  ORDER OF  A                                            
C       IA    :  FIRST DIMENSION OF  A                                  
C    IEVEC    :  FIRST DIMENSION OF  EVEC                               
                                                                        
C   O U T P U T    V A R I A B L E S:                                   
                                                                        
C       EVEC  :  (UNNORMALIZED) EIGENVECTORS OF  A                      
C                   ( COLUMN J CORRESPONDS TO EVAL(J) )                 
                                                                        
C       EVAL  :  (UNORDERED) EIGENVALUES OF  A ( DIMENSION AT LEAST M ) 
                                                                        
C       IER   :  IF .NE. 0, SIGNALS THAT EVAL(IER) FAILED TO CONVERGE;  
C                   IN THAT CASE EIGENVALUES IER+1,IER+2,...,M  ARE     
C                   CORRECT BUT EIGENVALUES 1,...,IER ARE SET TO ZERO.  
                                                                        
C   S C R A T C H   V A R I A B L E S:                                  
                                                                        
C       WK    :  WORK AREA ( DIMENSION AT LEAST 2*M )                   
C       AAD   :  DOUBLE PRECISION STAND-IN FOR -A-                      
C       EVECD :  DOUBLE PRECISION STAND-IN FOR -EVEC-                   
C       EVALD :  DOUBLE PRECISION STAND-IN FOR -EVAL-                   
C       WKD   :  DOUBLE PRECISION STAND-IN FOR -WK-                     
C+---------------------------------------------------------------------+
                                                                        
C      IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                           
      REAL*8              A( IA,* ),   WK(*),  EVAL(*),  EVEC( IEVEC,* )
      DOUBLE PRECISION  AAD( IA,* ), WKD(*), EVALD(*), EVECD( IA,* )    
      DOUBLE PRECISION  D1MACH                                          
      LOGICAL           NOCONV, NOTLAS                                  
      DATA     C1 / 0.4375D0 /, C2/ 0.5D0 /, C3/ 0.75D0 /, C4/ 0.95D0 /,
     $         C5/ 16.D0 /, C6/ 256.D0 /, ZERO / 0.D0 /, ONE / 1.D0 /   
                                                                        
                                                                        
      IER = 0                                                           
      TOL = D1MACH(3)                                                   
      IF ( M.LT.1 .OR. IA.LT.M .OR. IEVEC.LT.M )                        
     $     CALL ERRMSG( 'ASYMTX--bad input variable(s)', .TRUE. )       
                                                                        
C                           ** HANDLE 1X1 AND 2X2 SPECIAL CASES         
      IF ( M.EQ.1 )  THEN                                               
         EVAL(1) = A(1,1)                                               
         EVEC(1,1) = 1.0                                                
         RETURN                                                         
                                                                        
      ELSE IF ( M.EQ.2 )  THEN                                          
         DISCRI = ( A(1,1) - A(2,2) )**2 + 4. * A(1,2) * A(2,1)         
         IF ( DISCRI.LT.0.0 )                                           
     $        CALL ERRMSG( 'ASYMTX--COMPLEX EVALS IN 2X2 CASE', .TRUE. )
         SGN = 1.0                                                      
         IF ( A(1,1).LT.A(2,2) )  SGN = - 1.0                           
         EVAL(1) = 0.5 * ( A(1,1) + A(2,2) + SGN*DSQRT(DISCRI) )        
         EVAL(2) = 0.5 * ( A(1,1) + A(2,2) - SGN*DSQRT(DISCRI) )        
         EVEC(1,1) = 1.0                                                
         EVEC(2,2) = 1.0                                                
         IF ( A(1,1).EQ.A(2,2) .AND. (A(2,1).EQ.0.0.OR.A(1,2).EQ.0.0) ) 
     $        THEN                                                      
       RNORM=DABS(A(1,1))+DABS(A(1,2))+DABS(A(2,1))+DABS(A(2,2))        
            W = TOL * RNORM                                             
            EVEC(2,1) = A(2,1) / W                                      
            EVEC(1,2) = - A(1,2) / W                                    
         ELSE                                                           
            EVEC(2,1) = A(2,1) / ( EVAL(1) - A(2,2) )                   
            EVEC(1,2) = A(1,2) / ( EVAL(2) - A(1,1) )                   
         ENDIF                                                          
         RETURN                                                         
      END IF                                                            
C                               ** PUT S.P. MATRIX INTO D.P. MATRIX     
      DO 1  J = 1, M                                                    
         DO 1  K = 1, M                                                 
            AAD( J,K ) = DBLE( A(J,K) )                                 
    1 CONTINUE                                                          
C                                        ** INITIALIZE OUTPUT VARIABLES 
      DO 20 I = 1, M                                                    
         EVALD(I) = ZERO                                                
         DO 10 J = 1, M                                                 
            EVECD(I,J) = ZERO                                           
10       CONTINUE                                                       
         EVECD(I,I) = ONE                                               
20    CONTINUE                                                          
C                  ** BALANCE THE INPUT MATRIX AND REDUCE ITS NORM BY   
C                  ** DIAGONAL SIMILARITY TRANSFORMATION STORED IN WK;  
C                  ** THEN SEARCH FOR ROWS ISOLATING AN EIGENVALUE      
C                  ** AND PUSH THEM DOWN                                
      RNORM = ZERO                                                      
      L  = 1                                                            
      K  = M                                                            
                                                                        
30    KKK = K                                                           
         DO 70  J = KKK, 1, -1                                          
            ROW = ZERO                                                  
            DO 40 I = 1, K                                              
               IF ( I.NE.J ) ROW = ROW + DABS( AAD(J,I) )               
40          CONTINUE                                                    
            IF ( ROW.EQ.ZERO ) THEN                                     
               WKD(K) = J                                               
               IF ( J.NE.K ) THEN                                       
                  DO 50 I = 1, K                                        
                     REPL   = AAD(I,J)                                  
                     AAD(I,J) = AAD(I,K)                                
                     AAD(I,K) = REPL                                    
50                CONTINUE                                              
                  DO 60 I = L, M                                        
                     REPL   = AAD(J,I)                                  
                     AAD(J,I) = AAD(K,I)                                
                     AAD(K,I) = REPL                                    
60                CONTINUE                                              
               END IF                                                   
               K = K - 1                                                
               GO TO 30                                                 
            END IF                                                      
70       CONTINUE                                                       
C                                     ** SEARCH FOR COLUMNS ISOLATING AN
C                                       ** EIGENVALUE AND PUSH THEM LEFT
80    LLL = L                                                           
         DO 120 J = LLL, K                                              
            COL = ZERO                                                  
            DO 90 I = L, K                                              
               IF ( I.NE.J ) COL = COL + DABS( AAD(I,J) )               
90          CONTINUE                                                    
            IF ( COL.EQ.ZERO ) THEN                                     
               WKD(L) = J                                               
               IF ( J.NE.L ) THEN                                       
                  DO 100 I = 1, K                                       
                     REPL   = AAD(I,J)                                  
                     AAD(I,J) = AAD(I,L)                                
                     AAD(I,L) = REPL                                    
100               CONTINUE                                              
                  DO 110 I = L, M                                       
                     REPL   = AAD(J,I)                                  
                     AAD(J,I) = AAD(L,I)                                
                     AAD(L,I) = REPL                                    
110               CONTINUE                                              
               END IF                                                   
               L = L + 1                                                
               GO TO 80                                                 
            END IF                                                      
120      CONTINUE                                                       
C                           ** BALANCE THE SUBMATRIX IN ROWS L THROUGH K
      DO 130 I = L, K                                                   
         WKD(I) = ONE                                                   
130   CONTINUE                                                          
                                                                        
140   NOCONV = .FALSE.                                                  
         DO 200 I = L, K                                                
            COL = ZERO                                                  
            ROW = ZERO                                                  
            DO 150 J = L, K                                             
               IF ( J.NE.I ) THEN                                       
                  COL = COL + DABS( AAD(J,I) )                          
                  ROW = ROW + DABS( AAD(I,J) )                          
               END IF                                                   
150         CONTINUE                                                    
            F = ONE                                                     
            G = ROW / C5                                                
            H = COL + ROW                                               
160         IF ( COL.LT.G ) THEN                                        
               F   = F * C5                                             
               COL = COL * C6                                           
               GO TO 160                                                
            END IF                                                      
            G = ROW * C5                                                
170         IF ( COL.GE.G ) THEN                                        
               F   = F / C5                                             
               COL = COL / C6                                           
               GO TO 170                                                
            END IF                                                      
C                                                         ** NOW BALANCE
            IF ( (COL+ROW)/F .LT. C4*H ) THEN                           
               WKD(I)  = WKD(I) * F                                     
               NOCONV = .TRUE.                                          
               DO 180 J = L, M                                          
                  AAD(I,J) = AAD(I,J) / F                               
180            CONTINUE                                                 
               DO 190 J = 1, K                                          
                  AAD(J,I) = AAD(J,I) * F                               
190            CONTINUE                                                 
            END IF                                                      
200      CONTINUE                                                       
                                                                        
      IF ( NOCONV ) GO TO 140                                           
C                                  ** IS -A- ALREADY IN HESSENBERG FORM?
      IF ( K-1 .LT. L+1 ) GO TO 350                                     
C                                   ** TRANSFER -A- TO A HESSENBERG FORM
      DO 290 N = L+1, K-1                                               
         H        = ZERO                                                
         WKD(N+M) = ZERO                                                
         SCALE    = ZERO                                                
C                                                        ** SCALE COLUMN
         DO 210 I = N, K                                                
            SCALE = SCALE + DABS(AAD(I,N-1))                            
210      CONTINUE                                                       
         IF ( SCALE.NE.ZERO ) THEN                                      
            DO 220 I = K, N, -1                                         
               WKD(I+M) = AAD(I,N-1) / SCALE                            
               H = H + WKD(I+M)**2                                      
220         CONTINUE                                                    
            G = - SIGN( DSQRT(H), WKD(N+M) )                            
            H = H - WKD(N+M) * G                                        
            WKD(N+M) = WKD(N+M) - G                                     
C                                                 ** FORM (I-(U*UT)/H)*A
            DO 250 J = N, M                                             
               F = ZERO                                                 
               DO 230  I = K, N, -1                                     
                  F = F + WKD(I+M) * AAD(I,J)                           
230            CONTINUE                                                 
               DO 240 I = N, K                                          
                  AAD(I,J) = AAD(I,J) - WKD(I+M) * F / H                
240            CONTINUE                                                 
250         CONTINUE                                                    
C                                    ** FORM (I-(U*UT)/H)*A*(I-(U*UT)/H)
            DO 280 I = 1, K                                             
               F = ZERO                                                 
               DO 260  J = K, N, -1                                     
                  F = F + WKD(J+M) * AAD(I,J)                           
260            CONTINUE                                                 
               DO 270 J = N, K                                          
                  AAD(I,J) = AAD(I,J) - WKD(J+M) * F / H                
270            CONTINUE                                                 
280         CONTINUE                                                    
            WKD(N+M)  = SCALE * WKD(N+M)                                
            AAD(N,N-1) = SCALE * G                                      
         END IF                                                         
290   CONTINUE                                                          
                                                                        
      DO 340  N = K-2, L, -1                                            
         N1 = N + 1                                                     
         N2 = N + 2                                                     
         F  = AAD(N1,N)                                                 
         IF ( F.NE.ZERO ) THEN                                          
            F  = F * WKD(N1+M)                                          
            DO 300 I = N2, K                                            
               WKD(I+M) = AAD(I,N)                                      
300         CONTINUE                                                    
            IF ( N1.LE.K ) THEN                                         
               DO 330 J = 1, M                                          
                  G = ZERO                                              
                  DO 310 I = N1, K                                      
                     G = G + WKD(I+M) * EVECD(I,J)                      
310               CONTINUE                                              
                  G = G / F                                             
                  DO 320 I = N1, K                                      
                     EVECD(I,J) = EVECD(I,J) + G * WKD(I+M)             
320               CONTINUE                                              
330            CONTINUE                                                 
            END IF                                                      
         END IF                                                         
340   CONTINUE                                                          
                                                                        
350   CONTINUE                                                          
      N = 1                                                             
      DO 370 I = 1, M                                                   
         DO 360 J = N, M                                                
            RNORM = RNORM + DABS(AAD(I,J))                              
360      CONTINUE                                                       
         N = I                                                          
         IF ( I.LT.L .OR. I.GT.K ) EVALD(I) = AAD(I,I)                  
370   CONTINUE                                                          
      N = K                                                             
      T = ZERO                                                          
C                                         ** SEARCH FOR NEXT EIGENVALUES
380   IF ( N.LT.L ) GO TO 530                                           
      IN = 0                                                            
      N1 = N - 1                                                        
      N2 = N - 2                                                        
C                          ** LOOK FOR SINGLE SMALL SUB-DIAGONAL ELEMENT
390   CONTINUE                                                          
      DO 400 I = L, N                                                   
         LB = N+L - I                                                   
         IF ( LB.EQ.L ) GO TO 410                                       
         S = DABS( AAD(LB-1,LB-1) ) + DABS( AAD(LB,LB) )                
         IF ( S.EQ.ZERO ) S = RNORM                                     
         IF ( DABS(AAD(LB,LB-1)) .LE. TOL*S ) GO TO 410                 
400   CONTINUE                                                          
                                                                        
410   X = AAD(N,N)                                                      
      IF ( LB.EQ.N ) THEN                                               
C                                        ** ONE EIGENVALUE FOUND        
         AAD(N,N)  = X + T                                              
         EVALD(N) = AAD(N,N)                                            
         N = N1                                                         
         GO TO 380                                                      
      END IF                                                            
                                                                        
      Y = AAD(N1,N1)                                                    
      W = AAD(N,N1) * AAD(N1,N)                                         
      IF ( LB.EQ.N1 ) THEN                                              
C                                        ** TWO EIGENVALUES FOUND       
         P = (Y-X) * C2                                                 
         Q = P**2 + W                                                   
         Z = DSQRT( DABS(Q) )                                           
         AAD(N,N) = X + T                                               
         X = AAD(N,N)                                                   
         AAD(N1,N1) = Y + T                                             
C                                        ** REAL PAIR                   
         Z = P + DSIGN(Z,P)                                             
         EVALD(N1) = X + Z                                              
         EVALD(N)  = EVALD(N1)                                          
         IF ( Z.NE.ZERO ) EVALD(N) = X - W / Z                          
         X = AAD(N,N1)                                                  
C                                  ** EMPLOY SCALE FACTOR IN CASE       
C                                  ** X AND Z ARE VERY SMALL            
         R = DSQRT( X*X + Z*Z )                                         
         P = X / R                                                      
         Q = Z / R                                                      
C                                             ** ROW MODIFICATION       
         DO 420 J = N1, M                                               
            Z = AAD(N1,J)                                               
            AAD(N1,J) = Q * Z + P * AAD(N,J)                            
            AAD(N,J)  = Q * AAD(N,J) - P * Z                            
420      CONTINUE                                                       
C                                             ** COLUMN MODIFICATION    
         DO 430 I = 1, N                                                
            Z = AAD(I,N1)                                               
            AAD(I,N1) = Q * Z + P * AAD(I,N)                            
            AAD(I,N)  = Q * AAD(I,N) - P * Z                            
430      CONTINUE                                                       
C                                          ** ACCUMULATE TRANSFORMATIONS
         DO 440 I = L, K                                                
            Z = EVECD(I,N1)                                             
            EVECD(I,N1) = Q * Z + P * EVECD(I,N)                        
            EVECD(I,N)  = Q * EVECD(I,N) - P * Z                        
440      CONTINUE                                                       
                                                                        
         N = N2                                                         
         GO TO 380                                                      
      END IF                                                            
                                                                        
      IF ( IN.EQ.30 ) THEN                                              
C                    ** NO CONVERGENCE AFTER 30 ITERATIONS; SET ERROR   
C                    ** INDICATOR TO THE INDEX OF THE CURRENT EIGENVALUE
         IER = N                                                        
         GO TO 670                                                      
      END IF                                                            
C                                                          ** FORM SHIFT
      IF ( IN.EQ.10 .OR. IN.EQ.20 ) THEN                                
         T = T + X                                                      
         DO 450 I = L, N                                                
            AAD(I,I) = AAD(I,I) - X                                     
450      CONTINUE                                                       
         S = DABS(AAD(N,N1)) + DABS(AAD(N1,N2))                         
         X = C3 * S                                                     
         Y = X                                                          
         W = - C1 * S**2                                                
      END IF                                                            
                                                                        
      IN = IN + 1                                                       
C                ** LOOK FOR TWO CONSECUTIVE SMALL SUB-DIAGONAL ELEMENTS
                                                                        
      DO 460 J = LB, N2                                                 
         I = N2+LB - J                                                  
         Z = AAD(I,I)                                                   
         R = X - Z                                                      
         S = Y - Z                                                      
         P = ( R * S - W ) / AAD(I+1,I) + AAD(I,I+1)                    
         Q = AAD(I+1,I+1) - Z - R - S                                   
         R = AAD(I+2,I+1)                                               
         S = DABS(P) + DABS(Q) + DABS(R)                                
         P = P / S                                                      
         Q = Q / S                                                      
         R = R / S                                                      
         IF ( I.EQ.LB ) GO TO 470                                       
         UU = DABS( AAD(I,I-1) ) * ( DABS(Q) + DABS(R) )                
         VV=DABS(P)*(DABS(AAD(I-1,I-1))+DABS(Z)+DABS(AAD(I+1,I+1)))     
         IF ( UU .LE. TOL*VV ) GO TO 470                                
460   CONTINUE                                                          
                                                                        
470   CONTINUE                                                          
      AAD(I+2,I) = ZERO                                                 
      DO 480 J = I+3, N                                                 
         AAD(J,J-2) = ZERO                                              
         AAD(J,J-3) = ZERO                                              
480   CONTINUE                                                          
                                                                        
C             ** DOUBLE QR STEP INVOLVING ROWS K TO N AND COLUMNS M TO N
                                                                        
      DO 520 KA = I, N1                                                 
         NOTLAS = KA.NE.N1                                              
         IF ( KA.EQ.I ) THEN                                            
            S = DSIGN( DSQRT( P*P + Q*Q + R*R ), P )                    
            IF ( LB.NE.I ) AAD(KA,KA-1) = - AAD(KA,KA-1)                
         ELSE                                                           
            P = AAD(KA,KA-1)                                            
            Q = AAD(KA+1,KA-1)                                          
            R = ZERO                                                    
            IF ( NOTLAS ) R = AAD(KA+2,KA-1)                            
            X = DABS(P) + DABS(Q) + DABS(R)                             
            IF ( X.EQ.ZERO ) GO TO 520                                  
            P = P / X                                                   
            Q = Q / X                                                   
            R = R / X                                                   
            S = DSIGN( DSQRT( P*P + Q*Q + R*R ), P )                    
            AAD(KA,KA-1) = - S * X                                      
         END IF                                                         
         P = P + S                                                      
         X = P / S                                                      
         Y = Q / S                                                      
         Z = R / S                                                      
         Q = Q / P                                                      
         R = R / P                                                      
C                                                    ** ROW MODIFICATION
         DO 490 J = KA, M                                               
            P = AAD(KA,J) + Q * AAD(KA+1,J)                             
            IF ( NOTLAS ) THEN                                          
               P = P + R * AAD(KA+2,J)                                  
               AAD(KA+2,J) = AAD(KA+2,J) - P * Z                        
            END IF                                                      
            AAD(KA+1,J) = AAD(KA+1,J) - P * Y                           
            AAD(KA,J)   = AAD(KA,J)   - P * X                           
490      CONTINUE                                                       
C                                                 ** COLUMN MODIFICATION
         DO 500 II = 1, MIN0(N,KA+3)                                    
            P = X * AAD(II,KA) + Y * AAD(II,KA+1)                       
            IF ( NOTLAS ) THEN                                          
               P = P + Z * AAD(II,KA+2)                                 
               AAD(II,KA+2) = AAD(II,KA+2) - P * R                      
            END IF                                                      
            AAD(II,KA+1) = AAD(II,KA+1) - P * Q                         
            AAD(II,KA)   = AAD(II,KA) - P                               
500      CONTINUE                                                       
C                                          ** ACCUMULATE TRANSFORMATIONS
         DO 510 II = L, K                                               
            P = X * EVECD(II,KA) + Y * EVECD(II,KA+1)                   
            IF ( NOTLAS ) THEN                                          
               P = P + Z * EVECD(II,KA+2)                               
               EVECD(II,KA+2) = EVECD(II,KA+2) - P * R                  
            END IF                                                      
            EVECD(II,KA+1) = EVECD(II,KA+1) - P * Q                     
            EVECD(II,KA)   = EVECD(II,KA) - P                           
510      CONTINUE                                                       
                                                                        
520   CONTINUE                                                          
      GO TO 390                                                         
C                     ** ALL EVALS FOUND, NOW BACKSUBSTITUTE REAL VECTOR
530   CONTINUE                                                          
      IF ( RNORM.NE.ZERO ) THEN                                         
         DO 560  N = M, 1, -1                                           
            N2 = N                                                      
            AAD(N,N) = ONE                                              
            DO 550  I = N-1, 1, -1                                      
               W = AAD(I,I) - EVALD(N)                                  
               IF ( W.EQ.ZERO ) W = TOL * RNORM                         
               R = AAD(I,N)                                             
               DO 540 J = N2, N-1                                       
                  R = R + AAD(I,J) * AAD(J,N)                           
540            CONTINUE                                                 
               AAD(I,N) = - R / W                                       
               N2 = I                                                   
550         CONTINUE                                                    
560      CONTINUE                                                       
C                      ** END BACKSUBSTITUTION VECTORS OF ISOLATED EVALS
                                                                        
         DO 580 I = 1, M                                                
            IF ( I.LT.L .OR. I.GT.K ) THEN                              
               DO 570 J = I, M                                          
                  EVECD(I,J) = AAD(I,J)                                 
570            CONTINUE                                                 
            END IF                                                      
580      CONTINUE                                                       
C                                   ** MULTIPLY BY TRANSFORMATION MATRIX
         IF ( K.NE.0 ) THEN                                             
            DO 600  J = M, L, -1                                        
               DO 600 I = L, K                                          
                  Z = ZERO                                              
                  DO 590 N = L, MIN0(J,K)                               
                     Z = Z + EVECD(I,N) * AAD(N,J)                      
590               CONTINUE                                              
                  EVECD(I,J) = Z                                        
600         CONTINUE                                                    
         END IF                                                         
                                                                        
      END IF                                                            
                                                                        
      DO 620 I = L, K                                                   
         DO 620 J = 1, M                                                
            EVECD(I,J) = EVECD(I,J) * WKD(I)                            
620   CONTINUE                                                          
C                           ** INTERCHANGE ROWS IF PERMUTATIONS OCCURRED
      DO 640  I = L-1, 1, -1                                            
         J = WKD(I)                                                     
         IF ( I.NE.J ) THEN                                             
            DO 630 N = 1, M                                             
               REPL       = EVECD(I,N)                                  
               EVECD(I,N) = EVECD(J,N)                                  
               EVECD(J,N) = REPL                                        
630         CONTINUE                                                    
         END IF                                                         
640   CONTINUE                                                          
                                                                        
      DO 660 I = K+1, M                                                 
         J = WKD(I)                                                     
         IF ( I.NE.J ) THEN                                             
            DO 650 N = 1, M                                             
               REPL       = EVECD(I,N)                                  
               EVECD(I,N) = EVECD(J,N)                                  
               EVECD(J,N) = REPL                                        
650         CONTINUE                                                    
         END IF                                                         
660   CONTINUE                                                          
C                         ** PUT RESULTS INTO OUTPUT ARRAYS             
  670 CONTINUE                                                          
      DO 680 J = 1, M                                                   
         EVAL( J ) = EVALD(J)                                           
         DO 680 K = 1, M                                                
            EVEC( J,K ) = EVECD(J,K)                                    
680   CONTINUE                                                          
                                                                        
      RETURN                                                            
      END                                                               
      BLOCK DATA ATMCON                                                 
C***********************************************************************
C     THIS SUBROUTINE INITIALIZES THE CONSTANTS USED IN THE             
C     PROGRAM. CONSTANTS RELATING TO THE ATMOSPHERIC PROFILES ARE STORED
C     IN BLOCK DATA MLATMB.                                             
      COMMON /CONSTN/ PZERO,TZERO,AVOGAD,ALOSMT,GASCON,PLANK,BOLTZ,     
     1    CLIGHT,ADCON,ALZERO,AVMWT,AIRMWT,AMWT(35)                     
      COMMON/HMOLC/HMOLC(35)                                            
      CHARACTER*8 HMOLC                                                 
      DATA PZERO/1013.25/,TZERO/273.15/                                 
      DATA AVOGAD/6.022045E+23/,ALOSMT/2.68675E+19/,                    
     1    GASCON/8.31441E+7/,PLANK/6.626176E-27/,BOLTZ/1.380662E-16/,   
     2    CLIGHT/2.9979246E10/                                          
C                                                                       
C**   ALZERO IS THE MEAN LORENTZ HALFWIDTH AT PZERO AND 296.0 K.        
C**   AVMWT IS THE MEAN MOLECULAR WEIGHT USED TO AUTOMATICALLY          
C**   GENERATE THE FASCODE BOUNDARIES IN AUTLAY                         
C                                                                       
      DATA ALZERO/0.1/,AVMWT/36.0/                                      
C                                                                       
C**   ORDER OF MOLECULES H2O(1), CO2(2), O3(3), N2O(4), CO(5), CH4(6),  
C**       O2(7), NO(8), SO2(9), NO2(10), NH3(11), HNO3(12), OH(13),     
C**       HF(14 ), HCL(15), HBR(16), HI(17), CLO(18), OCS(19), H2CO(20) 
C**       HOCL(21), N2(22), HCN(23), CH3CL(24), H2O2(25), C2H2(26),     
C**       C2H6(27), PH3(28),COF2(29),   SF6(30)                         
C                                                                       
       DATA HMOLC   /'  H2O   ','  CO2   ','   O3   ',                  
     1    '  N2O   ','   CO   ','  CH4   ','   O2   ',                  
     2    '   NO   ','  SO2   ','  NO2   ','  NH3   ',                  
     3    ' HNO3   ','   OH   ','   HF   ','  HCL   ',                  
     4    '  HBR   ','   HI   ','  CLO   ','  OCS   ',                  
     5    ' H2CO   ',' HOCL   ','   N2   ','  HCN   ',                  
     6    ' CH3CL  ',' H2O2   ',' C2H2   ',' C2H6   ',                  
     7    '  PH3   ',' COF2   ','  SF6   ',' H2S    ',                  
     8    ' HCOOH  ',3*'        '/                                      
C                                                                       
C**   MOLECULAR WEIGHTS                                                 
C                                                                       
      DATA AIRMWT/28.964/,AMWT/18.015,44.010,47.998,44.01,28.011,       
     1    16.043,31.999,30.01,64.06,46.01,17.03,63.01,17.00,20.01,      
     2    36.46,80.92,127.91,51.45,60.08,30.03,52.46,28.014,            
     3    27.03, 50.49, 34.01, 26.03, 30.07, 34.00,66.0,146.,           
     4    34.08,46.016,3*0./                                            
      END                                                               
      REAL FUNCTION BBFN(T,V)                                           
C                                                                       
C     PLANCK BLACK BODY FUNCTION [WATTS CM-2 STER-1 / CM-1].            
C                                                                       
C     DECLARE ARGUMENTS:                                                
C       T        TEMPERATURE [K].                                       
C       V        FREQUENCY [CM-1].                                      
      REAL T,V                                                          
C                                                                       
C     LIST COMMONS:                                                     
C       PI       THE CONSTANT PI                                        
C       DEG      NUMBER OF DEGREES IN ONE RADIAN.                       
C       BIGNUM   MAXIMUM SINGLE PRECISION NUMBER.                       
C       BIGEXP   MAXIMUM EXPONENTIAL ARGUMENT WITHOUT OVERFLOW.         
      REAL PI,DEG,BIGNUM,BIGEXP                                         
      COMMON/CNSTNS/PI,DEG,BIGNUM,BIGEXP                                
C                                                                       
C     DECLARE LOCAL VARIABLES:                                          
C       X        EXPONENT USED IN PLANCK FUNCTION.                      
      REAL X                                                            
      BBFN=0.                                                           
      IF(V.LE.0.)RETURN                                                 
      X=1.43879*V/T                                                     
C                                                                       
C     PROTECT AGAINST EXPONENTIAL OVERFLOW                              
      IF(X.GT.BIGEXP)RETURN                                             
      BBFN=1.190956E-12*V**3/(EXP(X)-1.)                                
      RETURN                                                            
      END                                                               
      REAL FUNCTION BETABS(COSANG,G)                                    
C                                                                       
C     FUNCTION BETABS SUPPLIES THE BACK SCATTER FRACTION FOR A          
C     GIVEN ASYMMETRY FACTOR AND COSINE OF ANGLE (A.E.R. 1986).         
C                                                                       
C                         1                                             
C                      1  /                                             
C     BETA(COSANG)  =  -  |  P (-M,COSANG) dM                           
C                      2  /   G                                         
C                         0                                             
C                                                                       
C     WHERE P (-M,COSANG) IS THE HENYEY-GREENSTEIN PHASE FUNCTION.      
C            G                                                          
C                                                                       
C     DECLARE INPUTS                                                    
      REAL COSANG,G                                                     
C                                                                       
C     LIST COMMONS                                                      
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH                               
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                           
C                                                                       
C     DECLARE LOCAL VARIABLES                                           
      INTEGER N                                                         
      REAL ABSCOS,ABSG,COSN,BMAX,BMIN,COSINE(9),A(10,5)                 
      DATA COSINE/0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.8, 1.0/          
      DATA A/                                                           
     1  0.5,    0.5,               0.5,               0.5,              
     2          0.5,               0.5,               0.5,              
     3          0.5,               0.5,               0.5,              
     4  0.0,    0.13979292889,    -0.12019000482,    -0.46017123188,    
     5         -0.406828796532,   -0.3001541656,     -0.553474414782,   
     6         -0.626794663911,   -0.84678101,       -0.406823676662,   
     7  0.0,   -1.5989873995,     -0.2724219928,      1.18747390274,    
     8          0.49409050834,    -0.35928947292,     0.37397957743,    
     9          0.18057740986,     0.50718036245,     0.01406832224,    
     &  0.0,    3.5184116963,      0.6385960123,     -2.081230849,      
     1         -1.0144699491,      0.1589475781,     -0.74761782865,    
     2         -0.37416958202,    -0.374040109,       0.1055607702,     
     3  0.0,   -2.5592172257,     -0.7459840146,      0.85392041407,    
     4          0.4272082373,      0.00049606046,     0.42711266606,    
     5          0.32038683614,     0.2136746594,     -0.2128054157/     
C                                                                       
C     SPECIAL CASES                                                     
      ABSCOS=ABS(COSANG)                                                
      ABSG=ABS(G)                                                       
      IF(ABSCOS.LT..000001 .OR. ABSG.LT..000001)THEN                    
          BETABS=.5                                                     
          RETURN                                                        
      ELSEIF(ABSG.GT..999999)THEN                                       
          BETABS=0.                                                     
          IF(COSANG.LT.0.)BETABS=1.                                     
          IF(G.LT.0.)BETABS=1.-BETABS                                   
          RETURN                                                        
      ENDIF                                                             
C                                                                       
C     BACKSCATTERING INTERPOLATION                                      
      IF(ABSCOS.LT..7)THEN                                              
          N=10*ABSCOS+1                                                 
      ELSEIF(ABSCOS.LT..8)THEN                                          
          N=7                                                           
      ELSEIF(ABSCOS.LE.1.)THEN                                          
          N=8                                                           
      ELSE                                                              
Calley          WRITE(IPR,'(A,F15.7)')                                  
          IF (IPR .GT. 0) WRITE(IPR,'(A,F15.7)')                        
     1      ' FATAL ERROR in BETABS:  COSANG =',COSANG                  
          STOP                                                          
      ENDIF                                                             
      COSN=COSINE(N)                                                    
      BMAX=A(N,1)+ABSG*(A(N,2)+ABSG*(A(N,3)+ABSG*(A(N,4)+ABSG*A(N,5)))) 
      N=N+1                                                             
      BMIN=A(N,1)+ABSG*(A(N,2)+ABSG*(A(N,3)+ABSG*(A(N,4)+ABSG*A(N,5)))) 
      BETABS=BMAX+(BMIN-BMAX)*(ABSCOS-COSN)/(COSINE(N)-COSN)            
C                                                                       
C     CHECK FOR ROUND-OFF ERROR PROBLEMS                                
      IF(BETABS.GE..5)THEN                                              
          BETABS=.5                                                     
          RETURN                                                        
      ENDIF                                                             
      IF(BETABS.LT.0.)BETABS=0.                                         
C                                                                       
C     IF G IS NEGATIVE, THE COMPLEMENT IS REQUIRED.                     
      IF(G.LT.0.)BETABS=1.-BETABS                                       
      IF(COSANG.LT.0.)BETABS=1.-BETABS                                  
      RETURN                                                            
      END                                                               
      BLOCK DATA BFH2O                                                  
C>    BLOCK DATA                                                        
C               06/28/82                                                
C               UNITS OF (CM**3/MOL)*1.E-20                             
      COMMON /FH2O/ V1,V2,DV,NPT,F0000(2),                              
     1      F0001(50),F0051(50),F0101(50),F0151(50),F0201(50),F0251(50),
     2      F0301(50),F0351(50),F0401(50),F0451(50),F0501(50),F0551(50),
     3      F0601(50),F0651(50),F0701(50),F0751(50),F0801(50),F0851(50),
     4      F0901(50),F0951(50),F1001(50),F1051(50),F1101(50),F1151(50),
     5      F1201(50),F1251(50),F1301(50),F1351(50),F1401(50),F1451(50),
     6      F1501(50),F1551(50),F1601(50),F1651(50),F1701(50),F1751(50),
     7      F1801(50),F1851(50),F1901(50),F1951(50),F2001(1)            
C                                                                       
C                                                                       
       DATA V1,V2,DV,NPT /                                              
     1      -20.0,     20000.0,       10.0,  2003/                      
C                                                                       
C                                                                       
      DATA F0000/ 1.2859E-02, 1.1715E-02/                               
      DATA F0001/                                                       
     X 1.1038E-02, 1.1715E-02, 1.2859E-02, 1.5326E-02, 1.6999E-02,      
     X 1.8321E-02, 1.9402E-02, 1.9570E-02, 1.9432E-02, 1.7572E-02,      
     X 1.6760E-02, 1.5480E-02, 1.3984E-02, 1.2266E-02, 1.0467E-02,      
     X 9.4526E-03, 8.0485E-03, 6.9484E-03, 6.1416E-03, 5.0941E-03,      
     X 4.4836E-03, 3.8133E-03, 3.4608E-03, 3.1487E-03, 2.4555E-03,      
     X 2.0977E-03, 1.7266E-03, 1.4920E-03, 1.2709E-03, 9.8081E-04,      
     X 8.5063E-04, 6.8822E-04, 5.3809E-04, 4.4679E-04, 3.3774E-04,      
     X 2.7979E-04, 2.1047E-04, 1.6511E-04, 1.2993E-04, 9.3033E-05,      
     X 7.4360E-05, 5.6428E-05, 4.5442E-05, 3.4575E-05, 2.7903E-05,      
     X 2.1374E-05, 1.6075E-05, 1.3022E-05, 1.0962E-05, 8.5959E-06/      
      DATA F0051/                                                       
     X 6.9125E-06, 5.3808E-06, 4.3586E-06, 3.6394E-06, 2.9552E-06,      
     X 2.3547E-06, 1.8463E-06, 1.6036E-06, 1.3483E-06, 1.1968E-06,      
     X 1.0333E-06, 8.4484E-07, 6.7195E-07, 5.0947E-07, 4.2343E-07,      
     X 3.4453E-07, 2.7830E-07, 2.3063E-07, 1.9951E-07, 1.7087E-07,      
     X 1.4393E-07, 1.2575E-07, 1.0750E-07, 8.2325E-08, 5.7524E-08,      
     X 4.4482E-08, 3.8106E-08, 3.4315E-08, 2.9422E-08, 2.5069E-08,      
     X 2.2402E-08, 1.9349E-08, 1.6152E-08, 1.2208E-08, 8.9660E-09,      
     X 7.1322E-09, 6.1028E-09, 5.2938E-09, 4.5350E-09, 3.4977E-09,      
     X 2.9511E-09, 2.4734E-09, 2.0508E-09, 1.8507E-09, 1.6373E-09,      
     X 1.5171E-09, 1.3071E-09, 1.2462E-09, 1.2148E-09, 1.2590E-09/      
      DATA F0101/                                                       
     X 1.3153E-09, 1.3301E-09, 1.4483E-09, 1.6944E-09, 2.0559E-09,      
     X 2.2954E-09, 2.6221E-09, 3.2606E-09, 4.2392E-09, 5.2171E-09,      
     X 6.2553E-09, 8.2548E-09, 9.5842E-09, 1.1280E-08, 1.3628E-08,      
     X 1.7635E-08, 2.1576E-08, 2.4835E-08, 3.0014E-08, 3.8485E-08,      
     X 4.7440E-08, 5.5202E-08, 7.0897E-08, 9.6578E-08, 1.3976E-07,      
     X 1.8391E-07, 2.3207E-07, 2.9960E-07, 4.0408E-07, 5.9260E-07,      
     X 7.8487E-07, 1.0947E-06, 1.4676E-06, 1.9325E-06, 2.6587E-06,      
     X 3.4534E-06, 4.4376E-06, 5.8061E-06, 7.0141E-06, 8.4937E-06,      
     X 1.0186E-05, 1.2034E-05, 1.3837E-05, 1.6595E-05, 1.9259E-05,      
     X 2.1620E-05, 2.3681E-05, 2.7064E-05, 3.2510E-05, 3.5460E-05/      
      DATA F0151/                                                       
     X 3.9109E-05, 4.2891E-05, 4.7757E-05, 5.0981E-05, 5.0527E-05,      
     X 4.8618E-05, 4.4001E-05, 3.7982E-05, 3.2667E-05, 2.7794E-05,      
     X 2.4910E-05, 2.4375E-05, 2.7316E-05, 3.2579E-05, 3.5499E-05,      
     X 3.8010E-05, 4.1353E-05, 4.3323E-05, 4.3004E-05, 3.9790E-05,      
     X 3.7718E-05, 3.6360E-05, 3.2386E-05, 2.7409E-05, 2.3626E-05,      
     X 2.0631E-05, 1.8371E-05, 1.5445E-05, 1.2989E-05, 1.1098E-05,      
     X 9.6552E-06, 8.0649E-06, 7.2365E-06, 5.9137E-06, 5.2759E-06,      
     X 4.8860E-06, 4.1321E-06, 3.5918E-06, 2.7640E-06, 2.4892E-06,      
     X 2.1018E-06, 1.7848E-06, 1.5855E-06, 1.3569E-06, 1.1986E-06,      
     X 9.4693E-07, 7.4097E-07, 6.3443E-07, 4.8131E-07, 4.0942E-07/      
      DATA F0201/                                                       
     X 3.3316E-07, 2.8488E-07, 2.3461E-07, 1.7397E-07, 1.4684E-07,      
     X 1.0953E-07, 8.5396E-08, 6.9261E-08, 5.4001E-08, 4.5430E-08,      
     X 3.2791E-08, 2.5995E-08, 2.0225E-08, 1.5710E-08, 1.3027E-08,      
     X 1.0229E-08, 8.5277E-09, 6.5249E-09, 5.0117E-09, 3.9906E-09,      
     X 3.2332E-09, 2.7847E-09, 2.4570E-09, 2.3359E-09, 2.0599E-09,      
     X 1.8436E-09, 1.6559E-09, 1.4910E-09, 1.2794E-09, 9.8229E-10,      
     X 8.0054E-10, 6.0769E-10, 4.5646E-10, 3.3111E-10, 2.4428E-10,      
     X 1.8007E-10, 1.3291E-10, 9.7974E-11, 7.8271E-11, 6.3833E-11,      
     X 5.4425E-11, 4.6471E-11, 4.0209E-11, 3.5227E-11, 3.1212E-11,      
     X 2.8840E-11, 2.7762E-11, 2.7935E-11, 3.2012E-11, 3.9525E-11/      
      DATA F0251/                                                       
     X 5.0303E-11, 6.8027E-11, 9.3954E-11, 1.2986E-10, 1.8478E-10,      
     X 2.5331E-10, 3.4827E-10, 4.6968E-10, 6.2380E-10, 7.9106E-10,      
     X 1.0026E-09, 1.2102E-09, 1.4146E-09, 1.6154E-09, 1.7510E-09,      
     X 1.8575E-09, 1.8742E-09, 1.8700E-09, 1.8582E-09, 1.9657E-09,      
     X 2.1204E-09, 2.0381E-09, 2.0122E-09, 2.0436E-09, 2.1213E-09,      
     X 2.0742E-09, 1.9870E-09, 2.0465E-09, 2.1556E-09, 2.2222E-09,      
     X 2.1977E-09, 2.1047E-09, 1.9334E-09, 1.7357E-09, 1.5754E-09,      
     X 1.4398E-09, 1.4018E-09, 1.5459E-09, 1.7576E-09, 2.1645E-09,      
     X 2.9480E-09, 4.4439E-09, 5.8341E-09, 8.0757E-09, 1.1658E-08,      
     X 1.6793E-08, 2.2694E-08, 2.9468E-08, 3.9278E-08, 5.2145E-08/      
      DATA F0301/                                                       
     X 6.4378E-08, 7.7947E-08, 8.5321E-08, 9.7848E-08, 1.0999E-07,      
     X 1.1489E-07, 1.2082E-07, 1.2822E-07, 1.4053E-07, 1.5238E-07,      
     X 1.5454E-07, 1.5018E-07, 1.4048E-07, 1.2359E-07, 1.0858E-07,      
     X 9.3486E-08, 8.1638E-08, 7.7690E-08, 8.4625E-08, 1.0114E-07,      
     X 1.1430E-07, 1.2263E-07, 1.3084E-07, 1.3380E-07, 1.3573E-07,      
     X 1.3441E-07, 1.2962E-07, 1.2638E-07, 1.1934E-07, 1.1371E-07,      
     X 1.0871E-07, 9.8843E-08, 9.1877E-08, 9.1050E-08, 9.3213E-08,      
     X 9.2929E-08, 1.0155E-07, 1.1263E-07, 1.2370E-07, 1.3636E-07,      
     X 1.5400E-07, 1.7656E-07, 2.1329E-07, 2.3045E-07, 2.5811E-07,      
     X 2.9261E-07, 3.4259E-07, 4.0770E-07, 4.8771E-07, 5.8081E-07/      
      DATA F0351/                                                       
     X 7.2895E-07, 8.7482E-07, 1.0795E-06, 1.3384E-06, 1.7208E-06,      
     X 2.0677E-06, 2.5294E-06, 3.1123E-06, 3.7900E-06, 4.7752E-06,      
     X 5.6891E-06, 6.6261E-06, 7.6246E-06, 8.7730E-06, 9.6672E-06,      
     X 1.0980E-05, 1.1287E-05, 1.1670E-05, 1.1635E-05, 1.1768E-05,      
     X 1.2039E-05, 1.2253E-05, 1.3294E-05, 1.4005E-05, 1.3854E-05,      
     X 1.3420E-05, 1.3003E-05, 1.2645E-05, 1.1715E-05, 1.1258E-05,      
     X 1.1516E-05, 1.2494E-05, 1.3655E-05, 1.4931E-05, 1.4649E-05,      
     X 1.3857E-05, 1.3120E-05, 1.1791E-05, 1.0637E-05, 8.2760E-06,      
     X 6.5821E-06, 5.1959E-06, 4.0158E-06, 3.0131E-06, 2.0462E-06,      
     X 1.4853E-06, 1.0365E-06, 7.3938E-07, 4.9752E-07, 3.4148E-07/      
      DATA F0401/                                                       
     X 2.4992E-07, 1.8363E-07, 1.4591E-07, 1.1380E-07, 9.0588E-08,      
     X 7.3697E-08, 6.0252E-08, 5.1868E-08, 4.2660E-08, 3.6163E-08,      
     X 3.2512E-08, 2.9258E-08, 2.4238E-08, 2.1209E-08, 1.6362E-08,      
     X 1.3871E-08, 1.2355E-08, 9.6940E-09, 7.7735E-09, 6.2278E-09,      
     X 5.2282E-09, 4.3799E-09, 3.5545E-09, 2.7527E-09, 2.0950E-09,      
     X 1.6344E-09, 1.2689E-09, 1.0403E-09, 8.4880E-10, 6.3461E-10,      
     X 4.7657E-10, 3.5220E-10, 2.7879E-10, 2.3021E-10, 1.6167E-10,      
     X 1.1732E-10, 8.9206E-11, 7.0596E-11, 5.8310E-11, 4.4084E-11,      
     X 3.1534E-11, 2.5068E-11, 2.2088E-11, 2.2579E-11, 2.2637E-11,      
     X 2.5705E-11, 3.2415E-11, 4.6116E-11, 6.5346E-11, 9.4842E-11/      
      DATA F0451/                                                       
     X 1.2809E-10, 1.8211E-10, 2.4052E-10, 3.0270E-10, 3.5531E-10,      
     X 4.2402E-10, 4.6730E-10, 4.7942E-10, 4.6813E-10, 4.5997E-10,      
     X 4.5788E-10, 4.0311E-10, 3.7367E-10, 3.3149E-10, 2.9281E-10,      
     X 2.5231E-10, 2.1152E-10, 1.9799E-10, 1.8636E-10, 1.9085E-10,      
     X 2.0786E-10, 2.2464E-10, 2.3785E-10, 2.5684E-10, 2.7499E-10,      
     X 2.6962E-10, 2.6378E-10, 2.6297E-10, 2.6903E-10, 2.7035E-10,      
     X 2.5394E-10, 2.5655E-10, 2.7184E-10, 2.9013E-10, 3.0585E-10,      
     X 3.0791E-10, 3.1667E-10, 3.4343E-10, 3.7365E-10, 4.0269E-10,      
     X 4.7260E-10, 5.6584E-10, 6.9791E-10, 8.6569E-10, 1.0393E-09,      
     X 1.2067E-09, 1.5047E-09, 1.8583E-09, 2.2357E-09, 2.6498E-09/      
      DATA F0501/                                                       
     X 3.2483E-09, 3.9927E-09, 4.6618E-09, 5.5555E-09, 6.6609E-09,      
     X 8.2139E-09, 1.0285E-08, 1.3919E-08, 1.8786E-08, 2.5150E-08,      
     X 3.3130E-08, 4.5442E-08, 6.3370E-08, 9.0628E-08, 1.2118E-07,      
     X 1.5927E-07, 2.1358E-07, 2.7825E-07, 3.7671E-07, 4.4894E-07,      
     X 5.4442E-07, 6.2240E-07, 7.3004E-07, 8.3384E-07, 8.7933E-07,      
     X 8.8080E-07, 8.6939E-07, 8.6541E-07, 8.2055E-07, 7.7278E-07,      
     X 7.5989E-07, 8.6909E-07, 9.7945E-07, 1.0394E-06, 1.0646E-06,      
     X 1.1509E-06, 1.2017E-06, 1.1915E-06, 1.1259E-06, 1.1549E-06,      
     X 1.1938E-06, 1.2356E-06, 1.2404E-06, 1.1716E-06, 1.1149E-06,      
     X 1.0073E-06, 8.9845E-07, 7.6639E-07, 6.1517E-07, 5.0887E-07/      
      DATA F0551/                                                       
     X 4.1269E-07, 3.2474E-07, 2.5698E-07, 1.8893E-07, 1.4009E-07,      
     X 1.0340E-07, 7.7724E-08, 5.7302E-08, 4.2178E-08, 2.9603E-08,      
     X 2.1945E-08, 1.6301E-08, 1.2806E-08, 1.0048E-08, 7.8970E-09,      
     X 6.1133E-09, 4.9054E-09, 4.1985E-09, 3.6944E-09, 3.2586E-09,      
     X 2.7362E-09, 2.3647E-09, 2.1249E-09, 1.8172E-09, 1.6224E-09,      
     X 1.5158E-09, 1.2361E-09, 1.0682E-09, 9.2312E-10, 7.9220E-10,      
     X 6.8174E-10, 5.6147E-10, 4.8268E-10, 4.1534E-10, 3.3106E-10,      
     X 2.8275E-10, 2.4584E-10, 2.0742E-10, 1.7840E-10, 1.4664E-10,      
     X 1.2390E-10, 1.0497E-10, 8.5038E-11, 6.7008E-11, 5.6355E-11,      
     X 4.3323E-11, 3.6914E-11, 3.2262E-11, 3.0749E-11, 3.0318E-11/      
      DATA F0601/                                                       
     X 2.9447E-11, 2.9918E-11, 3.0668E-11, 3.1315E-11, 3.0329E-11,      
     X 2.8259E-11, 2.6065E-11, 2.3578E-11, 2.0469E-11, 1.6908E-11,      
     X 1.4912E-11, 1.1867E-11, 9.9730E-12, 8.1014E-12, 6.7528E-12,      
     X 6.3133E-12, 5.8599E-12, 6.0145E-12, 6.5105E-12, 7.0537E-12,      
     X 7.4973E-12, 7.8519E-12, 8.5039E-12, 9.1995E-12, 1.0694E-11,      
     X 1.1659E-11, 1.2685E-11, 1.3087E-11, 1.3222E-11, 1.2634E-11,      
     X 1.1077E-11, 9.6259E-12, 8.3202E-12, 7.4857E-12, 6.8069E-12,      
     X 6.7496E-12, 7.3116E-12, 8.0171E-12, 8.6394E-12, 9.2659E-12,      
     X 1.0048E-11, 1.0941E-11, 1.2226E-11, 1.3058E-11, 1.5193E-11,      
     X 1.8923E-11, 2.3334E-11, 2.8787E-11, 3.6693E-11, 4.8295E-11/      
      DATA F0651/                                                       
     X 6.4260E-11, 8.8269E-11, 1.1865E-10, 1.5961E-10, 2.0605E-10,      
     X 2.7349E-10, 3.7193E-10, 4.8216E-10, 6.1966E-10, 7.7150E-10,      
     X 1.0195E-09, 1.2859E-09, 1.6535E-09, 2.0316E-09, 2.3913E-09,      
     X 3.0114E-09, 3.7495E-09, 4.6504E-09, 5.9145E-09, 7.6840E-09,      
     X 1.0304E-08, 1.3010E-08, 1.6441E-08, 2.1475E-08, 2.5892E-08,      
     X 2.9788E-08, 3.3820E-08, 4.0007E-08, 4.4888E-08, 4.5765E-08,      
     X 4.6131E-08, 4.6239E-08, 4.4849E-08, 4.0729E-08, 3.6856E-08,      
     X 3.6164E-08, 3.7606E-08, 4.1457E-08, 4.3750E-08, 5.1150E-08,      
     X 5.6054E-08, 6.1586E-08, 6.4521E-08, 6.6494E-08, 6.9024E-08,      
     X 6.8893E-08, 7.0901E-08, 6.9760E-08, 7.1485E-08, 7.0740E-08/      
      DATA F0701/                                                       
     X 7.3764E-08, 7.6618E-08, 8.4182E-08, 9.3838E-08, 1.0761E-07,      
     X 1.2851E-07, 1.4748E-07, 1.8407E-07, 2.2109E-07, 2.6392E-07,      
     X 2.9887E-07, 3.4493E-07, 4.0336E-07, 4.3551E-07, 4.9231E-07,      
     X 5.0728E-07, 5.3781E-07, 5.3285E-07, 5.4496E-07, 5.5707E-07,      
     X 5.6944E-07, 6.1123E-07, 6.4317E-07, 6.4581E-07, 6.1999E-07,      
     X 6.0191E-07, 5.7762E-07, 5.7241E-07, 5.7013E-07, 6.0160E-07,      
     X 6.6905E-07, 7.4095E-07, 8.2121E-07, 8.0947E-07, 7.6145E-07,      
     X 7.2193E-07, 6.3722E-07, 5.4316E-07, 4.2186E-07, 3.2528E-07,      
     X 2.5207E-07, 1.8213E-07, 1.2658E-07, 8.6746E-08, 6.0216E-08,      
     X 4.1122E-08, 2.8899E-08, 2.1740E-08, 1.7990E-08, 1.5593E-08/      
      DATA F0751/                                                       
     X 1.3970E-08, 1.2238E-08, 1.0539E-08, 9.2386E-09, 7.8481E-09,      
     X 6.8704E-09, 5.7615E-09, 5.0434E-09, 4.6886E-09, 4.3770E-09,      
     X 3.9768E-09, 3.5202E-09, 3.1854E-09, 2.9009E-09, 2.5763E-09,      
     X 2.2135E-09, 1.9455E-09, 1.6248E-09, 1.3368E-09, 1.0842E-09,      
     X 8.4254E-10, 6.7414E-10, 5.4667E-10, 4.5005E-10, 3.4932E-10,      
     X 2.6745E-10, 2.2053E-10, 1.8162E-10, 1.4935E-10, 1.1618E-10,      
     X 9.1888E-11, 8.0672E-11, 6.8746E-11, 6.2668E-11, 5.5715E-11,      
     X 4.5074E-11, 3.7669E-11, 3.2082E-11, 2.8085E-11, 2.4838E-11,      
     X 1.9791E-11, 1.6964E-11, 1.3887E-11, 1.1179E-11, 9.7499E-12,      
     X 7.8255E-12, 6.3698E-12, 5.3265E-12, 4.6588E-12, 4.4498E-12/      
      DATA F0801/                                                       
     X 3.9984E-12, 3.7513E-12, 3.7176E-12, 3.9148E-12, 4.2702E-12,      
     X 5.0090E-12, 6.5801E-12, 8.7787E-12, 1.2718E-11, 1.8375E-11,      
     X 2.5304E-11, 3.5403E-11, 4.8842E-11, 6.4840E-11, 8.0911E-11,      
     X 1.0136E-10, 1.2311E-10, 1.4203E-10, 1.5869E-10, 1.8093E-10,      
     X 2.1370E-10, 2.5228E-10, 2.8816E-10, 3.4556E-10, 3.9860E-10,      
     X 4.4350E-10, 4.7760E-10, 5.2357E-10, 6.0827E-10, 6.3635E-10,      
     X 6.5886E-10, 6.8753E-10, 7.2349E-10, 7.2789E-10, 6.8232E-10,      
     X 6.6081E-10, 6.4232E-10, 6.3485E-10, 6.4311E-10, 7.2235E-10,      
     X 7.7263E-10, 8.1668E-10, 9.0324E-10, 9.7643E-10, 1.0535E-09,      
     X 1.0195E-09, 1.0194E-09, 1.0156E-09, 9.6792E-10, 9.2725E-10/      
      DATA F0851/                                                       
     X 8.7347E-10, 8.4484E-10, 8.2647E-10, 8.4363E-10, 9.1261E-10,      
     X 1.0051E-09, 1.1511E-09, 1.4037E-09, 1.8066E-09, 2.4483E-09,      
     X 3.2739E-09, 4.3194E-09, 5.6902E-09, 7.7924E-09, 9.7376E-09,      
     X 1.2055E-08, 1.4303E-08, 1.6956E-08, 1.9542E-08, 2.2233E-08,      
     X 2.5186E-08, 2.7777E-08, 2.8943E-08, 2.8873E-08, 2.9417E-08,      
     X 2.7954E-08, 2.7524E-08, 2.7040E-08, 3.1254E-08, 3.6843E-08,      
     X 3.7797E-08, 3.8713E-08, 4.0135E-08, 4.2824E-08, 4.3004E-08,      
     X 4.0279E-08, 4.2781E-08, 4.5220E-08, 4.8948E-08, 5.0172E-08,      
     X 4.8499E-08, 4.7182E-08, 4.2204E-08, 3.7701E-08, 3.0972E-08,      
     X 2.4654E-08, 1.9543E-08, 1.4609E-08, 1.1171E-08, 8.3367E-09/      
      DATA F0901/                                                       
     X 6.3791E-09, 5.0790E-09, 4.0655E-09, 3.3658E-09, 2.7882E-09,      
     X 2.4749E-09, 2.2287E-09, 2.0217E-09, 1.8191E-09, 1.5897E-09,      
     X 1.4191E-09, 1.2448E-09, 1.0884E-09, 9.3585E-10, 7.9429E-10,      
     X 7.3214E-10, 6.5008E-10, 5.7549E-10, 5.4300E-10, 4.7251E-10,      
     X 4.3451E-10, 3.8446E-10, 3.5589E-10, 3.4432E-10, 2.8209E-10,      
     X 2.4620E-10, 2.1278E-10, 1.8406E-10, 1.6314E-10, 1.3261E-10,      
     X 1.1696E-10, 9.6865E-11, 7.6814E-11, 6.6411E-11, 5.0903E-11,      
     X 4.0827E-11, 3.0476E-11, 2.3230E-11, 1.7707E-11, 1.3548E-11,      
     X 1.0719E-11, 9.3026E-12, 8.7967E-12, 8.3136E-12, 7.3918E-12,      
     X 6.5293E-12, 5.9243E-12, 5.3595E-12, 3.5266E-12, 2.2571E-12/      
      DATA F0951/                                                       
     X 1.6150E-12, 1.1413E-12, 8.4998E-13, 7.0803E-13, 5.1747E-13,      
     X 4.0694E-13, 3.6528E-13, 3.3670E-13, 3.1341E-13, 2.9390E-13,      
     X 2.8680E-13, 3.1283E-13, 3.7294E-13, 5.0194E-13, 6.7919E-13,      
     X 1.0455E-12, 1.5230E-12, 2.3932E-12, 3.4231E-12, 5.0515E-12,      
     X 7.3193E-12, 9.9406E-12, 1.2193E-11, 1.4742E-11, 1.9269E-11,      
     X 2.1816E-11, 2.2750E-11, 2.2902E-11, 2.3888E-11, 2.4902E-11,      
     X 2.2160E-11, 2.0381E-11, 1.9903E-11, 2.0086E-11, 1.9304E-11,      
     X 2.0023E-11, 2.2244E-11, 2.5450E-11, 3.1228E-11, 3.4560E-11,      
     X 3.6923E-11, 3.7486E-11, 3.8124E-11, 3.8317E-11, 3.4737E-11,      
     X 3.3037E-11, 3.1724E-11, 2.9840E-11, 2.8301E-11, 2.5857E-11/      
      DATA F1001/                                                       
     X 2.3708E-11, 1.9452E-11, 1.6232E-11, 1.5174E-11, 1.4206E-11,      
     X 1.4408E-11, 1.5483E-11, 1.8642E-11, 2.3664E-11, 3.0181E-11,      
     X 4.0160E-11, 5.2287E-11, 7.2754E-11, 1.0511E-10, 1.4531E-10,      
     X 2.0998E-10, 2.6883E-10, 3.3082E-10, 4.2638E-10, 5.3132E-10,      
     X 6.3617E-10, 7.1413E-10, 8.5953E-10, 9.9715E-10, 1.0796E-09,      
     X 1.0978E-09, 1.1052E-09, 1.1095E-09, 1.0641E-09, 9.7881E-10,      
     X 9.6590E-10, 1.0332E-09, 1.1974E-09, 1.3612E-09, 1.5829E-09,      
     X 1.8655E-09, 2.1465E-09, 2.4779E-09, 2.7370E-09, 2.9915E-09,      
     X 3.3037E-09, 3.6347E-09, 3.9587E-09, 4.4701E-09, 5.0122E-09,      
     X 5.8044E-09, 6.1916E-09, 6.9613E-09, 7.7863E-09, 8.2820E-09/      
      DATA F1051/                                                       
     X 9.4359E-09, 9.7387E-09, 1.0656E-08, 1.0746E-08, 1.1210E-08,      
     X 1.1905E-08, 1.2194E-08, 1.3145E-08, 1.3738E-08, 1.3634E-08,      
     X 1.3011E-08, 1.2511E-08, 1.1805E-08, 1.2159E-08, 1.2390E-08,      
     X 1.3625E-08, 1.5678E-08, 1.7886E-08, 1.9933E-08, 1.9865E-08,      
     X 1.9000E-08, 1.7812E-08, 1.5521E-08, 1.2593E-08, 9.5635E-09,      
     X 7.2987E-09, 5.2489E-09, 3.5673E-09, 2.4206E-09, 1.6977E-09,      
     X 1.2456E-09, 9.3744E-10, 7.8379E-10, 6.9960E-10, 6.6451E-10,      
     X 6.8521E-10, 7.4234E-10, 8.6658E-10, 9.4972E-10, 1.0791E-09,      
     X 1.2359E-09, 1.3363E-09, 1.5025E-09, 1.5368E-09, 1.6152E-09,      
     X 1.6184E-09, 1.6557E-09, 1.7035E-09, 1.6916E-09, 1.7237E-09/      
      DATA F1101/                                                       
     X 1.7175E-09, 1.6475E-09, 1.5335E-09, 1.4272E-09, 1.3282E-09,      
     X 1.3459E-09, 1.4028E-09, 1.5192E-09, 1.7068E-09, 1.9085E-09,      
     X 2.1318E-09, 2.1020E-09, 1.9942E-09, 1.8654E-09, 1.6391E-09,      
     X 1.3552E-09, 1.0186E-09, 7.8540E-10, 5.7022E-10, 3.9247E-10,      
     X 2.5441E-10, 1.6699E-10, 1.1132E-10, 6.8989E-11, 4.5255E-11,      
     X 3.1106E-11, 2.3161E-11, 1.7618E-11, 1.4380E-11, 1.1601E-11,      
     X 9.7148E-12, 8.4519E-12, 6.5392E-12, 5.4113E-12, 4.7624E-12,      
     X 4.0617E-12, 3.6173E-12, 2.8608E-12, 2.2724E-12, 1.7436E-12,      
     X 1.3424E-12, 1.0358E-12, 7.3064E-13, 5.4500E-13, 4.0551E-13,      
     X 2.8642E-13, 2.1831E-13, 1.6860E-13, 1.2086E-13, 1.0150E-13/      
      DATA F1151/                                                       
     X 9.3550E-14, 8.4105E-14, 7.3051E-14, 6.9796E-14, 7.9949E-14,      
     X 1.0742E-13, 1.5639E-13, 2.1308E-13, 3.1226E-13, 4.6853E-13,      
     X 6.6917E-13, 1.0088E-12, 1.4824E-12, 2.2763E-12, 3.3917E-12,      
     X 4.4585E-12, 6.3187E-12, 8.4189E-12, 1.1302E-11, 1.3431E-11,      
     X 1.5679E-11, 1.9044E-11, 2.2463E-11, 2.3605E-11, 2.3619E-11,      
     X 2.3505E-11, 2.3805E-11, 2.2549E-11, 1.9304E-11, 1.8382E-11,      
     X 1.7795E-11, 1.8439E-11, 1.9146E-11, 2.1966E-11, 2.6109E-11,      
     X 3.1883E-11, 3.7872E-11, 4.3966E-11, 4.8789E-11, 5.3264E-11,      
     X 5.9705E-11, 6.3744E-11, 7.0163E-11, 7.9114E-11, 8.8287E-11,      
     X 9.9726E-11, 1.1498E-10, 1.3700E-10, 1.6145E-10, 1.9913E-10/      
      DATA F1201/                                                       
     X 2.2778E-10, 2.6216E-10, 2.9770E-10, 3.3405E-10, 3.7821E-10,      
     X 3.9552E-10, 4.1322E-10, 4.0293E-10, 4.0259E-10, 3.8853E-10,      
     X 3.7842E-10, 3.8551E-10, 4.4618E-10, 5.0527E-10, 5.0695E-10,      
     X 5.1216E-10, 5.1930E-10, 5.5794E-10, 5.3320E-10, 5.2008E-10,      
     X 5.6888E-10, 6.1883E-10, 6.9006E-10, 6.9505E-10, 6.6768E-10,      
     X 6.3290E-10, 5.6753E-10, 5.0327E-10, 3.9830E-10, 3.1147E-10,      
     X 2.4416E-10, 1.8860E-10, 1.3908E-10, 9.9156E-11, 7.3779E-11,      
     X 5.6048E-11, 4.2457E-11, 3.4505E-11, 2.9881E-11, 2.7865E-11,      
     X 2.8471E-11, 3.1065E-11, 3.4204E-11, 3.9140E-11, 4.3606E-11,      
     X 4.9075E-11, 5.3069E-11, 5.5236E-11, 5.5309E-11, 5.3832E-11/      
      DATA F1251/                                                       
     X 5.3183E-11, 5.1783E-11, 5.2042E-11, 5.4422E-11, 5.5656E-11,      
     X 5.4409E-11, 5.2659E-11, 5.1696E-11, 5.1726E-11, 4.9003E-11,      
     X 4.9050E-11, 5.1700E-11, 5.6818E-11, 6.3129E-11, 6.6542E-11,      
     X 6.4367E-11, 5.9908E-11, 5.4470E-11, 4.7903E-11, 3.9669E-11,      
     X 2.9651E-11, 2.2286E-11, 1.6742E-11, 1.1827E-11, 7.7739E-12,      
     X 4.8805E-12, 3.1747E-12, 2.0057E-12, 1.2550E-12, 8.7434E-13,      
     X 6.2755E-13, 4.9752E-13, 4.0047E-13, 3.5602E-13, 3.0930E-13,      
     X 2.4903E-13, 1.9316E-13, 1.4995E-13, 1.2059E-13, 8.7242E-14,      
     X 6.4511E-14, 5.3300E-14, 4.3741E-14, 3.4916E-14, 2.6560E-14,      
     X 1.6923E-14, 1.1816E-14, 6.7071E-15, 3.6474E-15, 2.0686E-15/      
      DATA F1301/                                                       
     X 1.1925E-15, 6.8948E-16, 3.9661E-16, 2.2576E-16, 1.2669E-16,      
     X 6.9908E-17, 3.7896E-17, 2.0280E-17, 1.1016E-17, 6.7816E-18,      
     X 6.0958E-18, 8.9913E-18, 1.7201E-17, 3.4964E-17, 7.0722E-17,      
     X 1.4020E-16, 2.7167E-16, 5.1478E-16, 9.5500E-16, 1.7376E-15,      
     X 3.1074E-15, 5.4789E-15, 9.5640E-15, 1.6635E-14, 2.9145E-14,      
     X 5.2179E-14, 8.8554E-14, 1.4764E-13, 2.3331E-13, 3.5996E-13,      
     X 5.2132E-13, 6.3519E-13, 7.3174E-13, 8.3752E-13, 9.8916E-13,      
     X 1.1515E-12, 1.4034E-12, 1.6594E-12, 2.1021E-12, 2.7416E-12,      
     X 3.4135E-12, 4.5517E-12, 5.5832E-12, 7.2303E-12, 9.9484E-12,      
     X 1.2724E-11, 1.6478E-11, 2.0588E-11, 2.5543E-11, 3.3625E-11/      
      DATA F1351/                                                       
     X 4.1788E-11, 5.0081E-11, 6.0144E-11, 6.9599E-11, 8.4408E-11,      
     X 9.7143E-11, 1.0805E-10, 1.1713E-10, 1.2711E-10, 1.3727E-10,      
     X 1.4539E-10, 1.6049E-10, 1.7680E-10, 2.0557E-10, 2.4967E-10,      
     X 3.0096E-10, 3.5816E-10, 4.0851E-10, 4.6111E-10, 5.2197E-10,      
     X 5.5043E-10, 6.0324E-10, 6.4983E-10, 6.7498E-10, 7.0545E-10,      
     X 7.0680E-10, 7.5218E-10, 7.5723E-10, 7.7840E-10, 8.0081E-10,      
     X 8.0223E-10, 7.7271E-10, 7.1676E-10, 6.7819E-10, 6.4753E-10,      
     X 6.5844E-10, 7.0163E-10, 7.7503E-10, 8.8152E-10, 9.9022E-10,      
     X 1.0229E-09, 9.9296E-10, 8.9911E-10, 7.7813E-10, 6.3785E-10,      
     X 4.7491E-10, 3.5280E-10, 2.4349E-10, 1.6502E-10, 1.1622E-10/      
      DATA F1401/                                                       
     X 8.6715E-11, 6.7360E-11, 5.3910E-11, 4.5554E-11, 4.1300E-11,      
     X 3.9728E-11, 3.9000E-11, 3.9803E-11, 4.1514E-11, 4.3374E-11,      
     X 4.6831E-11, 4.8921E-11, 5.1995E-11, 5.7242E-11, 6.2759E-11,      
     X 7.0801E-11, 7.4555E-11, 7.9754E-11, 8.7616E-11, 9.1171E-11,      
     X 1.0349E-10, 1.1047E-10, 1.2024E-10, 1.2990E-10, 1.3725E-10,      
     X 1.5005E-10, 1.5268E-10, 1.5535E-10, 1.5623E-10, 1.5009E-10,      
     X 1.4034E-10, 1.3002E-10, 1.2225E-10, 1.1989E-10, 1.2411E-10,      
     X 1.3612E-10, 1.5225E-10, 1.7202E-10, 1.9471E-10, 1.9931E-10,      
     X 1.9079E-10, 1.7478E-10, 1.5259E-10, 1.2625E-10, 9.3332E-11,      
     X 6.8796E-11, 4.6466E-11, 2.9723E-11, 1.8508E-11, 1.2106E-11/      
      DATA F1451/                                                       
     X 8.0142E-12, 5.4066E-12, 3.9329E-12, 3.1665E-12, 2.7420E-12,      
     X 2.3996E-12, 2.3804E-12, 2.3242E-12, 2.4476E-12, 2.5331E-12,      
     X 2.3595E-12, 2.2575E-12, 2.1298E-12, 2.0088E-12, 1.8263E-12,      
     X 1.6114E-12, 1.4422E-12, 1.2946E-12, 1.0837E-12, 9.1282E-13,      
     X 7.2359E-13, 5.3307E-13, 3.8837E-13, 2.6678E-13, 1.6769E-13,      
     X 1.0826E-13, 7.2364E-14, 4.5201E-14, 3.0808E-14, 2.2377E-14,      
     X 1.7040E-14, 9.2181E-15, 5.2934E-15, 3.5774E-15, 3.1431E-15,      
     X 3.7647E-15, 5.6428E-15, 9.5139E-15, 1.7322E-14, 2.8829E-14,      
     X 4.7708E-14, 6.9789E-14, 9.7267E-14, 1.4662E-13, 1.9429E-13,      
     X 2.5998E-13, 3.6636E-13, 4.7960E-13, 6.5129E-13, 7.7638E-13/      
      DATA F1501/                                                       
     X 9.3774E-13, 1.1467E-12, 1.3547E-12, 1.5686E-12, 1.6893E-12,      
     X 1.9069E-12, 2.1352E-12, 2.3071E-12, 2.4759E-12, 2.8247E-12,      
     X 3.4365E-12, 4.3181E-12, 5.6107E-12, 7.0017E-12, 8.6408E-12,      
     X 1.0974E-11, 1.3742E-11, 1.6337E-11, 2.0157E-11, 2.3441E-11,      
     X 2.6733E-11, 3.0247E-11, 3.3737E-11, 3.8618E-11, 4.1343E-11,      
     X 4.3870E-11, 4.4685E-11, 4.4881E-11, 4.5526E-11, 4.3628E-11,      
     X 4.4268E-11, 4.6865E-11, 5.3426E-11, 5.4020E-11, 5.3218E-11,      
     X 5.4587E-11, 5.6360E-11, 5.7740E-11, 5.6426E-11, 6.0399E-11,      
     X 6.6981E-11, 7.4319E-11, 7.7977E-11, 7.5539E-11, 7.1610E-11,      
     X 6.4606E-11, 5.5498E-11, 4.3944E-11, 3.3769E-11, 2.5771E-11/      
      DATA F1551/                                                       
     X 1.9162E-11, 1.3698E-11, 1.0173E-11, 7.8925E-12, 6.1938E-12,      
     X 4.7962E-12, 4.0811E-12, 3.3912E-12, 2.8625E-12, 2.4504E-12,      
     X 2.2188E-12, 2.2139E-12, 2.2499E-12, 2.2766E-12, 2.3985E-12,      
     X 2.5459E-12, 2.9295E-12, 3.4196E-12, 3.6155E-12, 4.0733E-12,      
     X 4.4610E-12, 4.9372E-12, 5.4372E-12, 5.7304E-12, 6.1640E-12,      
     X 6.1278E-12, 6.2940E-12, 6.4947E-12, 6.8174E-12, 7.5190E-12,      
     X 8.2608E-12, 8.4971E-12, 8.3484E-12, 8.1888E-12, 7.8552E-12,      
     X 7.8468E-12, 7.5943E-12, 7.9096E-12, 8.6869E-12, 9.1303E-12,      
     X 9.2547E-12, 8.9322E-12, 8.2177E-12, 7.3408E-12, 5.7956E-12,      
     X 4.4470E-12, 3.5881E-12, 2.6748E-12, 1.7074E-12, 9.6700E-13/      
      DATA F1601/                                                       
     X 5.2645E-13, 2.9943E-13, 1.7316E-13, 1.0039E-13, 5.7859E-14,      
     X 3.2968E-14, 1.8499E-14, 1.0192E-14, 5.5015E-15, 2.9040E-15,      
     X 1.4968E-15, 7.5244E-16, 3.6852E-16, 1.7568E-16, 8.1464E-17,      
     X 3.6717E-17, 1.6076E-17, 6.8341E-18, 2.8195E-18, 1.1286E-18,      
     X  .0000E+00,  .0000E+00,  .0000E+00,  .0000E+00,  .0000E+00,      
     X  .0000E+00,  .0000E+00,  .0000E+00,  .0000E+00, 1.4070E-18,      
     X 3.0405E-18, 6.4059E-18, 1.3169E-17, 2.6443E-17, 5.1917E-17,      
     X 9.9785E-17, 1.8802E-16, 3.4788E-16, 6.3328E-16, 1.1370E-15,      
     X 2.0198E-15, 3.5665E-15, 6.3053E-15, 1.1309E-14, 2.1206E-14,      
     X 3.2858E-14, 5.5165E-14, 8.6231E-14, 1.2776E-13, 1.7780E-13/      
      DATA F1651/                                                       
     X 2.5266E-13, 3.6254E-13, 5.1398E-13, 6.8289E-13, 8.7481E-13,      
     X 1.1914E-12, 1.6086E-12, 2.0469E-12, 2.5761E-12, 3.4964E-12,      
     X 4.4980E-12, 5.5356E-12, 6.7963E-12, 8.5720E-12, 1.0700E-11,      
     X 1.2983E-11, 1.6270E-11, 1.9609E-11, 2.2668E-11, 2.5963E-11,      
     X 3.0918E-11, 3.4930E-11, 3.9330E-11, 4.4208E-11, 4.6431E-11,      
     X 5.1141E-11, 5.4108E-11, 5.8077E-11, 6.5050E-11, 7.2126E-11,      
     X 8.1064E-11, 8.1973E-11, 8.1694E-11, 8.3081E-11, 8.0240E-11,      
     X 7.9225E-11, 7.6256E-11, 7.8468E-11, 8.0041E-11, 8.1585E-11,      
     X 8.3485E-11, 8.3774E-11, 8.5870E-11, 8.6104E-11, 8.8516E-11,      
     X 9.0814E-11, 9.2522E-11, 8.8913E-11, 7.8381E-11, 6.8568E-11/      
      DATA F1701/                                                       
     X 5.6797E-11, 4.4163E-11, 3.2369E-11, 2.3259E-11, 1.6835E-11,      
     X 1.1733E-11, 8.5273E-12, 6.3805E-12, 4.8983E-12, 3.8831E-12,      
     X 3.2610E-12, 2.8577E-12, 2.5210E-12, 2.2913E-12, 2.0341E-12,      
     X 1.8167E-12, 1.6395E-12, 1.4890E-12, 1.3516E-12, 1.2542E-12,      
     X 1.2910E-12, 1.3471E-12, 1.4689E-12, 1.5889E-12, 1.6989E-12,      
     X 1.8843E-12, 2.0902E-12, 2.3874E-12, 2.7294E-12, 3.3353E-12,      
     X 4.0186E-12, 4.5868E-12, 5.2212E-12, 5.8856E-12, 6.5991E-12,      
     X 7.2505E-12, 7.6637E-12, 8.5113E-12, 9.4832E-12, 9.9678E-12,      
     X 1.0723E-11, 1.0749E-11, 1.1380E-11, 1.1774E-11, 1.1743E-11,      
     X 1.2493E-11, 1.2559E-11, 1.2332E-11, 1.1782E-11, 1.1086E-11/      
      DATA F1751/                                                       
     X 1.0945E-11, 1.1178E-11, 1.2083E-11, 1.3037E-11, 1.4730E-11,      
     X 1.6450E-11, 1.7403E-11, 1.7004E-11, 1.5117E-11, 1.3339E-11,      
     X 1.0844E-11, 8.0915E-12, 5.6615E-12, 3.7196E-12, 2.5194E-12,      
     X 1.6569E-12, 1.1201E-12, 8.2335E-13, 6.0270E-13, 4.8205E-13,      
     X 4.1313E-13, 3.6243E-13, 3.2575E-13, 2.7730E-13, 2.5292E-13,      
     X 2.3062E-13, 2.1126E-13, 2.1556E-13, 2.1213E-13, 2.2103E-13,      
     X 2.1927E-13, 2.0794E-13, 1.9533E-13, 1.6592E-13, 1.4521E-13,      
     X 1.1393E-13, 8.3772E-14, 6.2077E-14, 4.3337E-14, 2.7165E-14,      
     X 1.6821E-14, 9.5407E-15, 5.3093E-15, 3.0320E-15, 1.7429E-15,      
     X 9.9828E-16, 5.6622E-16, 3.1672E-16, 1.7419E-16, 9.3985E-17/      
      DATA F1801/                                                       
     X 4.9656E-17, 2.5652E-17, 1.2942E-17, 6.3695E-18, 3.0554E-18,      
     C 1.4273E-18, -0.       , -0.       , -0.       , -0.       ,      
     C -0.       , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        /      
      DATA F1851/                                                       
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        /      
      DATA F1901/                                                       
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        /      
      DATA F1951/                                                       
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        /      
      DATA F2001/                                                       
     C 0.        /                                                      
C                                                                       
      END                                                               
      SUBROUTINE BMDATA(IV1,IFWHM,IDVX,IKMX,MXFREQ,IMSMX)               
C                                                                       
C     BMDATA (CALLED BY TRANS) MAKES THE INITIAL BAND MODEL TAPE READ   
C     AND CALCULATES WAVENUMBER-INDEPENDENT PARAMETERS FOR USE BY BMOD  
C                                                                       
C     CONVENTION                                                        
C     MMOLX = MAXIMUM NUMBER OF NEW SPECIES (IDENTIFIED BY "X")         
C     MMOL  = MAXIMUM NUMBER OF OLD SPECIES (W/O SUFFIX "X")            
C     THESE DEFINE THE MAXIMUM ARRAY SIZES.                             
C                                                                       
C     THE ACTUAL NUMBER OF PARAMETERS ARE:                              
C     NSPC = ACTUAL NUMBER OF OLD SPECIES (12), CAN'T EXCEED MMOL       
C     NSPECX = ACTUAL NUMBER OF "X" SPECIES,     CAN'T EXCEED MMOLX     
C                                                                       
C     PARAMETER KMAX DENOTES THE NUMBER OF MODTRAN "SPECIES".           
C     THIS INCLUDES THE 12 ORIGINAL BAND MODEL PARAMETER MOLECULES      
C     PLUS A HOST OF OTHER ABSORPTION AND/OR SCATTERING SOURCES.        
                                                                        
      INCLUDE 'PARAM.LST'                                               
C                                                                       
C     TRANS VARIABLES                                                   
      INTEGER IBINX,IMOLX,IALFX                                         
      REAL SDZX,ODZX                                                    
      COMMON/BMDCMX/SDZX(MXTEMP),ODZX(MXTEMP),IBINX,IMOLX,IALFX         
      COMMON /SOLSX/  WPTHSX(LAYTHR,MMOLX),TBBYSX(LAYTHR,MMOLX)         
      LOGICAL MODTRN                                                    
      INTEGER KPOINT                                                    
      REAL WAVLEN,EXTC,ABSC,ASYM,AWCCON,TX,W,RELHUM,PATM,TBBY,WPATH     
      COMMON/BASE/WAVLEN(MXWVLN),EXTC(NAER,MXWVLN),ABSC(NAER,MXWVLN),   
     1  ASYM(NAER,MXWVLN),AWCCON(NAER),KPOINT(NSPC),TX(KMAX),W(KMAX),   
     2  RELHUM(LAYDIM),PATM(LAYTHR),TBBY(LAYTHR),WPATH(LAYTHR,KMAX)     
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH                               
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                           
      INTEGER JTURN,LJ                                                  
      REAL ATHETA,ADBETA,PHASFN,AH1,ARH,ANGSUN,TBBYS,PATMS,WPATHS       
      COMMON/SOLS/JTURN,LJ(LAYTWO+1),ATHETA(LAYDIM+1),                  
     1  ADBETA(LAYDIM+1),PHASFN(LAYTWO,4),AH1(LAYTWO),ARH(LAYTWO),      
     2  ANGSUN,TBBYS(LAYTHR,12),PATMS(LAYTHR,12),WPATHS(LAYTHR,KMAX)    
      COMMON/CARD1/MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,                      
     1  NOPRNT,TBOUND,SALB,MODTRN                                       
      INTEGER IKMAX,ML,ISSGEO,IMULT                                     
      COMMON/CNTRL/IKMAX,ML,ISSGEO,IMULT                                
      INTEGER IBNDWD,IP,ITB,NTEMP,IBIN,IMOL,IALF,JJ,JJS                 
      REAL TBAND,SDZ,ODZ,SD,OD,ALF0,T5,PTM75,FF,T5S,                    
     1  PTM75S,FFS,DOPFAC,DOP0,DOPSUM,COLSUM,ODSUM,SDSUM                
      COMMON/BMDCOM/IBNDWD,IP,ITB,NTEMP,TBAND(MXTEMP),SDZ(MXTEMP),      
     1  ODZ(MXTEMP),IBIN,IMOL,IALF,SD(MXTEMP,MMOLT2),OD(MXTEMP,MMOLT),  
     2  ALF0(MMOLT),T5(LAYTHR),PTM75(LAYTHR),JJ(LAYTHR),FF(LAYTHR),     
     3  T5S(LAYTHR,NSPC),PTM75S(LAYTHR,NSPC),JJS(LAYTHR,MMOLT),         
     4  FFS(LAYTHR,MMOLT),DOPFAC(MMOLT),DOP0(MMOLT),SDSUM(MMOLT2),      
     5  ODSUM(MMOLT),DOPSUM(MMOLT),COLSUM(MMOLT)                        
      CHARACTER*80 MOLFILE,CFCFILE                                      
      COMMON /BMPFILES/ MOLFILE,CFCFILE                                 
      DATA ITBX/31/,TZERO/273.15/                                       
C                                                                       
C     OPEN THE UNFORMATTED BAND MODEL TAPE, FILE ITB = 9.  AN ERROR     
C     OCCURS IF THE TAPE WAS OPENED DURING A PREVIOUS LOWTRAN RUN       
C     (IMPLYING IRPT WAS NOT ZERO).  IN THAT CASE, REWIND THE TAPE.     
      ITB=9                                                             
Calley OPEN(ITBX,FILE='DATA/CFCBMP96.ASC',STATUS='OLD',FORM='FORMATTED')
      OPEN(ITBX,FILE=CFCFILE,STATUS='OLD',FORM='FORMATTED')             
      REWIND(ITBX)                                                      
C                                                                       
C     READ THE BAND MODEL TAPE HEADER.                                  
Calley      OPEN(ITB,FILE='DATA/MOLBMP96.BIN',                          
      OPEN(ITB,FILE=MOLFILE,                                            
     1  STATUS='OLD',ACCESS='DIRECT',FORM='UNFORMATTED',RECL=60)        
      READ(ITB,REC=1)NTEMP,(TBAND(IT),IT=1,NTEMP),IBNDWD                
C                                                                       
C     PASS THE BAND WIDTH TO TRANS THROUGH IDVX.  ALSO DETERMINE THE    
C     MINIMUM FREQUENCY AT WHICH BAND MODEL DATA IS NEEDED.             
      IDVX=IBNDWD                                                       
      IV=5*((IV1-IFWHM/IBNDWD+1)/5)                                     
C                                                                       
C     PERFORM THE STANDARD LOWTRAN CALCULATION IF NO BAND MODEL DATA    
C     EXISTS FOR THE CHOSEN FREQUENCY RANGE.                            
      MXFREQ=22681                                                      
Calley      IF(IV.GT.MXFREQ)THEN                                        
      IF(IV.GT.MXFREQ .AND. IPR.GT.0) THEN                              
          WRITE(IPR,'(//43H (THE BAND MODEL TAPE DOES NOT HAVE DATA IN, 
     1      32H THE REQUESTED WAVENUMBER RANGE))')                      
          RETURN                                                        
      ENDIF                                                             
C                                                                       
C     FIND 1ST RECORD (IP) IN BAND MODEL FILE WHERE FREQUENCY IV OCCURS.
      CALL GTSTRT(IV,IP,ITB)                                            
C                                                                       
C     READ THE FIRST RECORD                                             
      READ(ITB,REC=IP)                                                  
     1  IBIN,IMOL,(SDZ(I),I=1,MXTEMP),IALF,(ODZ(I),I=1,MXTEMP)          
C                                                                       
C     READ THE BAND MODEL PARAMETERS (ABSORPTION CROSS-SECTIONS ONLY)   
C     AND POSITION AT THE PROPER PLACE OF EACH FILE OF EACH X-SPECIES.  
   10 CONTINUE                                                          
      READ(ITBX,'(I6,I5,1P11E11.3)',END=20)I,IMOLX,(SDZX(IT),IT=1,NTEMP)
      IBINX=I                                                           
      READ(ITBX,'(6X,I5,1P11E11.3)')IALFX,(ODZX(IT),IT=1,NTEMP)         
      IF(IV.GT.IBINX)GOTO10                                             
   20 CONTINUE                                                          
C                                                                       
C     SET MSMAX TO LAYTWO FOR MULTIPLE SCATTERING                       
      MSMAX=ABS(IMULT)*LAYTWO                                           
C                                                                       
C     SET TEMPERATURE INTERPOLATION INDICES FOR EACH LAYER              
      IKHI=IKMX                                                         
      DO 60 MSOFF=0,MSMAX,LAYTWO                                        
          DO 50 IK=1,IKHI                                               
              IKOFF=IK+MSOFF                                            
              TT=TBBY(IKOFF)                                            
              IF(TT.LE.TBAND(1))THEN                                    
                  JJ(IKOFF)=2                                           
                  FF(IKOFF)=1.                                          
              ELSEIF(TT.GE.TBAND(NTEMP))THEN                            
                  JJ(IKOFF)=NTEMP                                       
                  FF(IKOFF)=0.                                          
              ELSE                                                      
                  DO 30 J=2,NTEMP                                       
                      IF(TT.LE.TBAND(J))GOTO40                          
   30             CONTINUE                                              
   40             JJ(IKOFF)=J                                           
                  FF(IKOFF)=(TBAND(J)-TT)/(TBAND(J)-TBAND(J-1))         
              ENDIF                                                     
C                                                                       
C         SET TEMPERATURE SCALING PARAMETERS                            
C           T5      LAYER TEMPERATURE DIVIDED BY 273.15K RAISED TO 0.5  
C           PTM75   LAYER TEMPERATURE DIVIDED BY 273.15K RAISED TO -0.75
C                   TIMES THE LAYER PRESSURE IN ATMOSPHERES.            
          T5(IKOFF)=SQRT(TT/TZERO)                                      
          PTM75(IKOFF)=PATM(IKOFF)*(TZERO/TT)**.75                      
   50     CONTINUE                                                      
          IKHI=IMSMX                                                    
   60  CONTINUE                                                         
C                                                                       
C     IF NO SINGLE SCATTER SOLAR, RETURN                                
      IF(IEMSCT.NE.2)RETURN                                             
C                                                                       
C     SET TEMPERATURE INTERPOLATION INDICES FOR SOLAR LAYERS            
      IKHI=IKMX+1                                                       
      DO 110 MSOFF=0,MSMAX,LAYTWO                                       
          DO 100 IK=1,IKHI                                              
              IKOFF=IK+MSOFF                                            
C                                                                       
C             SKIP SET UP IF THE SUN IS IN THE SHADE.                   
              IF(WPATHS(IKOFF,36).LT.0.)GOTO100                         
              DO 90 K=1,NSPECT                                          
                  IF(K.LE.NSPC)THEN                                     
                      TT=TBBYS(IKOFF,K)                                 
                  ELSE                                                  
                      TT=TBBYSX(IKOFF,K-NSPC)                           
                  ENDIF                                                 
                  IF(TT.LE.TBAND(1))THEN                                
                      JJS(IKOFF,K)=2                                    
                      FFS(IKOFF,K)=1.                                   
                  ELSEIF(TT.GE.TBAND(NTEMP))THEN                        
                      JJS(IKOFF,K)=NTEMP                                
                      FFS(IKOFF,K)=0.                                   
                  ELSE                                                  
                      DO 70 J=2,NTEMP                                   
                          IF(TT.LE.TBAND(J))GOTO80                      
   70                 CONTINUE                                          
   80                 JJS(IKOFF,K)=J                                    
                      FFS(IKOFF,K)=(TBAND(J)-TT)/(TBAND(J)-TBAND(J-1))  
                  ENDIF                                                 
                  IF(K.GT.NSPC)GOTO90                                   
C                                                                       
C                 SET TEMPERATURE SCALING PARAMETERS FOR SOLAR PATHS.   
C                   T5S     SOLAR PATH TEMPERATURE DIVIDED              
C                           BY 273.15K RAISED TO 0.5                    
C                   PTM75S  SOLAR PATH TEMPERATURE DIVIDED BY           
C                           273.15K RAISED TO -0.75 TIMES SOLAR         
C                           PATH PRESSURE IN ATMOSPHERES.               
                  T5S(IKOFF,K)=SQRT(TT/TZERO)                           
                  PTM75S(IKOFF,K)=PATMS(IKOFF,K)*(TZERO/TT)**.75        
   90         CONTINUE                                                  
  100     CONTINUE                                                      
          IKHI=IMSMX+1                                                  
  110 CONTINUE                                                          
      RETURN                                                            
      END                                                               
      REAL FUNCTION BMERFU(Y)                                           
C                                                                       
C     APPROXIMATION FOR EXP(-Y*Y) + SQRT(PI) * Y * ERF(Y) - 1           
      DATA P,A1,A2,A3,A4,A5,RTPI/.3275911,.451673692,-.504257335,       
     1  2.519390259,-2.575644906,1.881292140,1.772453851/               
C                                                                       
C     TO SINGLE PRECISION ACCURACY, THE FUNCTION SIMPLY                 
C     EQUALS THE EXPRESSION BELOW FOR Y > 3.2                           
      BMERFU=RTPI*Y-1.                                                  
      IF(Y.GE.3.2)RETURN                                                
C                                                                       
C     FOR Y > 2.33, THE ERROR FUNCTION IS CALCULATED FROM               
C     ITS CONTINUED FRACTION (ABRAMOWITZ & STEGUN, 7.1.14).             
C     FOR Y < 2.33, THE RATIONAL APPROXIMATION IS USED                  
C     (ABRAMOWITZ & STEGUN, 7.1.7.1.25).  THE TWO EXPRESSIONS           
C     ARE EQUAL (TO SINGLE PRECISION ACCURACY) AT Y = 2.33              
      IF(Y.GE.2.33)THEN                                                 
          T=Y*Y                                                         
          BMERFU=BMERFU+(1.75+T*.5)/(3.75+T*(5.+T))*EXP(-T)             
          RETURN                                                        
      ENDIF                                                             
      T=1./(1.+P*Y)                                                     
      BMERFU=BMERFU+(1.-Y*T*(A1+T*(A2+T*(A3+T*(A4+T*A5)))))*EXP(-Y*Y)   
      RETURN                                                            
      END                                                               
      SUBROUTINE BMFLUX(ML,KNTRVL,IEMSCT,SALB,S0)                       
C                                                                       
C     FLUX ADDING ROUTINE                                               
C                                                                       
C     DECLARE INPUTS                                                    
C       ML       NUMBER OF ATMOSPHERIC LAYER BOUNDARIES                 
C       KNTRVL   NUMBER OF INTERVALS IN CORRELATED-K APPROACH           
C       IEMSCT   FLAG = 1 FOR THERMAL SCATTER ONLY                      
C                     = 2 FOR THERMAL AND SOLAR SCATTER                 
C       SALB     SURFACE SCATTERING ALBEDO                              
C       S0       SOURCE IRRADIANCE [W CM-2 / CM-1]                      
      INTEGER ML,KNTRVL,IEMSCT                                          
      REAL SALB,S0                                                      
C                                                                       
C     LIST PARAMETERS                                                   
      INCLUDE 'PARAM.LST'                                               
C                                                                       
C     LIST COMMONS:                                                     
C     COMMON /MSRD/                                                     
C       CSZEN0  LAYER BOUNDARY COSINE OF SOLAR/LUNAR ZENITH.            
C       CSZEN   LAYER AVERAGE COSINE OF SOLAR/LUNAR ZENITH.             
C       CSZENX  AVERAGE SOLAR/LUNAR COSINE ZENITH EXITING               
C               (AWAY FROM EARTH) THE CURRENT LAYER.                    
C       BBGRND  THERMAL EMISSION (FLUX) AT THE GROUND [W CM-2 / CM-1].  
C       BBNDRY  LAYER BOUNDARY THERMAL EMISSION (FLUX) [W CM-2 / CM-1]. 
C       COSBAR  LAYER HENYEY-GREENSTEIN ASYMMETRY FACTOR.               
C       TSCAT   LAYER SCATTERING OPTICAL DEPTH.                         
C       TCONT   LAYER CONTINUUM OPTICAL DEPTH.                          
C       TAUT    LAYER TOTAL OPTICAL DEPTH.                              
C       DEPRAT  FRACTIONAL DECREASE IN WEAK-LINE OPTICAL DEPTH TO SUN.  
C       S0DEP   OPTICAL DEPTH FROM LAYER BOUNDARY TO SUN.               
C       S0TRN   TRANSMITTED SOLAR IRRADIANCES [W CM-2 / CM-1]           
C       UPF     LAYER BOUNDARY UPWARD THERMAL FLUX [W CM-2 / CM-1].     
C       DNF     LAYER BOUNDARY DOWNWARD THERMAL FLUX [W CM-2 / CM-1].   
C       UPFS    LAYER BOUNDARY UPWARD SOLAR FLUX [W CM-2 / CM-1].       
C       DNFS    LAYER BOUNDARY DOWNWARD SOLAR FLUX [W CM-2 / CM-1].     
      REAL CSZEN0,CSZEN,CSZENX,BBGRND,BBNDRY,COSBAR,TSCAT,              
     1  TCONT,TAUT,DEPRAT,S0DEP,S0TRN,UPF,DNF,UPFS,DNFS                 
      COMMON/MSRD/CSZEN0(LAYDIM),CSZEN(LAYDIM),CSZENX(LAYDIM),          
     1  BBGRND,BBNDRY(LAYDIM),COSBAR(LAYDIM),TSCAT(LAYDIM),             
     2  TCONT(LAYDIM),TAUT(NKSUB,LAYDIM),DEPRAT(LAYDIM),                
     3  S0DEP(NKSUB,LAYDIM),S0TRN(NKSUB,LAYDIM),UPF(NKSUB,LAYDIM),      
     4  DNF(NKSUB,LAYDIM),UPFS(NKSUB,LAYDIM),DNFS(NKSUB,LAYDIM)         
      REAL EDN,EUP,EUPC,TDF,RUPC,REF,EDNS,EUPS,EUPCS,TDFS,RUPCS,REFS    
      COMMON/FLUX/EDN(LAYDIM),EUP(LAYDIM),EUPC(LAYDIM),TDF(LAYDIM),     
     1  RUPC(LAYDIM),REF(LAYDIM),EDNS(LAYDIM),EUPS(LAYDIM),             
     2  EUPCS(LAYDIM),TDFS(LAYDIM),RUPCS(LAYDIM),REFS(LAYDIM)           
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH                               
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                           
C                                                                       
C       SUBINT   SPECTRAL BIN "K" SUB-INTERVAL FRACTIONAL WIDTHS.       
C       UPFLX    LAYER BOUNDARY UPWARD THERMAL FLUX [W CM-2 / CM-1].    
C       DNFLX    LAYER BOUNDARY DOWNWARD THERMAL FLUX [W CM-2 / CM-1].  
C       UPFLXS   BOUNDARY UPWARD SCATTERED SOLAR FLUX [W CM-2 / CM-1].  
C       DNFLXS   BOUNDARY DOWNWARD SCATTERED SOLAR FLUX [W CM-2 / CM-1].
C       NTFLX    LAYER BOUNDARY NET (THERMAL PLUS SCATTERED SOLAR       
C                PLUS DIRECT SOLAR) UPWARD FLUX [W CM-2 / CM-1].        
      REAL SUBINT,UPFLX,DNFLX,UPFLXS,DNFLXS,NTFLX                       
      COMMON/NETFLX/SUBINT(NKSUB),UPFLX(LAYDIM),DNFLX(LAYDIM),          
     1  UPFLXS(LAYDIM),DNFLXS(LAYDIM),NTFLX(LAYDIM)                     
C                                                                       
C     INTERNAL VARIABLES:                                               
C       EUP(N)    INTRINSIC UPWARD THERMAL FLUX OF LAYER N              
C       EDN(N)    INTRINSIC DOWNWARD THERMAL FLUX OF LAYER N            
C       TDF(N)    INTRINSIC THERMAL TRANSMISSION OF LAYER N             
C       REF(N)    INTRINSIC THERMAL REFLECTANCE OF LAYER N              
C       EUPS(N)   INTRINSIC UPWARD SOLAR FLUX OF LAYER N                
C       EDNS(N)   INTRINSIC DOWNWARD SOLAR FLUX OF LAYER N              
C       TDFS(N)   INTRINSIC SOLAR TRANSMISSION OF LAYER N               
C       REFS(N)   INTRINSIC SOLAR REFLECTANCE OF LAYER N                
C                                                                       
C     DECLARE LOCAL VARIABLES                                           
      INTEGER NLAYRS,IKP1,N,NM1,IK,INTRVL                               
      REAL RDNCN,RUPCN,EUPCN,RDNCNS,RUPCNS,EUPCNS,TAU,A1ME0,A2C,        
     1  EDNCN,EDNCNS,AC,DENOM,RT3,COEF,A2C2,C,HALFE1,E0,EXPAN,          
     2  ONEME0,E1,COEF1,COEF2,ACM1,ONEPE0,ONEME1,E2,EX,SOURC            
C                                                                       
C     LIST DATA                                                         
      DATA RT3/1.7320508/                                               
C                                                                       
C     NUMBER OF LAYERS                                                  
      NLAYRS=ML-1                                                       
C                                                                       
C     LOOP OVER K BINS                                                  
      DO 30 INTRVL=1,KNTRVL                                             
C                                                                       
C         COMPOSITE DOWNWARD REFLECTION                                 
          RDNCN=0.                                                      
C                                                                       
C         DEFINE INITIAL UPWARD COMPOSITE SURFACE REFLECTANCE           
          RUPCN=SALB                                                    
C                                                                       
C         SURFACE EMISSION                                              
          EUPCN=(1.-RUPCN)*BBGRND                                       
          EUP(ML)=EUPCN                                                 
          EUPC(ML)=EUPCN                                                
          RUPC(ML)=0.                                                   
          IF(IEMSCT.EQ.2)THEN                                           
              RDNCNS=0.                                                 
              RUPCNS=SALB                                               
              EUPCNS=RUPCNS*CSZEN0(1)*S0TRN(INTRVL,1)                   
              EUPS(ML)=EUPCNS                                           
              EUPCS(ML)=EUPCNS                                          
              RUPCS(ML)=0.                                              
          ENDIF                                                         
C                                                                       
C         UPWARD ADDING LOOP STARTS FROM BOTTOM OF ATMOSPHERE.          
          IKP1=1                                                        
          DO 10 N=NLAYRS,1,-1                                           
C                                                                       
C             LAYER INDICES IN OPPOSITE DIRECTION IN ROUTINE LOOP.      
              IK=IKP1                                                   
              IKP1=IKP1+1                                               
              TAU=TAUT(INTRVL,IK)                                       
C                                                                       
C             USE TWO STREAM APPROXIMATION FOR THERMAL                  
              C=RT3*(TAU-TSCAT(IK)*COSBAR(IK))                          
              A2C=RT3*(TAU-TSCAT(IK))                                   
              A2C2=A2C*C                                                
              AC=SQRT(A2C2)                                             
              IF(AC.GT.20.)THEN                                         
                  DENOM=C+AC                                            
                  REF(N)=(C-AC)/DENOM                                   
                  DENOM=.5*DENOM                                        
                  TDF(N)=0.                                             
                  IF(AC.LT.35.)TDF(N)=C*AC*EXP(-AC)/DENOM**2            
                  ACM1=AC-1.                                            
                  EUP(N)=(BBNDRY(IK)+ACM1*BBNDRY(IKP1))/DENOM           
                  EDN(N)=(BBNDRY(IKP1)+ACM1*BBNDRY(IK))/DENOM           
              ELSE                                                      
                  IF(AC.LT..08)THEN                                     
                      EXPAN=1.-AC*(3.-AC)/6.                            
                      ONEME0=AC*EXPAN                                   
                      A1ME0=A2C*EXPAN                                   
                      E0=1.-ONEME0                                      
                      ONEPE0=2.-ONEME0                                  
                      ONEME1=AC*(.5-AC*(4.-AC)/24.)                     
                      E1=1.-ONEME1                                      
                      E2=A2C2*(1.-AC+.55*A2C2)/3.                       
                  ELSE                                                  
                      E0=EXP(-AC)                                       
                      ONEME0=1.-E0                                      
                      ONEPE0=1.+E0                                      
                      E1=ONEME0/AC                                      
                      A1ME0=A2C*E1                                      
                      ONEME1=1.-E1                                      
                      E2=ONEME0-ONEPE0*ONEME1                           
                  ENDIF                                                 
                  HALFE1=.5*E1                                          
                  DENOM=(1.+(C-AC)*HALFE1)*(ONEPE0+A1ME0)               
                  TDF(N)=2*E0/DENOM                                     
                  REF(N)=(C-A2C)*HALFE1*ONEPE0/DENOM                    
                  COEF1=A1ME0*E1+E2                                     
                  COEF2=A1ME0*(ONEME1+E0)+ONEME0**2-E2                  
                  EUP(N)=(COEF1*BBNDRY(IK)+COEF2*BBNDRY(IKP1))/DENOM    
                  EDN(N)=(COEF1*BBNDRY(IKP1)+COEF2*BBNDRY(IK))/DENOM    
              ENDIF                                                     
C                                                                       
C             CALCULATE COMPOSITE FLUXES AND REFLECTANCES               
              COEF=TDF(N)/(1.-RUPCN*REF(N))                             
              EUPCN=EUP(N)+COEF*(EUPCN+EDN(N)*RUPCN)                    
              RUPCN=REF(N)+COEF*TDF(N)*RUPCN                            
              EUPC(N)=EUPCN                                             
              RUPC(N)=RUPCN                                             
              IF(IEMSCT.EQ.2)THEN                                       
C                                                                       
C                 CALCULATE VARIABLES FOR SOLAR HYBRID MODIFIED         
C                 DELTA EDDINGTON 2-STREAM APPROXIMATION.               
                  CALL TRLAY(TAU,TSCAT(IK),COSBAR(IK),CSZEN(IK),        
     1              S0DEP(INTRVL,IK),DEPRAT(IK),EX,TDFS(N),REFS(N))     
                  IF(EX.GT.1.E-30)THEN                                  
                      SOURC=S0TRN(INTRVL,IK)/EX                         
                  ELSE                                                  
                      SOURC=S0*EXP((DEPRAT(IK)-1.)*S0DEP(INTRVL,IK))    
                  ENDIF                                                 
                  SOURC=CSZENX(IK)*SOURC                                
                  EUPS(N)=SOURC*REFS(N)                                 
                  EDNS(N)=SOURC*TDFS(N)                                 
                  TDFS(N)=EX+TDFS(N)                                    
                  COEF=TDFS(N)/(1.-RUPCNS*REFS(N))                      
                  EUPCNS=EUPS(N)+COEF*(EUPCNS+EDNS(N)*RUPCNS)           
                  RUPCNS=REFS(N)+COEF*TDFS(N)*RUPCNS                    
                  EUPCS(N)=EUPCNS                                       
                  RUPCS(N)=RUPCNS                                       
              ENDIF                                                     
   10     CONTINUE                                                      
C                                                                       
C         NOW ADD DOWNWARD FROM TOP LAYER (N=1)                         
          EDNCN=0.                                                      
          IK=ML                                                         
          UPF(INTRVL,IK)=EUPC(1)                                        
          DNF(INTRVL,IK)=0.                                             
          UPFLX(IK)=UPFLX(IK)+SUBINT(INTRVL)*EUPC(1)                    
          RDNCN=0.                                                      
          IF(IEMSCT.EQ.2)THEN                                           
              EDNCNS=0.                                                 
              DNFS(INTRVL,IK)=0.                                        
              UPFS(INTRVL,IK)=EUPCS(1)                                  
              UPFLXS(IK)=UPFLXS(IK)+SUBINT(INTRVL)*EUPCS(1)             
              NTFLX(IK)=NTFLX(IK)+                                      
     1          SUBINT(INTRVL)*(EUPCS(1)-CSZEN0(IK)*S0TRN(INTRVL,IK))   
              RDNCNS=0.                                                 
          ENDIF                                                         
          NM1=1                                                         
          DO 20 N=2,ML                                                  
              IK=IK-1                                                   
              DENOM=1.-RDNCN*REF(NM1)                                   
              COEF=TDF(NM1)/DENOM                                       
              EDNCN=EDN(NM1)+COEF*(EDNCN+EUP(NM1)*RDNCN)                
              RDNCN=REF(NM1)+COEF*TDF(NM1)*RDNCN                        
              UPF(INTRVL,IK)=(EUPC(N)+EDNCN*RUPC(N))/DENOM              
              DNF(INTRVL,IK)=(EDNCN+EUPC(N)*RDNCN)/DENOM                
              UPFLX(IK)=UPFLX(IK)+SUBINT(INTRVL)*UPF(INTRVL,IK)         
              DNFLX(IK)=DNFLX(IK)+SUBINT(INTRVL)*DNF(INTRVL,IK)         
              NTFLX(IK)=NTFLX(IK)+SUBINT(INTRVL)*                       
     1          (EUPC(N)*(1.-RDNCN)-EDNCN*(1.-RUPC(N)))/DENOM           
              IF(IEMSCT.EQ.2)THEN                                       
                  DENOM=1.-RDNCNS*REFS(NM1)                             
                  COEF=TDFS(NM1)/DENOM                                  
                  EDNCNS=EDNS(NM1)+COEF*(EDNCNS+EUPS(NM1)*RDNCNS)       
                  RDNCNS=REFS(NM1)+COEF*TDFS(NM1)*RDNCNS                
                  UPFS(INTRVL,IK)=(EUPCS(N)+EDNCNS*RUPCS(N))/DENOM      
                  DNFS(INTRVL,IK)=(EDNCNS+EUPCS(N)*RDNCNS)/DENOM        
                  UPFLXS(IK)=UPFLXS(IK)+SUBINT(INTRVL)*UPFS(INTRVL,IK)  
                  DNFLXS(IK)=DNFLXS(IK)+SUBINT(INTRVL)*DNFS(INTRVL,IK)  
                  NTFLX(IK)=NTFLX(IK)-                                  
     1              SUBINT(INTRVL)*(CSZEN0(IK)*S0TRN(INTRVL,IK)-        
     2              (EUPCS(N)*(1.-RDNCNS)-EDNCNS*(1.-RUPCS(N)))/DENOM)  
              ENDIF                                                     
   20     NM1=N                                                         
   30 CONTINUE                                                          
      NTFLX(ML)=NTFLX(ML)+UPFLX(ML)                                     
C                                                                       
C     PRESENTLY, FLUXES ARE NOT SAVED IF THE CORRELATED-K METHOD        
C     IS USED SINCE THE SCRATCH FILE CAN GROW TOO LARGE.                
      IF(KNTRVL.EQ.1)WRITE(ISCRCH)(COSBAR(IK),TSCAT(IK),                
     1  (TAUT(INTRVL,IK),INTRVL=1,KNTRVL),IK=1,NLAYRS),                 
     2  ((UPF(INTRVL,IK),DNF(INTRVL,IK),                                
     3  UPFS(INTRVL,IK),DNFS(INTRVL,IK),INTRVL=1,KNTRVL),IK=1,ML)       
      RETURN                                                            
      END                                                               
      SUBROUTINE BMLOAD                                                 
C                                                                       
C  THIS SUBROUTINE (CALLED BY BMOD) LOADS BAND MODEL DATA FOR A SINGLE  
C  PARAMETER SET INTO THE MATRICES SD, OD AND ALF0 (FOUND IN /BMDCOM/). 
C                                                                       
C  ORIGINALLY, THE BAND MODEL PARAMETERS ARE STORE IN COMPACT PARAMETER 
C  SETS.  THERE ARE TWO TYPES OF PARAMETER SETS CORRESPONDING TO LINE   
C  CENTER AND LINE TAIL CONTRIBUTIONS.  IF IMOL IS 12 OR LESS, THE      
C  PARAMETER SET CONTAINS LINE CENTER MOLECULAR ABSORPTION INFO:        
C      IBIN = THE BIN NUMBER (IBIN*IBNDWD = BIN CENTER FREQUENCY)       
C      IMOL =  1 FOR H2O                                                
C           =  2 FOR CO2                                                
C           =  3 FOR O3                                                 
C           =  4 FOR N2O                                                
C           =  5 FOR CO                                                 
C           =  6 FOR CH4                                                
C           =  7 FOR O2                                                 
C           =  8 FOR NO                                                 
C           =  9 FOR SO2                                                
C           = 10 FOR NO2                                                
C           = 11 FOR NH3                                                
C           = 12 FOR HNO3                                               
C    SDZ(IT)= AVERAGE MOLECULAR ABSORPTION COEFFICIENT PARAMETER        
C                 FOR THE IT'TH TEMPERATURE (CM-1/AMAGAT)               
C      IALF = LORENTZ LINE WIDTH PARAMETER AT STANDARD PRESSURE AND     
C                 TEMPERATURE (1.E-04 CM-1/ATM)                         
C    ODZ(IT)= LINE DENSITY PARAMETER FOR THE TEMPERATURE IT (CM-1)      
C                                                                       
C  IF IMOL IS 12 OR MORE, THE PARAMETER SET CONTAINS CONTINUUM          
C  ABSORPTION INFORMATION AND                                           
C              IBIN = THE BIN NUMBER                                    
C     IMOL,IALF = 13 FOR  H2O TAIL CONTRIBUTION                         
C                       = 14 FOR  CO2 TAIL CONTRIBUTION                 
C                       = 15 FOR   O3 TAIL CONTRIBUTION                 
C                       = 16 FOR  N2O TAIL CONTRIBUTION                 
C                       = 17 FOR   CO TAIL CONTRIBUTION                 
C                       = 18 FOR  CH4 TAIL CONTRIBUTION                 
C                       = 19 FOR   O2 TAIL CONTRIBUTION                 
C                       = 20 FOR   NO TAIL CONTRIBUTION                 
C                       = 21 FOR  SO2 TAIL CONTRIBUTION                 
C                       = 22 FOR  NO2 TAIL CONTRIBUTION                 
C                       = 23 FOR  NH3 TAIL CONTRIBUTION                 
C                       = 24 FOR HNO3 TAIL CONTRIBUTION                 
C            SDZ(IT) = MOLECULAR LINE WING CONTINUUM ABSORPTION         
C                         COEFFICIENT FOR SPECIES IMOL AT THE           
C                         IT'TH TEMPERATURE (CM-1/AMAGAT)               
C            ODZ(IT) = MOLECULAR LINE WING CONTINUUM ABSORPTION         
C                         COEFFICIENT FOR SPECIES IALF AT THE           
C                         IT'TH TEMPERATURE (CM-1/AMAGAT)               
C                                                                       
C                                                                       
C                                                                       
C                                                                       
C     CONVENTION                                                        
C     MMOLX = MAXIMUM NUMBER OF NEW SPECIES (IDENTIFIED BY "X")         
C     MMOL  = MAXIMUM NUMBER OF OLD SPECIES (W/O SUFFIX "X")            
C     THESE DEFINE THE MAXIMUM ARRAY SIZES.                             
C                                                                       
C     THE ACTUAL NUMBER OF PARAMETERS ARE:                              
C     NSPC = ACTUAL NUMBER OF OLD SPECIES (12), CAN'T EXCEED MMOL       
C     NSPECX = ACTUAL NUMBER OF "X" SPECIES,     CAN'T EXCEED MMOLX     
C                                                                       
      INCLUDE 'PARAM.LST'                                               
C                                                                       
C     LIST COMMONS                                                      
      INTEGER IBNDWD,IP,ITB,NTEMP,IBIN,IMOL,IALF,JJ,JJS                 
      REAL TBAND,SDZ,ODZ,SD,OD,ALF0,T5,PTM75,FF,T5S,                    
     1  PTM75S,FFS,DOPFAC,DOP0,DOPSUM,COLSUM,ODSUM,SDSUM                
      COMMON/BMDCOM/IBNDWD,IP,ITB,NTEMP,TBAND(MXTEMP),SDZ(MXTEMP),      
     1  ODZ(MXTEMP),IBIN,IMOL,IALF,SD(MXTEMP,MMOLT2),OD(MXTEMP,MMOLT),  
     2  ALF0(MMOLT),T5(LAYTHR),PTM75(LAYTHR),JJ(LAYTHR),FF(LAYTHR),     
     3  T5S(LAYTHR,NSPC),PTM75S(LAYTHR,NSPC),JJS(LAYTHR,MMOLT),         
     4  FFS(LAYTHR,MMOLT),DOPFAC(MMOLT),DOP0(MMOLT),SDSUM(MMOLT2),      
     5  ODSUM(MMOLT),DOPSUM(MMOLT),COLSUM(MMOLT)                        
C                                                                       
C  FILL THE SD, OD AND ALF0 MATRICES.                                   
C                                                                       
      IM=IMOL                                                           
      IF(IM.LE.NSPC)THEN                                                
C                                                                       
C         LINE CENTER CONTRIBUTIONS                                     
C                                                                       
          IMTAIL=IM+NSPC                                                
          DO 10 IT=1,NTEMP                                              
              SD(IT,IM)=SDZ(IT)                                         
              OD(IT,IM)=ODZ(IT)                                         
              SD(IT,IMTAIL)=0.                                          
   10     CONTINUE                                                      
          ALF0(IM)=1.E-04*IALF                                          
      ELSE                                                              
C                                                                       
C         LINE TAIL CONTRIBUTIONS                                       
C                                                                       
          JM=IALF                                                       
          IF(JM.EQ.0)THEN                                               
C                                                                       
C             ONE TAIL                                                  
C                                                                       
              DO 20 IT=1,NTEMP                                          
                  SD(IT,IM)=SDZ(IT)                                     
   20         CONTINUE                                                  
          ELSE                                                          
C                                                                       
C             TWO TAILS                                                 
C                                                                       
              DO 30 IT=1,NTEMP                                          
                  SD(IT,JM)=ODZ(IT)                                     
                  SD(IT,IM)=SDZ(IT)                                     
   30         CONTINUE                                                  
          ENDIF                                                         
      ENDIF                                                             
      RETURN                                                            
      END                                                               
      SUBROUTINE BMOD(IK,IKMX,IPATH,IV,MSOFF,MXFREQ)                    
C                                                                       
C     THIS ROUTINE RETURNS THE TRANSMITTANCE AT A SPECTRAL              
C     RESOLUTION OF 1 CM-1 FOR THE CFC'S AND THE "NSPC" SPECIES.        
C           K = ( 1, 13)      H2O LINE (CENTERS, TAILS)                 
C             = ( 2, 14)      CO2 LINE (CENTERS, TAILS)                 
C             = ( 3, 15)       O3 LINE (CENTERS, TAILS)                 
C             = ( 4, 16)      N2O LINE (CENTERS, TAILS)                 
C             = ( 5, 17)       CO LINE (CENTERS, TAILS)                 
C             = ( 6, 18)      CH4 LINE (CENTERS, TAILS)                 
C             = ( 7, 19)       O2 LINE (CENTERS, TAILS)                 
C             = ( 8, 20)       NO LINE (CENTERS, TAILS)                 
C             = ( 9, 21)      SO2 LINE (CENTERS, TAILS)                 
C             = (10, 22)      NO2 LINE (CENTERS, TAILS)                 
C             = (11, 23)      NH3 LINE (CENTERS, TAILS)                 
C             = (12, 24)     HNO3 LINE (CENTERS, TAILS)                 
C                                                                       
C     DECLARE INPUTS                                                    
      INTEGER IK,IKMX,IPATH,IV,MSOFF,MXFREQ                             
C                                                                       
C     INCLUDE PARAMETERS                                                
      INCLUDE 'PARAM.LST'                                               
C                                                                       
C     LIST COMMONS                                                      
      INTEGER IBINX,IMOLX,IALFX                                         
      REAL SDZX,ODZX                                                    
      COMMON/BMDCMX/SDZX(MXTEMP),ODZX(MXTEMP),IBINX,IMOLX,IALFX         
      REAL TXX,WX,WPATHX                                                
      COMMON/NONAME/TXX(MMOLX),WX(MMOLX),WPATHX(LAYTHR,MMOLX)           
      REAL WPTHSX,TBBYSX                                                
      COMMON/SOLSX/WPTHSX(LAYTHR,MMOLX),TBBYSX(LAYTHR,MMOLX)            
      INTEGER KPOINT                                                    
      REAL WAVLEN,EXTC,ABSC,ASYM,AWCCON,TX,W,RELHUM,PATM,TBBY,WPATH     
      COMMON/BASE/WAVLEN(MXWVLN),EXTC(NAER,MXWVLN),ABSC(NAER,MXWVLN),   
     1  ASYM(NAER,MXWVLN),AWCCON(NAER),KPOINT(NSPC),TX(KMAX),W(KMAX),   
     2  RELHUM(LAYDIM),PATM(LAYTHR),TBBY(LAYTHR),WPATH(LAYTHR,KMAX)     
      INTEGER JTURN,LJ                                                  
      REAL ATHETA,ADBETA,PHASFN,AH1,ARH,ANGSUN,TBBYS,PATMS,WPATHS       
      COMMON/SOLS/JTURN,LJ(LAYTWO+1),ATHETA(LAYDIM+1),                  
     1  ADBETA(LAYDIM+1),PHASFN(LAYTWO,4),AH1(LAYTWO),ARH(LAYTWO),      
     2  ANGSUN,TBBYS(LAYTHR,12),PATMS(LAYTHR,12),WPATHS(LAYTHR,KMAX)    
      INTEGER MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT                     
      REAL TBOUND,SALB                                                  
      LOGICAL MODTRN                                                    
      COMMON/CARD1/MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,                      
     1  NOPRNT,TBOUND,SALB,MODTRN                                       
      INTEGER IBNDWD,IP,ITB,NTEMP,IBIN,IMOL,IALF,JJ,JJS                 
      REAL TBAND,SDZ,ODZ,SD,OD,ALF0,T5,PTM75,FF,T5S,                    
     1  PTM75S,FFS,DOPFAC,DOP0,DOPSUM,COLSUM,ODSUM,SDSUM                
      COMMON/BMDCOM/IBNDWD,IP,ITB,NTEMP,TBAND(MXTEMP),SDZ(MXTEMP),      
     1  ODZ(MXTEMP),IBIN,IMOL,IALF,SD(MXTEMP,MMOLT2),OD(MXTEMP,MMOLT),  
     2  ALF0(MMOLT),T5(LAYTHR),PTM75(LAYTHR),JJ(LAYTHR),FF(LAYTHR),     
     3  T5S(LAYTHR,NSPC),PTM75S(LAYTHR,NSPC),JJS(LAYTHR,MMOLT),         
     4  FFS(LAYTHR,MMOLT),DOPFAC(MMOLT),DOP0(MMOLT),SDSUM(MMOLT2),      
     5  ODSUM(MMOLT),DOPSUM(MMOLT),COLSUM(MMOLT)                        
C                                                                       
C     DECLARE LOCAL FUNCTIONS                                           
      REAL BMTRAN,BMTRN                                                 
C                                                                       
C     DECLARE LOCAL VARIABLES                                           
      INTEGER ITBX,IPATH0,K,KX,IML,IT,I,LMAX,LS,                        
     1  NSPED,KNEW,KSD,KP,KTAIL,L,MSOFFL,J,JM1                          
      LOGICAL MOLTRN                                                    
      REAL V,COLO3,DV,F,STORE,ABSM,DINV,TAIL,                           
     1  TDEPTH,DEPTH,ODBAR,ADBAR,ACBAR,ACBAR2,TRANSM                    
C                                                                       
C     SAVE LOCAL VARIABLES                                              
      SAVE MOLTRN,COLO3                                                 
C                                                                       
C     DOPFAC (UNITLESS) EQUALS SQRT(2 LN2 R T / M)/C WHERE T IS THE     
C     STANDARD TEMPERATURE (273.15K) AND M IS MOLECULAR WEIGHT.         
      DATA ITBX/31/,DV/1./,IPATH0/0/                                    
C                                                                       
C     IF IV IS BEYOND BAND MODEL TAPE RANGE, SET TRANSMITTANCES TO 1    
      IF(IV.GT.MXFREQ)THEN                                              
          DO 10 K=1,NSPC                                                
              TX(KPOINT(K))=1.                                          
   10     CONTINUE                                                      
C                                                                       
          DO 20 KX=1,NSPECX                                             
              TXX(KX)=1.                                                
   20     CONTINUE                                                      
          RETURN                                                        
      ENDIF                                                             
C                                                                       
C     IK=0 IS THE INITIAL CALL FOR EACH WAVENUMBER AND IS MADE PRIOR    
C     TO THE LOOP OVER LAYERS.  IK=-1 IS THE INITIAL CALL TO BMOD       
C     AFTER THE MULTIPLE SCATTERING LOOP IS COMPLETE                    
      IF(IK.EQ.0)THEN                                                   
C                                                                       
C         IS THERE MOLECULAR DATA FOR FREQUENCY IV?                     
          IF(IBIN.NE.IV)THEN                                            
              MOLTRN=.FALSE.                                            
              RETURN                                                    
          ENDIF                                                         
          MOLTRN=.TRUE.                                                 
C                                                                       
C         FOR EACH SPECIES, SET THE 'NO DATA' INDICATOR                 
          DO 30 IML=1,2*NSPECT                                          
   30     SD(1,IML)=0.                                                  
C                                                                       
C         LOAD MOLECULAR DATA FOR FREQUENCY IV                          
   40     CONTINUE                                                      
          IF(IBIN.EQ.IV)THEN                                            
              CALL BMLOAD                                               
              IF(IV.GE.MXFREQ)GOTO50                                    
              IP=IP+1                                                   
              READ(ITB,REC=IP)                                          
     1          IBIN,IMOL,(SDZ(I),I=1,MXTEMP),IALF,(ODZ(I),I=1,MXTEMP)  
              GOTO40                                                    
          ENDIF                                                         
C                                                                       
C         LOAD CFC DATA FOR FREQUENCY IV                                
   50     CONTINUE                                                      
          IF(IBINX.EQ.IV)THEN                                           
              CALL BMXLD                                                
              READ(ITBX,'(I6,I5,1P11E11.3)',END=60)                     
     1          I,IMOLX,(SDZX(IT),IT=1,NTEMP)                           
              IBINX=I                                                   
              READ(ITBX,'(6X,I5,1P11E11.3)')IALFX,(ODZX(IT),IT=1,NTEMP) 
              GOTO50                                                    
          ENDIF                                                         
   60     CONTINUE                                                      
          DV=IBNDWD                                                     
C                                                                       
C         ZERO LAYER LOOP QUANTITIES; DEFINE STANDARD DOPPLER WIDTH     
          V=FLOAT(IV)                                                   
          IF(IV.EQ.0)V=.25*IBNDWD                                       
          DO 70 K=1,NSPECT                                              
              DOP0(K)=V*DOPFAC(K)                                       
              COLSUM(K)=0.                                              
              DOPSUM(K)=0.                                              
              ODSUM(K)=0.                                               
              SDSUM(K)=0.                                               
              SDSUM(K+NSPECT)=0.                                        
   70         CONTINUE                                                  
              COLO3=0.                                                  
           RETURN                                                       
      ELSEIF(IK.EQ.-1)THEN                                              
          DO 80 K=1,NSPECT                                              
              COLSUM(K)=0.                                              
              DOPSUM(K)=0.                                              
              ODSUM(K)=0.                                               
              SDSUM(K)=0.                                               
              SDSUM(K+NSPECT)=0.                                        
   80         CONTINUE                                                  
              COLO3=0.                                                  
          RETURN                                                        
      ENDIF                                                             
      IF(.NOT.MOLTRN)THEN                                               
          DO 90 K=1,NSPC                                                
              TX(KPOINT(K))=1.                                          
   90     CONTINUE                                                      
          RETURN                                                        
      ENDIF                                                             
C                                                                       
C     START CALCULATION OF MOLECULAR TRANSMITTANCE                      
      IF(IEMSCT.EQ.0 .OR. IEMSCT.EQ.3)THEN                              
C                                                                       
C         LOOP OVER ALL LAYERS FOR TRANSMITTANCE CALCULATIONS           
          LMAX=IKMX                                                     
      ELSEIF(IEMSCT.EQ.1)THEN                                           
C                                                                       
C         LOOP OVER SINGLE LAYER FOR RADIANCE CALCULATION WITHOUT SOLAR 
          LMAX=IK                                                       
      ELSE                                                              
          GOTO(100,110,120),IPATH                                       
C                                                                       
C         SKIP LAYER LOOP COMPLETELY FOR FIRST SOLAR PATH WITH IPATH=1  
  100     LMAX=0                                                        
          LS=1                                                          
          GOTO130                                                       
C                                                                       
C         LOOP OVER SINGLE LAYER ONLY FOR "L PATH" WITH IPATH=2         
  110     LMAX=IK                                                       
          IF(MSOFF.GT.0)LMAX=0                                          
          LS=IK+1                                                       
          GOTO130                                                       
C                                                                       
C         LOOP OVER SINGLE LAYER IF NOT PERFORMED WHEN IPATH EQUALED 2  
  120     LMAX=0                                                        
          IF(MSOFF.GT.0 .OR. IPATH0.NE.2)LMAX=IK                        
  130     IPATH0=IPATH                                                  
      ENDIF                                                             
C                                                                       
C     START SPECIES LOOP                                                
      NSPED=NSPC+NSPC                                                   
      DO 160 KNEW=1,NSPECT                                              
          K=KNEW                                                        
          IF(KNEW.LE.NSPC)THEN                                          
             KSD=K                                                      
             KP=KPOINT(K)                                               
             KTAIL=K+NSPC                                               
          ELSE                                                          
             KP=KNEW-NSPC                                               
             KSD=KP+NSPED                                               
             KTAIL=KSD+NSPECX                                           
          ENDIF                                                         
C                                                                       
C         CHECK IF LINE CENTER CONTRIBUTES TO ABSORPTION                
          IF(SD(1,KSD).GT.0.)THEN                                       
C                                                                       
C             LOOP OVER LAYERS                                          
              DO 140 L=IK,LMAX                                          
C                                                                       
C                 INTERPOLATE BAND MODEL PARAMETERS OVER TEMPERATURE    
                  MSOFFL=MSOFF+L                                        
                  J=JJ(MSOFFL)                                          
                  F=FF(MSOFFL)                                          
                  JM1=J-1                                               
                  STORE=SD(J,KSD)                                       
                  ABSM=STORE+F*(SD(JM1,KSD)-STORE)                      
                  STORE=OD(J,K)                                         
                  DINV=STORE+F*(OD(JM1,K)-STORE)                        
                  STORE=SD(J,KTAIL)                                     
                  TAIL=STORE+F*(SD(JM1,KTAIL)-STORE)                    
C                                                                       
C                 PERFORM CURTIS-GODSON SUMS                            
                  IF(KNEW.LE.NSPC)STORE=WPATH(MSOFFL,KP)                
                  IF(KNEW.GT.NSPC)STORE=WPATHX(MSOFFL,KP)               
                  SDSUM(KTAIL)=SDSUM(KTAIL)+STORE*TAIL*PATM(MSOFFL)     
                  STORE=ABSM*STORE                                      
                  SDSUM(KSD)=SDSUM(KSD)+STORE                           
                  STORE=DINV*STORE                                      
                  ODSUM(K)=ODSUM(K)+STORE                               
                  DOPSUM(K)=DOPSUM(K)+STORE*T5(MSOFFL)                  
                  STORE=STORE*PTM75(MSOFFL)                             
                  COLSUM(K)=COLSUM(K)+STORE                             
                  IF(K.EQ.3)COLO3=COLO3+STORE*DINV*PTM75(MSOFFL)        
  140         CONTINUE                                                  
              TDEPTH=SDSUM(KTAIL)                                       
              DEPTH=SDSUM(KSD)                                          
              ODBAR=ODSUM(K)                                            
              ADBAR=DOPSUM(K)                                           
              ACBAR=COLSUM(K)                                           
              ACBAR2=0.                                                 
              IF(K.EQ.3)ACBAR2=COLO3                                    
C                                                                       
C             IF SOLAR PATH, CALCULATE ADDITIONAL LAYER                 
              IF(IEMSCT.EQ.2 .AND. IPATH.NE.3)THEN                      
                  MSOFFL=MSOFF+LS                                       
                  J=JJS(MSOFFL,K)                                       
                  F=FFS(MSOFFL,K)                                       
                  JM1=J-1                                               
                  STORE=SD(J,KSD)                                       
                  ABSM=STORE+F*(SD(JM1,KSD)-STORE)                      
                  STORE=OD(J,K)                                         
                  DINV=STORE+F*(OD(JM1,K)-STORE)                        
                  STORE=SD(J,KTAIL)                                     
                  TAIL=STORE+F*(SD(JM1,KTAIL)-STORE)                    
                  IF(KNEW.LE.NSPC) STORE=WPATHS(MSOFFL,KP)              
                  IF(KNEW.GT.NSPC) STORE=WPTHSX(MSOFFL,KP)              
                  IF(MSOFF.EQ.0)THEN                                    
C                                                                       
C                     L-SHAPED PATH                                     
                      TDEPTH=TDEPTH+STORE*TAIL*PATMS(MSOFFL,K)          
                      STORE=ABSM*STORE                                  
                      DEPTH=DEPTH+STORE                                 
                      STORE=DINV*STORE                                  
                      ODBAR=ODBAR+STORE                                 
                      ADBAR=ADBAR+STORE*T5S(MSOFFL,K)                   
                      STORE=STORE*PTM75S(MSOFFL,K)                      
                      ACBAR=ACBAR+STORE                                 
                      IF(K.EQ.3)                                        
     1                  ACBAR2=ACBAR2+STORE*DINV*PTM75S(MSOFFL,K)       
                  ELSE                                                  
C                                                                       
C                     SOLAR PATH ONLY                                   
                      TDEPTH=STORE*TAIL*PATMS(MSOFFL,K)                 
                      DEPTH=ABSM*STORE                                  
                      ODBAR=DINV*DEPTH                                  
                      ADBAR=ODBAR*T5S(MSOFFL,K)                         
                      ACBAR=ODBAR*PTM75S(MSOFFL,K)                      
                      IF(K.EQ.3)ACBAR2=ACBAR*DINV*PTM75S(MSOFFL,K)      
                  ENDIF                                                 
              ENDIF                                                     
C                                                                       
C             CHECK FOR WEAK LINE                                       
              IF(DEPTH.LT.0.001)THEN                                    
                  TRANSM=1.-DEPTH                                       
              ELSE                                                      
C                                                                       
C                 CALCULATE EQUIVALENT WIDTH TRANSMITTANCE              
                  ODBAR=ODBAR/DEPTH                                     
                  ADBAR=DOP0(K)*ADBAR/DEPTH                             
                  ACBAR=ALF0(K)*ACBAR/DEPTH                             
                  IF(ACBAR2.NE.0.)THEN                                  
                      ACBAR2=ACBAR2/DEPTH*ALF0(K)**2                    
                      TRANSM=BMTRAN(DEPTH,ODBAR,ADBAR,ACBAR,ACBAR2,DV)  
                  ELSE                                                  
                      TRANSM=BMTRN(DEPTH,ODBAR,ADBAR,ACBAR,DV)          
                  ENDIF                                                 
              ENDIF                                                     
C                                                                       
C             ADD LINE TAIL CONTRIBUTIONS.                              
              IF(TRANSM.GT.0.)TRANSM=TRANSM*EXP(-TDEPTH)                
              IF(KNEW.LE.NSPC)THEN                                      
                  TX(KP)=TRANSM                                         
              ELSE                                                      
                  TXX(KP)=TRANSM                                        
              ENDIF                                                     
C                                                                       
C         CHECK IF LINE TAILS CONTRIBUTE TO ABSORPTION                  
          ELSEIF(SD(1,KTAIL).GT.0.)THEN                                 
C                                                                       
C             LOOP OVER LAYERS                                          
              DO 150 L=IK,LMAX                                          
C                                                                       
C                 INTERPOLATE BAND MODEL PARAMETERS OVER TEMPERATURE    
                  MSOFFL=MSOFF+L                                        
                  J=JJ(MSOFFL)                                          
                  STORE=SD(J,KTAIL)                                     
                  TAIL=STORE+FF(MSOFFL)*(SD(J-1,KTAIL)-STORE)           
C                                                                       
C                 PERFORM CURTIS-GODSON SUMS                            
                  IF(KNEW.LE.NSPC)                                      
     1                STORE=WPATH(MSOFFL,KP)*TAIL*PATM(MSOFFL)          
                  IF(KNEW.GT.NSPC)                                      
     1                STORE=WPATHX(MSOFFL,KP)*TAIL                      
                  SDSUM(KTAIL)=SDSUM(KTAIL)+STORE                       
  150         CONTINUE                                                  
              TDEPTH=SDSUM(KTAIL)                                       
C                                                                       
C             IF SOLAR PATH, CALCULATE ADDITIONAL LAYER.                
              IF(IEMSCT.EQ.2 .AND. IPATH.NE.3)THEN                      
                  MSOFFL=MSOFF+LS                                       
                  J=JJS(MSOFFL,K)                                       
                  STORE=SD(J,KTAIL)                                     
                  TAIL=STORE+FFS(MSOFFL,K)*(SD(J-1,KTAIL)-STORE)        
                  IF(MSOFF.EQ.0)THEN                                    
C                                                                       
C                     L-SHAPED PATH                                     
                      IF(KNEW.LE.NSPC)                                  
     1                    TDEPTH=TDEPTH+WPATHS(LS,KP)*TAIL*PATMS(LS,K)  
                      IF(KNEW.GT.NSPC)                                  
     1                    TDEPTH=TDEPTH+WPTHSX(LS,KP)*TAIL              
                  ELSE                                                  
C                                                                       
C                     SOLAR PATH ONLY                                   
                      IF(KNEW.LE.NSPC)                                  
     1                    TDEPTH=WPATHS(MSOFFL,KP)*TAIL*PATMS(MSOFFL,K) 
                      IF(KNEW.GT.NSPC)                                  
     1                    TDEPTH=WPTHSX(MSOFFL,KP)*TAIL                 
                  ENDIF                                                 
              ENDIF                                                     
C                                                                       
C             CALCULATE LINE TAIL TRANSMITTANCE                         
              IF(KNEW.LE.NSPC)THEN                                      
                 TX(KP)=EXP(-TDEPTH)                                    
                 IF(TX(KP).GT.1.)TX(KP)=1.                              
              ELSE                                                      
                 TXX(KP)=EXP(-TDEPTH)                                   
                 IF(TXX(KP).GT.1.)TXX(KP)=1.                            
              ENDIF                                                     
          ELSE                                                          
              IF(KNEW.LE.NSPC)THEN                                      
                 TX(KP)=1.                                              
              ELSE                                                      
                 TXX(KP)=1.                                             
              ENDIF                                                     
          ENDIF                                                         
  160 CONTINUE                                                          
      RETURN                                                            
      END                                                               
      REAL FUNCTION BMTRAN(DEPTH,ODBAR,ADBAR,ACBAR,ACBAR2,DV)           
C                                                                       
C     THIS FUNCTION RETURNS PATH TRANSMITTANCE AVERAGED                 
C     OVER A SPECTRAL INTERVAL OF WIDTH DV.                             
C                                                                       
C     OUTPUTS                                                           
C       BMTRAN  =   PATH TRANSMITTANCE [DIMENSIONLESS]                  
C                                                                       
C     INPUTS                                                            
C                    _                                                  
C       DEPTH   =   >_  SU/D,     THE ABSORPTION COEFFICIENT (S/D)      
C                                 AND COLUMN DENSITY (U) PRODUCT,       
C                                 SUMMED OVER THE PATH [DIMENSIONLESS]  
C                                                                       
C       ODBAR   =   <1/D>,        THE RECIPROCAL OF THE LINE            
C                                 SPACING, (D), PATH AVERAGED [CM]      
C                                                                       
C       ADBAR   =   <ALFDOP/D>,   THE DOPPLER LINE WIDTH (ALFDOP)       
C                                 OVER THE AVERAGE LINE SPACING (D),    
C                                 PATH AVERAGED [DIMENSIONLESS]         
C                                                                       
C       ACBAR   =   <ALFCOL/D>,   THE COLLISION (LORENTZ) LINE WIDTH    
C                                 (ALFCOL) OVER THE AVERAGE LINE SPACING
C                                 (D), PATH AVERAGED [DIMENSIONLESS]    
C                                                                       
C                          2  2                                         
C       ACBAR2  =   <ALFCOL /D >, THE COLLISION (LORENTZ) LINE WIDTH    
C                                 (ALFCOL) SQUARED OVER THE AVERAGE     
C                                 LINE SPACING (D) SQUARED, PATH        
C                                 AVERAGED [DIMENSIONLESS] (OZONE ONLY) 
C                                                                       
C       DV      =                 THE INTERVAL WIDTH [CM-1]             
      REAL DEPTH,ODBAR,ADBAR,ACBAR,ACBAR2,DV                            
C                                                                       
C     DECLARE LOCAL VARIABLES                                           
      REAL WDW,STORE,RATIO,RHO,RHOP1,RHO2,RHO2P1,DENOM,                 
     1  F1,F2,F3,STR2PI,DOPTRM,WDRATD,WDRATL,WDV,ARG,WDFRAC             
C                                                                       
C     THE RODGERS AND WILLIAMS APPROXIMATION IS USED TO                 
C     CALCULATE THE TOTAL VOIGT EQUIVALENT WIDTH (WDV):                 
C                                                                       
C                2            2            2            2          2    
C       (WDV/WDW)  = (WDL/WDW)  + (WDD/WDW)  - (WDL/WDW)  (WDD/WDW)     
C                                                                       
C     WHERE WDW IS THE WEAK-LINE EQUIVALENT WIDTH,                      
C           WDL IS THE LORENTZ EQUIVALENT WIDTH, AND                    
C           WDD IS THE DOPPLER EQUIVALENT WIDTH.                        
C                                                                       
C     THE APPROXIMATIONS FOR THESE EQUIVALENT WIDTHS ARE:               
C                                       _                               
C          WDW   =   <SU>         =  [ >_ SU/D ] / <1/D>                
C                                                                       
C                             2                                         
C       WDRATL   =   (WDL/WDW)   =  4 / (4 + WDW/<ALFCOL>)              
C                                                                       
C                             2                                         
C       WDRATD   =   (WDD/WDW)   =  LN (1 + DOPTRM) / DOPTRM            
C                                                                       
C     WHERE                                                             
C                                                   2                   
C               DOPTRM  =  [LN(2)/2]  (WDW/<ALFDOP>)                    
C                                                                       
C     THE HALF-WIDTHS ARE CALCULATED FROM THE FOLLOWING EXPRESSIONS:    
C                                                                 _     
C       <ALFCOL>/WDW = [<ALFCOL/D> / <1/D>] / WDW = <ALFCOL/D> / >_ SU/D
C                                                                 _     
C       <ALFDOP>/WDW = [<ALFDOP/D> / <1/D>] / WDW = <ALFDOP/D> / >_ SU/D
C                                                                       
C     FOR OZONE AN IMPROVED APPROXIMATION FOR LORENTZ EQUIVALENT WIDTH  
C     IS REQUIRED BASED ON THE WORK OF R. M. GOODY, WITH REFINEMENTS    
C     BY L. S. BERNSTEIN TO ELIMINATE DECREASES IN THE CURVE-OF-GROWTH  
C                                                                       
C     LIST DATA                                                         
C        PT5LN2  =  .5 * LN(2)                                          
      REAL PT5LN2,PI,TWOPI                                              
      DATA PT5LN2,PI,TWOPI/.34657359,3.1415927,6.2831853/               
C                                                                       
C     WEAK-LINE EQUIVALENT WIDTH [CM-1]                                 
      WDW=DEPTH/ODBAR                                                   
C                                                                       
C     CALCULATE DENOMINATOR IN THE LORENTZ EQUIVALENT WIDTH EXPRESSION  
      STORE=DEPTH/ACBAR                                                 
      RATIO=1.                                                          
      IF(ACBAR2.NE.0.)THEN                                              
C                                                                       
C         REFINEMENT FOR OZONE ONLY                                     
          RHO=ACBAR2/ACBAR**2                                           
          RHOP1=RHO+1.                                                  
          RHO2=RHO**2                                                   
          RHO2P1=RHO2+1.                                                
          DENOM=RHOP1*(RHO2+RHOP1)                                      
          F1=RHO*(RHO-1)*RHO2P1/DENOM                                   
          DENOM=DENOM*RHOP1**2                                          
          F2=2.*RHO2*RHO2P1/DENOM                                       
C                                                                       
C         THE F3 EQUATION HAS BEEN IMPROVED (THE CURVE-OF-GROWTH        
C         WAS DECREASING FOR SOME DOWN LOOKING PATHS ON THE WING        
C         OF THE 9.6 MICRON O3 BAND; THIS NO LONGER OCCURS).            
          F3=.7200*RHO-.5314                                            
          STR2PI=STORE/TWOPI                                            
          RATIO=1.-.5*STR2PI*F1/(1.+STR2PI*(F3+STR2PI*F2))              
          STORE=RATIO*STORE                                             
      ENDIF                                                             
      DENOM=4.+STORE                                                    
C                                                                       
C     CALCULATE TERM IN EXPRESSION FOR DOPPLER EQUIVALENT WIDTH         
      DOPTRM=PT5LN2*(DEPTH/ADBAR)**2                                    
C                                                                       
C     CALCULATE VOIGT EQUIVALENT WIDTH (RODGERS-WILLIAMS APPROXIMATION) 
      IF(DOPTRM.GT..01)THEN                                             
C                                                                       
C         STANDARD EXPRESSIONS                                          
          WDRATD=LOG(1.+DOPTRM)/DOPTRM                                  
          WDRATL=4./DENOM*RATIO**2                                      
          WDV=WDW*SQRT(WDRATD+WDRATL-WDRATD*WDRATL)                     
      ELSEIF(DOPTRM.GT..0001)THEN                                       
C                                                                       
C         IF DOPTRM IS SMALL, WDRATD IS NEAR ONE.  REPLACE              
C         THE LOG AND THE SQRT WITH POWER SERIES EXPANSIONS.            
          STORE=DOPTRM*(.25-DOPTRM*(.16666667-.125*DOPTRM))*            
     1      (STORE+(1-RATIO)*(1+RATIO))/DENOM                           
          WDV=WDW*(1.-STORE*(1.+.5*STORE*(1.+STORE)))                   
      ELSE                                                              
C                                                                       
C         IF DOPTRM IS VERY SMALL, TRUNCATED EXPANSIONS SUFFICE.        
          WDV=WDW*(1.-.25*DOPTRM*(STORE+(1-RATIO)*(1+RATIO))/DENOM)     
      ENDIF                                                             
C                                                                       
C     SUBTRACT LINE TAIL CONTRIBUTIONS ASSUMING LORENTZIAN TAILS        
C     AND ASSUMING THE LINE IS CENTERED .2 DV FROM BIN EDGE.            
      ARG=SQRT(WDW*RATIO*ACBAR/(PI*ODBAR))/DV                           
      WDFRAC=WDV/DV-(.2*BMERFU(5.*ARG)+.8*BMERFU(1.25*ARG))             
C                                                                       
C     CALCULATE TRANSMITTANCE USING POWER LAW EXPRESSION                
      BMTRAN=0.                                                         
      IF(WDFRAC.LT.1.)BMTRAN=(1.-WDFRAC)**(DV*ODBAR)                    
C                                                                       
C     RETURN TO BMOD                                                    
      RETURN                                                            
      END                                                               
      REAL FUNCTION BMTRN(DEPTH,ODBAR,ADBAR,ACBAR,DV)                   
C                                                                       
C     THIS FUNCTION RETURNS PATH TRANSMITTANCE AVERAGED                 
C     OVER A SPECTRAL INTERVAL OF WIDTH DV.                             
C                                                                       
C     OUTPUTS                                                           
C       BMTRN  =   PATH TRANSMITTANCE [DIMENSIONLESS]                   
C                                                                       
C     INPUTS                                                            
C                    _                                                  
C       DEPTH   =   >_  SU/D,     THE ABSORPTION COEFFICIENT (S/D)      
C                                 AND COLUMN DENSITY (U) PRODUCT,       
C                                 SUMMED OVER THE PATH [DIMENSIONLESS]  
C                                                                       
C       ODBAR   =   <1/D>,        THE RECIPROCAL OF THE LINE            
C                                 SPACING, (D), PATH AVERAGED [CM]      
C                                                                       
C       ADBAR   =   <ALFDOP/D>,   THE DOPPLER LINE WIDTH (ALFDOP)       
C                                 OVER THE AVERAGE LINE SPACING (D),    
C                                 PATH AVERAGED [DIMENSIONLESS]         
C                                                                       
C       ACBAR   =   <ALFCOL/D>,   THE COLLISION (LORENTZ) LINE WIDTH    
C                                 (ALFCOL) OVER THE AVERAGE LINE SPACING
C                                 (D), PATH AVERAGED [DIMENSIONLESS]    
C                                                                       
C       DV      =                 THE INTERVAL WIDTH [CM-1]             
      REAL DEPTH,ODBAR,ADBAR,ACBAR,DV                                   
C                                                                       
C     DECLARE LOCAL VARIABLES                                           
      REAL WDW,STORE,DENOM,DOPTRM,WDRATD,WDRATL,WDV,ARG,WDFRAC          
C                                                                       
C     THE RODGERS AND WILLIAMS APPROXIMATION IS USED TO                 
C     CALCULATE THE TOTAL VOIGT EQUIVALENT WIDTH (WDV):                 
C                                                                       
C                2            2            2            2          2    
C       (WDV/WDW)  = (WDL/WDW)  + (WDD/WDW)  - (WDL/WDW)  (WDD/WDW)     
C                                                                       
C     WHERE WDW IS THE WEAK-LINE EQUIVALENT WIDTH,                      
C           WDL IS THE LORENTZ EQUIVALENT WIDTH, AND                    
C           WDD IS THE DOPPLER EQUIVALENT WIDTH.                        
C                                                                       
C     THE APPROXIMATIONS FOR THESE EQUIVALENT WIDTHS ARE:               
C                                       _                               
C          WDW   =   <SU>         =  [ >_ SU/D ] / <1/D>                
C                                                                       
C                             2                                         
C       WDRATL   =   (WDL/WDW)   =  4 / (4 + WDW/<ALFCOL>)              
C                                                                       
C                             2                                         
C       WDRATD   =   (WDD/WDW)   =  LN (1 + DOPTRM) / DOPTRM            
C                                                                       
C     WHERE                                                             
C                                                   2                   
C               DOPTRM  =  [LN(2)/2]  (WDW/<ALFDOP>)                    
C                                                                       
C     THE HALF-WIDTHS ARE CALCULATED FROM THE FOLLOWING EXPRESSIONS:    
C                                                                 _     
C       <ALFCOL>/WDW = [<ALFCOL/D> / <1/D>] / WDW = <ALFCOL/D> / >_ SU/D
C                                                                 _     
C       <ALFDOP>/WDW = [<ALFDOP/D> / <1/D>] / WDW = <ALFDOP/D> / >_ SU/D
C                                                                       
C     FOR OZONE AN IMPROVED APPROXIMATION FOR LORENTZ EQUIVALENT WIDTH  
C     IS REQUIRED BASED ON THE WORK OF R. M. GOODY, WITH REFINEMENTS    
C     BY L. S. BERNSTEIN TO ELIMINATE DECREASES IN THE CURVE-OF-GROWTH  
C                                                                       
C     LIST DATA                                                         
C        PT5LN2  =  .5 * LN(2)                                          
      REAL PT5LN2,PI                                                    
      DATA PT5LN2,PI/.34657359,3.1415927/                               
C                                                                       
C     WEAK-LINE EQUIVALENT WIDTH [CM-1]                                 
      WDW=DEPTH/ODBAR                                                   
C                                                                       
C     CALCULATE DENOMINATOR IN THE LORENTZ EQUIVALENT WIDTH EXPRESSION  
      STORE=DEPTH/ACBAR                                                 
      DENOM=4.+STORE                                                    
C                                                                       
C     CALCULATE TERM IN EXPRESSION FOR DOPPLER EQUIVALENT WIDTH         
      DOPTRM=PT5LN2*(DEPTH/ADBAR)**2                                    
C                                                                       
C     CALCULATE VOIGT EQUIVALENT WIDTH (RODGERS-WILLIAMS APPROXIMATION) 
      IF(DOPTRM.GT..01)THEN                                             
C                                                                       
C         STANDARD EXPRESSIONS                                          
          WDRATD=LOG(1.+DOPTRM)/DOPTRM                                  
          WDRATL=4./DENOM                                               
          WDV=WDW*SQRT(WDRATD+WDRATL-WDRATD*WDRATL)                     
      ELSEIF(DOPTRM.GT..0001)THEN                                       
C                                                                       
C         IF DOPTRM IS SMALL, WDRATD IS NEAR ONE.  REPLACE              
C         THE LOG AND THE SQRT WITH POWER SERIES EXPANSIONS.            
          STORE=DOPTRM*(.25-DOPTRM*(.16666667-.125*DOPTRM))*            
     1      STORE/DENOM                                                 
          WDV=WDW*(1.-STORE*(1.+.5*STORE*(1.+STORE)))                   
      ELSE                                                              
C                                                                       
C         IF DOPTRM IS VERY SMALL, TRUNCATED EXPANSIONS SUFFICE.        
          WDV=WDW*(1.-.25*DOPTRM*STORE/DENOM)                           
      ENDIF                                                             
C                                                                       
C     SUBTRACT LINE TAIL CONTRIBUTIONS ASSUMING LORENTZIAN TAILS        
C     AND ASSUMING THE LINE IS CENTERED .2 DV FROM BIN EDGE.            
      ARG=SQRT(WDW*ACBAR/(PI*ODBAR))/DV                                 
      WDFRAC=WDV/DV-(.2*BMERFU(5.*ARG)+.8*BMERFU(1.25*ARG))             
C                                                                       
C     CALCULATE TRANSMITTANCE USING POWER LAW EXPRESSION                
      BMTRN=0.                                                          
      IF(WDFRAC.LT.1.)BMTRN=(1.-WDFRAC)**(DV*ODBAR)                     
C                                                                       
C     RETURN TO BMOD                                                    
      RETURN                                                            
      END                                                               
      BLOCK DATA BMWIDS                                                 
C                                                                       
C     THIS BLOCK DATA DEFINED DOPPLER HALF-WIDTH                        
C     CONSTANTS FOR THE MOLECULAR SPECIES.                              
C                                                                       
C     INCLUDE PARAMETERS                                                
      INCLUDE 'PARAM.LST'                                               
C                                                                       
C     LIST COMMONS                                                      
      INTEGER IBNDWD,IP,ITB,NTEMP,IBIN,IMOL,IALF,JJ,JJS                 
      REAL TBAND,SDZ,ODZ,SD,OD,ALF0,T5,PTM75,FF,T5S,                    
     1  PTM75S,FFS,DOPFAC,DOP0,DOPSUM,COLSUM,ODSUM,SDSUM                
      COMMON/BMDCOM/IBNDWD,IP,ITB,NTEMP,TBAND(MXTEMP),SDZ(MXTEMP),      
     1  ODZ(MXTEMP),IBIN,IMOL,IALF,SD(MXTEMP,MMOLT2),OD(MXTEMP,MMOLT),  
     2  ALF0(MMOLT),T5(LAYTHR),PTM75(LAYTHR),JJ(LAYTHR),FF(LAYTHR),     
     3  T5S(LAYTHR,NSPC),PTM75S(LAYTHR,NSPC),JJS(LAYTHR,MMOLT),         
     4  FFS(LAYTHR,MMOLT),DOPFAC(MMOLT),DOP0(MMOLT),SDSUM(MMOLT2),      
     5  ODSUM(MMOLT),DOPSUM(MMOLT),COLSUM(MMOLT)                        
C                                                                       
C     LIST DATA                                                         
      DATA (DOPFAC(I),I=1,NSPECT)/                                      
     1  1.3945E-6,  0.8922E-6,  0.8543E-6,  0.8921E-6,  1.1183E-6,      
     2  1.4777E-6,  1.0463E-6,  1.0805E-6,  0.7395E-6,  0.8726E-6,      
     3  1.4342E-6,  0.7456E-6,  5.04981E-7, 5.38245E-7, 5.79088E-7,     
     4  6.30907E-7, 6.36486E-7, 4.32375E-7, 4.52709E-7, 4.76212E-7,     
     5  5.99528E-7, 6.65841E-7, 5.83391E-7, 4.7721E-7,  5.69488E-7/     
      END                                                               
      SUBROUTINE BMXLD                                                  
C                                                                       
C     THIS ROUTINE IS THE EQUIVALENT OF BMLOAD FOR THE X-MOLECULES.     
C                                                                       
C     THIS SUBROUTINE (CALLED BY BMOD) LOADS BAND MODEL DATA FOR A SINGL
C     PARAMETER SET INTO THE MATRICES SDX, ODX AND ALF0X (FOUND IN /BMDC
C                                                                       
C     CONVENTION                                                        
C     MMOLX = MAXIMUM NUMBER OF NEW SPECIES (IDENTIFIED BY "X")         
C     MMOL  = MAXIMUM NUMBER OF OLD SPECIES (W/O SUFFIX "X")            
C     THESE DEFINE THE MAXIMUM ARRAY SIZES.                             
C                                                                       
C     THE ACTUAL NUMBER OF PARAMETERS ARE:                              
C     NSPC = ACTUAL NUMBER OF OLD SPECIES (12), CAN'T EXCEED MMOL       
C     NSPECX = ACTUAL NUMBER OF "X" SPECIES,     CAN'T EXCEED MMOLX     
C                                                                       
      INCLUDE 'PARAM.LST'                                               
C                                                                       
C     TRANS VARIABLES                                                   
      INTEGER IBINX,IMOLX,IALFX                                         
      REAL SDZX,ODZX                                                    
      COMMON/BMDCMX/SDZX(MXTEMP),ODZX(MXTEMP),IBINX,IMOLX,IALFX         
      INTEGER IBNDWD,IP,ITB,NTEMP,IBIN,IMOL,IALF,JJ,JJS                 
      REAL TBAND,SDZ,ODZ,SD,OD,ALF0,T5,PTM75,FF,T5S,                    
     1  PTM75S,FFS,DOPFAC,DOP0,DOPSUM,COLSUM,ODSUM,SDSUM                
      COMMON/BMDCOM/IBNDWD,IP,ITB,NTEMP,TBAND(MXTEMP),SDZ(MXTEMP),      
     1  ODZ(MXTEMP),IBIN,IMOL,IALF,SD(MXTEMP,MMOLT2),OD(MXTEMP,MMOLT),  
     2  ALF0(MMOLT),T5(LAYTHR),PTM75(LAYTHR),JJ(LAYTHR),FF(LAYTHR),     
     3  T5S(LAYTHR,NSPC),PTM75S(LAYTHR,NSPC),JJS(LAYTHR,MMOLT),         
     4  FFS(LAYTHR,MMOLT),DOPFAC(MMOLT),DOP0(MMOLT),SDSUM(MMOLT2),      
     5  ODSUM(MMOLT),DOPSUM(MMOLT),COLSUM(MMOLT)                        
C                                                                       
C     FILL THE SDX, ODX AND ALF0X MATRICES.                             
      IMX=IMOLX                                                         
      NSPED=NSPC+NSPC                                                   
      IF(IMX.LE.NSPECX)THEN                                             
C                                                                       
C        LINE CENTER CONTRIBUTIONS                                      
C                                                                       
         IMTAIL=IMX+NSPECX                                              
         DO 10 IT=1,NTEMP                                               
            SD(IT,IMX+NSPED)=SDZX(IT)                                   
            OD(IT,IMX+NSPC)=ODZX(IT)                                    
            SD(IT,IMTAIL+NSPED)=0.                                      
 10      CONTINUE                                                       
         ALF0(IMX+NSPC)=1.E-04*IALFX                                    
      ELSE                                                              
C                                                                       
C        LINE TAIL CONTRIBUTIONS                                        
C                                                                       
         JMX=IALFX                                                      
         IF(JMX.EQ.0)THEN                                               
C                                                                       
C           ONE TAIL                                                    
C                                                                       
            DO 20 IT=1,NTEMP                                            
               SD(IT,IMX+NSPED)=SDZX(IT)                                
 20         CONTINUE                                                    
         ELSE                                                           
C                                                                       
C           TWO TAILS                                                   
C                                                                       
            DO 30 IT=1,NTEMP                                            
               SD(IT,JMX+NSPED)=ODZX(IT)                                
               SD(IT,IMX+NSPED)=SDZX(IT)                                
 30         CONTINUE                                                    
         ENDIF                                                          
      ENDIF                                                             
      RETURN                                                            
      END                                                               
      BLOCK DATA BO2C                                                   
C>    BLOCK DATA                                                        
C                                                                       
C     BLOCK DATA   (IDENTICAL TO BLOCK DATA IN FASCOD2)                 
C                                                                       
      COMMON/O2C/ O2DRAY(74),O2C001(74),O2S0(74),O2A(74),O2B(74),       
     X V1O2,V2O2,DVO2,NPTO2                                             
      DATA V1O2,V2O2,DVO2,NPTO2 /1395.0,1760.0,5.0,74/                  
      DATA O2S0/                                                        
     A0.       ,                                                        
     +  .110E-8, .220E-8, .440E-8, .881E-8, .176E-7, .353E-7, .705E-7,  
     B .141E-06, .158E-06, .174E-06, .190E-06, .207E-06, .253E-06,      
     B .307E-06, .357E-06, .401E-06, .445E-06, .508E-06, .570E-06,      
     B .599E-06, .627E-06, .650E-06, .672E-06, .763E-06, .873E-06,      
     B .101E-05, .109E-05, .121E-05, .133E-05, .139E-05, .145E-05,      
     B .148E-05, .140E-05, .134E-05, .126E-05, .118E-05, .114E-05,      
     B .109E-05, .105E-05, .105E-05, .105E-05, .104E-05, .103E-05,      
     B .992E-06, .945E-06, .876E-06, .806E-06, .766E-06, .726E-06,      
     B .640E-06, .555E-06, .469E-06, .416E-06, .364E-06, .311E-06,      
     B .266E-06, .222E-06, .177E-06, .170E-06, .162E-06, .155E-06,      
     B .143E-06, .130E-06, .118E-06, .905E-07, .629E-07,                
     + .316E-7, .157E-7, .786E-8, .393E-8, .196E-8, .982E-9,            
     + 0./                                                              
      DATA O2A /                                                        
     A 0.       ,                                                       
     +   .147E-3, .147E-3, .147E-3,  .147E-3, .147E-3, .147E-3, .147E-3,
     B  .147E-03,  .122E-02,  .204E-02,  .217E-02,  .226E-02,  .126E-02,
     B  .362E-03, -.198E-02, -.545E-02, -.786E-02, -.624E-02, -.475E-02,
     B -.506E-02, -.533E-02, -.586E-02, -.635E-02, -.644E-02, -.679E-02,
     B -.741E-02, -.769E-02, -.780E-02, -.788E-02, -.844E-02, -.894E-02,
     B -.899E-02, -.922E-02, -.892E-02, -.857E-02, -.839E-02, -.854E-02,
     B -.871E-02, -.889E-02, -.856E-02, -.823E-02, -.796E-02, -.768E-02,
     B -.715E-02, -.638E-02, -.570E-02, -.491E-02, -.468E-02, -.443E-02,
     B -.333E-02, -.184E-02,  .313E-03, -.164E-04, -.417E-03, -.916E-03,
     B -.206E-02, -.343E-02, -.515E-02, -.365E-02, -.172E-02,  .926E-03,
     B  .168E-02,  .262E-02,  .380E-02,  .551E-02,  .889E-02,           
     + .889E-2,  .889E-2, .889E-2, .889E-2, .889E-2, .889E-2,           
     +  0./                                                             
      DATA O2B  /                                                       
     A 0.       ,                                                       
     + .306E-4,-.306E-4,-.306E-4,-.306E-4,-.306E-4,-.306E-4,-.306E-4,   
     B -.306E-04, -.218E-04, -.159E-04, -.346E-05,  .642E-05,  .360E-05,
     B -.140E-05,  .157E-04,  .471E-04,  .656E-04,  .303E-04, -.192E-05,
     B  .705E-05,  .149E-04,  .200E-04,  .245E-04,  .158E-04,  .841E-05,
     B  .201E-05,  .555E-05,  .108E-04,  .150E-04,  .193E-04,  .230E-04,
     B  .243E-04,  .226E-04,  .184E-04,  .157E-04,  .169E-04,  .197E-04,
     B  .226E-04,  .258E-04,  .235E-04,  .212E-04,  .185E-04,  .156E-04,
     B  .125E-04,  .872E-05,  .760E-05,  .577E-05,  .334E-07, -.652E-05,
     B -.977E-05, -.157E-04, -.273E-04, -.180E-04, -.641E-05,  .817E-05,
     B  .326E-04,  .626E-04,  .101E-03,  .755E-04,  .430E-04, -.113E-05,
     B -.578E-05, -.120E-04, -.208E-04, -.235E-04, -.364E-04,           
     + .364E-4, -.364E-4,-.364E-4,-.364E-4,-.364E-4,-.364E-4,           
     + 0./                                                              
C                                                                       
      END                                                               
      BLOCK DATA BO3HH0                                                 
C>    BLOCK DATA                                                        
C                                                                       
C                                                                       
C     O3HH0 CONTAINS O3 HARTLEY HUGGINS CROSS SECTIONS FOR 273K         
C               UNITS OF (CM**2/MOL)*1.E-20                             
C                                                                       
C     NOW INCLUDES MOLINA & MOLINA AT 273K WITH THE TEMPERATURE         
C     DEPENDENCE DETERMINED FROM THE 195K HARVARD MEASUREMENTS,         
C     EMPLOYING THE BASS ALGORITHM (CO(1+C1*T+C2*T2); THIS IS           
C     ONLY FOR THE WAVELENGTH RANGE FROM .34 TO .35 MICRONS;            
C     OTHERWISE, THE BASS DATA ALONE HAVE BEEN EMPLOYED BETWEEN         
C     .34 AND .245 MICRONS.                                             
C                                                                       
C     NEW T-DEPENDENT X-SECTIONS BETWEEN .345 AND .36 MICRONS           
C     HAVE NOW BEEN ADDED, BASED ON WORK BY CACCIANI, DISARRA           
C     AND FIOCCO, UNIVERSITY OF ROME, 1987.  QUADRATIC TEMP             
C     HAS BEEN DERIVED, AS ABOVE.                                       
C                                                                       
C     MOLINA & MOLINA HAVE AGAIN BEEN USED BETWEEN .245 AND .185        
C     MICRONS (NO TEMPERATURE DEPENDENCE)                               
C                                                                       
C     AGREEMENT AMONGST THE FOUR DATA SETS IS REASONABLE (<10%)         
C     AND OFTEN EXCELLENT (0-3%)                                        
C                                                                       
C                                                                       
      COMMON /O3HH0/  V1C,V2C,DVC,NC,                                   
     X           O30001(80),O30081(80),O30161(80),O30241(80),O30321(80),
     X           O30401( 7),                                            
     X           C00001(80),C00081(80),C00161(80),C00241(80),C00321(80),
     X           C00401(80),C00481(80),C00561(80),C00641(80),C00721(80),
     X           C00801(80),C00881(80),C00961(80),C01041(80),C01121(80),
     X           C01201(80),C01281(80),C01361(80),C01441(80),C01521(80),
     X           C01601(80),C01681(80),C01761(80),C01841(80),C01921(80),
     X           C02001(80),C02081(80),C02161(80),C02241(40)            
C                                                                       
C     DATA V1C  /27370./,V2C  /29400./,DVC  /5./,NC  /407/ INN & TANAKA 
C         DATA FROM INN & TANAKA, HANDBOOK OF GEOPHYSICS, 1957, P 16-24 
C                LINEARLY INTERPOLATED BY SAC, JUNE 1985                
C                CONVERSION: (I&T)/(LOSCHMIDT 1 1987*1.2)               
C                                                                       
C     DATA V1C /29405./, V2C /40800./ ,DVC /5./, NC /2280/  BASS        
C         DATA FROM BASS, JUNE 1985                                     
C                                                                       
      DATA V1C /27370./, V2C /40800./ ,DVC /5./, NC /2687/              
C                                                                       
      DATA O30001/                                                      
C    X 2.08858E-03, 1.98947E-03, 1.89037E-03, 1.79126E-03, 1.69215E-03, 
C     THIS LINE OF DATA HAS BEEN REPLACED BY MONTONICALLY DECREASING    
C     VALUES                                                            
     X 1.00000E-03, 1.15000E-03, 1.25000E-03, 1.40000E-03, 1.50000E-03, 
     X 1.59304E-03, 1.62396E-03, 1.76216E-03, 1.90036E-03, 2.03856E-03, 
     X 2.16538E-03, 2.02324E-03, 1.88110E-03, 1.73896E-03, 1.59682E-03, 
     X 1.45468E-03, 1.31253E-03, 1.17039E-03, 1.02825E-03, 8.86108E-04, 
     X 7.43963E-04, 6.01821E-04, 4.59679E-04, 5.14820E-04, 5.73044E-04, 
     X 6.31269E-04, 6.89493E-04, 7.47718E-04, 8.05942E-04, 8.64167E-04, 
     X 9.22392E-04, 9.80617E-04, 1.03884E-03, 1.09707E-03, 1.15528E-03, 
     X 1.21351E-03, 1.27173E-03, 1.32996E-03, 1.38818E-03, 1.44641E-03, 
     X 1.50463E-03, 1.56286E-03, 1.62108E-03, 1.67931E-03, 1.73753E-03, 
     X 1.79575E-03, 1.85398E-03, 1.91220E-03, 1.97043E-03, 2.02865E-03, 
     X 2.08688E-03, 2.14510E-03, 2.20333E-03, 2.26155E-03, 2.31978E-03, 
     X 2.37800E-03, 2.43623E-03, 2.49444E-03, 2.55267E-03, 2.61089E-03, 
     X 2.66912E-03, 2.72734E-03, 2.78557E-03, 2.84379E-03, 2.90202E-03, 
     X 2.96024E-03, 3.01847E-03, 3.07669E-03, 3.13491E-03, 3.19313E-03, 
     X 3.25136E-03, 3.30958E-03, 3.36781E-03, 3.31660E-03, 3.21583E-03, 
     X 3.11505E-03, 3.22165E-03, 3.46058E-03, 3.69953E-03, 3.93846E-03/ 
      DATA O30081/                                                      
     X 4.17739E-03, 4.41633E-03, 4.42256E-03, 4.13791E-03, 4.17894E-03, 
     X 4.25583E-03, 4.33273E-03, 4.40963E-03, 4.49259E-03, 4.44532E-03, 
     X 4.17540E-03, 3.84814E-03, 3.41823E-03, 3.11003E-03, 2.86548E-03, 
     X 2.73912E-03, 2.70800E-03, 2.70882E-03, 2.70866E-03, 2.70816E-03, 
     X 2.71228E-03, 2.78044E-03, 2.86135E-03, 3.00163E-03, 3.15222E-03, 
     X 3.33394E-03, 3.48231E-03, 3.64966E-03, 3.83242E-03, 3.97733E-03, 
     X 4.10299E-03, 4.26332E-03, 4.41165E-03, 4.54040E-03, 4.65544E-03, 
     X 4.91897E-03, 5.23429E-03, 5.45390E-03, 5.74420E-03, 5.96314E-03, 
     X 6.07198E-03, 6.07338E-03, 5.99162E-03, 5.95079E-03, 6.04655E-03, 
     X 6.18239E-03, 6.56998E-03, 6.93885E-03, 7.38561E-03, 7.73029E-03, 
     X 7.90493E-03, 7.72072E-03, 7.40226E-03, 6.53860E-03, 5.30328E-03, 
     X 4.23000E-03, 3.45735E-03, 3.21167E-03, 3.16694E-03, 3.30966E-03, 
     X 3.47431E-03, 3.68089E-03, 3.92006E-03, 4.05246E-03, 4.16408E-03, 
     X 4.08710E-03, 3.98224E-03, 4.07316E-03, 4.19498E-03, 4.44990E-03, 
     X 4.77881E-03, 5.08270E-03, 5.37384E-03, 5.70240E-03, 5.91906E-03, 
     X 5.96745E-03, 5.92363E-03, 5.80363E-03, 5.60812E-03, 5.37450E-03/ 
      DATA O30161/                                                      
     X 5.16202E-03, 4.98389E-03, 4.95294E-03, 5.04930E-03, 5.17576E-03, 
     X 5.26042E-03, 5.22957E-03, 5.32404E-03, 5.39630E-03, 5.53353E-03, 
     X 5.68057E-03, 5.78679E-03, 5.83795E-03, 5.93810E-03, 6.09330E-03, 
     X 6.40001E-03, 6.69056E-03, 7.04863E-03, 7.41339E-03, 7.87421E-03, 
     X 8.35570E-03, 8.97672E-03, 9.58486E-03, 1.01972E-02, 1.08463E-02, 
     X 1.14105E-02, 1.18935E-02, 1.22404E-02, 1.25053E-02, 1.28759E-02, 
     X 1.32169E-02, 1.37796E-02, 1.46488E-02, 1.57324E-02, 1.68897E-02, 
     X 1.78560E-02, 1.87101E-02, 1.92197E-02, 1.94106E-02, 1.90711E-02, 
     X 1.86585E-02, 1.82149E-02, 1.82219E-02, 1.85639E-02, 1.91924E-02, 
     X 2.01342E-02, 2.12312E-02, 2.26362E-02, 2.39610E-02, 2.55156E-02, 
     X 2.71338E-02, 2.87904E-02, 3.04268E-02, 3.17055E-02, 3.28248E-02, 
     X 3.36026E-02, 3.36867E-02, 3.26393E-02, 2.99356E-02, 2.56607E-02, 
     X 2.11545E-02, 1.79508E-02, 1.59757E-02, 1.49569E-02, 1.46214E-02, 
     X 1.46214E-02, 1.48217E-02, 1.51379E-02, 1.53816E-02, 1.58087E-02, 
     X 1.62186E-02, 1.66627E-02, 1.70961E-02, 1.76101E-02, 1.81759E-02, 
     X 1.86154E-02, 1.88889E-02, 1.89577E-02, 1.89316E-02, 1.88826E-02/ 
      DATA O30241/                                                      
     X 1.90915E-02, 1.95550E-02, 2.02707E-02, 2.11620E-02, 2.21844E-02, 
     X 2.30920E-02, 2.37270E-02, 2.37422E-02, 2.33578E-02, 2.20358E-02, 
     X 1.96239E-02, 1.73329E-02, 1.57013E-02, 1.50566E-02, 1.49248E-02, 
     X 1.52044E-02, 1.57658E-02, 1.63436E-02, 1.68986E-02, 1.74180E-02, 
     X 1.78192E-02, 1.80677E-02, 1.79927E-02, 1.77900E-02, 1.75599E-02, 
     X 1.74982E-02, 1.76674E-02, 1.81633E-02, 1.87826E-02, 1.96898E-02, 
     X 2.06898E-02, 2.17167E-02, 2.28231E-02, 2.40702E-02, 2.55084E-02, 
     X 2.69701E-02, 2.86915E-02, 3.05796E-02, 3.22328E-02, 3.42637E-02, 
     X 3.61708E-02, 3.79118E-02, 3.94418E-02, 4.07333E-02, 4.17158E-02, 
     X 4.17081E-02, 4.01127E-02, 3.65411E-02, 3.25123E-02, 2.98737E-02, 
     X 2.83616E-02, 2.79907E-02, 2.80571E-02, 2.84778E-02, 2.91698E-02, 
     X 2.99500E-02, 3.07468E-02, 3.13903E-02, 3.19811E-02, 3.24616E-02, 
     X 3.26503E-02, 3.26829E-02, 3.27688E-02, 3.36446E-02, 3.55133E-02, 
     X 3.88447E-02, 4.28854E-02, 4.55381E-02, 4.77161E-02, 4.93567E-02, 
     X 4.95127E-02, 5.00492E-02, 5.06233E-02, 5.12739E-02, 5.20327E-02, 
     X 5.29001E-02, 5.38677E-02, 5.49272E-02, 5.60703E-02, 5.72886E-02/ 
      DATA O30321/                                                      
     X 5.85739E-02, 5.99178E-02, 6.13170E-02, 6.28474E-02, 6.46499E-02, 
     X 6.68672E-02, 6.96421E-02, 7.31174E-02, 7.74361E-02, 8.27413E-02, 
     X 8.91756E-02, 9.67018E-02, 1.04844E-01, 1.13063E-01, 1.20818E-01, 
     X 1.27567E-01, 1.32771E-01, 1.35888E-01, 1.36377E-01, 1.33780E-01, 
     X 1.28385E-01, 1.20887E-01, 1.11978E-01, 1.02354E-01, 9.27108E-02, 
     X 8.37418E-02, 7.61423E-02, 7.06032E-02, 6.74255E-02, 6.62092E-02, 
     X 6.64813E-02, 6.77689E-02, 6.95995E-02, 7.15004E-02, 7.29991E-02, 
     X 7.36229E-02, 7.29641E-02, 7.11015E-02, 6.83345E-02, 6.49638E-02, 
     X 6.12897E-02, 5.76125E-02, 5.42326E-02, 5.14504E-02, 4.95645E-02, 
     X 4.87078E-02, 4.87234E-02, 4.94254E-02, 5.06280E-02, 5.21454E-02, 
     X 5.37919E-02, 5.53818E-02, 5.67293E-02, 5.76709E-02, 5.82319E-02, 
     X 5.85334E-02, 5.86968E-02, 5.88439E-02, 5.90963E-02, 5.95756E-02, 
     X 6.04035E-02, 6.17016E-02, 6.35548E-02, 6.59664E-02, 6.89282E-02, 
     X 7.24326E-02, 7.64718E-02, 8.10380E-02, 8.61236E-02, 9.17211E-02, 
     X 9.78192E-02, 1.04353E-01, 1.11218E-01, 1.18308E-01, 1.25519E-01, 
     X 1.32745E-01, 1.39881E-01, 1.46821E-01, 1.53461E-01, 1.59687E-01/ 
      DATA O30401/                                                      
C    X 1.64187E-01, 1.69368E-01, 1.74549E-01, 1.79731E-01, 1.84912E-01, 
C      1.90094E-01, 1.95275E-01/                                        
C   THE VALUE AT 29400. HAS BEEN CHANGED TO PROVIDE A SMOOTH TRANSITION 
C    X 1.90094E-01, 1.85275E-01/                                        
     X 1.65365E-01, 1.70353E-01, 1.74507E-01, 1.77686E-01, 1.79748E-01, 
     X 1.80549E-01, 1.79948E-01/                                        
C                                                                       
C                                                                       
C    FOLLOWING DATA ARE FROM BASS JUNE 1985                             
C                                                                       
      DATA C00001 /                                                     
     X 1.81094E-01, 1.57760E-01, 1.37336E-01, 1.19475E-01, 1.17191E-01, 
     X 1.14331E-01, 1.15984E-01, 1.10412E-01, 1.12660E-01, 1.16014E-01, 
     X 1.15060E-01, 1.12041E-01, 1.11611E-01, 1.00378E-01, 9.54850E-02, 
     X 9.87528E-02, 9.46153E-02, 9.53093E-02, 9.72653E-02, 9.66468E-02, 
     X 9.39750E-02, 1.03552E-01, 1.01361E-01, 1.04315E-01, 1.12842E-01, 
     X 1.02800E-01, 1.09576E-01, 1.05577E-01, 1.17334E-01, 1.25763E-01, 
     X 1.27597E-01, 1.34267E-01, 1.44799E-01, 1.57366E-01, 1.67369E-01, 
     X 1.81778E-01, 1.89207E-01, 2.01376E-01, 2.10310E-01, 2.21721E-01, 
     X 2.43162E-01, 2.55542E-01, 2.75312E-01, 2.88576E-01, 3.02505E-01, 
     X 3.15141E-01, 3.28908E-01, 3.49000E-01, 3.56620E-01, 3.59852E-01, 
     X 3.57517E-01, 3.12924E-01, 2.63610E-01, 2.50854E-01, 2.25642E-01, 
     X 2.15954E-01, 2.12099E-01, 2.13039E-01, 2.12286E-01, 2.17214E-01, 
     X 2.28784E-01, 2.28276E-01, 2.34677E-01, 2.30730E-01, 2.16107E-01, 
     X 1.99471E-01, 1.85629E-01, 1.72730E-01, 1.56229E-01, 1.38156E-01, 
     X 1.37641E-01, 1.33169E-01, 1.32759E-01, 1.30102E-01, 1.35396E-01, 
     X 1.37976E-01, 1.41571E-01, 1.46448E-01, 1.44508E-01, 1.47612E-01/ 
      DATA C00081 /                                                     
     X 1.47424E-01, 1.48173E-01, 1.52936E-01, 1.58908E-01, 1.58808E-01, 
     X 1.59860E-01, 1.73936E-01, 1.84109E-01, 1.95143E-01, 2.08267E-01, 
     X 2.19256E-01, 2.31653E-01, 2.46400E-01, 2.60437E-01, 2.70792E-01, 
     X 2.79749E-01, 2.91068E-01, 2.98080E-01, 3.10421E-01, 3.24540E-01, 
     X 3.39003E-01, 3.58322E-01, 3.81520E-01, 4.02798E-01, 4.35972E-01, 
     X 4.56220E-01, 4.79037E-01, 5.02597E-01, 5.24648E-01, 5.33964E-01, 
     X 5.39211E-01, 5.43613E-01, 5.28793E-01, 4.94103E-01, 4.34481E-01, 
     X 3.76792E-01, 3.37161E-01, 3.15750E-01, 3.11042E-01, 3.08745E-01, 
     X 3.09195E-01, 3.05859E-01, 3.01443E-01, 2.88111E-01, 2.81303E-01, 
     X 2.75329E-01, 2.60812E-01, 2.59337E-01, 2.45576E-01, 2.40470E-01, 
     X 2.39705E-01, 2.45389E-01, 2.49801E-01, 2.53235E-01, 2.54387E-01, 
     X 2.64311E-01, 2.74146E-01, 2.89737E-01, 2.96673E-01, 3.07337E-01, 
     X 3.24380E-01, 3.42266E-01, 3.59522E-01, 3.78005E-01, 3.97178E-01, 
     X 4.23351E-01, 4.45925E-01, 4.63029E-01, 4.94843E-01, 5.19418E-01, 
     X 5.49928E-01, 5.69115E-01, 6.02396E-01, 6.43471E-01, 6.76401E-01, 
     X 7.14024E-01, 7.42425E-01, 7.60916E-01, 7.83319E-01, 7.98299E-01/ 
      DATA C00161 /                                                     
     X 7.76672E-01, 7.22769E-01, 6.45967E-01, 5.80850E-01, 5.76514E-01, 
     X 5.79380E-01, 5.90359E-01, 6.21721E-01, 6.37540E-01, 6.52572E-01, 
     X 6.63442E-01, 6.69026E-01, 6.69038E-01, 6.53319E-01, 6.21950E-01, 
     X 5.47619E-01, 4.58994E-01, 4.14888E-01, 3.97736E-01, 3.88775E-01, 
     X 3.87424E-01, 3.93567E-01, 4.03442E-01, 4.05217E-01, 4.12848E-01, 
     X 4.12246E-01, 4.16620E-01, 4.13195E-01, 4.08467E-01, 4.13104E-01, 
     X 4.24498E-01, 4.32002E-01, 4.46361E-01, 4.61131E-01, 4.77228E-01, 
     X 4.96519E-01, 5.16764E-01, 5.38966E-01, 5.54187E-01, 5.73748E-01, 
     X 6.07260E-01, 6.34358E-01, 6.60286E-01, 6.95533E-01, 7.37090E-01, 
     X 7.83894E-01, 8.19557E-01, 8.49244E-01, 8.91832E-01, 9.44885E-01, 
     X 9.86271E-01, 1.02262E+00, 1.07242E+00, 1.12162E+00, 1.18287E+00, 
     X 1.22402E+00, 1.24978E+00, 1.24392E+00, 1.19668E+00, 1.11562E+00, 
     X 1.03983E+00, 9.31884E-01, 8.35307E-01, 7.92620E-01, 7.81980E-01, 
     X 7.89623E-01, 8.05987E-01, 8.27344E-01, 8.57514E-01, 8.66302E-01, 
     X 8.72092E-01, 8.66840E-01, 8.40536E-01, 7.87360E-01, 7.35743E-01, 
     X 6.92039E-01, 6.64032E-01, 6.48360E-01, 6.46288E-01, 6.49505E-01/ 
      DATA C00241 /                                                     
     X 6.69937E-01, 6.81006E-01, 7.00969E-01, 7.19834E-01, 7.26964E-01, 
     X 7.50591E-01, 7.73600E-01, 8.00673E-01, 8.20347E-01, 8.37855E-01, 
     X 8.66780E-01, 9.04297E-01, 9.46300E-01, 9.69134E-01, 9.97928E-01, 
     X 1.06388E+00, 1.11032E+00, 1.15221E+00, 1.21324E+00, 1.24462E+00, 
     X 1.31978E+00, 1.35617E+00, 1.38792E+00, 1.39196E+00, 1.35161E+00, 
     X 1.29381E+00, 1.30295E+00, 1.32965E+00, 1.37024E+00, 1.44064E+00, 
     X 1.50484E+00, 1.57200E+00, 1.62097E+00, 1.67874E+00, 1.72676E+00, 
     X 1.73383E+00, 1.66091E+00, 1.54936E+00, 1.35454E+00, 1.20070E+00, 
     X 1.14609E+00, 1.13642E+00, 1.13784E+00, 1.14609E+00, 1.14531E+00, 
     X 1.16024E+00, 1.16891E+00, 1.16111E+00, 1.14192E+00, 1.09903E+00, 
     X 1.05745E+00, 1.02341E+00, 1.00121E+00, 1.00036E+00, 1.00576E+00, 
     X 1.02405E+00, 1.04379E+00, 1.07623E+00, 1.11347E+00, 1.17305E+00, 
     X 1.20016E+00, 1.22697E+00, 1.27479E+00, 1.32572E+00, 1.38690E+00, 
     X 1.43768E+00, 1.48379E+00, 1.55317E+00, 1.64020E+00, 1.71268E+00, 
     X 1.77183E+00, 1.85824E+00, 1.95131E+00, 2.04609E+00, 2.13151E+00, 
     X 2.17777E+00, 2.22832E+00, 2.26886E+00, 2.19775E+00, 2.05087E+00/ 
      DATA C00321 /                                                     
     X 1.96103E+00, 1.95554E+00, 1.98037E+00, 2.05440E+00, 2.11629E+00, 
     X 2.17893E+00, 2.24384E+00, 2.30464E+00, 2.32525E+00, 2.29945E+00, 
     X 2.21712E+00, 2.03430E+00, 1.82139E+00, 1.70354E+00, 1.64631E+00, 
     X 1.62164E+00, 1.61356E+00, 1.63900E+00, 1.66313E+00, 1.67409E+00, 
     X 1.69143E+00, 1.70181E+00, 1.69165E+00, 1.67699E+00, 1.67879E+00, 
     X 1.67312E+00, 1.68133E+00, 1.70002E+00, 1.72500E+00, 1.76308E+00, 
     X 1.80634E+00, 1.87548E+00, 1.94924E+00, 1.99812E+00, 2.05333E+00, 
     X 2.14035E+00, 2.21847E+00, 2.27412E+00, 2.29752E+00, 2.30750E+00, 
     X 2.36165E+00, 2.44394E+00, 2.52782E+00, 2.61343E+00, 2.71640E+00, 
     X 2.81613E+00, 2.93679E+00, 3.01577E+00, 3.15995E+00, 3.15931E+00, 
     X 2.96658E+00, 2.73295E+00, 2.67480E+00, 2.66652E+00, 2.69393E+00, 
     X 2.75102E+00, 2.86503E+00, 2.99163E+00, 2.99576E+00, 3.02603E+00, 
     X 2.98415E+00, 2.79309E+00, 2.65337E+00, 2.50962E+00, 2.43207E+00, 
     X 2.34812E+00, 2.34872E+00, 2.35186E+00, 2.39477E+00, 2.42629E+00, 
     X 2.48068E+00, 2.55087E+00, 2.55952E+00, 2.56497E+00, 2.64323E+00, 
     X 2.67961E+00, 2.66263E+00, 2.70243E+00, 2.74911E+00, 2.81786E+00/ 
      DATA C00401 /                                                     
     X 2.88684E+00, 2.97790E+00, 3.04305E+00, 3.13053E+00, 3.23857E+00, 
     X 3.35582E+00, 3.40654E+00, 3.38117E+00, 3.36296E+00, 3.39480E+00, 
     X 3.49066E+00, 3.60832E+00, 3.71817E+00, 3.83924E+00, 3.96355E+00, 
     X 4.03656E+00, 4.00518E+00, 3.90389E+00, 3.74790E+00, 3.61385E+00, 
     X 3.57066E+00, 3.59438E+00, 3.66182E+00, 3.71176E+00, 3.75255E+00, 
     X 3.79101E+00, 3.85278E+00, 3.85027E+00, 3.81112E+00, 3.72553E+00, 
     X 3.61017E+00, 3.54384E+00, 3.52406E+00, 3.54097E+00, 3.59375E+00, 
     X 3.66312E+00, 3.72632E+00, 3.76825E+00, 3.86798E+00, 3.92916E+00, 
     X 3.95610E+00, 4.00120E+00, 4.05865E+00, 4.11981E+00, 4.14634E+00, 
     X 4.19109E+00, 4.20317E+00, 4.25754E+00, 4.35131E+00, 4.48573E+00, 
     X 4.58716E+00, 4.67462E+00, 4.78228E+00, 4.91196E+00, 5.01871E+00, 
     X 5.10663E+00, 5.17780E+00, 5.21393E+00, 5.18144E+00, 5.04379E+00, 
     X 4.86504E+00, 4.78569E+00, 4.72717E+00, 4.69132E+00, 4.65797E+00, 
     X 4.60305E+00, 4.59798E+00, 4.65300E+00, 4.69707E+00, 4.74790E+00, 
     X 4.82581E+00, 4.80953E+00, 4.80517E+00, 4.82685E+00, 4.82321E+00, 
     X 4.84806E+00, 4.88591E+00, 4.91759E+00, 4.98074E+00, 5.07071E+00/ 
      DATA C00481 /                                                     
     X 5.18733E+00, 5.30567E+00, 5.38670E+00, 5.43942E+00, 5.51797E+00, 
     X 5.62652E+00, 5.71228E+00, 5.82347E+00, 5.91434E+00, 6.00171E+00, 
     X 6.06977E+00, 6.13040E+00, 6.21990E+00, 6.29980E+00, 6.37206E+00, 
     X 6.48233E+00, 6.53068E+00, 6.53275E+00, 6.56858E+00, 6.54577E+00, 
     X 6.50472E+00, 6.41504E+00, 6.33853E+00, 6.31184E+00, 6.21253E+00, 
     X 6.22034E+00, 6.26918E+00, 6.28982E+00, 6.29461E+00, 6.35418E+00, 
     X 6.40956E+00, 6.38020E+00, 6.39784E+00, 6.45383E+00, 6.50134E+00, 
     X 6.56808E+00, 6.58850E+00, 6.58882E+00, 6.65097E+00, 6.75259E+00, 
     X 6.83256E+00, 6.92593E+00, 6.98083E+00, 7.03632E+00, 7.11147E+00, 
     X 7.15622E+00, 7.21106E+00, 7.27319E+00, 7.33382E+00, 7.38601E+00, 
     X 7.48971E+00, 7.61459E+00, 7.70134E+00, 7.76194E+00, 7.85534E+00, 
     X 7.99519E+00, 8.12227E+00, 8.25461E+00, 8.34670E+00, 8.42733E+00, 
     X 8.51806E+00, 8.57638E+00, 8.56481E+00, 8.55461E+00, 8.55593E+00, 
     X 8.58756E+00, 8.50070E+00, 8.54400E+00, 8.57575E+00, 8.62083E+00, 
     X 8.60684E+00, 8.67824E+00, 8.72069E+00, 8.79127E+00, 8.85479E+00, 
     X 8.86770E+00, 8.90574E+00, 8.91531E+00, 8.94800E+00, 9.00167E+00/ 
      DATA C00561 /                                                     
     X 9.14051E+00, 9.25421E+00, 9.39694E+00, 9.50896E+00, 9.53190E+00, 
     X 9.55977E+00, 9.53482E+00, 9.49662E+00, 9.53359E+00, 9.54007E+00, 
     X 9.49809E+00, 9.49373E+00, 9.53282E+00, 9.63757E+00, 9.67855E+00, 
     X 9.67633E+00, 9.67045E+00, 9.79481E+00, 9.93420E+00, 1.00234E+01, 
     X 1.01372E+01, 1.02577E+01, 1.05056E+01, 1.07873E+01, 1.09967E+01, 
     X 1.10873E+01, 1.11624E+01, 1.13006E+01, 1.14875E+01, 1.16106E+01, 
     X 1.16744E+01, 1.17582E+01, 1.17709E+01, 1.18537E+01, 1.19623E+01, 
     X 1.19763E+01, 1.19879E+01, 1.20384E+01, 1.20763E+01, 1.20826E+01, 
     X 1.20449E+01, 1.19747E+01, 1.20227E+01, 1.21805E+01, 1.23134E+01, 
     X 1.24042E+01, 1.25614E+01, 1.26828E+01, 1.26645E+01, 1.26963E+01, 
     X 1.28226E+01, 1.28720E+01, 1.28981E+01, 1.29462E+01, 1.29363E+01, 
     X 1.29199E+01, 1.29797E+01, 1.28860E+01, 1.29126E+01, 1.30205E+01, 
     X 1.31327E+01, 1.31722E+01, 1.31901E+01, 1.33189E+01, 1.34833E+01, 
     X 1.36228E+01, 1.37474E+01, 1.38548E+01, 1.39450E+01, 1.40926E+01, 
     X 1.43099E+01, 1.44836E+01, 1.46257E+01, 1.47755E+01, 1.49163E+01, 
     X 1.51038E+01, 1.53308E+01, 1.54194E+01, 1.54852E+01, 1.55968E+01/ 
      DATA C00641 /                                                     
     X 1.57025E+01, 1.58667E+01, 1.60365E+01, 1.61427E+01, 1.62967E+01, 
     X 1.64735E+01, 1.66123E+01, 1.67268E+01, 1.67673E+01, 1.67825E+01, 
     X 1.68898E+01, 1.68178E+01, 1.68216E+01, 1.68574E+01, 1.68799E+01, 
     X 1.70317E+01, 1.70767E+01, 1.71508E+01, 1.72965E+01, 1.73421E+01, 
     X 1.73937E+01, 1.74420E+01, 1.74535E+01, 1.75110E+01, 1.75497E+01, 
     X 1.75149E+01, 1.75955E+01, 1.78260E+01, 1.78271E+01, 1.79750E+01, 
     X 1.80600E+01, 1.81597E+01, 1.83454E+01, 1.85243E+01, 1.87382E+01, 
     X 1.88904E+01, 1.90395E+01, 1.92759E+01, 1.95398E+01, 1.97712E+01, 
     X 1.98487E+01, 1.99522E+01, 2.02363E+01, 2.03271E+01, 2.07090E+01, 
     X 2.09195E+01, 2.10974E+01, 2.11702E+01, 2.12964E+01, 2.14339E+01, 
     X 2.15764E+01, 2.17351E+01, 2.18486E+01, 2.19700E+01, 2.21663E+01, 
     X 2.24244E+01, 2.24813E+01, 2.25248E+01, 2.26357E+01, 2.26457E+01, 
     X 2.27249E+01, 2.27172E+01, 2.27123E+01, 2.26859E+01, 2.27216E+01, 
     X 2.29306E+01, 2.30711E+01, 2.31374E+01, 2.31815E+01, 2.33423E+01, 
     X 2.33810E+01, 2.36430E+01, 2.36807E+01, 2.36676E+01, 2.38607E+01, 
     X 2.41559E+01, 2.43413E+01, 2.44401E+01, 2.45968E+01, 2.47927E+01/ 
      DATA C00721 /                                                     
     X 2.50743E+01, 2.53667E+01, 2.55749E+01, 2.57357E+01, 2.58927E+01, 
     X 2.61523E+01, 2.64110E+01, 2.66650E+01, 2.68829E+01, 2.70635E+01, 
     X 2.72797E+01, 2.75064E+01, 2.77229E+01, 2.80341E+01, 2.82003E+01, 
     X 2.83346E+01, 2.83909E+01, 2.86212E+01, 2.88006E+01, 2.89577E+01, 
     X 2.90965E+01, 2.91834E+01, 2.93224E+01, 2.94094E+01, 2.94848E+01, 
     X 2.96584E+01, 2.96749E+01, 2.97760E+01, 2.99163E+01, 3.00238E+01, 
     X 3.01290E+01, 3.02307E+01, 3.03663E+01, 3.05897E+01, 3.07937E+01, 
     X 3.10403E+01, 3.11778E+01, 3.13271E+01, 3.15799E+01, 3.18435E+01, 
     X 3.21614E+01, 3.25097E+01, 3.27701E+01, 3.29600E+01, 3.32583E+01, 
     X 3.36348E+01, 3.40282E+01, 3.41751E+01, 3.44128E+01, 3.46199E+01, 
     X 3.49363E+01, 3.52087E+01, 3.54056E+01, 3.55596E+01, 3.56694E+01, 
     X 3.58104E+01, 3.60276E+01, 3.62818E+01, 3.63505E+01, 3.66069E+01, 
     X 3.67544E+01, 3.70664E+01, 3.72525E+01, 3.73491E+01, 3.76006E+01, 
     X 3.77102E+01, 3.78970E+01, 3.81254E+01, 3.82728E+01, 3.81720E+01, 
     X 3.82781E+01, 3.84982E+01, 3.87202E+01, 3.89958E+01, 3.94148E+01, 
     X 3.98434E+01, 3.98952E+01, 4.01573E+01, 4.06014E+01, 4.09651E+01/ 
      DATA C00801 /                                                     
     X 4.12821E+01, 4.16849E+01, 4.19899E+01, 4.22719E+01, 4.27736E+01, 
     X 4.32254E+01, 4.33883E+01, 4.39831E+01, 4.39414E+01, 4.42613E+01, 
     X 4.46503E+01, 4.49027E+01, 4.50384E+01, 4.52929E+01, 4.57269E+01, 
     X 4.56433E+01, 4.57350E+01, 4.60128E+01, 4.60487E+01, 4.61183E+01, 
     X 4.64397E+01, 4.68211E+01, 4.70706E+01, 4.72821E+01, 4.74972E+01, 
     X 4.78253E+01, 4.81615E+01, 4.84480E+01, 4.85703E+01, 4.87397E+01, 
     X 4.90015E+01, 4.93673E+01, 4.97291E+01, 4.99836E+01, 5.02975E+01, 
     X 5.05572E+01, 5.08226E+01, 5.13433E+01, 5.17112E+01, 5.19703E+01, 
     X 5.23128E+01, 5.27305E+01, 5.30599E+01, 5.34555E+01, 5.39625E+01, 
     X 5.43627E+01, 5.45446E+01, 5.49263E+01, 5.53511E+01, 5.57270E+01, 
     X 5.60904E+01, 5.63875E+01, 5.68475E+01, 5.73172E+01, 5.81134E+01, 
     X 5.86399E+01, 5.90384E+01, 5.91417E+01, 5.90883E+01, 5.93610E+01, 
     X 5.95794E+01, 5.99600E+01, 5.98493E+01, 5.99441E+01, 6.02748E+01, 
     X 6.04778E+01, 6.05233E+01, 6.07194E+01, 6.11589E+01, 6.13324E+01, 
     X 6.17685E+01, 6.23166E+01, 6.31055E+01, 6.38211E+01, 6.42320E+01, 
     X 6.45195E+01, 6.51125E+01, 6.56765E+01, 6.59286E+01, 6.62716E+01/ 
      DATA C00881 /                                                     
     X 6.65693E+01, 6.68906E+01, 6.72246E+01, 6.75177E+01, 6.78476E+01, 
     X 6.82599E+01, 6.84400E+01, 6.89072E+01, 6.95720E+01, 7.01410E+01, 
     X 7.05519E+01, 7.09367E+01, 7.13975E+01, 7.22128E+01, 7.28222E+01, 
     X 7.33808E+01, 7.38828E+01, 7.44496E+01, 7.49983E+01, 7.54178E+01, 
     X 7.60554E+01, 7.62484E+01, 7.67892E+01, 7.71262E+01, 7.76235E+01, 
     X 7.81413E+01, 7.85694E+01, 7.91248E+01, 7.94715E+01, 7.96200E+01, 
     X 8.00270E+01, 8.03783E+01, 8.07100E+01, 8.11929E+01, 8.17375E+01, 
     X 8.18410E+01, 8.23341E+01, 8.26754E+01, 8.30893E+01, 8.34232E+01, 
     X 8.35533E+01, 8.36017E+01, 8.38589E+01, 8.43366E+01, 8.47593E+01, 
     X 8.51614E+01, 8.55271E+01, 8.58979E+01, 8.64892E+01, 8.74367E+01, 
     X 8.82440E+01, 8.89105E+01, 8.90980E+01, 8.97266E+01, 9.04886E+01, 
     X 9.12709E+01, 9.21243E+01, 9.26673E+01, 9.31331E+01, 9.38190E+01, 
     X 9.44877E+01, 9.50636E+01, 9.57445E+01, 9.65211E+01, 9.68623E+01, 
     X 9.75356E+01, 9.81991E+01, 9.88881E+01, 9.94554E+01, 9.99292E+01, 
     X 1.00357E+02, 1.00670E+02, 1.01227E+02, 1.01529E+02, 1.01889E+02, 
     X 1.02033E+02, 1.02254E+02, 1.02731E+02, 1.02914E+02, 1.03120E+02/ 
      DATA C00961 /                                                     
     X 1.03674E+02, 1.03768E+02, 1.04146E+02, 1.04850E+02, 1.05525E+02, 
     X 1.06263E+02, 1.06653E+02, 1.07084E+02, 1.07461E+02, 1.08052E+02, 
     X 1.08793E+02, 1.09395E+02, 1.09811E+02, 1.10079E+02, 1.10656E+02, 
     X 1.11575E+02, 1.12544E+02, 1.13453E+02, 1.14440E+02, 1.15292E+02, 
     X 1.15869E+02, 1.16925E+02, 1.17854E+02, 1.18723E+02, 1.19574E+02, 
     X 1.19940E+02, 1.21108E+02, 1.21807E+02, 1.22490E+02, 1.23278E+02, 
     X 1.24094E+02, 1.24816E+02, 1.25469E+02, 1.26217E+02, 1.26878E+02, 
     X 1.27536E+02, 1.28168E+02, 1.28682E+02, 1.29076E+02, 1.30171E+02, 
     X 1.30667E+02, 1.31242E+02, 1.31665E+02, 1.31961E+02, 1.32347E+02, 
     X 1.32805E+02, 1.33152E+02, 1.33869E+02, 1.34261E+02, 1.34498E+02, 
     X 1.35028E+02, 1.36049E+02, 1.36577E+02, 1.37491E+02, 1.38078E+02, 
     X 1.38389E+02, 1.38819E+02, 1.39653E+02, 1.39770E+02, 1.40812E+02, 
     X 1.40926E+02, 1.41267E+02, 1.41872E+02, 1.42233E+02, 1.43447E+02, 
     X 1.44641E+02, 1.45500E+02, 1.45996E+02, 1.47040E+02, 1.48767E+02, 
     X 1.48785E+02, 1.49525E+02, 1.50266E+02, 1.50814E+02, 1.51443E+02, 
     X 1.52272E+02, 1.52846E+02, 1.54000E+02, 1.54629E+02, 1.54907E+02/ 
      DATA C01041 /                                                     
     X 1.55527E+02, 1.56642E+02, 1.57436E+02, 1.59036E+02, 1.59336E+02, 
     X 1.59661E+02, 1.60287E+02, 1.61202E+02, 1.62410E+02, 1.63040E+02, 
     X 1.62872E+02, 1.63248E+02, 1.63776E+02, 1.64313E+02, 1.65782E+02, 
     X 1.65692E+02, 1.66049E+02, 1.66701E+02, 1.67786E+02, 1.69150E+02, 
     X 1.69996E+02, 1.71634E+02, 1.71137E+02, 1.71372E+02, 1.72525E+02, 
     X 1.73816E+02, 1.75219E+02, 1.76091E+02, 1.78260E+02, 1.79299E+02, 
     X 1.79904E+02, 1.81718E+02, 1.83807E+02, 1.85488E+02, 1.85929E+02, 
     X 1.86787E+02, 1.88282E+02, 1.89546E+02, 1.91489E+02, 1.92646E+02, 
     X 1.93399E+02, 1.93838E+02, 1.94406E+02, 1.95829E+02, 1.96745E+02, 
     X 1.96978E+02, 1.97243E+02, 1.97636E+02, 1.98025E+02, 1.98227E+02, 
     X 1.99552E+02, 2.00304E+02, 2.01031E+02, 2.01788E+02, 2.02432E+02, 
     X 2.03817E+02, 2.04866E+02, 2.05561E+02, 2.06180E+02, 2.07024E+02, 
     X 2.08303E+02, 2.09426E+02, 2.10575E+02, 2.11637E+02, 2.12559E+02, 
     X 2.13361E+02, 2.14191E+02, 2.15264E+02, 2.16366E+02, 2.17316E+02, 
     X 2.17717E+02, 2.17154E+02, 2.19172E+02, 2.20346E+02, 2.20849E+02, 
     X 2.21539E+02, 2.22810E+02, 2.22740E+02, 2.22824E+02, 2.23285E+02/ 
      DATA C01121 /                                                     
     X 2.23696E+02, 2.23864E+02, 2.23968E+02, 2.23544E+02, 2.24804E+02, 
     X 2.25953E+02, 2.26753E+02, 2.27732E+02, 2.29505E+02, 2.30108E+02, 
     X 2.31232E+02, 2.32552E+02, 2.33979E+02, 2.36677E+02, 2.38481E+02, 
     X 2.41797E+02, 2.44025E+02, 2.45113E+02, 2.47373E+02, 2.47258E+02, 
     X 2.48617E+02, 2.49790E+02, 2.50562E+02, 2.51198E+02, 2.51289E+02, 
     X 2.52509E+02, 2.54136E+02, 2.55335E+02, 2.55808E+02, 2.56567E+02, 
     X 2.57977E+02, 2.58987E+02, 2.59622E+02, 2.60170E+02, 2.61127E+02, 
     X 2.60655E+02, 2.62129E+02, 2.64020E+02, 2.65659E+02, 2.67086E+02, 
     X 2.67615E+02, 2.69800E+02, 2.71452E+02, 2.73314E+02, 2.76972E+02, 
     X 2.78005E+02, 2.79815E+02, 2.81709E+02, 2.84043E+02, 2.87070E+02, 
     X 2.88842E+02, 2.90555E+02, 2.92401E+02, 2.94314E+02, 2.96074E+02, 
     X 2.97103E+02, 2.98037E+02, 2.98113E+02, 2.97705E+02, 2.97350E+02, 
     X 2.97329E+02, 2.97016E+02, 2.96752E+02, 2.96599E+02, 2.96637E+02, 
     X 2.97057E+02, 2.97585E+02, 2.98179E+02, 2.98997E+02, 3.00012E+02, 
     X 3.00806E+02, 3.00908E+02, 3.02369E+02, 3.04063E+02, 3.05325E+02, 
     X 3.06737E+02, 3.08066E+02, 3.09694E+02, 3.11530E+02, 3.13132E+02/ 
      DATA C01201 /                                                     
     X 3.13296E+02, 3.15513E+02, 3.16887E+02, 3.17682E+02, 3.18296E+02, 
     X 3.18654E+02, 3.18912E+02, 3.19236E+02, 3.19626E+02, 3.20020E+02, 
     X 3.20186E+02, 3.20709E+02, 3.21628E+02, 3.22625E+02, 3.23504E+02, 
     X 3.25479E+02, 3.26825E+02, 3.28146E+02, 3.29404E+02, 3.30512E+02, 
     X 3.32634E+02, 3.34422E+02, 3.35602E+02, 3.36833E+02, 3.39372E+02, 
     X 3.43446E+02, 3.46374E+02, 3.48719E+02, 3.50881E+02, 3.53160E+02, 
     X 3.54890E+02, 3.57162E+02, 3.59284E+02, 3.60876E+02, 3.62295E+02, 
     X 3.63987E+02, 3.64835E+02, 3.65257E+02, 3.65738E+02, 3.65904E+02, 
     X 3.65976E+02, 3.66460E+02, 3.67087E+02, 3.67377E+02, 3.69079E+02, 
     X 3.70694E+02, 3.70940E+02, 3.70557E+02, 3.72693E+02, 3.73852E+02, 
     X 3.75679E+02, 3.77863E+02, 3.79964E+02, 3.81368E+02, 3.82716E+02, 
     X 3.85556E+02, 3.89072E+02, 3.91796E+02, 3.92766E+02, 3.96551E+02, 
     X 3.97833E+02, 3.97285E+02, 4.01929E+02, 4.02158E+02, 4.04553E+02, 
     X 4.06451E+02, 4.06236E+02, 4.08135E+02, 4.07797E+02, 4.08415E+02, 
     X 4.10111E+02, 4.11781E+02, 4.12735E+02, 4.11547E+02, 4.11606E+02, 
     X 4.13548E+02, 4.12557E+02, 4.12923E+02, 4.12866E+02, 4.13009E+02/ 
      DATA C01281 /                                                     
     X 4.14447E+02, 4.16032E+02, 4.17032E+02, 4.19064E+02, 4.22458E+02, 
     X 4.26021E+02, 4.25192E+02, 4.25684E+02, 4.27536E+02, 4.29972E+02, 
     X 4.31994E+02, 4.36037E+02, 4.39132E+02, 4.40363E+02, 4.40716E+02, 
     X 4.40342E+02, 4.42063E+02, 4.44408E+02, 4.45454E+02, 4.47835E+02, 
     X 4.48256E+02, 4.48831E+02, 4.50257E+02, 4.51427E+02, 4.52373E+02, 
     X 4.53899E+02, 4.55496E+02, 4.56311E+02, 4.57314E+02, 4.59922E+02, 
     X 4.61048E+02, 4.59840E+02, 4.62144E+02, 4.63152E+02, 4.64565E+02, 
     X 4.66715E+02, 4.69380E+02, 4.70751E+02, 4.72012E+02, 4.73482E+02, 
     X 4.75524E+02, 4.79307E+02, 4.82035E+02, 4.84423E+02, 4.86712E+02, 
     X 4.88754E+02, 4.90102E+02, 4.92047E+02, 4.94150E+02, 4.95375E+02, 
     X 4.95828E+02, 4.97555E+02, 4.98559E+02, 4.97618E+02, 4.99265E+02, 
     X 4.99979E+02, 5.00681E+02, 5.01386E+02, 5.00868E+02, 5.01935E+02, 
     X 5.03151E+02, 5.04329E+02, 5.05546E+02, 5.08259E+02, 5.09222E+02, 
     X 5.09818E+02, 5.11397E+02, 5.12391E+02, 5.13326E+02, 5.14329E+02, 
     X 5.15443E+02, 5.16533E+02, 5.21417E+02, 5.25071E+02, 5.26581E+02, 
     X 5.27762E+02, 5.29274E+02, 5.31704E+02, 5.34310E+02, 5.35727E+02/ 
      DATA C01361 /                                                     
     X 5.36838E+02, 5.37082E+02, 5.36733E+02, 5.36170E+02, 5.36063E+02, 
     X 5.36451E+02, 5.37870E+02, 5.40475E+02, 5.42268E+02, 5.41972E+02, 
     X 5.42532E+02, 5.44764E+02, 5.46844E+02, 5.47525E+02, 5.49150E+02, 
     X 5.52049E+02, 5.55423E+02, 5.56259E+02, 5.57424E+02, 5.59189E+02, 
     X 5.61167E+02, 5.64512E+02, 5.66753E+02, 5.68183E+02, 5.69628E+02, 
     X 5.73474E+02, 5.76192E+02, 5.78058E+02, 5.79588E+02, 5.81619E+02, 
     X 5.83530E+02, 5.84852E+02, 5.85326E+02, 5.88130E+02, 5.90570E+02, 
     X 5.91785E+02, 5.91371E+02, 5.90931E+02, 5.90942E+02, 5.91168E+02, 
     X 5.91291E+02, 5.89791E+02, 5.91146E+02, 5.90804E+02, 5.87847E+02, 
     X 5.89067E+02, 5.91027E+02, 5.90951E+02, 5.89227E+02, 5.93389E+02, 
     X 5.92921E+02, 5.92739E+02, 5.94544E+02, 5.98941E+02, 6.02302E+02, 
     X 6.03908E+02, 6.04265E+02, 6.06737E+02, 6.08560E+02, 6.11272E+02, 
     X 6.14992E+02, 6.18595E+02, 6.20930E+02, 6.22107E+02, 6.22957E+02, 
     X 6.26710E+02, 6.28657E+02, 6.30132E+02, 6.31543E+02, 6.33043E+02, 
     X 6.36932E+02, 6.38248E+02, 6.37126E+02, 6.41648E+02, 6.48274E+02, 
     X 6.52638E+02, 6.53922E+02, 6.56647E+02, 6.59351E+02, 6.60525E+02/ 
      DATA C01441 /                                                     
     X 6.60130E+02, 6.61375E+02, 6.62660E+02, 6.63976E+02, 6.65181E+02, 
     X 6.64820E+02, 6.64458E+02, 6.64927E+02, 6.66555E+02, 6.66759E+02, 
     X 6.68218E+02, 6.70323E+02, 6.72703E+02, 6.76085E+02, 6.79180E+02, 
     X 6.80850E+02, 6.80017E+02, 6.79928E+02, 6.80886E+02, 6.82038E+02, 
     X 6.82271E+02, 6.84057E+02, 6.85309E+02, 6.86816E+02, 6.90180E+02, 
     X 6.93205E+02, 6.95870E+02, 6.98794E+02, 7.03776E+02, 7.04010E+02, 
     X 7.05041E+02, 7.07254E+02, 7.07432E+02, 7.10736E+02, 7.13791E+02, 
     X 7.15542E+02, 7.16468E+02, 7.17412E+02, 7.17783E+02, 7.17340E+02, 
     X 7.18184E+02, 7.18716E+02, 7.18809E+02, 7.18282E+02, 7.20317E+02, 
     X 7.18568E+02, 7.16274E+02, 7.19119E+02, 7.20852E+02, 7.21727E+02, 
     X 7.22607E+02, 7.26369E+02, 7.26412E+02, 7.27101E+02, 7.29404E+02, 
     X 7.30786E+02, 7.30910E+02, 7.30656E+02, 7.30566E+02, 7.33408E+02, 
     X 7.37064E+02, 7.39178E+02, 7.36713E+02, 7.37365E+02, 7.40861E+02, 
     X 7.45281E+02, 7.46178E+02, 7.46991E+02, 7.48035E+02, 7.49777E+02, 
     X 7.54665E+02, 7.56585E+02, 7.57408E+02, 7.58131E+02, 7.58155E+02, 
     X 7.60838E+02, 7.64792E+02, 7.68161E+02, 7.69263E+02, 7.73166E+02/ 
      DATA C01521 /                                                     
     X 7.79006E+02, 7.82037E+02, 7.83109E+02, 7.84674E+02, 7.87444E+02, 
     X 7.89510E+02, 7.90130E+02, 7.91364E+02, 7.95225E+02, 8.03599E+02, 
     X 8.06340E+02, 8.05105E+02, 8.05120E+02, 8.08515E+02, 8.10907E+02, 
     X 8.11388E+02, 8.13432E+02, 8.12579E+02, 8.10564E+02, 8.08719E+02, 
     X 8.07682E+02, 8.05009E+02, 8.01754E+02, 8.01013E+02, 7.99926E+02, 
     X 7.99067E+02, 7.98369E+02, 7.94090E+02, 7.92883E+02, 7.94244E+02, 
     X 7.98220E+02, 7.98201E+02, 7.98332E+02, 7.99289E+02, 8.02355E+02, 
     X 8.03621E+02, 8.05302E+02, 8.08368E+02, 8.09983E+02, 8.11529E+02, 
     X 8.13068E+02, 8.14717E+02, 8.16441E+02, 8.19241E+02, 8.22944E+02, 
     X 8.23768E+02, 8.25030E+02, 8.26103E+02, 8.26374E+02, 8.28331E+02, 
     X 8.32620E+02, 8.38618E+02, 8.43666E+02, 8.45212E+02, 8.46324E+02, 
     X 8.48536E+02, 8.50192E+02, 8.53083E+02, 8.56653E+02, 8.59614E+02, 
     X 8.62000E+02, 8.64593E+02, 8.67678E+02, 8.70908E+02, 8.73408E+02, 
     X 8.74779E+02, 8.74005E+02, 8.76718E+02, 8.80445E+02, 8.84365E+02, 
     X 8.83806E+02, 8.84292E+02, 8.85539E+02, 8.87474E+02, 8.84905E+02, 
     X 8.84039E+02, 8.85105E+02, 8.83733E+02, 8.82224E+02, 8.79865E+02/ 
      DATA C01601 /                                                     
     X 8.75663E+02, 8.75575E+02, 8.73144E+02, 8.68602E+02, 8.70278E+02, 
     X 8.69659E+02, 8.68701E+02, 8.69250E+02, 8.71057E+02, 8.72860E+02, 
     X 8.74361E+02, 8.74458E+02, 8.77576E+02, 8.81613E+02, 8.84358E+02, 
     X 8.87440E+02, 8.91549E+02, 8.96568E+02, 8.99836E+02, 9.02880E+02, 
     X 9.05428E+02, 9.06891E+02, 9.07349E+02, 9.10151E+02, 9.15917E+02, 
     X 9.16197E+02, 9.18571E+02, 9.21219E+02, 9.20292E+02, 9.21949E+02, 
     X 9.24509E+02, 9.27454E+02, 9.29474E+02, 9.31348E+02, 9.32818E+02, 
     X 9.32658E+02, 9.36280E+02, 9.39512E+02, 9.39667E+02, 9.44078E+02, 
     X 9.47196E+02, 9.48291E+02, 9.46150E+02, 9.46918E+02, 9.49093E+02, 
     X 9.51372E+02, 9.53109E+02, 9.56308E+02, 9.61335E+02, 9.58214E+02, 
     X 9.56188E+02, 9.55660E+02, 9.58633E+02, 9.57541E+02, 9.54879E+02, 
     X 9.51663E+02, 9.52839E+02, 9.52055E+02, 9.49253E+02, 9.50187E+02, 
     X 9.50323E+02, 9.50937E+02, 9.54362E+02, 9.55855E+02, 9.56350E+02, 
     X 9.55908E+02, 9.57963E+02, 9.61866E+02, 9.66948E+02, 9.69786E+02, 
     X 9.74302E+02, 9.79061E+02, 9.82465E+02, 9.86019E+02, 9.89930E+02, 
     X 9.94294E+02, 9.97011E+02, 9.98207E+02, 9.98607E+02, 1.00175E+03/ 
      DATA C01681 /                                                     
     X 1.00275E+03, 1.00284E+03, 1.00294E+03, 1.00485E+03, 1.00593E+03, 
     X 1.00524E+03, 1.00415E+03, 1.00335E+03, 1.00278E+03, 1.00185E+03, 
     X 9.99982E+02, 9.98177E+02, 9.97959E+02, 9.99161E+02, 9.98810E+02, 
     X 9.95415E+02, 9.94342E+02, 9.92998E+02, 9.91340E+02, 9.90900E+02, 
     X 9.90407E+02, 9.89232E+02, 9.85447E+02, 9.86312E+02, 9.87461E+02, 
     X 9.86090E+02, 9.86670E+02, 9.85534E+02, 9.81877E+02, 9.84946E+02, 
     X 9.86392E+02, 9.86709E+02, 9.88086E+02, 9.90269E+02, 9.92566E+02, 
     X 9.94029E+02, 9.95795E+02, 9.97788E+02, 1.00005E+03, 1.00287E+03, 
     X 1.00566E+03, 1.00833E+03, 1.00982E+03, 1.01348E+03, 1.01862E+03, 
     X 1.02322E+03, 1.02786E+03, 1.03179E+03, 1.03339E+03, 1.03833E+03, 
     X 1.04317E+03, 1.04598E+03, 1.04753E+03, 1.04981E+03, 1.05321E+03, 
     X 1.05492E+03, 1.05721E+03, 1.05978E+03, 1.06033E+03, 1.06107E+03, 
     X 1.06155E+03, 1.06035E+03, 1.05838E+03, 1.05649E+03, 1.05553E+03, 
     X 1.05498E+03, 1.05387E+03, 1.05171E+03, 1.04877E+03, 1.04725E+03, 
     X 1.04748E+03, 1.04733E+03, 1.04704E+03, 1.04643E+03, 1.04411E+03, 
     X 1.04435E+03, 1.04520E+03, 1.04233E+03, 1.04047E+03, 1.03992E+03/ 
      DATA C01761 /                                                     
     X 1.04192E+03, 1.04171E+03, 1.04140E+03, 1.04197E+03, 1.04415E+03, 
     X 1.04548E+03, 1.04533E+03, 1.04616E+03, 1.04705E+03, 1.04800E+03, 
     X 1.05025E+03, 1.05219E+03, 1.05412E+03, 1.05808E+03, 1.06062E+03, 
     X 1.06292E+03, 1.06780E+03, 1.07219E+03, 1.07610E+03, 1.07913E+03, 
     X 1.08405E+03, 1.08798E+03, 1.08835E+03, 1.09140E+03, 1.09447E+03, 
     X 1.09676E+03, 1.10015E+03, 1.10272E+03, 1.10410E+03, 1.10749E+03, 
     X 1.10991E+03, 1.11121E+03, 1.10981E+03, 1.10981E+03, 1.11063E+03, 
     X 1.10714E+03, 1.10500E+03, 1.10357E+03, 1.10093E+03, 1.09898E+03, 
     X 1.09679E+03, 1.09188E+03, 1.09088E+03, 1.09040E+03, 1.08586E+03, 
     X 1.08178E+03, 1.07752E+03, 1.07243E+03, 1.07178E+03, 1.07084E+03, 
     X 1.06693E+03, 1.06527E+03, 1.06405E+03, 1.06285E+03, 1.06287E+03, 
     X 1.06276E+03, 1.06221E+03, 1.06464E+03, 1.06579E+03, 1.06498E+03, 
     X 1.06596E+03, 1.06812E+03, 1.07159E+03, 1.07361E+03, 1.07556E+03, 
     X 1.07751E+03, 1.08128E+03, 1.08523E+03, 1.08927E+03, 1.09193E+03, 
     X 1.09612E+03, 1.10133E+03, 1.10435E+03, 1.10781E+03, 1.11168E+03, 
     X 1.11641E+03, 1.12217E+03, 1.12839E+03, 1.13298E+03, 1.13575E+03/ 
      DATA C01841 /                                                     
     X 1.13742E+03, 1.13929E+03, 1.14132E+03, 1.14340E+03, 1.14518E+03, 
     X 1.14742E+03, 1.14943E+03, 1.14935E+03, 1.14975E+03, 1.15086E+03, 
     X 1.15420E+03, 1.15267E+03, 1.15007E+03, 1.15155E+03, 1.14982E+03, 
     X 1.14663E+03, 1.14301E+03, 1.13986E+03, 1.13676E+03, 1.13307E+03, 
     X 1.12898E+03, 1.12516E+03, 1.12284E+03, 1.12068E+03, 1.11855E+03, 
     X 1.11632E+03, 1.11464E+03, 1.11318E+03, 1.11180E+03, 1.11163E+03, 
     X 1.11160E+03, 1.11035E+03, 1.11178E+03, 1.11395E+03, 1.11447E+03, 
     X 1.11439E+03, 1.11440E+03, 1.11582E+03, 1.11560E+03, 1.11478E+03, 
     X 1.11448E+03, 1.11454E+03, 1.11494E+03, 1.11607E+03, 1.11736E+03, 
     X 1.11854E+03, 1.11875E+03, 1.11989E+03, 1.12165E+03, 1.12427E+03, 
     X 1.12620E+03, 1.12758E+03, 1.12774E+03, 1.12870E+03, 1.13001E+03, 
     X 1.13006E+03, 1.13078E+03, 1.13172E+03, 1.12971E+03, 1.12857E+03, 
     X 1.12810E+03, 1.12740E+03, 1.12659E+03, 1.12564E+03, 1.12338E+03, 
     X 1.12117E+03, 1.11902E+03, 1.11878E+03, 1.11855E+03, 1.11828E+03, 
     X 1.11791E+03, 1.11784E+03, 1.11815E+03, 1.11957E+03, 1.12046E+03, 
     X 1.12042E+03, 1.11929E+03, 1.12074E+03, 1.12708E+03, 1.12600E+03/ 
      DATA C01921 /                                                     
     X 1.12538E+03, 1.12871E+03, 1.13167E+03, 1.13388E+03, 1.13444E+03, 
     X 1.13595E+03, 1.13801E+03, 1.14096E+03, 1.14230E+03, 1.14304E+03, 
     X 1.14421E+03, 1.14580E+03, 1.14767E+03, 1.15000E+03, 1.15126E+03, 
     X 1.15181E+03, 1.15197E+03, 1.15364E+03, 1.15626E+03, 1.15538E+03, 
     X 1.15636E+03, 1.15908E+03, 1.16024E+03, 1.16188E+03, 1.16411E+03, 
     X 1.16310E+03, 1.16430E+03, 1.16927E+03, 1.17035E+03, 1.17052E+03, 
     X 1.17013E+03, 1.16968E+03, 1.16969E+03, 1.17106E+03, 1.17123E+03, 
     X 1.17006E+03, 1.16536E+03, 1.16087E+03, 1.15691E+03, 1.15608E+03, 
     X 1.15388E+03, 1.15077E+03, 1.14967E+03, 1.14793E+03, 1.14554E+03, 
     X 1.14212E+03, 1.13908E+03, 1.13654E+03, 1.13499E+03, 1.13308E+03, 
     X 1.13033E+03, 1.13051E+03, 1.13073E+03, 1.12898E+03, 1.12941E+03, 
     X 1.13051E+03, 1.13086E+03, 1.13189E+03, 1.13304E+03, 1.13192E+03, 
     X 1.13131E+03, 1.13110E+03, 1.13499E+03, 1.13914E+03, 1.14359E+03, 
     X 1.14383E+03, 1.14390E+03, 1.14435E+03, 1.14540E+03, 1.14646E+03, 
     X 1.14716E+03, 1.14880E+03, 1.15062E+03, 1.15170E+03, 1.15093E+03, 
     X 1.14926E+03, 1.15133E+03, 1.15167E+03, 1.15043E+03, 1.15134E+03/ 
      DATA C02001 /                                                     
     X 1.15135E+03, 1.15000E+03, 1.15087E+03, 1.15118E+03, 1.14935E+03, 
     X 1.14780E+03, 1.14647E+03, 1.14560E+03, 1.14404E+03, 1.14238E+03, 
     X 1.14406E+03, 1.14245E+03, 1.13781E+03, 1.13664E+03, 1.13653E+03, 
     X 1.13778E+03, 1.13813E+03, 1.13794E+03, 1.13681E+03, 1.13515E+03, 
     X 1.13328E+03, 1.13132E+03, 1.13080E+03, 1.13130E+03, 1.13400E+03, 
     X 1.13526E+03, 1.13494E+03, 1.13193E+03, 1.12898E+03, 1.12654E+03, 
     X 1.12739E+03, 1.12849E+03, 1.12774E+03, 1.12733E+03, 1.12733E+03, 
     X 1.12943E+03, 1.13014E+03, 1.12967E+03, 1.12731E+03, 1.12671E+03, 
     X 1.12885E+03, 1.13050E+03, 1.13201E+03, 1.13345E+03, 1.13488E+03, 
     X 1.13605E+03, 1.13530E+03, 1.13737E+03, 1.14186E+03, 1.14250E+03, 
     X 1.14305E+03, 1.14383E+03, 1.14510E+03, 1.14659E+03, 1.14848E+03, 
     X 1.14949E+03, 1.14995E+03, 1.14934E+03, 1.15058E+03, 1.15368E+03, 
     X 1.15435E+03, 1.15422E+03, 1.15296E+03, 1.15228E+03, 1.15189E+03, 
     X 1.15198E+03, 1.15081E+03, 1.14881E+03, 1.14562E+03, 1.14276E+03, 
     X 1.14030E+03, 1.13637E+03, 1.13254E+03, 1.12942E+03, 1.12653E+03, 
     X 1.12362E+03, 1.11987E+03, 1.11712E+03, 1.11522E+03, 1.11403E+03/ 
      DATA C02081 /                                                     
     X 1.11226E+03, 1.10947E+03, 1.10956E+03, 1.10976E+03, 1.10748E+03, 
     X 1.10673E+03, 1.10688E+03, 1.10675E+03, 1.10533E+03, 1.10230E+03, 
     X 1.10384E+03, 1.10496E+03, 1.10274E+03, 1.10197E+03, 1.10196E+03, 
     X 1.10278E+03, 1.10257E+03, 1.10147E+03, 1.10205E+03, 1.10308E+03, 
     X 1.10478E+03, 1.10358E+03, 1.10197E+03, 1.10305E+03, 1.10390E+03, 
     X 1.10456E+03, 1.10526E+03, 1.10588E+03, 1.10640E+03, 1.10747E+03, 
     X 1.10904E+03, 1.11214E+03, 1.11350E+03, 1.11359E+03, 1.11604E+03, 
     X 1.11706E+03, 1.11594E+03, 1.11600E+03, 1.11616E+03, 1.11561E+03, 
     X 1.11556E+03, 1.11547E+03, 1.11370E+03, 1.11289E+03, 1.11276E+03, 
     X 1.11338E+03, 1.11437E+03, 1.11595E+03, 1.11309E+03, 1.10958E+03, 
     X 1.10887E+03, 1.10573E+03, 1.10068E+03, 1.10194E+03, 1.10165E+03, 
     X 1.09813E+03, 1.09973E+03, 1.10233E+03, 1.10121E+03, 1.10097E+03, 
     X 1.10149E+03, 1.10162E+03, 1.10222E+03, 1.10389E+03, 1.10315E+03, 
     X 1.10158E+03, 1.10193E+03, 1.10186E+03, 1.10135E+03, 1.10336E+03, 
     X 1.10500E+03, 1.10459E+03, 1.10592E+03, 1.10784E+03, 1.10076E+03, 
     X 1.09615E+03, 1.09496E+03, 1.09422E+03, 1.09350E+03, 1.09244E+03/ 
      DATA C02161 /                                                     
     X 1.08955E+03, 1.08535E+03, 1.08379E+03, 1.08184E+03, 1.07889E+03, 
     X 1.07563E+03, 1.07238E+03, 1.07042E+03, 1.06882E+03, 1.06761E+03, 
     X 1.06816E+03, 1.06772E+03, 1.06327E+03, 1.06313E+03, 1.06563E+03, 
     X 1.06254E+03, 1.06072E+03, 1.06095E+03, 1.06173E+03, 1.06269E+03, 
     X 1.06361E+03, 1.06438E+03, 1.06501E+03, 1.06465E+03, 1.06481E+03, 
     X 1.06685E+03, 1.06642E+03, 1.06447E+03, 1.06701E+03, 1.06791E+03, 
     X 1.06612E+03, 1.06471E+03, 1.06403E+03, 1.06774E+03, 1.06823E+03, 
     X 1.06524E+03, 1.06479E+03, 1.06453E+03, 1.06346E+03, 1.06175E+03, 
     X 1.05958E+03, 1.05941E+03, 1.05936E+03, 1.05938E+03, 1.05736E+03, 
     X 1.05449E+03, 1.05307E+03, 1.05180E+03, 1.05074E+03, 1.04810E+03, 
     X 1.04536E+03, 1.04477E+03, 1.04389E+03, 1.04272E+03, 1.04006E+03, 
     X 1.03739E+03, 1.03533E+03, 1.03476E+03, 1.03516E+03, 1.03275E+03, 
     X 1.03093E+03, 1.03062E+03, 1.02997E+03, 1.02919E+03, 1.02993E+03, 
     X 1.02983E+03, 1.02837E+03, 1.02611E+03, 1.02386E+03, 1.02426E+03, 
     X 1.02542E+03, 1.02750E+03, 1.02638E+03, 1.02496E+03, 1.02608E+03, 
     X 1.02568E+03, 1.02388E+03, 1.02522E+03, 1.02692E+03, 1.02834E+03/ 
      DATA C02241 /                                                     
     X 1.02828E+03, 1.02716E+03, 1.02667E+03, 1.02607E+03, 1.02503E+03, 
     X 1.02723E+03, 1.03143E+03, 1.02881E+03, 1.02646E+03, 1.02500E+03, 
     X 1.02569E+03, 1.02743E+03, 1.02608E+03, 1.02548E+03, 1.02620E+03, 
     X 1.02733E+03, 1.02839E+03, 1.02575E+03, 1.02432E+03, 1.02471E+03, 
     X 1.02392E+03, 1.02267E+03, 1.02077E+03, 1.01964E+03, 1.01957E+03, 
     X 1.01848E+03, 1.01704E+03, 1.01524E+03, 1.01352E+03, 1.01191E+03, 
     X 1.01066E+03, 1.00952E+03, 1.00849E+03, 1.00660E+03, 1.00368E+03, 
     X 9.99713E+02, 9.95921E+02, 9.94845E+02, 9.93286E+02, 9.91204E+02/ 
C                                                                       
      END                                                               
      BLOCK DATA BO3HH1                                                 
C>    BLOCK DATA                                                        
C                                                                       
C     RATIO (C1/C0)                                                     
C     DATA FROM BASS 1985                                               
C                                                                       
C     NOW INCLUDES MOLINA & MOLINA AT 273K WITH THE TEMPERATURE         
C     DEPENDENCE DETERMINED FROM THE 195K HARVARD MEASUREMENTS,         
C     EMPLOYING THE BASS ALGORITHM (CO(1+C1*T+C2*T2); THIS IS           
C     ONLY FOR THE WAVELENGTH RANGE FROM .34 TO .35 MICRONS;            
C     OTHERWISE, THE BASS DATA ALONE HAVE BEEN EMPLOYED BETWEEN         
C     .34 AND .245 MICRONS.                                             
C                                                                       
C     NEW T-DEPENDENT X-SECTIONS BETWEEN .345 AND .36 MICRONS           
C     HAVE NOW BEEN ADDED, BASED ON WORK BY CACCIANI, DISARRA           
C     AND FIOCCO, UNIVERSITY OF ROME, 1987.  QUADRATIC TEMP             
C     HAS BEEN DERIVED, AS ABOVE.                                       
C                                                                       
C     AGREEMENT AMONGST THE FOUR DATA SETS IS REASONABLE (<10%)         
C     AND OFTEN EXCELLENT (0-3%)                                        
C                                                                       
C                                                                       
      COMMON /O3HH1/  V1C,V2C,DVC,NC,                                   
     X           O31001(85),C10086(80),C10166(80),C10246(65),C10311(16),
     X           C10327(80),C10407(1),                                  
     X           C10001(80),C10081(80),C10161(80),C10241(80),C10321(80),
     X           C10401(80),C10481(80),C10561(80),C10641(80),C10721(80),
     X           C10801(80),C10881(80),C10961(80),C11041(80),C11121(80),
     X           C11201(80),C11281(80),C11361(80),C11441(80),C11521(80),
     X           C11601(80),C11681(80),C11761(80),C11841(80),C11921(80),
     X           C12001(80),C12081(80),C12161(80),C12241(40)            
C                                                                       
C     DATA V1C /29405./, V2C /40800./ ,DVC /5./, NC /2280/   BASS       
      DATA V1C /27370./, V2C /40800./ ,DVC /5./, NC /2687/              
C                                                                       
      DATA O31001/85*1.3E-3/                                            
                                                                        
      DATA C10086/                                                      
     X 1.37330E-03, 1.62821E-03, 2.01703E-03, 2.54574E-03, 3.20275E-03, 
     X 3.89777E-03, 4.62165E-03, 5.26292E-03, 5.86986E-03, 6.41494E-03, 
     X 6.96761E-03, 7.48539E-03, 7.89600E-03, 7.87305E-03, 7.81981E-03, 
     X 7.63864E-03, 7.67455E-03, 7.72586E-03, 7.69784E-03, 7.57367E-03, 
     X 7.27336E-03, 7.14064E-03, 7.24207E-03, 7.09851E-03, 6.93654E-03, 
     X 6.89385E-03, 7.05768E-03, 6.85578E-03, 6.58301E-03, 6.50848E-03, 
     X 6.52083E-03, 6.46590E-03, 6.70692E-03, 6.92053E-03, 7.17734E-03, 
     X 7.05364E-03, 6.63440E-03, 6.54702E-03, 6.27173E-03, 5.98150E-03, 
     X 5.66579E-03, 5.51549E-03, 5.50291E-03, 5.93271E-03, 6.36950E-03, 
     X 7.18562E-03, 7.51767E-03, 6.53815E-03, 7.22341E-03, 8.63056E-03, 
     X 9.11740E-03, 8.80903E-03, 8.59902E-03, 7.74287E-03, 7.33509E-03, 
     X 7.50180E-03, 7.81686E-03, 7.85635E-03, 8.08554E-03, 7.21968E-03, 
     X 7.99028E-03, 9.90724E-03, 1.29121E-02, 1.54686E-02, 1.60876E-02, 
     X 1.59530E-02, 1.57040E-02, 1.59499E-02, 1.63961E-02, 1.72670E-02, 
     X 1.81634E-02, 1.95519E-02, 2.14181E-02, 2.28670E-02, 2.33506E-02, 
     X 2.22736E-02, 2.14296E-02, 2.15271E-02, 2.30730E-02, 2.36220E-02/ 
      DATA C10166/                                                      
     X 2.44466E-02, 2.44476E-02, 2.39223E-02, 2.41386E-02, 2.53687E-02, 
     X 2.67491E-02, 2.80425E-02, 2.77558E-02, 2.82626E-02, 2.86776E-02, 
     X 2.88781E-02, 2.89248E-02, 2.89983E-02, 2.85534E-02, 2.87102E-02, 
     X 2.83695E-02, 2.76719E-02, 2.76091E-02, 2.90733E-02, 2.80388E-02, 
     X 2.73706E-02, 2.65055E-02, 2.61268E-02, 2.45892E-02, 2.37213E-02, 
     X 2.22542E-02, 2.10116E-02, 2.02852E-02, 1.97635E-02, 1.94079E-02, 
     X 1.90997E-02, 1.85598E-02, 1.79221E-02, 1.77887E-02, 1.73709E-02, 
     X 1.67263E-02, 1.60932E-02, 1.50775E-02, 1.39563E-02, 1.23691E-02, 
     X 1.07402E-02, 9.35859E-03, 8.43786E-03, 7.92075E-03, 7.33239E-03, 
     X 6.73638E-03, 6.28740E-03, 5.85640E-03, 5.85384E-03, 6.10577E-03, 
     X 7.26050E-03, 9.66384E-03, 1.29629E-02, 1.69596E-02, 2.03465E-02, 
     X 2.26429E-02, 2.39653E-02, 2.47970E-02, 2.51993E-02, 2.51383E-02, 
     X 2.52014E-02, 2.47766E-02, 2.47171E-02, 2.47478E-02, 2.43986E-02, 
     X 2.43498E-02, 2.40537E-02, 2.40574E-02, 2.40446E-02, 2.40847E-02, 
     X 2.39400E-02, 2.42127E-02, 2.47123E-02, 2.52914E-02, 2.52103E-02, 
     X 2.51421E-02, 2.43229E-02, 2.37902E-02, 2.30865E-02, 2.28174E-02/ 
      DATA C10246/                                                      
     X 2.28830E-02, 2.33671E-02, 2.38274E-02, 2.46699E-02, 2.56739E-02, 
     X 2.61408E-02, 2.62898E-02, 2.64228E-02, 2.55561E-02, 2.47095E-02, 
     X 2.39071E-02, 2.34319E-02, 2.28738E-02, 2.23434E-02, 2.18888E-02, 
     X 2.13639E-02, 2.11937E-02, 2.10110E-02, 2.07672E-02, 2.00697E-02, 
     X 1.97605E-02, 1.91208E-02, 1.82056E-02, 1.73945E-02, 1.64542E-02, 
     X 1.53969E-02, 1.41816E-02, 1.35665E-02, 1.27109E-02, 1.18254E-02, 
     X 1.11489E-02, 1.03984E-02, 1.00760E-02, 9.86649E-03, 9.76766E-03, 
     X 9.41662E-03, 9.19082E-03, 9.44272E-03, 1.04547E-02, 1.24713E-02, 
     X 1.49310E-02, 1.70272E-02, 1.86057E-02, 1.93555E-02, 1.98350E-02, 
     X 2.00041E-02, 2.01233E-02, 2.01917E-02, 1.98918E-02, 1.96649E-02, 
     X 1.95162E-02, 2.01044E-02, 2.06711E-02, 2.08881E-02, 2.04812E-02, 
     X 1.92249E-02, 1.80188E-02, 1.69496E-02, 1.60488E-02, 1.52865E-02, 
     X 1.46940E-02, 1.41067E-02, 1.35675E-02, 1.31094E-02, 1.27542E-02/ 
      DATA C10311/                                                      
     X                                                     1.3073E-02,  
     X 1.2795E-02,  1.2753E-02,  1.2868E-02,  1.2885E-02,  1.2554E-02,  
     X 1.2106E-02,  1.1616E-02,  1.1394E-02,  1.1092E-02,  1.0682E-02,  
     X 1.0519E-02,  9.7219E-03,  9.3434E-03,  8.5260E-03,  8.3333E-03/  
      DATA C10327/                                                      
     X 7.8582E-03,  6.8295E-03,  6.7963E-03,  6.7516E-03,  6.2930E-03,  
     X 6.1615E-03,  6.1250E-03,  5.9011E-03,  5.7823E-03,  5.4688E-03,  
     X 5.0978E-03,  4.4526E-03,  3.8090E-03,  3.2310E-03,  3.0128E-03,  
     X 3.9063E-03,  6.7911E-03,  9.3161E-03,  1.0256E-02,  1.0183E-02,  
     X 9.8289E-03,  9.5683E-03,  9.0406E-03,  8.7148E-03,  8.5284E-03,  
     X 8.6149E-03,  8.7238E-03,  9.3679E-03,  1.0683E-02,  1.2016E-02,  
     X 1.3097E-02,  1.3610E-02,  1.3588E-02,  1.3805E-02,  1.3928E-02,  
     X 1.3903E-02,  1.3446E-02,  1.3258E-02,  1.3194E-02,  1.2703E-02,  
     X 1.2393E-02,  1.2487E-02,  1.2341E-02,  1.2388E-02,  1.2061E-02,  
     X 1.2122E-02,  1.1850E-02,  1.2032E-02,  1.1806E-02,  1.1810E-02,  
     X 1.1572E-02,  1.1397E-02,  1.0980E-02,  1.1012E-02,  1.0524E-02,  
     X 1.0518E-02,  1.0227E-02,  9.6837E-03,  9.6425E-03,  8.9938E-03,  
     X 9.1488E-03,  8.8595E-03,  8.5976E-03,  8.4447E-03,  8.0731E-03,  
     X 8.0283E-03,  7.7827E-03,  7.7638E-03,  7.2438E-03,  6.8246E-03,  
     X 6.3457E-03,  5.6632E-03,  5.2500E-03,  4.3593E-03,  3.9431E-03,  
     X 3.1580E-03,  2.2298E-03,  1.7818E-03,  1.4513E-03,  1.3188E-03/  
      DATA C10407/                                                      
     X 2.1034E-03/                                                      
      DATA C10001 /                                                     
     X 6.45621E-03, 7.11308E-03, 1.06130E-02, 1.36338E-02, 1.27746E-02, 
     X 1.42152E-02, 1.41144E-02, 1.64830E-02, 1.67110E-02, 1.57368E-02, 
     X 1.54644E-02, 1.45248E-02, 1.43206E-02, 1.56946E-02, 1.54268E-02, 
     X 1.37500E-02, 1.50224E-02, 1.60919E-02, 1.49099E-02, 1.53960E-02, 
     X 1.61871E-02, 1.46539E-02, 1.38258E-02, 1.32571E-02, 1.21580E-02, 
     X 1.39596E-02, 1.16029E-02, 1.47042E-02, 1.07441E-02, 1.08999E-02, 
     X 1.05562E-02, 1.00589E-02, 9.60711E-03, 9.36950E-03, 7.65303E-03, 
     X 6.86216E-03, 7.05344E-03, 6.90728E-03, 6.78627E-03, 6.97435E-03, 
     X 5.75456E-03, 5.81685E-03, 5.00915E-03, 4.90259E-03, 4.42545E-03, 
     X 4.14633E-03, 3.61657E-03, 3.08178E-03, 2.91680E-03, 2.94554E-03, 
     X 3.35794E-03, 5.49025E-03, 7.09867E-03, 6.82592E-03, 8.84835E-03, 
     X 9.15718E-03, 9.17935E-03, 8.31848E-03, 7.79481E-03, 7.75125E-03, 
     X 6.95844E-03, 7.34506E-03, 7.53823E-03, 7.03272E-03, 7.57051E-03, 
     X 9.20239E-03, 1.10864E-02, 1.16188E-02, 1.30029E-02, 1.44364E-02, 
     X 1.29292E-02, 1.36031E-02, 1.35967E-02, 1.30412E-02, 1.29874E-02, 
     X 1.14829E-02, 1.18009E-02, 1.20829E-02, 1.17831E-02, 1.21489E-02/ 
      DATA C10081 /                                                     
     X 1.27019E-02, 1.25557E-02, 1.23812E-02, 1.20158E-02, 1.26749E-02, 
     X 1.17139E-02, 1.14552E-02, 1.11268E-02, 9.79143E-03, 8.79741E-03, 
     X 8.85709E-03, 8.57653E-03, 8.93908E-03, 8.46205E-03, 8.56506E-03, 
     X 8.14319E-03, 8.14415E-03, 7.74205E-03, 7.80727E-03, 7.49886E-03, 
     X 7.71114E-03, 6.55963E-03, 6.87550E-03, 6.39162E-03, 5.55359E-03, 
     X 5.43275E-03, 4.90649E-03, 4.41165E-03, 4.21875E-03, 3.62592E-03, 
     X 3.40700E-03, 2.40267E-03, 2.61479E-03, 2.75677E-03, 4.10842E-03, 
     X 5.79601E-03, 7.10708E-03, 8.07826E-03, 8.16166E-03, 8.72620E-03, 
     X 8.85878E-03, 8.72755E-03, 8.25811E-03, 8.12100E-03, 7.78534E-03, 
     X 7.39762E-03, 8.43880E-03, 8.53789E-03, 9.90072E-03, 1.01668E-02, 
     X 1.00827E-02, 9.73556E-03, 9.57462E-03, 1.01289E-02, 1.10670E-02, 
     X 1.03508E-02, 1.00929E-02, 9.10236E-03, 9.39459E-03, 8.79601E-03, 
     X 8.67936E-03, 8.53862E-03, 7.95459E-03, 8.04037E-03, 7.95361E-03, 
     X 7.87432E-03, 6.99165E-03, 7.37107E-03, 6.09187E-03, 6.21030E-03, 
     X 5.33277E-03, 5.04633E-03, 4.45811E-03, 4.34153E-03, 3.98596E-03, 
     X 3.84225E-03, 3.41943E-03, 3.60535E-03, 2.81691E-03, 2.49771E-03/ 
      DATA C10161 /                                                     
     X 2.35046E-03, 2.50947E-03, 3.75462E-03, 4.92349E-03, 5.09294E-03, 
     X 4.98312E-03, 5.19325E-03, 4.41827E-03, 4.25192E-03, 4.46745E-03, 
     X 4.08731E-03, 3.84776E-03, 3.67507E-03, 3.76845E-03, 3.69210E-03, 
     X 4.59864E-03, 6.42677E-03, 7.83255E-03, 7.89247E-03, 8.10883E-03, 
     X 8.00825E-03, 8.40322E-03, 7.97108E-03, 8.24714E-03, 8.39006E-03, 
     X 8.68787E-03, 8.61108E-03, 8.81552E-03, 9.36996E-03, 9.08243E-03, 
     X 9.69116E-03, 9.66185E-03, 9.22856E-03, 9.65086E-03, 9.35398E-03, 
     X 9.06358E-03, 8.76851E-03, 8.43072E-03, 7.85659E-03, 7.93936E-03, 
     X 7.49712E-03, 7.20199E-03, 6.94581E-03, 6.64086E-03, 6.12627E-03, 
     X 6.13967E-03, 5.67310E-03, 5.09928E-03, 4.59112E-03, 3.95257E-03, 
     X 3.67652E-03, 3.28781E-03, 2.77471E-03, 2.74494E-03, 2.15529E-03, 
     X 1.95283E-03, 1.75043E-03, 1.60419E-03, 1.82688E-03, 2.34667E-03, 
     X 2.92502E-03, 3.88322E-03, 4.39984E-03, 4.67814E-03, 4.80395E-03, 
     X 4.69130E-03, 4.54564E-03, 4.46773E-03, 4.59178E-03, 4.37498E-03, 
     X 4.12706E-03, 4.18299E-03, 4.57267E-03, 5.60127E-03, 6.51936E-03, 
     X 7.10498E-03, 7.49870E-03, 7.89554E-03, 7.97428E-03, 8.21044E-03/ 
      DATA C10241 /                                                     
     X 8.06324E-03, 7.76648E-03, 7.62238E-03, 7.77675E-03, 7.46905E-03, 
     X 7.61115E-03, 7.42715E-03, 7.28461E-03, 7.51514E-03, 7.38782E-03, 
     X 6.97206E-03, 6.52738E-03, 6.10147E-03, 5.87553E-03, 5.49218E-03, 
     X 4.94873E-03, 4.47920E-03, 4.25005E-03, 3.98094E-03, 3.92084E-03, 
     X 3.41707E-03, 3.30501E-03, 3.09208E-03, 3.19686E-03, 3.55283E-03, 
     X 4.20775E-03, 4.11155E-03, 3.72193E-03, 3.52000E-03, 3.13572E-03, 
     X 2.87629E-03, 2.64251E-03, 2.33451E-03, 2.22426E-03, 2.05800E-03, 
     X 1.75214E-03, 2.32530E-03, 2.68651E-03, 3.66315E-03, 4.93904E-03, 
     X 5.32850E-03, 5.43978E-03, 5.32656E-03, 5.15649E-03, 5.42096E-03, 
     X 5.37193E-03, 5.23454E-03, 5.34557E-03, 5.50533E-03, 6.13216E-03, 
     X 6.65129E-03, 7.09357E-03, 7.46042E-03, 7.68605E-03, 7.91866E-03, 
     X 7.52953E-03, 7.48272E-03, 7.17800E-03, 6.80060E-03, 6.60427E-03, 
     X 6.43049E-03, 6.45975E-03, 6.20534E-03, 5.93094E-03, 5.67360E-03, 
     X 5.38584E-03, 5.19364E-03, 4.92599E-03, 4.60655E-03, 4.24669E-03, 
     X 3.94253E-03, 3.55894E-03, 3.24256E-03, 2.92974E-03, 2.62760E-03, 
     X 2.52238E-03, 2.24714E-03, 2.26350E-03, 2.44380E-03, 3.03798E-03/ 
      DATA C10321 /                                                     
     X 3.50000E-03, 3.55416E-03, 3.43661E-03, 3.19814E-03, 3.02155E-03, 
     X 2.73890E-03, 2.50078E-03, 2.34595E-03, 2.18282E-03, 2.19285E-03, 
     X 2.49482E-03, 3.13434E-03, 4.18947E-03, 4.72069E-03, 5.29712E-03, 
     X 5.39004E-03, 5.44846E-03, 5.37952E-03, 5.09935E-03, 5.08741E-03, 
     X 5.05257E-03, 5.10339E-03, 5.17968E-03, 5.31841E-03, 5.58106E-03, 
     X 5.65031E-03, 5.65680E-03, 5.76184E-03, 5.71213E-03, 5.48515E-03, 
     X 5.32168E-03, 5.18505E-03, 4.99640E-03, 4.78746E-03, 4.57244E-03, 
     X 4.32728E-03, 4.14464E-03, 3.97659E-03, 4.01874E-03, 4.10588E-03, 
     X 3.99644E-03, 3.84584E-03, 3.64222E-03, 3.39590E-03, 3.00386E-03, 
     X 2.73790E-03, 2.45095E-03, 2.29068E-03, 1.64530E-03, 1.68602E-03, 
     X 2.32934E-03, 3.14851E-03, 3.65706E-03, 3.70878E-03, 3.75103E-03, 
     X 3.79183E-03, 3.32032E-03, 2.42604E-03, 2.48775E-03, 2.34603E-03, 
     X 2.36349E-03, 3.33744E-03, 3.44617E-03, 4.27280E-03, 4.61076E-03, 
     X 5.20165E-03, 5.14851E-03, 5.22909E-03, 5.08278E-03, 5.16125E-03, 
     X 5.01572E-03, 4.51685E-03, 4.67541E-03, 4.83421E-03, 4.57546E-03, 
     X 4.55111E-03, 5.03093E-03, 4.67838E-03, 4.44282E-03, 4.40774E-03/ 
      DATA C10401 /                                                     
     X 4.48123E-03, 4.24410E-03, 4.03559E-03, 3.73969E-03, 3.45458E-03, 
     X 3.18217E-03, 3.16115E-03, 3.36877E-03, 3.62026E-03, 3.69898E-03, 
     X 3.49845E-03, 3.13839E-03, 2.77731E-03, 2.40106E-03, 2.03935E-03, 
     X 1.84377E-03, 2.07757E-03, 2.39550E-03, 2.86272E-03, 3.27900E-03, 
     X 3.42304E-03, 3.50211E-03, 3.29197E-03, 3.24784E-03, 3.20864E-03, 
     X 3.28063E-03, 3.01328E-03, 3.00379E-03, 3.19562E-03, 3.45113E-03, 
     X 3.75149E-03, 3.98520E-03, 4.19181E-03, 4.15773E-03, 4.02490E-03, 
     X 3.95936E-03, 3.79001E-03, 3.77647E-03, 3.48528E-03, 3.55768E-03, 
     X 3.62812E-03, 3.48650E-03, 3.35434E-03, 3.20088E-03, 3.25316E-03, 
     X 3.04467E-03, 3.12633E-03, 3.23602E-03, 3.07723E-03, 2.80070E-03, 
     X 2.72498E-03, 2.74752E-03, 2.58943E-03, 2.32482E-03, 2.20218E-03, 
     X 2.10846E-03, 2.05991E-03, 2.01844E-03, 2.16224E-03, 2.48456E-03, 
     X 2.88022E-03, 2.93939E-03, 3.01176E-03, 2.98886E-03, 2.96947E-03, 
     X 3.38082E-03, 3.61657E-03, 3.42654E-03, 3.41274E-03, 3.22475E-03, 
     X 2.97658E-03, 3.21944E-03, 3.32032E-03, 3.33273E-03, 3.58854E-03, 
     X 3.67023E-03, 3.64069E-03, 3.74557E-03, 3.77703E-03, 3.64042E-03/ 
      DATA C10481 /                                                     
     X 3.39468E-03, 3.22657E-03, 3.16466E-03, 3.24224E-03, 3.24801E-03, 
     X 3.19487E-03, 3.40155E-03, 3.16940E-03, 2.92293E-03, 3.00998E-03, 
     X 2.82851E-03, 2.60381E-03, 2.59242E-03, 2.48530E-03, 2.76677E-03, 
     X 2.45506E-03, 2.21845E-03, 2.30407E-03, 2.28136E-03, 2.37278E-03, 
     X 2.25313E-03, 2.47836E-03, 2.77858E-03, 2.89803E-03, 2.86131E-03, 
     X 3.14118E-03, 3.14119E-03, 2.88881E-03, 3.19502E-03, 2.99538E-03, 
     X 2.91212E-03, 3.22739E-03, 3.05960E-03, 3.18901E-03, 3.05805E-03, 
     X 3.12205E-03, 2.95636E-03, 3.24111E-03, 3.29433E-03, 3.09206E-03, 
     X 3.06696E-03, 2.97735E-03, 2.90897E-03, 2.88979E-03, 2.75105E-03, 
     X 2.92156E-03, 3.03445E-03, 2.91664E-03, 2.85559E-03, 2.98405E-03, 
     X 2.95376E-03, 2.80234E-03, 2.78349E-03, 2.73421E-03, 2.70035E-03, 
     X 2.60074E-03, 2.34840E-03, 2.37626E-03, 2.32927E-03, 2.20842E-03, 
     X 2.31080E-03, 2.42771E-03, 2.43339E-03, 2.53280E-03, 2.37093E-03, 
     X 2.37377E-03, 2.73453E-03, 2.60836E-03, 2.55568E-03, 2.44062E-03, 
     X 2.71093E-03, 2.64421E-03, 2.66969E-03, 2.55560E-03, 2.71800E-03, 
     X 2.79534E-03, 2.59070E-03, 2.55373E-03, 2.45272E-03, 2.55571E-03/ 
      DATA C10561 /                                                     
     X 2.54606E-03, 2.57349E-03, 2.46807E-03, 2.35634E-03, 2.44470E-03, 
     X 2.47050E-03, 2.57131E-03, 2.71649E-03, 2.58800E-03, 2.54524E-03, 
     X 2.69505E-03, 2.89122E-03, 2.77399E-03, 2.63306E-03, 2.82269E-03, 
     X 2.95684E-03, 3.07415E-03, 2.70594E-03, 2.65650E-03, 2.90613E-03, 
     X 2.96666E-03, 2.94767E-03, 2.81765E-03, 2.64829E-03, 2.43062E-03, 
     X 2.33816E-03, 2.38210E-03, 2.45701E-03, 2.38508E-03, 2.40746E-03, 
     X 2.49779E-03, 2.28209E-03, 2.26185E-03, 2.26604E-03, 2.19232E-03, 
     X 2.19160E-03, 2.32246E-03, 2.11108E-03, 2.26220E-03, 2.26849E-03, 
     X 2.34787E-03, 2.49323E-03, 2.46872E-03, 2.52974E-03, 2.35858E-03, 
     X 2.36865E-03, 2.33533E-03, 2.21338E-03, 2.24610E-03, 2.24776E-03, 
     X 2.24423E-03, 2.29276E-03, 2.18487E-03, 2.27621E-03, 2.31141E-03, 
     X 2.44095E-03, 2.45198E-03, 2.56919E-03, 2.56823E-03, 2.41982E-03, 
     X 2.39968E-03, 2.62447E-03, 2.55339E-03, 2.51556E-03, 2.47477E-03, 
     X 2.50276E-03, 2.48381E-03, 2.48484E-03, 2.48316E-03, 2.38541E-03, 
     X 2.41183E-03, 2.55888E-03, 2.42810E-03, 2.43356E-03, 2.25996E-03, 
     X 2.34736E-03, 2.10305E-03, 2.13870E-03, 2.17472E-03, 2.05354E-03/ 
      DATA C10641 /                                                     
     X 2.11572E-03, 2.19557E-03, 2.09545E-03, 2.07831E-03, 1.94425E-03, 
     X 1.89333E-03, 1.98025E-03, 1.98328E-03, 2.01702E-03, 1.98333E-03, 
     X 2.01150E-03, 2.02484E-03, 2.10759E-03, 2.11892E-03, 2.10175E-03, 
     X 2.05314E-03, 2.13338E-03, 2.25764E-03, 2.19055E-03, 2.10818E-03, 
     X 2.05100E-03, 2.05685E-03, 2.10843E-03, 2.10228E-03, 2.10646E-03, 
     X 2.22640E-03, 2.31253E-03, 2.31230E-03, 2.21885E-03, 2.19568E-03, 
     X 2.23583E-03, 2.34754E-03, 2.28622E-03, 2.21876E-03, 2.26679E-03, 
     X 2.30828E-03, 2.24944E-03, 2.13851E-03, 2.02938E-03, 1.96770E-03, 
     X 2.05953E-03, 2.13814E-03, 2.03158E-03, 2.24655E-03, 1.95119E-03, 
     X 2.12979E-03, 2.08581E-03, 2.02434E-03, 1.98926E-03, 1.98792E-03, 
     X 1.97237E-03, 1.93397E-03, 1.92360E-03, 1.90805E-03, 1.89300E-03, 
     X 1.83548E-03, 1.87215E-03, 1.85589E-03, 1.85718E-03, 1.79361E-03, 
     X 1.77984E-03, 1.91506E-03, 2.04256E-03, 2.04095E-03, 1.94031E-03, 
     X 1.90447E-03, 2.02049E-03, 1.98360E-03, 2.04364E-03, 2.02519E-03, 
     X 2.20802E-03, 1.96964E-03, 1.94559E-03, 2.09922E-03, 2.11184E-03, 
     X 2.05706E-03, 2.02257E-03, 2.01781E-03, 2.01055E-03, 1.86538E-03/ 
      DATA C10721 /                                                     
     X 1.86899E-03, 1.76798E-03, 1.85871E-03, 1.95363E-03, 1.96404E-03, 
     X 1.84169E-03, 1.82851E-03, 1.84582E-03, 1.81997E-03, 1.76461E-03, 
     X 1.68384E-03, 1.65530E-03, 1.73550E-03, 1.62463E-03, 1.68793E-03, 
     X 1.60472E-03, 1.67560E-03, 1.67431E-03, 1.61779E-03, 1.66446E-03, 
     X 1.66403E-03, 1.55724E-03, 1.62351E-03, 1.71545E-03, 1.69645E-03, 
     X 1.59540E-03, 1.62948E-03, 1.66784E-03, 1.66416E-03, 1.66131E-03, 
     X 1.71502E-03, 1.76555E-03, 1.75182E-03, 1.72327E-03, 1.72338E-03, 
     X 1.69993E-03, 1.78819E-03, 1.73517E-03, 1.74802E-03, 1.81751E-03, 
     X 1.70973E-03, 1.65075E-03, 1.70784E-03, 1.73655E-03, 1.71670E-03, 
     X 1.67367E-03, 1.69338E-03, 1.61772E-03, 1.54914E-03, 1.56009E-03, 
     X 1.59467E-03, 1.60761E-03, 1.57117E-03, 1.54045E-03, 1.53102E-03, 
     X 1.44516E-03, 1.49898E-03, 1.56048E-03, 1.60087E-03, 1.62636E-03, 
     X 1.62472E-03, 1.53931E-03, 1.55536E-03, 1.61649E-03, 1.66493E-03, 
     X 1.86915E-03, 1.59984E-03, 1.60483E-03, 1.66549E-03, 1.73449E-03, 
     X 1.73673E-03, 1.68393E-03, 1.67434E-03, 1.77880E-03, 1.76154E-03, 
     X 1.43028E-03, 1.69651E-03, 1.60934E-03, 1.69413E-03, 1.70514E-03/ 
      DATA C10801 /                                                     
     X 1.62471E-03, 1.74854E-03, 1.76480E-03, 1.63495E-03, 1.59364E-03, 
     X 1.39603E-03, 1.47897E-03, 1.49509E-03, 1.70002E-03, 1.63048E-03, 
     X 1.44807E-03, 1.45071E-03, 1.53998E-03, 1.45276E-03, 1.29129E-03, 
     X 1.52900E-03, 1.64444E-03, 1.37450E-03, 1.42574E-03, 1.47355E-03, 
     X 1.51202E-03, 1.54376E-03, 1.51421E-03, 1.43989E-03, 1.45732E-03, 
     X 1.42912E-03, 1.59906E-03, 1.56748E-03, 1.52383E-03, 1.47665E-03, 
     X 1.51465E-03, 1.55582E-03, 1.54521E-03, 1.55189E-03, 1.56772E-03, 
     X 1.45401E-03, 1.55775E-03, 1.43120E-03, 1.39659E-03, 1.41451E-03, 
     X 1.45157E-03, 1.48303E-03, 1.42540E-03, 1.26387E-03, 1.37479E-03, 
     X 1.46381E-03, 1.38134E-03, 1.32733E-03, 1.38030E-03, 1.44619E-03, 
     X 1.41344E-03, 1.31982E-03, 1.24944E-03, 1.20096E-03, 1.21107E-03, 
     X 1.27999E-03, 1.22523E-03, 1.22193E-03, 1.35957E-03, 1.41427E-03, 
     X 1.35679E-03, 1.15438E-03, 1.41184E-03, 1.49093E-03, 1.32193E-03, 
     X 1.25009E-03, 1.37625E-03, 1.49022E-03, 1.44180E-03, 1.27628E-03, 
     X 1.29670E-03, 1.31636E-03, 1.28874E-03, 1.31177E-03, 1.35732E-03, 
     X 1.33854E-03, 1.30253E-03, 1.31374E-03, 1.27379E-03, 1.18339E-03/ 
      DATA C10881 /                                                     
     X 1.22016E-03, 1.26551E-03, 1.26371E-03, 1.28180E-03, 1.36024E-03, 
     X 1.45759E-03, 1.29413E-03, 1.35858E-03, 1.26528E-03, 1.18623E-03, 
     X 1.21812E-03, 1.28799E-03, 1.37028E-03, 1.29268E-03, 1.27639E-03, 
     X 1.19487E-03, 1.23542E-03, 1.25010E-03, 1.17418E-03, 1.13914E-03, 
     X 1.21951E-03, 1.13780E-03, 1.16443E-03, 1.17883E-03, 1.11982E-03, 
     X 1.05708E-03, 1.04865E-03, 1.05884E-03, 1.06599E-03, 1.13828E-03, 
     X 1.10373E-03, 1.07739E-03, 1.04632E-03, 1.06118E-03, 1.15445E-03, 
     X 1.17300E-03, 1.00675E-03, 1.04235E-03, 1.08398E-03, 1.06587E-03, 
     X 1.05536E-03, 1.08614E-03, 1.09026E-03, 1.09141E-03, 1.13051E-03, 
     X 1.08667E-03, 1.04016E-03, 1.04897E-03, 1.08894E-03, 1.09682E-03, 
     X 1.09638E-03, 9.79254E-04, 1.00668E-03, 1.02569E-03, 1.00581E-03, 
     X 9.74433E-04, 9.66321E-04, 9.78440E-04, 9.01587E-04, 1.02149E-03, 
     X 9.87464E-04, 9.41872E-04, 9.05021E-04, 8.59547E-04, 9.03963E-04, 
     X 8.66415E-04, 8.84726E-04, 8.77087E-04, 8.70584E-04, 8.81338E-04, 
     X 8.97658E-04, 8.97586E-04, 9.19028E-04, 8.82438E-04, 9.00710E-04, 
     X 9.54329E-04, 9.54490E-04, 9.10940E-04, 9.95472E-04, 9.50134E-04/ 
      DATA C10961 /                                                     
     X 9.17127E-04, 9.70916E-04, 9.87575E-04, 9.65026E-04, 9.71779E-04, 
     X 1.00967E-03, 1.00053E-03, 9.26063E-04, 9.34721E-04, 9.76354E-04, 
     X 9.78436E-04, 9.36012E-04, 9.64448E-04, 9.95903E-04, 9.89960E-04, 
     X 9.41143E-04, 9.04393E-04, 8.84719E-04, 8.41396E-04, 8.67234E-04, 
     X 8.55864E-04, 8.63314E-04, 8.72317E-04, 8.40899E-04, 7.79593E-04, 
     X 7.88481E-04, 8.21075E-04, 7.38342E-04, 7.56537E-04, 7.57278E-04, 
     X 7.35854E-04, 7.32765E-04, 6.67398E-04, 7.45338E-04, 7.33094E-04, 
     X 7.01840E-04, 6.85595E-04, 6.95740E-04, 7.24015E-04, 7.00907E-04, 
     X 7.28498E-04, 6.89410E-04, 6.91728E-04, 7.40601E-04, 7.62775E-04, 
     X 7.40912E-04, 7.35021E-04, 7.07799E-04, 7.54113E-04, 8.44845E-04, 
     X 8.53956E-04, 6.42186E-04, 7.40557E-04, 7.54340E-04, 7.55544E-04, 
     X 7.88986E-04, 7.97902E-04, 6.98460E-04, 7.74873E-04, 6.81178E-04, 
     X 7.15567E-04, 7.56723E-04, 7.98438E-04, 8.83150E-04, 8.45671E-04, 
     X 7.40924E-04, 7.35498E-04, 7.77829E-04, 6.93566E-04, 5.10188E-04, 
     X 7.52717E-04, 6.94185E-04, 6.71928E-04, 6.73286E-04, 6.89415E-04, 
     X 7.22917E-04, 7.89448E-04, 8.53812E-04, 7.45132E-04, 7.68732E-04/ 
      DATA C11041 /                                                     
     X 8.10104E-04, 7.55615E-04, 7.09145E-04, 6.80676E-04, 7.54594E-04, 
     X 7.89416E-04, 7.88579E-04, 7.49805E-04, 6.13534E-04, 7.22491E-04, 
     X 7.95410E-04, 7.80604E-04, 7.74283E-04, 7.93224E-04, 6.86522E-04, 
     X 8.06038E-04, 8.30285E-04, 8.37763E-04, 8.03863E-04, 7.33526E-04, 
     X 7.42588E-04, 6.31046E-04, 8.16153E-04, 8.95391E-04, 8.61330E-04, 
     X 8.38726E-04, 8.16761E-04, 8.16118E-04, 6.37058E-04, 6.30868E-04, 
     X 7.26410E-04, 7.03464E-04, 5.93454E-04, 6.01985E-04, 6.51157E-04, 
     X 6.68569E-04, 6.56297E-04, 6.58732E-04, 5.99721E-04, 5.34301E-04, 
     X 5.33271E-04, 5.57992E-04, 5.70096E-04, 5.59932E-04, 5.32110E-04, 
     X 5.64713E-04, 6.25026E-04, 6.38973E-04, 6.05323E-04, 7.17460E-04, 
     X 6.19407E-04, 5.90228E-04, 5.43682E-04, 5.38446E-04, 6.56146E-04, 
     X 6.09081E-04, 6.04737E-04, 6.45526E-04, 6.46978E-04, 5.89738E-04, 
     X 5.63852E-04, 6.18018E-04, 5.71768E-04, 5.75433E-04, 6.05766E-04, 
     X 5.93065E-04, 5.31708E-04, 5.41187E-04, 5.76985E-04, 5.78176E-04, 
     X 5.75339E-04, 6.85426E-04, 5.51038E-04, 6.02049E-04, 6.20406E-04, 
     X 5.80169E-04, 5.36399E-04, 5.59608E-04, 5.46575E-04, 5.66979E-04/ 
      DATA C11121 /                                                     
     X 5.94982E-04, 6.18469E-04, 6.56281E-04, 8.22124E-04, 7.81716E-04, 
     X 7.29616E-04, 7.14460E-04, 7.08969E-04, 6.53794E-04, 7.33138E-04, 
     X 8.29513E-04, 8.99395E-04, 9.05526E-04, 7.98257E-04, 7.86935E-04, 
     X 6.10797E-04, 4.63912E-04, 4.05675E-04, 3.66230E-04, 4.86472E-04, 
     X 5.31818E-04, 5.15865E-04, 4.87344E-04, 4.99857E-04, 5.35479E-04, 
     X 5.27561E-04, 4.99000E-04, 4.77056E-04, 4.74242E-04, 4.66595E-04, 
     X 4.66325E-04, 4.94704E-04, 5.12842E-04, 5.01795E-04, 4.80789E-04, 
     X 5.73709E-04, 5.65214E-04, 5.11321E-04, 4.55242E-04, 4.29330E-04, 
     X 5.09792E-04, 4.70489E-04, 4.82859E-04, 4.99195E-04, 4.07724E-04, 
     X 4.99951E-04, 4.55755E-04, 4.42528E-04, 4.19433E-04, 3.31325E-04, 
     X 3.70517E-04, 3.77708E-04, 2.97923E-04, 2.27470E-04, 2.47389E-04, 
     X 2.38324E-04, 2.56706E-04, 2.45046E-04, 2.62539E-04, 3.37054E-04, 
     X 3.33930E-04, 3.01390E-04, 3.08028E-04, 3.41464E-04, 3.70574E-04, 
     X 3.47893E-04, 3.28433E-04, 3.46976E-04, 3.60351E-04, 3.50559E-04, 
     X 3.56070E-04, 3.62782E-04, 3.37330E-04, 3.33763E-04, 3.57046E-04, 
     X 3.08784E-04, 2.93898E-04, 2.80842E-04, 2.54114E-04, 2.38198E-04/ 
      DATA C11201 /                                                     
     X 3.48753E-04, 2.97334E-04, 2.82929E-04, 2.94150E-04, 3.07875E-04, 
     X 3.21129E-04, 3.38335E-04, 3.49826E-04, 3.47647E-04, 3.35438E-04, 
     X 3.58145E-04, 3.72391E-04, 3.59372E-04, 3.64755E-04, 4.16867E-04, 
     X 3.43614E-04, 3.34932E-04, 3.12782E-04, 3.28220E-04, 4.32595E-04, 
     X 3.49513E-04, 3.51861E-04, 3.81166E-04, 3.91194E-04, 3.38944E-04, 
     X 2.63445E-04, 2.49520E-04, 2.46184E-04, 2.33203E-04, 2.16315E-04, 
     X 1.89536E-04, 1.95730E-04, 1.99664E-04, 1.77139E-04, 1.27969E-04, 
     X 5.17216E-05, 7.60445E-05, 1.24418E-04, 1.30989E-04, 2.31539E-04, 
     X 2.21334E-04, 2.08757E-04, 2.18351E-04, 2.46202E-04, 2.29824E-04, 
     X 2.28909E-04, 2.88826E-04, 3.58039E-04, 2.60800E-04, 2.33025E-04, 
     X 2.52667E-04, 2.61394E-04, 2.31384E-04, 2.29388E-04, 2.54701E-04, 
     X 2.21158E-04, 1.61506E-04, 1.36752E-04, 1.69481E-04, 8.64539E-05, 
     X 1.64407E-04, 3.65674E-04, 3.18233E-04, 4.00755E-04, 3.33375E-04, 
     X 2.62930E-04, 2.87052E-04, 2.51395E-04, 2.85274E-04, 2.66915E-04, 
     X 2.10866E-04, 1.89517E-04, 1.67378E-04, 2.79951E-04, 2.97224E-04, 
     X 1.89222E-04, 3.33825E-04, 3.56386E-04, 3.89727E-04, 4.30407E-04/ 
      DATA C11281 /                                                     
     X 4.45922E-04, 4.23446E-04, 4.41347E-04, 4.06723E-04, 3.00181E-04, 
     X 1.85243E-04, 3.13176E-04, 4.08991E-04, 4.24776E-04, 3.56412E-04, 
     X 3.84760E-04, 2.30602E-04, 1.77702E-04, 2.62329E-04, 2.49442E-04, 
     X 3.76212E-04, 3.69176E-04, 2.97681E-04, 2.71662E-04, 2.05694E-04, 
     X 2.11418E-04, 2.25439E-04, 2.27013E-04, 2.47845E-04, 3.14603E-04, 
     X 2.68802E-04, 2.04334E-04, 2.77399E-04, 2.68273E-04, 2.04991E-04, 
     X 2.24441E-04, 3.55074E-04, 2.90135E-04, 3.35680E-04, 3.59358E-04, 
     X 3.44716E-04, 3.24496E-04, 3.48146E-04, 3.49042E-04, 3.54848E-04, 
     X 3.86418E-04, 3.59198E-04, 3.47608E-04, 3.20522E-04, 2.78401E-04, 
     X 2.64579E-04, 2.23694E-04, 2.34370E-04, 2.52559E-04, 1.88475E-04, 
     X 2.01258E-04, 1.63979E-04, 1.45384E-04, 1.91215E-04, 1.76958E-04, 
     X 1.69167E-04, 1.71767E-04, 1.86595E-04, 2.14969E-04, 2.48345E-04, 
     X 2.46691E-04, 2.25234E-04, 2.26755E-04, 1.64112E-04, 1.87750E-04, 
     X 2.22984E-04, 2.00443E-04, 2.38863E-04, 2.77590E-04, 2.91953E-04, 
     X 2.80611E-04, 3.08215E-04, 1.79095E-04, 1.46920E-04, 2.29177E-04, 
     X 2.54685E-04, 2.68866E-04, 2.13346E-04, 1.20122E-04, 5.55240E-05/ 
      DATA C11361 /                                                     
     X 5.99017E-05, 1.07768E-04, 1.67810E-04, 2.06886E-04, 2.36232E-04, 
     X 2.24598E-04, 2.30792E-04, 2.71274E-04, 1.29062E-04, 1.92624E-04, 
     X 2.38438E-04, 1.98994E-04, 1.81687E-04, 2.55733E-04, 2.84379E-04, 
     X 2.54459E-04, 2.30884E-04, 2.68873E-04, 3.07231E-04, 3.15063E-04, 
     X 2.46725E-04, 2.60370E-04, 2.66391E-04, 2.50708E-04, 2.04296E-04, 
     X 1.66011E-04, 1.19164E-04, 1.06700E-04, 1.77576E-04, 1.91741E-04, 
     X 1.66618E-04, 1.49824E-04, 1.80699E-04, 2.20905E-04, 1.38754E-04, 
     X 6.27971E-05, 7.52567E-05, 1.89995E-04, 1.72489E-04, 1.40424E-04, 
     X 1.52384E-04, 1.63942E-04, 1.19901E-04, 1.49234E-04, 2.68313E-04, 
     X 2.08815E-04, 1.17218E-04, 1.42235E-04, 2.71237E-04, 1.38192E-04, 
     X 2.15643E-04, 2.84476E-04, 2.78117E-04, 2.19234E-04, 1.59128E-04, 
     X 1.78819E-04, 2.67785E-04, 2.66786E-04, 2.58545E-04, 2.68476E-04, 
     X 2.88542E-04, 2.59726E-04, 3.00936E-04, 3.11237E-04, 2.61275E-04, 
     X 1.37136E-04, 2.76566E-04, 3.82888E-04, 3.97564E-04, 4.43655E-04, 
     X 3.15415E-04, 2.60869E-04, 3.19171E-04, 3.34205E-04, 2.02914E-04, 
     X 1.16223E-04, 1.14737E-04, 6.10978E-05,-8.03695E-06,-1.07062E-05/ 
      DATA C11441 /                                                     
     X 6.50664E-05, 1.12586E-04, 1.56727E-04, 1.57927E-04, 1.05762E-04, 
     X 1.03646E-04, 1.72520E-04, 2.23668E-04, 2.12775E-04, 2.33525E-04, 
     X 2.75558E-04, 2.34256E-04, 5.10062E-05, 1.76007E-04, 1.70850E-04, 
     X 1.43266E-04, 1.89626E-04, 2.97283E-04, 3.02773E-04, 2.74401E-04, 
     X 3.00754E-04, 3.66813E-04, 3.54383E-04, 2.90580E-04, 2.32206E-04, 
     X 1.58405E-04, 1.54663E-04, 1.84598E-04, 1.26408E-04, 2.14481E-04, 
     X 2.00791E-04, 1.05796E-04, 2.39794E-04, 1.66105E-04, 7.88615E-05, 
     X 4.30615E-05, 7.37518E-05, 1.24926E-04, 1.38295E-04, 8.54356E-05, 
     X 6.12641E-05, 6.54466E-05, 6.17727E-05, 1.30688E-05, 6.00462E-05, 
     X 1.52612E-04, 2.11656E-04, 9.67692E-05, 8.67858E-05, 1.34888E-04, 
     X 1.90899E-04, 1.03234E-04, 1.03837E-04, 1.49767E-04, 2.19058E-04, 
     X 2.26549E-04, 2.11506E-04, 1.85238E-04, 1.53774E-04, 1.32313E-04, 
     X 6.10658E-05, 2.37782E-05, 1.24450E-04, 1.87610E-04, 1.44775E-04, 
     X 5.60937E-05, 6.64032E-05, 1.28073E-04, 1.77512E-04, 1.84684E-04, 
     X 5.73677E-05, 5.29679E-05, 9.95510E-05, 1.61423E-04, 3.19036E-04, 
     X 3.17383E-04, 2.36505E-04, 1.80844E-04, 1.63722E-04, 1.21478E-04/ 
      DATA C11521 /                                                     
     X 6.85823E-05, 7.42058E-05, 1.14838E-04, 1.21131E-04, 8.01009E-05, 
     X 1.52058E-04, 2.18368E-04, 2.53416E-04, 2.27116E-04, 1.25336E-04, 
     X 6.26421E-05, 5.32471E-05, 1.34705E-04, 2.07005E-05,-5.18630E-05, 
     X-3.25696E-05,-8.06171E-05,-1.09430E-04,-1.05637E-04,-4.96066E-05, 
     X-7.76138E-05,-4.85930E-05, 3.65111E-06,-2.86933E-05,-4.61366E-05, 
     X-4.88820E-05,-3.08816E-05, 8.43778E-05, 1.40484E-04, 1.31125E-04, 
     X 3.55198E-05, 8.47412E-05, 1.23408E-04, 1.36799E-04, 1.21147E-04, 
     X 1.25585E-04, 1.32337E-04, 1.34092E-04, 1.26652E-04, 1.12131E-04, 
     X 1.00927E-04, 1.13828E-04, 1.06053E-04, 9.43643E-05, 8.33628E-05, 
     X 8.65842E-05, 7.59315E-05, 8.28623E-05, 1.39681E-04, 1.80492E-04, 
     X 1.65779E-04, 1.03843E-04, 3.10284E-05, 1.94408E-05, 4.57525E-05, 
     X 1.02436E-04, 1.39750E-04, 1.43342E-04, 1.11999E-04, 2.94197E-05, 
     X 2.76980E-05, 5.51685E-05, 9.39909E-05, 1.16108E-04, 7.72703E-05, 
     X 4.37409E-05, 1.13925E-04, 8.18872E-05, 2.87657E-05,-2.41413E-05, 
     X 1.24699E-05, 2.19589E-05,-5.88247E-06,-9.66151E-05,-2.06255E-05, 
     X-1.83148E-06,-5.63625E-05,-8.65590E-05,-8.26020E-05,-5.06239E-05/ 
      DATA C11601 /                                                     
     X 1.28065E-05,-1.34669E-05, 1.59701E-05, 9.44755E-05, 1.63032E-05, 
     X 2.51304E-05, 7.38226E-05, 1.28405E-04, 1.17413E-04, 9.92387E-05, 
     X 9.51533E-05, 2.17008E-04, 2.25854E-04, 1.90448E-04, 1.77207E-04, 
     X 1.80844E-04, 1.53501E-04, 9.80430E-05, 1.27404E-04, 1.16465E-04, 
     X 9.98611E-05, 1.25556E-04, 1.73627E-04, 1.12347E-04,-7.73523E-05, 
     X 5.66599E-05, 5.36347E-05, 1.20227E-06, 6.96325E-05, 4.79010E-05, 
     X-1.09886E-05,-9.16457E-05,-7.09170E-05,-5.31410E-05,-2.68376E-05, 
     X 6.32641E-05, 8.06052E-06,-4.99262E-05,-2.56644E-05,-8.76854E-05, 
     X-8.21360E-05,-5.02403E-06, 4.66629E-05, 6.93127E-05, 5.53828E-05, 
     X-2.32399E-05,-2.07514E-05,-7.33240E-05,-2.10483E-04,-1.53757E-04, 
     X-7.13861E-05,-1.07356E-05,-1.26578E-04,-7.48854E-05, 3.25418E-06, 
     X 2.97068E-05, 3.35685E-05, 3.15022E-05, 2.68904E-05, 3.87401E-05, 
     X 5.12522E-05, 5.12172E-05, 1.05053E-05, 1.65321E-05, 3.47537E-05, 
     X 5.62503E-05, 4.18666E-05, 3.13970E-05, 3.11750E-05, 7.21547E-05, 
     X 2.55262E-05,-2.76061E-05, 5.43449E-06,-5.20575E-05,-1.08627E-04, 
     X-1.40475E-04,-1.59926E-04,-1.32237E-04,-8.15458E-05,-1.31738E-04/ 
      DATA C11681 /                                                     
     X-1.64036E-04,-1.69351E-04,-1.24797E-04,-1.61950E-04,-2.01904E-04, 
     X-2.22995E-04,-1.87647E-04,-1.70817E-04,-1.64583E-04,-1.12811E-04, 
     X-8.38306E-05,-8.62707E-05,-1.54362E-04,-1.98090E-04,-2.12920E-04, 
     X-1.89358E-04,-2.02988E-04,-1.72791E-04,-1.02863E-04,-1.09877E-04, 
     X-1.04257E-04,-8.20734E-05,-2.18346E-05,-2.94593E-05,-4.18226E-05, 
     X-1.86891E-05,-6.14620E-05,-3.21912E-05, 1.00844E-04, 6.92419E-05, 
     X 3.16713E-05, 5.62042E-07, 5.18900E-05, 7.48835E-05, 8.03381E-05, 
     X 7.24685E-05, 9.55588E-05, 9.22801E-05, 2.87159E-05, 2.26234E-05, 
     X 2.62790E-05, 3.58332E-05, 6.23297E-05, 5.01998E-05, 1.81446E-05, 
     X 3.33564E-05, 3.97765E-06,-2.60624E-05, 7.01802E-06,-4.16797E-05, 
     X-8.70108E-05,-8.22182E-05,-6.64886E-05,-7.88704E-05,-1.28305E-04, 
     X-1.29990E-04,-1.12646E-04,-8.68394E-05,-1.29584E-04,-1.44352E-04, 
     X-1.42082E-04,-1.33790E-04,-1.27963E-04,-1.21233E-04,-1.09965E-04, 
     X-1.02233E-04,-1.03804E-04,-1.19503E-04,-7.74707E-05,-4.66805E-05, 
     X-3.52201E-05,-4.07406E-05,-4.66887E-05,-5.05962E-05,-3.30333E-05, 
     X-3.47981E-05,-3.60962E-05, 1.44242E-05, 4.10478E-05, 3.68984E-05/ 
      DATA C11761 /                                                     
     X-2.81300E-05, 2.83171E-05, 7.48062E-05, 4.29333E-05, 8.50076E-06, 
     X 4.98135E-06, 4.44854E-05, 2.51860E-05, 3.12189E-05, 6.39424E-05, 
     X 7.20715E-05, 9.89688E-05, 1.33768E-04, 1.07781E-04, 9.76731E-05, 
     X 9.21479E-05, 6.72624E-05, 5.41295E-05, 4.89022E-05, 5.28039E-05, 
     X-4.48737E-06,-5.15409E-05,-3.57396E-05,-1.94752E-05,-2.09521E-05, 
     X-5.13096E-05,-2.62781E-05,-2.75451E-05,-6.98423E-05,-1.25462E-04, 
     X-1.68362E-04,-1.97456E-04,-1.90669E-04,-2.06890E-04,-2.36699E-04, 
     X-1.97732E-04,-1.76504E-04,-1.67505E-04,-1.60694E-04,-1.85851E-04, 
     X-2.01567E-04,-9.82507E-05,-1.33338E-04,-1.95199E-04,-1.40781E-04, 
     X-8.90988E-05,-3.63239E-05, 2.16510E-05,-1.56807E-05,-4.21285E-05, 
     X 5.50505E-06, 6.78937E-07, 3.12346E-06, 3.64202E-05, 3.50651E-05, 
     X 6.20423E-05, 1.38667E-04, 7.74738E-05, 6.77036E-05, 1.38367E-04, 
     X 1.17359E-04, 1.06637E-04, 1.12404E-04, 9.78586E-05, 1.03178E-04, 
     X 1.28717E-04, 1.56642E-04, 1.62544E-04, 1.50109E-04, 1.43214E-04, 
     X 1.33651E-04, 1.24352E-04, 1.41420E-04, 1.36340E-04, 1.18769E-04, 
     X 1.31656E-04, 8.81533E-05, 1.55214E-05,-3.68736E-07,-1.76213E-05/ 
      DATA C11841 /                                                     
     X-2.85341E-05, 4.65155E-06, 5.41350E-06,-7.01247E-06, 6.57918E-06, 
     X-2.45784E-05,-6.89104E-05,-6.90953E-05,-6.23937E-05,-6.72978E-05, 
     X-1.39547E-04,-1.44228E-04,-1.42543E-04,-2.31080E-04,-2.12756E-04, 
     X-1.62089E-04,-1.66063E-04,-1.61872E-04,-1.59764E-04,-1.80217E-04, 
     X-1.38355E-04,-8.45661E-05,-7.58308E-05,-4.65144E-05,-2.76855E-05, 
     X-7.48714E-05,-8.28561E-05,-6.45277E-05,-7.08509E-06,-1.05566E-05, 
     X-1.96352E-05, 3.55561E-05, 2.24676E-05,-1.25648E-05,-1.87661E-05, 
     X 6.99061E-06, 2.33676E-05,-5.25111E-05,-3.86758E-05, 1.03585E-06, 
     X-1.65901E-05,-1.04855E-05, 5.03694E-06, 1.25937E-05,-8.31340E-06, 
     X-4.37906E-05,-7.91444E-05,-4.62167E-05, 5.14238E-06,-4.52863E-05, 
     X-5.86455E-05,-4.98093E-05,-3.03495E-05,-5.09377E-05,-8.88116E-05, 
     X-6.21360E-05,-7.38148E-05,-1.07502E-04,-7.55276E-05,-6.39257E-05, 
     X-6.86921E-05,-8.05504E-05,-9.24178E-05,-1.03991E-04,-1.00468E-04, 
     X-6.71447E-05,-3.84897E-06,-5.99067E-06,-2.21894E-05,-5.21766E-05, 
     X-3.93796E-05,-4.06712E-05,-6.21649E-05,-1.13073E-04,-1.20560E-04, 
     X-5.92397E-05, 5.24432E-05, 9.41628E-05,-3.47458E-07, 5.33267E-05/ 
      DATA C11921 /                                                     
     X 8.92961E-05, 2.75694E-05,-7.48460E-06,-2.15504E-05, 1.05501E-06, 
     X 6.30910E-06, 5.94620E-07,-2.45194E-05,-1.59657E-05, 7.93610E-07, 
     X-1.05319E-05,-2.36584E-05,-3.95700E-05,-6.57225E-05,-5.23797E-05, 
     X-1.82588E-05,-1.43240E-05,-3.29989E-05,-6.48909E-05,-2.41326E-05, 
     X-1.89195E-05,-4.64607E-05,-1.00739E-05,-1.35033E-05,-6.49945E-05, 
     X-5.19986E-05,-6.68505E-05,-1.31530E-04,-1.45464E-04,-1.46815E-04, 
     X-1.39684E-04,-1.23205E-04,-1.26738E-04,-1.93822E-04,-2.37508E-04, 
     X-2.52917E-04,-1.91110E-04,-1.36217E-04,-9.41093E-05,-1.20601E-04, 
     X-1.17295E-04,-9.57420E-05,-1.57227E-04,-1.62795E-04,-1.12201E-04, 
     X-1.20419E-04,-1.10597E-04,-7.61223E-05,-6.27167E-05,-5.54733E-05, 
     X-5.50437E-05,-5.14148E-05,-3.59591E-05, 1.09906E-05, 5.94396E-06, 
     X-1.38597E-05,-8.80857E-06,-3.13101E-05,-6.31715E-05,-4.04264E-05, 
     X-1.66405E-05, 7.94396E-06,-3.41772E-06,-4.03175E-05,-1.06888E-04, 
     X-9.50526E-05,-7.46111E-05,-5.09617E-05,-6.70981E-05,-7.93529E-05, 
     X-5.58423E-05,-1.01523E-04,-1.62269E-04,-1.69958E-04,-1.37786E-04, 
     X-8.79862E-05,-1.46838E-04,-1.66938E-04,-1.51380E-04,-1.62184E-04/ 
      DATA C12001 /                                                     
     X-1.61105E-04,-1.42088E-04,-1.57033E-04,-1.65294E-04,-1.45079E-04, 
     X-9.76982E-05,-6.09891E-05,-1.01719E-04,-1.03049E-04,-8.85546E-05, 
     X-1.47754E-04,-1.44542E-04,-8.34620E-05,-8.99440E-05,-7.11901E-05, 
     X-1.57480E-05,-8.81797E-05,-1.56314E-04,-1.65952E-04,-1.80986E-04, 
     X-2.04610E-04,-2.58669E-04,-2.16016E-04,-1.21582E-04,-1.44929E-04, 
     X-1.72886E-04,-2.05950E-04,-1.93829E-04,-1.67518E-04,-1.22969E-04, 
     X-1.13060E-04,-1.14854E-04,-1.26198E-04,-1.24288E-04,-1.19519E-04, 
     X-1.50456E-04,-1.53286E-04,-1.32231E-04,-7.42672E-05,-2.23129E-05, 
     X 1.79115E-05, 1.42073E-05,-1.21676E-05,-7.56567E-05,-1.03423E-04, 
     X-1.10373E-04,-8.77244E-05,-6.43485E-05,-4.05156E-05,-6.24405E-05, 
     X-5.70375E-05,-2.36695E-06,-3.75929E-05,-7.97119E-05,-6.70419E-05, 
     X-6.99475E-05,-8.19748E-05,-1.06895E-04,-1.31422E-04,-1.55438E-04, 
     X-1.61937E-04,-1.62626E-04,-1.54977E-04,-1.77814E-04,-2.00386E-04, 
     X-1.87407E-04,-2.07243E-04,-2.44672E-04,-2.19014E-04,-2.13695E-04, 
     X-2.32440E-04,-1.85194E-04,-1.51172E-04,-1.69834E-04,-1.73780E-04, 
     X-1.75232E-04,-2.00698E-04,-1.82826E-04,-1.27786E-04,-1.33633E-04/ 
      DATA C12081 /                                                     
     X-1.21317E-04,-7.50390E-05,-1.06743E-04,-1.40805E-04,-1.06336E-04, 
     X-9.46654E-05,-9.78182E-05,-1.19906E-04,-1.14160E-04,-7.28186E-05, 
     X-1.07652E-04,-1.20978E-04,-3.79658E-05,-3.16113E-05,-6.02417E-05, 
     X-7.51148E-05,-5.56145E-05,-6.77421E-06,-1.74321E-05,-4.67952E-05, 
     X-1.05000E-04,-6.29932E-05,-4.74356E-06,-2.83397E-05,-4.65192E-05, 
     X-6.04574E-05,-4.33970E-05,-3.18311E-05,-3.02321E-05,-4.49667E-05, 
     X-6.85347E-05,-1.11375E-04,-1.16293E-04,-9.38757E-05,-1.38594E-04, 
     X-1.60483E-04,-1.48344E-04,-1.33436E-04,-1.27387E-04,-1.59508E-04, 
     X-1.74026E-04,-1.72170E-04,-1.49196E-04,-1.33233E-04,-1.22382E-04, 
     X-1.78156E-04,-2.21349E-04,-2.41846E-04,-2.06549E-04,-1.68283E-04, 
     X-1.89512E-04,-1.44523E-04,-4.67953E-05,-1.00334E-04,-1.23478E-04, 
     X-8.14024E-05,-9.18016E-05,-1.17536E-04,-1.36160E-04,-1.38780E-04, 
     X-1.27749E-04,-1.45598E-04,-1.55964E-04,-1.45120E-04,-1.25544E-04, 
     X-1.05692E-04,-1.17639E-04,-1.24142E-04,-1.24749E-04,-1.63878E-04, 
     X-1.97021E-04,-1.98617E-04,-2.69136E-04,-3.68357E-04,-2.33702E-04, 
     X-1.61830E-04,-1.78578E-04,-2.01839E-04,-2.28731E-04,-2.63606E-04/ 
      DATA C12161 /                                                     
     X-2.44698E-04,-1.86451E-04,-2.20546E-04,-2.22752E-04,-1.55169E-04, 
     X-1.25100E-04,-1.09794E-04,-9.59016E-05,-1.03857E-04,-1.35573E-04, 
     X-1.73780E-04,-1.82457E-04,-9.39821E-05,-1.18245E-04,-2.11563E-04, 
     X-1.37392E-04,-9.28173E-05,-9.71073E-05,-9.72535E-05,-9.39557E-05, 
     X-7.50117E-05,-6.70754E-05,-7.01186E-05,-5.76151E-05,-5.18785E-05, 
     X-7.14209E-05,-7.01682E-05,-5.61614E-05,-8.92769E-05,-1.06238E-04, 
     X-9.70294E-05,-6.70229E-05,-4.69214E-05,-1.53105E-04,-2.02326E-04, 
     X-1.90395E-04,-2.04367E-04,-2.16787E-04,-2.08725E-04,-1.78119E-04, 
     X-1.31043E-04,-1.32204E-04,-1.51522E-04,-2.05143E-04,-1.77144E-04, 
     X-1.16130E-04,-1.44440E-04,-1.66010E-04,-1.78206E-04,-1.61163E-04, 
     X-1.46351E-04,-1.96722E-04,-2.27027E-04,-2.37243E-04,-2.25235E-04, 
     X-1.99552E-04,-1.40238E-04,-1.26311E-04,-1.42746E-04,-1.19028E-04, 
     X-1.18750E-04,-1.72076E-04,-1.72120E-04,-1.48285E-04,-1.85116E-04, 
     X-1.98602E-04,-1.74016E-04,-1.37913E-04,-1.01221E-04,-9.69581E-05, 
     X-1.08794E-04,-1.39433E-04,-1.38575E-04,-1.32088E-04,-1.37431E-04, 
     X-1.30033E-04,-1.10829E-04,-1.35604E-04,-1.66515E-04,-1.98167E-04/ 
      DATA C12241 /                                                     
     X-1.97716E-04,-1.74019E-04,-1.64719E-04,-1.64779E-04,-1.85725E-04, 
     X-2.28526E-04,-2.84329E-04,-1.82449E-04,-1.30747E-04,-1.93620E-04, 
     X-2.28529E-04,-2.47361E-04,-1.90001E-04,-1.66278E-04,-2.02540E-04, 
     X-2.31811E-04,-2.53772E-04,-2.08629E-04,-1.85021E-04,-1.93989E-04, 
     X-2.16568E-04,-2.38288E-04,-1.94453E-04,-1.87154E-04,-2.30493E-04, 
     X-2.34696E-04,-2.30351E-04,-2.60562E-04,-2.86427E-04,-3.06699E-04, 
     X-2.79131E-04,-2.49392E-04,-3.03389E-04,-3.10346E-04,-2.61782E-04, 
     X-2.30905E-04,-2.11669E-04,-2.37680E-04,-2.38194E-04,-2.10955E-04/ 
      END                                                               
      BLOCK DATA BO3HH2                                                 
C>    BLOCK DATA                                                        
C                                                                       
C     RATIO (C2/C0)                                                     
C     DATA FROM BASS 1985                                               
C                                                                       
C     NOW INCLUDES MOLINA & MOLINA AT 273K WITH THE TEMPERATURE         
C     DEPENDENCE DETERMINED FROM THE 195K HARVARD MEASUREMENTS,         
C     EMPLOYING THE BASS ALGORITHM (CO(1+C1*T+C2*T2); THIS IS           
C     ONLY FOR THE WAVELENGTH RANGE FROM .34 TO .35 MICRONS;            
C     OTHERWISE, THE BASS DATA ALONE HAVE BEEN EMPLOYED BETWEEN         
C     .34 AND .245 MICRONS.                                             
C                                                                       
C     NEW T-DEPENDENT X-SECTIONS BETWEEN .345 AND .36 MICRONS           
C     HAVE NOW BEEN ADDED, BASED ON WORK BY CACCIANI, DISARRA           
C     AND FIOCCO, UNIVERSITY OF ROME, 1987.  QUADRATIC TEMP             
C     HAS BEEN DERIVED, AS ABOVE.                                       
C                                                                       
C     AGREEMENT AMONGST THE FOUR DATA SETS IS REASONABLE (<10%)         
C     AND OFTEN EXCELLENT (0-3%)                                        
C                                                                       
C                                                                       
      COMMON /O3HH2/  V1C,V2C,DVC,NC,                                   
     X           O32001(85),C20086(80),C20166(80),C20246(65),C20311(16),
     X           C20327(80),C20407(1),                                  
     X           C20001(80),C20081(80),C20161(80),C20241(80),C20321(80),
     X           C20401(80),C20481(80),C20561(80),C20641(80),C20721(80),
     X           C20801(80),C20881(80),C20961(80),C21041(80),C21121(80),
     X           C21201(80),C21281(80),C21361(80),C21441(80),C21521(80),
     X           C21601(80),C21681(80),C21761(80),C21841(80),C21921(80),
     X           C22001(80),C22081(80),C22161(80),C22241(40)            
C                                                                       
C     DATA V1C /29405./, V2C /40800./ ,DVC /5./, NC /2280/   BASS       
      DATA V1C /27370./, V2C /40800./ ,DVC /5./, NC /2687/              
C                                                                       
      DATA O32001/85*1.0E-5/                                            
                                                                        
      DATA C20086/                                                      
     X 1.29359E-05, 1.55806E-05, 2.00719E-05, 2.64912E-05, 3.48207E-05, 
     X 4.36986E-05, 5.31318E-05, 6.13173E-05, 6.89465E-05, 7.56793E-05, 
     X 8.26345E-05, 8.90916E-05, 9.38759E-05, 9.22998E-05, 9.03184E-05, 
     X 8.65369E-05, 8.58531E-05, 8.55635E-05, 8.40418E-05, 8.11983E-05, 
     X 7.58246E-05, 7.29282E-05, 7.32629E-05, 7.04060E-05, 6.71451E-05, 
     X 6.56515E-05, 6.68943E-05, 6.32785E-05, 5.88386E-05, 5.70860E-05, 
     X 5.64435E-05, 5.49441E-05, 5.70845E-05, 5.89357E-05, 6.14433E-05, 
     X 5.91790E-05, 5.31727E-05, 5.14007E-05, 4.74318E-05, 4.35356E-05, 
     X 3.93903E-05, 3.70963E-05, 3.63867E-05, 4.05296E-05, 4.48891E-05, 
     X 5.37190E-05, 5.70440E-05, 4.60408E-05, 5.25778E-05, 6.81728E-05, 
     X 7.27275E-05, 6.81353E-05, 6.48386E-05, 5.46521E-05, 4.93098E-05, 
     X 5.04438E-05, 5.30309E-05, 5.28788E-05, 5.47387E-05, 4.52523E-05, 
     X 5.29451E-05, 7.42215E-05, 1.08971E-04, 1.40085E-04, 1.46553E-04, 
     X 1.43526E-04, 1.39051E-04, 1.40983E-04, 1.45564E-04, 1.55589E-04, 
     X 1.66142E-04, 1.82840E-04, 2.06486E-04, 2.24339E-04, 2.29268E-04, 
     X 2.13109E-04, 2.00305E-04, 1.99955E-04, 2.18566E-04, 2.24182E-04/ 
      DATA C20166/                                                      
     X 2.33505E-04, 2.31824E-04, 2.22666E-04, 2.23905E-04, 2.38131E-04, 
     X 2.54322E-04, 2.69548E-04, 2.62953E-04, 2.67609E-04, 2.70567E-04, 
     X 2.70689E-04, 2.68251E-04, 2.66029E-04, 2.60053E-04, 2.61689E-04, 
     X 2.56582E-04, 2.43655E-04, 2.38792E-04, 2.45309E-04, 2.31061E-04, 
     X 2.22837E-04, 2.16440E-04, 2.19032E-04, 1.85634E-04, 1.74638E-04, 
     X 1.51767E-04, 1.38480E-04, 1.32506E-04, 1.28317E-04, 1.26855E-04, 
     X 1.27123E-04, 1.24040E-04, 1.19202E-04, 1.28649E-04, 1.36271E-04, 
     X 1.42080E-04, 1.47804E-04, 1.39534E-04, 1.27284E-04, 1.09554E-04, 
     X 8.69470E-05, 6.72096E-05, 5.23407E-05, 5.12433E-05, 5.15794E-05, 
     X 4.94683E-05, 4.95809E-05, 4.07499E-05, 3.14984E-05, 1.46457E-05, 
     X 6.98660E-06, 1.85313E-05, 5.48879E-05, 1.09447E-04, 1.52536E-04, 
     X 1.78778E-04, 1.91128E-04, 1.99161E-04, 2.02937E-04, 1.95527E-04, 
     X 1.92214E-04, 1.83376E-04, 1.81710E-04, 1.82283E-04, 1.75182E-04, 
     X 1.72406E-04, 1.68170E-04, 1.67400E-04, 1.69469E-04, 1.69092E-04, 
     X 1.65985E-04, 1.66912E-04, 1.74226E-04, 1.85036E-04, 1.85517E-04, 
     X 1.85805E-04, 1.73809E-04, 1.67628E-04, 1.57690E-04, 1.54952E-04/ 
      DATA C20246/                                                      
     X 1.53707E-04, 1.57710E-04, 1.58175E-04, 1.67253E-04, 1.82079E-04, 
     X 1.91285E-04, 1.96564E-04, 2.03822E-04, 1.93736E-04, 1.82924E-04, 
     X 1.73610E-04, 1.69904E-04, 1.66725E-04, 1.63747E-04, 1.63129E-04, 
     X 1.62435E-04, 1.67218E-04, 1.69507E-04, 1.70744E-04, 1.65839E-04, 
     X 1.72077E-04, 1.67734E-04, 1.51487E-04, 1.43770E-04, 1.37435E-04, 
     X 1.25172E-04, 1.12395E-04, 1.07991E-04, 1.00345E-04, 9.36611E-05, 
     X 9.59763E-05, 9.26600E-05, 1.00120E-04, 1.04746E-04, 1.10222E-04, 
     X 1.03308E-04, 8.97457E-05, 7.91634E-05, 7.50275E-05, 8.30832E-05, 
     X 1.01191E-04, 1.21560E-04, 1.34840E-04, 1.38712E-04, 1.41746E-04, 
     X 1.39578E-04, 1.37052E-04, 1.33850E-04, 1.26641E-04, 1.21342E-04, 
     X 1.17669E-04, 1.25973E-04, 1.33623E-04, 1.33839E-04, 1.24427E-04, 
     X 1.02462E-04, 8.76101E-05, 8.27912E-05, 8.29040E-05, 7.78590E-05, 
     X 7.39042E-05, 6.45765E-05, 5.70151E-05, 5.11846E-05, 4.83163E-05/ 
      DATA C20311/                                                      
     X                                                     5.4470E-05,  
     X 5.3312E-05,  5.3135E-05,  5.3619E-05,  5.3686E-05,  5.2308E-05,  
     X 5.0441E-05,  4.8402E-05,  4.7476E-05,  4.6215E-05,  4.4507E-05,  
     X 4.3830E-05,  4.0508E-05,  3.8931E-05,  3.5525E-05,  3.4722E-05/  
      DATA C20327/                                                      
     X 3.2743E-05,  2.8456E-05,  2.8318E-05,  2.8132E-05,  2.6221E-05,  
     X 2.5673E-05,  2.5521E-05,  2.4588E-05,  2.4093E-05,  2.2787E-05,  
     X 2.1241E-05,  1.8553E-05,  1.5871E-05,  1.3462E-05,  1.2553E-05,  
     X 1.6276E-05,  2.8296E-05,  3.8817E-05,  4.2733E-05,  4.2429E-05,  
     X 4.0954E-05,  3.9868E-05,  3.7669E-05,  3.6312E-05,  3.5535E-05,  
     X 3.5895E-05,  3.6349E-05,  3.9033E-05,  4.4512E-05,  5.0066E-05,  
     X 5.4572E-05,  5.6710E-05,  5.6615E-05,  5.7520E-05,  5.8034E-05,  
     X 5.7927E-05,  5.6027E-05,  5.5242E-05,  5.4974E-05,  5.2927E-05,  
     X 5.1638E-05,  5.2027E-05,  5.1420E-05,  5.1618E-05,  5.0253E-05,  
     X 5.0509E-05,  4.9376E-05,  5.0135E-05,  4.9191E-05,  4.9210E-05,  
     X 4.8216E-05,  4.7487E-05,  4.5749E-05,  4.5884E-05,  4.3852E-05,  
     X 4.3824E-05,  4.2612E-05,  4.0349E-05,  4.0177E-05,  3.7474E-05,  
     X 3.8120E-05,  3.6915E-05,  3.5823E-05,  3.5186E-05,  3.3638E-05,  
     X 3.3451E-05,  3.2428E-05,  3.2349E-05,  3.0183E-05,  2.8436E-05,  
     X 2.6440E-05,  2.3597E-05,  2.1875E-05,  1.8164E-05,  1.6430E-05,  
     X 1.3159E-05,  9.2907E-06,  7.4243E-06,  6.0469E-06,  5.4951E-06/  
      DATA C20407/                                                      
     X 8.7642E-06/                                                      
      DATA C20001 /                                                     
     X 2.16295E-05, 1.69111E-05, 5.39633E-05, 1.01866E-04, 8.28657E-05, 
     X 9.16593E-05, 8.88666E-05, 1.37764E-04, 1.44322E-04, 1.20659E-04, 
     X 1.10332E-04, 1.01317E-04, 9.09964E-05, 1.17148E-04, 1.18000E-04, 
     X 7.21801E-05, 1.10550E-04, 1.32672E-04, 1.02474E-04, 1.10434E-04, 
     X 1.38759E-04, 8.92135E-05, 9.18239E-05, 9.08256E-05, 7.02969E-05, 
     X 1.12827E-04, 8.25561E-05, 1.39555E-04, 6.72239E-05, 7.82804E-05, 
     X 8.56258E-05, 8.61068E-05, 7.16732E-05, 6.25720E-05, 5.23957E-05, 
     X 3.78801E-05, 4.37281E-05, 4.99821E-05, 5.96976E-05, 7.19070E-05, 
     X 3.89579E-05, 5.30171E-05, 3.92507E-05, 4.93901E-05, 4.53047E-05, 
     X 4.89955E-05, 4.61649E-05, 3.75742E-05, 3.14124E-05, 2.37893E-05, 
     X 3.34899E-06, 3.08080E-05, 5.35883E-05, 3.39838E-05, 7.02334E-05, 
     X 7.24784E-05, 7.46533E-05, 6.22257E-05, 6.38945E-05, 6.73423E-05, 
     X 4.51321E-05, 5.91854E-05, 5.51601E-05, 4.41923E-05, 3.59217E-05, 
     X 4.08520E-05, 6.15981E-05, 6.66549E-05, 8.26031E-05, 1.13556E-04, 
     X 8.72988E-05, 9.71052E-05, 9.31839E-05, 8.73745E-05, 8.61717E-05, 
     X 6.05645E-05, 6.51131E-05, 6.93393E-05, 7.01096E-05, 6.43565E-05/ 
      DATA C20081 /                                                     
     X 7.36929E-05, 7.66881E-05, 7.60815E-05, 7.13570E-05, 8.40487E-05, 
     X 8.51489E-05, 7.54168E-05, 6.72694E-05, 4.75508E-05, 3.59379E-05, 
     X 4.24698E-05, 4.17850E-05, 4.56047E-05, 4.12779E-05, 4.55933E-05, 
     X 4.27941E-05, 4.42230E-05, 3.68525E-05, 3.83392E-05, 3.83722E-05, 
     X 4.64904E-05, 3.33878E-05, 3.53027E-05, 3.54694E-05, 2.36233E-05, 
     X 2.99641E-05, 2.56097E-05, 2.14134E-05, 2.74403E-05, 2.83896E-05, 
     X 3.17082E-05, 1.75526E-05, 2.80382E-05, 3.18009E-05, 4.08715E-05, 
     X 4.77807E-05, 5.00609E-05, 5.12459E-05, 4.44062E-05, 4.74942E-05, 
     X 4.99882E-05, 5.18837E-05, 5.03246E-05, 5.55168E-05, 5.35853E-05, 
     X 4.81834E-05, 6.66231E-05, 5.26670E-05, 6.84700E-05, 6.53412E-05, 
     X 5.71740E-05, 4.61076E-05, 3.90239E-05, 4.72924E-05, 6.32194E-05, 
     X 5.20868E-05, 4.81039E-05, 3.71748E-05, 4.37492E-05, 3.63959E-05, 
     X 3.79823E-05, 3.72225E-05, 3.02360E-05, 3.22961E-05, 3.43398E-05, 
     X 3.57176E-05, 2.65446E-05, 3.29388E-05, 1.65455E-05, 2.66173E-05, 
     X 1.74277E-05, 1.74324E-05, 1.27879E-05, 1.46247E-05, 1.92378E-05, 
     X 2.20049E-05, 1.44790E-05, 2.49244E-05, 2.29209E-05, 1.76192E-05/ 
      DATA C20161 /                                                     
     X 1.84528E-05, 2.54350E-05, 3.33972E-05, 3.69190E-05, 2.92139E-05, 
     X 2.47666E-05, 2.86764E-05, 1.48163E-05, 1.80461E-05, 2.84545E-05, 
     X 2.41064E-05, 2.85721E-05, 3.31996E-05, 3.75973E-05, 3.73874E-05, 
     X 4.69293E-05, 5.12665E-05, 5.35607E-05, 4.64577E-05, 3.59887E-05, 
     X 3.39168E-05, 3.89746E-05, 3.12196E-05, 3.70907E-05, 3.95172E-05, 
     X 4.61642E-05, 4.26029E-05, 4.17856E-05, 4.51437E-05, 4.04189E-05, 
     X 4.19251E-05, 4.53977E-05, 3.69860E-05, 4.20904E-05, 3.69735E-05, 
     X 3.57898E-05, 3.47729E-05, 3.14280E-05, 2.71197E-05, 3.34380E-05, 
     X 2.69843E-05, 2.88036E-05, 2.51912E-05, 2.45699E-05, 2.23184E-05, 
     X 2.50563E-05, 2.24493E-05, 1.77101E-05, 1.64763E-05, 1.34978E-05, 
     X 1.57081E-05, 1.45966E-05, 1.02722E-05, 2.07177E-05, 1.47662E-05, 
     X 1.50721E-05, 1.24431E-05, 1.51572E-05, 1.92210E-05, 2.06047E-05, 
     X 2.02921E-05, 3.22062E-05, 2.37112E-05, 1.94803E-05, 2.40726E-05, 
     X 2.11531E-05, 1.89158E-05, 2.46957E-05, 2.63175E-05, 2.57747E-05, 
     X 2.22047E-05, 2.52755E-05, 2.80848E-05, 3.75157E-05, 4.09915E-05, 
     X 4.04853E-05, 3.21661E-05, 3.15652E-05, 3.21576E-05, 3.67060E-05/ 
      DATA C20241 /                                                     
     X 3.13071E-05, 2.84939E-05, 2.71169E-05, 2.99559E-05, 2.94631E-05, 
     X 3.26716E-05, 2.99028E-05, 2.60045E-05, 3.15375E-05, 3.12895E-05, 
     X 2.77767E-05, 2.43976E-05, 2.10764E-05, 2.22725E-05, 2.04581E-05, 
     X 1.63509E-05, 1.60028E-05, 1.60294E-05, 1.62366E-05, 1.89293E-05, 
     X 1.79675E-05, 1.89259E-05, 1.68300E-05, 1.99460E-05, 2.42370E-05, 
     X 2.64738E-05, 1.93137E-05, 1.39460E-05, 1.32222E-05, 1.38752E-05, 
     X 1.62071E-05, 1.79652E-05, 1.63772E-05, 1.56251E-05, 1.81918E-05, 
     X 1.46111E-05, 2.92174E-05, 2.94263E-05, 2.46180E-05, 2.93333E-05, 
     X 3.13657E-05, 2.97686E-05, 2.78387E-05, 2.40924E-05, 2.93369E-05, 
     X 2.93747E-05, 2.77665E-05, 3.00814E-05, 3.01068E-05, 3.62275E-05, 
     X 3.56613E-05, 3.66913E-05, 3.56280E-05, 3.52856E-05, 3.63928E-05, 
     X 2.96738E-05, 2.90314E-05, 2.62972E-05, 2.15250E-05, 1.97910E-05, 
     X 2.02314E-05, 2.20209E-05, 2.05131E-05, 2.12017E-05, 1.96689E-05, 
     X 1.61907E-05, 1.57662E-05, 1.58239E-05, 1.54650E-05, 1.46376E-05, 
     X 1.32891E-05, 1.30511E-05, 1.17635E-05, 1.28585E-05, 1.12887E-05, 
     X 1.32627E-05, 1.31833E-05, 1.68679E-05, 1.98092E-05, 2.70744E-05/ 
      DATA C20321 /                                                     
     X 2.22033E-05, 1.63430E-05, 1.61104E-05, 1.50865E-05, 1.54382E-05, 
     X 1.55654E-05, 1.67924E-05, 1.89185E-05, 1.96791E-05, 2.14894E-05, 
     X 2.76137E-05, 2.67339E-05, 2.79423E-05, 2.54664E-05, 3.10707E-05, 
     X 2.72745E-05, 2.60940E-05, 2.47736E-05, 2.21105E-05, 2.20357E-05, 
     X 2.26499E-05, 2.34137E-05, 2.29537E-05, 2.36157E-05, 2.48244E-05, 
     X 2.26667E-05, 2.07781E-05, 2.11702E-05, 1.91214E-05, 1.62172E-05, 
     X 1.61285E-05, 1.63952E-05, 1.68156E-05, 1.61236E-05, 1.56611E-05, 
     X 1.47697E-05, 1.50856E-05, 1.44169E-05, 1.63816E-05, 1.74283E-05, 
     X 1.49853E-05, 1.62444E-05, 1.70007E-05, 1.60371E-05, 1.22713E-05, 
     X 1.45518E-05, 1.35051E-05, 1.40787E-05,-1.54925E-05,-2.15204E-05, 
     X-4.04516E-06, 2.22439E-05, 3.21262E-05, 3.83792E-05, 4.44462E-05, 
     X 4.44192E-05, 2.77328E-05, 4.10549E-06, 4.48758E-06,-1.27771E-05, 
     X-2.17204E-05,-1.23979E-05,-1.04928E-05, 7.43085E-06, 1.55350E-05, 
     X 3.15204E-05, 3.17601E-05, 2.93677E-05, 3.42485E-05, 3.87087E-05, 
     X 3.61242E-05, 2.62406E-05, 3.31686E-05, 3.54314E-05, 2.50625E-05, 
     X 2.60444E-05, 4.10729E-05, 3.47247E-05, 3.31716E-05, 3.34778E-05/ 
      DATA C20401 /                                                     
     X 4.03029E-05, 4.09241E-05, 3.96717E-05, 3.53410E-05, 2.81048E-05, 
     X 1.98891E-05, 1.92314E-05, 2.82525E-05, 3.76641E-05, 4.34135E-05, 
     X 4.24570E-05, 3.98429E-05, 3.29417E-05, 2.16679E-05, 8.88085E-06, 
     X-5.05319E-06,-8.14815E-06,-5.01930E-06, 7.13565E-06, 2.00949E-05, 
     X 2.65988E-05, 2.77656E-05, 2.09299E-05, 1.98968E-05, 2.04835E-05, 
     X 1.75254E-05, 6.48674E-06, 3.14323E-06, 1.93242E-06, 3.86745E-06, 
     X 1.39727E-05, 2.10731E-05, 2.66432E-05, 2.69551E-05, 2.57453E-05, 
     X 2.72834E-05, 2.58860E-05, 2.51266E-05, 1.76048E-05, 2.03072E-05, 
     X 2.61960E-05, 2.36230E-05, 1.81172E-05, 1.33972E-05, 1.60959E-05, 
     X 1.61081E-05, 2.34099E-05, 2.64979E-05, 2.36894E-05, 2.13665E-05, 
     X 2.16774E-05, 2.52566E-05, 1.99785E-05, 1.40414E-05, 1.39948E-05, 
     X 1.32637E-05, 7.24742E-06, 1.11395E-06,-1.27323E-06, 4.56637E-07, 
     X 6.93250E-06, 5.07198E-06, 7.90632E-06, 9.08149E-06, 1.03602E-05, 
     X 2.17425E-05, 2.71741E-05, 2.16875E-05, 1.95088E-05, 1.56568E-05, 
     X 8.41152E-06, 1.26749E-05, 1.17673E-05, 9.96037E-06, 1.21982E-05, 
     X 1.31854E-05, 1.50216E-05, 1.72214E-05, 2.02773E-05, 2.09625E-05/ 
      DATA C20481 /                                                     
     X 1.66656E-05, 1.45666E-05, 1.66608E-05, 2.04989E-05, 2.21395E-05, 
     X 2.35993E-05, 2.69390E-05, 2.13921E-05, 1.72643E-05, 1.70995E-05, 
     X 1.78241E-05, 1.85308E-05, 1.80360E-05, 1.48619E-05, 1.90369E-05, 
     X 1.51089E-05, 1.22705E-05, 1.62608E-05, 1.41637E-05, 1.23786E-05, 
     X 7.02677E-06, 8.89811E-06, 1.07379E-05, 1.23677E-05, 1.48196E-05, 
     X 2.05770E-05, 1.70994E-05, 1.00072E-05, 1.76119E-05, 1.41779E-05, 
     X 1.34358E-05, 1.58674E-05, 1.65837E-05, 1.69569E-05, 1.40381E-05, 
     X 1.46118E-05, 1.30556E-05, 1.97204E-05, 1.97488E-05, 1.64524E-05, 
     X 1.73764E-05, 1.66355E-05, 1.64419E-05, 1.65486E-05, 1.21523E-05, 
     X 1.51513E-05, 1.60354E-05, 1.38528E-05, 1.45538E-05, 1.71702E-05, 
     X 1.56336E-05, 1.31279E-05, 1.47346E-05, 1.70719E-05, 1.75588E-05, 
     X 1.55187E-05, 1.29598E-05, 1.38463E-05, 1.35382E-05, 1.16062E-05, 
     X 1.37014E-05, 1.34487E-05, 1.15536E-05, 1.33597E-05, 9.24478E-06, 
     X 7.28477E-06, 1.40321E-05, 1.31518E-05, 1.03118E-05, 8.59764E-06, 
     X 1.57138E-05, 1.20792E-05, 1.49440E-05, 1.34375E-05, 1.54686E-05, 
     X 1.65346E-05, 1.33823E-05, 1.37238E-05, 1.36128E-05, 1.46206E-05/ 
      DATA C20561 /                                                     
     X 1.40777E-05, 1.59980E-05, 1.30180E-05, 1.01390E-05, 1.12366E-05, 
     X 9.86099E-06, 1.10702E-05, 1.26783E-05, 9.51072E-06, 8.07299E-06, 
     X 1.22955E-05, 1.53506E-05, 1.29711E-05, 9.78759E-06, 1.28800E-05, 
     X 1.39702E-05, 1.64832E-05, 1.06473E-05, 1.15419E-05, 1.63795E-05, 
     X 1.69837E-05, 1.72726E-05, 1.77231E-05, 1.62337E-05, 1.20881E-05, 
     X 1.13210E-05, 1.20531E-05, 1.31374E-05, 1.22259E-05, 1.27802E-05, 
     X 1.38962E-05, 8.87355E-06, 9.42264E-06, 1.02075E-05, 7.91816E-06, 
     X 9.66835E-06, 1.24921E-05, 8.43227E-06, 1.10637E-05, 1.03958E-05, 
     X 9.40996E-06, 1.22922E-05, 1.21088E-05, 1.30116E-05, 1.18776E-05, 
     X 1.42245E-05, 1.34745E-05, 1.11165E-05, 1.29914E-05, 1.29801E-05, 
     X 1.10895E-05, 1.12331E-05, 9.03490E-06, 9.33726E-06, 9.63923E-06, 
     X 1.11299E-05, 9.53481E-06, 1.21708E-05, 1.11951E-05, 7.22558E-06, 
     X 6.66928E-06, 1.08926E-05, 1.07870E-05, 9.23485E-06, 8.50452E-06, 
     X 9.41914E-06, 8.74027E-06, 8.93322E-06, 9.79061E-06, 8.26490E-06, 
     X 8.37630E-06, 1.17064E-05, 1.10176E-05, 1.11587E-05, 9.45563E-06, 
     X 1.18352E-05, 7.79327E-06, 9.22766E-06, 1.01868E-05, 8.23925E-06/ 
      DATA C20641 /                                                     
     X 9.23706E-06, 1.04428E-05, 8.80392E-06, 9.37098E-06, 7.43126E-06, 
     X 7.01424E-06, 9.29360E-06, 8.97171E-06, 9.31718E-06, 9.87118E-06, 
     X 8.11419E-06, 8.77416E-06, 9.96927E-06, 8.87533E-06, 9.33163E-06, 
     X 7.41505E-06, 9.39988E-06, 1.17932E-05, 1.03287E-05, 9.17415E-06, 
     X 8.43035E-06, 8.00040E-06, 8.33346E-06, 7.66787E-06, 7.18411E-06, 
     X 1.06236E-05, 1.05559E-05, 8.49187E-06, 9.22472E-06, 8.16512E-06, 
     X 8.35687E-06, 1.06325E-05, 9.80273E-06, 9.01599E-06, 9.20499E-06, 
     X 9.98417E-06, 9.23191E-06, 6.98769E-06, 5.17748E-06, 4.57130E-06, 
     X 8.18492E-06, 9.98095E-06, 7.52148E-06, 1.33038E-05, 8.17630E-06, 
     X 1.02454E-05, 9.62706E-06, 9.44304E-06, 8.86704E-06, 8.88116E-06, 
     X 8.79062E-06, 8.20042E-06, 8.55789E-06, 9.26249E-06, 1.00467E-05, 
     X 7.96012E-06, 9.08773E-06, 1.01481E-05, 8.84360E-06, 7.94928E-06, 
     X 6.68425E-06, 8.56576E-06, 1.05282E-05, 1.10647E-05, 9.91625E-06, 
     X 7.95356E-06, 8.66443E-06, 9.13551E-06, 1.04870E-05, 9.79244E-06, 
     X 1.26214E-05, 8.42148E-06, 8.13468E-06, 1.11338E-05, 1.06780E-05, 
     X 8.54578E-06, 7.82119E-06, 8.33258E-06, 8.23644E-06, 5.95583E-06/ 
      DATA C20721 /                                                     
     X 5.85592E-06, 4.05898E-06, 6.39260E-06, 8.43280E-06, 8.76251E-06, 
     X 6.70423E-06, 6.81368E-06, 7.43506E-06, 7.14376E-06, 6.51065E-06, 
     X 5.65633E-06, 5.42394E-06, 7.10817E-06, 4.78831E-06, 6.29380E-06, 
     X 4.87344E-06, 6.81764E-06, 6.51611E-06, 5.70526E-06, 6.50590E-06, 
     X 6.61568E-06, 5.39248E-06, 6.32002E-06, 7.98976E-06, 7.73795E-06, 
     X 4.85788E-06, 5.83443E-06, 6.11694E-06, 5.40408E-06, 5.00946E-06, 
     X 5.62153E-06, 6.30263E-06, 6.05764E-06, 5.53274E-06, 5.80664E-06, 
     X 5.18684E-06, 6.85555E-06, 6.22889E-06, 6.06959E-06, 6.49228E-06, 
     X 5.64064E-06, 4.92690E-06, 5.77661E-06, 7.18450E-06, 7.38658E-06, 
     X 6.77379E-06, 5.74668E-06, 6.68355E-06, 6.13655E-06, 6.43266E-06, 
     X 7.08896E-06, 7.71187E-06, 7.37273E-06, 6.75882E-06, 6.39307E-06, 
     X 4.59520E-06, 5.10323E-06, 5.80178E-06, 6.88172E-06, 6.68825E-06, 
     X 7.50416E-06, 6.14975E-06, 6.51422E-06, 7.74942E-06, 8.11492E-06, 
     X 1.19607E-05, 7.92722E-06, 4.47848E-06, 6.02524E-06, 9.74067E-06, 
     X 1.02429E-05, 8.60819E-06, 8.57044E-06, 1.09196E-05, 1.02048E-05, 
     X 3.86222E-06, 9.26104E-06, 7.33341E-06, 9.08181E-06, 1.05569E-05/ 
      DATA C20801 /                                                     
     X 1.06776E-05, 1.10247E-05, 1.04520E-05, 8.78328E-06, 7.60679E-06, 
     X 7.27896E-06, 9.72776E-06, 5.16039E-06, 1.03134E-05, 1.09088E-05, 
     X 8.12575E-06, 7.61685E-06, 8.16346E-06, 5.91269E-06, 3.61448E-06, 
     X 8.74336E-06, 1.03990E-05, 6.25691E-06, 7.04541E-06, 7.94348E-06, 
     X 8.39807E-06, 8.67342E-06, 8.32173E-06, 7.56015E-06, 8.31782E-06, 
     X 6.36556E-06, 6.99328E-06, 6.24490E-06, 6.73080E-06, 6.95852E-06, 
     X 7.55508E-06, 7.74168E-06, 7.90414E-06, 8.94934E-06, 7.99809E-06, 
     X 6.12528E-06, 9.04115E-06, 7.14535E-06, 5.88625E-06, 6.43941E-06, 
     X 7.11566E-06, 7.47425E-06, 8.23805E-06, 6.19919E-06, 7.31614E-06, 
     X 8.24852E-06, 6.82172E-06, 5.45362E-06, 6.66115E-06, 8.44300E-06, 
     X 8.07530E-06, 7.22735E-06, 5.85614E-06, 5.13900E-06, 6.03215E-06, 
     X 6.59491E-06, 4.81592E-06, 4.48587E-06, 7.11525E-06, 8.36201E-06, 
     X 7.11669E-06, 2.80033E-06, 6.50756E-06, 9.43974E-06, 5.22402E-06, 
     X 3.82334E-06, 7.29963E-06, 8.62313E-06, 7.42018E-06, 4.56506E-06, 
     X 5.29972E-06, 5.62787E-06, 4.63852E-06, 5.18329E-06, 7.01884E-06, 
     X 7.24888E-06, 5.18157E-06, 5.40219E-06, 5.92412E-06, 4.97977E-06/ 
      DATA C20881 /                                                     
     X 5.29040E-06, 5.33812E-06, 4.76620E-06, 4.65759E-06, 5.10546E-06, 
     X 6.49525E-06, 4.43416E-06, 5.30223E-06, 3.27044E-06, 2.55324E-06, 
     X 4.85017E-06, 7.46556E-06, 8.04448E-06, 5.14009E-06, 6.09755E-06, 
     X 5.38381E-06, 6.41959E-06, 6.59233E-06, 4.83160E-06, 3.81289E-06, 
     X 5.37013E-06, 5.69212E-06, 5.54983E-06, 5.73495E-06, 4.00639E-06, 
     X 2.33817E-06, 2.55751E-06, 3.29627E-06, 3.59845E-06, 6.20623E-06, 
     X 4.47088E-06, 3.49267E-06, 3.09273E-06, 3.32506E-06, 4.83353E-06, 
     X 6.39001E-06, 3.78074E-06, 4.07848E-06, 4.01811E-06, 3.19767E-06, 
     X 3.34053E-06, 4.34246E-06, 3.68003E-06, 3.01090E-06, 3.98545E-06, 
     X 2.72338E-06, 1.90024E-06, 2.77553E-06, 3.73381E-06, 2.58685E-06, 
     X 1.70987E-06,-5.48480E-07, 1.64591E-06, 2.43481E-06, 2.52116E-06, 
     X 2.19316E-06, 1.32392E-06, 1.75370E-06, 2.65409E-07, 2.22278E-06, 
     X 2.53079E-06, 2.87260E-06, 1.87600E-06,-3.84453E-07, 1.80836E-06, 
     X 9.28123E-07, 1.94986E-06, 2.40483E-06, 2.79865E-06, 2.86361E-06, 
     X 2.63868E-06, 3.34704E-06, 3.32132E-06, 2.58463E-06, 2.45684E-06, 
     X 3.35043E-06, 3.19848E-06, 1.73037E-06, 2.98206E-06, 2.77491E-06/ 
      DATA C20961 /                                                     
     X 6.51674E-07, 2.52219E-06, 2.97136E-06, 1.96700E-06, 2.29350E-06, 
     X 3.01956E-06, 3.20811E-06, 1.30467E-06, 1.68172E-06, 2.56264E-06, 
     X 2.46167E-06, 1.78221E-06, 2.31647E-06, 2.69480E-06, 2.63619E-06, 
     X 1.81319E-06, 1.83448E-06, 2.23432E-06, 8.14045E-07, 8.75863E-07, 
     X 1.61350E-06, 1.59796E-06, 2.08419E-06, 1.89665E-06, 6.93584E-07, 
     X 1.09880E-06, 3.79031E-07,-3.36470E-07, 1.04326E-06, 1.06497E-06, 
     X 2.15108E-07, 3.28774E-07,-5.17613E-07, 1.27762E-06, 8.22924E-07, 
     X 4.92835E-07, 2.24698E-08,-1.99111E-07, 1.30262E-06,-3.81299E-07, 
     X 9.55084E-07, 2.17641E-07,-6.03874E-08, 8.44121E-07, 1.72391E-06, 
     X 1.66921E-06, 2.19855E-06, 1.17655E-06, 1.79637E-06, 3.31670E-06, 
     X 3.40206E-06, 6.05670E-07, 2.08299E-06, 2.10121E-06, 1.68598E-06, 
     X 2.21155E-06, 2.43221E-06, 5.81282E-08, 1.62613E-06,-5.49850E-07, 
     X 2.14143E-07, 1.21751E-06, 2.30470E-06, 4.27911E-06, 2.96622E-06, 
     X 8.67534E-07, 9.12041E-07, 2.48797E-06, 9.43519E-07,-3.60949E-06, 
     X 2.01928E-06, 1.88873E-06, 8.06749E-07, 7.33519E-07, 1.17440E-06, 
     X 1.69744E-06, 3.64492E-06, 3.11556E-06, 8.89471E-07, 1.93064E-06/ 
      DATA C21041 /                                                     
     X 3.02787E-06, 1.92575E-06, 1.73720E-06,-1.32700E-07, 1.41743E-06, 
     X 2.24632E-06, 2.47945E-06, 2.05151E-06,-9.56031E-07, 2.57317E-07, 
     X 3.00980E-06, 3.07981E-06, 2.78202E-06, 3.02555E-06, 5.48784E-09, 
     X 2.37693E-06, 2.90011E-06, 2.93608E-06, 2.14837E-06, 6.55832E-07, 
     X 3.41155E-07,-2.13884E-06, 2.52553E-06, 4.27109E-06, 3.33766E-06, 
     X 3.07708E-06, 2.66405E-06, 3.22850E-06,-5.78879E-07,-6.06194E-07, 
     X 1.72864E-06, 1.57072E-06,-3.39701E-07, 7.21540E-08, 1.67012E-06, 
     X 2.48568E-06, 2.70214E-06, 3.62383E-06, 2.20408E-06, 1.19395E-06, 
     X 1.53825E-06, 2.37511E-06, 2.66754E-06, 1.77020E-06, 5.40420E-07, 
     X 2.01156E-06, 3.27498E-06, 3.04720E-06, 1.96213E-06, 3.71633E-06, 
     X 2.07886E-06, 1.60069E-06, 5.33370E-07, 1.33966E-07, 2.16073E-06, 
     X 8.81457E-07, 1.12880E-06, 2.40509E-06, 2.94252E-06, 2.22899E-06, 
     X 1.80941E-06, 2.68577E-06, 2.44584E-06, 2.51720E-06, 2.64857E-06, 
     X 2.24182E-06, 1.62007E-06, 2.60421E-06, 3.09782E-06, 3.11099E-06, 
     X 3.81513E-06, 6.91606E-06, 3.28767E-06, 3.44175E-06, 4.16771E-06, 
     X 3.75452E-06, 2.21050E-06, 2.99939E-06, 2.86993E-06, 2.47080E-06/ 
      DATA C21121 /                                                     
     X 2.33607E-06, 2.68568E-06, 3.39344E-06, 6.09518E-06, 5.10422E-06, 
     X 4.04027E-06, 4.01363E-06, 4.53142E-06, 2.94424E-06, 4.76694E-06, 
     X 6.44206E-06, 7.86435E-06, 8.55564E-06, 6.00857E-06, 5.48073E-06, 
     X 1.56287E-06,-1.16619E-06,-1.85215E-06,-3.04762E-06,-3.45420E-07, 
     X 2.48111E-07,-1.39302E-07,-6.27593E-07,-5.26792E-07, 4.81454E-08, 
     X-3.08631E-08,-1.02976E-06,-1.54919E-06,-9.34044E-07,-1.02507E-06, 
     X-1.39794E-06,-1.15709E-06,-1.04875E-06,-1.64379E-06,-2.97514E-06, 
     X-3.22236E-07,-1.18978E-06,-2.85325E-06,-3.93143E-06,-4.15349E-06, 
     X-2.33228E-06,-3.27125E-06,-2.44987E-06,-1.44460E-06,-3.59727E-06, 
     X-7.18516E-07,-1.53237E-06,-1.53526E-06,-1.56450E-06,-2.91088E-06, 
     X-8.52134E-07,-1.44575E-07,-1.50350E-06,-2.92806E-06,-2.47710E-06, 
     X-9.71202E-07,-9.82754E-07,-1.09924E-06,-6.08199E-07, 3.62885E-07, 
     X-6.67372E-07,-1.00033E-06,-1.12001E-06,-1.06624E-06,-9.23789E-07, 
     X-9.83788E-07,-2.11656E-06,-2.45001E-06,-2.75874E-06,-3.36003E-06, 
     X-3.38364E-06,-2.63747E-06,-3.11047E-06,-3.75258E-06,-3.83211E-06, 
     X-3.52833E-06,-3.48464E-06,-3.77021E-06,-4.26887E-06,-4.23917E-06/ 
      DATA C21201 /                                                     
     X-1.42438E-06,-2.48477E-06,-2.84719E-06,-2.70247E-06,-2.50588E-06, 
     X-2.22900E-06,-1.78393E-06,-1.76826E-06,-2.16396E-06,-2.67543E-06, 
     X-2.23706E-06,-2.31793E-06,-2.87590E-06,-3.07803E-06,-2.50493E-06, 
     X-4.54223E-06,-5.15511E-06,-5.39690E-06,-4.89633E-06,-3.33710E-06, 
     X-4.56583E-06,-4.78877E-06,-3.93508E-06,-3.29027E-06,-4.95668E-06, 
     X-6.01801E-06,-5.76016E-06,-5.34657E-06,-5.29080E-06,-5.57133E-06, 
     X-5.73135E-06,-5.39374E-06,-5.09808E-06,-5.12874E-06,-5.20269E-06, 
     X-7.30702E-06,-7.04220E-06,-5.96514E-06,-5.74802E-06,-4.53961E-06, 
     X-4.42127E-06,-4.63922E-06,-4.80622E-06,-4.69659E-06,-5.96786E-06, 
     X-6.29800E-06,-4.75452E-06,-2.85907E-06,-5.33662E-06,-5.31681E-06, 
     X-5.04646E-06,-5.21729E-06,-5.93409E-06,-5.73462E-06,-5.44926E-06, 
     X-6.43325E-06,-7.74451E-06,-7.83147E-06,-5.51568E-06,-7.37048E-06, 
     X-4.25726E-06, 2.32917E-06,-5.61131E-07, 2.05234E-06, 3.74631E-07, 
     X-7.66493E-07, 1.42689E-06,-7.79683E-07, 9.06809E-07, 5.13642E-07, 
     X-1.52504E-06,-2.12058E-06,-2.50316E-06, 1.03637E-08, 5.60002E-07, 
     X-1.48075E-06, 1.94155E-06, 1.91846E-06, 2.78507E-06, 3.90146E-06/ 
      DATA C21281 /                                                     
     X 3.61409E-06, 3.23677E-06, 4.00022E-06, 3.19157E-06, 4.03034E-07, 
     X-2.03929E-06, 1.23366E-06, 3.28589E-06, 3.94168E-06, 3.94672E-06, 
     X 3.84619E-06, 2.30400E-07,-2.07799E-06,-1.75115E-06,-5.71958E-07, 
     X 2.33425E-06, 2.01664E-06, 6.05673E-07, 9.57363E-07,-8.89924E-07, 
     X-4.71331E-07, 2.82826E-07, 5.10859E-07, 3.63512E-07, 9.86288E-07, 
     X-4.86309E-07,-2.23163E-06,-1.23370E-06,-2.43131E-07,-2.11498E-06, 
     X-1.56756E-06, 2.70905E-06, 1.87606E-08, 7.83721E-08, 1.58444E-06, 
     X 2.88574E-06, 1.40306E-06, 2.40883E-06, 2.84063E-06, 3.13820E-06, 
     X 3.71016E-06, 3.12975E-06, 3.21981E-06, 2.56191E-06, 1.04624E-06, 
     X 1.87464E-07, 7.25329E-07, 1.03650E-06, 7.23663E-07,-4.18739E-07, 
     X 9.95744E-07,-1.80878E-07,-1.04044E-06, 3.86965E-07,-9.36186E-07, 
     X-4.02271E-07,-2.00231E-07,-5.94965E-07, 4.94038E-07, 3.34585E-07, 
     X 4.82255E-07, 1.12599E-06, 2.11763E-06, 2.66807E-07, 2.29324E-07, 
     X 7.07005E-07, 3.41907E-07,-1.17115E-07, 9.03089E-07, 1.76844E-06, 
     X 1.87134E-06, 2.64057E-06, 4.00395E-07,-4.19679E-07, 6.30769E-07, 
     X 1.02725E-06, 1.05876E-06,-4.08660E-07,-2.32668E-06,-2.73468E-06/ 
      DATA C21361 /                                                     
     X-2.40600E-06,-1.81203E-06,-7.96431E-07, 7.40789E-07, 2.73188E-07, 
     X 1.68367E-07,-1.27227E-07,-1.05041E-06,-3.51726E-06,-1.64956E-06, 
     X-5.63840E-07,-1.61242E-06,-1.33264E-06, 1.56604E-06, 2.35083E-06, 
     X 9.26708E-07, 5.41983E-07, 3.54277E-07, 8.53743E-07, 1.54196E-06, 
     X 1.19902E-06, 1.10552E-06, 1.63179E-06, 1.96366E-06, 7.82848E-07, 
     X-3.34741E-08,-7.90842E-07,-6.45131E-07, 1.36158E-06, 1.62453E-06, 
     X 6.68965E-07,-4.86203E-08, 6.83561E-07, 1.89652E-06,-2.80988E-07, 
     X-2.30536E-06,-1.90777E-06, 1.31617E-06, 1.27309E-06, 5.90825E-07, 
     X 5.65686E-07, 1.23631E-07,-1.70279E-06,-1.60768E-06, 9.69543E-07, 
     X 1.01108E-07,-2.02473E-06,-1.75146E-06, 6.33201E-07,-3.59110E-06, 
     X-9.71706E-07, 9.16822E-07, 1.40681E-07,-7.16745E-07,-2.11376E-06, 
     X-1.00951E-06, 2.12465E-06, 1.06982E-06, 1.44032E-06, 1.49692E-06, 
     X 1.07277E-06, 1.37006E-06, 1.66932E-06, 1.75820E-06, 1.41859E-06, 
     X-5.84947E-08, 2.17349E-06, 4.27053E-06, 5.27286E-06, 5.87085E-06, 
     X 2.42692E-06, 2.39305E-06, 6.19573E-06, 5.12518E-06, 1.27171E-06, 
     X-6.81963E-07, 4.16199E-08,-1.36608E-06,-2.53272E-06,-2.37700E-06/ 
      DATA C21441 /                                                     
     X-7.96719E-07, 3.85367E-07,-1.08393E-07,-9.04587E-07,-1.54917E-06, 
     X-3.11945E-06,-5.58484E-07, 1.61347E-06, 1.11736E-06, 2.11889E-06, 
     X 2.43534E-06, 1.46709E-06,-1.05429E-06, 1.09978E-06, 7.22493E-07, 
     X 8.53307E-08, 1.22733E-06, 2.99380E-06, 3.62416E-06, 3.81404E-06, 
     X 4.46735E-06, 4.70753E-06, 4.54494E-06, 3.83002E-06, 2.28067E-06, 
     X 2.03102E-06, 2.43844E-06, 2.93132E-06, 2.17555E-06, 3.92919E-06, 
     X 3.53089E-06, 1.61388E-06, 5.09498E-06, 3.40067E-06, 1.58876E-06, 
     X 1.17367E-06, 1.13344E-06, 1.17798E-06, 1.10976E-06, 7.90635E-07, 
     X-4.15989E-07,-1.00581E-06,-9.60236E-07,-1.79111E-07,-5.70733E-07, 
     X 1.49766E-06, 3.44374E-06, 6.45914E-07, 1.00532E-06, 2.01068E-06, 
     X 2.59092E-06, 9.35770E-08, 6.00121E-07, 1.54409E-06, 2.03537E-06, 
     X 8.10358E-07, 1.34126E-06, 1.88873E-06, 1.43283E-06,-2.05029E-07, 
     X-1.09782E-06,-6.56149E-07, 2.01650E-06, 1.84770E-06, 4.39586E-08, 
     X-2.03588E-06,-1.46366E-06,-3.45189E-07, 4.02577E-07, 3.10362E-07, 
     X-2.16073E-06,-1.91861E-06,-2.90520E-07, 2.03692E-06, 3.47996E-06, 
     X 4.21761E-06, 3.89000E-06, 1.86138E-06, 1.56143E-06, 4.88964E-07/ 
      DATA C21521 /                                                     
     X-9.28184E-07,-4.34315E-07, 8.74954E-07, 1.58417E-06, 1.36880E-06, 
     X 2.65016E-06, 4.62623E-06, 5.81990E-06, 4.72139E-06, 1.95905E-06, 
     X 1.54151E-06, 2.95768E-06, 4.71536E-06, 2.62359E-06, 9.11513E-07, 
     X 4.75677E-07,-1.53801E-06,-2.32382E-06,-2.25220E-06,-1.46641E-06, 
     X-2.23014E-06,-2.12604E-06,-1.66259E-06,-2.48856E-06,-2.38895E-06, 
     X-2.18158E-06,-1.95841E-06, 4.43899E-07, 1.08517E-06, 1.66370E-07, 
     X-2.42342E-06,-7.19331E-07, 3.19532E-07, 3.58690E-07,-2.01979E-07, 
     X 5.07242E-07, 1.10562E-06, 1.00419E-06, 1.22379E-06, 7.05180E-07, 
     X 1.42283E-07, 8.61092E-07, 8.95236E-07, 1.18043E-07,-1.23589E-06, 
     X-6.16316E-07,-1.18947E-06,-1.45838E-06,-1.47522E-09, 1.33867E-06, 
     X 9.18310E-07,-8.98949E-07,-2.27314E-06,-1.71510E-06,-7.16704E-07, 
     X 8.60666E-09, 5.68015E-07, 1.31219E-06, 1.75478E-06, 5.11790E-07, 
     X 3.35270E-07, 5.39243E-07, 9.08467E-07, 1.39382E-06, 1.08806E-06, 
     X 1.18589E-06, 3.58461E-06, 2.78668E-06, 1.25964E-06,-2.72255E-07, 
     X 1.72305E-06, 1.82937E-06, 7.46252E-07,-1.10555E-06, 2.24967E-07, 
     X 6.45674E-07,-1.87591E-07,-8.84068E-07,-1.75433E-06,-2.17670E-06/ 
      DATA C21601 /                                                     
     X-1.37112E-06,-2.31722E-06,-2.23860E-06,-1.16796E-06,-2.23765E-06, 
     X-1.86406E-06,-1.03517E-06,-5.90824E-07,-6.57710E-07,-7.00941E-07, 
     X-4.46064E-07, 1.77205E-06, 2.45066E-06, 2.39371E-06, 2.30736E-06, 
     X 2.35355E-06, 1.85070E-06, 9.62711E-07, 2.59644E-06, 2.05304E-06, 
     X 9.70090E-07, 1.50942E-06, 3.79439E-06, 2.94597E-06,-1.91789E-06, 
     X 6.44324E-08,-3.92094E-07,-1.55398E-06, 4.46701E-08,-4.78760E-07, 
     X-1.70061E-06,-3.17252E-06,-2.93173E-06,-2.01455E-06,-7.76298E-07, 
     X-2.74577E-07,-1.39907E-06,-2.16470E-06,-1.26010E-06,-2.76845E-06, 
     X-2.38226E-06,-5.49068E-08, 9.65258E-07, 1.08650E-06, 5.64738E-07, 
     X-5.78379E-07,-5.68918E-07,-1.90177E-06,-5.08874E-06,-3.03648E-06, 
     X-1.30527E-06,-4.87669E-07,-2.83326E-06,-1.97823E-06,-5.94313E-07, 
     X-1.50961E-07,-1.15908E-06,-1.43260E-06,-9.29331E-07,-1.39459E-06, 
     X-1.27237E-06,-1.50189E-06,-3.79292E-06,-3.92038E-06,-3.58490E-06, 
     X-3.26439E-06,-2.42138E-06,-2.70516E-06,-3.58080E-06,-1.71822E-06, 
     X-2.41567E-06,-3.50193E-06,-2.62394E-06,-3.08424E-06,-3.89604E-06, 
     X-4.84127E-06,-4.41385E-06,-3.22673E-06,-1.80987E-06,-2.93027E-06/ 
      DATA C21681 /                                                     
     X-3.17366E-06,-2.79721E-06,-1.78848E-06,-2.80254E-06,-3.55572E-06, 
     X-3.34632E-06,-2.83979E-06,-2.48022E-06,-2.15090E-06,-1.08311E-06, 
     X-6.15216E-07,-7.13008E-07,-1.70841E-06,-2.96098E-06,-3.57134E-06, 
     X-3.04405E-06,-3.35280E-06,-2.97780E-06,-1.97966E-06,-2.33197E-06, 
     X-2.76708E-06,-2.70409E-06,-4.51094E-07,-1.43068E-06,-2.83719E-06, 
     X-2.98921E-06,-4.14949E-06,-3.63780E-06,-8.10138E-07,-1.61597E-06, 
     X-2.25394E-06,-2.58110E-06,-1.57781E-06,-1.71520E-06,-2.30016E-06, 
     X-2.61268E-06,-1.96696E-06,-1.86744E-06,-3.15645E-06,-3.59354E-06, 
     X-3.61015E-06,-3.21793E-06,-2.57436E-06,-2.74347E-06,-3.33319E-06, 
     X-2.93400E-06,-3.25986E-06,-3.46384E-06,-2.22114E-06,-2.92650E-06, 
     X-3.73666E-06,-3.70485E-06,-2.75963E-06,-2.40652E-06,-2.93107E-06, 
     X-1.77517E-06,-1.57096E-06,-2.17533E-06,-2.80190E-06,-2.27942E-06, 
     X-1.37371E-06,-1.65974E-06,-1.26079E-06,-8.08050E-07,-8.41278E-07, 
     X-1.53860E-06,-1.66687E-06,-6.56592E-07,-3.05110E-08, 1.08623E-07, 
     X-2.87222E-07,-2.63555E-07,-7.89575E-07,-1.56059E-06,-6.42174E-07, 
     X-9.43333E-07,-1.38671E-06, 6.50443E-07, 1.35301E-06, 9.27981E-07/ 
      DATA C21761 /                                                     
     X-1.21705E-06,-9.63848E-08, 8.73593E-07,-3.47278E-08,-1.79042E-06, 
     X-2.15544E-06,-4.48668E-07,-1.17414E-06,-1.35437E-06,-8.90688E-07, 
     X-4.54757E-07, 2.41484E-09, 3.88010E-07,-1.85349E-08, 1.58011E-07, 
     X 3.70566E-07,-7.30268E-07,-8.42354E-07,-4.13738E-07, 3.96796E-07, 
     X-5.55763E-07,-1.26877E-06,-2.89854E-07, 5.78676E-07, 9.51356E-07, 
     X 5.56912E-07, 1.05014E-06, 9.75896E-07, 5.91573E-08,-6.15073E-07, 
     X-1.48803E-06,-2.53397E-06,-1.77027E-06,-2.08546E-06,-3.10452E-06, 
     X-1.65227E-06,-1.15981E-06,-1.25849E-06,-9.65711E-07,-1.90319E-06, 
     X-2.71831E-06,-5.71559E-08,-1.20368E-06,-3.16820E-06,-2.22766E-06, 
     X-1.19828E-06,-2.82573E-07, 2.53850E-07,-9.10547E-07,-1.65529E-06, 
     X-6.00138E-07,-4.98898E-07,-3.45799E-07, 2.25160E-07, 1.14332E-07, 
     X 3.16082E-07, 1.12681E-06,-6.04876E-07,-7.24616E-07, 1.48177E-06, 
     X 1.05680E-06, 5.91076E-07, 2.07187E-07, 3.82385E-07, 5.91560E-07, 
     X 8.26519E-07, 1.22139E-06, 1.63501E-06, 2.06423E-06, 2.50038E-06, 
     X 2.38037E-06, 1.91688E-06, 2.46702E-06, 2.45066E-06, 2.16732E-06, 
     X 3.13517E-06, 2.68221E-06, 1.39877E-06, 8.58945E-07, 6.83181E-07/ 
      DATA C21841 /                                                     
     X 8.46816E-07, 1.73491E-06, 1.98732E-06, 1.94059E-06, 2.19284E-06, 
     X 1.73215E-06, 1.06865E-06, 1.14117E-06, 1.43213E-06, 1.42275E-06, 
     X-4.15449E-07,-2.39911E-07, 3.46498E-08,-2.75022E-06,-2.43736E-06, 
     X-1.06489E-06,-7.81941E-07,-8.04801E-07,-1.04984E-06,-1.65734E-06, 
     X-1.03167E-06,-3.18255E-08, 5.70283E-07, 6.19050E-07, 2.92257E-07, 
     X-6.01436E-07,-7.04005E-07,-3.70875E-07, 4.12830E-07, 1.31319E-07, 
     X-1.61570E-07, 9.76170E-07, 7.99907E-07, 1.41860E-07,-1.98022E-07, 
     X 3.13766E-07, 7.43982E-07,-6.11287E-07,-5.21146E-07, 1.11156E-07, 
     X 3.91719E-07, 5.45566E-07, 6.39059E-07, 7.29515E-07, 4.59167E-07, 
     X 6.13179E-08,-3.48146E-08, 5.32046E-07, 1.19736E-06, 3.83982E-07, 
     X 1.73267E-07, 3.54304E-07, 9.34657E-07, 5.53819E-07,-2.86678E-07, 
     X 2.01853E-08,-1.56159E-07,-6.08130E-07,-2.14929E-07, 1.66317E-08, 
     X 9.32462E-08,-4.83623E-07,-9.16323E-07,-1.22772E-06,-1.61586E-06, 
     X-1.27409E-06,-1.98119E-07,-3.69182E-08,-1.41061E-07,-5.12562E-07, 
     X-4.55495E-07,-8.12132E-07,-1.71772E-06,-2.70741E-06,-2.98751E-06, 
     X-2.19520E-06, 3.01900E-07, 1.17806E-06,-1.23067E-06, 4.17086E-07/ 
      DATA C21921 /                                                     
     X 1.68113E-06, 4.81677E-07,-1.55187E-07,-3.35287E-07, 2.94916E-07, 
     X 4.57124E-07, 3.38692E-07,-2.49203E-07,-3.62585E-07,-2.39653E-07, 
     X 3.72675E-08,-7.79964E-09,-2.83285E-07,-9.74713E-07,-6.91171E-07, 
     X 1.21925E-07, 3.39940E-07, 3.68441E-08,-5.82188E-07, 2.12605E-07, 
     X 4.65144E-07, 2.17190E-07, 7.50119E-07, 8.62008E-07, 4.63016E-07, 
     X 1.25620E-06, 1.04567E-06,-8.17037E-07,-1.20023E-06,-1.06224E-06, 
     X-3.77100E-07,-1.28057E-07,-2.76183E-07,-1.24304E-06,-2.56776E-06, 
     X-3.36699E-06,-1.49408E-06,-1.01189E-07, 7.41870E-07,-6.45425E-07, 
     X-7.47111E-07, 4.79055E-10,-1.32339E-06,-1.86135E-06,-1.61074E-06, 
     X-1.82039E-06,-1.68040E-06,-1.08025E-06,-8.61965E-07,-7.00131E-07, 
     X-5.63105E-07,-8.09843E-07,-8.09221E-07, 1.69474E-07,-1.33941E-07, 
     X-7.49558E-07,-5.19013E-07,-8.53534E-07,-1.33703E-06,-3.11161E-07, 
     X 8.99037E-07, 2.25330E-06, 1.44822E-06, 3.07437E-07,-1.22366E-06, 
     X-7.64217E-07, 2.13156E-08, 1.07909E-06, 6.10755E-07, 1.81483E-07, 
     X 8.12405E-07,-9.13283E-08,-1.35885E-06,-1.58366E-06,-7.88594E-07, 
     X 4.48283E-07,-1.23754E-06,-1.65105E-06,-8.93014E-07,-1.48622E-06/ 
      DATA C22001 /                                                     
     X-1.67948E-06,-1.24310E-06,-1.54411E-06,-1.65677E-06,-1.04998E-06, 
     X-1.46985E-07, 4.61778E-07,-4.87832E-07,-4.89452E-07,-1.24840E-07, 
     X-1.70101E-06,-1.66976E-06,-1.48528E-07,-1.12621E-07,-2.30607E-08, 
     X 1.82301E-07,-8.58152E-07,-1.89794E-06,-2.46464E-06,-2.32745E-06, 
     X-2.02112E-06,-2.07656E-06,-1.43824E-06,-5.16583E-07,-1.80702E-06, 
     X-2.93490E-06,-3.89216E-06,-3.36211E-06,-2.41393E-06,-9.53406E-07, 
     X-1.16269E-06,-1.66431E-06,-1.77150E-06,-1.82496E-06,-1.93095E-06, 
     X-2.75759E-06,-2.83618E-06,-2.27908E-06,-6.33348E-07, 5.61257E-07, 
     X 1.00142E-06, 7.73337E-07, 3.17721E-07,-3.69804E-07,-8.82058E-07, 
     X-1.17364E-06,-4.53480E-07,-2.47824E-07,-4.79624E-07,-5.17032E-07, 
     X-3.46498E-07, 1.42669E-07,-1.59168E-07,-5.06580E-07,-3.18573E-07, 
     X-2.74092E-07,-2.68860E-07, 1.32811E-07,-2.35567E-09,-6.71971E-07, 
     X-9.75302E-07,-8.70978E-07,-3.59071E-08,-3.01726E-07,-8.27641E-07, 
     X-1.14899E-06,-1.50160E-06,-1.83660E-06,-1.26290E-06,-1.07659E-06, 
     X-1.34878E-06,-5.24626E-07,-7.85094E-08,-8.79473E-07,-1.19291E-06, 
     X-1.33298E-06,-1.59750E-06,-1.31836E-06,-5.73079E-07,-1.10349E-06/ 
      DATA C22081 /                                                     
     X-1.11807E-06,-1.99530E-07,-8.10496E-07,-1.42679E-06,-5.34617E-07, 
     X-2.05001E-07,-2.51690E-07,-1.01740E-06,-1.02841E-06,-7.48750E-08, 
     X-1.01770E-06,-1.50413E-06, 1.80898E-07, 3.63788E-07,-1.97900E-07, 
     X-1.16721E-06,-1.05497E-06,-2.07218E-08,-1.90590E-07,-8.25501E-07, 
     X-2.21142E-06,-1.19905E-06, 2.16271E-07,-2.52574E-07,-4.35837E-07, 
     X-3.95272E-07, 5.97065E-08, 2.76639E-07, 9.22569E-08, 1.20142E-07, 
     X-2.95030E-09,-1.08216E-06,-1.32386E-06,-9.62248E-07,-1.99430E-06, 
     X-2.13890E-06,-9.56082E-07,-6.94022E-07,-7.75721E-07,-1.31048E-06, 
     X-1.50080E-06,-1.35873E-06,-7.48378E-07,-4.83436E-07,-4.69624E-07, 
     X-1.51156E-06,-2.48221E-06,-3.30134E-06,-2.79114E-06,-2.08976E-06, 
     X-2.24768E-06,-1.06947E-06, 1.17462E-06,-2.51423E-07,-7.85729E-07, 
     X 5.37467E-07,-9.39876E-08,-1.11303E-06,-7.46860E-07,-9.36220E-07, 
     X-1.59880E-06,-1.61420E-06,-1.54368E-06,-1.41036E-06,-7.20350E-07, 
     X 1.35544E-07, 3.14481E-07, 6.29265E-07, 1.09161E-06,-1.36044E-07, 
     X-1.22932E-06,-1.29847E-06,-3.26429E-06,-6.01062E-06,-2.09945E-06, 
     X 1.26878E-07,-2.88050E-08,-6.82802E-07,-1.39340E-06,-1.82986E-06/ 
      DATA C22161 /                                                     
     X-1.67208E-06,-1.07994E-06,-1.89195E-06,-2.10782E-06,-1.04519E-06, 
     X-3.27672E-07, 1.95516E-07, 1.63838E-07,-2.29575E-07,-1.01609E-06, 
     X-2.19286E-06,-2.71850E-06,-9.77485E-07,-1.48830E-06,-3.37826E-06, 
     X-1.59130E-06,-5.74498E-07,-8.27962E-07,-9.92211E-07,-1.14422E-06, 
     X-1.41420E-06,-1.11629E-06,-2.51575E-07, 1.60805E-07, 1.82934E-07, 
     X-7.28868E-07,-2.57062E-07, 1.06520E-06, 4.16488E-07, 2.97049E-08, 
     X 6.62797E-08, 8.29435E-07, 1.29657E-06,-2.27961E-06,-3.40386E-06, 
     X-1.88594E-06,-2.29732E-06,-2.72594E-06,-2.09847E-06,-1.31771E-06, 
     X-4.23693E-07,-4.96348E-07,-9.40209E-07,-2.08707E-06,-1.21368E-06, 
     X 4.79409E-07,-1.12548E-08,-4.57316E-07,-8.40885E-07,-5.03210E-07, 
     X-1.61036E-07,-1.05835E-06,-1.66417E-06,-1.97827E-06,-1.63737E-06, 
     X-1.11711E-06,-3.16081E-07,-6.81746E-07,-1.82599E-06,-1.12895E-06, 
     X-9.19712E-07,-1.91707E-06,-2.14767E-06,-2.03629E-06,-2.86441E-06, 
     X-3.07735E-06,-2.28656E-06,-1.40256E-06,-5.50649E-07,-3.11627E-07, 
     X-7.90261E-07,-2.10728E-06,-1.89739E-06,-1.53762E-06,-2.39947E-06, 
     X-2.28765E-06,-1.27564E-06,-2.15154E-06,-3.17932E-06,-3.84234E-06/ 
      DATA C22241 /                                                     
     X-3.65102E-06,-2.84055E-06,-2.48744E-06,-2.27683E-06,-2.33087E-06, 
     X-3.44460E-06,-5.19613E-06,-2.85882E-06,-1.39921E-06,-2.00579E-06, 
     X-2.80593E-06,-3.65940E-06,-2.39526E-06,-1.70389E-06,-2.03532E-06, 
     X-2.71522E-06,-3.42227E-06,-2.23606E-06,-1.77845E-06,-2.42071E-06, 
     X-2.61515E-06,-2.56413E-06,-1.49601E-06,-1.23245E-06,-2.08440E-06, 
     X-2.11121E-06,-1.93424E-06,-2.27439E-06,-2.58183E-06,-2.84705E-06, 
     X-2.32183E-06,-1.80966E-06,-3.04089E-06,-3.14334E-06,-1.91331E-06, 
     X-1.51037E-06,-1.43610E-06,-2.11316E-06,-2.45184E-06,-2.42262E-06/ 
      END                                                               
      SUBROUTINE BS(I,A,B,N,S)                                          
C********************************************************************** 
      DIMENSION B(9)                                                    
C                                                                       
C             THIS SUBROUTINE DOES THE BINARY SEARCH FOR THE INDEX I    
C             SUCH THAT A IS IN BETWEEN B(I) AND B(I+1)                 
C             AND CALCULATES THE INTERPOLATION PARAMETER S              
C             SUCH THAT A=S*B(I+1)+(1.-S)*B(I)                          
C                                                                       
      I=1                                                               
      J=N                                                               
   10 M=(I+J)/2                                                         
      IF(A.LE.B(M)) THEN                                                
      J=M                                                               
      ELSE                                                              
      I=M                                                               
      END IF                                                            
      IF(J.GT.I+1) GO TO 10                                             
      S=(A-B(I))/(B(I+1)-B(I))                                          
      RETURN                                                            
      END                                                               
      BLOCK DATA C4D                                                    
C>    BLOCK DATA                                                        
      COMMON /C4C8/ C401(114),C4115(19),C8(102)                         
C        N2 CONTINUUM ABSORPTION COEFFICIENTS                           
C     C4 LOCATION  1    V =  2080 CM-1                                  
C     C4 LOCATION  133  V =  2740 CM-1                                  
      DATA C401 /                                                       
     1 2.93E-04, 3.86E-04, 5.09E-04, 6.56E-04, 8.85E-04, 1.06E-03,      
     2 1.31E-03, 1.73E-03, 2.27E-03, 2.73E-03, 3.36E-03, 3.95E-03,      
     3 5.46E-03, 7.19E-03, 9.00E-03, 1.13E-02, 1.36E-02, 1.66E-02,      
     4 1.96E-02, 2.16E-02, 2.36E-02, 2.63E-02, 2.90E-02, 3.15E-02,      
     5 3.40E-02, 3.66E-02, 3.92E-02, 4.26E-02, 4.60E-02, 4.95E-02,      
     6 5.30E-02, 5.65E-02, 6.00E-02, 6.30E-02, 6.60E-02, 6.89E-02,      
     7 7.18E-02, 7.39E-02, 7.60E-02, 7.84E-02, 8.08E-02, 8.39E-02,      
     8 8.70E-02, 9.13E-02, 9.56E-02, 1.08E-01, 1.20E-01, 1.36E-01,      
     9 1.52E-01, 1.60E-01, 1.69E-01, 1.60E-01, 1.51E-01, 1.37E-01,      
     $ 1.23E-01, 1.19E-01, 1.16E-01, 1.14E-01, 1.12E-01, 1.12E-01,      
     $ 1.11E-01, 1.11E-01, 1.12E-01, 1.14E-01, 1.13E-01, 1.12E-01,      
     $ 1.09E-01, 1.07E-01, 1.02E-01, 9.90E-02, 9.50E-02, 9.00E-02,      
     $ 8.65E-02, 8.20E-02, 7.65E-02, 7.05E-02, 6.50E-02, 6.10E-02,      
     $ 5.50E-02, 4.95E-02, 4.50E-02, 4.00E-02, 3.75E-02, 3.50E-02,      
     $ 3.10E-02, 2.65E-02, 2.50E-02, 2.20E-02, 1.95E-02, 1.75E-02,      
     $ 1.60E-02, 1.40E-02, 1.20E-02, 1.05E-02, 9.50E-03, 9.00E-03,      
     $ 8.00E-03, 7.00E-03, 6.50E-03, 6.00E-03, 5.50E-03, 4.75E-03,      
     $ 4.00E-03, 3.75E-03, 3.50E-03, 3.00E-03, 2.50E-03, 2.25E-03,      
     $ 2.00E-03, 1.85E-03, 1.70E-03, 1.60E-03, 1.50E-03, 1.50E-03/      
      DATA C4115 /                                                      
     1 1.54E-03, 1.50E-03, 1.47E-03, 1.34E-03, 1.25E-03, 1.06E-03,      
     2 9.06E-04, 7.53E-04, 6.41E-04, 5.09E-04, 4.04E-04, 3.36E-04,      
     3 2.86E-04, 2.32E-04, 1.94E-04, 1.57E-04, 1.31E-04, 1.02E-04,      
     4 8.07E-05/                                                        
C        4M  H2O CONTINUUM                                              
C        OZONE U.V. + VISIBLE BAND MODEL ABSORPTION COEFF               
C     C8 LOCATION  1    V =  13000  CM-1                                
C     C8 LOCATION  56   V =  24200  CM-1                                
C        DV = 200  CM-1                                                 
C     C8 LOCATION  57   V =  27500  CM-1                                
C     C8 LOCATION  102  V =  50000  CM-1                                
C        DV = 500  CM-1                                                 
      DATA C8 /                                                         
     1 4.50E-03, 8.00E-03, 1.07E-02, 1.10E-02, 1.27E-02, 1.71E-02,      
     2 2.00E-02, 2.45E-02, 3.07E-02, 3.84E-02, 4.78E-02, 5.67E-02,      
     3 6.54E-02, 7.62E-02, 9.15E-02, 1.00E-01, 1.09E-01, 1.20E-01,      
     4 1.28E-01, 1.12E-01, 1.11E-01, 1.16E-01, 1.19E-01, 1.13E-01,      
     5 1.03E-01, 9.24E-02, 8.28E-02, 7.57E-02, 7.07E-02, 6.58E-02,      
     6 5.56E-02, 4.77E-02, 4.06E-02, 3.87E-02, 3.82E-02, 2.94E-02,      
     7 2.09E-02, 1.80E-02, 1.91E-02, 1.66E-02, 1.17E-02, 7.70E-03,      
     8 6.10E-03, 8.50E-03, 6.10E-03, 3.70E-03, 3.20E-03, 3.10E-03,      
     9 2.55E-03, 1.98E-03, 1.40E-03, 8.25E-04, 2.50E-04, 0.      ,      
     $ 0.      , 0.      , 5.65E-04, 2.04E-03, 7.35E-03, 2.03E-02,      
     $ 4.98E-02, 1.18E-01, 2.46E-01, 5.18E-01, 1.02E+00, 1.95E+00,      
     $ 3.79E+00, 6.65E+00, 1.24E+01, 2.20E+01, 3.67E+01, 5.95E+01,      
     $ 8.50E+01, 1.26E+02, 1.68E+02, 2.06E+02, 2.42E+02, 2.71E+02,      
     $ 2.91E+02, 3.02E+02, 3.03E+02, 2.94E+02, 2.77E+02, 2.54E+02,      
     $ 2.26E+02, 1.96E+02, 1.68E+02, 1.44E+02, 1.17E+02, 9.75E+01,      
     $ 7.65E+01, 6.04E+01, 4.62E+01, 3.46E+01, 2.52E+01, 2.00E+01,      
     $ 1.57E+01, 1.20E+01, 1.00E+01, 8.80E+00, 8.30E+00, 8.60E+00/      
      END                                                               
      SUBROUTINE C4DTA (C4L,V)                                          
C **  N2 CONTINUUM                                                      
      COMMON /C4C8/ C4(133),C8(102)                                     
      C4L=0.                                                            
      IF(V.LT.2080.) RETURN                                             
      IF(V.GT.2740.) RETURN                                             
      IV=V                                                              
      L=(IV-2080)/5+1                                                   
      C4L=C4(L)                                                         
      RETURN                                                            
      END                                                               
      SUBROUTINE C6DTA(C6L,V)                                           
C     CALCULATES MOLECULAR RAYLEIGH SCATTERING COEFFICIENT              
C     USES APPROXIMATION OF SHETTLE ET AL., 1980 (APPL OPT, 2873-4)     
C        WITH THE DEPOLARIZATION = 0.0279 (INSTED OF 0.035)             
C     INPUT:  V = FREQUENCY IN WAVENUMBERS (CM-1)                       
C     OUTPUT: C6L = MOLECULAR SCATTERING COEFFICIENT (KM-1)             
C                    FOR TEMPERATURE = 273 K & PRESSURE 1 ATM.          
C                                                                       
      C6L=V**4/(9.38076E+18  -1.08426E+09 * V**2)                       
      RETURN                                                            
      END                                                               
      SUBROUTINE CHECK(V,IV,KEY)                                        
C                                                                       
C      UNITS CONVERSION FOR P AND T                                     
C                                                                       
C     V = P OR T     AND  IV =JUNITP(I.E. MB,ATM,TORR)                  
C                            =JUNITT(I.E. DEG K OR C)                   
C                            =JUNITR(I.E. KM,M,OR CM)                   
C                                                                       
      DATA PMB/1013.25/,PTORR/760./,DEGK/273.15/                        
      IF(IV.LE.10) RETURN                                               
      GO TO(100,200,300) KEY                                            
C                                                                       
C      PRESSURE CONVERSIONS                                             
C                                                                       
  100 IF(IV.EQ.11)GO TO 110                                             
      IF(IV.EQ.12)GO TO 120                                             
      STOP'CHECK(P)'                                                    
  110 V=V*PMB                                                           
      RETURN                                                            
  120 V=V*PMB/PTORR                                                     
      RETURN                                                            
C                                                                       
C      TEMPERATURE COMVERSIONS                                          
C                                                                       
  200 IF(IV.GT.11)STOP'CHECK(T)'                                        
      V=V+DEGK                                                          
      RETURN                                                            
C                                                                       
C      RANGE CONVERSIONS                                                
C                                                                       
  300 IF(IV.EQ.11)GO TO 310                                             
      IF(IV.EQ.12)GO TO 320                                             
      STOP'CHECK(R)'                                                    
  310 V=V/1.E3                                                          
      RETURN                                                            
  320 V=V/1.E5                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE  CHEKIN( NLYR, DTAUC, SSALB, PMOM, TEMPER, WVNMLO,     
     $                    WVNMHI, USRTAU, NTAU, UTAU, NSTR, USRANG,     
     $                    NUMU, UMU, NPHI, PHI, IBCND, FBEAM, UMU0,     
     $                    PHI0, FISOT, LAMBER, ALBEDO, HL, BTEMP,       
     $                    TTEMP, TEMIS, PLANK, ONLYFL, ACCUR, MAXCLY,   
     $                    MAXULV, MAXUMU, MAXCMU, MAXPHI, MXCLY,        
     $                    MXULV,  MXUMU,  MXCMU,  MXPHI, TAUC )         
                                                                        
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
C           CHECKS THE INPUT DIMENSIONS AND VARIABLES                   
                                                                        
      LOGICAL  WRTBAD, WRTDIM                                           
      LOGICAL  LAMBER, PLANK, ONLYFL, USRANG, USRTAU, INPERR            
      INTEGER  IBCND, MAXCLY, MAXUMU, MAXULV, MAXCMU, MAXPHI, NLYR,     
     $         NUMU, NSTR, NPHI, NTAU, MXCMU, MXUMU, MXPHI, MXCLY,      
     $         MXULV                                                    
      REAL*8     ACCUR, ALBEDO, BTEMP, DTAUC( MAXCLY ), FBEAM, FISOT,   
     $         HL( 0:MAXCMU ), PHI( MAXPHI ), PMOM( 0:MAXCMU, MAXCLY ), 
     $         PHI0, SSALB( MAXCLY ), TEMPER( 0:MAXCLY ), TEMIS, TTEMP, 
     $         WVNMLO, WVNMHI, UMU( MAXUMU ), UMU0, UTAU( MAXULV ),     
     $         TAUC( 0:* )                                              
                                                                        
                                                                        
      INPERR = .FALSE.                                                  
      IF ( NLYR.LT.1 ) INPERR = WRTBAD( 'NLYR' )                        
      IF ( NLYR.GT.MAXCLY ) INPERR = WRTBAD( 'MAXCLY' )                 
                                                                        
      DO 10  LC = 1, NLYR                                               
         IF ( DTAUC(LC).LT.0.0 ) INPERR = WRTBAD( 'DTAUC' )             
         IF ( SSALB(LC).LT.0.0 .OR. SSALB(LC).GT.1.0 )                  
     $        INPERR = WRTBAD( 'SSALB' )                                
         IF ( PLANK .AND. IBCND.NE.1 )  THEN                            
            IF( LC.EQ.1 .AND. TEMPER(0).LT.0.0 )                        
     $          INPERR = WRTBAD( 'TEMPER' )                             
            IF( TEMPER(LC).LT.0.0 ) INPERR = WRTBAD( 'TEMPER' )         
         ENDIF                                                          
         DO 5  K = 0, NSTR                                              
            IF( PMOM(K,LC).LT.-1.0 .OR. PMOM(K,LC).GT.1.0 )             
     $          INPERR = WRTBAD( 'PMOM' )                               
 5       CONTINUE                                                       
10    CONTINUE                                                          
                                                                        
      IF ( IBCND.EQ.1 )  THEN                                           
         IF ( MAXULV.LT.2 ) INPERR = WRTBAD( 'MAXULV' )                 
      ELSE IF ( USRTAU )  THEN                                          
         IF ( NTAU.LT.1 ) INPERR = WRTBAD( 'NTAU' )                     
         IF ( MAXULV.LT.NTAU ) INPERR = WRTBAD( 'MAXULV' )              
         DO 20  LU = 1, NTAU                                            
         IF(DABS(UTAU(LU)-TAUC(NLYR)).LE.1.E-4)UTAU(LU)=TAUC(NLYR)      
            IF( UTAU(LU).LT.0.0 .OR. UTAU(LU).GT.TAUC(NLYR) )           
     $          INPERR = WRTBAD( 'UTAU' )                               
20       CONTINUE                                                       
      ELSE                                                              
         IF ( MAXULV.LT.NLYR+1 ) INPERR = WRTBAD( 'MAXULV' )            
      END IF                                                            
                                                                        
      IF ( NSTR.LT.2 .OR. MOD(NSTR,2).NE.0 ) INPERR = WRTBAD( 'NSTR' )  
      IF ( NSTR.GT.MAXCMU ) INPERR = WRTBAD( 'MAXCMU' )                 
                                                                        
      IF ( USRANG )  THEN                                               
         IF ( NUMU.LT.0 ) INPERR = WRTBAD( 'NUMU' )                     
         IF ( .NOT.ONLYFL .AND. NUMU.EQ.0 ) INPERR = WRTBAD( 'NUMU'  )  
         IF ( NUMU.GT.MAXUMU ) INPERR = WRTBAD( 'MAXUMU' )              
         IF ( IBCND.EQ.1 .AND. 2*NUMU.GT.MAXUMU )                       
     $        INPERR = WRTBAD( 'MAXUMU' )                               
         DO 30  IU = 1, NUMU                                            
            IF( UMU(IU).LT.-1.0 .OR. UMU(IU).GT.1.0 .OR. UMU(IU).EQ.0.0)
     $           INPERR = WRTBAD( 'UMU' )                               
            IF( IBCND.EQ.1 .AND. UMU(IU).LT.0.0 )                       
     $           INPERR = WRTBAD( 'UMU' )                               
            IF( IU.GT.1 .AND. UMU(IU).LT.UMU(IU-1) )                    
     $           INPERR = WRTBAD( 'UMU' )                               
30       CONTINUE                                                       
      ELSE                                                              
         IF( MAXUMU.LT.NSTR ) INPERR = WRTBAD( 'MAXUMU' )               
      END IF                                                            
                                                                        
      IF ( .NOT.ONLYFL .AND. IBCND.NE.1 )  THEN                         
         IF ( NPHI.LE.0 ) INPERR = WRTBAD( 'NPHI' )                     
         IF ( NPHI.GT.MAXPHI ) INPERR = WRTBAD( 'MAXPHI' )              
         DO 40  J = 1, NPHI                                             
            IF ( PHI(J).LT.0.0 .OR. PHI(J).GT.360.0 )                   
     $           INPERR = WRTBAD( 'PHI' )                               
40       CONTINUE                                                       
      END IF                                                            
                                                                        
      IF ( IBCND.LT.0 .OR. IBCND.GT.1 ) INPERR = WRTBAD( 'IBCND' )      
      IF ( IBCND.EQ.0 )  THEN                                           
         IF ( FBEAM.LT.0.0 ) INPERR = WRTBAD( 'FBEAM' )                 
         IF ( FBEAM.GT.0.0 .AND. ( UMU0.LE.0.0 .OR. UMU0.GT.1.0 ) )     
     $        INPERR = WRTBAD( 'UMU0' )                                 
         IF ( FBEAM.GT.0.0 .AND. ( PHI0.LT.0.0 .OR. PHI0.GT.360.0 ) )   
     $        INPERR = WRTBAD( 'PHI0' )                                 
         IF ( FISOT.LT.0.0 ) INPERR = WRTBAD( 'FISOT' )                 
         IF ( LAMBER )  THEN                                            
            IF ( ALBEDO.LT.0.0 .OR. ALBEDO.GT.1.0 )                     
     $           INPERR = WRTBAD( 'ALBEDO' )                            
         ELSE                                                           
C                    ** MAKE SURE FLUX ALBEDO AT DENSE MESH OF INCIDENT 
C                       ANGLES DOES NOT ASSUME UNPHYSICAL VALUES        
                                                                        
            DO 50  RMU = 0.0, 1.0, 0.01                                 
               FLXALB = DREF( RMU, HL, NSTR )                           
               IF ( FLXALB.LT.0.0 .OR. FLXALB.GT.1.0 )                  
     $              INPERR = WRTBAD( 'HL' )                             
50          CONTINUE                                                    
         ENDIF                                                          
                                                                        
      ELSE IF ( IBCND.EQ.1 )  THEN                                      
         IF ( ALBEDO.LT.0.0 .OR. ALBEDO.GT.1.0 )                        
     $        INPERR = WRTBAD( 'ALBEDO' )                               
      END IF                                                            
                                                                        
      IF ( PLANK .AND. IBCND.NE.1 )  THEN                               
         IF ( WVNMLO.LT.0.0 .OR. WVNMHI.LE.WVNMLO )                     
     $        INPERR = WRTBAD( 'WVNMLO,HI' )                            
         IF ( TEMIS.LT.0.0 .OR. TEMIS.GT.1.0 )                          
     $        INPERR = WRTBAD( 'TEMIS' )                                
         IF ( BTEMP.LT.0.0 ) INPERR = WRTBAD( 'BTEMP' )                 
         IF ( TTEMP.LT.0.0 ) INPERR = WRTBAD( 'TTEMP' )                 
      END IF                                                            
                                                                        
      IF ( ACCUR.LT.0.0 .OR. ACCUR.GT.1.E-2 )                           
     $     INPERR = WRTBAD( 'ACCUR' )                                   
                                                                        
      IF ( MXCLY.LT.NLYR ) INPERR = WRTDIM( 'MXCLY', NLYR )             
      IF ( IBCND.NE.1 )  THEN                                           
         IF ( USRTAU .AND. MXULV.LT.NTAU )                              
     $        INPERR = WRTDIM( 'MXULV', NTAU )                          
         IF ( .NOT.USRTAU .AND. MXULV.LT.NLYR+1 )                       
     $        INPERR = WRTDIM( 'MXULV', NLYR+1 )                        
      ELSE                                                              
         IF ( MXULV.LT.2 ) INPERR = WRTDIM( 'MXULV', 2 )                
      END IF                                                            
      IF ( MXCMU.LT.NSTR ) INPERR = WRTDIM( 'MXCMU', NSTR )             
      IF ( USRANG .AND. MXUMU.LT.NUMU )                                 
     $     INPERR = WRTDIM( 'MXUMU', NUMU )                             
      IF ( USRANG .AND. IBCND.EQ.1 .AND. MXUMU.LT.2*NUMU )              
     $     INPERR = WRTDIM( 'MXUMU', NUMU )                             
      IF ( .NOT.USRANG .AND. MXUMU.LT.NSTR )                            
     $      INPERR = WRTDIM( 'MXUMU', NSTR )                            
      IF ( .NOT.ONLYFL .AND. IBCND.NE.1 .AND. MXPHI.LT.NPHI )           
     $      INPERR = WRTDIM( 'MXPHI', NPHI )                            
                                                                        
      IF ( INPERR )                                                     
     $   CALL ERRMSG( 'DISORT--input and/or dimension errors', .TRUE. ) 
C                                                                       
C     COMMENT OUT THIS WARNING MESSAGE (J. VAIL, OCT95).                
C     IF ( PLANK )  THEN                                                
C        DO 100  LC = 1, NLYR                                           
C        IF ( DABS(TEMPER(LC)-TEMPER(LC-1)) .GT. 20.0 )                 
C    $        CALL ERRMSG( 'CHEKIN--vertical temperature step may'      
C    $                  // ' be too large for good accuracy', .FALSE. ) 
C 100    CONTINUE                                                       
C     END IF                                                            
                                                                        
      RETURN                                                            
      END                                                               
      SUBROUTINE CIRR18                                                 
C*********************************************************************  
C*********************************************************************  
C*  ROUTINE TO SET CTHIK CALT CEXT  FOR  CIRRUS CLOUDS 18 19        **  
C*  INPUTS]                                                         **  
C*           CTHIK    -  CIRRUS THICKNESS (KM)                      **  
C*                       0 = USE THICKNESS STATISTICS               **  
C*                       .NE. 0 = USER DEFINES THICKNESS            **  
C*                                                                  **  
C*           CALT     -  CIRRUS BASE ALTITUDE (KM)                  **  
C*                       0 = USE CALCULATED VALUE                   **  
C*                       .NE. 0 = USER DEFINES BASE ALTITUDE        **  
C*                                                                  **  
C*           ICLD     -  CIRRUS PRESENCE FLAG                       **  
C*                       0 = NO CIRRUS                              **  
C*                       18  19 = USE CIRRUS PROFILE                **  
C*                                                                  **  
C*           MODEL    -  ATMOSPHERIC MODEL                          **  
C*                       1-5  AS IN MAIN PROGRAM                    **  
C*                       MODEL = 0,6,7 NOT USED SET TO 2            **  
C*                                                                  **  
C*  OUTPUTS]                                                        **  
C*         CTHIK        -  CIRRUS THICKNESS (KM)                    **  
C*         CALT         -  CIRRUS BASE ALTITUDE (KM)                **  
C          CEXT IS THE EXTINCTION COEFFIENT(KM-1) AT 0.55               
C               DEFAULT VALUE 0.14*CTHIK                                
C*                                                                  **  
C*********************************************************************  
C                                                                       
      COMMON /CARD1/ MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB  
     1  ,MODTRN                                                         
      LOGICAL MODTRN                                                    
      COMMON /CARD2/ IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,VIS,WSS,WHH,   
     1    RAINRT                                                        
      INTEGER NCRALT,NCRSPC                                             
      REAL CTHIK,CALT,CEXT,CWAVLN,CCOLWD,CCOLIP,CHUMID,ASYMWD,ASYMIP    
      COMMON/CARD2A/CTHIK,CALT,CEXT,NCRALT,NCRSPC,                      
     1  CWAVLN,CCOLWD,CCOLIP,CHUMID,ASYMWD,ASYMIP                       
      INCLUDE 'PARAM.LST'                                               
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                           
      REAL CAMEAN(5)                                                    
      DATA CAMEAN/11.,10.,8.,7.,5./                                     
      MDL = MODEL                                                       
C                                                                       
C  CHECK IF USER WANTS TO USE A THICKNESS VALUE HE PROVIDES             
C  DEFAULTED MEAN CIRRUS THICKNESS IS 1.0KM  OR 0.2 KM.                 
C                                                                       
      IF ( CTHIK .GT. 0.0 ) GO TO 25                                    
      IF(ICLD.EQ.18) CTHIK=1.0                                          
      IF(ICLD.EQ.19) CTHIK=0.2                                          
25    IF(CEXT .EQ. 0.) CEXT = 0.14 * CTHIK                              
C                                                                       
C  BASE HEIGHT CALCULATIONS                                             
C                                                                       
      IF ( MODEL .LT. 1  .OR.  MODEL .GT. 5 ) MDL = 2                   
C                                                                       
      IF(CALT.LE.0.)CALT=CAMEAN(MDL)                                    
C                                                                       
Calley      IF(ICLD. EQ. 18) WRITE(IPR,1219)                            
      IF(ICLD. EQ. 18 .AND. IPR .GT. 0) WRITE(IPR,1219)                 
1219  FORMAT(15X,'CIRRUS ATTENUATION INCLUDED   (STANDARD CIRRUS)')     
Calley      IF(ICLD. EQ. 19) WRITE(IPR,1220)                            
      IF(ICLD. EQ. 19 .AND. IPR .GT. 0) WRITE(IPR,1220)                 
1220  FORMAT(15X,'CIRRUS ATTENUATION INCLUDED   (THIN     CIRRUS)')     
Calley      WRITE(IPR,1221) CTHIK                                       
      IF (IPR .GT. 0) WRITE(IPR,1221) CTHIK                             
1221  FORMAT(15X,'CIRRUS THICKNESS ',                                   
     X F10.3,'KM')                                                      
Calley      WRITE(IPR,1224)CALT                                         
      IF (IPR .GT. 0) WRITE(IPR,1224)CALT                               
1224  FORMAT(15X,'CIRRUS BASE ALTITUDE ',                               
     X F10.3,' KM')                                                     
Calley       WRITE(IPR,1226) CEXT                                       
      IF (IPR .GT. 0) WRITE(IPR,1226) CEXT                              
1226    FORMAT(15X,'CIRRUS PROFILE EXTINCT ',F10.3)                     
C                                                                       
C       END OF CIRRUS MODEL SET UP                                      
      RETURN                                                            
      END                                                               
      SUBROUTINE CIRRUS(CTHIK,CALT,ISEED,CPROB,CEXT)                    
C*********************************************************************  
C*  ROUTINE TO GENERATE ALTITUDE PROFILES OF CIRRUS DENSITY         **  
C*  PROGRAMMED BY   M.J. POST                                       **  
C*                  R.A. RICHTER        NOAA/WPL                    **  
C*                                      BOULDER, COLORADO           **  
C*                                      01/27/1981                  **  
C*                                                                  **  
C*  INPUTS!                                                         **  
C*           CTHIK    -  CIRRUS THICKNESS (KM)                      **  
C*                       0 = USE THICKNESS STATISTICS               **  
C*                       .NE. 0 = USER DEFINES THICKNESS            **  
C*                                                                  **  
C*           CALT     -  CIRRUS BASE ALTITUDE (KM)                  **  
C*                       0 = USE CALCULATED VALUE                   **  
C*                       .NE. 0 = USER DEFINES BASE ALTITUDE        **  
C*                                                                  **  
C*           ICIR     -  CIRRUS PRESENCE FLAG                       **  
C*                       0 = NO CIRRUS                              **  
C*                       .NE. 0 = USE CIRRUS PROFILE                **  
C*                                                                  **  
C*           MODEL    -  ATMOSPHERIC MODEL                          **  
C*                       1-5  AS IN MAIN PROGRAM                    **  
C*                       MODEL = 0,6,7 NOT USED SET TO 2            **  
C*                                                                  **  
C*           ISEED    -  RANDOM NUMBER INITIALIZATION FLAG.         **  
C*                       0 = USE DEFAULT MEAN VALUES FOR CIRRUS     **  
C*                       .NE. 0 = INITIAL VALUE OF SEED FOR RANF    **  
C*                       FUNCTION. CHANGE SEED VALUE EACH RUN FOR   **  
C*                       DIFFERENT RANDOM NUMBER SEQUENCES. THIS    **  
C*                       PROVIDES FOR STATISTICAL DETERMINATION     **  
C*                       OF CIRRUS BASE ALTITUDE AND THICKNESS.     **  
C*                                                                  **  
C*  OUTPUTS!                                                        **  
C*         CTHIK        -  CIRRUS THICKNESS (KM)                    **  
C*         CALT         -  CIRRUS BASE ALTITUDE (KM)                **  
C*         DENSTY(16,I) -  ARRAY, ALTITUDE PROFILE OF CIRRUS DENSITY**  
C*         CPROB        -  CIRRUS PROBABILITY                       **  
C*                                                                  **  
C*********************************************************************  
C                                                                       
      COMMON /CARD1/ MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB  
     1  ,MODTRN                                                         
      LOGICAL MODTRN                                                    
      COMMON /CARD2/ IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,VIS,WSS,WHH,   
     1    RAINRT                                                        
      INCLUDE 'PARAM.LST'                                               
      INTEGER KPOINT                                                    
      REAL WAVLEN,EXTC,ABSC,ASYM,AWCCON,TX,W,RELHUM,PATM,TBBY,WPATH     
      COMMON/BASE/WAVLEN(MXWVLN),EXTC(NAER,MXWVLN),ABSC(NAER,MXWVLN),   
     1  ASYM(NAER,MXWVLN),AWCCON(NAER),KPOINT(NSPC),TX(KMAX),W(KMAX),   
     2  RELHUM(LAYDIM),PATM(LAYTHR),TBBY(LAYTHR),WPATH(LAYTHR,KMAX)     
      INTEGER IKMAX,ML,ISSGEO,IMULT                                     
      COMMON/CNTRL/IKMAX,ML,ISSGEO,IMULT                                
      REAL ZM,PM,TM,RFNDX,DENSTY                                        
      COMMON/MODEL/ZM(LAYDIM),PM(LAYDIM),TM(LAYDIM),                    
     1  RFNDX(LAYDIM),DENSTY(KMAX,LAYDIM)                               
      DIMENSION CBASE(5,2),TSTAT(11),PTAB(5),CAMEAN(5)                  
      DIMENSION CBASE1(5),CBASE2(5)                                     
      EQUIVALENCE (CBASE1(1),CBASE(1,1)),(CBASE2(1),CBASE(1,2))         
C                                                                       
      DATA  CAMEAN           / 11.0, 10.0, 8.0, 7.0, 5.0 /              
      DATA  PTAB           / 0.8, 0.4, 0.5, 0.45, 0.4/                  
      DATA  CBASE1            / 7.5, 7.3, 4.5, 4.5, 2.5 /               
      DATA  CBASE2            /16.5,13.5,14.0, 9.5,10.0 /               
      DATA  TSTAT             / 0.0,.291,.509,.655,.764,.837,.892,      
     + 0.928, 0.960, 0.982, 1.00 /                                      
C                                                                       
C  SET CIRRUS PROBABILITY AND PROFILE TO ALL ZEROES                     
C                                                                       
      CPROB = 0.0                                                       
      MDL = MODEL                                                       
C                                                                       
      DO 10 I=1,ML                                                      
10    DENSTY(16,I)=0.                                                   
C                                                                       
C  CHECK IF USER WANTS TO USE A THICKNESS VALUE HE PROVIDES, CALCULATE  
C  A STATISTICAL THICKNESS, OR USE A MEAN THICKNESS (ISEED = 0).        
C  DEFAULTED MEAN CIRRUS THICKNESS IS 1.0 KM.                           
C                                                                       
      IF ( CTHIK .GT. 0.0 ) GO TO 25                                    
      IF ( ISEED .NE. 0 ) GO TO 15                                      
      CTHIK = 1.0                                                       
      GO TO 25                                                          
C                                                                       
C  CALCULATE CLOUD THICKNESS USING LOWTRAN CIRRUS THICKNESS STATISTICS  
C  NOTE - THIS ROUTINE USES A UNIFORM RANDOM NUMBER GENERATOR           
C  FUNCTION (RANF) WHICH RETURNS A NUMBER BETWEEN 0 AND 1.              
C  THIS FEATURE IS MACHINE DEPENDENT!!                                  
C                                                                       
   15 CALL RANSET(ISEED)                                                
      URN = RANFUN(IDUM)                                                
      DO 20 I = 1, 10                                                   
         IF (URN .GE. TSTAT(I) .AND. URN .LT. TSTAT(I+1)) CTHIK = I-1   
   20 CONTINUE                                                          
      CTHIK = CTHIK / 2.0  +  RANFUN(IDUM) / 2.0                        
C                                                                       
C  DENCIR IS CIRRUS DENSITY IN KM-1                                     
C                                                                       
25    IF(CEXT .GT. 0.) THEN                                             
           DENCIR = CEXT / 2.                                           
      ELSE                                                              
           DENCIR = 0.07 * CTHIK                                        
      ENDIF                                                             
C                                                                       
C  BASE HEIGHT CALCULATIONS                                             
C                                                                       
      IF ( MODEL .LT. 1  .OR.  MODEL .GT. 5 ) MDL = 2                   
      CPROB = 100.0 * PTAB(MDL)                                         
C                                                                       
      HMAX = CBASE(MDL,2) - CTHIK                                       
      BRANGE = HMAX - CBASE(MDL,1)                                      
      IF ( CALT .GT. 0.0 ) GO TO 27                                     
      IF ( ISEED .NE. 0 ) GO TO 26                                      
      CALT = CAMEAN(MDL)                                                
      GO TO 27                                                          
   26 CALT = BRANGE * RANFUN(IDUM)+ CBASE(MDL,1)                        
C                                                                       
C  PUT CIRRUS DENSITY IN CORRECT ALTITUDE BINS. IF MODEL = 7,           
C  INTERPOLATE EH(16,I) FOR NON-STANDARD ALTITUDE BOUNDARIES.           
C                                                                       
   27 IF(MODEL .EQ. 7) GO TO 60                                         
      IV1=INT(CALT )                                                    
      IV2=INT(CALT+CTHIK )                                              
      DO 30 I = 2, 16                                                   
         IF(I .GE. IV1 .AND. I .LE. IV2) DENSTY(16,I+1) =  DENCIR       
   30 CONTINUE                                                          
C                                                                       
C  ADJUST FIRST AND LAST CIRRUS LEVEL IF CLOUD DOES NOT ENTIRELY        
C  FILL EACH LEVEL.                                                     
C                                                                       
      IHGT1 = INT( CALT )                                               
      IHGT2 = INT( CALT + CTHIK)                                        
      IF( IHGT1 . NE . IHGT2 ) GO TO 35                                 
      DENSTY(16,IHGT1+1) = DENSTY( 16,IHGT1+1)*CTHIK                    
      RETURN                                                            
   35 PCT1  = 1.0 - ( CALT - IHGT1 )                                    
      DENSTY(16,IHGT1+1) = DENSTY(16,IHGT1+1) * PCT1                    
      PCT2 =  ( CALT + CTHIK) - IHGT2                                   
      DENSTY(16,IHGT2+1) = DENSTY(16,IHGT2+1) * PCT2                    
      RETURN                                                            
C                                                                       
C  INTERPOLATE DENSTY(16,I) FOR USER SUPPLIED ALTITUDE BOUNDARIES       
C                                                                       
   60 TOP = CALT + CTHIK                                                
      BOTTOM = CALT                                                     
      IF(TOP.LT.ZM(1) .OR. BOTTOM.GT.ZM(ML))RETURN                      
      IML = ML - 1                                                      
      DO 70 I=1,IML                                                     
         ZMIN=ZM(I)                                                     
         ZMAX=ZM(I+1)                                                   
         DENOM = ZMAX - ZMIN                                            
         IF(BOTTOM.LE.ZMIN .AND. TOP.GE.ZMAX) DENSTY(16,I) = DENCIR     
         IF(BOTTOM.GE.ZMIN .AND. TOP.LT.ZMAX)                           
     +        DENSTY(16,I) = DENCIR * CTHIK/DENOM                       
         IF(BOTTOM.GE.ZMIN .AND. TOP.GE.ZMAX .AND. BOTTOM.LT.ZMAX)      
     +        DENSTY(16,I) = DENCIR * (ZMAX - BOTTOM)/ DENOM            
         IF(BOTTOM.LT.ZMIN .AND. TOP.LE.ZMAX .AND.TOP.GT.ZMIN)          
     +        DENSTY(16,I) = DENCIR * (TOP - ZMIN) / DENOM              
   70 CONTINUE                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE  CKD(SH2OT0,SH2OT1,TAVE,SH2O,FH2O,V)                   
C                                                                       
C                                                                       
C     REVISION:  3.3                                                    
C     CREATED:   28 APR 1994  10:14:28                                  
C     PRESENTLY: 28 APR 1994  10:15:53                                  
C     CLOUGH CKD_2.1                                                    
C     HVRCNT = '3.3'                                                    
C                                                                       
      REAL XFAC(0:50)                                                   
C                                                                       
      SAVE S260, S296, SFAC                                             
      DATA P0 / 1013. /,T0 / 296. /                                     
      DATA XLOSMT / 2.68675E+19 /                                       
C                                                                       
C     THESE ARE SELF-CONTINUUM MODIFICATION FACTORS FROM 700-1200 CM-1  
C                                                                       
C                                                                       
      DATA (XFAC(I),I=0,50)/                                            
     1    1.00000,1.01792,1.03767,1.05749,1.07730,1.09708,              
     2    1.10489,1.11268,1.12047,1.12822,1.13597,1.14367,              
     3    1.15135,1.15904,1.16669,1.17431,1.18786,1.20134,              
     4    1.21479,1.22821,1.24158,1.26580,1.28991,1.28295,              
     5    1.27600,1.26896,1.25550,1.24213,1.22879,1.21560,              
     6    1.20230,1.18162,1.16112,1.14063,1.12016,1.10195,              
     7    1.09207,1.08622,1.08105,1.07765,1.07398,1.06620,              
     8    1.05791,1.04905,1.03976,1.02981,1.00985,1.00000,              
     9    1.00000,1.00000,1.00000/                                      
C                                                                       
C                                                                       
      DATA S260/-12345678./, S296/-12345678./                           
C--------------------------------------------------------------------   
C                             SELF                                      
                                                                        
      ALPHA2 = 200.**2                                                  
C                                                                       
      ALPHS2= 120.**2                                                   
      BETAS = 5.E-06                                                    
      V0S=1310.                                                         
      FACTRS= 0.15                                                      
C                                                                       
C--------------------------------------------------------------------   
C                                                                       
C                             FOREIGN                                   
      HWSQF= 330.**2                                                    
      BETAF = 8.  E-11                                                  
      V0F =1130.                                                        
      FACTRF = 0.97                                                     
C                                                                       
      V0F2 =1900.                                                       
      HWSQF2 = 150.**2                                                  
      BETA2 = 3.E-06                                                    
C                                                                       
C--------------------------------------------------------------------   
         VJ = V                                                         
         VS2 = (VJ-V0S)**2                                              
         SH2O = 0.                                                      
         IF(SH2OT0.GT.0.)THEN                                           
         TFAC = (TAVE-T0)/(260.-T0)                                     
            SH2O = SH2OT0*(SH2OT1/SH2OT0)**TFAC                         
         SFAC = 1.                                                      
         IF (VJ.GE.700. .AND.  VJ.LE.1200.) THEN                        
            JFAC = (VJ-700.)/10. + 0.00001                              
            SFAC = XFAC(JFAC)                                           
         ENDIF                                                          
C                                                                       
C     CORRECTION TO SELF CONTINUUM (1 SEPT 85); FACTOR OF 0.78 AT 1000  
C                             AND  .......                              
C                                                                       
      SH2O = SFAC * SH2O*(1.-0.2333*(ALPHA2/((VJ-1050.)**2+ALPHA2))) *  
     C                 (1.-FACTRS*(ALPHS2/(VS2+(BETAS*VS2**2)+ALPHS2))) 
         ENDIF                                                          
C-------------------------------------------                            
C                                                                       
C                                                                       
C     CORRECTION TO FOREIGN CONTINUUM                                   
C                                                                       
        VF2 = (VJ-V0F)**2                                               
        VF6 = VF2 * VF2 * VF2                                           
        FSCAL  = (1.-FACTRF*(HWSQF/(VF2+(BETAF*VF6)+HWSQF)))            
        VF2 = (VJ-V0F2)**2                                              
        VF4 = VF2*VF2                                                   
        FSCAL = FSCAL* (1.- 0.6*(HWSQF2/(VF2 + BETA2*VF4 + HWSQF2)))    
C                                                                       
        FH2O=FH2O*FSCAL                                                 
        RETURN                                                          
        END                                                             
      SUBROUTINE CLDPRF(K,ICLD,IHA1,IC1,ICHIC1,HAZECZ,IPR)              
Calley      SUBROUTINE CLDPRF(K,ICLD,IHA1,IC1,ICHIC1,HAZECZ)            
C***********************************************************************
C     WILL COMPUTE DENSITY    PROFILES FOR CLOUDS                       
C***********************************************************************
      REAL MDLWC                                                        
      INCLUDE 'PARAM.LST'                                               
      INTEGER KPOINT                                                    
      REAL WAVLEN,EXTC,ABSC,ASYM,AWCCON,TX,W,RELHUM,PATM,TBBY,WPATH     
      COMMON/BASE/WAVLEN(MXWVLN),EXTC(NAER,MXWVLN),ABSC(NAER,MXWVLN),   
     1  ASYM(NAER,MXWVLN),AWCCON(NAER),KPOINT(NSPC),TX(KMAX),W(KMAX),   
     2  RELHUM(LAYDIM),PATM(LAYTHR),TBBY(LAYTHR),WPATH(LAYTHR,KMAX)     
      REAL ZM,PM,TM,RFNDX,DENSTY                                        
      COMMON/MODEL/ZM(LAYDIM),PM(LAYDIM),TM(LAYDIM),                    
     1  RFNDX(LAYDIM),DENSTY(KMAX,LAYDIM)                               
      DIMENSION RHZONE(4)                                               
      DIMENSION ELWCR(4),ELWCU(4),ELWCM(4),ELWCT(4)                     
      DATA RHZONE/0.,70.,80.,99./                                       
      DATA ELWCR/3.517E-04,3.740E-04,4.439E-04,9.529E-04/               
      DATA ELWCM/4.675E-04,6.543E-04,1.166E-03,3.154E-03/               
      DATA ELWCU/3.102E-04,3.802E-04,4.463E-04,9.745E-04/               
      DATA ELWCT/1.735E-04,1.820E-04,2.020E-04,2.408E-04/               
      DATA AFLWC/1.295E-02/,RFLWC/1.804E-03/,CULWC/7.683E-03/           
      DATA ASLWC/4.509E-03/,STLWC/5.272E-03/,SCLWC/4.177E-03/           
      DATA SNLWC/7.518E-03/,BSLWC/1.567E-04/,FVLWC/5.922E-04/           
      DATA AVLWC/1.675E-04/,MDLWC/4.775E-04/                            
      DATA TNLWC/3.446E-3/ ,TKLWC/5.811E-2/                             
      HAZECZ=0.                                                         
      IF(DENSTY(66,K).LE.0.)GOTO15                                      
      IH=ICLD                                                           
      IF(IH .EQ. 0) GO TO 200                                           
      IF(ICLD .EQ. 18) THEN                                             
           HAZECZ=DENSTY(66,K)/TNLWC                                    
           RETURN                                                       
      ENDIF                                                             
      IF(ICLD .EQ. 19) THEN                                             
           HAZECZ=DENSTY(66,K)/TKLWC                                    
           RETURN                                                       
      ENDIF                                                             
      IF(ICLD .EQ. 20) THEN                                             
           RETURN                                                       
      ENDIF                                                             
      GO TO(114,115,116,117,118,116,118,118,114,114,114),IH             
114   HAZECZ=DENSTY(66,K)/CULWC                                         
      RETURN                                                            
115   HAZECZ=DENSTY(66,K)/ASLWC                                         
      RETURN                                                            
116   HAZECZ=DENSTY(66,K)/STLWC                                         
      RETURN                                                            
117   HAZECZ=DENSTY(66,K)/SCLWC                                         
      RETURN                                                            
118   HAZECZ=DENSTY(66,K)/SNLWC                                         
 15   RETURN                                                            
200   IF(IHA1 .GT. 0) GO TO 205                                         
Calley      PRINT*,' WARNING ICLD NOT SET '                             
      IF (IPR .GT. 0) WRITE (IPR,*) ' WARNING ICLD NOT SET '            
      RETURN                                                            
205   CONTINUE                                                          
      WRH = RELHUM(K)                                                   
C                                                                       
      M = IC1                                                           
      IF(ICHIC1.EQ.6 .AND. M.NE.1)WRH=70.                               
C     THIS CODING  DOES NOT ALLOW TROP RH DEPENDENT  ABOVE EH(7,I)      
C     DEFAULTS TO TROPOSPHERIC AT 70. PERCENT                           
      DO 210 I=2,4                                                      
      IF (WRH.LT.RHZONE(I)) GO TO 215                                   
  210 CONTINUE                                                          
      I=4                                                               
  215 II=I-1                                                            
      IF(WRH.GT.0.0.AND.WRH.LT.99.)X=ALOG(100.0-WRH)                    
      X1=ALOG(100.0-RHZONE(II))                                         
      X2=ALOG(100.0-RHZONE(I))                                          
      IF (WRH.GE.99.0) X=X2                                             
      IF (WRH.LE.0.0) X=X1                                              
      ITA=ICHIC1                                                        
      IF(ITA.EQ.3. AND. M.EQ.1) GO TO 218                               
      IF(ITA.GT.6) GO TO 245                                            
CC                                                                      
CC    MICROWAVE                                                         
      N = 41                                                            
CC                                                                      
218   IF(N.GE.41. AND. ITA.EQ.3) ITA = 4                                
C     RH DEPENDENT AEROSOLS                                             
      GO TO (220,220,222,225,230,235), ITA                              
 220  E2=ALOG(ELWCR(I))                                                 
      E1=ALOG(ELWCR(II))                                                
      GO TO 240                                                         
 222  IF(M.GT.1) GO TO 225                                              
      E2=ALOG(ELWCM(I))                                                 
      E1=ALOG(ELWCM(II))                                                
      GO TO 240                                                         
  225 E2=ALOG(ELWCM(I))                                                 
      E1=ALOG(ELWCM(II))                                                
      GO TO 240                                                         
  230 E2=ALOG(ELWCU(I))                                                 
      E1=ALOG(ELWCU(II))                                                
      GO TO 240                                                         
  235 E2=ALOG(ELWCT(I))                                                 
      E1=ALOG(ELWCT(II))                                                
  240 EC=E1+(E2-E1)*(X-X1)/(X2-X1)                                      
      CON=EXP(EC)                                                       
      HAZECZ=DENSTY(66,K)/CON                                           
      RETURN                                                            
  245 IF (ITA.GT.19) GO TO 275                                          
      ITC=ICHIC1-7                                                      
      IF (ITC.LT.1) RETURN                                              
      GO TO (250,255,280,260,265,270,265,270,260,260,270,275), ITC      
250   CON=AFLWC                                                         
      GO TO 280                                                         
255   CON=RFLWC                                                         
      GO TO 280                                                         
260   CON=BSLWC                                                         
      GO TO 280                                                         
265   CON=AVLWC                                                         
      GO TO 280                                                         
270   CON=FVLWC                                                         
      GO TO 280                                                         
275   CON=MDLWC                                                         
280   CONTINUE                                                          
      HAZECZ=DENSTY(66,K)/CON                                           
      RETURN                                                            
      END                                                               
      SUBROUTINE  CMPINT( FBEAM, GC, KK, LAYRU, LL, LYRCUT, MAZIM,      
     $                    MXCMU, MXULV, MXUMU, NCUT, NN, NSTR,          
     $                    PLANK, NTAU, TAUCPR, UMU0, UTAUPR,            
     $                    ZZ, ZPLK0, ZPLK1, UUM )                       
                                                                        
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
C       CALCULATES THE FOURIER INTENSITY COMPONENTS AT THE QUADRATURE   
C       ANGLES FOR AZIMUTHAL EXPANSION TERMS (MAZIM) IN EQ. SD(2)       
                                                                        
C    I N P U T    V A R I A B L E S:                                    
                                                                        
C       KK      :  EIGENVALUES OF COEFF. MATRIX IN EQ. SS(7)            
C       GC      :  EIGENVECTORS AT POLAR QUADRATURE ANGLES, SC(1)       
C       LL      :  CONSTANTS OF INTEGRATION IN EQ. SC(1), OBTAINED      
C                  BY SOLVING SCALED VERSION OF EQ. SC(5);              
C                  EXPONENTIAL TERM OF EQ. SC(12) NOT INCLUDED          
C       LYRCUT  :  LOGICAL FLAG FOR TRUNCATION OF COMPUT. LAYER         
C       MAZIM   :  ORDER OF AZIMUTHAL COMPONENT                         
C       NCUT    :  NUMBER OF COMPUTATIONAL LAYER WHERE ABSORPTION       
C                  OPTICAL DEPTH EXCEEDS -ABSCUT-                       
C       NN      :  ORDER OF DOUBLE-GAUSS QUADRATURE (NSTR/2)            
C       TAUCPR  :  CUMULATIVE OPTICAL DEPTH (DELTA-M-SCALED)            
C       UTAUPR  :  OPTICAL DEPTHS OF USER OUTPUT LEVELS IN DELTA-M      
C                  COORDINATES;  EQUAL TO -UTAU- IF NO DELTA-M          
C       ZZ      :  BEAM SOURCE VECTORS IN EQ. SS(19)                    
C       ZPLK0   :  THERMAL SOURCE VECTORS -Z0-, BY SOLVING EQ. SS(16)   
C       ZPLK1   :  THERMAL SOURCE VECTORS -Z1-, BY SOLVING EQ. SS(16)   
C       (REMAINDER ARE 'DISORT' INPUT VARIABLES)                        
                                                                        
C    O U T P U T   V A R I A B L E S:                                   
                                                                        
C       UUM     :  FOURIER COMPONENTS OF THE INTENSITY IN EQ.  SD(12)   
C                   ( AT POLAR QUADRATURE ANGLES )                      
                                                                        
C    I N T E R N A L   V A R I A B L E S:                               
                                                                        
C       FACT    :  EXP( - UTAUPR / UMU0 )                               
C       ZINT    :  INTENSITY OF M=0 CASE, IN EQ. SC(1)                  
C+----------------------------------------------------------------------
                                                                        
       LOGICAL  LYRCUT, PLANK                                           
       INTEGER  LAYRU(*)                                                
       REAL*8     UUM( MXUMU, MXULV, 0:* )                              
       REAL*8     GC( MXCMU,MXCMU,* ), KK( MXCMU,* ), LL( MXCMU,* ),    
     $          TAUCPR( 0:* ), UTAUPR(*), ZZ( MXCMU, *),                
     $          ZPLK0( MXCMU,* ), ZPLK1( MXCMU,* )                      
                                                                        
                                                                        
C                                                  ** ZERO OUTPUT ARRAY 
       CALL ZEROIT( UUM, MXUMU*MXULV*(MXCMU + 1) )                      
                                                                        
C                                       ** LOOP OVER USER LEVELS        
       DO 100  LU = 1, NTAU                                             
                                                                        
          LYU = LAYRU(LU)                                               
          IF ( LYRCUT .AND. LYU.GT.NCUT )  GO TO 100                    
                                                                        
          DO 20  IQ = 1, NSTR                                           
             ZINT = 0.0                                                 
             DO 10  JQ = 1, NN                                          
               ZINT = ZINT + GC(IQ,JQ,LYU) * LL(JQ,LYU) *               
     $                 DEXP( - KK(JQ,LYU)*(UTAUPR(LU) - TAUCPR(LYU)) )  
10           CONTINUE                                                   
             DO 11  JQ = NN+1, NSTR                                     
                ZINT = ZINT + GC(IQ,JQ,LYU) * LL(JQ,LYU) *              
     $              DEXP( - KK(JQ,LYU)*(UTAUPR(LU) - TAUCPR(LYU-1)) )   
11           CONTINUE                                                   
                                                                        
             UUM(IQ,LU,MAZIM) = ZINT                                    
             IF ( FBEAM.GT.0.0 )                                        
     $            UUM(IQ,LU,MAZIM) = ZINT + ZZ(IQ,LYU)                  
     $                                    * DEXP( - UTAUPR(LU) / UMU0 ) 
             IF ( PLANK .AND. MAZIM.EQ.0 )                              
     $            UUM(IQ,LU,MAZIM) = UUM(IQ,LU,MAZIM) + ZPLK0(IQ,LYU) + 
     $                             ZPLK1(IQ,LYU) * UTAUPR(LU)           
20        CONTINUE                                                      
                                                                        
100   CONTINUE                                                          
                                                                        
      RETURN                                                            
      END                                                               
      SUBROUTINE CNVPHI(IERROR,ITYPE,H1,H2,ANGLE,RANGE,BETA,LENN,PHI)   
C                                                                       
C     THIS ROUTINE CONVERTS TARGET-BASED LINE-OF-SIGHT INPUTS INTO      
C     MODTRAN STANDARD OBSERVER-BASED INPUTS.  MORE SPECIFICALLY, THREE 
C     TARGET-BASED LINE-OF-SIGHT INPUT OPTIONS ARE NOW AVAILABLE:       
C                                                                       
C       CASE     INPUTS                                                 
C       ----     --------------------                                   
C        2E      H2, PHI, H1 and LENN                                   
C        2F      H2, PHI and RANGE                                      
C        3C      H2, PHI and H1=SPACE                                   
C                                                                       
C     BOTH CASE 2E AND CASE 3C ARE CONVERTED TO CASE 2A (H1, H2, ANGLE  
C     AND LENN), AND CASE 2F IS CONVERTED TO CASE 2C (H1, H2 AND RANGE) 
C                                                                       
C     DECLARE ROUTINE ARGUMENTS:                                        
C       ITYPE   PATH TYPE LABEL (1=HORIZONTAL, 2=SLANT                  
C               BETWEEN ALTITUDES and 3=SLANT TO SPACE).                
C       H1      OBSERVER (SENSOR) ALTITUDE [KM].                        
C       H2      TARGET (FINAL) ALTITUDE [KM].                           
C       ANGLE   ZENITH ANGLE AT OBSERVER TOWARDS TARGET [DEG].          
C       RANGE   OBSERVER TO TARGET SLANT RANGE [KM].                    
C       BETA    OBSERVER TO TARGET EARTH CENTER ANGLE [DEG].            
C       RE      RADIUS OF THE EARTH [KM].                               
C       LENN    PATH LENGTH SWITCH (0=SHORT PATH and                    
C               1=LONG PATH THROUGH TANGENT HEIGHT).                    
C       PHI     ZENITH ANGLE AT TARGER TOWARDS OBSERVER [DEG].          
      INTEGER ITYPE,LENN                                                
      REAL H1,H2,ANGLE,RANGE,BETA,PHI                                   
C                                                                       
C     LIST COMMONS:                                                     
C                                                                       
C     FILE UNIT NUMBERS                                                 
C       IRD      MODTRAN INPUT FILE, tape5, UNIT NUMBER (1).            
C       IPR      MODTRAN STANDARD OUTPUT FILE, tape6, UNIT NUMBER (2).  
C       IPU      MODTRAN SPECTRAL DATA FILE, tape7, UNIT NUMBER (7).    
C       NPR      PRINTOUT LEVEL SWITCH (1=small,0=normal,-1=large).     
C       IPR1     MODTRAN FLUX OUTPUT FILE, tape8, UNIT NUMBER (8).      
C       ISCRCH   MULTIPLE SCATTERING SCRATCH FILE UNIT NUMBER (10).     
C       ITB      MOLECULAR BAND MODEL PARAMETER FILE UNIT NUMBER (9).   
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                           
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                       
C                                                                       
C     COMMON /GRAUND/:                                                  
C       GNDALT   GROUND ALTITUDE [KM].                                  
      REAL GNDALT                                                       
      COMMON/GRAUND/GNDALT                                              
C                                                                       
C     COMMON /PARMTR/:                                                  
C       RE       EARTH RADIUS [KM].                                     
C       ZMAX     TOP OF THE ATMOSPHERE [KM].                            
C       IPATH    SWITCH USED TO DISTINGUISH LOS FROM SUN/MOON PATHS.    
      REAL RE,ZMAX                                                      
      INTEGER IPATH                                                     
      COMMON/PARMTR/RE,ZMAX,IPATH                                       
C                                                                       
C     DECLARE LOCAL VARIABLES:                                          
C       IERROR   ERROR FLAG                                             
C       LENNSV   SAVED VALUE OF INPUT LENGTH SWITCH, LENN.              
C       DPH1     DOUBLE PRECISION H1 [KM].                              
C       DPH2     DOUBLE PRECISION H2 [KM].                              
C       DPANG    DOUBLE PRECISION ANGLE [DEG].                          
C       DPRANG   DOUBLE PRECISION RANGE [KM].                           
C       DPBETA   DOUBLE PRECISION BETA [DEG].                           
C       DPPHI    DOUBLE PRECISION PHI [DEG].                            
C       DPHMIN   MINIMUM PATH ALTITUDE [KM].                            
      INTEGER IERROR,LENNSV                                             
      DOUBLE PRECISION DPH1,DPH2,DPANG,DPRANG,DPBETA,DPPHI,DPHMIN       
C                                                                       
C     LIST DATA:                                                        
C       ITER     ITERATION COUNTER USED BY ROUTINE DPFNMN.              
      INTEGER ITER                                                      
      DATA ITER/0/                                                      
C                                                                       
C     DEFINE DOUBLE PRECISION PARAMETERS:                               
      DPH2=DBLE(H2)                                                     
      DPPHI=DBLE(PHI)                                                   
C                                                                       
C     INITIALIZE ERROR FLAG                                             
      IERROR=0                                                          
C                                                                       
C     BRANCH BASED ON CASE.                                             
      IF(ITYPE.EQ.3)THEN                                                
C                                                                       
C         CASE 3C:  H2, PHI and H1=SPACE.                               
          DPH1=DBLE(ZMAX)                                               
          LENN=0                                                        
          IF(PHI.GT.90.)LENN=1                                          
          CALL DPFNMN(DPH2,DPPHI,DPH1,LENN,ITER,DPHMIN,DPANG,IERROR)    
          ITYPE=2                                                       
          H1=REAL(DPH1)                                                 
          ANGLE=REAL(DPANG)                                             
          RANGE=0.                                                      
Calley          WRITE(IPR,                                              
          IF (IPR .GT. 0) WRITE(IPR,                                    
     1      '(2(/A,T50,A),3(/A,F12.5,A,T50,A,F12.5,A),/T50,A,I6)')      
     2      ' CASE 3C                    CONVERTED TO','CASE 2A',       
     3      ' -------',                      '-------',                 
     4      ' H2   ',H2,   ' KM',            'H1   ',H1,   ' KM',       
     5      ' PHI  ',PHI,  ' DEG',           'ANGLE',ANGLE,' DEG',      
     6      ' H1   ',ZMAX, ' KM',            'H2   ',H2,   ' KM',       
     7                                       'LENN ',LENN               
      ELSEIF(RANGE.GT.0.)THEN                                           
C                                                                       
C         CASE 2F:  H2, PHI and RANGE.                                  
          DPRANG=DBLE(RANGE)                                            
          CALL NEWH2(DPH2,DPH1,DPPHI,DPRANG,DPBETA,LENN,DPHMIN,DPANG)   
          H1=REAL(DPH1)                                                 
          ANGLE=0.                                                      
Calley          WRITE(IPR,'(2(/A,T50,A),/(A,F12.5,A,T50,A,F12.5,A))')   
          IF (IPR .GT. 0) WRITE(IPR,                                    
     +      '(2(/A,T50,A),/(A,F12.5,A,T50,A,F12.5,A))')                 
     1      ' CASE 2F                    CONVERTED TO','CASE 2C',       
     2      ' -------',                      '-------',                 
     3      ' H2   ',H2,   ' KM',            'H1   ',H1,   ' KM',       
     4      ' PHI  ',PHI,  ' DEG',           'RANGE',RANGE,' KM',       
     5      ' RANGE',RANGE,' KM',            'H2   ',H2,   ' KM'        
      ELSE                                                              
C                                                                       
C         CASE 2E:  H2, PHI, H1 and LENN.                               
          ANGLE=0.                                                      
          LENNSV=LENN                                                   
          IF(H2.GE.H1 .AND. PHI.LE.90.)THEN                             
Calley              WRITE(IPR,'(/2A)')' ERROR in CNVPHI: ',             
              IF (IPR .GT. 0) WRITE(IPR,'(/2A)')' ERROR in CNVPHI: ',   
     1          ' UPWARD PATH BEGINS ABOVE FINAL ALTITUDE.'             
              IERROR=1                                                  
          ELSEIF(H2.LE.GNDALT .AND. PHI.GT.90.)THEN                     
Calley              WRITE(IPR,'(/2A)')' ERROR in CNVPHI: ',             
              IF (IPR .GT. 0) WRITE(IPR,'(/2A)')' ERROR in CNVPHI: ',   
     1          ' DOWNWARD PATH BEGINS AT OR BELOW THE EARTH SURFACE.'  
              IERROR=1                                                  
          ELSE                                                          
Calley              IF(H1.LT.H2 .AND. PHI.GT.90.)WRITE(IPR,'(/2A,I6)')  
              IF(H1.LT.H2 .AND. PHI.GT.90.0 .AND. IPR.GT.0) WRITE(IPR,  
     +          '(/2A,I6)')                                             
     1          ' EITHER A SHORT PATH (LENN=0) OR A LONG PATH THROUGH', 
     2          ' A TANGENT HEIGHT (LENN=1) IS POSSIBLE:  LENN =',LENN  
              DPH1=DBLE(H1)                                             
              CALL DPFNMN(DPH2,DPPHI,DPH1,LENN,ITER,DPHMIN,DPANG,IERROR)
              IF(H1.NE.REAL(DPH1))THEN                                  
Calley               WRITE(IPR,'(/2A)')' ERROR in CNVPHI:  SLANT PATH', 
                  IF (IPR .GT. 0) WRITE(IPR,'(/2A)')                    
     +              ' ERROR in CNVPHI:  SLANT PATH',                    
     1              ' INTERSECTS THE EARTH AND CANNOT REACH H1.'        
                  IERROR=1                                              
              ENDIF                                                     
              ANGLE=REAL(DPANG)                                         
          ENDIF                                                         
Calley          WRITE(IPR,                                              
          IF (IPR .GT. 0) WRITE(IPR,                                    
     1      '(2(/A,T50,A),3(/A,F12.5,A,T50,A,F12.5,A),/A,I6,T50,A,I6)') 
     2      ' CASE 2E                    CONVERTED TO','CASE 2A',       
     3      ' -------',                      '-------',                 
     4      ' H2   ',H2,   ' KM',            'H1   ',H1,   ' KM',       
     5      ' PHI  ',PHI,  ' DEG',           'ANGLE',ANGLE,' DEG',      
     6      ' H1   ',H1,   ' KM',            'H2   ',H2,   ' KM',       
     7      ' LENN ',LENNSV,                 'LENN ',LENN               
      ENDIF                                                             
      BETA=0.                                                           
C                                                                       
C     RETURN TO DRIVER.                                                 
      RETURN                                                            
      END                                                               
      SUBROUTINE COMPAR(IPARM,IPH,IDAY,ISOURC,PARM1,PARM2,PARM3,PARM4,  
     $     TIME,G,ANGLEM,                                               
     $     ISAVE1,ISAVE2,ISAVE3,ISAVE4,SAVE1,SAVE2,SAVE3,SAVE4,         
     $     SAVE5,SAVE6,SAVE7,LSAME)                                     
C                                                                       
C     IPARM, IPH, ETC ARE THE CURRENT SOLAR PARAMETERS.                 
C     ISAVE1, ISAVE2, ETC. ARE THE SOLAR PARAMETERS OF THE              
C     IMMEDIATELY PRECEEDING RUN.                                       
C     LSAME IS A LOGICAL WHICH IS TRUE ONLY IF THE OLD AND THE NEW MATCH
C     LSAME IS MEANINGFUL ONLY IF BOTH THE CURRENT AND THE IMMEDIATELY  
C     PRECEEDING RUNS USED SOLAR PARAMETERS.                            
C                                                                       
C     IMPLICIT UNDEFINED(A-Z)                                           
      INTEGER IPARM,IDAY,IPH,ISOURC,ISAVE1,ISAVE2,ISAVE3,ISAVE4         
      REAL PARM1,PARM2,PARM3,PARM4,TIME,G,ANGLEM,                       
     $     SAVE1,SAVE2,SAVE3,SAVE4,SAVE5,SAVE6,SAVE7                    
      LOGICAL LSAME                                                     
C                                                                       
      LSAME = .FALSE.                                                   
      IF (ISAVE1 .NE. IPARM) RETURN                                     
      IF (ISAVE2 .NE. IPH) RETURN                                       
      IF (ISAVE3 .NE. IDAY) RETURN                                      
      IF (ISAVE4 .NE. ISOURC) RETURN                                    
      IF (SAVE1 .NE. PARM1 .AND. IPARM.NE.2) RETURN                     
      IF (SAVE2 .NE. PARM2) RETURN                                      
      IF (SAVE3 .NE. PARM3) RETURN                                      
      IF (SAVE4 .NE. PARM4) RETURN                                      
      IF (SAVE5 .NE. TIME) RETURN                                       
      IF(IPH.EQ.0 .AND. SAVE6.NE.G)RETURN                               
      IF (SAVE7 .NE. ANGLEM) RETURN                                     
      LSAME = .TRUE.                                                    
      RETURN                                                            
      END                                                               
      SUBROUTINE CONVRT (P,T)                                           
C*************************************************************          
C                                                                       
C     WRITTEN APR, 1985 TO ACCOMMODATE 'JCHAR' DEFINITIONS FOR          
C     UNIFORM DATA INPUT -                                              
C                                                                       
C     JCHAR    JUNIT                                                    
C                                                                       
C     " ",A       10    VOLUME MIXING RATIO (PPMV)                      
C     B       11    NUMBER DENSITY (CM-3)                               
C     C       12    MASS MIXING RATIO (GM(K)/KG(AIR))                   
C     D       13    MASS DENSITY (GM M-3)                               
C     E       14    PARTIAL PRESSURE (MB)                               
C     F       15    DEW POINT TEMP (TD IN T(K)) - H2O ONLY              
C     G       16     "    "     "  (TD IN T(C)) - H2O ONLY              
C     H       17    RELATIVE HUMIDITY (RH IN PERCENT) - H2O ONLY        
C     I       18    AVAILABLE FOR USER DEFINITION                       
C     J       19    REQUEST DEFAULT TO SPECIFIED MODEL ATMOSPHERE       
C                                                                       
C***************************************************************        
C                                                                       
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                          
      COMMON /CONSTN/ PZERO,TZERO,AVOGAD,ALOSMT,GASCON,PLANK,BOLTZ,     
     1     CLIGHT,ADCON,ALZERO,AVMWT,AIRMWT,AMWT(35)                    
      COMMON /CARD1B/ JUNITP,JUNITT,JUNIT1(13),WMOL(12),WAIR1,JLOW      
C                                                                       
C                                                                       
C                                                                       
C     CONVENTION                                                        
C     MMOLX = MAXIMUM NUMBER OF NEW SPECIES (IDENTIFIED BY "X")         
C     MMOL  = MAXIMUM NUMBER OF OLD SPECIES (W/O SUFFIX "X")            
C     THESE DEFINE THE MAXIMUM ARRAY SIZES.                             
C                                                                       
C     THE ACTUAL NUMBER OF PARAMETERS ARE:                              
C     NSPC = ACTUAL NUMBER OF OLD SPECIES (12), CAN'T EXCEED MMOL       
C     NSPECX = ACTUAL NUMBER OF "X" SPECIES,     CAN'T EXCEED MMOLX     
C                                                                       
      INCLUDE 'PARAM.LST'                                               
      REAL AMWTX(MMOLX)                                                 
      COMMON /ATMWTX/AMWTX                                              
      COMMON /CRD1BX/JUNITX, WMOLX(MMOLX)                               
C*****                                                                  
C                                                                       
C     VARIABLES ENDING WITH "X" ARE INTRODUCED TO DEAL WITH THE         
C     NSPECX EXTRA MOLECULES.                                           
C                                                                       
      RHOAIR = ALOSMT*(P/PZERO)*(TZERO/T)                               
C                                                                       
      DO 200 K = 1,NSPC+NSPECX                                          
         IF (K .LE. NSPC) THEN                                          
            B = AVOGAD/AMWT(K)                                          
            R = AIRMWT/AMWT(K)                                          
            JUNIT = JUNIT1(K)                                           
            WHOLD  = WMOL(K)                                            
         ELSE IF ( K .GT. NSPC) THEN                                    
            J = K-NSPC                                                  
            B = AVOGAD/AMWTX(J)                                         
            R = AIRMWT/AMWTX(J)                                         
            JUNIT = JUNITX                                              
            WHOLD  = WMOLX(J)                                           
         ENDIF                                                          
C                                                                       
         IF(K.EQ.1) THEN                                                
            CALL WATVAP(P,T)                                            
            GO TO 200                                                   
         ENDIF                                                          
C                                                                       
         IF (JUNIT .LE. 10) THEN                                        
C           ***** GIVEN VOL. MIXING RATIO                               
            GO TO 200                                                   
         ELSE IF (JUNIT .EQ. 11) THEN                                   
C           *****GIVEN NUMBER DENSITY (CM-3)                            
            IF (K .LE. NSPC) WMOL(K)=WHOLD/(RHOAIR*1.E-6)               
            IF (K .GT. NSPC) WMOLX(J)=WHOLD/(RHOAIR*1.E-6)              
            GO TO 200                                                   
         ELSE IF (JUNIT .EQ. 12) THEN                                   
C           *****GIVEN MASS MIXING RATIO (GM KG-1)                      
            IF (K .LE. NSPC) WMOL(K)= R*WHOLD*1.0E+3                    
            IF (K .GT. NSPC) WMOLX(J)= R*WHOLD*1.0E+3                   
            GO TO 200                                                   
         ELSE IF (JUNIT .EQ. 13) THEN                                   
C           *****GIVEN MASS DENSITY (GM M-3)                            
            IF (K .LE. NSPC) WMOL(K) = B*WHOLD/RHOAIR                   
            IF (K .GT. NSPC) WMOLX(J)= B*WHOLD/RHOAIR                   
            GO TO 200                                                   
         ELSE IF (JUNIT .EQ. 14) THEN                                   
C           *****GIVEN  PARTIAL PRESSURE (MB)                           
            WTEM    = ALOSMT*(WHOLD/PZERO)*(TZERO/T)                    
            IF (K . LE. NSPC) WMOL(K)= WTEM/(RHOAIR*1.E-6)              
            IF (K . GT. NSPC) WMOLX(J)=WTEM/(RHOAIR*1.E-6)              
            GO TO 200                                                   
         ELSE                                                           
Calley            WRITE (IPR,951)JUNIT                                  
            IF (IPR .GT. 0) WRITE (IPR,951)JUNIT                        
 951        FORMAT(/,'   **** ERROR IN CONVERT ****, JUNIT = ',I5)      
            GO TO 200                                                   
         ENDIF                                                          
 200  CONTINUE                                                          
      END                                                               
      BLOCK DATA CPH2O                                                  
C>    BLOCK DATA                                                        
C                                                                       
C     C' FOR WATER VAPOR (H2O)                                          
      COMMON /H2O/                                                      
     +        C11H2O( 70),                                              
     +        C21H2O(126),C22H2O(  5),                                  
     +        C31H2O(126),C32H2O(  2),                                  
     +        C41H2O(126),C42H2O( 52),                                  
     +        C51H2O(126),C52H2O( 52),                                  
     +        C61H2O(126),C62H2O( 52),                                  
     +        C71H2O(126),C72H2O(126),C73H2O(116),                      
     +        C81H2O(126),C82H2O(126),C83H2O(118),                      
     +        C91H2O(126),C92H2O(126),C93H2O( 71),                      
     +        CA1H2O(126),CA2H2O(126),CA3H2O(126),CA4H2O(7),            
     +        CB1H2O(126),CB2H2O(126),CB3H2O( 54),                      
     +        CC1H2O(126),CC2H2O(126),CC3H2O(106),                      
     +        CD1H2O(126),CD2H2O(111),                                  
     +        CE1H2O(126),CE2H2O(126),CE3H2O( 53)                       
C=H2O ====C' FOR   14 BAND MODELS                                       
C=H2O ====    0-  345                                                   
      DATA C11H2O/                                                      
     X -.59366, -.16679,  .42846,  .87819, 1.26357, 1.59247, 1.86372,   
     X 2.11483, 2.31810, 2.44040, 2.55998, 2.69879, 2.79810, 2.89747,   
     X 2.98118, 3.04863, 3.09568, 3.15381, 3.22984, 3.23785, 3.20991,   
     X 3.14246, 3.03461, 2.98864, 3.03520, 3.08981, 3.10027, 3.11302,   
     X 3.10266, 3.05765, 3.06166, 3.01593, 2.95500, 2.95328, 2.95297,   
     X 2.91497, 2.83753, 2.74642, 2.70474, 2.75606, 2.84097, 2.89052,   
     X 2.89886, 2.86150, 2.78032, 2.67212, 2.52752, 2.39301, 2.38109,   
     8 2.43965, 2.46195, 2.39329, 2.22943, 2.15815, 2.16157, 2.29683,   
     9 2.40335, 2.35569, 2.29239, 2.12968, 2.03781, 1.94313, 1.86282,   
     X 1.87312, 1.88177, 1.95321, 1.94145, 1.92602, 1.92812, 1.90587/   
C=H2O ====  350- 1000                                                   
      DATA C21H2O/                                                      
     X 2.04943, 1.95396, 1.78078, 1.60325, 1.55071, 1.49473, 1.46485,   
     X 1.50231, 1.39831, 1.30664, 1.14704,  .96109,  .93139, 1.00613,   
     X 1.11827, 1.13529, 1.07767,  .96652,  .90777,  .91973,  .90622,   
     X  .93883,  .90861,  .81968,  .79852,  .69385,  .56997,  .49693,   
     X  .40867,  .37846,  .44490,  .53554,  .59020,  .59196,  .50771,   
     X  .34361,  .20796,  .15417,  .13600,  .14235,  .12700,  .08853,   
     X  .06715,  .11430,  .15016,  .15016,  .13964,  .04897, -.04476,   
     8 -.16953, -.30196, -.39901, -.42462, -.39340, -.35671, -.30771,   
     9 -.31570, -.35021, -.47016, -.62308, -.77946, -.85086, -.82482,   
     X -.83468, -.83991, -.89726, -.90918, -.84484, -.71025, -.62777,   
     1 -.66324, -.76848,-1.03341,-1.27044,-1.49576,-1.61769,-1.53549,   
     X-1.47958,-1.33160,-1.29625,-1.40768,-1.52411,-1.72765,-1.82510,   
     X-1.76468,-1.70983,-1.59977,-1.50730,-1.46683,-1.39464,-1.43093,   
     X-1.58947,-1.78778,-2.06146,-2.33634,-2.40749,-2.49065,-2.44182,   
     X-2.25150,-2.19801,-2.08624,-2.10309,-2.27174,-2.36492,-2.45781,   
     X-2.44508,-2.36196,-2.38101,-2.48058,-2.61957,-2.74895,-2.74245,   
     X-2.63961,-2.61588,-2.61569,-2.71770,-2.92220,-3.01021,-2.99432,   
     X-2.89456,-2.79847,-2.73359,-2.69055,-2.65898,-2.60837,-2.63170/   
      DATA C22H2O/                                                      
     X-2.79096,-2.97394,-3.15934,-3.17057,-2.95258/                     
C=H2O ==== 1005- 1640                                                   
      DATA C31H2O/                                                      
     C-2.78308,-2.69196,-2.60867,-2.62239,-2.62637,-2.62950,-2.71010,   
     C-2.72574,-2.71317,-2.61321,-2.51967,-2.42437,-2.38734,-2.45056,   
     C-2.47843,-2.58702,-2.56472,-2.44706,-2.30814,-2.12582,-2.02697,   
     C-1.99880,-2.05659,-2.05701,-2.06643,-2.04721,-1.90723,-1.90946,   
     C-1.92812,-1.86522,-1.88820,-1.77270,-1.60669,-1.51740,-1.40182,   
     C-1.38758,-1.38799,-1.41620,-1.43182,-1.37124,-1.28249,-1.09992,   
     C -.99724, -.97950, -.99952,-1.09066,-1.09980,-1.00750, -.87259,   
     8 -.70131, -.48309, -.30502, -.20407, -.13886, -.19661, -.24505,   
     9 -.28415, -.34466, -.34496, -.28657, -.09485,  .16770,  .38311,   
     C  .48553,  .49475,  .49074,  .52493,  .57439,  .60303,  .66919,   
     1  .75656,  .90385, 1.04976, 1.13836, 1.20132, 1.21963, 1.30344,   
     C 1.41212, 1.46770, 1.47630, 1.45559, 1.43315, 1.49679, 1.62749,   
     C 1.68517, 1.70120, 1.66090, 1.59891, 1.64107, 1.76792, 1.93419,   
     C 2.09362, 2.13280, 2.07959, 2.01987, 1.96835, 2.03073, 2.17591,   
     C 2.32257, 2.49261, 2.60881, 2.66112, 2.68139, 2.70360, 2.70568,   
     C 2.67997, 2.66478, 2.63655, 2.59716, 2.57555, 2.58781, 2.58940,   
     C 2.50826, 2.28771, 1.95070, 1.59144, 1.31269, 1.21786, 1.22507,   
     8 1.31945, 1.53875, 1.78543, 2.02655, 2.22881, 2.32061, 2.34163/   
      DATA C32H2O/                                                      
     C 2.39432, 2.43073/                                                
C=H2O ==== 1645- 2530                                                   
      DATA C41H2O/                                                      
     C 2.53438, 2.55861, 2.51156, 2.46499, 2.46254, 2.51561, 2.56373,   
     C 2.62430, 2.67999, 2.68386, 2.68780, 2.68227, 2.59536, 2.42505,   
     C 2.29307, 2.17816, 2.11945, 2.20521, 2.32197, 2.38083, 2.38052,   
     C 2.25417, 2.11473, 2.06142, 2.02788, 2.01508, 1.97680, 1.91586,   
     C 1.87253, 1.83706, 1.80766, 1.67367, 1.45528, 1.29956, 1.18809,   
     C 1.20246, 1.33650, 1.45778, 1.48886, 1.40546, 1.22716, 1.01444,   
     C  .91282,  .87247,  .83576,  .80170,  .71481,  .66927,  .65846,   
     C  .66839,  .68503,  .66215,  .72413,  .78703,  .77831,  .71136,   
     C  .51200,  .35931,  .30680,  .33365,  .36267,  .32095,  .25710,   
     C  .12363, -.02266, -.18001, -.28048, -.27808, -.19047, -.08151,   
     C -.09169, -.16662, -.24404, -.27238, -.27345, -.32244, -.42037,   
     C -.54071, -.63500, -.69930, -.77174, -.83521, -.86639, -.82329,   
     C -.78820, -.82340, -.83838, -.91387, -.96524, -.96364,-1.05757,   
     C-1.12747,-1.19973,-1.27071,-1.30173,-1.34436,-1.35556,-1.35990,   
     C-1.30386,-1.26726,-1.28022,-1.32843,-1.43599,-1.55929,-1.69416,   
     C-1.79362,-1.86416,-1.90037,-1.91305,-1.94866,-1.95483,-1.92284,   
     C-1.87535,-1.83065,-1.86043,-1.93470,-2.01410,-2.07677,-2.07980,   
     C-2.01822,-1.96078,-1.95185,-1.96638,-2.05704,-2.17667,-2.24120/   
      DATA C42H2O/                                                      
     C-2.27833,-2.33268,-2.37375,-2.43075,-2.54346,-2.60789,-2.68442,   
     C-2.78402,-2.83736,-2.89622,-2.95598,-3.03170,-3.13338,-3.26736,   
     C-3.41725,-3.51456,-3.61586,-3.67210,-3.67841,-3.72135,-3.74941,   
     C-3.78822,-3.85868,-3.90419,-3.91592,-3.97897,-4.00562,-4.08675,   
     C-4.18795,-4.15833,-4.18094,-4.18872,-4.25849,-4.42026,-4.57444,   
     C-4.64021,-4.58636,-4.51788,-4.46274,-4.44165,-4.45450,-4.42101,   
     C-4.35067,-4.30493,-4.23157,-4.11952,-4.01918,-3.93341,-3.81424,   
     C-3.70572,-3.62484,-3.48143/                                       
C=H2O ==== 2535- 3420                                                   
      DATA C51H2O/                                                      
     C-3.35886,-3.26514,-3.15517,-3.02814,-2.95147,-2.83444,-2.68908,   
     C-2.62390,-2.50458,-2.39841,-2.35516,-2.24360,-2.18204,-2.16652,   
     C-2.08381,-2.02597,-1.99880,-1.90122,-1.84045,-1.82575,-1.74889,   
     C-1.70489,-1.66792,-1.60475,-1.59789,-1.59221,-1.60854,-1.66569,   
     C-1.68527,-1.72998,-1.79886,-1.81356,-1.82715,-1.79425,-1.61106,   
     C-1.40549,-1.24369,-1.15433,-1.23589,-1.44178,-1.64717,-1.78560,   
     C-1.84622,-1.77824,-1.69071,-1.66066,-1.58765,-1.54222,-1.51960,   
     8-1.45477,-1.39881,-1.38659,-1.37586,-1.36025,-1.39179,-1.36927,   
     C-1.35455,-1.38734,-1.40292,-1.45598,-1.51545,-1.56173,-1.62478,   
     C-1.69200,-1.75192,-1.81120,-1.83354,-1.87063,-1.89006,-1.88485,   
     C-1.90298,-1.85403,-1.82001,-1.82495,-1.82901,-1.90076,-1.93649,   
     C-1.83304,-1.70268,-1.52380,-1.41443,-1.41301,-1.39373,-1.34561,   
     C-1.20932,-1.03186, -.85296, -.71145, -.59825, -.51884, -.51690,   
     C -.51723, -.52224, -.50043, -.40989, -.32204, -.24881, -.18653,   
     C -.17548, -.22729, -.32885, -.46183, -.47994, -.36042, -.23072,   
     6 -.12160, -.06422, -.14924, -.21674, -.17913, -.15803, -.04515,   
     C  .14450,  .28118,  .39718,  .49818,  .51040,  .44761,  .29666,   
     8  .01147, -.32421, -.66518, -.96090,-1.13017,-1.18009,-1.08032/   
      DATA C52H2O/                                                      
     C -.80133, -.52001, -.33748, -.22519, -.20871, -.26962, -.22592,   
     C -.15919, -.07358,  .09367,  .20019,  .25965,  .27816,  .28577,   
     C  .22305,  .17722,  .14469,  .06694,  .07268,  .10103,  .14554,   
     C  .20352,  .25681,  .25790,  .21316,  .15965,  .08703,  .01638,   
     C -.03529, -.03274, -.08812, -.12524, -.13536, -.23808, -.28262,   
     C -.30082, -.29252, -.13320,  .05226,  .17657,  .21670,  .12268,   
     C  .00438, -.03051, -.00359,  .02967,  .04460, -.01109, -.06041,   
     C -.07485, -.02511,  .07116/                                       
C=H2O ==== 3425- 4310                                                   
      DATA C61H2O/                                                      
     C  .18506,  .27668,  .32130,  .35452,  .39867,  .36470,  .34978,   
     C  .36519,  .38993,  .47009,  .54349,  .60193,  .67101,  .73253,   
     C  .84100,  .92974, 1.00406, 1.06301, 1.07261, 1.09629, 1.10790,   
     C 1.10959, 1.11710, 1.15716, 1.24152, 1.34834, 1.45152, 1.53939,   
     C 1.59331, 1.60894, 1.63833, 1.67031, 1.74144, 1.82069, 1.90463,   
     C 1.98593, 2.02996, 2.10254, 2.16357, 2.16140, 2.11190, 2.06655,   
     C 2.02241, 2.02978, 2.06771, 2.04985, 2.02048, 1.99566, 2.01593,   
     8 2.11269, 2.22805, 2.27037, 2.23480, 2.16907, 2.09990, 2.08096,   
     C 2.10710, 2.15298, 2.19061, 2.25811, 2.34221, 2.43200, 2.59765,   
     C 2.72007, 2.77243, 2.71671, 2.56246, 2.33896, 2.14412, 1.97864,   
     C 1.79640, 1.73371, 1.71380, 1.74950, 1.91932, 2.10063, 2.26262,   
     C 2.36884, 2.42988, 2.47605, 2.51875, 2.53371, 2.51476, 2.47425,   
     C 2.40051, 2.39254, 2.39540, 2.35342, 2.33460, 2.26830, 2.17169,   
     C 2.09605, 2.04747, 2.01127, 1.89721, 1.74928, 1.55948, 1.38069,   
     C 1.34831, 1.35751, 1.35809, 1.34286, 1.25929, 1.16743, 1.09595,   
     6 1.00365,  .87965,  .76257,  .64206,  .56343,  .49943,  .40691,   
     C  .29104,  .18437,  .12690,  .09157,  .13377,  .18899,  .20257,   
     8  .19155,  .09384, -.01238, -.14283, -.26122, -.31851, -.45610/   
      DATA C62H2O/                                                      
     C -.58273, -.65867, -.73100, -.66169, -.52264, -.46798, -.50258,   
     C -.59104, -.72925, -.81067, -.80914, -.86943, -.92975, -.92524,   
     C -.88289, -.79203, -.69250, -.68167, -.75444, -.86193, -.97556,   
     C-1.10473,-1.20018,-1.24824,-1.27702,-1.22693,-1.18773,-1.13552,   
     C-1.14015,-1.21589,-1.26394,-1.39464,-1.46192,-1.52629,-1.64635,   
     C-1.71511,-1.78752,-1.79358,-1.77801,-1.75599,-1.77196,-1.83224,   
     C-1.89985,-1.98528,-2.09408,-2.24126,-2.37607,-2.43218,-2.43830,   
     C-2.38400,-2.33538,-2.43573/                                       
C=H2O ==== 4315- 6150                                                   
      DATA C71H2O/                                                      
     X-2.52275,-2.67290,-2.83451,-2.93019,-3.01749,-3.02463,-2.99666,   
     X-2.95414,-2.91300,-2.96493,-3.07471,-3.25693,-3.47657,-3.67222,   
     X-3.88925,-3.97727,-3.94079,-3.81920,-3.66194,-3.59739,-3.64351,   
     X-3.74016,-3.90037,-4.04679,-4.07663,-4.03256,-3.91836,-3.80990,   
     X-3.76032,-3.77951,-3.84240,-3.90305,-3.92223,-3.82628,-3.65450,   
     X-3.44339,-3.25756,-3.09919,-3.00901,-2.95747,-2.88271,-2.82108,   
     X-2.72633,-2.59367,-2.46775,-2.36235,-2.28438,-2.27343,-2.30886,   
     8-2.33620,-2.27813,-2.20677,-2.16170,-2.14594,-2.24245,-2.36299,   
     X-2.42996,-2.50866,-2.55678,-2.50968,-2.47465,-2.42796,-2.37981,   
     X-2.34092,-2.30518,-2.26753,-2.27390,-2.44156,-2.72384,-3.06108,   
     X-3.38056,-3.48970,-3.41674,-3.36528,-3.27790,-3.15495,-3.01945,   
     X-2.81869,-2.66003,-2.56096,-2.49017,-2.46335,-2.51454,-2.59743,   
     X-2.67025,-2.78841,-2.77863,-2.63881,-2.54169,-2.40240,-2.37146,   
     X-2.46253,-2.54291,-2.65346,-2.69467,-2.69130,-2.65025,-2.59152,   
     X-2.56343,-2.50785,-2.44665,-2.41418,-2.34553,-2.28223,-2.25278,   
     6-2.20694,-2.16892,-2.14295,-2.14341,-2.16443,-2.24853,-2.38594,   
     X-2.49449,-2.58047,-2.55462,-2.41673,-2.35641,-2.32619,-2.34603,   
     8-2.40102,-2.30576,-2.20532,-2.09307,-2.00782,-2.00039,-1.91252/   
      DATA C72H2O/                                                      
     X-1.80383,-1.65749,-1.55728,-1.59262,-1.70939,-1.83569,-1.84895,   
     X-1.71457,-1.53813,-1.41904,-1.37588,-1.39458,-1.39135,-1.35232,   
     X-1.30470,-1.24821,-1.20394,-1.19607,-1.15995,-1.13948,-1.11024,   
     X-1.03785, -.99804, -.95430, -.92707, -.93592, -.93528, -.86881,   
     X -.75121, -.55836, -.35056, -.22085, -.13412, -.12673, -.13867,   
     X -.11656, -.07357,  .01888,  .11050,  .20428,  .29291,  .35923,   
     X  .43608,  .47266,  .49792,  .54978,  .60489,  .67778,  .71787,   
     8  .73606,  .74796,  .75193,  .81728,  .87972,  .95990, 1.07451,   
     X 1.13098, 1.17565, 1.19031, 1.20334, 1.27687, 1.35910, 1.41924,   
     X 1.37988, 1.28213, 1.16286, 1.08658, 1.06554, 1.03702, 1.01290,   
     X  .95519,  .94231,  .94216,  .95764, 1.03405, 1.11309, 1.27076,   
     X 1.48131, 1.66125, 1.76502, 1.68299, 1.50126, 1.28195, 1.13724,   
     X 1.09863, 1.12031, 1.23502, 1.34328, 1.39556, 1.40851, 1.40939,   
     X 1.40259, 1.39505, 1.38427, 1.33724, 1.29860, 1.34354, 1.43194,   
     X 1.50874, 1.54493, 1.48740, 1.37260, 1.26973, 1.21297, 1.11026,   
     6  .97625,  .87238,  .76100,  .71825,  .73936,  .69604,  .64138,   
     X  .59585,  .51097,  .44903,  .40524,  .29892,  .21583,  .19145,   
     8  .15378,  .13759,  .09412, -.04455, -.18870, -.28538, -.37204/   
      DATA C73H2O/                                                      
     X -.46390, -.57884, -.70647, -.78911, -.79511, -.76645, -.76146,   
     X -.80163, -.83155, -.86672, -.92994, -.99971,-1.10990,-1.25701,   
     X-1.32841,-1.33350,-1.35269,-1.31799,-1.35095,-1.48830,-1.57874,   
     X-1.67539,-1.72874,-1.68087,-1.67518,-1.73066,-1.77654,-1.79238,   
     X-1.81386,-1.77187,-1.73774,-1.78673,-1.82129,-1.86174,-1.87867,   
     X-1.92986,-1.95895,-1.98042,-2.10738,-2.14350,-2.22883,-2.35165,   
     X-2.30593,-2.31343,-2.23607,-2.17791,-2.29047,-2.40740,-2.60466,   
     8-2.70413,-2.67647,-2.64479,-2.62274,-2.66727,-2.67591,-2.66531,   
     X-2.64576,-2.69566,-2.79611,-2.90809,-2.99381,-2.94495,-2.94833,   
     X-2.97002,-3.01283,-3.07907,-3.08348,-3.06412,-3.08084,-3.20105,   
     X-3.32453,-3.49652,-3.63219,-3.65897,-3.69476,-3.63741,-3.54369,   
     X-3.44992,-3.41310,-3.43168,-3.48306,-3.57513,-3.59385,-3.59684,   
     X-3.60814,-3.50612,-3.41284,-3.34107,-3.27248,-3.26950,-3.31027,   
     X-3.32205,-3.29589,-3.29768,-3.28777,-3.29950,-3.39843,-3.43784,   
     X-3.47042,-3.54250,-3.55457,-3.69278,-3.82390,-3.91709,-4.02428,   
     6-3.97802,-4.04945,-3.99837,-3.96096,-4.01515,-4.01286,-4.27890,   
     7-4.64526,-4.92520,-5.20714,-5.02961/                              
C=H2O ==== 6155- 8000                                                   
      DATA C81H2O/                                                      
     X-4.88315,-4.85584,-4.76921,-4.54440,-4.33075,-4.16671,-4.04406,   
     X-4.09564,-4.11792,-4.14522,-4.19109,-4.14906,-4.22221,-4.35301,   
     X-4.47867,-4.50537,-4.41913,-4.24856,-4.05892,-3.91396,-3.73977,   
     X-3.60042,-3.52610,-3.50040,-3.55218,-3.66025,-3.77097,-3.87835,   
     X-3.96454,-3.93046,-3.92926,-3.96805,-3.99038,-4.10179,-4.21981,   
     X-4.24013,-4.26190,-4.27753,-4.25594,-4.28500,-4.29071,-4.26155,   
     X-4.16114,-4.04160,-3.91756,-3.82524,-3.76258,-3.74207,-3.77017,   
     8-3.80666,-3.92858,-4.01356,-4.10145,-4.16708,-4.09123,-4.00345,   
     X-3.88032,-3.81171,-3.80771,-3.83212,-3.88507,-3.81399,-3.70048,   
     X-3.58376,-3.46350,-3.42785,-3.41629,-3.40329,-3.36172,-3.26599,   
     X-3.16908,-3.10954,-3.03394,-2.95828,-2.85536,-2.71469,-2.60076,   
     X-2.48946,-2.38513,-2.32220,-2.30051,-2.34186,-2.37590,-2.33267,   
     X-2.21087,-2.03216,-1.91013,-1.82328,-1.77996,-1.76714,-1.72488,   
     X-1.71325,-1.67669,-1.62963,-1.60411,-1.54027,-1.47681,-1.37155,   
     X-1.25978,-1.23494,-1.26986,-1.33751,-1.37220,-1.28322,-1.14853,   
     6-1.03021, -.89832, -.84340, -.83317, -.78856, -.76905, -.69209,   
     X -.53147, -.37401, -.25508, -.21755, -.22627, -.23936, -.22223,   
     8 -.17345, -.11880, -.10331, -.15444, -.20353, -.25350, -.26628/   
      DATA C82H2O/                                                      
     X -.13441,  .02358,  .13657,  .22032,  .19637,  .12621,  .07999,   
     X  .04393, -.01900, -.06543, -.08129, -.14847, -.17765, -.23113,   
     X -.29309, -.28723, -.27521, -.20013, -.11575, -.00428,  .10976,   
     X  .16530,  .18309,  .13200,  .10610,  .10394,  .13621,  .17117,   
     X  .17251,  .18671,  .16161,  .16640,  .18417,  .18573,  .24876,   
     X  .26103,  .28476,  .33612,  .30642,  .30150,  .27173,  .21976,   
     X  .23130,  .27376,  .30887,  .34334,  .34765,  .31180,  .30774,   
     8  .31256,  .35423,  .42454,  .44493,  .43846,  .44507,  .43684,   
     X  .49327,  .53868,  .51933,  .54592,  .54951,  .63201,  .74737,   
     X  .80266,  .88719,  .87874,  .84412,  .84352,  .81737,  .86380,   
     X  .94765,  .95553,  .93965,  .90241,  .91481, 1.00917, 1.11552,   
     X 1.15202, 1.06885,  .96737,  .85164,  .80701,  .82571,  .87391,   
     X  .98520, 1.07042, 1.18051, 1.29004, 1.37755, 1.48278, 1.47663,   
     X 1.40851, 1.27508, 1.11986,  .98454,  .88260,  .82338,  .79509,   
     X  .83355,  .91046, 1.04503, 1.21868, 1.36672, 1.46155, 1.47085,   
     6 1.46520, 1.42619, 1.37940, 1.41333, 1.43128, 1.45974, 1.54526,   
     X 1.53032, 1.48103, 1.39624, 1.26267, 1.17261, 1.09232, 1.05888,   
     8 1.01929,  .94626,  .87615,  .73334,  .61962,  .52576,  .40124/   
      DATA C83H2O/                                                      
     X  .32424,  .20042,  .05769, -.09325, -.27407, -.40779, -.52559,   
     X -.58490, -.57916, -.54457, -.50743, -.45937, -.41861, -.41520,   
     X -.39164, -.36510, -.30857, -.23157, -.18280, -.15878, -.21295,   
     X -.29332, -.39457, -.54826, -.71006, -.87700, -.96819, -.98703,   
     X -.93748, -.83916, -.78698, -.76209, -.80754, -.93347,-1.06076,   
     X-1.15801,-1.16256,-1.09618,-1.03195,-1.05522,-1.13586,-1.23387,   
     X-1.33214,-1.32682,-1.33648,-1.38038,-1.42553,-1.49769,-1.52950,   
     8-1.54445,-1.56745,-1.61707,-1.69148,-1.76787,-1.82556,-1.84347,   
     X-1.86221,-1.87097,-1.84614,-1.88659,-1.98535,-2.12108,-2.27740,   
     X-2.39335,-2.39886,-2.33846,-2.30442,-2.27409,-2.29854,-2.39124,   
     X-2.56427,-2.73609,-2.88840,-3.00443,-3.02685,-3.09379,-3.16003,   
     X-3.13090,-3.06189,-3.00807,-2.95169,-3.01568,-3.11918,-3.18931,   
     X-3.35446,-3.46712,-3.51002,-3.48618,-3.36603,-3.29278,-3.32935,   
     X-3.47177,-3.61763,-3.68930,-3.67420,-3.62078,-3.67644,-3.76717,   
     X-3.78944,-3.79818,-3.75336,-3.74321,-3.86778,-3.96899,-4.05004,   
     6-4.15451,-4.17979,-4.22704,-4.28851,-4.25560,-4.21920,-4.27564,   
     7-4.42921,-4.58506,-4.70967,-4.80136,-4.64650,-4.65341/            
C=H2O ==== 8005- 9615                                                   
      DATA C91H2O/                                                      
     X-4.51995,-4.42433,-4.42137,-4.44853,-4.44819,-4.49132,-4.49176,   
     X-4.52929,-4.58468,-4.60533,-4.62362,-4.60168,-4.59803,-4.45292,   
     X-4.26920,-4.09891,-3.92615,-3.86016,-3.69436,-3.53699,-3.38584,   
     X-3.23356,-3.19281,-3.14232,-3.11326,-3.04386,-2.90514,-2.80270,   
     X-2.68808,-2.62726,-2.61349,-2.57111,-2.54465,-2.47142,-2.42795,   
     X-2.40936,-2.37936,-2.41255,-2.40417,-2.41017,-2.39774,-2.33861,   
     X-2.23985,-2.08388,-2.00350,-1.93767,-1.91020,-1.92815,-1.89802,   
     8-1.85648,-1.84229,-1.86062,-1.89799,-1.95863,-2.01858,-2.05596,   
     X-2.06508,-2.02824,-1.93392,-1.83965,-1.74890,-1.71252,-1.72275,   
     X-1.71193,-1.68781,-1.66945,-1.64316,-1.63675,-1.69286,-1.70297,   
     X-1.72751,-1.75100,-1.73714,-1.79804,-1.84371,-1.86235,-1.88812,   
     X-1.83704,-1.77649,-1.70661,-1.60188,-1.50341,-1.43505,-1.46076,   
     X-1.51651,-1.57911,-1.61619,-1.55812,-1.49706,-1.45230,-1.42832,   
     X-1.44314,-1.52138,-1.60752,-1.62106,-1.64265,-1.64250,-1.64573,   
     X-1.74951,-1.80667,-1.76036,-1.68790,-1.57515,-1.53228,-1.57292,   
     6-1.61350,-1.65583,-1.63563,-1.58694,-1.56417,-1.53128,-1.54079,   
     X-1.55014,-1.53022,-1.53190,-1.50230,-1.50260,-1.49991,-1.45992,   
     8-1.41944,-1.31703,-1.21850,-1.14990,-1.08809,-1.04748,-1.01748/   
      DATA C92H2O/                                                      
     X -.95109, -.84680, -.74538, -.60472, -.50362, -.46372, -.42447,   
     X -.44838, -.44419, -.40683, -.38084, -.33053, -.32846, -.33572,   
     X -.31158, -.29906, -.20305, -.13083, -.09973, -.06963, -.12740,   
     X -.20199, -.29978, -.35896, -.38843, -.41730, -.45017, -.51507,   
     X -.56213, -.57297, -.50844, -.42276, -.29372, -.08843,  .09240,   
     X  .25840,  .28311,  .13891, -.06768, -.28207, -.39760, -.40444,   
     X -.31138, -.14305, -.02128,  .04782,  .08894,  .10200,  .09648,   
     8  .10814,  .09787,  .04275,  .07559,  .12150,  .14186,  .19034,   
     X  .13856,  .07934,  .05903, -.00117, -.04140, -.11747, -.21938,   
     X -.28241, -.37335, -.49225, -.58631, -.68229, -.75086, -.77623,   
     X -.84652, -.93691,-1.00829,-1.07836,-1.10936,-1.10990,-1.10672,   
     X-1.07623,-1.03447,-1.01613,-1.00369, -.99511,-1.06778,-1.12221,   
     X-1.14258,-1.19379,-1.17257,-1.15262,-1.17033,-1.16389,-1.14503,   
     X-1.13643,-1.12323,-1.19203,-1.33003,-1.47540,-1.65339,-1.68424,   
     X-1.66968,-1.67118,-1.61782,-1.65910,-1.73337,-1.81449,-1.93135,   
     6-2.03554,-2.03827,-1.99609,-2.00710,-2.03895,-2.19678,-2.30931,   
     X-2.30301,-2.23226,-2.07787,-2.03277,-2.03851,-2.10514,-2.23452,   
     8-2.33474,-2.44465,-2.43944,-2.37675,-2.35973,-2.37611,-2.48915/   
      DATA C93H2O/                                                      
     X-2.59681,-2.62562,-2.61907,-2.61274,-2.73225,-2.84636,-2.91882,   
     X-2.95084,-2.84617,-2.83687,-2.84531,-2.82928,-2.88406,-2.93621,   
     X-3.00526,-3.09956,-3.16051,-3.18338,-3.25056,-3.38003,-3.56102,   
     X-3.72396,-3.80811,-3.82369,-3.79760,-3.90921,-4.04910,-4.14132,   
     X-4.22416,-4.16634,-4.21193,-4.37375,-4.54004,-4.54848,-4.34009,   
     X-4.10097,-3.93945,-3.99014,-4.18155,-4.46321,-4.84035,-4.95672,   
     X-4.88529,-4.92967,-5.09480,-5.27981,-5.39165,-5.32774,-5.16805,   
     8-5.26308,-5.53619,-5.93153,-6.48485,-6.38350,-6.02883,-5.76237,   
     X-5.65535,-5.58220,-5.58090,-5.69939,-5.87562,-6.23761,-6.45380,   
     X-6.50710,-6.40861,-6.18069,-6.15034,-6.12957,-6.08168,-6.05912,   
     1-6.20029/                                                         
C=H2O ==== 9620-11540                                                   
      DATA CA1H2O/                                                      
     X-6.35916,-6.63834,-7.22799,-6.87579,-6.38557,-6.05701,-5.77145,   
     X-5.71889,-5.54063,-5.34887,-5.20440,-5.01687,-4.88229,-4.75732,   
     X-4.61829,-4.47540,-4.40382,-4.22901,-4.07893,-3.91067,-3.71540,   
     X-3.66982,-3.60413,-3.59635,-3.66139,-3.67630,-3.61574,-3.49060,   
     X-3.33033,-3.18950,-3.19004,-3.27293,-3.43811,-3.58539,-3.69658,   
     X-3.64411,-3.52966,-3.51758,-3.45900,-3.56858,-3.67516,-3.75396,   
     X-3.80574,-3.77074,-3.74231,-3.63809,-3.64323,-3.59911,-3.62673,   
     8-3.64385,-3.54801,-3.49160,-3.38461,-3.33358,-3.21719,-3.04173,   
     X-2.89493,-2.77334,-2.79171,-2.91085,-3.04844,-3.23627,-3.31742,   
     X-3.35484,-3.39756,-3.34285,-3.36017,-3.34117,-3.26031,-3.20256,   
     X-3.07615,-2.98533,-3.01199,-3.13943,-3.33780,-3.54162,-3.64413,   
     X-3.59251,-3.59490,-3.60162,-3.66139,-3.81236,-3.87304,-4.04749,   
     X-4.11623,-4.09447,-4.12708,-3.91916,-3.77960,-3.62012,-3.44890,   
     X-3.42739,-3.42156,-3.36932,-3.34675,-3.22941,-3.12258,-3.12447,   
     X-3.07216,-3.06608,-3.04637,-2.99581,-3.00597,-2.94524,-2.83430,   
     6-2.69244,-2.53460,-2.44553,-2.36211,-2.25128,-2.12504,-1.99329,   
     X-1.94694,-1.96858,-2.02552,-2.02890,-1.95458,-1.83064,-1.68469,   
     8-1.63148,-1.63055,-1.64868,-1.68433,-1.65098,-1.54445,-1.45543/   
      DATA CA2H2O/                                                      
     X-1.39405,-1.35500,-1.38974,-1.43708,-1.49729,-1.58141,-1.63709,   
     X-1.71988,-1.74834,-1.78729,-1.81439,-1.79445,-1.80727,-1.78446,   
     X-1.77116,-1.69515,-1.57106,-1.41358,-1.22505,-1.11749,-1.06719,   
     X-1.05722,-1.05923,-1.08022,-1.08249,-1.05940,-1.05527, -.97884,   
     X -.90009, -.86984, -.84202, -.84891, -.86571, -.87771, -.86436,   
     X -.89675, -.95811, -.95681, -.98685, -.91920, -.79481, -.73405,   
     X -.63486, -.61580, -.66083, -.69059, -.75323, -.74477, -.65052,   
     8 -.58475, -.56151, -.61494, -.70313, -.70147, -.64776, -.57626,   
     X -.52669, -.56405, -.57813, -.57452, -.57656, -.52371, -.48121,   
     X -.47066, -.44204, -.42321, -.43939, -.40019, -.34592, -.36666,   
     X -.36117, -.41494, -.53334, -.63311, -.73668, -.83196, -.91543,   
     X -.92801, -.91893, -.82619, -.64369, -.45814, -.28838, -.20295,   
     X -.12845, -.12789, -.14668, -.10804, -.12206, -.08664, -.05495,   
     X -.09929, -.16477, -.24481, -.32305, -.39276, -.44000, -.52873,   
     X -.60139, -.69141, -.79857, -.89923,-1.00968,-1.08832,-1.14958,   
     6-1.21303,-1.28067,-1.38492,-1.47822,-1.51729,-1.55518,-1.53633,   
     X-1.51062,-1.50327,-1.51801,-1.57645,-1.65941,-1.73134,-1.75165,   
     8-1.72655,-1.71606,-1.73263,-1.74728,-1.79286,-1.73848,-1.66180/   
      DATA CA3H2O/                                                      
     X-1.56283,-1.40366,-1.32738,-1.25309,-1.25065,-1.26987,-1.24009,   
     X-1.22822,-1.19404,-1.20867,-1.23645,-1.19332,-1.13591,-1.08205,   
     X-1.04976,-1.14128,-1.23489,-1.27858,-1.33065,-1.28360,-1.22682,   
     X-1.18706,-1.15823,-1.14067,-1.16633,-1.17506,-1.15970,-1.19126,   
     X-1.19843,-1.30385,-1.42862,-1.58004,-1.72327,-1.78743,-1.86895,   
     X-1.85190,-1.80529,-1.69422,-1.49103,-1.32529,-1.20009,-1.13762,   
     X-1.11678,-1.13199,-1.16550,-1.16402,-1.17932,-1.17405,-1.15184,   
     8-1.20924,-1.29157,-1.34831,-1.38571,-1.42632,-1.43812,-1.50800,   
     X-1.62119,-1.70590,-1.86161,-2.00714,-2.11745,-2.25960,-2.34777,   
     X-2.44254,-2.64264,-2.83979,-3.04320,-3.29364,-3.41153,-3.49359,   
     X-3.60572,-3.67873,-3.78090,-3.85398,-3.88200,-3.83753,-3.77740,   
     X-3.85401,-3.79646,-3.72746,-3.70451,-3.59083,-3.70223,-3.88363,   
     X-4.03077,-4.20725,-4.19594,-4.16725,-4.13410,-4.16791,-4.12138,   
     X-4.08875,-4.14355,-4.10163,-4.19018,-4.25695,-4.31184,-4.47906,   
     X-4.51148,-4.57929,-4.59458,-4.62081,-4.83031,-5.02522,-5.15710,   
     6-5.27403,-5.22837,-5.32058,-5.55260,-5.72630,-5.86735,-5.86402,   
     X-5.84419,-5.89720,-6.15533,-6.51283,-6.98011,-7.28495,-7.08784,   
     8-6.77605,-6.49215,-6.43947,-6.42083,-6.59354,-6.78419,-6.98883/   
      DATA CA4H2O/                                                      
     X-7.11018,-6.93420,-6.83581,-6.87136,-6.96133,-7.28561,-8.27079/   
C=H2O ====11545-13070                                                   
      DATA CB1H2O/                                                      
     X-8.59451,-9.45197,-8.33631,-8.21424,-6.89777,-6.27923,-5.89945,   
     X-5.66364,-5.69459,-5.87082,-5.81185,-5.70141,-5.45890,-5.24048,   
     X-5.30703,-5.32430,-5.18694,-5.03410,-4.82279,-4.72208,-4.55097,   
     X-4.36284,-4.20326,-4.04534,-4.05883,-4.01183,-3.93857,-3.83212,   
     X-3.66113,-3.56021,-3.45969,-3.38518,-3.33373,-3.32721,-3.34771,   
     X-3.35412,-3.34584,-3.22701,-3.14293,-3.09481,-3.05706,-3.13587,   
     X-3.18156,-3.26336,-3.34559,-3.38498,-3.39054,-3.33695,-3.34959,   
     8-3.36191,-3.53258,-3.66238,-3.68946,-3.69155,-3.52990,-3.48606,   
     X-3.41160,-3.34144,-3.31933,-3.26341,-3.22609,-3.18298,-3.12800,   
     X-3.02166,-2.93903,-2.84135,-2.69864,-2.63582,-2.60853,-2.59699,   
     X-2.64799,-2.71846,-2.70856,-2.67797,-2.67978,-2.58432,-2.57052,   
     X-2.57883,-2.48977,-2.47541,-2.43446,-2.39253,-2.42823,-2.44830,   
     X-2.49704,-2.54904,-2.54865,-2.51223,-2.39407,-2.28582,-2.22341,   
     X-2.18280,-2.17308,-2.15234,-2.10486,-2.08564,-2.08578,-2.09615,   
     X-2.11136,-2.10200,-2.06832,-2.04134,-2.00194,-1.95185,-1.92025,   
     6-1.85931,-1.85988,-1.91696,-2.01129,-2.15097,-2.20539,-2.21302,   
     X-2.22309,-2.24412,-2.30471,-2.33847,-2.25445,-2.08096,-1.85098,   
     8-1.61538,-1.45841,-1.42089,-1.54484,-1.74234,-1.96839,-2.18038/   
      DATA CB2H2O/                                                      
     X-2.28394,-2.31701,-2.24125,-2.05966,-1.88694,-1.78105,-1.69960,   
     X-1.64107,-1.62909,-1.58168,-1.56599,-1.59412,-1.56739,-1.56346,   
     X-1.54456,-1.55619,-1.61000,-1.67072,-1.75312,-1.82511,-1.87588,   
     X-1.89436,-1.94377,-1.96038,-2.02291,-2.14131,-2.19637,-2.27114,   
     X-2.33418,-2.36152,-2.44688,-2.53819,-2.61011,-2.69105,-2.73774,   
     X-2.76700,-2.82031,-2.85910,-2.88525,-2.95422,-2.99210,-3.06247,   
     X-3.12280,-3.12274,-3.13972,-3.09998,-3.11771,-3.10670,-3.00116,   
     8-2.91302,-2.75838,-2.66379,-2.65726,-2.62212,-2.59431,-2.55351,   
     X-2.49874,-2.47486,-2.52563,-2.54608,-2.54311,-2.54938,-2.49038,   
     X-2.49664,-2.52688,-2.58688,-2.67000,-2.71830,-2.77113,-2.80244,   
     X-2.84845,-2.87062,-2.83368,-2.69338,-2.52225,-2.40864,-2.34429,   
     X-2.40612,-2.55941,-2.73915,-2.94409,-3.12344,-3.27308,-3.32104,   
     X-3.27077,-3.13129,-2.92504,-2.78515,-2.71007,-2.66733,-2.62518,   
     X-2.62279,-2.59906,-2.56745,-2.59548,-2.53657,-2.50849,-2.47640,   
     X-2.46021,-2.53747,-2.62220,-2.76449,-2.88041,-2.96357,-3.02153,   
     6-3.06178,-3.14581,-3.25318,-3.44687,-3.69634,-3.90497,-4.09399,   
     X-4.22346,-4.29749,-4.51957,-4.79572,-5.03708,-5.27140,-5.34657,   
     8-5.44757,-5.52207,-5.57087,-5.64385,-5.80294,-5.90763,-5.94797/   
      DATA CB3H2O/                                                      
     X-5.85439,-5.62721,-5.45121,-5.40324,-5.38540,-5.39409,-5.59404,   
     X-5.69955,-5.76877,-5.86764,-5.78129,-5.88887,-6.12206,-6.37505,   
     X-6.85575,-7.13884,-6.98622,-6.96112,-6.84830,-6.72456,-6.67530,   
     X-6.65251,-6.66033,-6.88151,-7.11199,-7.33922,-7.61766,-7.66585,   
     X-7.87464,-8.59519,-9.04047,-9.30602,-9.51273,-8.93688,-9.43151,   
     X-8.84005,-10.0000,-9.65151,-8.98420,-10.0000,-9.43151,-9.68331,   
     X-10.0000,-9.43067,-9.90527,-10.0000,-9.98810,-9.65151,-9.74384,   
     8-9.20004,-10.0000,-9.20004,-10.0000,-10.0000/                     
C=H2O ====13075-14860                                                   
      DATA CC1H2O/                                                      
     X-9.85239,-8.09585,-7.66916,-7.89183,-8.46587,-8.79342,-8.93440,   
     X-8.68356,-8.83423,-8.01626,-7.91911,-8.27604,-9.44864,-9.69462,   
     X-10.0000,-9.69462,-8.31857,-7.91867,-7.86404,-8.32240,-8.68705,   
     X-9.61515,-9.25284,-8.68705,-8.28789,-7.63730,-8.25919,-10.0000,   
     X-9.51758,-10.0000,-10.0000,-9.51758,-8.05261,-7.76848,-8.24255,   
     X-9.34171,-9.19941,-8.56505,-7.78955,-7.23750,-6.64136,-6.41854,   
     X-6.14335,-5.86704,-5.70840,-5.48179,-5.23814,-5.00650,-4.80407,   
     8-4.69986,-4.70404,-4.80846,-4.99355,-5.19947,-5.33300,-5.30550,   
     X-5.17017,-5.05309,-4.95685,-4.79959,-4.65496,-4.54077,-4.44407,   
     X-4.43768,-4.47167,-4.40429,-4.30236,-4.22549,-4.15283,-4.06900,   
     X-3.99244,-3.87562,-3.76949,-3.78198,-3.77003,-3.67364,-3.52061,   
     X-3.34459,-3.20426,-3.15993,-3.13851,-3.09692,-3.07747,-3.02936,   
     X-3.02192,-2.96720,-2.90584,-2.79069,-2.65042,-2.62072,-2.53133,   
     X-2.50554,-2.48745,-2.41611,-2.43532,-2.40913,-2.38723,-2.33337,   
     X-2.21812,-2.15072,-2.08313,-2.06151,-2.10585,-2.13670,-2.18757,   
     6-2.23995,-2.26992,-2.34229,-2.38059,-2.38087,-2.33246,-2.21618,   
     X-2.14795,-2.12707,-2.09130,-2.05043,-1.95550,-1.77077,-1.66044,   
     8-1.58224,-1.51702,-1.54004,-1.54074,-1.53712,-1.54938,-1.52352/   
      DATA CC2H2O/                                                      
     X-1.49404,-1.51985,-1.57774,-1.64393,-1.65332,-1.56238,-1.45105,   
     X-1.39264,-1.40635,-1.46167,-1.50365,-1.47751,-1.47268,-1.45992,   
     X-1.46654,-1.50223,-1.47576,-1.47730,-1.46977,-1.45630,-1.44490,   
     X-1.43097,-1.43664,-1.49313,-1.63372,-1.81848,-1.97938,-2.06009,   
     X-2.10124,-2.02376,-1.95095,-1.86835,-1.70161,-1.54835,-1.37614,   
     X-1.25130,-1.17408,-1.17670,-1.19790,-1.21344,-1.27252,-1.28030,   
     X-1.31031,-1.34321,-1.34056,-1.35264,-1.38137,-1.44648,-1.56735,   
     8-1.72096,-1.88960,-2.06793,-2.19583,-2.29229,-2.34400,-2.34120,   
     X-2.36407,-2.39688,-2.45450,-2.53132,-2.58327,-2.60585,-2.60773,   
     X-2.60606,-2.64243,-2.71853,-2.78182,-2.84459,-2.83665,-2.78522,   
     X-2.71157,-2.61628,-2.53314,-2.45692,-2.41679,-2.41535,-2.45500,   
     X-2.51120,-2.57918,-2.62854,-2.63617,-2.61204,-2.53833,-2.43992,   
     X-2.37490,-2.34880,-2.34476,-2.36650,-2.36553,-2.34094,-2.33633,   
     X-2.30483,-2.26933,-2.25141,-2.22841,-2.27610,-2.33673,-2.37913,   
     X-2.44271,-2.48571,-2.57146,-2.64200,-2.61103,-2.47198,-2.27897,   
     6-2.15874,-2.06557,-2.05371,-2.06333,-2.04641,-2.04429,-2.01040,   
     X-2.00804,-1.99416,-2.05499,-2.09948,-2.09706,-2.10517,-2.01267,   
     8-1.99934,-2.03719,-2.12114,-2.29537,-2.44295,-2.55926,-2.66007/   
      DATA CC3H2O/                                                      
     X-2.73808,-2.75972,-2.78032,-2.67031,-2.44995,-2.27133,-2.11654,   
     X-2.02598,-2.01402,-2.04264,-2.04511,-2.02975,-2.00687,-1.94840,   
     X-1.93975,-1.97104,-2.01554,-2.09336,-2.15829,-2.26705,-2.40356,   
     X-2.55216,-2.78858,-3.00697,-3.22778,-3.44413,-3.55439,-3.66412,   
     X-3.73884,-3.92224,-4.18922,-4.41150,-4.55122,-4.48637,-4.29339,   
     X-4.19248,-4.28419,-4.41178,-4.60369,-4.81645,-4.83716,-4.93818,   
     X-4.87772,-4.65255,-4.40133,-4.14378,-4.05431,-4.02425,-4.04257,   
     8-4.11794,-4.12153,-4.16374,-4.17459,-4.10274,-4.04733,-4.00176,   
     X-4.01760,-4.13393,-4.29085,-4.38409,-4.39975,-4.33916,-4.31515,   
     X-4.35426,-4.44628,-4.51842,-4.52596,-4.53399,-4.54590,-4.63864,   
     X-4.75657,-4.86504,-4.95580,-5.03365,-5.14879,-5.33868,-5.62972,   
     X-5.92584,-6.30299,-6.62922,-6.70773,-6.97810,-7.35919,-7.64909,   
     X-8.62765,-8.55378,-7.76305,-7.47054,-7.07789,-7.11538,-7.34052,   
     X-7.75694,-9.17126,-10.0000,-9.86547,-8.71424,-8.66552,-8.31602,   
     X-8.41339,-7.92192,-8.66385,-8.99856,-9.65437,-9.36822,-9.46517,   
     6-9.43986/                                                         
C=H2O ====14865-16045                                                   
      DATA CD1H2O/                                                      
     X-8.65941,-10.0000,-10.0000,-8.82641,-8.56244,-7.93689,-7.68823,   
     X-7.55818,-7.05113,-6.76446,-6.49313,-6.24749,-6.12617,-6.05220,   
     X-6.13798,-6.07909,-5.86845,-5.69141,-5.50496,-5.48376,-5.56108,   
     X-5.42768,-5.29615,-5.10664,-4.88111,-4.78669,-4.62385,-4.52174,   
     X-4.49073,-4.45792,-4.54129,-4.54480,-4.51341,-4.47258,-4.27643,   
     X-4.18091,-4.09557,-4.04222,-4.11247,-4.14851,-4.16970,-4.11065,   
     X-4.04809,-4.00745,-3.99879,-4.07978,-4.12451,-4.19723,-4.17393,   
     8-4.09022,-4.02101,-3.87998,-3.79109,-3.66411,-3.50066,-3.40580,   
     X-3.32713,-3.30194,-3.35131,-3.35137,-3.29933,-3.20658,-3.06263,   
     X-2.97995,-2.98759,-2.99176,-3.00756,-2.97359,-2.85849,-2.81640,   
     X-2.77094,-2.75469,-2.77297,-2.71165,-2.69187,-2.64524,-2.60542,   
     X-2.60059,-2.57842,-2.59991,-2.58577,-2.60792,-2.66006,-2.70803,   
     X-2.79094,-2.81048,-2.79532,-2.79499,-2.84578,-2.90638,-2.96270,   
     X-2.90633,-2.71535,-2.54313,-2.37822,-2.31125,-2.35246,-2.49011,   
     X-2.68215,-2.83136,-2.96357,-2.95873,-2.90544,-2.84387,-2.70352,   
     6-2.58329,-2.49207,-2.41735,-2.35522,-2.30279,-2.25786,-2.22067,   
     X-2.20741,-2.19735,-2.20181,-2.22358,-2.27247,-2.33737,-2.39631,   
     8-2.45029,-2.49867,-2.56939,-2.64313,-2.77129,-2.92580,-3.05513/   
      DATA CD2H2O/                                                      
     X-3.23728,-3.31415,-3.33588,-3.39544,-3.43947,-3.57455,-3.69955,   
     X-3.77227,-3.76260,-3.70753,-3.70942,-3.73899,-3.82827,-3.93052,   
     X-4.10437,-4.24931,-4.35000,-4.42069,-4.25644,-4.21454,-4.17061,   
     X-4.11168,-4.16038,-4.16686,-4.19465,-4.23251,-4.27305,-4.21672,   
     X-4.13963,-4.07622,-3.97332,-3.96263,-3.95541,-3.97392,-4.03776,   
     X-4.07778,-4.01771,-3.87070,-3.70710,-3.59495,-3.62243,-3.69528,   
     X-3.76171,-3.76582,-3.65793,-3.61555,-3.59708,-3.63113,-3.63691,   
     8-3.57465,-3.55435,-3.47507,-3.49075,-3.53253,-3.57495,-3.68837,   
     X-3.68628,-3.68771,-3.64979,-3.60831,-3.56633,-3.48250,-3.37856,   
     X-3.22908,-3.14286,-3.11346,-3.13691,-3.26625,-3.44333,-3.64611,   
     X-3.86925,-4.08285,-4.22794,-4.25115,-4.14282,-3.85944,-3.59027,   
     X-3.43514,-3.31856,-3.24442,-3.22555,-3.18795,-3.20363,-3.30589,   
     X-3.41248,-3.60718,-3.70563,-3.65431,-3.57332,-3.47347,-3.47521,   
     X-3.53388,-3.72003,-3.97569,-4.31048,-4.87330,-5.39648,-6.27322,   
     X-8.18185,-8.07588,-8.20933,-8.60643,-8.83713,-9.01727,-9.15690,   
     6-9.41970,-9.51520,-9.63843,-9.87539,-9.94314,-10.0000/            
C=H2O ====16340-17860                                                   
      DATA CE1H2O/                                                      
     X-10.0000,-9.99542,-9.97748,-9.94374,-9.93287,-9.90450,-9.85082,   
     X-9.82140,-9.73549,-9.64536,-9.59412,-9.54635,-9.26735,-9.23243,   
     X-9.05763,-8.93240,-8.74549,-8.52992,-8.25637,-8.13836,-7.66071,   
     X-7.35897,-7.37375,-7.09925,-6.98326,-6.89298,-6.79545,-6.97172,   
     X-6.67558,-6.37369,-6.21189,-5.94606,-5.84975,-5.83536,-5.82878,   
     X-5.78456,-5.68334,-5.44809,-5.28421,-5.06970,-4.89514,-4.80192,   
     X-4.73588,-4.78558,-4.78127,-4.73462,-4.54889,-4.33093,-4.18543,   
     8-4.09190,-4.11204,-4.13402,-4.13401,-3.97210,-3.79621,-3.65860,   
     X-3.55511,-3.57549,-3.57633,-3.53833,-3.46143,-3.34082,-3.23729,   
     X-3.17300,-3.14437,-3.10547,-3.05061,-2.96941,-2.86694,-2.79500,   
     X-2.75350,-2.75307,-2.77146,-2.79530,-2.76451,-2.68758,-2.63931,   
     X-2.57797,-2.58894,-2.59717,-2.52817,-2.47282,-2.42360,-2.45382,   
     X-2.56145,-2.61304,-2.59963,-2.52689,-2.46472,-2.46461,-2.45407,   
     X-2.39432,-2.25523,-2.14408,-2.05525,-2.01888,-2.07413,-2.12889,   
     X-2.25990,-2.39692,-2.48925,-2.54855,-2.53415,-2.54460,-2.50455,   
     6-2.46921,-2.42259,-2.28066,-2.22625,-2.17393,-2.13289,-2.19687,   
     X-2.21326,-2.23949,-2.27620,-2.26819,-2.29009,-2.29281,-2.25201,   
     8-2.17355,-2.07947,-2.03121,-2.01967,-2.04954,-2.08143,-2.06833/   
      DATA CE2H2O/                                                      
     X-2.05240,-2.05599,-2.06967,-2.12334,-2.21510,-2.29897,-2.40035,   
     X-2.52428,-2.62702,-2.73003,-2.87671,-2.99894,-3.10548,-3.25316,   
     X-3.32982,-3.39709,-3.53992,-3.63406,-3.74020,-3.92706,-3.96893,   
     X-3.93910,-3.93559,-3.82934,-3.82006,-3.87551,-3.89939,-3.94509,   
     X-3.95617,-3.96332,-3.96114,-3.99122,-4.01273,-4.01717,-4.02888,   
     X-4.04697,-4.10112,-4.14864,-4.27169,-4.32135,-4.33175,-4.41165,   
     X-4.36331,-4.39914,-4.42505,-4.40381,-4.48901,-4.44885,-4.38473,   
     8-4.32458,-4.19760,-4.16511,-4.15683,-4.14102,-4.11365,-4.10673,   
     X-4.13026,-4.13652,-4.19636,-4.19684,-4.14832,-4.05676,-3.96205,   
     X-3.90165,-3.84404,-3.86524,-3.83773,-3.69609,-3.55481,-3.42043,   
     X-3.33841,-3.37637,-3.44611,-3.49193,-3.52932,-3.44601,-3.36757,   
     X-3.31227,-3.23777,-3.21254,-3.19842,-3.22310,-3.28352,-3.27914,   
     X-3.23481,-3.12437,-3.04729,-3.06777,-3.09818,-3.19530,-3.24569,   
     X-3.24974,-3.30729,-3.27728,-3.25317,-3.22055,-3.15996,-3.17334,   
     X-3.17694,-3.12288,-3.04593,-2.99049,-2.98361,-3.06492,-3.19818,   
     6-3.31628,-3.42190,-3.47775,-3.55095,-3.56669,-3.53409,-3.38883,   
     X-3.17115,-3.00955,-2.89158,-2.83770,-2.86055,-2.86096,-2.83436,   
     8-2.82886,-2.78602,-2.80289,-2.85454,-2.89629,-2.99573,-3.11206/   
      DATA CE3H2O/                                                      
     X-3.27394,-3.47183,-3.64849,-3.79741,-3.91130,-4.08705,-4.24317,   
     X-4.41275,-4.55729,-4.55082,-4.66958,-4.82149,-4.94204,-5.13772,   
     X-5.22105,-5.20710,-5.18691,-5.09729,-5.03217,-4.96344,-4.97810,   
     X-5.03506,-5.05380,-5.08007,-5.10835,-5.13285,-5.24491,-5.44530,   
     X-5.65236,-5.80563,-5.75192,-5.58691,-5.38023,-5.31721,-5.30923,   
     X-5.34087,-5.39044,-5.38089,-5.43438,-5.52124,-5.79590,-6.25048,   
     X-6.78272,-8.29899,-8.50913,-8.77871,-8.91512,-9.13453,-9.37455,   
     8-9.56578,-9.71290,-9.89385,-10.0000/                              
      END                                                               
      BLOCK DATA CPO3                                                   
C>    BLOCK DATA                                                        
C                                                                       
C     C' FOR O3                                                         
      COMMON /O3/  C11O3(  41),                                         
     +             C21O3( 126),C22O3(  27),                             
     +             C31O3( 126),C32O3(   8),                             
     +             C41O3(  36),                                         
     +             C51O3(  83)                                          
C=O3  ====C' FOR    5 BAND MODELS                                       
C=O3  ====    0-  200                                                   
      DATA C11O3/                                                       
     1 -2.0427, -1.8966, -1.6263, -1.3896, -1.2170, -1.0996, -1.0214,   
     2 -0.9673, -0.9249, -0.8896, -0.8612, -0.8417, -0.8360, -0.8483,   
     3 -0.8785, -0.9273, -0.9932, -1.0720, -1.1639, -1.2662, -1.3771,   
     4 -1.4976, -1.6274, -1.7712, -1.9289, -2.1027, -2.2948, -2.4987,   
     5 -2.7321, -2.9992, -3.3045, -3.6994, -4.1022, -4.6467, -5.1328,   
     6 -5.6481, -6.1634, -6.6787, -7.1940, -7.7093, -8.0000/            
C=O3  ====  515- 1275                                                   
      DATA C21O3/                                                       
     1 -7.9274, -7.6418, -7.3562, -7.0706, -6.7850, -6.4994, -6.2138,   
     2 -5.9282, -5.6426, -5.3570, -5.0714, -4.7858, -4.5002, -4.2146,   
     3 -3.9290, -3.6213, -3.3407, -3.0722, -2.8226, -2.5914, -2.3778,   
     4 -2.1823, -2.0057, -1.8456, -1.6991, -1.5659, -1.4436, -1.3323,   
     5 -1.2319, -1.1407, -1.0550, -0.9733, -0.9033, -0.8584, -0.8527,   
     6 -0.8838, -0.9219, -0.9360, -0.9025, -0.8402, -0.7913, -0.7794,   
     7 -0.8123, -0.8750, -0.9484, -1.0206, -1.0864, -1.1520, -1.2202,   
     8 -1.2928, -1.3745, -1.4641, -1.5611, -1.6669, -1.7816, -1.9051,   
     9 -2.0383, -2.1796, -2.3312, -2.4906, -2.6569, -2.8354, -3.0179,   
     $ -3.2121, -3.4106, -3.6208, -3.8332, -4.0584, -4.2854, -4.4979,   
     1 -4.7175, -4.9109, -5.1246, -5.3344, -5.5442, -5.7540, -5.9638,   
     2 -6.1736, -6.3834, -6.5932, -6.8030, -7.0128, -6.9011, -6.2590,   
     3 -5.8119, -5.1603, -4.3327, -3.6849, -3.1253, -2.6304, -2.1903,   
     4 -1.8019, -1.4585, -1.1533, -0.8770, -0.6166, -0.3630, -0.1102,   
     5  0.1336,  0.3525,  0.5326,  0.6678,  0.7510,  0.7752,  0.7826,   
     6  0.7874,  0.8006,  0.8241,  0.7614,  0.5662,  0.1949, -0.2770,   
     7 -0.6199, -0.8347, -0.9586, -1.0168, -1.0501, -1.0816, -1.0980,   
     8 -1.0833, -1.0424, -0.9972, -0.9724, -0.9855, -1.0365, -1.1187/   
      DATA C22O3/                                                       
     1 -1.2150, -1.3142, -1.4103, -1.4998, -1.5933, -1.6938, -1.8061,   
     2 -1.9332, -2.0737, -2.2279, -2.3966, -2.5787, -2.7755, -2.9855,   
     3 -3.2090, -3.4465, -3.6967, -3.9633, -4.2461, -4.5502, -4.8912,   
     4 -5.2845, -5.7654, -6.4194, -6.9288, -7.4382, -7.9476/            
C=O3  ==== 1630- 2295                                                   
      DATA C31O3/                                                       
     1 -8.0000, -7.5432, -6.9273, -6.3115, -5.5431, -4.9563, -4.4640,   
     2 -4.0371, -3.6533, -3.3069, -2.9877, -2.7042, -2.4507, -2.2355,   
     3 -2.0651, -1.9477, -1.8705, -1.8422, -1.8235, -1.7782, -1.7367,   
     4 -1.7012, -1.7208, -1.8353, -2.0331, -2.3077, -2.5996, -2.7517,   
     5 -2.7263, -2.6671, -2.6415, -2.6449, -2.6613, -2.6589, -2.6083,   
     6 -2.5250, -2.4529, -2.4157, -2.4298, -2.4906, -2.5823, -2.6873,   
     7 -2.7808, -2.8612, -2.9303, -3.0022, -3.0873, -3.1844, -3.2929,   
     8 -3.4158, -3.5361, -3.6710, -3.8062, -3.9520, -4.1140, -4.2635,   
     9 -4.4395, -4.6138, -4.8372, -5.0837, -5.3302, -5.3665, -5.4358,   
     $ -5.0651, -4.8416, -4.5293, -4.2547, -4.0039, -3.7818, -3.5850,   
     1 -3.4091, -3.2509, -3.0934, -2.9485, -2.8055, -2.6705, -2.5482,   
     2 -2.4362, -2.3380, -2.2486, -2.1645, -2.0834, -2.0035, -1.9081,   
     3 -1.7681, -1.5768, -1.3615, -1.1463, -0.9482, -0.7800, -0.6336,   
     4 -0.5092, -0.4105, -0.3495, -0.3274, -0.3133, -0.3023, -0.2859,   
     5 -0.3055, -0.4374, -0.6972, -1.1064, -1.4904, -1.9687, -2.4498,   
     7 -2.5971, -2.5220, -2.4301, -2.3467, -2.2901, -2.2746, -2.3021,   
     7 -2.3635, -2.4420, -2.5088, -2.5485, -2.5617, -2.5656, -2.5771,   
     8 -2.6134, -2.6822, -2.7885, -2.9379, -3.1200, -3.3260, -3.5464/   
      DATA C32O3/                                                       
     1 -3.7736, -4.0311, -4.3651, -4.7794, -5.5152, -6.1240, -7.2193,   
     2 -8.0000/                                                         
C=O3  ==== 2670- 2845                                                   
      DATA C41O3/                                                       
     1 -7.9721, -7.6118, -7.2515, -6.8913, -6.5310, -6.1707, -5.8105,   
     2 -5.4502, -5.0899, -4.7297, -4.3694, -3.9462, -3.6022, -3.2886,   
     3 -3.0234, -2.7863, -2.5797, -2.4073, -2.2760, -2.1894, -2.1359,   
     4 -2.1160, -2.0808, -2.0151, -1.9666, -1.9409, -1.9868, -2.1450,   
     5 -2.3965, -2.8042, -3.5500, -4.8275, -5.6378, -6.4482, -7.2585,   
     6 -8.0000/                                                         
C=O3  ==== 2850- 3260                                                   
      DATA C51O3/                                                       
     1 -8.0000, -7.6278, -7.2556, -6.8834, -6.5111, -6.1389, -5.7667,   
     2 -5.3945, -5.0223, -4.6501, -4.2779, -3.9056, -3.5334, -3.3828,   
     3 -3.2452, -3.1411, -3.0403, -2.9428, -2.8436, -2.7573, -2.6853,   
     4 -2.6040, -2.5218, -2.4121, -2.3547, -2.1970, -2.0668, -1.9121,   
     5 -1.7617, -1.6153, -1.4688, -1.4022, -1.3447, -1.2669, -1.1902,   
     6 -1.1805, -1.1707, -1.1609, -1.1609, -1.1805, -1.1999, -1.4214,   
     7 -1.6348, -1.7519, -1.9730, -2.2078, -2.4608, -2.5337, -2.5923,   
     8 -2.6616, -2.6384, -2.6271, -2.6154, -2.5570, -2.4983, -2.4480,   
     9 -2.3890, -2.3663, -2.3431, -2.3314, -2.3200, -2.3200, -2.3314,   
     $ -2.3431, -2.3547, -2.3777, -2.4004, -2.5218, -2.6499, -2.7694,   
     1 -2.9057, -3.0286, -3.1543, -3.3696, -3.6053, -4.1977, -4.7811,   
     2 -5.2933, -5.7554, -6.4542, -7.0239, -7.5937, -8.0000/            
      END                                                               
      BLOCK DATA CPTRCG                                                 
C>    BLOCK DATA                                                        
C                                                                       
C     C' FOR TRACE GASES (NH3, NO, NO2, SO2)                            
      COMMON /TRACEG/  C11NH3( 78),                                     
     +                 C21NH3(126),C22NH3(126),C23NH3(101),             
     +                 C11NO ( 62),                                     
     +                 C11NO2(126),C12NO2( 16),                         
     +                 C11SO2( 38),                                     
     +                 C21SO2(126),C22SO2( 62)                          
C=NH3 ====C' FOR    2 BAND MODEL                                        
C=NH3 ====    0-  385                                                   
      DATA C11NH3/                                                      
     1 -5.7142, -5.2854, -4.5163, -3.9795, -3.4393, -2.8735, -2.4947,   
     2 -2.2290, -2.0624, -1.9616, -1.8707, -1.7712, -1.6473, -1.5376,   
     3 -1.4315, -1.3328, -1.2391, -1.1768, -1.1302, -1.0755, -1.0272,   
     4 -0.9884, -0.9501, -0.9287, -0.9101, -0.8982, -0.8888, -0.8709,   
     5 -0.8620, -0.8645, -0.8676, -0.8910, -0.9084, -0.9328, -0.9546,   
     6 -0.9743, -0.9983, -1.0202, -1.0569, -1.0824, -1.1086, -1.1475,   
     7 -1.1790, -1.2059, -1.2668, -1.3237, -1.3801, -1.4271, -1.4920,   
     8 -1.5403, -1.5848, -1.6498, -1.7382, -1.8294, -1.9203, -2.0694,   
     9 -2.2134, -2.3622, -2.5516, -2.7633, -2.9344, -3.1172, -3.3543,   
     $ -3.5671, -3.7504, -3.9884, -4.2633, -4.5505, -4.7837, -5.0350,   
     1 -5.3733, -5.6478, -5.8856, -6.1041, -6.3375, -6.5709, -6.8043,   
     2 -7.0377/                                                         
C=NH3 ====  390- 2150                                                   
      DATA C21NH3/                                                      
     1 -7.2620, -7.0950, -6.9279, -6.7608, -6.5938, -6.4267, -6.2597,   
     2 -6.0926, -5.8842, -5.7560, -5.5844, -5.4248, -5.2573, -5.0771,   
     3 -4.9244, -4.7903, -4.6512, -4.5169, -4.3961, -4.2607, -4.1705,   
     4 -4.1294, -4.0611, -3.9538, -3.8821, -3.7592, -3.6754, -3.6830,   
     5 -3.6977, -3.6925, -3.6632, -3.5899, -3.5218, -3.5265, -3.6535,   
     6 -3.8068, -3.9818, -4.0574, -3.9789, -3.8858, -3.8120, -3.8927,   
     7 -3.8799, -3.8623, -3.3984, -2.8857, -2.5814, -2.4066, -2.3850,   
     8 -2.5415, -2.8161, -3.2265, -3.7177, -3.9932, -4.0683, -4.0785,   
     9 -3.9912, -3.7418, -3.4742, -3.2651, -3.0715, -2.9500, -2.8669,   
     $ -2.7723, -2.6614, -2.5613, -2.4372, -2.3085, -2.1696, -2.0302,   
     1 -1.9166, -1.8071, -1.7221, -1.6370, -1.5453, -1.4487, -1.3539,   
     2 -1.2570, -1.1618, -1.1131, -1.0824, -1.0559, -1.0190, -0.9721,   
     3 -0.9218, -0.8680, -0.8556, -0.8568, -0.8713, -0.8984, -0.9076,   
     4 -0.9024, -0.8882, -0.8968, -0.9492, -1.0089, -1.0846, -1.1556,   
     5 -1.1792, -1.1946, -1.1964, -1.2173, -1.2424, -1.1744, -0.9743,   
     6 -0.6350, -0.2975, -0.0705,  0.0144, -0.0978, -0.3536, -0.5630,   
     7 -0.5479, -0.3784, -0.1797, -0.1151, -0.3085, -0.6180, -0.9718,   
     8 -1.2926, -1.2748, -1.1217, -1.0197, -0.9300, -0.8817, -0.8723/   
      DATA C22NH3/                                                      
     1 -0.8309, -0.7804, -0.7075, -0.6431, -0.6176, -0.6012, -0.6079,   
     2 -0.6272, -0.6304, -0.6193, -0.6026, -0.5882, -0.6029, -0.6317,   
     3 -0.6862, -0.7447, -0.7921, -0.8275, -0.8595, -0.8856, -0.9236,   
     4 -0.9934, -1.0693, -1.1460, -1.2100, -1.2863, -1.3593, -1.4292,   
     5 -1.5029, -1.6054, -1.7067, -1.8110, -1.9350, -2.0346, -2.1305,   
     6 -2.2294, -2.3724, -2.4917, -2.6218, -2.8056, -2.9693, -3.1101,   
     7 -3.2790, -3.5315, -3.7011, -3.8952, -4.1527, -4.4121, -4.5244,   
     8 -4.8599, -5.1940, -5.5589, -5.8170, -6.1402, -6.4633, -6.7865,   
     9 -7.1096, -7.4328, -7.7559, -8.0000, -7.8199, -7.5988, -7.3778,   
     $ -7.1567, -6.9357, -6.7146, -6.4936, -6.2725, -6.0515, -5.8304,   
     1 -5.5963, -5.3883, -5.2319, -5.0536, -4.9029, -4.7789, -4.5867,   
     2 -4.3414, -4.1399, -3.9784, -3.7553, -3.5773, -3.4123, -3.2254,   
     3 -3.0384, -2.9243, -2.7755, -2.5809, -2.4726, -2.3206, -2.1209,   
     4 -2.0331, -1.9016, -1.7458, -1.6927, -1.5958, -1.4863, -1.4492,   
     5 -1.3730, -1.2859, -1.2554, -1.2129, -1.1689, -1.1802, -1.1948,   
     6 -1.1882, -1.2185, -1.2464, -1.2522, -1.2946, -1.3587, -1.3971,   
     7 -1.4488, -1.5261, -1.5495, -1.5478, -1.4926, -1.3115, -1.0455,   
     8 -0.7987, -0.5972, -0.4664, -0.4244, -0.4426, -0.4952, -0.5772/   
      DATA C23NH3/                                                      
     1 -0.6845, -0.8097, -0.9443, -1.0904, -1.2232, -1.2853, -1.2949,   
     2 -1.2708, -1.1896, -1.1467, -1.1187, -1.0700, -1.0392, -1.0227,   
     3 -1.0178, -1.0089, -1.0021, -0.9706, -0.9569, -0.9928, -1.0310,   
     4 -1.0767, -1.1053, -1.1241, -1.1717, -1.2203, -1.2772, -1.3356,   
     5 -1.3855, -1.4734, -1.5701, -1.6572, -1.7638, -1.8652, -1.9918,   
     6 -2.1449, -2.2388, -2.3251, -2.3936, -2.4525, -2.5998, -2.7147,   
     7 -2.7704, -2.7852, -2.7524, -2.7646, -2.8507, -3.0422, -3.2642,   
     8 -3.5201, -3.6328, -3.7624, -3.9505, -4.1399, -4.3087, -4.3859,   
     9 -4.4295, -4.4493, -4.3317, -4.1892, -4.0545, -3.9356, -3.9117,   
     $ -4.0001, -4.0627, -4.0833, -4.0997, -4.0659, -4.0264, -4.0893,   
     1 -4.1832, -4.2522, -4.3182, -4.3949, -4.4191, -4.4580, -4.5997,   
     2 -4.7282, -4.8370, -5.0041, -5.1644, -5.2101, -5.4145, -5.5114,   
     3 -5.6986, -5.8057, -5.9529, -6.1000, -6.2472, -6.3943, -6.5415,   
     4 -6.6886, -6.8358, -6.9829, -7.1301, -7.2772, -7.4244, -7.5715,   
     5 -7.7187, -7.8658, -8.0000/                                       
C=NO  ====C' FOR    1 BAND MODEL                                        
C=NO  ==== 1700- 2005                                                   
      DATA C11NO/                                                       
     1 -7.9265, -7.5649, -7.2033, -6.8418, -6.4802, -6.0647, -5.7193,   
     2 -5.3955, -5.1475, -4.8233, -4.5194, -4.3184, -3.9664, -3.7045,   
     3 -3.3398, -3.0368, -2.7282, -2.4448, -2.1791, -1.9315, -1.7046,   
     4 -1.4984, -1.3133, -1.1486, -1.0036, -0.8776, -0.7699, -0.6811,   
     5 -0.6124, -0.5663, -0.5488, -0.5673, -0.6076, -0.6791, -0.7553,   
     6 -0.7811, -0.7711, -0.6840, -0.5704, -0.4791, -0.4138, -0.3950,   
     7 -0.4189, -0.4794, -0.5751, -0.7062, -0.8751, -1.0852, -1.3406,   
     8 -1.6473, -2.0068, -2.4335, -2.9068, -3.4595, -4.0370, -4.6795,   
     9 -5.2704, -5.8613, -6.4522, -7.0431, -7.6340, -8.0000/            
C=NO2 ====C' FOR    1 BAND MODEL                                        
C=NO2 ====  580-  925, 1515- 1695, 2800- 2970                           
      DATA C11NO2/                                                      
     1 -6.0000, -5.8419, -5.5313, -5.1048, -4.9512, -4.5830, -4.2676,   
     2 -3.9783, -3.7150, -3.4782, -3.2541, -3.0597, -2.8625, -2.6989,   
     3 -2.5323, -2.3904, -2.2561, -2.1346, -2.0320, -1.9284, -1.8584,   
     4 -1.7778, -1.7222, -1.6776, -1.6024, -1.5658, -1.4917, -1.4117,   
     5 -1.3706, -1.3045, -1.2914, -1.3292, -1.3666, -1.4268, -1.4564,   
     6 -1.4076, -1.3284, -1.2804, -1.2497, -1.2519, -1.3123, -1.3704,   
     7 -1.4192, -1.4878, -1.5301, -1.5575, -1.5912, -1.6250, -1.6544,   
     8 -1.6849, -1.7340, -1.7748, -1.8171, -1.8679, -1.9256, -1.9809,   
     9 -2.0386, -2.1112, -2.1769, -2.2462, -2.3199, -2.4129, -2.5156,   
     $ -2.6575, -2.8825, -3.1831, -3.6209, -4.2271, -5.5290, -6.0000,   
     1 -6.0000, -5.5415, -4.8964, -4.2513, -3.6063, -2.9612, -2.1733,   
     2 -1.5514, -1.0260, -0.5817, -0.2030,  0.1231,  0.4098,  0.6653,   
     3  0.8885,  1.0716,  1.2025,  1.2697,  1.2926,  1.3006,  1.3128,   
     4  1.3449,  1.3656,  1.3245,  1.1868,  0.9310,  0.5907,  0.2056,   
     5 -0.2337, -0.7633, -1.4541, -2.4451, -3.1822, -3.9193, -4.6565,   
     6 -5.3936, -6.0000, -6.0000, -5.7606, -5.3422, -4.9238, -4.5055,   
     7 -4.0871, -3.6687, -3.2504, -2.8320, -2.3736, -1.9565, -1.5769,   
     8 -1.2400, -0.9384, -0.6781, -0.4630, -0.2944, -0.1783, -0.1213/   
      DATA C12NO2/                                                      
     1 -0.1033, -0.0934, -0.0723, -0.0267,  0.0016, -0.0394, -0.1700,   
     2 -0.4141, -0.7861, -1.2951, -2.0379, -3.0984, -3.8692, -4.6399,   
     3 -5.4107, -6.0000/                                                
C=SO2 ====C' FOR    2 BAND MODEL                                        
C=SO2 ====    0-  185                                                   
      DATA C11SO2/                                                      
     1 -0.9312, -0.8101, -0.5729, -0.3590, -0.2016, -0.0971, -0.0333,   
     2  0.0048,  0.0228,  0.0214, -0.0044, -0.0567, -0.1334, -0.2315,   
     3 -0.3451, -0.4741, -0.6198, -0.7854, -0.9764, -1.1922, -1.4326,   
     4 -1.6951, -1.9687, -2.2788, -2.6034, -2.9398, -3.3551, -3.7704,   
     5 -4.1857, -4.6010, -5.0163, -5.4316, -5.8469, -6.2622, -6.6775,   
     6 -7.0928, -7.5081, -7.9234/                                       
C=SO2 ====  400-  650,  950- 1460, 2415- 2580                           
      DATA C21SO2/                                                      
     1 -8.0000, -7.4209, -6.6994, -5.9778, -5.2563, -4.4248, -3.7369,   
     2 -3.0917, -2.5200, -2.0303, -1.6307, -1.3056, -1.0373, -0.8189,   
     3 -0.6395, -0.4880, -0.3574, -0.2369, -0.1237, -0.0261,  0.0250,   
     4  0.0186, -0.0194, -0.0659, -0.0638, -0.0065,  0.0468,  0.0682,   
     5  0.0355, -0.0431, -0.1334, -0.2175, -0.2954, -0.3738, -0.4588,   
     6 -0.5571, -0.6729, -0.8131, -0.9805, -1.1831, -1.4334, -1.7354,   
     7 -2.1065, -2.5705, -3.1238, -3.7691, -4.5793, -5.7012, -6.5603,   
     8 -7.4195, -8.0000, -7.9302, -7.6563, -7.3824, -7.1085, -6.8346,   
     9 -6.5607, -6.2868, -6.0129, -5.7390, -5.4651, -5.1912, -4.9173,   
     $ -4.6434, -4.3695, -4.0956, -3.8217, -3.5478, -3.2739, -3.0000,   
     1 -2.7261, -2.4522, -2.1783, -1.9317, -1.7073, -1.5004, -1.3136,   
     2 -1.1444, -0.9901, -0.8505, -0.7238, -0.6083, -0.5025, -0.4016,   
     3 -0.3047, -0.2112, -0.1263, -0.0656, -0.0414, -0.0509, -0.0731,   
     4 -0.0802, -0.0483,  0.0032,  0.0339,  0.0249, -0.0296, -0.1170,   
     5 -0.2141, -0.3069, -0.3968, -0.4881, -0.5881, -0.7019, -0.8299,   
     6 -0.9729, -1.1305, -1.3036, -1.4924, -1.7000, -1.9306, -2.1906,   
     7 -2.4959, -2.8613, -3.3176, -3.9236, -4.6847, -5.2561, -4.7082,   
     8 -4.1110, -3.6582, -3.1963, -2.7063, -1.9643, -1.3089, -0.6856/   
      DATA C22SO2/                                                      
     1 -0.0412,  0.3678,  0.6712,  0.9031,  1.0577,  1.1145,  1.1272,   
     2  1.1300,  1.1237,  1.1459,  1.1047,  0.9617,  0.7107,  0.3254,   
     3 -0.2322, -1.0612, -1.7715, -2.6089, -3.0225, -3.3542, -3.7339,   
     4 -4.1986, -4.7852, -5.6390, -6.2740, -6.9091, -7.5441, -8.0000,   
     5 -8.0000, -7.5698, -6.8815, -6.1933, -5.3530, -4.8602, -4.1286,   
     6 -2.9922, -2.3525, -1.8905, -1.5178, -1.2295, -1.0082, -0.8484,   
     7 -0.7634, -0.7340, -0.7203, -0.7167, -0.7097, -0.7297, -0.8391,   
     8 -1.0472, -1.3607, -1.7720, -2.2957, -3.0566, -4.1073, -4.5337,   
     9 -4.9481, -5.4542, -6.2445, -6.8148, -7.3850, -7.9553/            
      END                                                               
      BLOCK DATA CPUMIX                                                 
C>    BLOCK DATA                                                        
C                                                                       
C     C' FOR UNIFORMLY MIXED GASES (CO2, CO, CH4, N2O, O2)              
      COMMON /UFMIX1/                                                   
     +        C11CO2( 83),                                              
     +        C21CO2(121),                                              
     +        C31CO2(126),C32CO2( 85),                                  
     +        C41CO2(126),C42CO2( 12),                                  
     +        C51CO2( 62),                                              
     +        C61CO2(126),C62CO2( 45),                                  
     +        C71CO2(126),C72CO2( 99),                                  
     +        C81CO2(126),C82CO2( 82)                                   
      COMMON /UFMIX2/                                                   
     +        C11CO(  36),                                              
     +        C21CO( 126),C22CO(  11),                                  
     +        C11CH4(126),C12CH4(126),C13CH4(126),C14CH4(115),          
     +        C11N2O( 25),                                              
     +        C21N2O(126),C22N2O(126),C23N2O(112),                      
     +        C31N2O(126),C32N2O(126),C33N2O( 63),                      
     +        C11O2(  54),                                              
     +        C21O2( 126),C22O2( 126),C23O2(  76)                       
C=CO2 ====C' FOR    8 BAND MODELS                                       
C=CO2 ====  425-  835                                                   
      DATA C11CO2/                                                      
     1 -9.8495, -9.6484, -9.4472, -9.2461, -9.0449, -8.9544, -8.6127,   
     2 -8.4076, -8.2710, -8.0391, -7.9485, -7.9638, -7.7849, -7.6278,   
     3 -7.1418, -6.7823, -6.3826, -6.0323, -5.7501, -5.5249, -5.3304,   
     4 -5.0105, -4.7703, -4.5714, -4.3919, -4.2974, -4.1370, -3.8761,   
     5 -3.5936, -3.2852, -3.0016, -2.7303, -2.4868, -2.2741, -2.0936,   
     6 -1.9424, -1.8092, -1.6843, -1.5372, -1.3803, -1.2043, -0.9930,   
     7 -0.7724, -0.5509, -0.3465, -0.1785, -0.0470,  0.0449,  0.1114,   
     8  0.1367,  0.0910,  0.0066, -0.1269, -0.2994, -0.4934, -0.7101,   
     9 -0.9087, -1.1004, -1.2694, -1.4064, -1.5622, -1.6810, -1.7841,   
     $ -1.8973, -2.0274, -2.2079, -2.4264, -2.6763, -2.9312, -3.1896,   
     1 -3.4262, -3.5979, -3.7051, -3.7372, -3.7983, -3.9154, -4.0520,   
     2 -4.2567, -4.4661, -4.6670, -4.9226, -5.2203, -5.5597/            
C=CO2 ====  840- 1440                                                   
      DATA C21CO2/                                                      
     1 -5.6403, -5.7039, -5.7674, -5.8310, -5.8948, -5.9503, -6.0217,   
     2 -6.0392, -5.9855, -5.8620, -5.6834, -5.5083, -5.3473, -5.2028,   
     3 -5.0799, -4.9628, -4.8379, -4.7032, -4.5584, -4.4213, -4.3198,   
     4 -4.2786, -4.2843, -4.3099, -4.3210, -4.2769, -4.2229, -4.2179,   
     5 -4.2950, -4.4789, -4.7550, -5.0902, -5.4329, -5.6689, -5.6608,   
     6 -5.4582, -5.1969, -4.9419, -4.7106, -4.5084, -4.3409, -4.2211,   
     7 -4.1563, -4.1259, -4.1108, -4.0803, -4.0211, -3.9824, -4.0053,   
     8 -4.1221, -4.3504, -4.6741, -5.0826, -5.5857, -6.2301, -7.0829,   
     9 -8.1344, -8.8601, -9.0457, -9.1231, -9.0728, -9.1413, -9.1221,   
     $ -9.1882, -9.2752, -9.2237, -9.3604, -9.3058, -9.5455, -9.5567,   
     1 -9.3754, -8.7756, -8.0904, -7.4827, -6.9585, -6.5095, -6.1194,   
     2 -5.7824, -5.4910, -5.2532, -5.0840, -4.9920, -4.9577, -4.9638,   
     3 -4.9741, -4.9555, -4.9466, -4.9774, -5.0719, -5.2558, -5.5213,   
     4 -5.8633, -6.2877, -6.7878, -7.2602, -7.2940, -6.8524, -6.3372,   
     5 -5.8854, -5.5065, -5.2011, -4.9776, -4.8471, -4.7885, -4.7783,   
     6 -4.7815, -4.7538, -4.7228, -4.7259, -4.7860, -4.9231, -5.1270,   
     7 -5.3831, -5.6849, -6.0351, -6.4437, -6.9160, -7.4815, -8.1437,   
     8 -8.9449, -9.8564/                                                
C=CO2 ==== 1805- 2855                                                   
      DATA C31CO2/                                                      
     1 -9.8903, -9.4365, -8.9826, -8.5288, -8.1184, -7.6555, -7.1673,   
     2 -6.7226, -6.3423, -6.0410, -5.8154, -5.6519, -5.5186, -5.3859,   
     3 -5.2279, -5.0238, -4.7865, -4.5343, -4.2846, -4.0560, -3.8717,   
     4 -3.7624, -3.7231, -3.7335, -3.8312, -3.9854, -4.1930, -4.4895,   
     5 -4.7394, -4.8892, -4.9499, -4.9392, -4.9787, -5.1129, -5.3330,   
     6 -5.6093, -5.8862, -6.0581, -6.0274, -5.8356, -5.5989, -5.3738,   
     7 -5.1661, -4.9472, -4.7020, -4.4354, -4.1439, -3.8561, -3.5944,   
     8 -3.3694, -3.2100, -3.1041, -3.0411, -3.0471, -3.1077, -3.2305,   
     9 -3.4274, -3.6115, -3.7542, -3.8666, -3.9338, -4.0079, -4.0962,   
     $ -4.2142, -4.1433, -4.2870, -4.4796, -4.6618, -4.8204, -4.9499,   
     1 -4.9862, -5.0171, -5.0282, -5.0580, -5.0398, -4.9465, -4.7816,   
     2 -4.5538, -4.2975, -4.0286, -3.7528, -3.4715, -3.1899, -2.9041,   
     3 -2.6127, -2.3212, -2.0435, -1.7894, -1.5531, -1.3382, -1.1515,   
     4 -0.9990, -0.8833, -0.8006, -0.7227, -0.6288, -0.4977, -0.3249,   
     5 -0.1349,  0.0576,  0.2487,  0.4386,  0.6260,  0.8081,  0.9681,   
     6  1.0859,  1.1522,  1.1861,  1.2039,  1.2255,  1.2587,  1.2473,   
     7  1.1457,  0.9139,  0.5250,  0.0173, -0.5796, -1.3944, -2.3841,   
     8 -2.7244, -2.9264, -3.0689, -3.2120, -3.3353, -3.4510, -3.5566/   
      DATA C32CO2/                                                      
     1 -3.6518, -3.7460, -3.8500, -3.9680, -4.0981, -4.2259, -4.3369,   
     2 -4.4329, -4.5305, -4.6264, -4.7438, -4.8842, -5.0248, -5.1448,   
     3 -5.2371, -5.2781, -5.3299, -5.3766, -5.4233, -5.4699, -5.5166,   
     4 -5.5633, -5.6646, -5.7593, -5.8461, -5.9229, -5.9818, -6.0065,   
     5 -5.9747, -5.8741, -5.7230, -5.5620, -5.4389, -5.3788, -5.3679,   
     6 -5.3827, -5.3837, -5.3460, -5.3186, -5.3394, -5.4320, -5.6095,   
     7 -5.8446, -6.0992, -6.3399, -6.5499, -6.7434, -6.9359, -7.1219,   
     8 -7.2818, -7.3984, -7.4881, -7.5452, -7.5994, -7.6445, -7.6734,   
     9 -7.6422, -7.5057, -7.2650, -6.9975, -6.7749, -6.6398, -6.5875,   
     $ -6.5912, -6.6192, -6.6155, -6.5866, -6.5851, -6.6382, -6.7736,   
     1 -7.0009, -7.2896, -7.6327, -7.9767, -8.2633, -8.4744, -8.5455,   
     2 -8.5813, -8.6025, -8.6459, -8.8948, -9.1436, -9.3925, -9.6413,   
     3 -9.8902/                                                         
C=CO2 ==== 3070- 3755                                                   
      DATA C41CO2/                                                      
     1 -9.8006, -9.5049, -9.1947, -8.7254, -8.4410, -8.1781, -8.0182,   
     2 -7.9381, -7.8793, -7.7636, -7.5549, -7.2962, -7.0244, -6.7556,   
     3 -6.4888, -6.2443, -6.0422, -5.9088, -5.8590, -5.8890, -5.9850,   
     4 -6.0949, -6.1164, -6.0207, -5.8592, -5.7110, -5.6328, -5.6369,   
     5 -5.7274, -5.9069, -6.1720, -6.5203, -6.9586, -7.4776, -8.0607,   
     6 -8.5514, -8.7011, -8.4232, -7.9274, -7.6159, -7.3836, -7.1969,   
     7 -7.0523, -6.7685, -6.4022, -6.0354, -5.7125, -5.4659, -5.3088,   
     8 -5.2546, -5.2991, -5.3819, -5.4615, -5.4117, -5.2107, -5.0103,   
     9 -4.8232, -4.7071, -4.6850, -4.7385, -4.8797, -5.1024, -5.4015,   
     $ -5.7758, -6.2225, -6.6681, -6.9127, -6.8919, -6.6972, -6.5012,   
     1 -6.3123, -6.1091, -5.8641, -5.5889, -5.3057, -5.0340, -4.7826,   
     2 -4.5476, -4.3277, -4.1224, -3.9333, -3.7675, -3.6324, -3.5163,   
     3 -3.4043, -3.2744, -3.1180, -2.9557, -2.8254, -2.7359, -2.6721,   
     4 -2.6084, -2.5105, -2.3772, -2.2317, -2.0866, -1.9521, -1.8292,   
     5 -1.7110, -1.5992, -1.4873, -1.3646, -1.2260, -1.0721, -0.9281,   
     6 -0.8379, -0.8123, -0.8261, -0.8483, -0.8305, -0.7792, -0.7626,   
     7 -0.8228, -0.9908, -1.2503, -1.5347, -1.7934, -1.9837, -2.0715,   
     8 -2.0375, -1.8975, -1.6906, -1.4497, -1.2048, -0.9831, -0.8125/   
      DATA C42CO2/                                                      
     1 -0.7157, -0.6707, -0.6532, -0.6297, -0.5706, -0.5263, -0.5489,   
     2 -0.6857, -0.9793, -1.3962, -1.8673, -2.3655/                     
C=CO2 ==== 3760- 4065                                                   
      DATA C51CO2/                                                      
     1 -3.5436, -4.0424, -4.4084, -4.6848, -4.8663, -4.9516, -4.9790,   
     2 -4.9923, -5.0207, -5.0596, -5.0958, -5.1018, -5.0636, -5.0354,   
     3 -5.0546, -5.1454, -5.3274, -5.5863, -5.8889, -6.1770, -6.3555,   
     4 -6.4096, -6.4371, -6.5112, -6.6680, -6.9183, -7.2418, -7.5827,   
     5 -7.8704, -8.0551, -8.1705, -8.2500, -8.3554, -8.3961, -8.4354,   
     6 -8.3920, -8.2785, -8.0499, -7.7437, -7.4130, -7.1153, -6.8861,   
     7 -6.7422, -6.6786, -6.6774, -6.7053, -6.7090, -6.6794, -6.6055,   
     8 -6.4827, -6.3454, -6.2401, -6.1992, -6.2676, -6.4833, -6.8490,   
     9 -7.4310, -8.4606, -9.7364, -9.8771, -9.8840, -9.9559/            
C=CO2 ==== 4530- 5380                                                   
      DATA C61CO2/                                                      
     1 -9.9489, -9.6003, -9.0910, -8.5793, -8.2059, -7.9099, -7.7157,   
     2 -7.6145, -7.5964, -7.5942, -7.5256, -7.3190, -6.9986, -6.6884,   
     3 -6.4102, -6.1769, -5.9882, -5.8421, -5.7499, -5.7201, -5.7189,   
     4 -5.7108, -5.6669, -5.5955, -5.5686, -5.6287, -5.8000, -6.0855,   
     5 -6.4398, -6.7793, -6.9427, -6.9205, -6.8363, -6.7059, -6.5272,   
     6 -6.2903, -6.0085, -5.7224, -5.4722, -5.2772, -5.1501, -5.0768,   
     7 -5.0219, -4.9579, -4.8555, -4.7213, -4.5868, -4.4594, -4.3387,   
     8 -4.2219, -4.1002, -3.9812, -3.8876, -3.8207, -3.7673, -3.7120,   
     9 -3.6223, -3.4912, -3.3444, -3.1983, -3.0732, -3.0262, -3.0078,   
     $ -3.0123, -3.0213, -2.9957, -2.9261, -2.8770, -2.8887, -2.9853,   
     1 -3.1609, -3.3643, -3.5468, -3.6759, -3.7488, -3.7704, -3.7535,   
     2 -3.7113, -3.6368, -3.5277, -3.3812, -3.2020, -3.0043, -2.8020,   
     3 -2.6122, -2.4524, -2.3405, -2.2838, -2.2521, -2.2319, -2.1960,   
     4 -2.1562, -2.1732, -2.2913, -2.5476, -2.9382, -3.3966, -3.8525,   
     5 -4.2541, -4.5682, -4.7376, -4.7524, -4.6733, -4.5170, -4.3123,   
     6 -4.0891, -3.8565, -3.6218, -3.3909, -3.1785, -3.0100, -2.9105,   
     7 -2.8588, -2.8286, -2.7912, -2.7207, -2.6729, -2.6858, -2.7745,   
     8 -2.9414, -3.1445, -3.3617, -3.5954, -3.8508, -4.1739, -4.5122/   
      DATA C62CO2/                                                      
     1 -4.8985, -5.3426, -5.8737, -6.4734, -7.0715, -7.5042, -7.6034,   
     2 -7.5143, -7.4358, -7.4089, -7.3969, -7.3813, -7.3018, -7.1858,   
     3 -7.0633, -6.9962, -6.9905, -7.0319, -7.1331, -7.2054, -7.1856,   
     4 -7.0561, -6.7966, -6.4771, -6.1996, -5.9593, -5.7560, -5.5370,   
     5 -5.2836, -5.0966, -4.9583, -4.9126, -5.0022, -5.1370, -5.3465,   
     6 -5.6279, -5.9364, -6.3695, -6.9602, -7.6823, -8.2701, -8.6427,   
     7 -9.0728, -9.5366, -9.9588/                                       
C=CO2 ==== 5905- 7025                                                   
      DATA C71CO2/                                                      
     1 -9.9871, -9.6762, -9.3358, -8.9954, -8.5140, -8.2066, -7.9742,   
     2 -7.8579, -7.8073, -7.7894, -7.7466, -7.7009, -7.6393, -7.5889,   
     3 -7.5697, -7.5200, -7.3908, -7.1796, -6.9610, -6.7869, -6.6972,   
     4 -6.6735, -6.6775, -6.6495, -6.5292, -6.3435, -6.1371, -5.9268,   
     5 -5.7254, -5.5433, -5.4023, -5.3292, -5.3090, -5.3171, -5.3193,   
     6 -5.2705, -5.2085, -5.1835, -5.2186, -5.3367, -5.5305, -5.7725,   
     7 -6.0228, -6.2150, -6.2857, -6.2634, -6.2250, -6.2234, -6.2616,   
     8 -6.2931, -6.2508, -6.0971, -5.8679, -5.6195, -5.3906, -5.1944,   
     9 -5.0216, -4.8566, -4.6919, -4.5255, -4.3785, -4.2879, -4.2583,   
     $ -4.2636, -4.2768, -4.2484, -4.1853, -4.1586, -4.2079, -4.3651,   
     1 -4.6407, -5.0141, -5.4719, -6.0015, -6.5173, -6.7829, -6.6805,   
     2 -6.4180, -6.0793, -5.7404, -5.4204, -5.1265, -4.8634, -4.6378,   
     3 -4.4559, -4.3360, -4.2752, -4.2461, -4.2257, -4.1768, -4.1068,   
     4 -4.0743, -4.1193, -4.2732, -4.5464, -4.9256, -5.4090, -6.0184,   
     5 -6.7985, -7.7078, -8.3457, -8.5160, -8.6106, -8.8175, -9.1922,   
     6 -9.6775, -9.7423, -9.1980, -8.4120, -7.7499, -7.1685, -6.6817,   
     7 -6.2701, -5.9301, -5.6567, -5.4521, -5.3289, -5.2776, -5.2630,   
     8 -5.2547, -5.2083, -5.1296, -5.0823, -5.0914, -5.1806, -5.3503/   
      DATA C72CO2/                                                      
     1 -5.5600, -5.7877, -5.9936, -6.1720, -6.3801, -6.6371, -6.9964,   
     2 -7.5010, -8.1628, -8.9951, -9.8931,-10.0000,-10.0000,-10.0000,   
     3-10.0000,-10.0000,-10.0000,-10.0000,-10.0000, -9.4967, -8.9198,   
     4 -8.5081, -8.1255, -7.8286, -7.5478, -7.1487, -6.7853, -6.5537,   
     5 -6.3931, -6.4107, -6.5087, -6.6607, -6.9026, -7.2104, -7.4445,   
     6 -7.6303, -7.6346, -7.4521, -7.2211, -7.0043, -6.7903, -6.5666,   
     7 -6.3499, -6.1534, -5.9988, -5.9033, -5.8760, -5.8693, -5.8277,   
     8 -5.7282, -5.6262, -5.5865, -5.6665, -5.9228, -6.3399, -7.0180,   
     9 -8.4230,-10.0000,-10.0000,-10.0000, -9.4090, -8.8272, -8.3057,   
     $ -7.8885, -7.5044, -7.1560, -6.8292, -6.5250, -6.2461, -5.9904,   
     1 -5.7533, -5.5295, -5.3135, -5.1058, -4.9152, -4.7463, -4.6054,   
     2 -4.4937, -4.3928, -4.2838, -4.1626, -4.0387, -3.9295, -3.8612,   
     3 -3.8501, -3.8647, -3.8625, -3.8099, -3.7351, -3.7179, -3.8549,   
     4 -4.2312, -4.7632, -5.4270, -6.4200, -8.1414, -9.0451, -9.5326,   
     5 -9.8301/                                                         
C=CO2 ==== 7395- 7785, 8030- 8335, 9340- 9670                           
      DATA C81CO2/                                                      
     1 -9.9472, -9.8274, -8.9797, -8.4298, -7.8906, -7.4477, -7.0750,   
     2 -6.7698, -6.5338, -6.3739, -6.2980, -6.2739, -6.2726, -6.2555,   
     3 -6.1989, -6.1529, -6.1654, -6.2584, -6.4610, -6.7805, -7.2235,   
     4 -7.8191, -8.5850, -9.6084,-10.0000,-10.0000, -9.9199, -9.1093,   
     5 -8.4490, -7.9158, -7.4364, -7.0400, -6.6958, -6.4131, -6.1855,   
     6 -6.0158, -5.9123, -5.8700, -5.8530, -5.8340, -5.7866, -5.7224,   
     7 -5.7048, -5.7653, -5.9281, -6.2234, -6.6646, -7.2957, -8.2799,   
     8 -9.9457,-10.0000,-10.0000,-10.0000,-10.0000,-10.0000,-10.0000,   
     9-10.0000, -9.2766, -8.6201, -8.0764, -7.6374, -7.2752, -6.9802,   
     $ -6.7578, -6.6163, -6.5546, -6.5392, -6.5397, -6.5132, -6.4531,   
     1 -6.4161, -6.4482, -6.5683, -6.8086, -7.1762, -7.6772, -8.3574,   
     2 -9.2188,-10.0000,-10.0000, -9.5350, -8.9686, -8.5329, -8.1920,   
     3 -7.9237, -7.6797, -7.5039, -7.3667, -7.2856, -7.1969, -7.0745,   
     4 -6.9330, -6.7926, -6.6818, -6.6144, -6.5643, -6.5183, -6.4910,   
     5 -6.4481, -6.3567, -6.2177, -6.0566, -5.9096, -5.7975, -5.7093,   
     6 -5.6165, -5.5127, -5.4124, -5.3426, -5.3061, -5.2648, -5.1864,   
     7 -5.0876, -5.0226, -5.0397, -5.1905, -5.4858, -5.9101, -6.4851,   
     8 -6.7862, -6.5368, -6.2765, -6.0398, -5.8260, -5.6397, -5.4799/   
      DATA C82CO2/                                                      
     1 -5.3438, -5.2274, -5.1411, -5.0917, -5.0473, -4.9820, -4.9114,   
     2 -4.8634, -4.8844, -5.0363, -5.3351, -5.7802, -6.5387, -8.3735,   
     3 -9.9977, -9.7506, -9.1887, -8.6824, -8.3488, -8.0533, -7.8664,   
     4 -7.7346, -7.6934, -7.6674, -7.6268, -7.5451, -7.4677, -7.4520,   
     5 -7.5471, -7.7913, -8.1917, -8.8835,-10.0000,-10.0000,-10.0000,   
     6-10.0000,-10.0000, -9.7234, -8.9969, -8.5776, -8.1737, -7.8640,   
     7 -7.5729, -7.3186, -7.0973, -6.9131, -6.7782, -6.7073, -6.6768,   
     8 -6.6303, -6.5406, -6.4509, -6.3950, -6.4345, -6.6270, -6.9507,   
     9 -7.5028, -8.6428,-10.0000,-10.0000,-10.0000,-10.0000, -9.5303,   
     $ -8.9369, -8.4952, -8.1465, -7.8567, -7.6177, -7.4249, -7.2876,   
     1 -7.2206, -7.1948, -7.1552, -7.0773, -6.9884, -6.9402, -6.9839,   
     2 -7.1773, -7.4999, -8.0643, -9.1480,-10.0000/                     
C=CO  ====C' FOR    2 BAND MODEL                                        
C=CO  ====    0-  175                                                   
      DATA C11CO/                                                       
     1 -4.6868, -4.4127, -3.9461, -3.5662, -3.2921, -3.1081, -2.9807,   
     2 -2.8977, -2.8580, -2.8461, -2.8587, -2.9029, -2.9646, -3.0480,   
     3 -3.1589, -3.2836, -3.4277, -3.5993, -3.7963, -4.0164, -4.2799,   
     4 -4.5750, -4.8722, -5.2741, -5.6819, -6.0799, -6.4828, -6.8857,   
     5 -7.2886, -7.6915, -8.0944, -8.4973, -8.9002, -9.3031, -9.7060,   
     6-10.0000/                                                         
C=CO  ==== 1940- 2285, 4040- 4370                                       
      DATA C21CO/                                                       
     1-10.0000, -9.5312, -8.8977, -8.2642, -7.5767, -6.9972, -6.5408,   
     2 -6.1219, -5.6734, -5.2658, -4.8686, -4.4918, -4.1423, -3.8133,   
     3 -3.4998, -3.2104, -2.9443, -2.7138, -2.5084, -2.3109, -2.1245,   
     4 -1.9387, -1.7608, -1.6054, -1.4733, -1.3594, -1.2540, -1.1480,   
     5 -1.0341, -0.9216, -0.8189, -0.7235, -0.6362, -0.5549, -0.4856,   
     6 -0.4401, -0.4268, -0.4657, -0.5571, -0.6573, -0.7404, -0.7523,   
     7 -0.6601, -0.5380, -0.4211, -0.3367, -0.3167, -0.3320, -0.3753,   
     8 -0.4489, -0.5438, -0.6653, -0.8052, -0.9690, -1.1506, -1.3522,   
     9 -1.5791, -1.8248, -2.1073, -2.4246, -2.7877, -3.2152, -3.7089,   
     $ -4.2832, -4.9518, -5.7251, -6.5319, -7.4879, -9.0885,-10.0000,   
     1-10.0000, -9.5611, -9.0875, -8.6139, -7.9747, -7.5250, -7.1931,   
     2 -6.8596, -6.5741, -6.2922, -6.0098, -5.7669, -5.5345, -5.3229,   
     3 -5.1461, -4.9882, -4.8493, -4.7239, -4.6064, -4.5009, -4.4071,   
     4 -4.3322, -4.2661, -4.1926, -4.0956, -3.9611, -3.7984, -3.6314,   
     5 -3.4757, -3.3408, -3.2237, -3.1219, -3.0325, -2.9494, -2.8765,   
     6 -2.8117, -2.7531, -2.7023, -2.6635, -2.6440, -2.6550, -2.7225,   
     7 -2.8161, -2.9015, -2.9241, -2.8228, -2.6726, -2.5320, -2.4291,   
     8 -2.3772, -2.3732, -2.3995, -2.4574, -2.5486, -2.6664, -2.8209/   
      DATA C22CO/                                                       
     1 -3.0129, -3.2516, -3.5482, -3.9165, -4.3714, -4.9326, -5.6394,   
     2 -6.5163, -7.6063, -9.3575,-10.0000/                              
C=CH4 ====C' FOR    1 BAND MODEL                                        
C=CH4 ==== 1065- 1775, 2345- 3230, 4110- 4690, 5865- 6135               
      DATA C11CH4/                                                      
     1-10.0000, -9.4577, -8.8866, -8.2246, -7.7940, -7.1734, -6.7965,   
     2 -6.5695, -6.1929, -5.9169, -5.7452, -5.4731, -5.3001, -5.1872,   
     3 -4.9672, -4.8474, -4.6939, -4.5210, -4.3377, -4.1346, -3.9322,   
     4 -3.7339, -3.5077, -3.2719, -3.0296, -2.8124, -2.6199, -2.4479,   
     5 -2.2502, -2.0541, -1.8800, -1.7092, -1.5791, -1.4379, -1.2992,   
     6 -1.1735, -1.0510, -0.9646, -0.8779, -0.8002, -0.7574, -0.7356,   
     7 -0.7478, -0.7512, -0.6906, -0.5594, -0.4417, -0.4019, -0.5027,   
     8 -0.7628, -0.9625, -1.0431, -1.0068, -0.8781, -0.7559, -0.6628,   
     9 -0.6128, -0.6118, -0.6575, -0.7620, -0.9217, -1.1264, -1.3660,   
     $ -1.6352, -1.9264, -2.2266, -2.5123, -2.7472, -2.8820, -2.9129,   
     1 -2.9145, -2.8854, -2.8508, -2.8512, -2.8202, -2.8023, -2.8004,   
     2 -2.7800, -2.8175, -2.8413, -2.8943, -2.9876, -3.0688, -3.2424,   
     3 -3.4064, -3.5759, -3.7630, -3.8925, -4.0774, -4.3243, -4.5964,   
     4 -3.8654, -3.0974, -2.5967, -2.2482, -2.1016, -2.1488, -2.3261,   
     5 -2.6448, -3.0446, -3.3958, -3.6510, -3.7049, -3.7240, -3.5992,   
     6 -3.4937, -3.3676, -3.2230, -3.1630, -3.0691, -3.0776, -3.0872,   
     7 -3.0974, -3.1223, -3.1285, -3.1212, -3.1333, -3.1674, -3.1668,   
     8 -3.2433, -3.2398, -3.3135, -3.3975, -3.4427, -3.6434, -3.7528/   
      DATA C12CH4/                                                      
     1 -3.9466, -4.1940, -4.3362, -4.5539, -4.7410, -4.9155, -5.1345,   
     2 -5.3908, -5.5592, -5.8270, -6.0289, -6.2365, -6.6730, -7.0538,   
     3 -7.6216, -8.5697, -9.8483,-10.0000, -9.3577, -8.5950, -7.8323,   
     4 -7.0696, -6.3069, -5.5442, -5.1501, -4.8853, -4.6900, -4.5262,   
     5 -4.3957, -4.2823, -4.2736, -4.2054, -4.1168, -3.9986, -3.8712,   
     6 -3.8692, -3.8777, -3.8965, -3.9092, -3.8788, -3.7661, -3.6900,   
     7 -3.6239, -3.5597, -3.5193, -3.4906, -3.4415, -3.3730, -3.3579,   
     8 -3.3427, -3.3208, -3.3048, -3.3136, -3.2904, -3.2545, -3.2241,   
     9 -3.1453, -3.0187, -2.9427, -2.8630, -2.8146, -2.8604, -2.8922,   
     $ -2.9650, -2.9959, -2.8920, -2.7989, -2.7028, -2.6506, -2.7285,   
     1 -2.8420, -2.9304, -2.9622, -2.8726, -2.7566, -2.6745, -2.6337,   
     2 -2.6533, -2.6800, -2.7098, -2.7479, -2.6859, -2.6216, -2.5701,   
     3 -2.4683, -2.4426, -2.4463, -2.4194, -2.4578, -2.4894, -2.4639,   
     4 -2.4825, -2.4998, -2.4381, -2.4123, -2.3654, -2.2698, -2.2387,   
     5 -2.2364, -2.2029, -2.1780, -2.1433, -2.0355, -1.9458, -1.8723,   
     6 -1.7936, -1.7639, -1.7782, -1.8022, -1.8115, -1.7818, -1.6986,   
     7 -1.6169, -1.5975, -1.6545, -1.7742, -1.8937, -1.9544, -1.8942,   
     8 -1.7761, -1.6392, -1.5236, -1.4551, -1.4221, -1.4245, -1.4174/   
      DATA C13CH4/                                                      
     1 -1.4177, -1.3776, -1.3349, -1.2909, -1.2470, -1.2162, -1.1850,   
     2 -1.1677, -1.1449, -1.1229, -1.1031, -1.0795, -1.0687, -1.0692,   
     3 -1.0904, -1.1166, -1.1511, -1.1951, -1.2321, -1.2831, -1.2716,   
     4 -1.1902, -0.9715, -0.6654, -0.4103, -0.3011, -0.5049, -0.8659,   
     5 -1.1777, -1.3847, -1.4359, -1.3908, -1.2992, -1.1923, -1.0951,   
     6 -1.0213, -0.9578, -0.9299, -0.9207, -0.9292, -0.9725, -1.0126,   
     7 -1.0750, -1.1149, -1.1636, -1.2059, -1.2638, -1.3327, -1.4079,   
     8 -1.4983, -1.5711, -1.6872, -1.7870, -1.9266, -2.0774, -2.2119,   
     9 -2.3875, -2.5155, -2.6822, -2.8372, -3.0032, -3.2413, -3.5058,   
     $ -3.9508, -4.5133, -5.3536, -8.0815, -8.9081, -9.8155,-10.0000,   
     1 -7.4757, -5.1602, -4.2454, -3.7640, -3.3256, -3.0103, -2.7726,   
     2 -2.5510, -2.3849, -2.2318, -2.1080, -2.0086, -1.9290, -1.8902,   
     3 -1.8750, -1.8700, -1.8476, -1.7390, -1.5724, -1.4284, -1.3425,   
     4 -1.3791, -1.5132, -1.6508, -1.7283, -1.6684, -1.5432, -1.4447,   
     5 -1.3773, -1.3490, -1.3642, -1.4016, -1.4713, -1.5836, -1.6984,   
     6 -1.8085, -1.8486, -1.7464, -1.6338, -1.5555, -1.5552, -1.6935,   
     7 -1.8165, -1.8417, -1.7697, -1.6346, -1.5589, -1.5466, -1.5604,   
     8 -1.6307, -1.6867, -1.7593, -1.8051, -1.8167, -1.8518, -1.8559/   
      DATA C14CH4/                                                      
     1 -1.8547, -1.8907, -1.8851, -1.8933, -1.9081, -1.9025, -1.9451,   
     2 -1.9924, -2.0321, -2.0816, -2.1026, -2.1137, -2.1351, -2.1629,   
     3 -2.1876, -2.2340, -2.2960, -2.3747, -2.4970, -2.6244, -2.7641,   
     4 -2.8912, -3.0328, -3.1944, -3.3877, -3.4566, -3.1662, -2.7253,   
     5 -2.3992, -2.2214, -2.2022, -2.3978, -2.7449, -3.2639, -3.9311,   
     6 -4.1470, -3.9351, -3.7471, -3.6245, -3.4791, -3.4710, -3.4210,   
     7 -3.4125, -3.4475, -3.4140, -3.4908, -3.5164, -3.5944, -3.7403,   
     8 -3.8192, -4.0177, -4.1833, -4.3518, -4.6486, -4.8778, -5.2542,   
     9 -5.7834, -6.3451, -7.7212,-10.0000, -9.9134, -7.9181, -6.0815,   
     $ -5.4397, -4.9875, -4.6154, -4.4846, -4.3541, -4.3037, -4.3073,   
     1 -4.2471, -4.2593, -4.1984, -4.1895, -4.1697, -4.1578, -4.1950,   
     2 -4.1878, -4.2299, -4.2209, -4.2646, -4.3123, -4.3911, -4.4588,   
     3 -4.1873, -3.8353, -3.5282, -3.3055, -3.3351, -3.5671, -3.8750,   
     4 -4.2645, -4.4786, -4.4293, -4.3183, -4.1996, -4.0879, -4.0169,   
     5 -3.9787, -3.9536, -3.9454, -3.9283, -3.9166, -3.9152, -3.9336,   
     6 -3.9561, -3.9932, -4.0934, -4.2317, -4.5084, -4.9460, -5.4958,   
     7 -6.5492, -8.5604, -9.6202/                                       
C=N2O ====C' FOR    3 BAND MODEL                                        
C=N2O ====    0-  120                                                   
      DATA C11N2O/                                                      
     1 -2.8003, -2.6628, -2.4313, -2.2579, -2.1700, -2.1702, -2.2490,   
     2 -2.4003, -2.6264, -2.9219, -3.2954, -3.7684, -4.2621, -4.7558,   
     3 -5.2495, -5.7432, -6.2369, -6.7306, -7.2243, -7.7180, -8.2117,   
     4 -8.7054, -9.1991, -9.6928,-10.0000/                              
C=N2O ====  490-  775,  865-  995, 1065- 1385, 1545- 2040, 2090- 2655   
      DATA C21N2O/                                                      
     1 -9.7185, -8.8926, -8.0667, -7.2307, -6.4149, -5.4872, -4.7083,   
     2 -4.0319, -3.4752, -3.0155, -2.6046, -2.2057, -1.8137, -1.4741,   
     3 -1.1914, -0.9603, -0.7923, -0.6629, -0.5849, -0.5402, -0.4975,   
     4 -0.5148, -0.5592, -0.6521, -0.8148, -1.0186, -1.2764, -1.5873,   
     5 -1.9638, -2.3881, -2.8083, -3.2392, -3.6934, -4.0682, -4.1366,   
     6 -3.9423, -3.7143, -3.4975, -3.2602, -3.0976, -2.9815, -2.9153,   
     7 -2.9596, -3.0281, -3.1264, -3.2650, -3.3906, -3.5717, -3.8312,   
     8 -4.1706, -4.6077, -5.1839, -5.9224, -6.9862, -7.6901, -8.3940,   
     9 -9.0979, -9.8018, -9.9154, -9.2271, -8.5388, -7.8504, -7.1621,   
     $ -6.2428, -5.6051, -5.0971, -4.7237, -4.4104, -4.2050, -4.0681,   
     1 -4.0278, -4.0307, -4.0492, -4.0333, -3.9710, -3.9249, -3.9360,   
     2 -4.0316, -4.2317, -4.5414, -4.9787, -5.5623, -6.3335, -7.9968,   
     3 -9.6601, -9.5486, -8.8517, -8.1548, -7.4579, -6.7610, -6.0641,   
     4 -5.3672, -4.6703, -3.6918, -3.0656, -2.5796, -2.1876, -1.8646,   
     5 -1.5919, -1.3587, -1.1684, -1.0286, -0.9470, -0.9271, -0.9442,   
     6 -0.9695, -0.9753, -0.9573, -0.9550, -1.0000, -1.1070, -1.2791,   
     7 -1.4976, -1.7281, -1.9277, -2.0227, -1.9577, -1.7625, -1.5020,   
     8 -1.2186, -0.9270, -0.6326, -0.3429, -0.0768,  0.1500,  0.3215/   
      DATA C22N2O/                                                      
     1  0.4104,  0.4385,  0.4288,  0.4185,  0.4570,  0.4972,  0.4987,   
     2  0.4216,  0.2360, -0.0319, -0.3714, -0.7539, -1.1534, -1.5855,   
     3 -2.0610, -2.6068, -3.2635, -4.1038, -5.2761, -6.1437, -7.0079,   
     4 -7.9440, -8.8801, -9.8162,-10.0000, -9.5951, -9.1305, -8.6659,   
     5 -8.2013, -7.7367, -7.2721, -6.8075, -6.1598, -5.8695, -5.3510,   
     6 -4.9491, -4.6310, -4.3846, -4.0784, -3.7763, -3.5901, -3.4607,   
     7 -3.4386, -3.5481, -3.7014, -3.9310, -4.2251, -4.4593, -4.8210,   
     8 -5.3494, -6.1286, -7.5981,-10.0000,-10.0000,-10.0000,-10.0000,   
     9 -6.3743, -5.5592, -5.0129, -4.6075, -4.3171, -4.0928, -3.7537,   
     $ -3.5406, -3.3869, -3.2913, -3.3633, -3.4932, -3.6924, -4.0074,   
     1 -4.2504, -4.5389, -4.9425, -5.4741, -6.2069, -7.5981,-10.0000,   
     2-10.0000,-10.0000, -6.9215, -6.0798, -5.1934, -4.6288, -4.1316,   
     3 -3.7322, -3.4089, -3.1573, -2.9573, -2.7298, -2.5615, -2.4382,   
     4 -2.3523, -2.3774, -2.4508, -2.5755, -2.7757, -2.9904, -3.2733,   
     5 -3.6524, -4.1599, -4.7952, -5.7004, -6.8762, -6.9822, -6.2484,   
     6 -5.7613, -5.2586, -4.8674, -4.6633, -4.5332, -4.5158, -4.6593,   
     7 -4.8427, -5.0917, -5.5781, -6.0645, -6.5509, -7.0373, -7.5237,   
     8 -8.0101, -8.4965, -8.9829, -9.4693, -9.9557, -9.7130, -8.6609/   
      DATA C23N2O/                                                      
     1 -7.6089, -6.5568, -5.0880, -4.4527, -3.9302, -3.4438, -2.9701,   
     2 -2.5423, -2.1616, -1.8076, -1.4763, -1.1580, -0.8445, -0.5455,   
     3 -0.2506,  0.0234,  0.2775,  0.5113,  0.7154,  0.8929,  1.0359,   
     4  1.1306,  1.1697,  1.1807,  1.1803,  1.1974,  1.2466,  1.2629,   
     5  1.2068,  1.0472,  0.7695,  0.4083, -0.0244, -0.5477, -1.2202,   
     6 -2.1067, -2.9508, -3.2107, -3.1587, -2.9600, -2.7641, -2.6324,   
     7 -2.5671, -2.5664, -2.6088, -2.6425, -2.6606, -2.6895, -2.7551,   
     8 -2.8837, -3.0884, -3.3746, -3.7078, -4.0975, -4.6272, -5.2484,   
     9-10.0000,-10.0000,-10.0000, -7.3571, -5.0287, -4.3047, -3.6431,   
     $ -3.1026, -2.6122, -2.1941, -1.8454, -1.5726, -1.3829, -1.2818,   
     1 -1.2505, -1.2579, -1.2731, -1.2502, -1.2092, -1.2044, -1.2577,   
     2 -1.3942, -1.6262, -1.9347, -2.2830, -2.5386, -2.4801, -2.1671,   
     3 -1.8061, -1.4726, -1.1797, -0.9377, -0.7542, -0.6392, -0.5899,   
     4 -0.5743, -0.5669, -0.5339, -0.4745, -0.4471, -0.4779, -0.5877,   
     5 -0.7964, -1.0942, -1.4812, -1.9593, -2.5140, -3.1350, -3.8102,   
     6 -4.5825, -5.5982, -6.4193, -7.2403, -8.0614, -8.8825, -9.7035/   
C=N2O ==== 2705- 2865, 3245- 3925, 4260- 4470, 4540- 4785, 4910- 5165   
      DATA C31N2O/                                                      
     1 -9.8910, -8.9876, -8.0843, -7.1809, -6.1501, -5.3742, -4.7352,   
     2 -4.2051, -3.7525, -3.3562, -2.9916, -2.6649, -2.3872, -2.1499,   
     3 -1.9747, -1.7982, -1.6518, -1.5582, -1.4838, -1.5004, -1.5821,   
     4 -1.6912, -1.8673, -2.0756, -2.3351, -2.7020, -3.1921, -3.8409,   
     5 -4.7085, -5.9588, -6.5829, -8.5585, -9.8584, -9.9723, -9.4215,   
     6 -8.8707, -8.3199, -7.7691, -7.2183, -6.5567, -6.4345, -5.6448,   
     7 -5.0529, -4.4643, -3.9624, -3.5231, -3.1395, -2.8067, -2.5232,   
     8 -2.2858, -2.0820, -1.9049, -1.7554, -1.6485, -1.5959, -1.5838,   
     9 -1.5961, -1.5997, -1.5734, -1.5615, -1.5974, -1.7059, -1.9034,   
     $ -2.1631, -2.4181, -2.5427, -2.4592, -2.2513, -2.0187, -1.7879,   
     1 -1.5612, -1.3399, -1.1265, -0.9226, -0.7379, -0.5790, -0.4573,   
     2 -0.3952, -0.3683, -0.3511, -0.3216, -0.2556, -0.2126, -0.2593,   
     3 -0.4361, -0.7702, -1.2089, -1.7060, -2.2937, -3.1133, -4.4419,   
     4 -6.0119, -6.9457,-10.0000,-10.0000,-10.0000,-10.0000, -7.0394,   
     5 -5.9637, -5.2317, -4.6419, -4.1663, -3.7874, -3.5000, -3.3086,   
     6 -3.2143, -3.1926, -3.2105, -3.2308, -3.1971, -3.1510, -3.1402,   
     7 -3.1969, -3.3477, -3.6005, -3.9534, -4.4117, -4.9729, -5.6009,   
     8 -6.2179, -5.9845, -5.5502, -4.9010, -4.3401, -3.8232, -3.3802/   
      DATA C32N2O/                                                      
     1 -2.9972, -2.6747, -2.4143, -2.2209, -2.1080, -2.0682, -2.0687,   
     2 -2.0775, -2.0485, -1.9847, -1.9531, -1.9870, -2.1110, -2.3366,   
     3 -2.6293, -2.8922, -2.9474, -2.7627, -2.4999, -2.2554, -2.0537,   
     4 -1.9062, -1.8268, -1.7941, -1.7766, -1.7468, -1.6767, -1.6130,   
     5 -1.6085, -1.6849, -1.8599, -2.1258, -2.4538, -2.8205, -3.2028,   
     6 -3.5988, -4.0691, -4.7117, -5.6320, -6.4806, -7.3731, -8.2602,   
     7 -9.1474,-10.0000,-10.0000, -9.5340, -9.0282, -8.5224, -8.0166,   
     8 -7.5109, -7.0051, -6.4117, -6.0148, -5.4878, -5.1742, -4.8859,   
     9 -4.4873, -4.2249, -4.0285, -3.8669, -3.8247, -3.7652, -3.6521,   
     $ -3.4906, -3.2613, -3.0307, -2.8156, -2.6172, -2.4264, -2.2442,   
     1 -2.0775, -1.9432, -1.8703, -1.8523, -1.8552, -1.8443, -1.7814,   
     2 -1.7104, -1.7043, -1.7952, -2.0205, -2.3968, -2.9374, -3.7689,   
     3 -5.3159, -7.4139, -9.5119, -9.7965, -9.1511, -8.5057, -7.8603,   
     4 -7.2149, -6.5695, -6.2415, -5.5829, -5.0296, -4.5660, -4.1722,   
     5 -3.8364, -3.5551, -3.3398, -3.1970, -3.1363, -3.1232, -3.1257,   
     6 -3.0999, -3.0288, -2.9746, -2.9875, -3.0925, -3.3137, -3.6496,   
     7 -4.0276, -4.1958, -3.9760, -3.6179, -3.2725, -2.9653, -2.6962,   
     8 -2.4677, -2.2828, -2.1547, -2.0949, -2.0763, -2.0606, -2.0142/   
      DATA C33N2O/                                                      
     1 -1.9239, -1.8618, -1.8813, -2.0099, -2.2825, -2.7071, -3.3277,   
     2 -4.3300, -6.2151, -8.3543,-10.0000, -9.7275, -9.1257, -8.5239,   
     3 -7.9221, -7.3203, -6.7185, -6.6089, -5.8877, -5.4527, -5.0879,   
     4 -4.6598, -4.3806, -4.1830, -4.0426, -4.0175, -4.0178, -3.9811,   
     5 -3.9244, -3.8056, -3.6968, -3.6435, -3.6326, -3.6339, -3.6157,   
     6 -3.5478, -3.4826, -3.4807, -3.5665, -3.7650, -4.0718, -4.3980,   
     7 -4.5075, -4.3358, -4.0765, -3.8674, -3.7221, -3.6588, -3.6429,   
     8 -3.6371, -3.6014, -3.5209, -3.4616, -3.4774, -3.5957, -3.8481,   
     9 -4.2598, -4.8784, -5.8266, -6.7468, -8.1352, -9.2208,-10.0000/   
C=O2  ====C' FOR    2 BAND MODEL                                        
C=O2  ====    0-  265                                                   
      DATA C11O2/                                                       
     1 -6.1363, -6.1794, -6.2538, -6.3705, -6.5110, -6.6162, -6.7505,   
     2 -6.7896, -6.8305, -6.8471, -6.8282, -6.8772, -6.8680, -6.9332,   
     3 -6.9511, -7.0048, -7.0662, -7.1043, -7.2055, -7.2443, -7.3520,   
     4 -7.4079, -7.4998, -7.5924, -7.6682, -7.7993, -7.8712, -8.0161,   
     5 -8.1102, -8.2485, -8.3758, -8.4942, -8.6532, -8.7554, -8.9453,   
     6 -9.0665, -9.2631, -9.4387, -9.6325, -9.8757,-10.0628,-10.3761,   
     7-10.5478,-10.9147,-11.2052,-11.5129,-11.8206,-12.1283,-12.4360,   
     8-12.7437,-13.0514,-13.3591,-13.6668,-13.9745/                     
C=O2  ==== 7650- 8080, 9235- 9490,12850-13220,14300-14600,15695-15955   
      DATA C21O2/                                                       
     1-13.9458,-13.7692,-13.5048,-13.1422,-13.0242,-12.6684,-12.3571,   
     2-12.2428,-11.8492,-11.6427,-11.5173,-11.2108,-11.1584,-11.0196,   
     3-10.8040,-10.8059,-10.5828,-10.4580,-10.4170,-10.1823,-10.1435,   
     4-10.0030, -9.8136, -9.7772, -9.5680, -9.4595, -9.3502, -9.1411,   
     5 -9.0476, -8.8628, -8.7051, -8.5838, -8.4282, -8.3271, -8.1958,   
     6 -8.0838, -7.9652, -7.8371, -7.7476, -7.6431, -7.5736, -7.5149,   
     7 -7.4194, -7.2688, -7.0722, -6.8815, -6.7627, -6.8055, -6.9114,   
     8 -6.9936, -7.0519, -7.0597, -7.0680, -7.1242, -7.2088, -7.3265,   
     9 -7.4673, -7.6326, -7.8110, -8.0096, -8.2104, -8.4036, -8.5853,   
     $ -8.7252, -8.8511, -8.9427, -9.0375, -9.1228, -9.2246, -9.3291,   
     1 -9.4436, -9.5716, -9.6951, -9.8408, -9.9759,-10.1489,-10.3027,   
     2-10.5178,-10.7265,-10.9787,-11.2939,-11.5552,-11.9595,-12.2436,   
     3-12.6942,-13.2011,-13.8191,-13.9216,-13.7293,-13.5370,-13.3447,   
     4-13.1523,-12.9600,-12.7677,-12.5754,-12.3830,-12.1907,-11.9948,   
     5-11.7759,-11.5926,-11.4214,-11.2493,-11.1094,-10.9477,-10.8332,   
     6-10.7323,-10.6380,-10.5725,-10.4409,-10.2013, -9.8839, -9.6546,   
     7 -9.5053, -9.4638, -9.5526, -9.6558, -9.7430, -9.7958, -9.7896,   
     8 -9.8320, -9.9447,-10.1221,-10.3707,-10.6623,-10.9761,-11.2271/   
      DATA C22O2/                                                       
     1-11.4091,-11.4921,-11.6015,-11.6945,-11.8333,-11.9985,-12.1788,   
     2-12.3822,-12.6605,-13.0796,-13.3528,-13.6463,-13.9398,-13.7034,   
     3-13.3150,-13.1177,-12.6462,-12.4868,-12.2205,-11.9650,-11.6941,   
     4-11.4377,-11.2136,-10.9567,-10.7980,-10.5546,-10.3952,-10.2403,   
     5-10.0491, -9.9226, -9.7871, -9.6557, -9.6106, -9.5142, -9.4763,   
     6 -9.4163, -9.2348, -9.1088, -8.7946, -8.5876, -8.3128, -8.0945,   
     7 -7.9127, -7.7229, -7.5860, -7.4215, -7.2726, -7.1179, -6.9516,   
     8 -6.8075, -6.6413, -6.5043, -6.3519, -6.2112, -6.0839, -5.9337,   
     9 -5.8321, -5.6969, -5.5923, -5.5076, -5.4002, -5.3413, -5.2826,   
     $ -5.2458, -5.2877, -5.3743, -5.4654, -5.5262, -5.4429, -5.2430,   
     1 -5.0284, -4.8464, -4.7534, -4.7825, -4.9462, -5.2290, -5.6440,   
     2 -6.1889, -6.8427, -7.7731, -9.1688, -9.6893,-10.1853,-10.7670,   
     3-11.4611,-12.3081,-13.1476,-13.8192,-13.5871,-13.2189,-12.9705,   
     4-12.4825,-12.1301,-11.9430,-11.6636,-11.3197,-11.1678,-10.8967,   
     5-10.6002,-10.4857,-10.1986, -9.9731, -9.8547, -9.5817, -9.4382,   
     6 -9.3042, -9.0755, -8.9944, -8.8060, -8.6543, -8.5441, -8.3556,   
     7 -8.2557, -8.0959, -7.9717, -7.8453, -7.7076, -7.5910, -7.4567,   
     8 -7.3439, -7.2248, -7.1236, -7.0209, -6.9345, -6.8404, -6.7560/   
      DATA C23O2/                                                       
     1 -6.6744, -6.5870, -6.5278, -6.4809, -6.5042, -6.5797, -6.6564,   
     2 -6.6939, -6.5912, -6.3776, -6.1438, -6.0062, -6.0469, -6.3081,   
     3 -6.8199, -7.4307, -8.1345, -9.1190,-10.4203,-11.4698,-12.5942,   
     4-13.5316,-13.8693,-13.9392,-13.6885,-13.4377,-13.1869,-12.9362,   
     5-12.6854,-12.3720,-12.2852,-11.9331,-11.7575,-11.6297,-11.3290,   
     6-11.1205,-11.0084,-10.7243,-10.5543,-10.4485,-10.1764,-10.0759,   
     7 -9.9304, -9.7196, -9.6630, -9.4774, -9.3638, -9.2675, -9.1121,   
     8 -9.0368, -8.9025, -8.8028, -8.7012, -8.5909, -8.5121, -8.4141,   
     9 -8.3444, -8.2687, -8.2003, -8.1571, -8.1141, -8.1261, -8.1848,   
     $ -8.2395, -8.2478, -8.0877, -7.7880, -7.5611, -7.4487, -7.4880,   
     1 -7.7644, -8.2142, -8.8765,-10.1091,-12.4483,-13.7228/            
      END                                                               
Calley      SUBROUTINE CRDRIV                                           
      SUBROUTINE CRDRIV(ZCLDX,CLDX,CLDICEX,RRX,WAVLENX,EXTCX,ABSCX,     
     +                  ASYMX)                                          
C                                                                       
      REAL ZCLDX(*),CLDX(*),CLDICEX(*),RRX(*),WAVLENX(*),EXTCX(*)       
      REAL ABSCX(*),ASYMX(*)                                            
C                                                                       
C     THIS ROUTINE IS THE DRIVER FOR CLOUD/RAIN MODELS 1 THROUGH 10.    
      REAL CTHICK,CWDCOL,CIPCOL                                         
C                                                                       
C     DETERMINE CLOUD/RAIN DENSITY PROFILES                             
Calley      CALL CRPROF(CTHICK,CWDCOL,CIPCOL)                           
      CALL CRPROF(CTHICK,CWDCOL,CIPCOL,ZCLDX,CLDX,CLDICEX,RRX)          
C                                                                       
C     MERGE OLD ATMOSPHERIC AND CLOUD/RAIN LAYER BOUNDARY DATA.         
      CALL CRMERG                                                       
C                                                                       
C     DETERMINE CLOUD/RAIN SPECTRAL DATA                                
Calley      CALL CRSPEC(CTHICK,CWDCOL,CIPCOL)                           
      CALL CRSPEC(CTHICK,CWDCOL,CIPCOL,WAVLENX,EXTCX,ABSCX,ASYMX)       
C                                                                       
C     RETURN TO MODTRAN DRIVER ROUTINE                                  
      RETURN                                                            
      END                                                               
      SUBROUTINE CRMERG                                                 
C                                                                       
C     THIS ROUTINE MERGES TOGETHER CLOUD/RAIN AND OLD ATMOSPHERIC       
C     PROFILES.  WATER DROPLET DENSITIES [GM/M3], ICE PARTICLE          
C     DENSITIES [GM/M3] AND RAIN RATES [MM/HR] ARE STORED IN            
C     DENSTY(66,.), DENSTY(67,.) AND DENSTY(3,.), RESPECTIVELY.         
C     LAYER BOUNDARIES ARE MERGED TOGETHER IF THEY DIFFER BY LESS       
C     THAN "ZTOL" KM (HALF A METER).                                    
C                                                                       
C     LIST PARAMETERS                                                   
      INCLUDE 'PARAM.LST'                                               
C                                                                       
C     LIST COMMONS                                                      
      INTEGER KPOINT                                                    
      REAL WAVLEN,EXTC,ABSC,ASYM,AWCCON,TX,W,RELHUM,PATM,TBBY,WPATH     
      COMMON/BASE/WAVLEN(MXWVLN),EXTC(NAER,MXWVLN),ABSC(NAER,MXWVLN),   
     1  ASYM(NAER,MXWVLN),AWCCON(NAER),KPOINT(NSPC),TX(KMAX),W(KMAX),   
     2  RELHUM(LAYDIM),PATM(LAYTHR),TBBY(LAYTHR),WPATH(LAYTHR,KMAX)     
      REAL P,T,WH,WCO2,WO,WN2O,WCO,WCH4,WO2                             
      COMMON/MDATA/P(LAYDIM),T(LAYDIM),WH(LAYDIM),WCO2(LAYDIM),         
     1  WO(LAYDIM),WN2O(LAYDIM),WCO(LAYDIM),WCH4(LAYDIM),WO2(LAYDIM)    
      REAL WNO,WSO2,WNO2,WNH3,WAIR,WHNO3                                
      COMMON/MDATA1/WNO(LAYDIM),WSO2(LAYDIM),WNO2(LAYDIM),              
     1  WNH3(LAYDIM),WAIR(LAYDIM),WHNO3(LAYDIM)                         
      REAL WMOLXT                                                       
      COMMON/MDATAX/WMOLXT(MMOLX,LAYDIM)                                
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH                               
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                           
      REAL ZM,PM,TM,RFNDX,DENSTY                                        
      COMMON/MODEL/ZM(LAYDIM),PM(LAYDIM),TM(LAYDIM),                    
     1  RFNDX(LAYDIM),DENSTY(KMAX,LAYDIM)                               
      INTEGER IKMAX,ML,ISSGEO,IMULT                                     
      COMMON/CNTRL/IKMAX,ML,ISSGEO,IMULT                                
      INTEGER NBND                                                      
      REAL ZCLDRN(NZCLD),DRPWAT(NZCLD),PRTICE(NZCLD),RNPROF(NZCLD)      
      COMMON/CLDRN/NBND,ZCLDRN,DRPWAT,PRTICE,RNPROF                     
      INTEGER NCRALT,NCRSPC                                             
      REAL CTHIK,CALT,CEXT,CWAVLN,CCOLWD,CCOLIP,CHUMID,ASYMWD,ASYMIP    
      COMMON/CARD2A/CTHIK,CALT,CEXT,NCRALT,NCRSPC,                      
     1  CWAVLN,CCOLWD,CCOLIP,CHUMID,ASYMWD,ASYMIP                       
C                                                                       
C     DECLARE LOCAL VARIABLES                                           
      INTEGER NEWBND,MBND,IBND,I,MLOLD                                  
      LOGICAL LSET,WARNWD,WARNIP                                        
      REAL FAC,TRATIO,CLDHUM                                            
C                                                                       
C     DECLARE FUNCTION NAMES                                            
      REAL EXPINT                                                       
C                                                                       
C     LIST DATA                                                         
C       ZTOL     TOLERANCE FOR MERGING TOGETHER LAYERS [KM]             
C       TFREEZ   TEMPERATURE BELOW WHICH A WARNING IS GENERATED IF      
C                LIQUID WATER DROPLET DENSITY IS POSITIVE [K]           
C       TMELT    TEMPERATURE ABOVE WHICH A WARNING IS GENERATED IF      
C                ICE PARTICLE DENSITY IS POSITIVE [K]                   
      REAL ZTOL,TFREEZ,TMELT                                            
      DATA ZTOL/.0005/,TFREEZ/260./,TMELT/278./                         
C                                                                       
C     CHECK THAT CLOUD/RAIN ALTITUDES ARE BOUNDED BY ZM ALTITUDES       
      IF(ZCLDRN(1).LT.ZM(1) .OR. ZCLDRN(NBND).GT.ZM(ML))THEN            
Calley          WRITE(IPR,'(/A,2(F10.5,A),/14X,A,2(F10.5,A))')          
          IF (IPR.GT.0) WRITE(IPR,'(/A,2(F10.5,A),/14X,A,2(F10.5,A))')  
     1      ' FATAL ERROR:  CLOUD/RAIN MODEL BOUNDING ALTITUDES (',     
     2      ZCLDRN(1),' AND',ZCLDRN(NBND),' KM) ARE',                   
     3      ' NOT BRACKETED BY ATMOSPHERE BOUNDING ALTITUDES (',        
     4      ZM(1),' AND', ZM(ML),' KM).'                                
          STOP                                                          
      ENDIF                                                             
C                                                                       
C     CHECK THAT RAIN RATE AND CLOUD WATER DROPLET AND ICE PARTICLE     
C     DENSITIES ARE INDEED ZERO AT THE TOP OF THE PROFILE.              
      IF(DRPWAT(NBND).NE.0. .OR. PRTICE(NBND).NE.0.                     
     1                      .OR. RNPROF(NBND).NE.0.)THEN                
Calley          WRITE(IPR,'(/2A,/14X,A)')' FATAL ERROR:  RAIN RATE AND',
          IF (IPR .GT. 0) WRITE(IPR,'(/2A,/14X,A)')                     
     +      ' FATAL ERROR:  RAIN RATE AND',                             
     1      ' CLOUD WATER DROPLET AND ICE PARTICLE DENSITIES AND',      
     2      ' ARE NOT ZERO AT THE TOP OF THE CLOUD/RAIN PROFILE.'       
          STOP                                                          
      ENDIF                                                             
C                                                                       
C     INITIALIZE WARNING MESSAGE VARIABLES                              
C     WARNWD   A LOGICAL VARIABLE THAT IS SET TO FALSE AFTER THE USER   
C              HAS BEEN WARNED THAT WATER DROPLETS EXIST BELOW TFREEZ.  
C     WARNIP   A LOGICAL VARIABLE THAT IS SET TO FALSE AFTER THE USER   
C              HAS BEEN WARNED THAT ICE PARTICLES EXIST ABOVE TMELT.    
      WARNWD=.TRUE.                                                     
      WARNIP=.TRUE.                                                     
C                                                                       
C     DETERMINE THE RELATIVE HUMIDITY [%] WITHIN THE CLOUD.             
C     THE RELATIVE HUMIDITY MUST BE POSITIVE (A DRY ATMOSPHERE          
C     IS NOT ALLOWED), AND SUPER-SATURATION IS LIMITED TO 5%.           
      CLDHUM=100.                                                       
      IF(CHUMID.GT.0. .AND. CHUMID.LE.105.)CLDHUM=CHUMID                
C                                                                       
C     TEMPORARILY TRANSLATE BOUNDARY LAYER DATA TO MAXIMUM              
C     LAYER INDICES TO MAKE SPACE FOR ADDITIONAL LAYERS.                
      NEWBND=LAYDIM+1                                                   
      DO 20 MBND=ML,2,-1                                                
          NEWBND=NEWBND-1                                               
          ZM(NEWBND)=ZM(MBND)                                           
          P(NEWBND)=P(MBND)                                             
          T(NEWBND)=T(MBND)                                             
          RELHUM(NEWBND)=RELHUM(MBND)                                   
          WH(NEWBND)=WH(MBND)                                           
          WCO2(NEWBND)=WCO2(MBND)                                       
          WO(NEWBND)=WO(MBND)                                           
          WN2O(NEWBND)=WN2O(MBND)                                       
          WCO(NEWBND)=WCO(MBND)                                         
          WCH4(NEWBND)=WCH4(MBND)                                       
          WO2(NEWBND)=WO2(MBND)                                         
          WHNO3(NEWBND)=WHNO3(MBND)                                     
          WNO(NEWBND)=WNO(MBND)                                         
          WSO2(NEWBND)=WSO2(MBND)                                       
          WNO2(NEWBND)=WNO2(MBND)                                       
          WNH3(NEWBND)=WNH3(MBND)                                       
          WAIR(NEWBND)=WAIR(MBND)                                       
          DO 10 I=1,NSPECX                                              
              WMOLXT(I,NEWBND)=WMOLXT(I,MBND)                           
   10     CONTINUE                                                      
          DENSTY(7,NEWBND)=DENSTY(7,MBND)                               
          DENSTY(12,NEWBND)=DENSTY(12,MBND)                             
          DENSTY(13,NEWBND)=DENSTY(13,MBND)                             
          DENSTY(14,NEWBND)=DENSTY(14,MBND)                             
          DENSTY(15,NEWBND)=DENSTY(15,MBND)                             
          DENSTY(16,NEWBND)=DENSTY(16,MBND)                             
   20 CONTINUE                                                          
C                                                                       
C     INITIALIZE RAIN RATE AND WATER DROPLET AND                        
C     ICE PARTICLE DENSITIES AT THE GROUND.                             
      ML=1                                                              
      DENSTY(66,1)=0.                                                   
      DENSTY(67,1)=0.                                                   
      DENSTY(3,1)=0.                                                    
C                                                                       
C     LOOP OVER OLD ATMOSPHERIC LAYERS                                  
      IBND=1                                                            
      DO 60 MBND=NEWBND,LAYDIM                                          
          LSET=.FALSE.                                                  
   30     CONTINUE                                                      
          IF(ZCLDRN(IBND).LE.ZM(MBND))THEN                              
C                                                                       
C             CLOUD LAYER BOUNDARY WITHIN OLD ATMOSPHERIC LAYER         
              IF(ZCLDRN(IBND).LT.ZM(ML)+ZTOL)THEN                       
C                                                                       
C                 MERGE INTO LOWER LAYER BOUNDARY                       
                  DENSTY(66,ML)=DRPWAT(IBND)                            
                  DENSTY(67,ML)=PRTICE(IBND)                            
                  DENSTY(3,ML)=RNPROF(IBND)                             
                  IF(DRPWAT(IBND).GT.0. .OR. PRTICE(IBND).GT.0.         
     1                                  .OR. RNPROF(IBND).GT.0.)THEN    
                      RELHUM(ML)=CLDHUM                                 
                      TRATIO=273.15/T(ML)                               
                      WH(ML)=.01*CLDHUM*TRATIO*                         
     1                  EXP(18.9766-(14.9595+2.43882*TRATIO)*TRATIO)    
                      IF(WARNWD .AND. DRPWAT(IBND).GT.0.                
     1                          .AND. T(ML).LT.TFREEZ)THEN              
Calley                      WRITE(IPR,'(//A,F9.4,A,3(/10X,A,F9.4,2A))') 
                          IF (IPR .GT. 0) WRITE(IPR,                    
     +                      '(//A,F9.4,A,3(/10X,A,F9.4,2A))')           
     1                      ' WARNING:  AT ALTITUDE',ZM(ML),            
     2                      ' KM, THE LIQUID WATER DROPLET DENSITY',    
     3                      ' IS POSITIVE [',DRPWAT(IBND),' GM/M3]',    
     4                      ' EVEN THOUGH',' THE TEMPERATURE IS',       
     5                      T(ML)-273.15,' DEGREES',' CELSIUS.'         
                          WARNWD=.FALSE.                                
                      ELSEIF(WARNIP .AND. PRTICE(IBND).GT.0.            
     1                              .AND. T(ML).GT.TMELT)THEN           
Calley                      WRITE(IPR,'(//A,F9.4,A,3(/10X,A,F9.4,2A))') 
                          IF (IPR .GT. 0) WRITE(IPR,                    
     +                      '(//A,F9.4,A,3(/10X,A,F9.4,2A))')           
     1                      ' WARNING:  AT ALTITUDE',ZM(ML),            
     2                      ' KM, THE ICE PARITCLE DENSITY',            
     3                      ' IS POSITIVE [',PRTICE(IBND),' GM/M3]',    
     4                      ' EVEN THOUGH',' THE TEMPERATURE IS',       
     5                      T(ML)-273.15,' DEGREES',' CELSIUS.'         
                          WARNIP=.FALSE.                                
                      ENDIF                                             
                  ENDIF                                                 
              ELSEIF(ZCLDRN(IBND).GT.ZM(MBND)-ZTOL)THEN                 
C                                                                       
C                 MERGE INTO UPPER LAYER BOUNDARY                       
                  LSET=.TRUE.                                           
                  DENSTY(66,MBND)=DRPWAT(IBND)                          
                  DENSTY(67,MBND)=PRTICE(IBND)                          
                  DENSTY(3,MBND)=RNPROF(IBND)                           
                  IF(DRPWAT(IBND).GT.0. .OR. PRTICE(IBND).GT.0.         
     1                                  .OR. RNPROF(IBND).GT.0.)THEN    
                      RELHUM(MBND)=CLDHUM                               
                      TRATIO=273.15/T(MBND)                             
                      WH(MBND)=.01*CLDHUM*TRATIO*                       
     1                  EXP(18.9766-(14.9595+2.43882*TRATIO)*TRATIO)    
                  ENDIF                                                 
              ELSEIF(ML+1.LT.MBND)THEN                                  
C                                                                       
C                 ADD NEW ZM LAYER BOUNDARY                             
                  MLOLD=ML                                              
                  ML=ML+1                                               
                  ZM(ML)=ZCLDRN(IBND)                                   
                  DENSTY(66,ML)=DRPWAT(IBND)                            
                  DENSTY(67,ML)=PRTICE(IBND)                            
                  DENSTY(3,ML)=RNPROF(IBND)                             
                  FAC=(ZM(ML)-ZM(MLOLD))/(ZM(MBND)-ZM(MLOLD))           
                  P(ML)=EXPINT(P(MLOLD),P(MBND),FAC)                    
                  T(ML)=EXPINT(T(MLOLD),T(MBND),FAC)                    
                  TRATIO=273.15/T(ML)                                   
                  IF(DRPWAT(IBND).GT.0. .OR. PRTICE(IBND).GT.0.         
     1                                  .OR. RNPROF(IBND).GT.0.)THEN    
                      RELHUM(ML)=CLDHUM                                 
                      WH(ML)=.01*CLDHUM*TRATIO*                         
     1                  EXP(18.9766-(14.9595+2.43882*TRATIO)*TRATIO)    
                      IF(WARNWD .AND. DRPWAT(IBND).GT.0.                
     1                  .AND. T(ML).LT.TFREEZ)THEN                      
Calley                      WRITE(IPR,'(//A,F9.4,A,3(/10X,A,F9.4,2A))') 
                          IF (IPR .GT. 0) WRITE(IPR,                    
     +                      '(//A,F9.4,A,3(/10X,A,F9.4,2A))')           
     1                      ' WARNING:  AT ALTITUDE',ZM(ML),            
     2                      ' KM, THE LIQUID WATER DROPLET DENSITY',    
     3                      ' IS POSITIVE [',DRPWAT(IBND),' GM/M3]',    
     4                      ' EVEN THOUGH',' THE TEMPERATURE IS',       
     5                      T(ML)-273.15,' DEGREES',' CELSIUS.'         
                          WARNWD=.FALSE.                                
                      ELSEIF(WARNIP .AND. PRTICE(IBND).GT.0.            
     1                              .AND. T(ML).GT.TMELT)THEN           
Calley                      WRITE(IPR,'(//A,F9.4,A,3(/10X,A,F9.4,2A))') 
                          IF (IPR .GT. 0) WRITE(IPR,                    
     +                      '(//A,F9.4,A,3(/10X,A,F9.4,2A))')           
     1                      ' WARNING:  AT ALTITUDE',ZM(ML),            
     2                      ' KM, THE ICE PARITCLE DENSITY',            
     3                      ' IS POSITIVE [',PRTICE(IBND),' GM/M3]',    
     4                      ' EVEN THOUGH',' THE TEMPERATURE IS',       
     5                      T(ML)-273.15,' DEGREES',' CELSIUS.'         
                          WARNIP=.FALSE.                                
                      ENDIF                                             
                  ELSE                                                  
                      RELHUM(ML)=EXPINT(RELHUM(MLOLD),RELHUM(MBND),FAC) 
                      WH(ML)=.01*RELHUM(ML)*TRATIO*                     
     1                  EXP(18.9766-(14.9595+2.43882*TRATIO)*TRATIO)    
                  ENDIF                                                 
                  WCO2(ML)=EXPINT(WCO2(MLOLD),WCO2(MBND),FAC)           
                  WO(ML)=EXPINT(WO(MLOLD),WO(MBND),FAC)                 
                  WN2O(ML)=EXPINT(WN2O(MLOLD),WN2O(MBND),FAC)           
                  WCO(ML)=EXPINT(WCO(MLOLD),WCO(MBND),FAC)              
                  WCH4(ML)=EXPINT(WCH4(MLOLD),WCH4(MBND),FAC)           
                  WO2(ML)=EXPINT(WO2(MLOLD),WO2(MBND),FAC)              
                  WHNO3(ML)=EXPINT(WHNO3(MLOLD),WHNO3(MBND),FAC)        
                  WNO(ML)=EXPINT(WNO(MLOLD),WNO(MBND),FAC)              
                  WSO2(ML)=EXPINT(WSO2(MLOLD),WSO2(MBND),FAC)           
                  WNO2(ML)=EXPINT(WNO2(MLOLD),WNO2(MBND),FAC)           
                  WNH3(ML)=EXPINT(WNH3(MLOLD),WNH3(MBND),FAC)           
                  WAIR(ML)=EXPINT(WAIR(MLOLD),WAIR(MBND),FAC)           
                  DO 40 I=1,NSPECX                                      
                      WMOLXT(I,ML)=                                     
     1                  EXPINT(WMOLXT(I,MLOLD),WMOLXT(I,MBND),FAC)      
   40             CONTINUE                                              
                  DENSTY(7,ML)=                                         
     1              EXPINT(DENSTY(7,MLOLD),DENSTY(7,MBND),FAC)          
                  DENSTY(12,ML)=                                        
     1              EXPINT(DENSTY(12,MLOLD),DENSTY(12,MBND),FAC)        
                  DENSTY(13,ML)=                                        
     1              EXPINT(DENSTY(13,MLOLD),DENSTY(13,MBND),FAC)        
                  DENSTY(14,ML)=                                        
     1              EXPINT(DENSTY(14,MLOLD),DENSTY(14,MBND),FAC)        
                  DENSTY(15,ML)=                                        
     1              EXPINT(DENSTY(15,MLOLD),DENSTY(15,MBND),FAC)        
                  DENSTY(16,ML)=                                        
     1              EXPINT(DENSTY(16,MLOLD),DENSTY(16,MBND),FAC)        
              ELSE                                                      
C                                                                       
C                 NO MORE SPACE IN ARRAYS FOR AN ADDITIONAL LAYER       
Calley               WRITE(IPR,'(/3A,/14X,A,2(A,I4))')' FATAL ERROR: ', 
                  IF (IPR .GT. 0) WRITE(IPR,                            
     +              '(/3A,/14X,A,2(A,I4))')' FATAL ERROR: ',            
     1              ' FILE "PARAM.LST" PARAMETER "LAYDIM" MUST',        
     2              ' BE INCREASED.',' IT SUFFICES TO INCREASE',        
     3              ' LAYDIM FROM',LAYDIM,' TO',LAYDIM+NBND-IBND+1      
                  STOP                                                  
              ENDIF                                                     
C                                                                       
C             EXIT LOOP IF ALL CLOUD BOUNDARIES HAVE BEEN INTEGRATED.   
              IF(IBND.GE.NBND)GOTO70                                    
C                                                                       
C             INCREMENT CLOUD BOUNDARY INDEX AND START AGAIN            
              IBND=IBND+1                                               
              GOTO30                                                    
          ENDIF                                                         
C                                                                       
C         LINEARLY INTERPOLATE WATER PARTICLE DENSITIES AND RAIN RATE.  
          IF(.NOT.LSET)THEN                                             
              FAC=(ZM(MBND)-ZM(ML))/(ZCLDRN(IBND)-ZM(ML))               
              DENSTY(66,MBND)=DENSTY(66,ML)                             
     1          +FAC*(DRPWAT(IBND)-DENSTY(66,ML))                       
              DENSTY(67,MBND)=DENSTY(67,ML)                             
     1          +FAC*(PRTICE(IBND)-DENSTY(67,ML))                       
              DENSTY(3,MBND)=DENSTY(3,ML)                               
     1          +FAC*(RNPROF(IBND)-DENSTY(3,ML))                        
              IF(DENSTY(66,MBND).GT.0. .OR. DENSTY(67,MBND).GT.0.       
     1                                 .OR. DENSTY( 3,MBND).GT.0.)THEN  
                  RELHUM(MBND)=CLDHUM                                   
                  TRATIO=273.15/T(MBND)                                 
                  WH(MBND)=.01*CLDHUM*TRATIO*                           
     1              EXP(18.9766-(14.9595+2.43882*TRATIO)*TRATIO)        
              ENDIF                                                     
          ENDIF                                                         
C                                                                       
C         TRANSLATE LAYER BOUNDARY DATA TO NEW BOUNDARY INDEX.          
          ML=ML+1                                                       
          ZM(ML)=ZM(MBND)                                               
          DENSTY(66,ML)=DENSTY(66,MBND)                                 
          DENSTY(67,ML)=DENSTY(67,MBND)                                 
          DENSTY(3,ML)=DENSTY(3,MBND)                                   
          P(ML)=P(MBND)                                                 
          T(ML)=T(MBND)                                                 
          IF(WARNWD .AND. DENSTY(66,ML).GT.0. .AND. T(ML).LT.TFREEZ)THEN
Calley              WRITE(IPR,'(//A,F9.4,A,3(/10X,A,F9.4,A))')          
              IF (IPR.GT.0) WRITE(IPR,'(//A,F9.4,A,3(/10X,A,F9.4,A))')  
     1          ' WARNING:  AT ALTITUDE',ZM(ML),                        
     2          ' KM, THE LIQUID WATER DROPLET DENSITY',                
     3          ' IS POSITIVE [',DENSTY(66,ML),' GM/M3] EVEN THOUGH',   
     4          ' THE TEMPERATURE IS',T(ML)-273.15,' DEGREES CELSIUS.'  
              WARNWD=.FALSE.                                            
          ENDIF                                                         
          IF(WARNIP .AND. DENSTY(67,ML).GT.0. .AND. T(ML).GT.TMELT)THEN 
Calley         WRITE(IPR,'(//2A,F9.4,A,3(/10X,A,F9.4,A))')' WARNING: ', 
              IF (IPR .GT. 0) WRITE(IPR,                                
     +          '(//2A,F9.4,A,3(/10X,A,F9.4,A))')' WARNING: ',          
     1          ' AT ALTITUDE',ZM(ML),' KM, THE ICE PARITCLE DENSITY',  
     2          ' IS POSITIVE [',DENSTY(67,ML),' GM/M3] EVEN THOUGH',   
     3          ' THE TEMPERATURE IS',T(ML)-273.15,' DEGREES CELSIUS.'  
              WARNIP=.FALSE.                                            
          ENDIF                                                         
          RELHUM(ML)=RELHUM(MBND)                                       
          WH(ML)=WH(MBND)                                               
          WCO2(ML)=WCO2(MBND)                                           
          WO(ML)=WO(MBND)                                               
          WN2O(ML)=WN2O(MBND)                                           
          WCO(ML)=WCO(MBND)                                             
          WCH4(ML)=WCH4(MBND)                                           
          WO2(ML)=WO2(MBND)                                             
          WHNO3(ML)=WHNO3(MBND)                                         
          WNO(ML)=WNO(MBND)                                             
          WSO2(ML)=WSO2(MBND)                                           
          WNO2(ML)=WNO2(MBND)                                           
          WNH3(ML)=WNH3(MBND)                                           
          WAIR(ML)=WAIR(MBND)                                           
          DO 50 I=1,NSPECX                                              
              WMOLXT(I,ML)=WMOLXT(I,MBND)                               
   50     CONTINUE                                                      
          DENSTY(7,ML)=DENSTY(7,MBND)                                   
          DENSTY(12,ML)=DENSTY(12,MBND)                                 
          DENSTY(13,ML)=DENSTY(13,MBND)                                 
          DENSTY(14,ML)=DENSTY(14,MBND)                                 
          DENSTY(15,ML)=DENSTY(15,MBND)                                 
          DENSTY(16,ML)=DENSTY(16,MBND)                                 
   60 CONTINUE                                                          
   70 CONTINUE                                                          
C                                                                       
C     TRANSLATE REMAINING LAYER BOUNDARY DATA TO NEW BOUNDARY INDEX     
C     SETTING CLOUD PARTICLE DENSITIES AND RAIN RATES TO ZERO.          
      NEWBND=MBND                                                       
      DO 90 MBND=NEWBND,LAYDIM                                          
          ML=ML+1                                                       
          ZM(ML)=ZM(MBND)                                               
          DENSTY(66,ML)=0.                                              
          DENSTY(67,ML)=0.                                              
          DENSTY(3,ML)=0.                                               
          P(ML)=P(MBND)                                                 
          T(ML)=T(MBND)                                                 
          RELHUM(ML)=RELHUM(MBND)                                       
          WH(ML)=WH(MBND)                                               
          WCO2(ML)=WCO2(MBND)                                           
          WO(ML)=WO(MBND)                                               
          WN2O(ML)=WN2O(MBND)                                           
          WCO(ML)=WCO(MBND)                                             
          WCH4(ML)=WCH4(MBND)                                           
          WO2(ML)=WO2(MBND)                                             
          WHNO3(ML)=WHNO3(MBND)                                         
          WNO(ML)=WNO(MBND)                                             
          WSO2(ML)=WSO2(MBND)                                           
          WNO2(ML)=WNO2(MBND)                                           
          WNH3(ML)=WNH3(MBND)                                           
          WAIR(ML)=WAIR(MBND)                                           
          DO 80 I=1,NSPECX                                              
              WMOLXT(I,ML)=WMOLXT(I,MBND)                               
   80     CONTINUE                                                      
          DENSTY(7,ML)=DENSTY(7,MBND)                                   
          DENSTY(12,ML)=DENSTY(12,MBND)                                 
          DENSTY(13,ML)=DENSTY(13,MBND)                                 
          DENSTY(14,ML)=DENSTY(14,MBND)                                 
          DENSTY(15,ML)=DENSTY(15,MBND)                                 
          DENSTY(16,ML)=DENSTY(16,MBND)                                 
   90 CONTINUE                                                          
      RETURN                                                            
      END                                                               
Calley      SUBROUTINE CRPROF(CTHICK,CWDCOL,CIPCOL)                     
      SUBROUTINE CRPROF(CTHICK,CWDCOL,CIPCOL,ZCLDX,CLDX,CLDICEX,RRX)    
C                                                                       
      REAL ZCLDX(*),CLDX(*),CLDICEX(*),RRX(*)                           
C                                                                       
C     THIS ROUTINE DEFINES CLOUD/RAIN MODEL PROFILES.                   
C                                                                       
C     LIST PARAMETERS                                                   
      INTEGER NMDLS                                                     
      PARAMETER(NMDLS=10)                                               
      INCLUDE 'PARAM.LST'                                               
C                                                                       
C     LIST ARGUMENTS                                                    
C     CTHICK   OUTPUT CLOUD THICKNESS [KM]                              
C     CWDCOL   OUTPUT WATER DROPLET VERTICAL COLUMN DENSITY [KM GM/M3]  
C     CIPCOL   OUTPUT ICE PARTICLE VERTICAL COLUMN DENSITY [KM GM/M3]   
      REAL CTHICK,CWDCOL,CIPCOL                                         
C                                                                       
C     LIST COMMONS                                                      
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH                               
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                           
      REAL ZM,PM,TM,RFNDX,DENSTY                                        
      COMMON/MODEL/ZM(LAYDIM),PM(LAYDIM),TM(LAYDIM),                    
     1  RFNDX(LAYDIM),DENSTY(KMAX,LAYDIM)                               
      INTEGER IKMAX,ML,ISSGEO,IMULT                                     
      COMMON/CNTRL/IKMAX,ML,ISSGEO,IMULT                                
      INTEGER IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA                       
      REAL VIS,WSS,WHH,RAINRT                                           
      COMMON/CARD2/IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,                 
     1  VIS,WSS,WHH,RAINRT                                              
      INTEGER NCRALT,NCRSPC                                             
      REAL CTHIK,CALT,CEXT,CWAVLN,CCOLWD,CCOLIP,CHUMID,ASYMWD,ASYMIP    
      COMMON/CARD2A/CTHIK,CALT,CEXT,NCRALT,NCRSPC,                      
     1  CWAVLN,CCOLWD,CCOLIP,CHUMID,ASYMWD,ASYMIP                       
      REAL ZCLD,CLD,CLDICE,RR                                           
      COMMON/CLDRR/ZCLD(1:NZCLD,0:1),CLD(1:NZCLD,0:5),                  
     1  CLDICE(1:NZCLD,0:1),RR(1:NZCLD,0:5)                             
      INTEGER NBND                                                      
      REAL ZCLDRN(NZCLD),DRPWAT(NZCLD),PRTICE(NZCLD),RNPROF(NZCLD)      
      COMMON/CLDRN/NBND,ZCLDRN,DRPWAT,PRTICE,RNPROF                     
C                                                                       
C     LIST LOCAL VARIABLES AND ARRAYS                                   
      INTEGER ICLD0,ICE0,IRAIN0,IZ0,NUMALT,N,NBASE,NTOP,NBNDM1          
      REAL CBASE,FACLEN,CMIN,FAC,RNRATE(NZCLD)                          
C                                                                       
C     LIST DATA                                                         
      INTEGER MDLCLD(NMDLS)                                             
      CHARACTER*37 CLDTIT(NMDLS)                                        
      DATA MDLCLD/1,2,3,4,5,3,5,5,1,1/                                  
      DATA CLDTIT/'CUMULUS CLOUD                        ',              
     1            'ALTOSTRATUS CLOUD                    ',              
     2            'STRATUS CLOUD                        ',              
     3            'STRATUS/STRATO-CUMULUS CLOUD         ',              
     4            'NIMBOSTRATUS CLOUD                   ',              
     5            'STRATUS CLOUD WITH DRIZZLE           ',              
     6            'NIMBOSTRATUS CLOUD WITH LIGHT RAIN   ',              
     7            'NIMBOSTRATUS CLOUD WITH MODERATE RAIN',              
     8            'CUMULUS CLOUD WITH HEAVY RAIN        ',              
     9            'CUMULUS CLOUD WITH EXTREME RAIN      '/              
C                                                                       
C     RETURN IF CLOUD/RAIN MODEL 1 THROUGH NMDLS WAS NOT SELECTED       
      IF(ICLD.LT.1 .OR. ICLD.GT.NMDLS)RETURN                            
C                                                                       
C     ICLD0    INDEX OF CLOUD/RAIN MODEL WATER DROPLET DENSITY PROFILE  
C     ICE0     INDEX OF CLOUD/RAIN MODEL ICE PARTICLE DENSITY PROFILE   
C     IRAIN0   INDEX OF CLOUD/RAIN MODEL RAIN RATE PROFILE              
C     IZ0      INDEX OF CLOUD/RAIN MODEL ALTITUDE PROFILE               
C     NUMALT   NUMBER OF CLOUD/RAIN MODEL PROFILE BOUNDARY ALTITUDES    
      IF(NCRALT.LT.2)THEN                                               
C                                                                       
C         USE A BUILT-IN CLOUD/RAIN PROFILE DATA                        
          ICLD0=MDLCLD(ICLD)                                            
          ICE0=1                                                        
          IRAIN0=ICLD-5                                                 
          IZ0=1                                                         
          NUMALT=NZCLD                                                  
      ELSE                                                              
C                                                                       
C         READ USER-DEFINED CLOUD/RAIN PROFILE DATA                     
          IZ0=0                                                         
          ICLD0=0                                                       
          ICE0=0                                                        
          IRAIN0=0                                                      
          NUMALT=NCRALT                                                 
Calley          CALL CRUPRF(NCRALT)                                     
          CALL CRUPRF(NCRALT,ZCLDX,CLDX,CLDICEX,RRX)                    
      ENDIF                                                             
C                                                                       
C     NBASE    INDEX OF CLOUD BASE                                      
C     NTOP     INDEX OF CLOUD TOP                                       
      IF(CLD(NUMALT,ICLD0).NE.0. .OR. CLDICE(NUMALT,ICE0).NE.0.)THEN    
Calley          WRITE(IPR,'(/2A,/14X,A)')' FATAL ERROR:  CLOUD',        
          IF (IPR.GT.0)WRITE(IPR,'(/2A,/14X,A)')' FATAL ERROR:  CLOUD', 
     1      ' WATER DROPLET AND ICE PARTICLE PROFILES ARE NOT',         
     2      ' BOTH ZERO AT THE HIGHEST CLOUD PROFILE ALTITUDE.'         
          STOP 'CLOUD PROFILES ARE NOT PROPERLY DEFINED AT TOP.'        
      ENDIF                                                             
      DO 10 NBASE=1,NUMALT                                              
          IF(CLD(NBASE,ICLD0).GT.0. .OR. CLDICE(NBASE,ICE0).GT.0.)GOTO20
   10 CONTINUE                                                          
Calley      WRITE(IPR,'(/A)')                                           
      IF (IPR .GT. 0) WRITE(IPR,'(/A)')                                 
     1  ' FATAL ERROR:  NO WATER DROPLETS OR ICE PARTICLES IN CLOUD.'   
      STOP ' FATAL ERROR:  NO WATER DROPLETS OR ICE PARTICLES IN CLOUD.'
   20 CONTINUE                                                          
      DO 30 NTOP=NUMALT-1,NBASE+1,-1                                    
          IF(CLD(NTOP,ICLD0).GT.0. .OR. CLDICE(NTOP,ICE0).GT.0.)GOTO40  
   30 CONTINUE                                                          
Calley      WRITE(IPR,'(/A)')                                           
      IF (IPR .GT. 0) WRITE(IPR,'(/A)')                                 
     1  ' FATAL ERROR:  CLOUD BASE AND TOP ALTITUDES ARE EQUAL.'        
      STOP ' FATAL ERROR:  CLOUD BASE AND TOP ALTITUDES ARE EQUAL.'     
   40 CONTINUE                                                          
C                                                                       
C     PRIORITY FOR INPUT RAIN RATES IS AS FOLLOWS:                      
C       IF "RAINRT" > 0, USE CONSTANT RAIN RATE FROM GROUND             
C       TO CLOUD TOP.  OTHERWISE, USE THE RAIN PROFILE.                 
      IF(RAINRT.GT.0. .OR. (NCRALT.LT.2 .AND. IRAIN0.LE.0))THEN         
          IF(RAINRT.LT.0.)RAINRT=0.                                     
          DO 50 N=1,NTOP                                                
              RNRATE(N)=RAINRT                                          
   50     CONTINUE                                                      
      ELSE                                                              
          DO 60 N=1,NTOP                                                
              RNRATE(N)=RR(N,IRAIN0)                                    
   60     CONTINUE                                                      
      ENDIF                                                             
      RNRATE(NTOP+1)=0.                                                 
C                                                                       
C     CBASE    CLOUD BASE ALTITUDE (RELATIVE TO SEA LEVEL) [KM]         
      CBASE=CALT                                                        
      IF(CBASE.LT.0.)CBASE=ZCLD(NBASE,IZ0)                              
      CBASE=CBASE+ZM(1)                                                 
C                                                                       
C     FACLEN   CLOUD STRETCH/COMPRESSION FACTOR                         
C     CTHICK   CLOUD THICKNESS [KM]                                     
      FACLEN=1.                                                         
      CTHICK=ZCLD(NTOP,IZ0)-ZCLD(NBASE,IZ0)                             
      IF(CTHIK.GT.0.)THEN                                               
          FACLEN=CTHIK/CTHICK                                           
          CTHICK=CTHIK                                                  
      ENDIF                                                             
C                                                                       
C     NBND     NUMBER OF CLOUD/RAIN PROFILE BOUNDARY ALTITUDES          
C     RNPROF   TRUE RAIN RATE PROFILE [MM/HR]                           
C     DRPWAT   CLOUD WATER DROPLET PROFILE [GM/M3]                      
C     PRTICE   CLOUD ICE PARTICLE PROFILE [GM/M3]                       
C     ZCLDRN   CLOUD/RAIN PROFILE ALTITUDES [KM]                        
C     CWDCOL   CLOUD WATER DROPLET VERTICAL COLUMN DENSITY [KM GM/M3]   
C     CIPCOL   CLOUD ICE PARTICLE VERTICAL COLUMN DENSITY [KM GM/M3]    
C     CMIN     ALTITUDE NON-ZERO CLOUD DENSITY BEGINS [KM]              
C                                                                       
C     RAIN/CLOUD PROFILES UP TO AND INCLUDING THE CLOUD BASE            
      RNPROF(1)=RNRATE(1)                                               
      NBND=1                                                            
      CWDCOL=0.                                                         
      IF(CBASE.GT.ZM(1))THEN                                            
C                                                                       
C         CLOUD BASE IS ABOVE THE GROUND                                
          ZCLDRN(1)=ZM(1)                                               
          DRPWAT(1)=0.                                                  
          PRTICE(1)=0.                                                  
          IF(NBASE.EQ.1)THEN                                            
C                                                                       
C             ASSUME CLOUD WATER DROPLET AND ICE PARTICLE               
C             DENSITIES DROP TO ZERO ONE METER BELOW THE CLOUD          
C             BASE SINCE THE FALL OFF WAS NOT EXPLICITLY DICTATED.      
              CMIN=CBASE-.001                                           
          ELSE                                                          
              CMIN=CBASE+FACLEN*(ZCLD(NBASE-1,IZ0)-ZCLD(NBASE,IZ0))     
          ENDIF                                                         
          NBND=2                                                        
          IF(CMIN.LE.ZM(1))THEN                                         
C                                                                       
C             CLOUD BASE IS NEAR THE GROUND.  ASSUME RAIN RATE          
C             VARIES LINEARLY FROM CLOUD BASE TO GROUND.                
              CMIN=ZM(1)                                                
          ELSEIF(RNRATE(1).LE.0.)THEN                                   
C                                                                       
C             CLOUD WITH NO RAIN.  BEGIN PROFILE AT CMIN.               
              ZCLDRN(1)=CMIN                                            
          ELSEIF(NBASE.GT.2)THEN                                        
C                                                                       
C             CLOUD WITH RAIN.  STRETCH/COMPRESS RAIN                   
C             PROFILE BETWEEN GROUND AND CMIN.                          
              FAC=(CMIN-ZM(1))/(ZCLD(NBASE-1,IZ0)-ZCLD(1,IZ0))          
              DO 70 NBND=2,NBASE-1                                      
                  ZCLDRN(NBND)=ZM(1)+FAC*(ZCLD(NBND,IZ0)-ZCLD(1,IZ0))   
                  DRPWAT(NBND)=0.                                       
                  PRTICE(NBND)=0.                                       
                  RNPROF(NBND)=RNRATE(NBND)                             
   70         CONTINUE                                                  
              NBND=NBASE                                                
          ENDIF                                                         
          RNPROF(NBND)=RNRATE(NBASE)                                    
          FAC=.5*(CBASE-ZCLDRN(NBND-1))                                 
          CWDCOL=FAC*CLD(NBASE,ICLD0)                                   
          CIPCOL=FAC*CLDICE(NBASE,ICE0)                                 
      ENDIF                                                             
      ZCLDRN(NBND)=CBASE                                                
      DRPWAT(NBND)=CLD(NBASE,ICLD0)                                     
      PRTICE(NBND)=CLDICE(NBASE,ICE0)                                   
C                                                                       
C     RAIN/CLOUD PROFILES ABOVE THE CLOUD BASE                          
      NBNDM1=NBND                                                       
      DO 80 N=NBASE+1,NTOP+1                                            
          NBND=NBND+1                                                   
          ZCLDRN(NBND)=CBASE+FACLEN*(ZCLD(N,IZ0)-ZCLD(NBASE,IZ0))       
          DRPWAT(NBND)=CLD(N,ICLD0)                                     
          PRTICE(NBND)=CLDICE(N,ICE0)                                   
          RNPROF(NBND)=RNRATE(N)                                        
          FAC=.5*(ZCLDRN(NBND)-ZCLDRN(NBNDM1))                          
          CWDCOL=CWDCOL+FAC*(DRPWAT(NBND)+DRPWAT(NBNDM1))               
          CIPCOL=CIPCOL+FAC*(PRTICE(NBND)+PRTICE(NBNDM1))               
   80 NBNDM1=NBND                                                       
C                                                                       
C     CHECK THAT CLOUD TOP IS NOT TOO HIGH                              
      IF(ZCLDRN(NBND).GT.ZM(ML))THEN                                    
Calley          WRITE(IPR,'(/3(A,F8.3))')                               
          IF (IPR .GT. 0) WRITE(IPR,'(/3(A,F8.3))')                     
     1      ' FATAL ERROR:  TOP OF CLOUD PROFILE (',ZCLDRN(NBND),       
     2      'KM) IS ABOVE THE TOP OF THE ATMOSPHERE (',ZM(ML),'KM).'    
          STOP                                                          
      ENDIF                                                             
                                                                        
C                                                                       
C     CHECK INPUT CLOUD WATER DROPLET AND ICE PARTICLE COLUMN DENSITIES 
      IF(CCOLWD.EQ.0. .AND. CCOLIP.EQ.0.)THEN                           
Calley          WRITE(IPR,'(/2A,/(10X,A))')' WARNING: ',                
          IF (IPR .GT. 0) WRITE(IPR,'(/2A,/(10X,A))')' WARNING: ',      
     1      ' BOTH THE CLOUD WATER DROPLET AND ICE PARTICLE COLUMN',    
     2      ' DENSITIES WERE INPUT AS ZERO.  IT IS ASSUMED THAT THE',   
     3      ' INTENT OF THE USER WAS TO NOT SCALE THE CLOUD COLUMN',    
     4      ' DENSITIES (I.E. TO USE DEFAULTS).  THEREFORE, THESE',     
     5      ' INPUTS (CCOLWD AND CCOLIP) HAVE BEEN RESET TO -1.000'     
          CCOLWD=-1.                                                    
          CCOLIP=-1.                                                    
      ENDIF                                                             
C                                                                       
C     SCALE WATER DROPLET PROFILE TO INPUT VERTICAL COLUMN DENSITY      
      IF(CCOLWD.GE.0. .AND. CWDCOL.GT.0.)THEN                           
          FAC=CCOLWD/CWDCOL                                             
          CWDCOL=CCOLWD                                                 
          DO 90 N=1,NBND                                                
              DRPWAT(N)=FAC*DRPWAT(N)                                   
   90     CONTINUE                                                      
      ENDIF                                                             
C                                                                       
C     SCALE ICE PARTICLE PROFILE TO INPUT VERTICAL COLUMN DENSITY       
      IF(CCOLIP.GE.0. .AND. CIPCOL.GT.0.)THEN                           
          FAC=CCOLIP/CIPCOL                                             
          CIPCOL=CCOLIP                                                 
          DO 100 N=1,NBND                                               
              PRTICE(N)=FAC*PRTICE(N)                                   
  100     CONTINUE                                                      
      ENDIF                                                             
C                                                                       
C     RETURN IF CLOUD/RAIN PROFILES ARE NOT BE TO OUTPUT                
      IF(NPR.GE.0)RETURN                                                
C                                                                       
C     WRITE OUT CLOUD/RAIN PROFILES                                     
      IF(NCRALT.GE.2)THEN                                               
Calley    WRITE(IPR,'(//A,4X,A)')'1','USER-DEFINED CLOUD/RAIN PROFILES' 
          IF (IPR .GT. 0) WRITE(IPR,                                    
     +              '(//A,4X,A)')'1','USER-DEFINED CLOUD/RAIN PROFILES' 
      ELSEIF(RAINRT.LE.0.)THEN                                          
Calley          WRITE(IPR,'(//A,4X,A)')'1',CLDTIT(ICLD)                 
          IF (IPR .GT. 0) WRITE(IPR,'(//A,4X,A)')'1',CLDTIT(ICLD)       
      ELSE                                                              
          N=INDEX(CLDTIT(ICLD0),'CLOUD')+4                              
Calley          WRITE(IPR,'(//A,4X,2A)')                                
          IF (IPR .GT. 0) WRITE(IPR,'(//A,4X,2A)')                      
     1      '1',CLDTIT(ICLD0)(1:N),' WITH CONSTANT RAIN RATE'           
      ENDIF                                                             
Calley      WRITE(IPR,'(5X,2A,F12.5,A)')'(CLOUD WATER DROPLET',         
      IF (IPR.GT.0) WRITE(IPR,'(5X,2A,F12.5,A)')'(CLOUD WATER DROPLET', 
     1  ' VERTICAL COLUMN DENSITY:',CWDCOL,' KM GM/M3)'                 
Calley      WRITE(IPR,'(5X,2A,F12.5,A)')'(CLOUD ICE PARTICLE ',         
      IF (IPR.GT.0) WRITE(IPR,'(5X,2A,F12.5,A)')'(CLOUD ICE PARTICLE ', 
     1  ' VERTICAL COLUMN DENSITY:',CIPCOL,' KM GM/M3)'                 
Calley      WRITE(IPR,'(4(/A),/(I5,4F14.5))')                           
      IF (IPR .GT. 0) WRITE(IPR,'(4(/A),/(I5,4F14.5))')                 
     1  ' BOUNDARY                 WATER         ICE',                  
     2  ' LAYER                    DROPLET       PARTICLE        RAIN', 
     3  ' NUMBER    ALTITUDE       DENSITY       DENSITY         RATE', 
     4  '             (KM)         (GM/M3)       (GM/M3)       (MM/HR)',
     5  (N,ZCLDRN(N),DRPWAT(N),PRTICE(N),RNPROF(N),N=1,NBND)            
Calley      WRITE(IPR,'(/A,//)')' END OF CLOUD/RAIN PROFILES'           
      IF (IPR .GT. 0) WRITE(IPR,'(/A,//)')' END OF CLOUD/RAIN PROFILES' 
      RETURN                                                            
      END                                                               
Calley      SUBROUTINE CRSPEC(CTHICK,CWDCOL,CIPCOL)                     
      SUBROUTINE CRSPEC(CTHICK,CWDCOL,CIPCOL,WAVLENX,EXTCX,ABSCX,ASYMX) 
C                                                                       
C     THIS ROUTINE DEFINES CLOUD PARTICLE SPECTRAL DATA:                
C     EXTC(6,IWAV)   WATER DROPLET EXTINCTION COEFS [KM-1 M3/GM]        
C     ABSC(6,IWAV)   WATER DROPLET ABSORPTION COEFS [KM-1 M3/GM]        
C     ASYM(6,IWAV)   WATER DROPLET HENYEY-GREENSTEIN ASYMMETRY FACTORS  
C     EXTC(7,IWAV)   ICE PARTICLE EXTINCTION COEFS [KM-1 M3/GM]         
C     ABSC(7,IWAV)   ICE PARTICLE ABSORPTION COEFS [KM-1 M3/GM]         
C     ASYM(7,IWAV)   ICE PARTICLE HENYEY-GREENSTEIN ASYMMETRY FACTORS   
C                                                                       
C     LIST PARAMETERS                                                   
      INTEGER NMDLS,NCLDS,NCIRS                                         
      PARAMETER(NMDLS=10,NCLDS=5,NCIRS=2)                               
      INCLUDE 'PARAM.LST'                                               
C                                                                       
C     LIST ARGUMENTS                                                    
C     CTHICK   INPUT CLOUD VERTICAL THICKNESS [KM]                      
C     CWDCOL   INPUT WATER DROPLET VERTICAL COLUMN DENSITY [KM GM/M3]   
C     CIPCOL   INPUT ICE PARTICLE VERTICAL COLUMN DENSITY [KM GM/M3]    
      REAL CTHICK,CWDCOL,CIPCOL                                         
      REAL WAVLENX(*),EXTCX(*),ABSCX(*),ASYMX(*)                        
C                                                                       
C     LIST COMMONS                                                      
      INTEGER KPOINT                                                    
      REAL WAVLEN,EXTC,ABSC,ASYM,AWCCON,TX,W,RELHUM,PATM,TBBY,WPATH     
      COMMON/BASE/WAVLEN(MXWVLN),EXTC(NAER,MXWVLN),ABSC(NAER,MXWVLN),   
     1  ASYM(NAER,MXWVLN),AWCCON(NAER),KPOINT(NSPC),TX(KMAX),W(KMAX),   
     2  RELHUM(LAYDIM),PATM(LAYTHR),TBBY(LAYTHR),WPATH(LAYTHR,KMAX)     
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH                               
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                           
      REAL VX0,DUMDAT,CLDSPC                                            
      COMMON/EXTD/VX0(NWAVLN),DUMDAT(NWAVLN,66),CLDSPC(NWAVLN,3,NCLDS)  
      REAL CIRSPC                                                       
      COMMON/CIRR/CIRSPC(NWAVLN,3,NCIRS)                                
      INTEGER IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA                       
      REAL VIS,WSS,WHH,RAINRT                                           
      COMMON/CARD2/IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,                 
     1  VIS,WSS,WHH,RAINRT                                              
      INTEGER NCRALT,NCRSPC                                             
      REAL CTHIK,CALT,CEXT,CWAVLN,CCOLWD,CCOLIP,CHUMID,ASYMWD,ASYMIP    
      COMMON/CARD2A/CTHIK,CALT,CEXT,NCRALT,NCRSPC,                      
     1  CWAVLN,CCOLWD,CCOLIP,CHUMID,ASYMWD,ASYMIP                       
C                                                                       
C     LIST LOCAL VARIABLES AND ARRAYS                                   
      INTEGER ICLD0,ICIR0,IWAV,IWAVM1                                   
      REAL REFWAV,REFDEP,FACTOR,EXTWD,EXTIP,XNRMWD,XNRMIP,RATDEP        
C                                                                       
C     LIST DATA                                                         
      INTEGER MDLCLD(NMDLS),MDLCIR(NMDLS)                               
      REAL CLDX55(NCLDS),CIRX55(NCIRS)                                  
C                                                                       
C     MDLCLD    MAPS CLOUD/RAIN MODEL INDICES INTO CLOUD MODEL INDICES  
C     MDLCIR    MAPS CLOUD/RAIN MODEL INDICES INTO CIRRUS MODEL INDICES 
C     CLDX55    0.55 MICRON CLOUD MODEL EXTINCTION COEFS [KM-1 M3/GM]   
      DATA MDLCLD/1,2,3,4,5,3,5,5,1,1/,MDLCIR/NMDLS*1/                  
      DATA CLDX55/130.16,222.78,189.68,239.41,133.01/                   
      DATA CIRX55/290.19, 17.21/                                        
C                                                                       
C     RETURN IF CLOUD/RAIN MODEL 1 THROUGH NMDLS WAS NOT SELECTED       
      IF(ICLD.LT.1 .OR. ICLD.GT.NMDLS)RETURN                            
C                                                                       
C     CHECK INPUT WATER DROPLET AND ICE PARTICLE COLUMN DENSITIES       
      IF(CWDCOL.LE.0.)CWDCOL=0.                                         
      IF(CIPCOL.LE.0.)CIPCOL=0.                                         
      IF(CWDCOL.EQ.0. .AND. CIPCOL.EQ.0.)THEN                           
C                                                                       
C         FATAL ERROR:  NO CLOUD VERTICAL COLUMN DENSITY                
Calley      WRITE(IPR,'(/2A)')' FATAL ERROR:  CLOUD WATER DROPLET AND', 
          IF (IPR .GT. 0) WRITE(IPR,                                    
     +      '(/2A)')' FATAL ERROR:  CLOUD WATER DROPLET AND',           
     1      ' ICE PARTICLE VERTICAL COLUMN DENSITIES ARE BOTH ZERO.'    
          STOP 'FATAL ERROR:  NO CLOUD VERTICAL COLUMN DENSITY'         
      ENDIF                                                             
C                                                                       
C     ICLD0    INDEX OF CLOUD WATER DROPLET MODEL                       
C     ICIR0    INDEX OF CLOUD ICE PARTICLE MODEL                        
      ICLD0=MDLCLD(ICLD)                                                
      ICIR0=MDLCIR(ICLD)                                                
C                                                                       
C     FOR THE CLOUD MODELS, THE EXTINCTION COEFFICIENT NORMALIZATION    
C     IS INCORPORATED INTO THE SPECTRAL DATA INSTEAD OF THE COLUMN      
C     DENSITY.  THEREFORE, THE AWCCON INPUTS TO GAMFOG ARE ONE.         
      AWCCON(6)=1.                                                      
      AWCCON(7)=1.                                                      
C                                                                       
C     XNRMWD   WATER DROPLET EXTINCTION COEFFICIENT NORMALIZATION       
C     XNRMIP   ICE PARTICLE EXTINCTION COEFFICIENT NORMALIZATION        
      XNRMWD=CLDX55(ICLD0)                                              
      XNRMIP=CIRX55(ICIR0)                                              
C                                                                       
C     REFWAV    REFERENCE WAVELENGTH (MICRONS)                          
      REFWAV=CWAVLN                                                     
      IF(CWAVLN.LT.VX0(1) .OR. CWAVLN.GT.VX0(NWAVLN-1))REFWAV=.55       
C                                                                       
C     THE REFERENCE VERTICAL CLOUD DEPTH (REFDEP) IS THE                
C     PRODUCT OF THE VERTICAL EXTINCTION (CEXT) [KM-1]                  
C     AND THE CLOUD THICKNESS (CTHICK) [KM].                            
C                                                                       
C     REFDEP    VERTICAL CLOUD DEPTH AT REFWAV                          
      REFDEP=0.                                                         
      IF(CEXT.GT.0.)THEN                                                
          REFDEP=CEXT*CTHICK                                            
C                                                                       
C         ANNOUNCE CLOUD SPECTRAL DATA SCALING                          
Calley        WRITE(IPR,'(/2A,/A,3(F9.4,A))')' CLOUD SPECTRAL DATA IS', 
          IF (IPR .GT. 0) WRITE(IPR,                                    
     +      '(/2A,/A,3(F9.4,A))')' CLOUD SPECTRAL DATA IS',             
     1      ' BEING SCALED TO MAKE THE CLOUD VERTICAL EXTINCTION',      
     2      ' AT',REFWAV,' MICRONS EQUAL TO',CEXT,' KM-1 FOR THE',      
     3      CTHICK,' KM THICK CLOUD.'                                   
      ENDIF                                                             
C                                                                       
C     KEY ON NCRSPC TO DETERMINE IF USER-DEFINED                        
C     SPECTRAL DATA IS TO BE USED.                                      
      IF(NCRSPC.GE.2)THEN                                               
C                                                                       
C         USER-DEFINED SPECTRAL DATA                                    
Calley          CALL CRUSPC(REFWAV,REFDEP,                              
Calley     1      ICLD0,ICIR0,XNRMWD,XNRMIP,CWDCOL,CIPCOL,CTHICK)       
          CALL CRUSPC(REFWAV,REFDEP,ICLD0,ICIR0,XNRMWD,XNRMIP,CWDCOL,   
     +                CIPCOL,CTHICK,WAVLENX,EXTCX,ABSCX,ASYMX)          
          RETURN                                                        
      ENDIF                                                             
      IF(REFDEP.GT.0.)THEN                                              
C                                                                       
C         DETERMINE BRACKETING WAVELENGTHS FOR MODEL DATA               
          IWAVM1=1                                                      
          DO 10 IWAV=2,NWAVLN-2                                         
              IF(REFWAV.LE.VX0(IWAV))GOTO20                             
   10     IWAVM1=IWAV                                                   
   20     CONTINUE                                                      
C                                                                       
C         DETERMINE DEFAULT EXTINCTION COEFFICIENTS AT REFWAV           
          FACTOR=(REFWAV-VX0(IWAVM1))/(VX0(IWAV)-VX0(IWAVM1))           
          EXTWD=CLDSPC(IWAVM1,1,ICLD0)                                  
          EXTWD=XNRMWD*(EXTWD+FACTOR*(CLDSPC(IWAV,1,ICLD0)-EXTWD))      
          EXTIP=CIRSPC(IWAVM1,1,ICIR0)                                  
          EXTIP=XNRMIP*(EXTIP+FACTOR*(CIRSPC(IWAV,1,ICIR0)-EXTIP))      
C                                                                       
C         DETERMINE RATIO OF INPUT TO CURRENT CLOUD DEPTH               
          RATDEP=REFDEP/(EXTWD*CWDCOL+EXTIP*CIPCOL)                     
C                                                                       
C         SCALE EXTINCTION COEFFICIENT NORMALIZATION CONSTANTS          
C         SO THAT INPUT CLOUD EXTINCTION RESULTS                        
          XNRMWD=RATDEP*XNRMWD                                          
          XNRMIP=RATDEP*XNRMIP                                          
      ENDIF                                                             
C                                                                       
C     STORE THE CLOUD PARTICLE SPECTRAL DATA                            
      DO 30 IWAV=1,NWAVLN-1                                             
          EXTC(6,IWAV)=XNRMWD*CLDSPC(IWAV,1,ICLD0)                      
          ABSC(6,IWAV)=XNRMWD*CLDSPC(IWAV,2,ICLD0)                      
          IF(ABS(ASYMWD).LT.1.)THEN                                     
              ASYM(6,IWAV)=ASYMWD                                       
          ELSE                                                          
              ASYM(6,IWAV)=CLDSPC(IWAV,3,ICLD0)                         
          ENDIF                                                         
          EXTC(7,IWAV)=XNRMIP*CIRSPC(IWAV,1,ICIR0)                      
          ABSC(7,IWAV)=XNRMIP*CIRSPC(IWAV,2,ICIR0)                      
          IF(ABS(ASYMIP).LT.1.)THEN                                     
              ASYM(7,IWAV)=ASYMIP                                       
          ELSE                                                          
              ASYM(7,IWAV)=CIRSPC(IWAV,3,ICIR0)                         
          ENDIF                                                         
   30 CONTINUE                                                          
C                                                                       
C     RETURN IF SPECTRAL DATA IS NOT TO BE OUTPUT.                      
      IF(NPR.GE.0)RETURN                                                
C                                                                       
C     WRITE SPECTRAL DATA HEADER                                        
Calley      WRITE(IPR,'(A,/A,//54X,A,34X,A,/38X,A,2X,A,/(3A))')'1',     
      IF (IPR .GT. 0) WRITE(IPR,                                        
     +  '(A,/A,//54X,A,34X,A,/38X,A,2X,A,/(3A))')'1',                   
     1  ' CLOUD SPECTRAL DATA','WATER DROPLETS','ICE PARTICLES',        
     2  '----------------------------------------------',               
     3  '----------------------------------------------',               
     4  ' IWAV   WAVLEN       FREQ   VERT EXT',                         
     5  '  EXT COEF  ABS COEF  SCT COEF     ASYM  SCT ALB',             
     6  '  EXT COEF  ABS COEF  SCT COEF     ASYM  SCT ALB',             
     7  '      (MICRON)     (CM-1)     (KM-1)',                         
     8  '  (        KM-1 M3/GM        )                  ',             
     9  '  (        KM-1 M3/GM        )'                                
C                                                                       
C     WRITE SPECTRAL DATA                                               
Calley      WRITE(IPR,'((I4,F10.4,F11.3,F11.5,2(3F10.5,2F9.5)))')       
      IF (IPR.GT.0)WRITE(IPR,'((I4,F10.4,F11.3,F11.5,2(3F10.5,2F9.5)))')
     1  (IWAV,VX0(IWAV),10000./VX0(IWAV),                               
     2  (EXTC(6,IWAV)*CWDCOL+EXTC(7,IWAV)*CIPCOL)/CTHICK,               
     3  EXTC(6,IWAV),ABSC(6,IWAV),EXTC(6,IWAV)-ABSC(6,IWAV),            
     4  ASYM(6,IWAV),1.-ABSC(6,IWAV)/EXTC(6,IWAV),                      
     5  EXTC(7,IWAV),ABSC(7,IWAV),EXTC(7,IWAV)-ABSC(7,IWAV),            
     6  ASYM(7,IWAV),1.-ABSC(7,IWAV)/EXTC(7,IWAV),IWAV=1,NWAVLN-1)      
Calley      WRITE(IPR,'(/A,//)')' END OF CLOUD PARTICLE SPECTRAL DATA'  
      IF (IPR .GT. 0) WRITE(IPR,                                        
     +                '(/A,//)')' END OF CLOUD PARTICLE SPECTRAL DATA'  
      RETURN                                                            
      END                                                               
Calley      SUBROUTINE CRUPRF(NCRALT)                                   
      SUBROUTINE CRUPRF(NCRALT,ZCLDX,CLDX,CLDICEX,RRX)                  
C                                                                       
C     THIS ROUTINE READS IN USER-DEFINED CLOUD/RAIN MODEL PROFILES.     
C                                                                       
C     LIST PARAMETERS                                                   
      INCLUDE 'PARAM.LST'                                               
C                                                                       
C     DECLARE INPUTS                                                    
C       NCRALT    NUMBER OF CLOUD/RAIN PROFILES BOUNDARY ALTITUDES      
      INTEGER NCRALT                                                    
      REAL ZCLDX(NZCLD),CLDX(NZCLD),CLDICEX(NZCLD),RRX(NZCLD)           
C                                                                       
C     LIST COMMONS                                                      
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH                               
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                           
      REAL ZCLD,CLD,CLDICE,RR                                           
      COMMON/CLDRR/ZCLD(1:NZCLD,0:1),CLD(1:NZCLD,0:5),                  
     1  CLDICE(1:NZCLD,0:1),RR(1:NZCLD,0:5)                             
C                                                                       
C     DECLARE LOCAL VARIABLES                                           
      INTEGER IALTM1,ICRALT                                             
C                                                                       
C     CHECK NUMBER OF BOUNDARY ALTITUDES (NCRALT)                       
      IF(NCRALT.GT.NZCLD)THEN                                           
Calley          WRITE(IPR,'(/2A,I3,A,/8X,A,I3,A,/8X,2A)')' ERROR:  ',   
          IF (IPR .GT. 0) WRITE(IPR,                                    
     +                    '(/2A,I3,A,/8X,A,I3,A,/8X,2A)')' ERROR:  ',   
     1      'THE INPUT NUMBER OF CLOUD/RAIN BOUNDARY ALTITUDES (',      
     2      NCRALT,')',' EXCEEDS PARAMETER "NZCLD" (=',                 
     3      NZCLD,').  INCREASE "NZCLD"',' IN "PARAM.LST"',             
     4      ' AND MAKE NECESSARY CHANGES IN BLOCK DATA "MDTA".'         
          STOP 'TOO MANY CLOUD/RAIN BOUNDARY ALTITUDES'                 
      ENDIF                                                             
C                                                                       
C     WRITE OUT USER-DEFINED CLOUD/RAIN MODEL PROFILES MESSAGE          
Calley      WRITE(IPR,'(/2A,I3,A)')' USER-DEFINED CLOUD/RAIN MODEL',    
      IF (IPR .GT. 0) WRITE(IPR,                                        
     +                '(/2A,I3,A)')' USER-DEFINED CLOUD/RAIN MODEL',    
     1  ' PROFILES WITH',NCRALT,' BOUNDARY ALTITUDES.'                  
C                                                                       
C     READ IN DATA AT FIRST ALTITUDE                                    
      ICRALT=1                                                          
Calley READ(IRD,'(4F10.5)',ERR=20)ZCLD(1,0),CLD(1,0),CLDICE(1,0),RR(1,0)
      ZCLD(1,0) = ZCLDX(1)                                              
      CLD(1,0) = CLDX(1)                                                
      CLDICE(1,0) = CLDICEX(1)                                          
      RR(1,0) = RRX(1)                                                  
C                                                                       
C     THE BASE ALTITUDE (DEFINED RELATIVE TO THE GROUND), THE           
C     DENSITIES AND THE RAIN RATE MUST BE ALL BE NON-NEGATIVE           
      IF(ZCLD(1,0).LT.0.)THEN                                           
Calley          WRITE(IPR,'(/2A,F10.5,A)')' ERROR:  THE CLOUD/RAIN',    
          IF (IPR .GT. 0) WRITE(IPR,                                    
     +                    '(/2A,F10.5,A)')' ERROR:  THE CLOUD/RAIN',    
     1      ' PROFILE BASE ALTITUDE IS',ZCLD(1,0),' KM BELOW GROUND.'   
          STOP 'CLOUD/RAIN PROFILE BASE ALTITUDE IS BELOW THE GROUND'   
      ENDIF                                                             
      IF(CLD(1,0).LT.0. .OR. CLDICE(1,0).LT.0. .OR. RR(1,0).LT.0.)THEN  
Calley          WRITE(IPR,'(/A,(A,F10.5,A))')' ERROR:  NEGATIVE',       
          IF (IPR .GT. 0) WRITE(IPR,                                    
     +                    '(/A,(A,F10.5,A))')' ERROR:  NEGATIVE',       
     1      ' CLOUD/RAIN DENSITY/RATE INPUT AT',ZCLD(1,0),' KM.',       
     2      '         WATER DROPLET DENSITY',CLD(1,0),' GM/M3',         
     3      '         ICE PARTICLE DENSITY ',CLDICE(1,0),' GM/M3',      
     4      '         RAIN RATE            ',RR(1,0),' MM/HR'           
          STOP 'NEGATIVE CLOUD/RAIN DENSITY/RATE INPUT'                 
      ENDIF                                                             
C                                                                       
C     LOOP OVER PROFILE ALTITUDE                                        
      IALTM1=1                                                          
      DO 10 ICRALT=2,NCRALT                                             
C                                                                       
C         READ IN DATA.                                                 
Calley          READ(IRD,'(4F10.5)',ERR=20)                             
Calley     1 ZCLD(ICRALT,0),CLD(ICRALT,0),CLDICE(ICRALT,0),RR(ICRALT,0) 
          ZCLD(ICRALT,0) = ZCLDX(ICRALT)                                
          CLD(ICRALT,0) = CLDX(ICRALT)                                  
          CLDICE(ICRALT,0) = CLDICEX(ICRALT)                            
          RR(ICRALT,0) = RRX(ICRALT)                                    
C                                                                       
C         CHECK FOR INCREASING ALTITUDES.                               
          IF(ZCLD(ICRALT,0).LE.ZCLD(IALTM1,0))THEN                      
Calley              WRITE(IPR,'(/3A,/8X,A,/(8X,I5,F10.5))')' ERROR: ',  
              IF (IPR .GT. 0) WRITE(IPR,                                
     +                        '(/3A,/8X,A,/(8X,I5,F10.5))')' ERROR: ',  
     1          ' THE CLOUD/RAIN PROFILE ALTITUDES MUST BE INPUT IN',   
     2          ' INCREASING ORDER.',' VALUES READ IN THUS FAR ARE:',   
     3          (IALTM1,ZCLD(IALTM1,0),IALTM1=1,ICRALT)                 
              STOP 'CLOUD/RAIN ALTITUDES NOT MONOTONICALLY INCREASING'  
          ENDIF                                                         
C                                                                       
C         CHECK FOR NEGATIVE CLOUD DENSITIES OR RAIN RATES.             
          IF(CLD(ICRALT,0).LT.0. .OR. CLDICE(ICRALT,0).LT.0.            
     1      .OR. RR(ICRALT,0).LT.0.)THEN                                
Calley              WRITE(IPR,'(/2A,F10.5,A,/(8X,A,F10.5,A))')          
              IF (IPR.GT.0) WRITE(IPR,'(/2A,F10.5,A,/(8X,A,F10.5,A))')  
     1          ' ERROR:  NEGATIVE CLOUD/RAIN DENSITY',                 
     2          '/RATE INPUT AT',ZCLD(ICRALT,0),' KM.',                 
     3          ' WATER DROPLET DENSITY',CLD(ICRALT,0),' GM/M3',        
     4          ' ICE PARTICLE DENSITY ',CLDICE(ICRALT,0),' GM/M3',     
     5          ' RAIN RATE            ',RR(ICRALT,0),' MM/HR'          
              STOP 'NEGATIVE CLOUD/RAIN DENSITY/RATE INPUT'             
          ENDIF                                                         
   10 IALTM1=ICRALT                                                     
C                                                                       
C     RETURN TO CRPROF                                                  
      RETURN                                                            
C                                                                       
C     ERROR READING CLOUD/RAIN DATA                                     
   20 CONTINUE                                                          
Calley      WRITE(IPR,'(/2A,I3)')' ERROR:  UNABLE TO READ',             
      IF (IPR .GT. 0) WRITE(IPR,'(/2A,I3)')' ERROR:  UNABLE TO READ',   
     1  ' CLOUD/RAIN PROFILE DATA FOR LAYER',ICRALT                     
      STOP 'ERROR READING CLOUD/RAIN PROFILE DATA'                      
      END                                                               
Calley      SUBROUTINE CRUSPC(REFWAV,REFDEP,                            
Calley     1  ICLD0,ICIR0,XNRMWD,XNRMIP,CWDCOL,CIPCOL,CTHICK)           
      SUBROUTINE CRUSPC(REFWAV,REFDEP,ICLD0,ICIR0,XNRMWD,XNRMIP,CWDCOL, 
     +                  CIPCOL,CTHICK,WAVLENX,EXTCX,ABSCX,ASYMX)        
C                                                                       
C     THIS ROUTINE DEFINES USER-DEFINED CLOUD SPECTRAL DATA.            
C     EXTC(6,IWAV)   WATER DROPLET EXTINCTION COEFS [KM-1 M3/GM]        
C     ABSC(6,IWAV)   WATER DROPLET ABSORPTION COEFS [KM-1 M3/GM]        
C     ASYM(6,IWAV)   WATER DROPLET HENYEY-GREENSTEIN ASYMMETRY FACTORS  
C     EXTC(7,IWAV)   ICE PARTICLE EXTINCTION COEFS [KM-1 M3/GM]         
C     ABSC(7,IWAV)   ICE PARTICLE ABSORPTION COEFS [KM-1 M3/GM]         
C     ASYM(7,IWAV)   ICE PARTICLE HENYEY-GREENSTEIN ASYMMETRY FACTORS   
C                                                                       
C     DECLARE INPUTS                                                    
C     REFWAV   REFERENCE WAVELENGTH [MICRONS]                           
C     REFDEP   REFERENCE VERTICAL OPTICAL DEPTH AT REFWAV               
C     ICLD0    INDEX OF CLOUD WATER DROPLET MODEL                       
C     ICIR0    INDEX OF CLOUD ICE PARTICLE MODEL                        
C     XNRMWD   DEFAULT WATER DROPLET MODEL EXTINCTION                   
C              COEFFICIENT AT 0.55 MICRONS [KM-1 M3/GM]                 
C     XNRMIP   DEFAULT ICE PARTICLE MODEL EXTINCTION                    
C              COEFFICIENT AT 0.55 MICRONS [KM-1 M3/GM]                 
C     CWDCOL   CLOUD WATER DROPLET VERTICAL COLUMN DENSITY [KM GM/M3]   
C     CIPCOL   CLOUD ICE PARTICLE VERTICAL COLUMN DENSITY [KM GM/M3]    
C     CTHICK   CLOUD VERTICAL THICKNESS [KM]                            
      INTEGER ICLD0,ICIR0                                               
      REAL REFWAV,REFDEP,XNRMWD,XNRMIP,CWDCOL,CIPCOL,CTHICK             
C                                                                       
C     LIST PARAMETERS                                                   
      INTEGER NCLDS,NCIRS                                               
      PARAMETER(NCLDS=5,NCIRS=2)                                        
      INCLUDE 'PARAM.LST'                                               
C                                                                       
      REAL WAVLENX(NWAVLN),EXTCX(NAER,NWAVLN),ABSCX(NAER,NWAVLN)        
      REAL ASYMX(NAER,NWAVLN)                                           
C                                                                       
C     LIST COMMONS                                                      
      INTEGER KPOINT                                                    
      REAL WAVLEN,EXTC,ABSC,ASYM,AWCCON,TX,W,RELHUM,PATM,TBBY,WPATH     
      COMMON/BASE/WAVLEN(MXWVLN),EXTC(NAER,MXWVLN),ABSC(NAER,MXWVLN),   
     1  ASYM(NAER,MXWVLN),AWCCON(NAER),KPOINT(NSPC),TX(KMAX),W(KMAX),   
     2  RELHUM(LAYDIM),PATM(LAYTHR),TBBY(LAYTHR),WPATH(LAYTHR,KMAX)     
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH                               
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                           
      REAL VX0,DUMDAT,CLDSPC                                            
      COMMON/EXTD/VX0(NWAVLN),DUMDAT(NWAVLN,66),CLDSPC(NWAVLN,3,NCLDS)  
      REAL CIRSPC                                                       
      COMMON/CIRR/CIRSPC(NWAVLN,3,NCIRS)                                
      INTEGER NCRALT,NCRSPC                                             
      REAL CTHIK,CALT,CEXT,CWAVLN,CCOLWD,CCOLIP,CHUMID,ASYMWD,ASYMIP    
      COMMON/CARD2A/CTHIK,CALT,CEXT,NCRALT,NCRSPC,                      
     1  CWAVLN,CCOLWD,CCOLIP,CHUMID,ASYMWD,ASYMIP                       
C                                                                       
C     LIST LOCAL VARIABLES AND ARRAYS                                   
      INTEGER NWAVM1,I0LO,I0HI,I,N,IWAV,IWAVM1                          
      REAL WAVOLD,FACTOR,X,EXTWD,EXTIP,RATDEP                           
C                                                                       
C     CHECK THAT NCRSPC IS NOT TOO LARGE                                
      IF(NCRSPC.GT.MXWVLN)THEN                                          
Calley     WRITE(IPR,'(/2A,I3,/14X,A,I3,A)')' FATAL ERROR:  THE INPUT', 
          IF (IPR .GT. 0) WRITE(IPR,                                    
     +               '(/2A,I3,/14X,A,I3,A)')' FATAL ERROR:  THE INPUT', 
     1      ' NUMBER OF CLOUD SPECTRAL DATA POINTS (NCRSPC =',NCRSPC,   
     2      ' EXCEEDS THE MAXIMUM NUMBER (PARAMETER MXWVLN =',MXWVLN,   
     3      ' IN PARAMETER.LST).'                                       
          STOP 'INPUT NUMBER OF CLOUD SPECTRAL DATA POINTS IS TOO LARGE'
      ENDIF                                                             
C                                                                       
C     ANNOUNCE READING OF CLOUD SPECTRAL DATA                           
Calley    WRITE(IPR,'(/A,I3,A)')' USER-DEFINED CLOUD SPECTRAL DATA AT', 
      IF (IPR .GT. 0) WRITE(IPR,                                        
     +              '(/A,I3,A)')' USER-DEFINED CLOUD SPECTRAL DATA AT', 
     1  NCRSPC,' SPECTRAL POINTS.'                                      
C                                                                       
C     LOOP OVER SPECTRAL DATA                                           
      NWAVM1=NWAVLN-1                                                   
      I0LO=1                                                            
      WAVOLD=-.1                                                        
      DO 30 I=1,NCRSPC                                                  
C                                                                       
C         READ SPECTRAL DATA                                            
Calley          READ(IRD,'(7F10.5)',ERR=70)WAVLEN(I),                   
Calley     1EXTC(6,I),ABSC(6,I),ASYM(6,I),EXTC(7,I),ABSC(7,I),ASYM(7,I) 
          WAVLEN(I) = WAVLENX(I)                                        
          EXTC(6,I) = EXTCX(6,I)                                        
          ABSC(6,I) = ABSCX(6,I)                                        
          ASYM(6,I) = ASYMX(6,I)                                        
          EXTC(7,I) = EXTCX(7,I)                                        
          ABSC(7,I) = ABSCX(7,I)                                        
          ASYM(7,I) = ASYMX(7,I)                                        
C                                                                       
C         CHECK WAVELENGTH                                              
          IF(WAVLEN(I).LE.WAVOLD)THEN                                   
Calley              WRITE(IPR,'(/3A,/14X,2A,/(14X,I6,F10.6))')' FATAL', 
              IF (IPR .GT. 0) WRITE(IPR,                                
     +                        '(/3A,/14X,2A,/(14X,I6,F10.6))')' FATAL', 
     1          ' ERROR:  CLOUD SPECTRAL DATA MUST BE READ IN',         
     2          ' INCREASING WAVELENGTH ORDER',' THE WAVELENGTHS',      
     3          ' ENCOUNTERED THUS FAR ARE:',(N,WAVLEN(N),N=1,I)        
              STOP 'NON-INCREASING WAVELENGTH IN CLOUD SPECTRAL TABLE'  
          ENDIF                                                         
          WAVOLD=WAVLEN(I)                                              
C                                                                       
C         SET UP INTERPOLATION                                          
          IF(WAVLEN(I).LT.VX0(1))THEN                                   
              I0HI=1                                                    
              FACTOR=0.                                                 
          ELSE                                                          
              DO 10 I0HI=I0LO+1,NWAVM1                                  
                  IF(WAVLEN(I).LE.VX0(I0HI))THEN                        
                      FACTOR=(WAVLEN(I)-VX0(I0LO))/(VX0(I0HI)-VX0(I0LO))
                      GOTO20                                            
                  ENDIF                                                 
   10         I0LO=I0HI                                                 
              I0HI=NWAVM1                                               
              FACTOR=0.                                                 
          ENDIF                                                         
   20     CONTINUE                                                      
C                                                                       
C         CHECK WATER DROPLET SPECTRAL DATA                             
C                                                                       
C         IF THE INPUT SPECTRAL EXTINCTION COEFFICIENT IS NEGATIVE, IT  
C         IS REPLACED BY THE WAVELENGTH-INTERPOLATED CLOUD MODEL VALUE. 
C         IF THE INPUT SPECTRAL ABSORPTION COEFFICIENT IS LESS THAN -1. 
C         OR IF IT EXCEEDS THE EXTINCTION COEFFICIENT, IT IS REPLACED   
C         BY THE VALUE WHICH YIELDS THE CLOUD MODEL SINGLE SCATTERING   
C         ALBEDO.  IF THE INPUT SPECTRAL ABSORPTION COEFFICIENT IS      
C         NEGATIVE BUT NOT LESS THAN -1., THAN THE INPUT VALUE IS TAKEN 
C         TO BE THE SINGLE SCATTERING ALBEDO MINUS ONE, -(1-OMEGA).     
          IF(EXTC(6,I).LT.0.)THEN                                       
              EXTC(6,I)=XNRMWD*(CLDSPC(I0LO,1,ICLD0)                    
     1          +FACTOR*(CLDSPC(I0HI,1,ICLD0)-CLDSPC(I0LO,1,ICLD0)))    
              IF(ABSC(6,I).LT.-1. .OR. ABSC(6,I).GT.EXTC(6,I))THEN      
                  ABSC(6,I)=XNRMWD*(CLDSPC(I0LO,2,ICLD0)                
     1              +FACTOR*(CLDSPC(I0HI,2,ICLD0)-CLDSPC(I0LO,2,ICLD0)))
              ELSEIF(ABSC(6,I).LT.0.)THEN                               
                  ABSC(6,I)=-ABSC(6,I)*EXTC(6,I)                        
              ENDIF                                                     
          ELSEIF(ABSC(6,I).LT.-1. .OR. ABSC(6,I).GT.EXTC(6,I))THEN      
              X=CLDSPC(I0LO,1,ICLD0)                                    
     1          +FACTOR*(CLDSPC(I0HI,1,ICLD0)-CLDSPC(I0LO,1,ICLD0))     
              ABSC(6,I)=0.                                              
              IF(X.GT.0.)ABSC(6,I)=EXTC(6,I)*(CLDSPC(I0LO,2,ICLD0)      
     1          +FACTOR*(CLDSPC(I0HI,2,ICLD0)-CLDSPC(I0LO,2,ICLD0)))/X  
          ELSEIF(ABSC(6,I).LT.0.)THEN                                   
              ABSC(6,I)=-ABSC(6,I)*EXTC(6,I)                            
          ENDIF                                                         
C                                                                       
C         IF CARD2A INPUT IS AN ACCEPTABLE VALUE (-1 < ASYMWD < 1) FOR  
C         THE WATER DROPLET HENYEY-GREENSTEIN PHASE FUNCTION ASYMMETRY  
C         FACTOR, THE CONSTANT VALUE IS USED AT ALL WAVELENGTHS.        
C         IF THE ASYMWD IS OUT OF RANGE, THE USER-DEFINED SPECTRAL      
C         ASYMMETRY FACTOR IS USED UNLESS IT IS ALSO OUT OF RANGE.      
C         IF BOTH ASYMMETRY FACTOR INPUTS ARE OUT OF RANGE, THE         
C         WAVELENGTH-INTERPOLATED CLOUD MODEL VALUE IS USED.            
          IF(ABS(ASYMWD).LT.1.)THEN                                     
              ASYM(6,I)=ASYMWD                                          
          ELSEIF(ABS(ASYM(6,I)).GE.1.)THEN                              
              ASYM(6,I)=CLDSPC(I0LO,3,ICLD0)                            
     1          +FACTOR*(CLDSPC(I0HI,3,ICLD0)-CLDSPC(I0LO,3,ICLD0))     
          ENDIF                                                         
C                                                                       
C         CHECK ICE PARTICLE SPECTRAL DATA                              
C                                                                       
C         IF THE INPUT SPECTRAL EXTINCTION COEFFICIENT IS NEGATIVE, IT  
C         IS REPLACED BY THE WAVELENGTH-INTERPOLATED CIRRUS MODEL VALUE.
C         IF THE INPUT SPECTRAL ABSORPTION COEFFICIENT IS NEGATIVE OR   
C         IF IT EXCEEDS THE EXTINCTION COEFFICIENT, IT IS REPLACED BY   
C         THE VALUE WHICH YIELDS THE CIRRUS MODEL SINGLE SCATTERING     
C         ALBEDO.  IF THE INPUT SPECTRAL ABSORPTION COEFFICIENT IS      
C         NEGATIVE BUT NOT LESS THAN -1., THAN THE INPUT VALUE IS TAKEN 
C         TO BE THE SINGLE SCATTERING ALBEDO MINUS ONE, -(1-OMEGA).     
          IF(EXTC(7,I).LT.0.)THEN                                       
              EXTC(7,I)=XNRMIP*(CIRSPC(I0LO,1,ICIR0)                    
     1          +FACTOR*(CIRSPC(I0HI,1,ICIR0)-CIRSPC(I0LO,1,ICIR0)))    
              IF(ABSC(7,I).LT.-1. .OR. ABSC(7,I).GT.EXTC(7,I))THEN      
                  ABSC(7,I)=XNRMIP*(CIRSPC(I0LO,2,ICIR0)                
     1              +FACTOR*(CIRSPC(I0HI,2,ICIR0)-CIRSPC(I0LO,2,ICIR0)))
              ELSEIF(ABSC(7,I).LT.0.)THEN                               
                  ABSC(7,I)=-ABSC(7,I)*EXTC(7,I)                        
              ENDIF                                                     
          ELSEIF(ABSC(7,I).LT.-1. .OR. ABSC(7,I).GT.EXTC(7,I))THEN      
              X=CIRSPC(I0LO,1,ICIR0)                                    
     1          +FACTOR*(CIRSPC(I0HI,1,ICIR0)-CIRSPC(I0LO,1,ICIR0))     
              ABSC(7,I)=0.                                              
              IF(X.GT.0.)ABSC(7,I)=EXTC(7,I)*(CIRSPC(I0LO,2,ICIR0)      
     1          +FACTOR*(CIRSPC(I0HI,2,ICIR0)-CIRSPC(I0LO,2,ICIR0)))/X  
          ELSEIF(ABSC(7,I).LT.0.)THEN                                   
              ABSC(7,I)=-ABSC(7,I)*EXTC(7,I)                            
          ENDIF                                                         
C                                                                       
C         IF CARD2A INPUT IS AN ACCEPTABLE VALUE (-1 < ASYMIP < 1) FOR  
C         THE ICE PARTICLE HENYEY-GREENSTEIN PHASE FUNCTION ASYMMETRY   
C         FACTOR, THE CONSTANT VALUE IS USED AT ALL WAVELENGTHS.        
C         IF THE ASYMIP IS OUT OF RANGE, THE USER-DEFINED SPECTRAL      
C         ASYMMETRY FACTOR IS USED UNLESS IT IS ALSO OUT OF RANGE.      
C         IF BOTH ASYMMETRY FACTOR INPUTS ARE OUT OF RANGE, THE         
C         WAVELENGTH-INTERPOLATED CIRRUS MODEL VALUE IS USED.           
          IF(ABS(ASYMIP).LT.1.)THEN                                     
              ASYM(7,I)=ASYMIP                                          
          ELSEIF(ABS(ASYM(7,I)).GE.1.)THEN                              
              ASYM(7,I)=CIRSPC(I0LO,3,ICIR0)                            
     1          +FACTOR*(CIRSPC(I0HI,3,ICIR0)-CIRSPC(I0LO,3,ICIR0))     
          ENDIF                                                         
   30 CONTINUE                                                          
C                                                                       
C     RENORMALIZE SPECTRAL DATA IF REFERENCE OPTICAL DEPTH WAS INPUT    
      IF(REFDEP.GT.0.)THEN                                              
C                                                                       
C         DETERMINE BRACKETING WAVELENGTHS FOR MODEL DATA               
          IF(REFWAV.LT.WAVLEN(1) .OR. REFWAV.GT.WAVLEN(NCRSPC))THEN     
Calley              WRITE(IPR,'(/A,F10.6,A,/14X,2A,/14X,A,2(F10.6,A))') 
              IF (IPR .GT. 0) WRITE(IPR,                                
     +                        '(/A,F10.6,A,/14X,2A,/14X,A,2(F10.6,A))') 
     1          ' FATAL ERROR:  THE WAVELENGTH (',REFWAV,               
     2          ' MICRONS) USED TO DEFINE THE CLOUD',                   
     3          ' VERTICAL OPTICAL DEPTH IS OUTSIDE THE RANGE',         
     4          ' OF THE USER-DEFINED',' CLOUD SPECTRAL DATA (',        
     5          WAVLEN(1),' TO',WAVLEN(NCRSPC),' MICRONS).'             
              STOP 'INPUT SPECTRAL CLOUD DEPTH OUTSIDE SPECTRAL RANGE'  
          ENDIF                                                         
          IWAVM1=1                                                      
          DO 40 IWAV=2,NCRSPC-1                                         
              IF(REFWAV.LE.WAVLEN(IWAV))GOTO50                          
   40     IWAVM1=IWAV                                                   
          IWAV=NCRSPC                                                   
   50     CONTINUE                                                      
C                                                                       
C         DETERMINE DEFAULT EXTINCTION COEFFICIENTS AT REFWAV           
          FACTOR=(REFWAV-WAVLEN(IWAVM1))/(WAVLEN(IWAV)-WAVLEN(IWAVM1))  
          EXTWD=EXTC(6,IWAVM1)+FACTOR*(EXTC(6,IWAV)-EXTC(6,IWAVM1))     
          EXTIP=EXTC(7,IWAVM1)+FACTOR*(EXTC(7,IWAV)-EXTC(7,IWAVM1))     
C                                                                       
C         DETERMINE RATIO OF INPUT TO CURRENT CLOUD DEPTH               
          RATDEP=REFDEP/(EXTWD*CWDCOL+EXTIP*CIPCOL)                     
C                                                                       
C         SCALE THE CLOUD PARTICLE SPECTRAL DATA                        
          DO 60 IWAV=1,NCRSPC                                           
              EXTC(6,IWAV)=RATDEP*EXTC(6,IWAV)                          
              ABSC(6,IWAV)=RATDEP*ABSC(6,IWAV)                          
              EXTC(7,IWAV)=RATDEP*EXTC(7,IWAV)                          
              ABSC(7,IWAV)=RATDEP*ABSC(7,IWAV)                          
   60     CONTINUE                                                      
      ENDIF                                                             
C                                                                       
C     RETURN TO CRUSPC IF SPECTRAL DATA IS NOT TO BE OUTPUT.            
      IF(NPR.GE.0)RETURN                                                
C                                                                       
C     WRITE SPECTRAL DATA HEADER                                        
Calley      WRITE(IPR,'(A,/A,//54X,A,34X,A,/38X,A,2X,A,/(3A))')'1',     
      IF (IPR .GT. 0) WRITE(IPR,                                        
     +                '(A,/A,//54X,A,34X,A,/38X,A,2X,A,/(3A))')'1',     
     1  ' CLOUD SPECTRAL DATA','WATER DROPLETS','ICE PARTICLES',        
     2  '----------------------------------------------',               
     3  '----------------------------------------------',               
     4  ' IWAV   WAVLEN       FREQ   VERT EXT',                         
     5  '  EXT COEF  ABS COEF  SCT COEF     ASYM  SCT ALB',             
     6  '  EXT COEF  ABS COEF  SCT COEF     ASYM  SCT ALB',             
     7  '      (MICRON)     (CM-1)     (KM-1)',                         
     8  '  (        KM-1 M3/GM        )                  ',             
     9  '  (        KM-1 M3/GM        )'                                
C                                                                       
C     WRITE SPECTRAL DATA                                               
Calley      WRITE(IPR,'((I4,F10.4,F11.3,F11.5,2(3F10.5,2F9.5)))')       
      IF (IPR .GT. 0) WRITE(IPR,                                        
     +                '((I4,F10.4,F11.3,F11.5,2(3F10.5,2F9.5)))')       
     1  (IWAV,WAVLEN(IWAV),10000./WAVLEN(IWAV),                         
     2  (EXTC(6,IWAV)*CWDCOL+EXTC(7,IWAV)*CIPCOL)/CTHICK,               
     3  EXTC(6,IWAV),ABSC(6,IWAV),EXTC(6,IWAV)-ABSC(6,IWAV),            
     4  ASYM(6,IWAV),1.-ABSC(6,IWAV)/EXTC(6,IWAV),                      
     5  EXTC(7,IWAV),ABSC(7,IWAV),EXTC(7,IWAV)-ABSC(7,IWAV),            
     6  ASYM(7,IWAV),1.-ABSC(7,IWAV)/EXTC(7,IWAV),IWAV=1,NCRSPC)        
Calley      WRITE(IPR,'(/A,//)')' END OF CLOUD PARTICLE SPECTRAL DATA'  
      IF (IPR .GT. 0) WRITE(IPR,                                        
     +                '(/A,//)')' END OF CLOUD PARTICLE SPECTRAL DATA'  
C                                                                       
C     RETURN TO ROUTINE CRSPEC                                          
      RETURN                                                            
C                                                                       
C     FATAL ERROR READING CLOUD SPECTRAL DATA                           
   70 CONTINUE                                                          
Calley      WRITE(IPR,'(/A,I3,A)')' FATAL ERROR:  UNABLE TO READ LINE', 
      IF (IPR .GT. 0) WRITE(IPR,                                        
     +                '(/A,I3,A)')' FATAL ERROR:  UNABLE TO READ LINE', 
     1  I,' OF CLOUD SPECTRAL DATA.'                                    
Calley      IF(I.GT.1)WRITE(IPR,'(/A,I3,A,/(5X,7F10.6))')               
      IF(I.GT.1 .AND. IPR.GT.0) WRITE(IPR,'(/A,I3,A,/(5X,7F10.6))')     
     1  ' THE FIRST',I-1,' LINES OF DATA ARE:',(WAVLEN(N),EXTC(6,N),    
     2  ABSC(6,N),ASYM(6,N),EXTC(7,N),ABSC(7,N),ASYM(7,N),N=1,I-1)      
      STOP 'PROBLEM READING CLOUD SPECTRAL DATA'                        
      END                                                               
      FUNCTION   CXDTA(V,IWL,IWH,CP,IND)                                
C                                                                       
C     THIS FUNCTION IS A BIT DIFFERENT FROM AND REPLACES                
C     THE OLD ROUTINE, A SUBROUTINE, CXDTA                              
C                                                                       
C     THIS SUBROUTINE FINDS THE C' FOR THE WAVENUMBER V.                
C     INPUT:         V --- WAVENUMBER                                   
C            (IWL,IWH) --- WAVENUMBER PAIR SPECIFIES THE ABSORPTION     
C                          REGION. BOTH ARE ARRAYS AND TERMINATED       
C                          WITH THE VALUE -999                          
C                   CP --- ARRAY CONTAINS THE C'S                       
C     I/O:         IND --- INDICATOR INDICATES THE ABSORPTION REGION    
C                          WHERE THE WAVENUMBER IS EXPECTED TO BE IN    
C                          OR NEARBY (IT SERVES FOR THE PURPOSE         
C                          TO SPEED UP THE SEARCHING PROCESS)           
      DIMENSION IWL(*),IWH(*),CP(*)                                     
      IV=V                                                              
      CXDTA=-20.0                                                       
      IF (IWL(IND+1) .EQ. -999 .AND. IV .GT. IWH(IND)) RETURN           
      IF (IV .LT. IWL(1)) RETURN                                        
      IC=0                                                              
  100 IF (IV .GE. IWL(IND) .AND. IV .LE. IWH(IND)) GO TO 200            
      IF (IV .GT. IWH(IND) .AND. IV .LT. IWL(IND+1)) RETURN             
      IND=IND+1                                                         
      IF (IWL(IND) .NE. -999) GO TO 100                                 
      IND=IND-1                                                         
      IF (IV .GT. IWH(IND)) RETURN                                      
      IND=1                                                             
      GO TO 100                                                         
  200 IF (IND .EQ. 1) GO TO 400                                         
      INDM1=IND-1                                                       
      DO 300 I=1,INDM1                                                  
        IC=IC+(IWH(I)-IWL(I))/5+1                                       
  300 CONTINUE                                                          
  400 IC=IC+(IV-IWL(IND))/5+1                                           
      CXDTA=CP(IC)                                                      
      RETURN                                                            
      END                                                               
      DOUBLE PRECISION FUNCTION D1MACH(I)                               
                                                                        
C  DOUBLE-PRECISION MACHINE CONSTANTS (SEE R1MACH FOR DOCUMENTATION)    
                                                                        
C  FOR IEEE-ARITHMETIC MACHINES (BINARY STANDARD), ONE OF THE FIRST     
C  TWO SETS OF CONSTANTS BELOW SHOULD BE APPROPRIATE.                   
                                                                        
ccc      INTEGER SMALL(4), LARGE(4), RIGHT(4), DIVER(4), LOG10(4), SC      
      INTEGER SMALL(2), LARGE(2), RIGHT(2), DIVER(2), LOG10(2), SC      
      DOUBLE PRECISION DMACH(5), EPS, EPSNEW, S                         
                                                                        
      EQUIVALENCE (DMACH(1),SMALL(1)), (DMACH(2),LARGE(1)),             
     $            (DMACH(3),RIGHT(1)), (DMACH(4),DIVER(1)),             
     $            (DMACH(5),LOG10(1))                                   
                                                                        
      LOGICAL  PASS1                                                    
      SAVE     PASS1                                                    
      DATA     PASS1/.TRUE./                                            
                                                                        
C IEEE ARITHMETIC MACHINES, SUCH AS THE AT&T 3B SERIES AND              
C MOTOROLA 68000 BASED MACHINES (E.G. SUN 3 AND AT&T PC 7300),          
C IN WHICH THE MOST SIGNIFICANT BYTE IS STORED FIRST.                   
Cj HP, SUN and SIG are big-endian                                       
                                                                        
      DATA (SMALL(N),N=1,2)/1048576,0/, (LARGE(N),N=1,2)/2146435071,-1/,
     $  (RIGHT(N),N=1,2)/1017118720,0/, (DIVER(N),N=1,2)/1018167296,0/, 
     $  (LOG10(N),N=1,2)/1070810131,1352628735/, SC/987/                
                                                                        
C IEEE ARITHMETIC MACHINES AND 8087-BASED MICROS, SUCH AS THE IBM PC    
C AND AT&T 6300, IN WHICH THE LEAST SIGNIFICANT BYTE IS STORED FIRST.   
Cj ie. little-endian                                                    
                                                                        
Cj    DATA (SMALL(N),N=1,2)/0,1048576/, (LARGE(N),N=1,2)/-1,2146435071/,
Cj   $  (RIGHT(N),N=1,2)/0,1017118720/, (DIVER(N),N=1,2)/0,1018167296/, 
Cj   $  (LOG10(N),N=1,2)/1352628735,1070810131/, SC/987/                
                                                                        
C AMDAHL MACHINES.                                                      
                                                                        
C     DATA (SMALL(N),N=1,2)/1048576,0/, (LARGE(N),N=1,2)/2147483647,-1/,
C    $ (RIGHT(N),N=1,2)/856686592,0/, (DIVER(N),N=1,2)/ 873463808,0/,   
C    $ (LOG10(N),N=1,2)/1091781651,1352628735/, SC/987/                 
                                                                        
C BURROUGHS 1700 SYSTEM.                                                
                                                                        
C     DATA (SMALL(N),N=1,2)/ZC00800000,Z000000000/,                     
C    $ (LARGE(N),N=1,2)/ZDFFFFFFFF,ZFFFFFFFFF/,                         
C    $ (RIGHT(N),N=1,2)/ZCC5800000,Z000000000/,                         
C    $ (DIVER(N),N=1,2)/ZCC6800000,Z000000000/,                         
C    $ (LOG10(N),N=1,2)/ZD00E730E7,ZC77800DC0/, SC/987/                 
                                                                        
C BURROUGHS 5700 SYSTEM.                                                
                                                                        
C     DATA (SMALL(N),N=1,2)/O1771000000000000,O0000000000000000/,       
C    $  (LARGE(N),N=1,2)/O0777777777777777,O0007777777777777/,          
C    $  (RIGHT(N),N=1,2)/O1461000000000000,O0000000000000000/,          
C    $  (DIVER(N),N=1,2)/O1451000000000000,O0000000000000000/,          
C    $  (LOG10(N),N=1,2)/O1157163034761674,O0006677466732724/, SC/987/  
                                                                        
C BURROUGHS 6700/7700 SYSTEMS.                                          
                                                                        
C     DATA (SMALL(N),N=1,2)/O1771000000000000,O7770000000000000/,       
C    $  (LARGE(N),N=1,2)/O0777777777777777,O7777777777777777/,          
C    $  (RIGHT(N),N=1,2)/O1461000000000000,O0000000000000000/,          
C    $  (DIVER(N),N=1,2)/O1451000000000000,O0000000000000000/,          
C    $  (LOG10(N),N=1,2)/O1157163034761674,O0006677466732724/, SC/987/  
                                                                        
C FTN4 ON THE CDC 6000/7000 SERIES.                                     
                                                                        
C     DATA                                                              
C    $  (SMALL(N),N=1,2)/00564000000000000000B,00000000000000000000B/,  
C    $  (LARGE(N),N=1,2)/37757777777777777777B,37157777777777777774B/,  
C    $  (RIGHT(N),N=1,2)/15624000000000000000B,00000000000000000000B/,  
C    $  (DIVER(N),N=1,2)/15634000000000000000B,00000000000000000000B/,  
C    $  (LOG10(N),N=1,2)/17164642023241175717B,16367571421742254654B/,  
C    $  SC/987/                                                         
                                                                        
C FTN5 ON THE CDC 6000/7000 SERIES.                                     
                                                                        
C     DATA                                                              
C    $(SMALL(N),N=1,2)/O"00564000000000000000",O"00000000000000000000"/,
C    $(LARGE(N),N=1,2)/O"37757777777777777777",O"37157777777777777774"/,
C    $(RIGHT(N),N=1,2)/O"15624000000000000000",O"00000000000000000000"/,
C    $(DIVER(N),N=1,2)/O"15634000000000000000",O"00000000000000000000"/,
C    $(LOG10(N),N=1,2)/O"17164642023241175717",O"16367571421742254654"/,
C    $ SC/987/                                                          
                                                                        
C CONVEX C-1                                                            
                                                                        
C     DATA (SMALL(N),N=1,2)/'00100000'X,'00000000'X/,                   
C    $  (LARGE(N),N=1,2)/'7FFFFFFF'X,'FFFFFFFF'X/,                      
C    $  (RIGHT(N),N=1,2)/'3CC00000'X,'00000000'X/,                      
C    $  (DIVER(N),N=1,2)/'3CD00000'X,'00000000'X/,                      
C    $  (LOG10(N),N=1,2)/'3FF34413'X,'509F79FF'X/, SC/987/              
                                                                        
C CRAY 1, XMP, 2, AND 3.                                                
                                                                        
C     DATA                                                              
C    $ (SMALL(N),N=1,2)/201354000000000000000B,000000000000000000000B/, 
C    $ (LARGE(N),N=1,2)/577767777777777777777B,000007777777777777776B/, 
C    $ (RIGHT(N),N=1,2)/376434000000000000000B,000000000000000000000B/, 
C    $ (DIVER(N),N=1,2)/376444000000000000000B,000000000000000000000B/, 
C    $ (LOG10(N),N=1,2)/377774642023241175717B,000007571421742254654B/, 
C    $ SC/987/                                                          
                                                                        
C DATA GENERAL ECLIPSE S/200                                            
C NOTE - IT MAY BE APPROPRIATE TO INCLUDE THE FOLLOWING LINE -          
C STATIC DMACH(5)                                                       
                                                                        
C     DATA SMALL/20K,3*0/, LARGE/77777K,3*177777K/,                     
C    $  RIGHT/31420K,3*0/, DIVER/32020K,3*0/,                           
C    $  LOG10/40423K,42023K,50237K,74776K/, SC/987/                     
                                                                        
C HARRIS SLASH 6 AND SLASH 7                                            
                                                                        
C     DATA (SMALL(N),N=1,2)/'20000000,'00000201/,                       
C    $  (LARGE(N),N=1,2)/'37777777,'37777577/,                          
C    $  (RIGHT(N),N=1,2)/'20000000,'00000333/,                          
C    $  (DIVER(N),N=1,2)/'20000000,'00000334/,                          
C    $  (LOG10(N),N=1,2)/'23210115,'10237777/, SC/987/                  
                                                                        
C HONEYWELL DPS 8/70 SERIES.                                            
                                                                        
C     DATA (SMALL(N),N=1,2)/O402400000000,O000000000000/,               
C    $  (LARGE(N),N=1,2)/O376777777777,O777777777777/,                  
C    $  (RIGHT(N),N=1,2)/O604400000000,O000000000000/,                  
C    $  (DIVER(N),N=1,2)/O606400000000,O000000000000/,                  
C    $  (LOG10(N),N=1,2)/O776464202324,O117571775714/, SC/987/          
                                                                        
C IBM 360/370 SERIES, XEROX SIGMA 5/7/9 AND THE SEL SYSTEMS 85/86.      
                                                                        
C     DATA (SMALL(N),N=1,2)/Z00100000,Z00000000/,                       
C    $  (LARGE(N),N=1,2)/Z7FFFFFFF,ZFFFFFFFF/,                          
C    $  (RIGHT(N),N=1,2)/Z33100000,Z00000000/,                          
C    $  (DIVER(N),N=1,2)/Z34100000,Z00000000/,                          
C    $  (LOG10(N),N=1,2)/Z41134413,Z509F79FF/, SC/987/                  
                                                                        
C INTERDATA 8/32 WITH THE UNIX SYSTEM FORTRAN 77 COMPILER.              
C FOR THE INTERDATA FORTRAN VII COMPILER REPLACE                        
C THE Z'S SPECIFYING HEX CONSTANTS WITH Y'S.                            
                                                                        
C     DATA (SMALL(N),N=1,2)/Z'00100000',Z'00000000'/,                   
C    $  (LARGE(N),N=1,2)/Z'7EFFFFFF',Z'FFFFFFFF'/,                      
C    $  (RIGHT(N),N=1,2)/Z'33100000',Z'00000000'/,                      
C    $  (DIVER(N),N=1,2)/Z'34100000',Z'00000000'/,                      
C    $  (LOG10(N),N=1,2)/Z'41134413',Z'509F79FF'/, SC/987/              
                                                                        
C PDP-10 (KA PROCESSOR).                                                
                                                                        
C     DATA (SMALL(N),N=1,2)/"033400000000,"000000000000/,               
C    $  (LARGE(N),N=1,2)/"377777777777,"344777777777/,                  
C    $  (RIGHT(N),N=1,2)/"113400000000,"000000000000/,                  
C    $  (DIVER(N),N=1,2)/"114400000000,"000000000000/,                  
C    $  (LOG10(N),N=1,2)/"177464202324,"144117571776/, SC/987/          
                                                                        
C PDP-10 (KI PROCESSOR).                                                
                                                                        
C     DATA (SMALL(N),N=1,2)/"000400000000,"000000000000/,               
C    $  (LARGE(N),N=1,2)/"377777777777,"377777777777/,                  
C    $  (RIGHT(N),N=1,2)/"103400000000,"000000000000/,                  
C    $  (DIVER(N),N=1,2)/"104400000000,"000000000000/,                  
C    $  (LOG10(N),N=1,2)/"177464202324,"047674776746/, SC/987/          
                                                                        
C PDP-11 FORTRANS SUPPORTING 32-BIT INTEGERS                            
C (EXPRESSED IN INTEGER AND OCTAL).                                     
                                                                        
C     DATA (SMALL(N),N=1,2)/8388608,0/, (LARGE(N),N=1,2)/2147483647,-1/,
C    $  (RIGHT(N),N=1,2)/612368384,0/, (DIVER(N),N=1,2)/620756992,0/,   
C    $  (LOG10(N),N=1,2)/1067065498,-2063872008/, SC/987/               
                                                                        
C     DATA (SMALL(N),N=1,2)/O00040000000,O00000000000/,                 
C    $  (LARGE(N),N=1,2)/O17777777777,O37777777777/,                    
C    $  (RIGHT(N),N=1,2)/O04440000000,O00000000000/,                    
C    $  (DIVER(N),N=1,2)/O04500000000,O00000000000/,                    
C    $  (LOG10(N),N=1,2)/O07746420232,O20476747770/, SC/987/            
                                                                        
C PDP-11 FORTRANS SUPPORTING 16-BIT INTEGERS                            
C (EXPRESSED IN INTEGER AND OCTAL).                                     
                                                                        
C     DATA SMALL/128,3*0/, LARGE/32767,3*-1/, RIGHT/9344,3*0/,          
C    $  DIVER/9472,3*0/, LOG10/16282,8346,-31493,-12296/, SC/987/       
                                                                        
C     DATA SMALL/O000200,3*O000000/, LARGE/O077777,3*O177777/,          
C    $  RIGHT/O022200,3*O000000/, DIVER/O022400,3*O000000/,             
C    $  LOG10/O037632,O020232,O102373,O147770/, SC/987/                 
                                                                        
C PRIME 50 SERIES SYSTEMS WITH 32-BIT INTEGERS AND 64V MODE             
C INSTRUCTIONS, SUPPLIED BY IGOR BRAY.                                  
                                                                        
C     DATA (SMALL(N),N=1,2)/:10000000000,:00000100001/,                 
C    $  (LARGE(N),N=1,2)/:17777777777,:37777677775/,                    
C    $  (RIGHT(N),N=1,2)/:10000000000,:00000000122/,                    
C    $  (DIVER(N),N=1,2)/:10000000000,:00000000123/,                    
C    $  (LOG10(N),N=1,2)/:11504046501,:07674600177/, SC/987/            
                                                                        
C SEQUENT BALANCE 8000                                                  
                                                                        
C     DATA (SMALL(N),N=1,2)/$00000000, $00100000/,                      
C    $  (LARGE(N),N=1,2)/$FFFFFFFF, $7FEFFFFF/,                         
C    $  (RIGHT(N),N=1,2)/$00000000, $3CA00000/,                         
C    $  (DIVER(N),N=1,2)/$00000000, $3CB00000/,                         
C    $  (LOG10(N),N=1,2)/$509F79FF, $3FD34413/, SC/987/                 
                                                                        
C UNIVAC 1100 SERIES.                                                   
                                                                        
C     DATA (SMALL(N),N=1,2)/O000040000000,O000000000000/,               
C    $  (LARGE(N),N=1,2)/O377777777777,O777777777777/,                  
C    $  (RIGHT(N),N=1,2)/O170540000000,O000000000000/,                  
C    $  (DIVER(N),N=1,2)/O170640000000,O000000000000/,                  
C    $  (LOG10(N),N=1,2)/O177746420232,O411757177572/, SC/987/          
                                                                        
C VAX UNIX F77 COMPILER                                                 
                                                                        
C     DATA (SMALL(N),N=1,2)/128,0/, (LARGE(N),N=1,2)/-32769,-1/,        
C    $  (RIGHT(N),N=1,2)/9344,0/, (DIVER(N),N=1,2)/9472,0/,             
C    $  (LOG10(N),N=1,2)/546979738,-805796613/, SC/987/                 
                                                                        
C VAX-11 WITH FORTRAN IV-PLUS COMPILER                                  
                                                                        
C     DATA (SMALL(N),N=1,2)/Z00000080,Z00000000/,                       
C    $  (LARGE(N),N=1,2)/ZFFFF7FFF,ZFFFFFFFF/,                          
C    $  (RIGHT(N),N=1,2)/Z00002480,Z00000000/,                          
C    $  (DIVER(N),N=1,2)/Z00002500,Z00000000/,                          
C    $  (LOG10(N),N=1,2)/Z209A3F9A,ZCFF884FB/, SC/987/                  
                                                                        
C VAX/VMS VERSION 2.2                                                   
                                                                        
C     DATA (SMALL(N),N=1,2)/'80'X,'0'X/,                                
C    $  (LARGE(N),N=1,2)/'FFFF7FFF'X,'FFFFFFFF'X/,                      
C    $  (RIGHT(N),N=1,2)/'2480'X,'0'X/, (DIVER(N),N=1,2)/'2500'X,'0'X/, 
C    $  (LOG10(N),N=1,2)/'209A3F9A'X,'CFF884FB'X/, SC/987/              
c
cjv	These VAX and PC data blocks were added by Jim Chetwyn.
c
c  vax/vms  5.5  april 18 1994
c
c      dMACH(1) = 2.9387358770557188E-39
c      dMACH(2) = 1.7014118346046923E+38
c      dMACH(3) = 1.3877787807814457e-17
c      dMACH(4) = 2.6E-17
c      dMACH(5) = Dlog10(Dmach(1))
c
c  LAHEY for PC         AUG   25 1994
c
c       dMACH(1) = .222507385850720D-307  
c       dMACH(2) = .179769313486   D+309
c       dMACH(3) = .222044604925031D-15
c       dMACH(4) = .111022302462516D-15
c       dMACH(5) = Dlog10(Dmach(1))
c       sc=987
c
cjv ^^^^^^^^^^^^^^




                                                                        
      IF( PASS1 )  THEN                                                 
                                                                        
         PASS1 = .FALSE.                                                
         IF (SC.NE.987)                                                 
     $       CALL ERRMSG( 'D1MACH--NO DATA STATEMENTS ACTIVE',.TRUE.)   
                                                                        
C                        ** CALCULATE MACHINE PRECISION                 
         EPSNEW = 0.01D0                                                
   10    EPS = EPSNEW                                                   
            EPSNEW = EPSNEW / 1.1D0                                     
C                               ** IMPORTANT TO STORE 'S' SINCE MAY BE  
C                               ** KEPT IN HIGHER PRECISION IN REGISTERS
            S = 1.D0 + EPSNEW                                           
            IF( S.GT.1.D0 ) GO TO 10                                    
         IF( EPS/DMACH(4).LT.0.5D0 .OR. EPS/DMACH(4).GT.2.D0 )          
     $       CALL ERRMSG( 'D1MACH--TABULATED PRECISION WRONG',.TRUE.)   
                                                                        
      END IF                                                            
                                                                        
      IF (I.LT.1.OR.I.GT.5)                                             
     $    CALL ERRMSG( 'D1MACH--ARGUMENT OUT OF BOUNDS',.TRUE.)         
      D1MACH = DMACH(I)                                                 
      RETURN                                                            
      END                                                               
      DOUBLE PRECISION FUNCTION DASUM(N,DX,INCX)                        
C                                                                       
C     TAKES THE SUM OF THE ABSOLUTE VALUES.                             
C     JACK DONGARRA, LINPACK, 3/11/78.                                  
C                                                                       
      DOUBLE PRECISION DX(*),DTEMP                                      
      INTEGER I,INCX,M,MP1,N,NINCX                                      
                                                                        
C                                                                       
      DASUM = 0.0D0                                                     
      DTEMP = 0.0D0                                                     
      IF(N.LE.0)RETURN                                                  
      IF(INCX.EQ.1)GO TO 20                                             
C                                                                       
C        CODE FOR INCREMENT NOT EQUAL TO 1                              
C                                                                       
      NINCX = N*INCX                                                    
      DO 10 I = 1,NINCX,INCX                                            
        DTEMP = DTEMP + DABS(DX(I))                                     
   10 CONTINUE                                                          
      DASUM = DTEMP                                                     
      RETURN                                                            
C                                                                       
C        CODE FOR INCREMENT EQUAL TO 1                                  
C                                                                       
C                                                                       
C        CLEAN-UP LOOP                                                  
C                                                                       
   20 M = MOD(N,6)                                                      
                                                                        
                                                                        
                                                                        
                                                                        
      IF( M .EQ. 0 ) GO TO 40                                           
      DO 30 I = 1,M                                                     
                                                                        
                                                                        
        DTEMP = DTEMP + DABS(DX(I))                                     
   30 CONTINUE                                                          
      IF( N .LT. 6 ) GO TO 60                                           
   40 MP1 = M + 1                                                       
      DO 50 I = MP1,N,6                                                 
        DTEMP = DTEMP + DABS(DX(I)) + DABS(DX(I + 1)) + DABS(DX(I + 2)) 
     *  + DABS(DX(I + 3)) + DABS(DX(I + 4)) + DABS(DX(I + 5))           
   50 CONTINUE                                                          
   60 DASUM = DTEMP                                                     
      RETURN                                                            
      END                                                               
      SUBROUTINE DAXPY(N,DA,DX,INCX,DY,INCY)                            
C                                                                       
C     CONSTANT TIMES A VECTOR PLUS A VECTOR.                            
C     USES UNROLLED LOOPS FOR INCREMENTS EQUAL TO ONE.                  
C     JACK DONGARRA, LINPACK, 3/11/78.                                  
C                                                                       
      DOUBLE PRECISION DX(*),DY(*),DA                                   
      INTEGER I,INCX,INCY,M,MP1,N                                       
C                                                                       
      IF(N.LE.0)RETURN                                                  
      IF (DA .EQ. 0.0D0) RETURN                                         
      IF(INCX.EQ.1.AND.INCY.EQ.1)GO TO 20                               
C                                                                       
C        CODE FOR UNEQUAL INCREMENTS OR EQUAL INCREMENTS                
C          NOT EQUAL TO 1                                               
C                                                                       
      IX = 1                                                            
      IY = 1                                                            
      IF(INCX.LT.0)IX = (-N+1)*INCX + 1                                 
      IF(INCY.LT.0)IY = (-N+1)*INCY + 1                                 
      DO 10 I = 1,N                                                     
        DY(IY) = DY(IY) + DA*DX(IX)                                     
        IX = IX + INCX                                                  
        IY = IY + INCY                                                  
   10 CONTINUE                                                          
      RETURN                                                            
C                                                                       
C        CODE FOR BOTH INCREMENTS EQUAL TO 1                            
C                                                                       
C                                                                       
C        CLEAN-UP LOOP                                                  
C                                                                       
   20 M = MOD(N,4)                                                      
      IF( M .EQ. 0 ) GO TO 40                                           
      DO 30 I = 1,M                                                     
        DY(I) = DY(I) + DA*DX(I)                                        
   30 CONTINUE                                                          
      IF( N .LT. 4 ) RETURN                                             
   40 MP1 = M + 1                                                       
      DO 50 I = MP1,N,4                                                 
        DY(I) = DY(I) + DA*DX(I)                                        
        DY(I + 1) = DY(I + 1) + DA*DX(I + 1)                            
        DY(I + 2) = DY(I + 2) + DA*DX(I + 2)                            
        DY(I + 3) = DY(I + 3) + DA*DX(I + 3)                            
   50 CONTINUE                                                          
      RETURN                                                            
      END                                                               
      REAL FUNCTION DBLTX(W,CPRIME,QA)                                  
C                                                                       
C     DOUBLE EXPONENTIAL TRANSMITTANCE ROUTINE.                         
      REAL W,CPRIME,QA,QAWS                                             
C                                                                       
C     NO OPTICAL DEPTH                                                  
      DBLTX=1.                                                          
      IF(W.LT.1.E-20 .OR. CPRIME.LE.-20.)RETURN                         
      QAWS=QA*(ALOG10(W)+CPRIME)                                        
      IF(QAWS.LE.-6.)RETURN                                             
C                                                                       
C     OPTICAL DEPTH OVERFLOW                                            
      DBLTX=0.                                                          
      IF(QAWS.GE.2.)RETURN                                              
C                                                                       
C     STANDARD TRANSMITTANCE                                            
      DBLTX=EXP(-10.**QAWS)                                             
      RETURN                                                            
      END                                                               
      SUBROUTINE DCHDC(A,LDA,P,WORK,JPVT,JOB,INFO)                      
      INTEGER LDA,P,JPVT(*),JOB,INFO                                    
      DOUBLE PRECISION A(LDA,*),WORK(*)                                 
C                                                                       
C     DCHDC COMPUTES THE CHOLESKY DECOMPOSITION OF A POSITIVE DEFINITE  
C     MATRIX.  A PIVOTING OPTION ALLOWS THE USER TO ESTIMATE THE        
C     CONDITION OF A POSITIVE DEFINITE MATRIX OR DETERMINE THE RANK     
C     OF A POSITIVE SEMIDEFINITE MATRIX.                                
C                                                                       
C     ON ENTRY                                                          
C                                                                       
C         A      DOUBLE PRECISION(LDA,P).                               
C                A CONTAINS THE MATRIX WHOSE DECOMPOSITION IS TO        
C                BE COMPUTED.  ONLT THE UPPER HALF OF A NEED BE STORED. 
C                THE LOWER PART OF THE ARRAY A IS NOT REFERENCED.       
C                                                                       
C         LDA    INTEGER.                                               
C                LDA IS THE LEADING DIMENSION OF THE ARRAY A.           
C                                                                       
C         P      INTEGER.                                               
C                P IS THE ORDER OF THE MATRIX.                          
C                                                                       
C         WORK   DOUBLE PRECISION.                                      
C                WORK IS A WORK ARRAY.                                  
C                                                                       
C         JPVT   INTEGER(P).                                            
C                JPVT CONTAINS INTEGERS THAT CONTROL THE SELECTION      
C                OF THE PIVOT ELEMENTS, IF PIVOTING HAS BEEN REQUESTED. 
C                EACH DIAGONAL ELEMENT A(K,K)                           
C                IS PLACED IN ONE OF THREE CLASSES ACCORDING TO THE     
C                VALUE OF JPVT(K).                                      
C                                                                       
C                   IF JPVT(K) .GT. 0, THEN X(K) IS AN INITIAL          
C                                      ELEMENT.                         
C                                                                       
C                   IF JPVT(K) .EQ. 0, THEN X(K) IS A FREE ELEMENT.     
C                                                                       
C                   IF JPVT(K) .LT. 0, THEN X(K) IS A FINAL ELEMENT.    
C                                                                       
C                BEFORE THE DECOMPOSITION IS COMPUTED, INITIAL ELEMENTS 
C                ARE MOVED BY SYMMETRIC ROW AND COLUMN INTERCHANGES TO  
C                THE BEGINNING OF THE ARRAY A AND FINAL                 
C                ELEMENTS TO THE END.  BOTH INITIAL AND FINAL ELEMENTS  
C                ARE FROZEN IN PLACE DURING THE COMPUTATION AND ONLY    
C                FREE ELEMENTS ARE MOVED.  AT THE K-TH STAGE OF THE     
C                REDUCTION, IF A(K,K) IS OCCUPIED BY A FREE ELEMENT     
C                IT IS INTERCHANGED WITH THE LARGEST FREE ELEMENT       
C                A(L,L) WITH L .GE. K.  JPVT IS NOT REFERENCED IF       
C                JOB .EQ. 0.                                            
C                                                                       
C        JOB     INTEGER.                                               
C                JOB IS AN INTEGER THAT INITIATES COLUMN PIVOTING.      
C                IF JOB .EQ. 0, NO PIVOTING IS DONE.                    
C                IF JOB .NE. 0, PIVOTING IS DONE.                       
C                                                                       
C     ON RETURN                                                         
C                                                                       
C         A      A CONTAINS IN ITS UPPER HALF THE CHOLESKY FACTOR       
C                OF THE MATRIX A AS IT HAS BEEN PERMUTED BY PIVOTING.   
C                                                                       
C         JPVT   JPVT(J) CONTAINS THE INDEX OF THE DIAGONAL ELEMENT     
C                OF A THAT WAS MOVED INTO THE J-TH POSITION,            
C                PROVIDED PIVOTING WAS REQUESTED.                       
C                                                                       
C         INFO   CONTAINS THE INDEX OF THE LAST POSITIVE DIAGONAL       
C                ELEMENT OF THE CHOLESKY FACTOR.                        
C                                                                       
C     FOR POSITIVE DEFINITE MATRICES INFO = P IS THE NORMAL RETURN.     
C     FOR PIVOTING WITH POSITIVE SEMIDEFINITE MATRICES INFO WILL        
C     IN GENERAL BE LESS THAN P.  HOWEVER, INFO MAY BE GREATER THAN     
C     THE RANK OF A, SINCE ROUNDING ERROR CAN CAUSE AN OTHERWISE ZERO   
C     ELEMENT TO BE POSITIVE. INDEFINITE SYSTEMS WILL ALWAYS CAUSE      
C     INFO TO BE LESS THAN P.                                           
C                                                                       
C     LINPACK. THIS VERSION DATED 03/19/79 .                            
C     J.J. DONGARRA AND G.W. STEWART, ARGONNE NATIONAL LABORATORY AND   
C     UNIVERSITY OF MARYLAND.                                           
C                                                                       
C                                                                       
C     BLAS DAXPY,DSWAP                                                  
C     FORTRAN DSQRT                                                     
C                                                                       
C     INTERNAL VARIABLES                                                
C                                                                       
      INTEGER PU,PL,PLP1,J,JP,JT,K,KB,KM1,KP1,L,MAXL                    
      DOUBLE PRECISION TEMP                                             
      DOUBLE PRECISION MAXDIA                                           
      LOGICAL SWAPK,NEGK                                                
C                                                                       
      PL = 1                                                            
      PU = 0                                                            
      INFO = P                                                          
      IF (JOB .EQ. 0) GO TO 160                                         
C                                                                       
C        PIVOTING HAS BEEN REQUESTED. REARRANGE THE                     
C        THE ELEMENTS ACCORDING TO JPVT.                                
C                                                                       
         DO 70 K = 1, P                                                 
            SWAPK = JPVT(K) .GT. 0                                      
            NEGK = JPVT(K) .LT. 0                                       
            JPVT(K) = K                                                 
            IF (NEGK) JPVT(K) = -JPVT(K)                                
            IF (.NOT.SWAPK) GO TO 60                                    
               IF (K .EQ. PL) GO TO 50                                  
                  CALL DSWAP(PL-1,A(1,K),1,A(1,PL),1)                   
                  TEMP = A(K,K)                                         
                  A(K,K) = A(PL,PL)                                     
                  A(PL,PL) = TEMP                                       
                  PLP1 = PL + 1                                         
                  IF (P .LT. PLP1) GO TO 40                             
                  DO 30 J = PLP1, P                                     
                     IF (J .GE. K) GO TO 10                             
                        TEMP = A(PL,J)                                  
                        A(PL,J) = A(J,K)                                
                        A(J,K) = TEMP                                   
                     GO TO 20                                           
   10                CONTINUE                                           
                     IF (J .EQ. K) GO TO 20                             
                        TEMP = A(K,J)                                   
                        A(K,J) = A(PL,J)                                
                        A(PL,J) = TEMP                                  
   20                CONTINUE                                           
   30             CONTINUE                                              
   40             CONTINUE                                              
                  JPVT(K) = JPVT(PL)                                    
                  JPVT(PL) = K                                          
   50          CONTINUE                                                 
               PL = PL + 1                                              
   60       CONTINUE                                                    
   70    CONTINUE                                                       
         PU = P                                                         
         IF (P .LT. PL) GO TO 150                                       
         DO 140 KB = PL, P                                              
            K = P - KB + PL                                             
            IF (JPVT(K) .GE. 0) GO TO 130                               
               JPVT(K) = -JPVT(K)                                       
               IF (PU .EQ. K) GO TO 120                                 
                  CALL DSWAP(K-1,A(1,K),1,A(1,PU),1)                    
                  TEMP = A(K,K)                                         
                  A(K,K) = A(PU,PU)                                     
                  A(PU,PU) = TEMP                                       
                  KP1 = K + 1                                           
                  IF (P .LT. KP1) GO TO 110                             
                  DO 100 J = KP1, P                                     
                     IF (J .GE. PU) GO TO 80                            
                        TEMP = A(K,J)                                   
                        A(K,J) = A(J,PU)                                
                        A(J,PU) = TEMP                                  
                     GO TO 90                                           
   80                CONTINUE                                           
                     IF (J .EQ. PU) GO TO 90                            
                        TEMP = A(K,J)                                   
                        A(K,J) = A(PU,J)                                
                        A(PU,J) = TEMP                                  
   90                CONTINUE                                           
  100             CONTINUE                                              
  110             CONTINUE                                              
                  JT = JPVT(K)                                          
                  JPVT(K) = JPVT(PU)                                    
                  JPVT(PU) = JT                                         
  120          CONTINUE                                                 
               PU = PU - 1                                              
  130       CONTINUE                                                    
  140    CONTINUE                                                       
  150    CONTINUE                                                       
  160 CONTINUE                                                          
      DO 270 K = 1, P                                                   
C                                                                       
C        REDUCTION LOOP.                                                
C                                                                       
         MAXDIA = A(K,K)                                                
         KP1 = K + 1                                                    
         MAXL = K                                                       
C                                                                       
C        DETERMINE THE PIVOT ELEMENT.                                   
C                                                                       
         IF (K .LT. PL .OR. K .GE. PU) GO TO 190                        
            DO 180 L = KP1, PU                                          
               IF (A(L,L) .LE. MAXDIA) GO TO 170                        
                  MAXDIA = A(L,L)                                       
                  MAXL = L                                              
  170          CONTINUE                                                 
  180       CONTINUE                                                    
  190    CONTINUE                                                       
C                                                                       
C        QUIT IF THE PIVOT ELEMENT IS NOT POSITIVE.                     
C                                                                       
         IF (MAXDIA .GT. 0.0D0) GO TO 200                               
            INFO = K - 1                                                
C     ......EXIT                                                        
            GO TO 280                                                   
  200    CONTINUE                                                       
         IF (K .EQ. MAXL) GO TO 210                                     
C                                                                       
C           START THE PIVOTING AND UPDATE JPVT.                         
C                                                                       
            KM1 = K - 1                                                 
            CALL DSWAP(KM1,A(1,K),1,A(1,MAXL),1)                        
            A(MAXL,MAXL) = A(K,K)                                       
            A(K,K) = MAXDIA                                             
            JP = JPVT(MAXL)                                             
            JPVT(MAXL) = JPVT(K)                                        
            JPVT(K) = JP                                                
  210    CONTINUE                                                       
C                                                                       
C        REDUCTION STEP. PIVOTING IS CONTAINED ACROSS THE ROWS.         
C                                                                       
         WORK(K) = DSQRT(A(K,K))                                        
         A(K,K) = WORK(K)                                               
         IF (P .LT. KP1) GO TO 260                                      
         DO 250 J = KP1, P                                              
            IF (K .EQ. MAXL) GO TO 240                                  
               IF (J .GE. MAXL) GO TO 220                               
                  TEMP = A(K,J)                                         
                  A(K,J) = A(J,MAXL)                                    
                  A(J,MAXL) = TEMP                                      
               GO TO 230                                                
  220          CONTINUE                                                 
               IF (J .EQ. MAXL) GO TO 230                               
                  TEMP = A(K,J)                                         
                  A(K,J) = A(MAXL,J)                                    
                  A(MAXL,J) = TEMP                                      
  230          CONTINUE                                                 
  240       CONTINUE                                                    
            A(K,J) = A(K,J)/WORK(K)                                     
            WORK(J) = A(K,J)                                            
            TEMP = -A(K,J)                                              
            CALL DAXPY(J-K,TEMP,WORK(KP1),1,A(KP1,J),1)                 
  250    CONTINUE                                                       
  260    CONTINUE                                                       
  270 CONTINUE                                                          
  280 CONTINUE                                                          
      RETURN                                                            
      END                                                               
      DOUBLE PRECISION FUNCTION DDOT(N,DX,INCX,DY,INCY)                 
C                                                                       
C     FORMS THE DOT PRODUCT OF TWO VECTORS.                             
C     USES UNROLLED LOOPS FOR INCREMENTS EQUAL TO ONE.                  
C     JACK DONGARRA, LINPACK, 3/11/78.                                  
C                                                                       
      DOUBLE PRECISION DX(*),DY(*),DTEMP                                
      INTEGER I,INCX,INCY,IX,IY,M,MP1,N                                 
C                                                                       
      DDOT = 0.0D0                                                      
      DTEMP = 0.0D0                                                     
      IF(N.LE.0)RETURN                                                  
      IF(INCX.EQ.1.AND.INCY.EQ.1)GO TO 20                               
C                                                                       
C        CODE FOR UNEQUAL INCREMENTS OR EQUAL INCREMENTS                
C          NOT EQUAL TO 1                                               
C                                                                       
      IX = 1                                                            
      IY = 1                                                            
      IF(INCX.LT.0)IX = (-N+1)*INCX + 1                                 
      IF(INCY.LT.0)IY = (-N+1)*INCY + 1                                 
      DO 10 I = 1,N                                                     
        DTEMP = DTEMP + DX(IX)*DY(IY)                                   
        IX = IX + INCX                                                  
        IY = IY + INCY                                                  
   10 CONTINUE                                                          
      DDOT = DTEMP                                                      
      RETURN                                                            
C                                                                       
C        CODE FOR BOTH INCREMENTS EQUAL TO 1                            
C                                                                       
C                                                                       
C        CLEAN-UP LOOP                                                  
C                                                                       
   20 M = MOD(N,5)                                                      
      IF( M .EQ. 0 ) GO TO 40                                           
      DO 30 I = 1,M                                                     
        DTEMP = DTEMP + DX(I)*DY(I)                                     
   30 CONTINUE                                                          
      IF( N .LT. 5 ) GO TO 60                                           
   40 MP1 = M + 1                                                       
      DO 50 I = MP1,N,5                                                 
        DTEMP = DTEMP + DX(I)*DY(I) + DX(I + 1)*DY(I + 1) +             
     *   DX(I + 2)*DY(I + 2) + DX(I + 3)*DY(I + 3) + DX(I + 4)*DY(I + 4)
   50 CONTINUE                                                          
   60 DDOT = DTEMP                                                      
      RETURN                                                            
      END                                                               
      SUBROUTINE DEBYE(WAVL,TC,KEY,RE,AI)                               
CCC                                                                     
CCC    CALCULATES WAVENUMBER DEPENDENCE OF DIELECTRIC CONSTANT          
CCC    OF WATER                                                         
C                                                                       
C     LIST COMMONS:                                                     
C       PI       THE CONSTANT PI                                        
C       DEG      NUMBER OF DEGREES IN ONE RADIAN.                       
C       BIGNUM   MAXIMUM SINGLE PRECISION NUMBER.                       
C       BIGEXP   MAXIMUM EXPONENTIAL ARGUMENT WITHOUT OVERFLOW.         
      REAL PI,DEG,BIGNUM,BIGEXP                                         
      COMMON/CNSTNS/PI,DEG,BIGNUM,BIGEXP                                
      T=TC+273.15                                                       
      IF(KEY.NE.0) GO TO 1                                              
      GO TO 2                                                           
    1 EFIN=5.27137+.0216474*TC-.00131198*TC*TC                          
      ALPHA=-16.8129/T+.0609265                                         
      TAU=.00033836*EXP(2513.98/T)                                      
      SIG=12.5664E+08                                                   
      ES=78.54*(1.-.004579*(TC-25.)+.0000119*(TC-25.)**2-.000000028*    
     1(TC-25.)**3)                                                      
      GO TO 3                                                           
    2 EFIN=3.168                                                        
      ALPHA=.00023*TC*TC+.0052*TC+.288                                  
      T125 = 12500./(T*1.9869)                                          
      IF(T125. LE.BIGEXP) THEN                                          
           SIG=1.26*EXP(-T125)                                          
      ELSE                                                              
           SIG = 0.                                                     
      ENDIF                                                             
      TAU=9.990288E-05*EXP(13200./(T*1.9869))                           
      ES=3.168+.15*TC*TC+2.5*TC+200.                                    
    3 C1=TAU/WAVL                                                       
CCC                                                                     
CCC    TEMPORARY FIX TO CLASSICAL DEBYE EQUATION                        
CCC    TO HANDLE ZERO CM-1 PROBLEM                                      
CCC                                                                     
      ALPHA=0.0                                                         
      SIG=0.0                                                           
CCC                                                                     
      C2=1.5708*ALPHA                                                   
      DEM=1.+2.*C1**(1.-ALPHA)*SIN(C2)+C1**(2.*(1.-ALPHA))              
      E1=EFIN+(ES-EFIN)*(1.+(C1**(1.-ALPHA)*SIN(C2)))/DEM               
      IF(KEY.NE.0.AND.WAVL.GE.300.) E1=87.53-0.3956*TC                  
      IF(KEY.NE.0 .AND. WAVL.GE.300.) E1=ES                             
      E2=(ES-EFIN)*C1**(1.-ALPHA)*COS(C2)/DEM+SIG*WAVL/18.8496E+10      
CCC                                                                     
CCC    PERMANENT FIX TO CLSSICAL DEBYE EQUATION                         
CCC    TO HANDLE ZERO CM-1 PROBLEM                                      
CCC                                                                     
      E1=EFIN+(ES-EFIN)/(1.0+C1**2)                                     
CCC                                                                     
      E2=((ES-EFIN)*C1)/(1.0+C1**2)                                     
CCC                                                                     
      RE=SQRT((E1+SQRT(E1*E1+E2*E2))/2.)                                
      AI=-E2/(2.*RE)                                                    
      RETURN                                                            
      END                                                               
      SUBROUTINE DEFALT(Z,P,T)                                          
C                                                                       
C     THIS SUBROUTINE INTERPOLATES PROFILES FROM THE 6 BUILT-IN MODEL   
C     ATMOSPHERIC TO ALTITUDE Z.  THE JUNIT INDICES FROM /CARD1B/       
C     INDICATE WHICH PROFILE SHOULD BE USED FOR EACH INTERPOLATION:     
C                                                                       
C                   JUNIT     MODEL ATMOSPHERE                          
C                     1          TROPICAL                               
C                     2          MID-LATITUDE SUMMER                    
C                     3          MID-LATITUDE WINTER                    
C                     4          HIGH-LAT SUMMER                        
C                     5          HIGH-LAT WINTER                        
C                     6          US STANDARD                            
C                                                                       
C     DECLARE ARGUMENTS:                                                
C       Z        INPUT ALTITUDE [KM].                                   
C       P        OUTPUT PRESSURE FROM MODEL ATMOSPHERE.                 
C       T        OUTPUT TEMPERATURE FROM MODEL ATMOSPHERE.              
      REAL Z,P,T                                                        
C                                                                       
C     INCLUDE PARAMETERS:                                               
      INCLUDE 'PARAM.LST'                                               
C                                                                       
C     LIST COMMONS:                                                     
      INTEGER JUNITP,JUNITT,JUNIT                                       
      REAL WMOL,WAIR,JLOW                                               
      COMMON/CARD1B/JUNITP,JUNITT,JUNIT(13),WMOL(12),WAIR,JLOW          
      REAL ALT,PMATM,TMATM,AMOL                                         
      COMMON/MLATM/ALT(50),PMATM(50,6),TMATM(50,6),AMOL(50,8,6)         
      INTEGER LAYXMX                                                    
      REAL ALTX,AMOLX                                                   
      COMMON/MLATMX/LAYXMX,ALTX(50),AMOLX(50,35)                        
      REAL TRAC                                                         
      COMMON/TRAC/TRAC(50,21)                                           
      REAL CO2RAT                                                       
      COMMON/CO2MIX/CO2RAT                                              
      INTEGER JUNITX                                                    
      REAL WMOLX                                                        
      COMMON/CRD1BX/JUNITX,WMOLX(MMOLX)                                 
C                                                                       
C     DECLARE FUNCTIONS:                                                
      REAL EXPINT                                                       
C                                                                       
C     DECLARE LOCAL VARIABLES:                                          
      INTEGER I0,I1,I2,I3,K,KM7                                         
      LOGICAL LINIT                                                     
      REAL Z0,Z1,Z2,Z3,FACTOR,X0,X1,X2,X3                               
C                                                                       
C     DECLARE FUNCTIONS                                                 
      REAL FLG4PT                                                       
C                                                                       
C     LIST DATA:                                                        
C       LBOUND   NUMBER OF LAYER BOUNDARIES IN MODEL ATMOSPHERES.       
      INTEGER LBOUND                                                    
      DATA LBOUND/50/                                                   
C                                                                       
C     BEGIN CALCULATIONS:                                               
      IF(Z.LE.ALT(2))THEN                                               
C                                                                       
C         INPUT ALTITUDE Z IS BELOW SECOND ALTITUDE.                    
          I1=1                                                          
          I2=2                                                          
      ELSEIF(Z.GE.ALT(LBOUND-1))THEN                                    
C                                                                       
C         INPUT ALTITUDE Z IS ABOVE SECOND TO LAST ALTITUDE.            
          I1=LBOUND-1                                                   
          I2=LBOUND                                                     
      ELSE                                                              
C                                                                       
C         INTERMEDIATE ALTITUDE.                                        
          I2=3                                                          
          DO 10 I3=4,LBOUND                                             
              IF(Z.LE.ALT(I2))GOTO20                                    
   10     I2=I3                                                         
   20     CONTINUE                                                      
          I1=I2-1                                                       
          I0=I2-2                                                       
C                                                                       
C         LINEAR AND LAGRANGE 4-POINT INTERPOLATION COEFFICIENTS:       
          Z0=ALT(I0)                                                    
          Z1=ALT(I1)                                                    
          Z2=ALT(I2)                                                    
          Z3=ALT(I3)                                                    
          LINIT=.TRUE.                                                  
C                                                                       
C         TEST PRESSURE INPUT FLAG.                                     
          IF(JUNITP.LE.6)THEN                                           
              X0=LOG(PMATM(I0,JUNITP))                                  
              X1=LOG(PMATM(I1,JUNITP))                                  
              X2=LOG(PMATM(I2,JUNITP))                                  
              X3=LOG(PMATM(I3,JUNITP))                                  
              P=FLG4PT(Z,Z0,Z1,Z2,Z3,X0,X1,X2,X3,LINIT)                 
              LINIT=.FALSE.                                             
              P=EXP(P)                                                  
          ENDIF                                                         
C                                                                       
C         TEST TEMPERATURE INPUT FLAG.                                  
          IF(JUNITT.LE.6)THEN                                           
              X0=TMATM(I0,JUNITT)                                       
              X1=TMATM(I1,JUNITT)                                       
              X2=TMATM(I2,JUNITT)                                       
              X3=TMATM(I3,JUNITT)                                       
              T=FLG4PT(Z,Z0,Z1,Z2,Z3,X0,X1,X2,X3,LINIT)                 
              LINIT=.FALSE.                                             
          ENDIF                                                         
C                                                                       
C         MOLECULAR DENSITIES VARYING WITH MODEL ATMOSPHERE:            
          DO 30 K=1,7                                                   
              IF(JUNIT(K).LE.6)THEN                                     
                  X0=AMOL(I0,K,JUNIT(K))                                
                  X1=AMOL(I1,K,JUNIT(K))                                
                  X2=AMOL(I2,K,JUNIT(K))                                
                  X3=AMOL(I3,K,JUNIT(K))                                
                  WMOL(K)=FLG4PT(Z,Z0,Z1,Z2,Z3,X0,X1,X2,X3,LINIT)       
                  LINIT=.FALSE.                                         
C                                                                       
C                 ADJUST CO2 MIXING RATIO BASED ON CARD1A INPUT.        
                  IF(K.EQ.2)WMOL(2)=CO2RAT*WMOL(2)                      
                  JUNIT(K)=10                                           
              ENDIF                                                     
   30     CONTINUE                                                      
C                                                                       
C         MOLECULAR DENSITIES CONSTANT WITH MODEL ATMOSPHERE:           
          DO 40 K=8,NSPC                                                
              IF(JUNIT(K).LE.6)THEN                                     
                  KM7=K-7                                               
                  X0=TRAC(I0,KM7)                                       
                  X1=TRAC(I1,KM7)                                       
                  X2=TRAC(I2,KM7)                                       
                  X3=TRAC(I3,KM7)                                       
                  WMOL(K)=FLG4PT(Z,Z0,Z1,Z2,Z3,X0,X1,X2,X3,LINIT)       
                  LINIT=.FALSE.                                         
                  JUNIT(K)=10                                           
              ENDIF                                                     
   40     CONTINUE                                                      
          WMOL(12)=1000.*WMOL(12)                                       
C                                                                       
C         MOLECULAR DENSITIES FOR CFC SPECIES:                          
          IF(JUNITX.LE.6)THEN                                           
              DO 50 K=1,NSPECX                                          
                  X0=AMOLX(I0,K)                                        
                  X1=AMOLX(I1,K)                                        
                  X2=AMOLX(I2,K)                                        
                  X3=AMOLX(I3,K)                                        
                  WMOLX(K)=FLG4PT(Z,Z0,Z1,Z2,Z3,X0,X1,X2,X3,LINIT)      
                  LINIT=.FALSE.                                         
   50         CONTINUE                                                  
          ENDIF                                                         
          RETURN                                                        
      ENDIF                                                             
C                                                                       
C     USE 2-POINT INTERPOLATION/EXTRAPOLATION NEAR ALTITUDE END POINTS: 
      FACTOR=(Z-ALT(I1))/(ALT(I2)-ALT(I1))                              
      IF(JUNITP.LE.6)P=EXPINT(PMATM(I1,JUNITP),PMATM(I2,JUNITP),FACTOR) 
      IF(JUNITT.LE.6)                                                   
     1  T=TMATM(I1,JUNITT)+FACTOR*(TMATM(I2,JUNITT)-TMATM(I1,JUNITT))   
C                                                                       
C     MOLECULAR DENSITIES VARYING WITH MODEL ATMOSPHERE:                
      DO 60 K=1,7                                                       
          IF(JUNIT(K).LE.6)THEN                                         
              WMOL(K)=                                                  
     1          EXPINT(AMOL(I1,K,JUNIT(K)),AMOL(I2,K,JUNIT(K)),FACTOR)  
              IF(K.EQ.2)WMOL(2)=CO2RAT*WMOL(2)                          
              JUNIT(K)=10                                               
          ENDIF                                                         
   60 CONTINUE                                                          
C                                                                       
C     MOLECULAR DENSITIES CONSTANT WITH MODEL ATMOSPHERE:               
      DO 70 K=8,NSPC                                                    
          IF(JUNIT(K).LE.6)THEN                                         
              WMOL(K)=EXPINT(TRAC(I1,K-7),TRAC(I2,K-7),FACTOR)          
              JUNIT(K)=10                                               
          ENDIF                                                         
   70 CONTINUE                                                          
      WMOL(12)=1000.*WMOL(12)                                           
C                                                                       
C     MOLECULAR DENSITIES FOR CFC SPECIES:                              
      IF(JUNITX.LE.6)THEN                                               
          DO 80 K=1,NSPECX                                              
              WMOLX(K)=EXPINT(AMOLX(I1,K),AMOLX(I2,K),FACTOR)           
   80     CONTINUE                                                      
      ENDIF                                                             
C                                                                       
C     INTERPOLATIONS COMPLETE.                                          
      RETURN                                                            
      END                                                               
      REAL FUNCTION FLG4PT(Z,Z1,Z2,Z3,Z4,F1,F2,F3,F4,LINIT)             
C                                                                       
C     FUNCTION LAG4PT DOES A 4 POINT LAGRANGE INTERPOLATION FOR         
C     Z BETWEEN Z2 AND Z3, INCLUSIVE.  THE ABSCISSAE MUST BE            
C     MONOTIC (Z1<Z2<Z3<Z4 OR Z1>Z2>Z3>Z4) AND IF F(Z) HAS AN           
C     EXTREMUM BETWEEN Z2 AND Z3, THEN A LINEAR INTERPOLATION           
C     IS USED INSTEAD.  THE 4-POINT INTERPOLATION FORMULA IS:           
C                                                                       
C                                                                       
C     F(Z)  =  COEF1 P1     COEF2 P2     COEF3 P3     COEF4 P4          
C                                                                       
C                                                                       
C     WHERE                                                             
C                                                                       
C                 F1              F2              F3              F4    
C          P1 = ------ ;   P2 = ------ ;   P4 = ------ ;   P4 = ------  
C               DEMON1          DENOM2          DENOM3          DENOM4  
C                                                                       
C                                                                       
C          COEF1  =  (Z - Z2) (Z - Z3) (Z - Z4)                         
C                                                                       
C          COEF2  =  (Z - Z1) (Z - Z3) (Z - Z4)                         
C                                                                       
C          COEF3  =  (Z - Z1) (Z - Z2) (Z - Z4)                         
C                                                                       
C          COEF4  =  (Z - Z1) (Z - Z2) (Z - Z3)                         
C                                                                       
C                                                                       
C          DENOM1  =   (Z1 - Z2) (Z1 - Z3) (Z1 - Z4)                    
C                                                                       
C          DENOM2  =   (Z2 - Z1) (Z2 - Z3) (Z2 - Z4)                    
C                                                                       
C          DENOM3  =   (Z3 - Z1) (Z3 - Z2) (Z3 - Z4)                    
C                                                                       
C          DENOM4  =   (Z4 - Z1) (Z4 - Z2) (Z4 - Z3)                    
C                                                                       
C                                                                       
C     THE EXTREMA IN F(Z) ARE FOUND BY SOLVING                          
C                                                                       
C                                                                       
C           d F(Z)        2                                             
C           ------  =  A Z   -  2 B Z  +  C  =  0                       
C             dZ                                                        
C                                                                       
C                                                                       
C     WHERE                                                             
C                                                                       
C                                                                       
C        A  =  3 (P1 + P2 + P3 + P4)                                    
C                                                                       
C                                                                       
C        B  =  (Z2 + Z3 + Z4) P1  +  (Z1 + Z3 + Z4) P2                  
C                                                                       
C           +  (Z1 + Z2 + Z4) P3  +  (Z1 + Z2 + Z3) P4                  
C                                                                       
C                                                                       
C        C  =  (Z2 Z3 + Z2 Z4 + Z3 Z4) P1  +  (Z1 Z3 + Z1 Z4 + Z3 Z4) P2
C                                                                       
C           +  (Z1 Z2 + Z1 Z4 + Z2 Z4) P3  +  (Z1 Z2 + Z1 Z3 + Z2 Z3) P4
C                                                                       
C                                                                       
C     THE DISCRIMINANT OF THE QUADRATIC EQUATION FOR Z                  
C     IS EXPANDED IN QUADRATIC TERMS OF P:                              
C                                                                       
C                           _           _                               
C          2               \           \                                
C         B  - 4 A C   =    |  Pi       |       Pj  COEFij              
C                          /_          /_                               
C                           i      j=i and j>i                          
C                                                                       
C                                                                       
C     WHERE                                                             
C                                                                       
C                     1           2           2             2           
C          COEFii  =  -  { (Zj-Zk)   + (Zj-Zl)   +   (Zk-Zl)  }         
C                     2                                                 
C                                                                       
C                              2                                        
C          COEFij  =  2 (Zk-Zl)  +  (Zi-Zk) (Zj-Zl)  +  (Zi-Zl) (Zj-Zk) 
C                                                                       
C                                                                       
C     DECLARE INPUTS                                                    
C       Z        ABSCISSA OF DESIRED ORDINATE.                          
C       Z1       FIRST ABSCISSA                                         
C       Z2       SECOND ABSCISSA                                        
C       Z3       THIRD ABSCISSA                                         
C       Z4       FOURTH ABSCISSA                                        
C       F1       FIRST ORDINATE                                         
C       F2       SECOND ORDINATE                                        
C       F3       THIRD ORDINATE                                         
C       F4       FOURTH ORDINATE                                        
C       LINIT    FLAG, FALSE IF ABSCISSAE ARE UNCHANGED.                
      REAL Z,Z1,Z2,Z3,Z4,F1,F2,F3,F4                                    
      LOGICAL LINIT                                                     
C                                                                       
C     LIST COMMONS:                                                     
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH                               
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                           
C                                                                       
C     SAVED VARIABLES.                                                  
      REAL BCOEF1,BCOEF2,BCOEF3,BCOEF4,COEF1,COEF2,COEF3,COEF4,FACTOR,  
     1  DENOM1,DENOM2,DENOM3,DENOM4,COEF11,COEF22,COEF33,COEF44,COEF12, 
     2  COEF13,COEF14,COEF23,COEF24,COEF34,CCOEF1,CCOEF2,CCOEF3,CCOEF4  
      SAVE BCOEF1,BCOEF2,BCOEF3,BCOEF4,COEF1,COEF2,COEF3,COEF4,FACTOR,  
     1  DENOM1,DENOM2,DENOM3,DENOM4,COEF11,COEF22,COEF33,COEF44,COEF12, 
     2  COEF13,COEF14,COEF23,COEF24,COEF34,CCOEF1,CCOEF2,CCOEF3,CCOEF4  
C                                                                       
C     LOCAL VARIABLES.                                                  
      REAL A,B,ZEXTRM,DSCRIM,ROOT,ZDIFF1,ZDIFF2,ZDIFF3,ZDIFF4,          
     1  ZDIF12,ZDIF13,ZDIF14,ZDIF23,ZDIF24,ZDIF34,P1,P2,P3,P4,          
     2  ZD12SQ,ZD13SQ,ZD14SQ,ZD23SQ,ZD24SQ,ZD34SQ,STORE                 
C     LIST DATA.                                                        
C       SMALL    SMALL NUMBER TOLERANCE                                 
      REAL SMALL                                                        
      DATA SMALL/1.E-30/                                                
C                                                                       
C     NEW ABSCISSAE CHECK                                               
      IF(LINIT)THEN                                                     
C                                                                       
C         CHECK INPUTS                                                  
          IF(Z2.EQ.Z3)GOTO10                                            
          IF(Z2.LT.Z3)THEN                                              
              IF(Z1.GE.Z2 .OR. Z2.GT.Z .OR. Z.GT.Z3 .OR. Z3.GE.Z4)GOTO10
          ELSE                                                          
              IF(Z1.LE.Z2 .OR. Z2.LT.Z .OR. Z.LT.Z3 .OR. Z3.LE.Z4)GOTO10
          ENDIF                                                         
C                                                                       
C         DEFINE CONSTANTS DEPENDENT ON Z, Z1, Z2, Z3 AND Z4 ONLY.      
          ZDIFF1=Z-Z1                                                   
          ZDIFF2=Z-Z2                                                   
          ZDIFF3=Z-Z3                                                   
          ZDIFF4=Z-Z4                                                   
          COEF1=ZDIFF2*ZDIFF3*ZDIFF4                                    
          COEF2=ZDIFF1*ZDIFF3*ZDIFF4                                    
          COEF3=ZDIFF1*ZDIFF2*ZDIFF4                                    
          COEF4=ZDIFF1*ZDIFF2*ZDIFF3                                    
          ZDIF12=Z1-Z2                                                  
          ZDIF13=Z1-Z3                                                  
          ZDIF14=Z1-Z4                                                  
          ZDIF23=Z2-Z3                                                  
          ZDIF24=Z2-Z4                                                  
          ZDIF34=Z3-Z4                                                  
          DENOM1= ZDIF12*ZDIF13*ZDIF14                                  
          DENOM2=-ZDIF12*ZDIF23*ZDIF24                                  
          DENOM3= ZDIF13*ZDIF23*ZDIF34                                  
          DENOM4=-ZDIF14*ZDIF24*ZDIF34                                  
C                                                                       
C         CONSTANTS USED IN EXTREMUM CHECK                              
          BCOEF1=Z2+Z3+Z4                                               
          BCOEF2=Z3+Z4+Z1                                               
          BCOEF3=Z4+Z1+Z2                                               
          BCOEF4=Z1+Z2+Z3                                               
          ZD12SQ=ZDIF12**2                                              
          ZD13SQ=ZDIF13**2                                              
          ZD14SQ=ZDIF14**2                                              
          ZD23SQ=ZDIF23**2                                              
          ZD24SQ=ZDIF24**2                                              
          ZD34SQ=ZDIF34**2                                              
          COEF11=.5*(ZD23SQ+ZD24SQ+ZD34SQ)                              
          COEF22=.5*(ZD13SQ+ZD14SQ+ZD34SQ)                              
          COEF33=.5*(ZD12SQ+ZD14SQ+ZD24SQ)                              
          COEF44=.5*(ZD12SQ+ZD13SQ+ZD23SQ)                              
          STORE=ZDIF13*ZDIF24+ZDIF14*ZDIF23                             
          COEF12=2*ZD34SQ+STORE                                         
          COEF34=2*ZD12SQ+STORE                                         
          STORE=ZDIF12*ZDIF34-ZDIF14*ZDIF23                             
          COEF13=2*ZD24SQ+STORE                                         
          COEF24=2*ZD13SQ+STORE                                         
          STORE=ZDIF12*ZDIF34+ZDIF13*ZDIF24                             
          COEF14=2*ZD23SQ-STORE                                         
          COEF23=2*ZD14SQ-STORE                                         
          CCOEF1=Z2*Z3+Z2*Z4+Z3*Z4                                      
          CCOEF2=Z1*Z3+Z1*Z4+Z3*Z4                                      
          CCOEF3=Z1*Z2+Z1*Z4+Z2*Z4                                      
          CCOEF4=Z1*Z2+Z1*Z3+Z2*Z3                                      
C                                                                       
C         LINEAR INTERPOLATION FACTOR                                   
          FACTOR=(Z-Z2)/(Z3-Z2)                                         
      ENDIF                                                             
C                                                                       
C     DETERMINE LOCATION OF EXTREMA                                     
      P1=F1/DENOM1                                                      
      P2=F2/DENOM2                                                      
      P3=F3/DENOM3                                                      
      P4=F4/DENOM4                                                      
      A=3*(P1+P2+P3+P4)                                                 
      B=P1*BCOEF1+P2*BCOEF2+P3*BCOEF3+P4*BCOEF4                         
      IF(ABS(A).LT.SMALL)THEN                                           
          IF(ABS(B).GT.SMALL)THEN                                       
C                                                                       
C             ONE EXTREMUM                                              
              ZEXTRM=.5*(CCOEF1*P1+CCOEF2*P2+CCOEF3*P3+CCOEF4*P4)/B     
              IF((ZEXTRM.GT.Z2 .AND. ZEXTRM.LT.Z3) .OR.                 
     1           (ZEXTRM.LT.Z2 .AND. ZEXTRM.GT.Z3))THEN                 
C                                                                       
C                 EXTREMUM BETWEEN Z2 AND Z3.  USE LINEAR INTERPOLATION.
                  FLG4PT=F2+FACTOR*(F3-F2)                              
                  RETURN                                                
              ENDIF                                                     
          ENDIF                                                         
      ELSE                                                              
          DSCRIM=P1*(P1*COEF11+P2*COEF12+P3*COEF13+P4*COEF14)           
     1          +P2*(P2*COEF22+P3*COEF23+P4*COEF24)                     
     2          +P3*(P3*COEF33+P4*COEF34)+P4**2*COEF44                  
          IF(DSCRIM.GE.0.)THEN                                          
C                                                                       
C             TWO EXTREMUM                                              
              ROOT=SQRT(DSCRIM)                                         
              ZEXTRM=(B+ROOT)/A                                         
              IF((ZEXTRM.GT.Z2 .AND. ZEXTRM.LT.Z3) .OR.                 
     1           (ZEXTRM.LT.Z2 .AND. ZEXTRM.GT.Z3))THEN                 
C                                                                       
C                 EXTREMUM BETWEEN Z2 AND Z3.  USE LINEAR INTERPOLATION.
                  FLG4PT=F2+FACTOR*(F3-F2)                              
                  RETURN                                                
              ENDIF                                                     
              ZEXTRM=(B-ROOT)/A                                         
              IF((ZEXTRM.GT.Z2 .AND. ZEXTRM.LT.Z3) .OR.                 
     1           (ZEXTRM.LT.Z2 .AND. ZEXTRM.GT.Z3))THEN                 
C                                                                       
C                 EXTREMUM BETWEEN Z2 AND Z3.  USE LINEAR INTERPOLATION.
                  FLG4PT=F2+FACTOR*(F3-F2)                              
                  RETURN                                                
              ENDIF                                                     
          ENDIF                                                         
      ENDIF                                                             
C                                                                       
C     NO EXTREMA BETWEEN Z2 AND Z3.  USE 4-POINT LAGRANGE INTERPOLATION.
      FLG4PT=COEF1*P1+COEF2*P2+COEF3*P3+COEF4*P4                        
      RETURN                                                            
C                                                                       
C     INCORRECT INPUT ERROR.                                            
   10 CONTINUE                                                          
Calley      WRITE(IPR,'(/A,/(18X,A,F12.4))')                            
      IF (IPR .GT. 0) WRITE(IPR,'(/A,/(18X,A,F12.4))')                  
     1  ' ERROR in FLG4PT:  ABSCISSAE OUT OF ORDER.',                   
     2  ' Z1 =',Z1,' Z2 =',Z2,' Z  =',Z,' Z3 =',Z3,' Z4 =',Z4           
      STOP ' ERROR in FLG4PT:  ABSCISSAE OUT OF ORDER.'                 
      END                                                               
      FUNCTION   DEL(PSIO,DELO,BETA,IARBO)                              
C                                                                       
C     FUNCTION DEL RETURNS THE VALUE OF THE SUN'S ZENITH ANGLE          
C     AT ANY POINT ALONG THE OPTICAL PATH BASED UPON STRAIGHT           
C     LINE GEOMETRY (NO REFRACTION). THIS ANGLE IS USED TO SPECIFY      
C     THE SCATTERING POINT TO SUN PATHS. THE BENDING DUE TO REFRACTION  
C     ALONG THIS PATH IS DETERMINED BY THE GEO ROUTINES. IF THE BENDING 
C     IS GREATER THAN ONE DEGREE THE ZENITH ANGLE IS CORRECTED ACCORDING
C     AND THE PATH CALCULATION IS REPEATED.                             
C                                                                       
C     LIST COMMONS:                                                     
C       PI       THE CONSTANT PI                                        
C       DEG      NUMBER OF DEGREES IN ONE RADIAN.                       
C       BIGNUM   MAXIMUM SINGLE PRECISION NUMBER.                       
C       BIGEXP   MAXIMUM EXPONENTIAL ARGUMENT WITHOUT OVERFLOW.         
      REAL PI,DEG,BIGNUM,BIGEXP                                         
      COMMON/CNSTNS/PI,DEG,BIGNUM,BIGEXP                                
      IF(IARBO.EQ.0) GO TO 10                                           
C     SPECIAL CASES IF PSIO IS ARBITRARY                                
      IF(IARBO.EQ.1) DEL=DELO                                           
      IF(IARBO.EQ.2) DEL=BETA                                           
      IF(IARBO.EQ.3) DEL=0.0                                            
      RETURN                                                            
10    CONTINUE                                                          
      PSIOR=PSIO/DEG                                                    
      DELOR=DELO/DEG                                                    
      BETAR=BETA/DEG                                                    
C     GENERAL CASE                                                      
      X=COS(DELOR)*COS(BETAR)+SIN(DELOR)*SIN(BETAR)*COS(PSIOR)          
      DEL=DEG*ACOS(X)                                                   
      RETURN                                                            
      END                                                               
      SUBROUTINE DESATT(WSPD,VIS)                                       
C********************************************************************** 
C*                                                                    * 
C*    THIS SUBROUTINE CALCULATES THE ATTENUATION COEFFICIENTS AND     * 
C*    ASYMMETRY PARAMETER FOR THE DESERT AEROSOL BASED ON THE WIND    * 
C*    SPEED AND METEOROLOGICAL RANGE                                  * 
C*                                                                    * 
C*                                                                    * 
C*                                                                    * 
C*    PROGRAMMED BY:  D. R. LONGTIN         OPTIMETRICS, INC.         * 
C*                                          BURLINGTON, MASSACHUSETTS * 
C*                                          JULY 1987                 * 
C*                                                                    * 
C*                                                                    * 
C*    INPUTS:    WSPD    -  WIND SPEED (IN M/S) AT 10 M               * 
C*               VIS     -  METEOROLOGICAL RANGE (KM)                 * 
C*                                                                    * 
C*    OUTPUTS: DESEXT - EXTINCTION COEFFICIENT AT "NWAVLN" WAVELENGTHS* 
C*    *****    DESABS - ABSORPTION COEFFICIENT AT "NWAVLN" WAVELENGTHS* 
C*             DESG   - ASYMMETRY PARAMETER AT "NWAVLN" WAVELENGTHS   * 
C*                                                                    * 
C********************************************************************** 
C                                                                       
      INCLUDE 'PARAM.LST'                                               
      INTEGER KPOINT                                                    
      REAL WAVLEN,EXTC,ABSC,ASYM,AWCCON,TX,W,RELHUM,PATM,TBBY,WPATH     
      COMMON/BASE/WAVLEN(MXWVLN),EXTC(NAER,MXWVLN),ABSC(NAER,MXWVLN),   
     1  ASYM(NAER,MXWVLN),AWCCON(NAER),KPOINT(NSPC),TX(KMAX),W(KMAX),   
     2  RELHUM(LAYDIM),PATM(LAYTHR),TBBY(LAYTHR),WPATH(LAYTHR,KMAX)     
      REAL DSEXT,DSABS,DSASYM                                           
      COMMON/DESAER/DSEXT(NWAVLN,4),DSABS(NWAVLN,4),DSASYM(NWAVLN,4)    
      REAL DESEXT(NWAVLN),DESABS(NWAVLN),DESG(NWAVLN),WIND(4)           
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                          
      INTEGER WAVEL                                                     
      DATA WIND/0., 10., 20., 30./                                      
      DATA RAYSCT / 0.01159 /                                           
      IF(WSPD .LT. 0.) WSPD = 10.                                       
C                                                                       
      NWSPD = INT(WSPD/10) + 1                                          
Calley      IF (NWSPD.GE.4) WRITE(IPR,999)                              
      IF (NWSPD.GE.4 .AND. IPR.GT.0) WRITE(IPR,999)                     
      IF (NWSPD.GE.4) NWSPD = 3                                         
C                                                                       
C     INTERPOLATE THE RADIATIVE PROPERTIES AT WIND SPEED WSPD           
C                                                                       
      DO 100 WAVEL=1,NWAVLN                                             
C                                                                       
C     EXTINCTION COEFFICIENT                                            
C                                                                       
         SLOPE = LOG(DSEXT(WAVEL,NWSPD+1)/DSEXT(WAVEL,NWSPD))/          
     *           (WIND(NWSPD+1)-WIND(NWSPD))                            
         B = LOG(DSEXT(WAVEL,NWSPD+1)) - SLOPE*WIND(NWSPD+1)            
         DESEXT(WAVEL) = EXP(SLOPE*WSPD + B)                            
C                                                                       
C     ABSORPTION COEFFICIENT                                            
C                                                                       
         SLOPE = LOG(DSABS(WAVEL,NWSPD+1)/DSABS(WAVEL,NWSPD))/          
     *           (WIND(NWSPD+1)-WIND(NWSPD))                            
         B = LOG(DSABS(WAVEL,NWSPD+1)) - SLOPE*WIND(NWSPD+1)            
         DESABS(WAVEL) = EXP(SLOPE*WSPD + B)                            
C                                                                       
C     ASYMMETRY PARAMETER                                               
C                                                                       
         SLOPE = (DSASYM(WAVEL,NWSPD+1)-DSASYM(WAVEL,NWSPD))            
     1           /(WIND(NWSPD+1)-WIND(NWSPD))                           
         B = DSASYM(WAVEL,NWSPD+1) - SLOPE*WIND(NWSPD+1)                
         DESG(WAVEL) = SLOPE*WSPD + B                                   
100   CONTINUE                                                          
C                                                                       
          EXT55 = DESEXT(4)                                             
C                                                                       
C         DETERMINE METEROLOGICAL RANGE FROM 0.55 EXTINCTION            
C          AND KOSCHMIEDER FORMULA                                      
C                                                                       
      IF (VIS. LE .0.) THEN                                             
               VIS = 3.912/(DESEXT(4) + RAYSCT )                        
      ENDIF                                                             
C                                                                       
C        RENORMALIZE ATTENUATION COEFFICIENTS TO 1.0 KM-1 AT            
C        0.55 MICRONS FOR CAPABILTY WITH LOWTRAN                        
C                                                                       
          DO 200 WAVEL=1,NWAVLN                                         
            EXTC(1,WAVEL) = DESEXT(WAVEL)       /EXT55                  
            ABSC(1,WAVEL) = DESABS(WAVEL)       /EXT55                  
            ASYM(1,WAVEL) = DESG(WAVEL)                                 
200      CONTINUE                                                       
Calley       WRITE(IPR,900) VIS,WSPD                                    
       IF (IPR .GT. 0) WRITE(IPR,900) VIS,WSPD                          
900    FORMAT(//,'  VIS = ',F10.3,' WIND = ',F10.3)                     
       RETURN                                                           
C                                                                       
999    FORMAT(' WARNING: WIND SPEED IS BEYOND 30 M/S; RADIATIVE',       
     *'PROPERTIES',/,'OF THE DESERT AEROSOL HAVE BEEN EXTRAPOLATED')    
      END                                                               
      SUBROUTINE DGBCO(ABD,LDA,N,ML,MU,IPVT,RCOND,Z)                    
      INTEGER LDA,N,ML,MU,IPVT(*)                                       
      DOUBLE PRECISION ABD(LDA,*),Z(*)                                  
      DOUBLE PRECISION RCOND                                            
C                                                                       
C     DGBCO FACTORS A DOUBLE PRECISION BAND MATRIX BY GAUSSIAN          
C     ELIMINATION AND ESTIMATES THE CONDITION OF THE MATRIX.            
C                                                                       
C     IF  RCOND  IS NOT NEEDED, DGBFA IS SLIGHTLY FASTER.               
C     TO SOLVE  A*X = B , FOLLOW DGBCO BY DGBSL.                        
C     TO COMPUTE  INVERSE(A)*C , FOLLOW DGBCO BY DGBSL.                 
C     TO COMPUTE  DETERMINANT(A) , FOLLOW DGBCO BY DGBDI.               
C                                                                       
C     ON ENTRY                                                          
C                                                                       
C        ABD     DOUBLE PRECISION(LDA, N)                               
C                CONTAINS THE MATRIX IN BAND STORAGE.  THE COLUMNS      
C                OF THE MATRIX ARE STORED IN THE COLUMNS OF  ABD  AND   
C                THE DIAGONALS OF THE MATRIX ARE STORED IN ROWS         
C                ML+1 THROUGH 2*ML+MU+1 OF  ABD .                       
C                SEE THE COMMENTS BELOW FOR DETAILS.                    
C                                                                       
C        LDA     INTEGER                                                
C                THE LEADING DIMENSION OF THE ARRAY  ABD .              
C                LDA MUST BE .GE. 2*ML + MU + 1 .                       
C                                                                       
C        N       INTEGER                                                
C                THE ORDER OF THE ORIGINAL MATRIX.                      
C                                                                       
C        ML      INTEGER                                                
C                NUMBER OF DIAGONALS BELOW THE MAIN DIAGONAL.           
C                0 .LE. ML .LT. N .                                     
C                                                                       
C        MU      INTEGER                                                
C                NUMBER OF DIAGONALS ABOVE THE MAIN DIAGONAL.           
C                0 .LE. MU .LT. N .                                     
C                MORE EFFICIENT IF  ML .LE. MU .                        
C                                                                       
C     ON RETURN                                                         
C                                                                       
C        ABD     AN UPPER TRIANGULAR MATRIX IN BAND STORAGE AND         
C                THE MULTIPLIERS WHICH WERE USED TO OBTAIN IT.          
C                THE FACTORIZATION CAN BE WRITTEN  A = L*U  WHERE       
C                L  IS A PRODUCT OF PERMUTATION AND UNIT LOWER          
C                TRIANGULAR MATRICES AND  U  IS UPPER TRIANGULAR.       
C                                                                       
C        IPVT    INTEGER(N)                                             
C                AN INTEGER VECTOR OF PIVOT INDICES.                    
C                                                                       
C        RCOND   DOUBLE PRECISION                                       
C                AN ESTIMATE OF THE RECIPROCAL CONDITION OF  A .        
C                FOR THE SYSTEM  A*X = B , RELATIVE PERTURBATIONS       
C                IN  A  AND  B  OF SIZE  EPSILON  MAY CAUSE             
C                RELATIVE PERTURBATIONS IN  X  OF SIZE  EPSILON/RCOND . 
C                IF  RCOND  IS SO SMALL THAT THE LOGICAL EXPRESSION     
C                           1.0 + RCOND .EQ. 1.0                        
C                IS TRUE, THEN  A  MAY BE SINGULAR TO WORKING           
C                PRECISION.  IN PARTICULAR,  RCOND  IS ZERO  IF         
C                EXACT SINGULARITY IS DETECTED OR THE ESTIMATE          
C                UNDERFLOWS.                                            
C                                                                       
C        Z       DOUBLE PRECISION(N)                                    
C                A WORK VECTOR WHOSE CONTENTS ARE USUALLY UNIMPORTANT.  
C                IF  A  IS CLOSE TO A SINGULAR MATRIX, THEN  Z  IS      
C                AN APPROXIMATE NULL VECTOR IN THE SENSE THAT           
C                NORM(A*Z) = RCOND*NORM(A)*NORM(Z) .                    
C                                                                       
C     BAND STORAGE                                                      
C                                                                       
C           IF  A  IS A BAND MATRIX, THE FOLLOWING PROGRAM SEGMENT      
C           WILL SET UP THE INPUT.                                      
C                                                                       
C                   ML = (BAND WIDTH BELOW THE DIAGONAL)                
C                   MU = (BAND WIDTH ABOVE THE DIAGONAL)                
C                   M = ML + MU + 1                                     
C                   DO 20 J = 1, N                                      
C                      I1 = MAX0(1, J-MU)                               
C                      I2 = MIN0(N, J+ML)                               
C                      DO 10 I = I1, I2                                 
C                         K = I - J + M                                 
C                         ABD(K,J) = A(I,J)                             
C                10    CONTINUE                                         
C                20 CONTINUE                                            
C                                                                       
C           THIS USES ROWS  ML+1  THROUGH  2*ML+MU+1  OF  ABD .         
C           IN ADDITION, THE FIRST  ML  ROWS IN  ABD  ARE USED FOR      
C           ELEMENTS GENERATED DURING THE TRIANGULARIZATION.            
C           THE TOTAL NUMBER OF ROWS NEEDED IN  ABD  IS  2*ML+MU+1 .    
C           THE  ML+MU BY ML+MU  UPPER LEFT TRIANGLE AND THE            
C           ML BY ML  LOWER RIGHT TRIANGLE ARE NOT REFERENCED.          
C                                                                       
C     EXAMPLE..  IF THE ORIGINAL MATRIX IS                              
C                                                                       
C           11 12 13  0  0  0                                           
C           21 22 23 24  0  0                                           
C            0 32 33 34 35  0                                           
C            0  0 43 44 45 46                                           
C            0  0  0 54 55 56                                           
C            0  0  0  0 65 66                                           
C                                                                       
C      THEN  N = 6, ML = 1, MU = 2, LDA .GE. 5  AND ABD SHOULD CONTAIN  
C                                                                       
C            *  *  *  +  +  +  , * = NOT USED                           
C            *  * 13 24 35 46  , + = USED FOR PIVOTING                  
C            * 12 23 34 45 56                                           
C           11 22 33 44 55 66                                           
C           21 32 43 54 65  *                                           
C                                                                       
C     LINPACK. THIS VERSION DATED 08/14/78 .                            
C     CLEVE MOLER, UNIVERSITY OF NEW MEXICO, ARGONNE NATIONAL LAB.      
C                                                                       
C     SUBROUTINES AND FUNCTIONS                                         
C                                                                       
C     LINPACK DGBFA                                                     
C     BLAS DAXPY,DDOT,DSCAL,DASUM                                       
C     FORTRAN DABS,DMAX1,MAX0,MIN0,DSIGN                                
C                                                                       
C     INTERNAL VARIABLES                                                
C                                                                       
      DOUBLE PRECISION DDOT,EK,T,WK,WKM                                 
      DOUBLE PRECISION ANORM,S,DASUM,SM,YNORM                           
      INTEGER IS,INFO,J,JU,K,KB,KP1,L,LA,LM,LZ,M,MM                     
C                                                                       
C                                                                       
C     COMPUTE 1-NORM OF A                                               
C                                                                       
      ANORM = 0.0D0                                                     
      L = ML + 1                                                        
      IS = L + MU                                                       
      DO 10 J = 1, N                                                    
         ANORM = DMAX1(ANORM,DASUM(L,ABD(IS,J),1))                      
         IF (IS .GT. ML + 1) IS = IS - 1                                
         IF (J .LE. MU) L = L + 1                                       
         IF (J .GE. N - ML) L = L - 1                                   
   10 CONTINUE                                                          
C                                                                       
C     FACTOR                                                            
C                                                                       
      CALL DGBFA(ABD,LDA,N,ML,MU,IPVT,INFO)                             
C                                                                       
C     RCOND = 1/(NORM(A)*(ESTIMATE OF NORM(INVERSE(A)))) .              
C     ESTIMATE = NORM(Z)/NORM(Y) WHERE  A*Z = Y  AND  TRANS(A)*Y = E .  
C     TRANS(A)  IS THE TRANSPOSE OF A .  THE COMPONENTS OF  E  ARE      
C     CHOSEN TO CAUSE MAXIMUM LOCAL GROWTH IN THE ELEMENTS OF W  WHERE  
C     TRANS(U)*W = E .  THE VECTORS ARE FREQUENTLY RESCALED TO AVOID    
C     OVERFLOW.                                                         
C                                                                       
C     SOLVE TRANS(U)*W = E                                              
C                                                                       
      EK = 1.0D0                                                        
      DO 20 J = 1, N                                                    
         Z(J) = 0.0D0                                                   
   20 CONTINUE                                                          
      M = ML + MU + 1                                                   
      JU = 0                                                            
      DO 100 K = 1, N                                                   
         IF (Z(K) .NE. 0.0D0) EK = DSIGN(EK,-Z(K))                      
         IF (DABS(EK-Z(K)) .LE. DABS(ABD(M,K))) GO TO 30                
            S = DABS(ABD(M,K))/DABS(EK-Z(K))                            
            CALL DSCAL(N,S,Z,1)                                         
            EK = S*EK                                                   
   30    CONTINUE                                                       
         WK = EK - Z(K)                                                 
         WKM = -EK - Z(K)                                               
         S = DABS(WK)                                                   
         SM = DABS(WKM)                                                 
         IF (ABD(M,K) .EQ. 0.0D0) GO TO 40                              
            WK = WK/ABD(M,K)                                            
            WKM = WKM/ABD(M,K)                                          
         GO TO 50                                                       
   40    CONTINUE                                                       
            WK = 1.0D0                                                  
            WKM = 1.0D0                                                 
   50    CONTINUE                                                       
         KP1 = K + 1                                                    
         JU = MIN0(MAX0(JU,MU+IPVT(K)),N)                               
         MM = M                                                         
         IF (KP1 .GT. JU) GO TO 90                                      
            DO 60 J = KP1, JU                                           
               MM = MM - 1                                              
               SM = SM + DABS(Z(J)+WKM*ABD(MM,J))                       
               Z(J) = Z(J) + WK*ABD(MM,J)                               
               S = S + DABS(Z(J))                                       
   60       CONTINUE                                                    
            IF (S .GE. SM) GO TO 80                                     
               T = WKM - WK                                             
               WK = WKM                                                 
               MM = M                                                   
               DO 70 J = KP1, JU                                        
                  MM = MM - 1                                           
                  Z(J) = Z(J) + T*ABD(MM,J)                             
   70          CONTINUE                                                 
   80       CONTINUE                                                    
   90    CONTINUE                                                       
         Z(K) = WK                                                      
  100 CONTINUE                                                          
      S = 1.0D0/DASUM(N,Z,1)                                            
      CALL DSCAL(N,S,Z,1)                                               
C                                                                       
C     SOLVE TRANS(L)*Y = W                                              
C                                                                       
      DO 120 KB = 1, N                                                  
         K = N + 1 - KB                                                 
         LM = MIN0(ML,N-K)                                              
         IF (K .LT. N) Z(K) = Z(K) + DDOT(LM,ABD(M+1,K),1,Z(K+1),1)     
         IF (DABS(Z(K)) .LE. 1.0D0) GO TO 110                           
            S = 1.0D0/DABS(Z(K))                                        
            CALL DSCAL(N,S,Z,1)                                         
  110    CONTINUE                                                       
         L = IPVT(K)                                                    
         T = Z(L)                                                       
         Z(L) = Z(K)                                                    
         Z(K) = T                                                       
  120 CONTINUE                                                          
      S = 1.0D0/DASUM(N,Z,1)                                            
      CALL DSCAL(N,S,Z,1)                                               
C                                                                       
      YNORM = 1.0D0                                                     
C                                                                       
C     SOLVE L*V = Y                                                     
C                                                                       
      DO 140 K = 1, N                                                   
         L = IPVT(K)                                                    
         T = Z(L)                                                       
         Z(L) = Z(K)                                                    
         Z(K) = T                                                       
         LM = MIN0(ML,N-K)                                              
         IF (K .LT. N) CALL DAXPY(LM,T,ABD(M+1,K),1,Z(K+1),1)           
         IF (DABS(Z(K)) .LE. 1.0D0) GO TO 130                           
            S = 1.0D0/DABS(Z(K))                                        
            CALL DSCAL(N,S,Z,1)                                         
            YNORM = S*YNORM                                             
  130    CONTINUE                                                       
  140 CONTINUE                                                          
      S = 1.0D0/DASUM(N,Z,1)                                            
      CALL DSCAL(N,S,Z,1)                                               
      YNORM = S*YNORM                                                   
C                                                                       
C     SOLVE  U*Z = W                                                    
C                                                                       
      DO 160 KB = 1, N                                                  
         K = N + 1 - KB                                                 
         IF (DABS(Z(K)) .LE. DABS(ABD(M,K))) GO TO 150                  
            S = DABS(ABD(M,K))/DABS(Z(K))                               
            CALL DSCAL(N,S,Z,1)                                         
            YNORM = S*YNORM                                             
  150    CONTINUE                                                       
         IF (ABD(M,K) .NE. 0.0D0) Z(K) = Z(K)/ABD(M,K)                  
         IF (ABD(M,K) .EQ. 0.0D0) Z(K) = 1.0D0                          
         LM = MIN0(K,M) - 1                                             
         LA = M - LM                                                    
         LZ = K - LM                                                    
         T = -Z(K)                                                      
         CALL DAXPY(LM,T,ABD(LA,K),1,Z(LZ),1)                           
  160 CONTINUE                                                          
C     MAKE ZNORM = 1.0                                                  
      S = 1.0D0/DASUM(N,Z,1)                                            
      CALL DSCAL(N,S,Z,1)                                               
      YNORM = S*YNORM                                                   
C                                                                       
      IF (ANORM .NE. 0.0D0) RCOND = YNORM/ANORM                         
      IF (ANORM .EQ. 0.0D0) RCOND = 0.0D0                               
      RETURN                                                            
      END                                                               
      SUBROUTINE DGBFA(ABD,LDA,N,ML,MU,IPVT,INFO)                       
      INTEGER LDA,N,ML,MU,IPVT(*),INFO                                  
      DOUBLE PRECISION ABD(LDA,*)                                       
C                                                                       
C     DGBFA FACTORS A DOUBLE PRECISION BAND MATRIX BY ELIMINATION.      
C                                                                       
C     DGBFA IS USUALLY CALLED BY DGBCO, BUT IT CAN BE CALLED            
C     DIRECTLY WITH A SAVING IN TIME IF  RCOND  IS NOT NEEDED.          
C                                                                       
C     ON ENTRY                                                          
C                                                                       
C        ABD     DOUBLE PRECISION(LDA, N)                               
C                CONTAINS THE MATRIX IN BAND STORAGE.  THE COLUMNS      
C                OF THE MATRIX ARE STORED IN THE COLUMNS OF  ABD  AND   
C                THE DIAGONALS OF THE MATRIX ARE STORED IN ROWS         
C                ML+1 THROUGH 2*ML+MU+1 OF  ABD .                       
C                SEE THE COMMENTS BELOW FOR DETAILS.                    
C                                                                       
C        LDA     INTEGER                                                
C                THE LEADING DIMENSION OF THE ARRAY  ABD .              
C                LDA MUST BE .GE. 2*ML + MU + 1 .                       
C                                                                       
C        N       INTEGER                                                
C                THE ORDER OF THE ORIGINAL MATRIX.                      
C                                                                       
C        ML      INTEGER                                                
C                NUMBER OF DIAGONALS BELOW THE MAIN DIAGONAL.           
C                0 .LE. ML .LT. N .                                     
C                                                                       
C        MU      INTEGER                                                
C                NUMBER OF DIAGONALS ABOVE THE MAIN DIAGONAL.           
C                0 .LE. MU .LT. N .                                     
C                MORE EFFICIENT IF  ML .LE. MU .                        
C     ON RETURN                                                         
C                                                                       
C        ABD     AN UPPER TRIANGULAR MATRIX IN BAND STORAGE AND         
C                THE MULTIPLIERS WHICH WERE USED TO OBTAIN IT.          
C                THE FACTORIZATION CAN BE WRITTEN  A = L*U  WHERE       
C                L  IS A PRODUCT OF PERMUTATION AND UNIT LOWER          
C                TRIANGULAR MATRICES AND  U  IS UPPER TRIANGULAR.       
C                                                                       
C        IPVT    INTEGER(N)                                             
C                AN INTEGER VECTOR OF PIVOT INDICES.                    
C                                                                       
C        INFO    INTEGER                                                
C                = 0  NORMAL VALUE.                                     
C                = K  IF  U(K,K) .EQ. 0.0 .  THIS IS NOT AN ERROR       
C                     CONDITION FOR THIS SUBROUTINE, BUT IT DOES        
C                     INDICATE THAT DGBSL WILL DIVIDE BY ZERO IF        
C                     CALLED.  USE  RCOND  IN DGBCO FOR A RELIABLE      
C                     INDICATION OF SINGULARITY.                        
C                                                                       
C     BAND STORAGE                                                      
C                                                                       
C           IF  A  IS A BAND MATRIX, THE FOLLOWING PROGRAM SEGMENT      
C           WILL SET UP THE INPUT.                                      
C                                                                       
C                   ML = (BAND WIDTH BELOW THE DIAGONAL)                
C                   MU = (BAND WIDTH ABOVE THE DIAGONAL)                
C                   M = ML + MU + 1                                     
C                   DO 20 J = 1, N                                      
C                      I1 = MAX0(1, J-MU)                               
C                      I2 = MIN0(N, J+ML)                               
C                      DO 10 I = I1, I2                                 
C                         K = I - J + M                                 
C                         ABD(K,J) = A(I,J)                             
C                10    CONTINUE                                         
C                20 CONTINUE                                            
C                                                                       
C           THIS USES ROWS  ML+1  THROUGH  2*ML+MU+1  OF  ABD .         
C           IN ADDITION, THE FIRST  ML  ROWS IN  ABD  ARE USED FOR      
C           ELEMENTS GENERATED DURING THE TRIANGULARIZATION.            
C           THE TOTAL NUMBER OF ROWS NEEDED IN  ABD  IS  2*ML+MU+1 .    
C           THE  ML+MU BY ML+MU  UPPER LEFT TRIANGLE AND THE            
C           ML BY ML  LOWER RIGHT TRIANGLE ARE NOT REFERENCED.          
C                                                                       
C     LINPACK. THIS VERSION DATED 08/14/78 .                            
C     CLEVE MOLER, UNIVERSITY OF NEW MEXICO, ARGONNE NATIONAL LAB.      
C                                                                       
C     SUBROUTINES AND FUNCTIONS                                         
C                                                                       
C     BLAS DAXPY,DSCAL,IDAMAX                                           
C     FORTRAN MAX0,MIN0                                                 
C                                                                       
C     INTERNAL VARIABLES                                                
C                                                                       
      DOUBLE PRECISION T                                                
      INTEGER I,IDAMAX,I0,J,JU,JZ,J0,J1,K,KP1,L,LM,M,MM,NM1             
C                                                                       
C                                                                       
      M = ML + MU + 1                                                   
      INFO = 0                                                          
C                                                                       
C     ZERO INITIAL FILL-IN COLUMNS                                      
C                                                                       
      J0 = MU + 2                                                       
      J1 = MIN0(N,M) - 1                                                
      IF (J1 .LT. J0) GO TO 30                                          
      DO 20 JZ = J0, J1                                                 
         I0 = M + 1 - JZ                                                
         DO 10 I = I0, ML                                               
            ABD(I,JZ) = 0.0D0                                           
   10    CONTINUE                                                       
   20 CONTINUE                                                          
   30 CONTINUE                                                          
      JZ = J1                                                           
      JU = 0                                                            
C                                                                       
C     GAUSSIAN ELIMINATION WITH PARTIAL PIVOTING                        
C                                                                       
      NM1 = N - 1                                                       
      IF (NM1 .LT. 1) GO TO 130                                         
      DO 120 K = 1, NM1                                                 
         KP1 = K + 1                                                    
C                                                                       
C        ZERO NEXT FILL-IN COLUMN                                       
C                                                                       
         JZ = JZ + 1                                                    
         IF (JZ .GT. N) GO TO 50                                        
         IF (ML .LT. 1) GO TO 50                                        
            DO 40 I = 1, ML                                             
               ABD(I,JZ) = 0.0D0                                        
   40       CONTINUE                                                    
   50    CONTINUE                                                       
C                                                                       
C        FIND L = PIVOT INDEX                                           
C                                                                       
         LM = MIN0(ML,N-K)                                              
         L = IDAMAX(LM+1,ABD(M,K),1) + M - 1                            
         IPVT(K) = L + K - M                                            
C                                                                       
C        ZERO PIVOT IMPLIES THIS COLUMN ALREADY TRIANGULARIZED          
C                                                                       
         IF (ABD(L,K) .EQ. 0.0D0) GO TO 100                             
C                                                                       
C           INTERCHANGE IF NECESSARY                                    
C                                                                       
            IF (L .EQ. M) GO TO 60                                      
               T = ABD(L,K)                                             
               ABD(L,K) = ABD(M,K)                                      
               ABD(M,K) = T                                             
   60       CONTINUE                                                    
C                                                                       
C           COMPUTE MULTIPLIERS                                         
C                                                                       
            T = -1.0D0/ABD(M,K)                                         
            CALL DSCAL(LM,T,ABD(M+1,K),1)                               
C                                                                       
C           ROW ELIMINATION WITH COLUMN INDEXING                        
C                                                                       
            JU = MIN0(MAX0(JU,MU+IPVT(K)),N)                            
            MM = M                                                      
            IF (JU .LT. KP1) GO TO 90                                   
            DO 80 J = KP1, JU                                           
               L = L - 1                                                
               MM = MM - 1                                              
               T = ABD(L,J)                                             
               IF (L .EQ. MM) GO TO 70                                  
                  ABD(L,J) = ABD(MM,J)                                  
                  ABD(MM,J) = T                                         
   70          CONTINUE                                                 
               CALL DAXPY(LM,T,ABD(M+1,K),1,ABD(MM+1,J),1)              
   80       CONTINUE                                                    
   90       CONTINUE                                                    
         GO TO 110                                                      
  100    CONTINUE                                                       
            INFO = K                                                    
  110    CONTINUE                                                       
  120 CONTINUE                                                          
  130 CONTINUE                                                          
      IPVT(N) = N                                                       
      IF (ABD(M,N) .EQ. 0.0D0) INFO = N                                 
      RETURN                                                            
      END                                                               
      SUBROUTINE DGBSL(ABD,LDA,N,ML,MU,IPVT,B,JOB)                      
      INTEGER LDA,N,ML,MU,IPVT(*),JOB                                   
      DOUBLE PRECISION ABD(LDA,*),B(*)                                  
C                                                                       
C     DGBSL SOLVES THE DOUBLE PRECISION BAND SYSTEM                     
C     A * X = B  OR  TRANS(A) * X = B                                   
C     USING THE FACTORS COMPUTED BY DGBCO OR DGBFA.                     
C                                                                       
C     ON ENTRY                                                          
C                                                                       
C        ABD     DOUBLE PRECISION(LDA, N)                               
C                THE OUTPUT FROM DGBCO OR DGBFA.                        
C                                                                       
C        LDA     INTEGER                                                
C                THE LEADING DIMENSION OF THE ARRAY  ABD .              
C                                                                       
C        N       INTEGER                                                
C                THE ORDER OF THE ORIGINAL MATRIX.                      
C                                                                       
C        ML      INTEGER                                                
C                NUMBER OF DIAGONALS BELOW THE MAIN DIAGONAL.           
C                                                                       
C        MU      INTEGER                                                
C                NUMBER OF DIAGONALS ABOVE THE MAIN DIAGONAL.           
C                                                                       
C        IPVT    INTEGER(N)                                             
C                THE PIVOT VECTOR FROM DGBCO OR DGBFA.                  
C                                                                       
C        B       DOUBLE PRECISION(N)                                    
C                THE RIGHT HAND SIDE VECTOR.                            
C                                                                       
C        JOB     INTEGER                                                
C                = 0         TO SOLVE  A*X = B ,                        
C                = NONZERO   TO SOLVE  TRANS(A)*X = B , WHERE           
C                            TRANS(A)  IS THE TRANSPOSE.                
C                                                                       
C     ON RETURN                                                         
C                                                                       
C        B       THE SOLUTION VECTOR  X .                               
C                                                                       
C     ERROR CONDITION                                                   
C                                                                       
C        A DIVISION BY ZERO WILL OCCUR IF THE INPUT FACTOR CONTAINS A   
C        ZERO ON THE DIAGONAL.  TECHNICALLY THIS INDICATES SINGULARITY  
C        BUT IT IS OFTEN CAUSED BY IMPROPER ARGUMENTS OR IMPROPER       
C        SETTING OF LDA .  IT WILL NOT OCCUR IF THE SUBROUTINES ARE     
C        CALLED CORRECTLY AND IF DGBCO HAS SET RCOND .GT. 0.0           
C        OR DGBFA HAS SET INFO .EQ. 0 .                                 
C                                                                       
C     TO COMPUTE  INVERSE(A) * C  WHERE  C  IS A MATRIX                 
C     WITH  P  COLUMNS                                                  
C           CALL DGBCO(ABD,LDA,N,ML,MU,IPVT,RCOND,Z)                    
C           IF (RCOND IS TOO SMALL) GO TO ...                           
C           DO 10 J = 1, P                                              
C              CALL DGBSL(ABD,LDA,N,ML,MU,IPVT,C(1,J),0)                
C        10 CONTINUE                                                    
C                                                                       
C     LINPACK. THIS VERSION DATED 08/14/78 .                            
C     CLEVE MOLER, UNIVERSITY OF NEW MEXICO, ARGONNE NATIONAL LAB.      
C                                                                       
C     SUBROUTINES AND FUNCTIONS                                         
C                                                                       
C     BLAS DAXPY,DDOT                                                   
C     FORTRAN MIN0                                                      
C                                                                       
C     INTERNAL VARIABLES                                                
C                                                                       
      DOUBLE PRECISION DDOT,T                                           
      INTEGER K,KB,L,LA,LB,LM,M,NM1                                     
C                                                                       
      M = MU + ML + 1                                                   
      NM1 = N - 1                                                       
      IF (JOB .NE. 0) GO TO 50                                          
C                                                                       
C        JOB = 0 , SOLVE  A * X = B                                     
C        FIRST SOLVE L*Y = B                                            
C                                                                       
         IF (ML .EQ. 0) GO TO 30                                        
         IF (NM1 .LT. 1) GO TO 30                                       
            DO 20 K = 1, NM1                                            
               LM = MIN0(ML,N-K)                                        
               L = IPVT(K)                                              
               T = B(L)                                                 
               IF (L .EQ. K) GO TO 10                                   
                  B(L) = B(K)                                           
                  B(K) = T                                              
   10          CONTINUE                                                 
               CALL DAXPY(LM,T,ABD(M+1,K),1,B(K+1),1)                   
   20       CONTINUE                                                    
   30    CONTINUE                                                       
C                                                                       
C        NOW SOLVE  U*X = Y                                             
C                                                                       
         DO 40 KB = 1, N                                                
            K = N + 1 - KB                                              
            B(K) = B(K)/ABD(M,K)                                        
            LM = MIN0(K,M) - 1                                          
            LA = M - LM                                                 
            LB = K - LM                                                 
            T = -B(K)                                                   
            CALL DAXPY(LM,T,ABD(LA,K),1,B(LB),1)                        
   40    CONTINUE                                                       
      GO TO 100                                                         
   50 CONTINUE                                                          
C                                                                       
C        JOB = NONZERO, SOLVE  TRANS(A) * X = B                         
C        FIRST SOLVE  TRANS(U)*Y = B                                    
C                                                                       
         DO 60 K = 1, N                                                 
            LM = MIN0(K,M) - 1                                          
            LA = M - LM                                                 
            LB = K - LM                                                 
            T = DDOT(LM,ABD(LA,K),1,B(LB),1)                            
            B(K) = (B(K) - T)/ABD(M,K)                                  
   60    CONTINUE                                                       
C                                                                       
C        NOW SOLVE TRANS(L)*X = Y                                       
C                                                                       
         IF (ML .EQ. 0) GO TO 90                                        
         IF (NM1 .LT. 1) GO TO 90                                       
            DO 80 KB = 1, NM1                                           
               K = N - KB                                               
               LM = MIN0(ML,N-K)                                        
               B(K) = B(K) + DDOT(LM,ABD(M+1,K),1,B(K+1),1)             
               L = IPVT(K)                                              
               IF (L .EQ. K) GO TO 70                                   
                  T = B(L)                                              
                  B(L) = B(K)                                           
                  B(K) = T                                              
   70          CONTINUE                                                 
   80       CONTINUE                                                    
   90    CONTINUE                                                       
  100 CONTINUE                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE DGECO(A,LDA,N,IPVT,RCOND,Z)                            
      INTEGER LDA,N,IPVT(*)                                             
      DOUBLE PRECISION A(LDA,*),Z(*)                                    
      DOUBLE PRECISION RCOND                                            
C                                                                       
C     DGECO FACTORS A DOUBLE PRECISION MATRIX BY GAUSSIAN ELIMINATION   
C     AND ESTIMATES THE CONDITION OF THE MATRIX.                        
C                                                                       
C     IF  RCOND  IS NOT NEEDED, DGEFA IS SLIGHTLY FASTER.               
C     TO SOLVE  A*X = B , FOLLOW DGECO BY DGESL.                        
C     TO COMPUTE  INVERSE(A)*C , FOLLOW DGECO BY DGESL.                 
C     TO COMPUTE  DETERMINANT(A) , FOLLOW DGECO BY DGEDI.               
C     TO COMPUTE  INVERSE(A) , FOLLOW DGECO BY DGEDI.                   
C                                                                       
C     ON ENTRY                                                          
C                                                                       
C        A       DOUBLE PRECISION(LDA, N)                               
C                THE MATRIX TO BE FACTORED.                             
C                                                                       
C        LDA     INTEGER                                                
C                THE LEADING DIMENSION OF THE ARRAY  A .                
C                                                                       
C        N       INTEGER                                                
C                THE ORDER OF THE MATRIX  A .                           
C                                                                       
C     ON RETURN                                                         
C                                                                       
C        A       AN UPPER TRIANGULAR MATRIX AND THE MULTIPLIERS         
C                WHICH WERE USED TO OBTAIN IT.                          
C                THE FACTORIZATION CAN BE WRITTEN  A = L*U  WHERE       
C                L  IS A PRODUCT OF PERMUTATION AND UNIT LOWER          
C                TRIANGULAR MATRICES AND  U  IS UPPER TRIANGULAR.       
C                                                                       
C        IPVT    INTEGER(N)                                             
C                AN INTEGER VECTOR OF PIVOT INDICES.                    
C                                                                       
C        RCOND   DOUBLE PRECISION                                       
C                AN ESTIMATE OF THE RECIPROCAL CONDITION OF  A .        
C                FOR THE SYSTEM  A*X = B , RELATIVE PERTURBATIONS       
C                IN  A  AND  B  OF SIZE  EPSILON  MAY CAUSE             
C                RELATIVE PERTURBATIONS IN  X  OF SIZE  EPSILON/RCOND . 
C                IF  RCOND  IS SO SMALL THAT THE LOGICAL EXPRESSION     
C                           1.0 + RCOND .EQ. 1.0                        
C                IS TRUE, THEN  A  MAY BE SINGULAR TO WORKING           
C                PRECISION.  IN PARTICULAR,  RCOND  IS ZERO  IF         
C                EXACT SINGULARITY IS DETECTED OR THE ESTIMATE          
C                UNDERFLOWS.                                            
C                                                                       
C        Z       DOUBLE PRECISION(N)                                    
C                A WORK VECTOR WHOSE CONTENTS ARE USUALLY UNIMPORTANT.  
C                IF  A  IS CLOSE TO A SINGULAR MATRIX, THEN  Z  IS      
C                AN APPROXIMATE NULL VECTOR IN THE SENSE THAT           
C                NORM(A*Z) = RCOND*NORM(A)*NORM(Z) .                    
C                                                                       
C     LINPACK. THIS VERSION DATED 08/14/78 .                            
C     CLEVE MOLER, UNIVERSITY OF NEW MEXICO, ARGONNE NATIONAL LAB.      
C                                                                       
C     SUBROUTINES AND FUNCTIONS                                         
C                                                                       
C     LINPACK DGEFA                                                     
C     BLAS DAXPY,DDOT,DSCAL,DASUM                                       
C     FORTRAN DABS,DMAX1,DSIGN                                          
C                                                                       
C     INTERNAL VARIABLES                                                
C                                                                       
      DOUBLE PRECISION DDOT,EK,T,WK,WKM                                 
      DOUBLE PRECISION ANORM,S,DASUM,SM,YNORM                           
      INTEGER INFO,J,K,KB,KP1,L                                         
C                                                                       
C                                                                       
C     COMPUTE 1-NORM OF A                                               
                                                                        
C                                                                       
      ANORM = 0.0D0                                                     
      DO 10 J = 1, N                                                    
                                                                        
           ANORM = DMAX1(ANORM,DASUM(N,A(1,J),1))                       
                                                                        
   10 CONTINUE                                                          
                                                                        
C                                                                       
C     FACTOR                                                            
C                                                                       
      CALL DGEFA(A,LDA,N,IPVT,INFO)                                     
                                                                        
                                                                        
                                                                        
                                                                        
                                                                        
C                                                                       
C     RCOND = 1/(NORM(A)*(ESTIMATE OF NORM(INVERSE(A)))) .              
C     ESTIMATE = NORM(Z)/NORM(Y) WHERE  A*Z = Y  AND  TRANS(A)*Y = E .  
C     TRANS(A)  IS THE TRANSPOSE OF A .  THE COMPONENTS OF  E  ARE      
C     CHOSEN TO CAUSE MAXIMUM LOCAL GROWTH IN THE ELEMENTS OF W  WHERE  
C     TRANS(U)*W = E .  THE VECTORS ARE FREQUENTLY RESCALED TO AVOID    
C     OVERFLOW.                                                         
C                                                                       
C     SOLVE TRANS(U)*W = E                                              
C                                                                       
      EK = 1.0D0                                                        
      DO 20 J = 1, N                                                    
         Z(J) = 0.0D0                                                   
   20 CONTINUE                                                          
      DO 100 K = 1, N                                                   
         IF (Z(K) .NE. 0.0D0) EK = DSIGN(EK,-Z(K))                      
         IF (DABS(EK-Z(K)) .LE. DABS(A(K,K))) GO TO 30                  
            S = DABS(A(K,K))/DABS(EK-Z(K))                              
            CALL DSCAL(N,S,Z,1)                                         
            EK = S*EK                                                   
   30    CONTINUE                                                       
                                                                        
         WK = EK - Z(K)                                                 
         WKM = -EK - Z(K)                                               
         S = DABS(WK)                                                   
         SM = DABS(WKM)                                                 
         IF (A(K,K) .EQ. 0.0D0) GO TO 40                                
            WK = WK/A(K,K)                                              
            WKM = WKM/A(K,K)                                            
         GO TO 50                                                       
   40    CONTINUE                                                       
            WK = 1.0D0                                                  
            WKM = 1.0D0                                                 
   50    CONTINUE                                                       
         KP1 = K + 1                                                    
         IF (KP1 .GT. N) GO TO 90                                       
            DO 60 J = KP1, N                                            
               SM = SM + DABS(Z(J)+WKM*A(K,J))                          
               Z(J) = Z(J) + WK*A(K,J)                                  
               S = S + DABS(Z(J))                                       
   60       CONTINUE                                                    
            IF (S .GE. SM) GO TO 80                                     
               T = WKM - WK                                             
               WK = WKM                                                 
               DO 70 J = KP1, N                                         
                  Z(J) = Z(J) + T*A(K,J)                                
   70          CONTINUE                                                 
   80       CONTINUE                                                    
   90    CONTINUE                                                       
         Z(K) = WK                                                      
  100 CONTINUE                                                          
      S = 1.0D0/DASUM(N,Z,1)                                            
      CALL DSCAL(N,S,Z,1)                                               
C                                                                       
C     SOLVE TRANS(L)*Y = W                                              
C                                                                       
      DO 120 KB = 1, N                                                  
         K = N + 1 - KB                                                 
         IF (K .LT. N) Z(K) = Z(K) + DDOT(N-K,A(K+1,K),1,Z(K+1),1)      
         IF (DABS(Z(K)) .LE. 1.0D0) GO TO 110                           
            S = 1.0D0/DABS(Z(K))                                        
            CALL DSCAL(N,S,Z,1)                                         
  110    CONTINUE                                                       
         L = IPVT(K)                                                    
         T = Z(L)                                                       
         Z(L) = Z(K)                                                    
         Z(K) = T                                                       
  120 CONTINUE                                                          
      S = 1.0D0/DASUM(N,Z,1)                                            
      CALL DSCAL(N,S,Z,1)                                               
C                                                                       
      YNORM = 1.0D0                                                     
C                                                                       
C     SOLVE L*V = Y                                                     
C                                                                       
      DO 140 K = 1, N                                                   
         L = IPVT(K)                                                    
         T = Z(L)                                                       
         Z(L) = Z(K)                                                    
         Z(K) = T                                                       
         IF (K .LT. N) CALL DAXPY(N-K,T,A(K+1,K),1,Z(K+1),1)            
         IF (DABS(Z(K)) .LE. 1.0D0) GO TO 130                           
            S = 1.0D0/DABS(Z(K))                                        
            CALL DSCAL(N,S,Z,1)                                         
            YNORM = S*YNORM                                             
  130    CONTINUE                                                       
  140 CONTINUE                                                          
      S = 1.0D0/DASUM(N,Z,1)                                            
      CALL DSCAL(N,S,Z,1)                                               
      YNORM = S*YNORM                                                   
C                                                                       
C     SOLVE  U*Z = V                                                    
C                                                                       
      DO 160 KB = 1, N                                                  
         K = N + 1 - KB                                                 
         IF (DABS(Z(K)) .LE. DABS(A(K,K))) GO TO 150                    
            S = DABS(A(K,K))/DABS(Z(K))                                 
            CALL DSCAL(N,S,Z,1)                                         
            YNORM = S*YNORM                                             
  150    CONTINUE                                                       
         IF (A(K,K) .NE. 0.0D0) Z(K) = Z(K)/A(K,K)                      
         IF (A(K,K) .EQ. 0.0D0) Z(K) = 1.0D0                            
         T = -Z(K)                                                      
         CALL DAXPY(K-1,T,A(1,K),1,Z(1),1)                              
  160 CONTINUE                                                          
C     MAKE ZNORM = 1.0                                                  
      S = 1.0D0/DASUM(N,Z,1)                                            
      CALL DSCAL(N,S,Z,1)                                               
      YNORM = S*YNORM                                                   
C                                                                       
      IF (ANORM .NE. 0.0D0) RCOND = YNORM/ANORM                         
      IF (ANORM .EQ. 0.0D0) RCOND = 0.0D0                               
      RETURN                                                            
      END                                                               
      SUBROUTINE DGEFA(A,LDA,N,IPVT,INFO)                               
      INTEGER LDA,N,IPVT(*),INFO                                        
      DOUBLE PRECISION A(LDA,*)                                         
C                                                                       
C     DGEFA FACTORS A DOUBLE PRECISION MATRIX BY GAUSSIAN ELIMINATION.  
C                                                                       
C     DGEFA IS USUALLY CALLED BY DGECO, BUT IT CAN BE CALLED            
C     DIRECTLY WITH A SAVING IN TIME IF  RCOND  IS NOT NEEDED.          
C     (TIME FOR DGECO) = (1 + 9/N)*(TIME FOR DGEFA) .                   
C                                                                       
C     ON ENTRY                                                          
C                                                                       
C        A       DOUBLE PRECISION(LDA, N)                               
C                THE MATRIX TO BE FACTORED.                             
C                                                                       
C        LDA     INTEGER                                                
C                THE LEADING DIMENSION OF THE ARRAY  A .                
C                                                                       
C        N       INTEGER                                                
C                THE ORDER OF THE MATRIX  A .                           
C                                                                       
C     ON RETURN                                                         
C                                                                       
C        A       AN UPPER TRIANGULAR MATRIX AND THE MULTIPLIERS         
C                WHICH WERE USED TO OBTAIN IT.                          
C                THE FACTORIZATION CAN BE WRITTEN  A = L*U  WHERE       
C                L  IS A PRODUCT OF PERMUTATION AND UNIT LOWER          
C                TRIANGULAR MATRICES AND  U  IS UPPER TRIANGULAR.       
C                                                                       
C        IPVT    INTEGER(N)                                             
C                AN INTEGER VECTOR OF PIVOT INDICES.                    
C                                                                       
C        INFO    INTEGER                                                
C                = 0  NORMAL VALUE.                                     
C                = K  IF  U(K,K) .EQ. 0.0 .  THIS IS NOT AN ERROR       
C                     CONDITION FOR THIS SUBROUTINE, BUT IT DOES        
C                     INDICATE THAT DGESL OR DGEDI WILL DIVIDE BY ZERO  
C                     IF CALLED.  USE  RCOND  IN DGECO FOR A RELIABLE   
C                     INDICATION OF SINGULARITY.                        
C                                                                       
C     LINPACK. THIS VERSION DATED 08/14/78 .                            
C     CLEVE MOLER, UNIVERSITY OF NEW MEXICO, ARGONNE NATIONAL LAB.      
C                                                                       
C     SUBROUTINES AND FUNCTIONS                                         
C                                                                       
C     BLAS DAXPY,DSCAL,IDAMAX                                           
C                                                                       
C     INTERNAL VARIABLES                                                
C                                                                       
      DOUBLE PRECISION T                                                
      INTEGER IDAMAX,J,K,KP1,L,NM1                                      
C                                                                       
C                                                                       
C     GAUSSIAN ELIMINATION WITH PARTIAL PIVOTING                        
C                                                                       
      INFO = 0                                                          
      NM1 = N - 1                                                       
      IF (NM1 .LT. 1) GO TO 70                                          
      DO 60 K = 1, NM1                                                  
         KP1 = K + 1                                                    
C                                                                       
C        FIND L = PIVOT INDEX                                           
C                                                                       
         L = IDAMAX(N-K+1,A(K,K),1) + K - 1                             
         IPVT(K) = L                                                    
C                                                                       
C        ZERO PIVOT IMPLIES THIS COLUMN ALREADY TRIANGULARIZED          
C                                                                       
         IF (A(L,K) .EQ. 0.0D0) GO TO 40                                
C                                                                       
C           INTERCHANGE IF NECESSARY                                    
C                                                                       
            IF (L .EQ. K) GO TO 10                                      
               T = A(L,K)                                               
               A(L,K) = A(K,K)                                          
               A(K,K) = T                                               
   10       CONTINUE                                                    
C                                                                       
C           COMPUTE MULTIPLIERS                                         
C                                                                       
            T = -1.0D0/A(K,K)                                           
            CALL DSCAL(N-K,T,A(K+1,K),1)                                
C                                                                       
C           ROW ELIMINATION WITH COLUMN INDEXING                        
C                                                                       
            DO 30 J = KP1, N                                            
               T = A(L,J)                                               
               IF (L .EQ. K) GO TO 20                                   
                  A(L,J) = A(K,J)                                       
                  A(K,J) = T                                            
   20          CONTINUE                                                 
               CALL DAXPY(N-K,T,A(K+1,K),1,A(K+1,J),1)                  
   30       CONTINUE                                                    
         GO TO 50                                                       
   40    CONTINUE                                                       
            INFO = K                                                    
   50    CONTINUE                                                       
   60 CONTINUE                                                          
   70 CONTINUE                                                          
      IPVT(N) = N                                                       
      IF (A(N,N) .EQ. 0.0D0) INFO = N                                   
      RETURN                                                            
      END                                                               
      SUBROUTINE DGESL(A,LDA,N,IPVT,B,JOB)                              
      INTEGER LDA,N,IPVT(*),JOB                                         
      DOUBLE PRECISION A(LDA,*),B(*)                                    
C                                                                       
C     DGESL SOLVES THE DOUBLE PRECISION SYSTEM                          
C     A * X = B  OR  TRANS(A) * X = B                                   
C     USING THE FACTORS COMPUTED BY DGECO OR DGEFA.                     
C                                                                       
C     ON ENTRY                                                          
C                                                                       
C        A       DOUBLE PRECISION(LDA, N)                               
C                THE OUTPUT FROM DGECO OR DGEFA.                        
C                                                                       
C        LDA     INTEGER                                                
C                THE LEADING DIMENSION OF THE ARRAY  A .                
C                                                                       
C        N       INTEGER                                                
C                THE ORDER OF THE MATRIX  A .                           
C                                                                       
C        IPVT    INTEGER(N)                                             
C                THE PIVOT VECTOR FROM DGECO OR DGEFA.                  
C                                                                       
C        B       DOUBLE PRECISION(N)                                    
C                THE RIGHT HAND SIDE VECTOR.                            
C                                                                       
C        JOB     INTEGER                                                
C                = 0         TO SOLVE  A*X = B ,                        
C                = NONZERO   TO SOLVE  TRANS(A)*X = B  WHERE            
C                            TRANS(A)  IS THE TRANSPOSE.                
C                                                                       
C     ON RETURN                                                         
C                                                                       
C        B       THE SOLUTION VECTOR  X .                               
C                                                                       
C     ERROR CONDITION                                                   
C                                                                       
C        A DIVISION BY ZERO WILL OCCUR IF THE INPUT FACTOR CONTAINS A   
C        ZERO ON THE DIAGONAL.  TECHNICALLY THIS INDICATES SINGULARITY  
C        BUT IT IS OFTEN CAUSED BY IMPROPER ARGUMENTS OR IMPROPER       
C        SETTING OF LDA .  IT WILL NOT OCCUR IF THE SUBROUTINES ARE     
C        CALLED CORRECTLY AND IF DGECO HAS SET RCOND .GT. 0.0           
C        OR DGEFA HAS SET INFO .EQ. 0 .                                 
C                                                                       
C     TO COMPUTE  INVERSE(A) * C  WHERE  C  IS A MATRIX                 
C     WITH  P  COLUMNS                                                  
C           CALL DGECO(A,LDA,N,IPVT,RCOND,Z)                            
C           IF (RCOND IS TOO SMALL) GO TO ...                           
C           DO 10 J = 1, P                                              
C              CALL DGESL(A,LDA,N,IPVT,C(1,J),0)                        
C        10 CONTINUE                                                    
C                                                                       
C     LINPACK. THIS VERSION DATED 08/14/78 .                            
C     CLEVE MOLER, UNIVERSITY OF NEW MEXICO, ARGONNE NATIONAL LAB.      
C                                                                       
C     SUBROUTINES AND FUNCTIONS                                         
C                                                                       
C     BLAS DAXPY,DDOT                                                   
C                                                                       
C     INTERNAL VARIABLES                                                
C                                                                       
      DOUBLE PRECISION DDOT,T                                           
      INTEGER K,KB,L,NM1                                                
C                                                                       
      NM1 = N - 1                                                       
      IF (JOB .NE. 0) GO TO 50                                          
C                                                                       
C        JOB = 0 , SOLVE  A * X = B                                     
C        FIRST SOLVE  L*Y = B                                           
C                                                                       
         IF (NM1 .LT. 1) GO TO 30                                       
         DO 20 K = 1, NM1                                               
            L = IPVT(K)                                                 
            T = B(L)                                                    
            IF (L .EQ. K) GO TO 10                                      
               B(L) = B(K)                                              
               B(K) = T                                                 
   10       CONTINUE                                                    
            CALL DAXPY(N-K,T,A(K+1,K),1,B(K+1),1)                       
   20    CONTINUE                                                       
   30    CONTINUE                                                       
C                                                                       
C        NOW SOLVE  U*X = Y                                             
C                                                                       
         DO 40 KB = 1, N                                                
            K = N + 1 - KB                                              
            B(K) = B(K)/A(K,K)                                          
            T = -B(K)                                                   
            CALL DAXPY(K-1,T,A(1,K),1,B(1),1)                           
   40    CONTINUE                                                       
      GO TO 100                                                         
   50 CONTINUE                                                          
C                                                                       
C        JOB = NONZERO, SOLVE  TRANS(A) * X = B                         
C        FIRST SOLVE  TRANS(U)*Y = B                                    
C                                                                       
         DO 60 K = 1, N                                                 
            T = DDOT(K-1,A(1,K),1,B(1),1)                               
            B(K) = (B(K) - T)/A(K,K)                                    
   60    CONTINUE                                                       
C                                                                       
C        NOW SOLVE TRANS(L)*X = Y                                       
C                                                                       
         IF (NM1 .LT. 1) GO TO 90                                       
         DO 80 KB = 1, NM1                                              
            K = N - KB                                                  
            B(K) = B(K) + DDOT(N-K,A(K+1,K),1,B(K+1),1)                 
            L = IPVT(K)                                                 
            IF (L .EQ. K) GO TO 70                                      
               T = B(L)                                                 
               B(L) = B(K)                                              
               B(K) = T                                                 
   70       CONTINUE                                                    
   80    CONTINUE                                                       
   90    CONTINUE                                                       
  100 CONTINUE                                                          
      RETURN                                                            
      END                                                               
      DOUBLE PRECISION FUNCTION DISBBF(T,V)                             
C                                                                       
C     PLANCK BLACK BODY FUNCTION [WATTS CM-2 STER-1 / CM-1].            
C                                                                       
C     DECLARE ARGUMENTS:                                                
C       T        TEMPERATURE [K].                                       
C       V        FREQUENCY [CM-1].                                      
      DOUBLE PRECISION T,V                                              
C                                                                       
C     LIST COMMONS:                                                     
C       PI       THE CONSTANT PI                                        
C       DEG      NUMBER OF DEGREES IN ONE RADIAN.                       
C       BIGNUM   MAXIMUM SINGLE PRECISION NUMBER.                       
C       BIGEXP   MAXIMUM EXPONENTIAL ARGUMENT WITHOUT OVERFLOW.         
      REAL PI,DEG,BIGNUM,BIGEXP                                         
      COMMON/CNSTNS/PI,DEG,BIGNUM,BIGEXP                                
C                                                                       
C     DECLARE LOCAL VARIABLES:                                          
C       X        EXPONENT USED IN PLANCK FUNCTION.                      
      REAL X                                                            
      DISBBF=DBLE(0.)                                                   
      IF(V.LE.0.)RETURN                                                 
      X=1.43879*REAL(V/T)                                               
C                                                                       
C     PROTECT AGAINST EXPONENTIAL OVERFLOW                              
      IF(X.GT.BIGEXP)RETURN                                             
      DISBBF=DBLE(1.190956E-12/(EXP(X)-1.))*V**3                        
      RETURN                                                            
      END                                                               
      SUBROUTINE  DISORT( NLYR, DTAUC, SSALB, PMOM, TEMPER, WVNMLO,     
     $                    WVNMHI, USRTAU, NTAU, UTAU, NSTR, USRANG,     
     $                    NUMU, UMU, NPHI, PHI, IBCND, FBEAM, UMU0,     
     $                    PHI0, FISOT, LAMBER, ALBEDO, HL, BTEMP,       
     $                    TTEMP, TEMIS, DELTAM, PLANK, ONLYFL,          
     $                    ACCUR, PRNT, HEADER, MAXCLY, MAXULV,          
     $                    MAXUMU, MAXCMU, MAXPHI, RFLDIR, RFLDN,        
     $              FLDN, FLUP, DFDT, UAVG, UU, U0U, ALBMED, TRNMED,    
     $                    MSFLAG, WN0, S0CMS, T0CMS,SFDSRT,SFDTRT )     
C=====>        LOWER CASE VARIABLES ADDED                               
              IMPLICIT DOUBLE PRECISION (A-H, O-Z)                      
                                                                        
                                                                        
C **********************************************************************
C       PLANE-PARALLEL DISCRETE ORDINATES RADIATIVE TRANSFER PROGRAM    
C             ( SEE DISORT.DOC FOR COMPLETE DOCUMENTATION )             
C **********************************************************************
                                                                        
C+---------------------------------------------------------------------+
C------------------    I/O VARIABLE SPECIFICATIONS     -----------------
C+---------------------------------------------------------------------+
C+---------------------------------------------------------------------+
C  LOCAL SYMBOLIC DIMENSIONS (HAVE BIG EFFECT ON STORAGE REQUIREMENTS): 
                                                                        
C       MXCLY  = MAX NO. OF COMPUTATIONAL LAYERS                        
C       MXULV  = MAX NO. OF OUTPUT LEVELS                               
C       MXCMU  = MAX NO. OF COMPUTATION POLAR ANGLES                    
C       MXUMU  = MAX NO. OF OUTPUT POLAR ANGLES                         
C       MXPHI  = MAX NO. OF OUTPUT AZIMUTHAL ANGLES                     
                                                                        
CJ 7/26 NEED TO MAKE MXCLY AND MXULV CONSISTENT WITH THE                
CJ      PARAMETERIZATION IN MODTRAN3 BY INCLUDING PARAM.LST.            
C                                                                       
CJ      PARAMETER ( MXCLY = 34, MXULV = 34, MXCMU = 16, MXUMU = 1,      
CJ     $            MXPHI = 1, MI = MXCMU/2, MI9M2 = 9*MI-2,            
CJ     $            NNLYRI = MXCMU*MXCLY )                              
C                                                                       
         INCLUDE 'PARAM.LST'                                            
C                                                                       
      PARAMETER (MXCLY =LAYDIM, MXULV =LAYDIM+1, MXCMU =16, MXUMU=1,    
     $            MXPHI = 1, MI = MXCMU/2, MI9M2 = 9*MI-2,              
     $            NNLYRI = MXCMU*MXCLY )                                
C                                                                       
CJ ^                                                                    
                                                                        
C+---------------------------------------------------------------------+
                                                                        
      CHARACTER  HEADER*127                                             
      LOGICAL  DELTAM, LAMBER, PLANK, ONLYFL, PRNT(7), USRANG, USRTAU   
      INTEGER  IBCND, MAXCLY, MAXUMU, MAXULV, MAXCMU, MAXPHI, NLYR,     
     $         NUMU, NSTR, NPHI, NTAU                                   
      REAL*8     ACCUR, ALBEDO, BTEMP, DTAUC( MAXCLY ), FBEAM, FISOT,   
     $         HL( 0:MAXCMU ), PHI( MAXPHI ), PMOM( 0:MAXCMU, MAXCLY ), 
     $         PHI0, SSALB( MAXCLY ), TEMPER( 0:MAXCLY ), TEMIS, TTEMP, 
     $         WVNMLO, WVNMHI, UMU( MAXUMU ), UMU0, UTAU( MAXULV )      
                                                                        
      REAL*8     RFLDIR( MAXULV ), RFLDN( MAXULV ), FLUP( MAXULV ),     
     $         UAVG( MAXULV ), DFDT( MAXULV ), U0U( MAXUMU, MAXULV ),   
     $         UU( MAXUMU, MAXULV, MAXPHI ), ALBMED( MAXUMU ),          
     $         TRNMED( MAXUMU ),                                        
     $         S0CMS( MAXUMU,MAXULV ), T0CMS( MAXUMU,MAXULV ),          
     $         FDNSRT, FDNTRT, WN0                                      
                                                                        
          REAL SFDSRT,SFDTRT                                            
                                                                        
C=====>        LOWER CASE VARIABLES ADDED                               
                                                                        
C+---------------------------------------------------------------------+
C      ROUTINES CALLED (IN ORDER):  SLFTST, ZEROAL, CHEKIN, SETDIS,     
C                                   PRTINP, ALBTRN, LEPOLY, SURFAC,     
C                                   SOLEIG, UPBEAM, UPISOT, TERPEV,     
C                                   TERPSO, SETMTX, SOLVE0, FLUXES,     
C                                   USRINT, PRAVIN, PRTINT              
C+---------------------------------------------------------------------+
                                                                        
C  INDEX CONVENTIONS (FOR ALL DO-LOOPS AND ALL VARIABLE DESCRIPTIONS):  
                                                                        
C     IU     :  FOR USER POLAR ANGLES                                   
                                                                        
C  IQ,JQ,KQ  :  FOR COMPUTATIONAL POLAR ANGLES ('QUADRATURE ANGLES')    
                                                                        
C   IQ/2     :  FOR HALF THE COMPUTATIONAL POLAR ANGLES (JUST THE ONES  
C               IN EITHER 0-90 DEGREES, OR 90-180 DEGREES)              
                                                                        
C     J      :  FOR USER AZIMUTHAL ANGLES                               
                                                                        
C     K,L    :  FOR LEGENDRE EXPANSION COEFFICIENTS OR, ALTERNATIVELY,  
C               SUBSCRIPTS OF ASSOCIATED LEGENDRE POLYNOMIALS           
                                                                        
C     LU     :  FOR USER LEVELS                                         
                                                                        
C     LC     :  FOR COMPUTATIONAL LAYERS (EACH HAVING A DIFFERENT       
C               SINGLE-SCATTER ALBEDO AND/OR PHASE FUNCTION)            
                                                                        
C    LEV     :  FOR COMPUTATIONAL LEVELS                                
                                                                        
C    MAZIM   :  FOR AZIMUTHAL COMPONENTS IN FOURIER COSINE EXPANSION    
C               OF INTENSITY AND PHASE FUNCTION                         
                                                                        
C+---------------------------------------------------------------------+
C               I N T E R N A L    V A R I A B L E S                    
                                                                        
C   AMB(IQ/2,IQ/2)    FIRST MATRIX FACTOR IN REDUCED EIGENVALUE PROBLEM 
C                     OF EQS. SS(12), STWJ(8E)  (USED ONLY IN SOLEIG)   
                                                                        
C   APB(IQ/2,IQ/2)    SECOND MATRIX FACTOR IN REDUCED EIGENVALUE PROBLEM
C                     OF EQS. SS(12), STWJ(8E)  (USED ONLY IN SOLEIG)   
                                                                        
C   ARRAY(IQ,IQ)      SCRATCH MATRIX FOR SOLEIG, UPBEAM AND UPISOT      
C                     (SEE EACH SUBROUTINE FOR DEFINITION)              
                                                                        
C   B()               RIGHT-HAND SIDE VECTOR OF EQ. SC(5) GOING INTO    
C                     SOLVE0,1;  RETURNS AS SOLUTION VECTOR             
C                     VECTOR  L, THE CONSTANTS OF INTEGRATION           
                                                                        
C   BDR(IQ/2,0:IQ/2)  BOTTOM-BOUNDARY BIDIRECTIONAL REFLECTIVITY FOR A  
C                     GIVEN AZIMUTHAL COMPONENT.  FIRST INDEX ALWAYS    
C                     REFERS TO A COMPUTATIONAL ANGLE.  SECOND INDEX:   
C                     IF ZERO, REFERS TO INCIDENT BEAM ANGLE UMU0;      
C                     IF NON-ZERO, REFERS TO A COMPUTATIONAL ANGLE.     
                                                                        
C   BEM(IQ/2)         BOTTOM-BOUNDARY DIRECTIONAL EMISSIVITY AT COMPU-  
C                     TATIONAL ANGLES.                                  
                                                                        
C   BPLANK            INTENSITY EMITTED FROM BOTTOM BOUNDARY            
                                                                        
C   CBAND()           MATRIX OF LEFT-HAND SIDE OF THE LINEAR SYSTEM     
C                     EQ. SC(5), SCALED BY EQ. SC(12);  IN BANDED       
C                     FORM REQUIRED BY LINPACK SOLUTION ROUTINES        
                                                                        
C   CC(IQ,IQ)         C-SUB-IJ IN EQ. SS(5)                             
                                                                        
C   CMU(IQ)           COMPUTATIONAL POLAR ANGLES (GAUSSIAN)             
                                                                        
C   CWT(IQ)           QUADRATURE WEIGHTS CORRESPONDING TO CMU           
                                                                        
C   DELM0             KRONECKER DELTA, DELTA-SUB-M0, WHERE M = MAZIM    
C                     IS THE NUMBER OF THE FOURIER COMPONENT IN THE     
C                     AZIMUTH COSINE EXPANSION                          
                                                                        
C   EMU(IU)           BOTTOM-BOUNDARY DIRECTIONAL EMISSIVITY AT USER    
C                     ANGLES.                                           
                                                                        
C   EVAL(IQ)          TEMPORARY STORAGE FOR EIGENVALUES OF EQ. SS(12)   
                                                                        
C   EVECC(IQ,IQ)      COMPLETE EIGENVECTORS OF SS(7) ON RETURN FROM     
C                     SOLEIG; STORED PERMANENTLY IN  GC                 
                                                                        
C   EXPBEA(LC)        TRANSMISSION OF DIRECT BEAM IN DELTA-M OPTICAL    
C                     DEPTH COORDINATES                                 
                                                                        
C   FLYR(LC)          TRUNCATED FRACTION IN DELTA-M METHOD              
                                                                        
C   GL(K,LC)          PHASE FUNCTION LEGENDRE POLYNOMIAL EXPANSION      
C                     COEFFICIENTS, CALCULATED FROM PMOM BY             
C                     INCLUDING SINGLE-SCATTERING ALBEDO, FACTOR        
C                     2K+1, AND (IF DELTAM=TRUE) THE DELTA-M            
C                     SCALING                                           
                                                                        
C   GC(IQ,IQ,LC)      EIGENVECTORS AT POLAR QUADRATURE ANGLES,          
C                     G  IN EQ. SC(1)                                   
                                                                        
C   GU(IU,IQ,LC)      EIGENVECTORS INTERPOLATED TO USER POLAR ANGLES    
C                     ( G  IN EQS. SC(3) AND S1(8-9), I.E.              
C                       G WITHOUT THE L FACTOR )                        
                                                                        
C   HLPR()            LEGENDRE COEFFICIENTS OF BOTTOM BIDIRECTIONAL     
C                     REFLECTIVITY (AFTER INCLUSION OF 2K+1 FACTOR)     
                                                                        
C   IPVT(LC*IQ)       INTEGER VECTOR OF PIVOT INDICES FOR LINPACK       
C                     ROUTINES                                          
                                                                        
C   KK(IQ,LC)         EIGENVALUES OF COEFF. MATRIX IN EQ. SS(7)         
                                                                        
C   KCONV             COUNTER IN AZIMUTH CONVERGENCE TEST               
                                                                        
C   LAYRU(LU)         COMPUTATIONAL LAYER IN WHICH USER OUTPUT LEVEL    
C                     UTAU(LU) IS LOCATED                               
                                                                        
C   LL(IQ,LC)         CONSTANTS OF INTEGRATION L IN EQ. SC(1),          
C                     OBTAINED BY SOLVING SCALED VERSION OF EQ. SC(5)   
                                                                        
C   LYRCUT            TRUE, RADIATION IS ASSUMED ZERO BELOW LAYER       
C                     NCUT BECAUSE OF ALMOST COMPLETE ABSORPTION        
                                                                        
C   NAZ               NUMBER OF AZIMUTHAL COMPONENTS CONSIDERED         
                                                                        
C   NCUT              COMPUTATIONAL LAYER NUMBER IN WHICH ABSORPTION    
C                     OPTICAL DEPTH FIRST EXCEEDS ABSCUT                
                                                                        
C   OPRIM(LC)         SINGLE SCATTERING ALBEDO AFTER DELTA-M SCALING    
                                                                        
C   PASS1             TRUE ON FIRST ENTRY, FALSE THEREAFTER             
                                                                        
C   PKAG(0:LC)        INTEGRATED PLANCK FUNCTION FOR INTERNAL EMISSION  
                                                                        
C   PSIX(IQ)          SUM JUST AFTER SQUARE BRACKET IN  EQ. SD(9)       
                                                                        
C   RMU(IU,0:IQ)      BOTTOM-BOUNDARY BIDIRECTIONAL REFLECTIVITY FOR A  
C                     GIVEN AZIMUTHAL COMPONENT.  FIRST INDEX ALWAYS    
C                     REFERS TO A USER ANGLE.  SECOND INDEX:            
C                     IF ZERO, REFERS TO INCIDENT BEAM ANGLE UMU0;      
C                     IF NON-ZERO, REFERS TO A COMPUTATIONAL ANGLE.     
                                                                        
C   TAUC(0:LC)        CUMULATIVE OPTICAL DEPTH (UN-DELTA-M-SCALED)      
                                                                        
C   TAUCPR(0:LC)      CUMULATIVE OPTICAL DEPTH (DELTA-M-SCALED IF       
C                     DELTAM = TRUE, OTHERWISE EQUAL TO TAUC)           
                                                                        
C   TPLANK            INTENSITY EMITTED FROM TOP BOUNDARY               
                                                                        
C   UUM(IU,LU,MAZIM)  COMPONENTS OF THE INTENSITY (U-SUPER-M) WHEN      
C                     EXPANDED IN FOURIER COSINE SERIES IN AZIMUTH ANGLE
                                                                        
C   U0C(IQ,LU)        AZIMUTHALLY-AVERAGED INTENSITY                    
                                                                        
C   UTAUPR(LU)        OPTICAL DEPTHS OF USER OUTPUT LEVELS IN DELTA-M   
C                     COORDINATES;  EQUAL TO  UTAU(LU) IF NO DELTA-M    
                                                                        
C   WK()              SCRATCH ARRAY                                     
                                                                        
C   XR0(LC)           X-SUB-ZERO IN EXPANSION OF THERMAL SOURCE FUNC-   
C                     TION PRECEDING EQ. SS(14) (HAS NO MU-DEPENDENCE)  
                                                                        
C   XR1(LC)           X-SUB-ONE IN EXPANSION OF THERMAL SOURCE FUNC-    
C                     TION;  SEE  EQS. SS(14-16)                        
                                                                        
C   YLM0(L)           NORMALIZED ASSOCIATED LEGENDRE POLYNOMIAL         
C                     OF SUBSCRIPT L AT THE BEAM ANGLE (NOT SAVED       
C                     AS FUNCTION OF SUPERSCIPT M)                      
                                                                        
C   YLMC(L,IQ)        NORMALIZED ASSOCIATED LEGENDRE POLYNOMIAL         
C                     OF SUBSCRIPT L AT THE COMPUTATIONAL ANGLES        
C                     (NOT SAVED AS FUNCTION OF SUPERSCIPT M)           
                                                                        
C   YLMU(L,IU)        NORMALIZED ASSOCIATED LEGENDRE POLYNOMIAL         
C                     OF SUBSCRIPT L AT THE USER ANGLES                 
C                     (NOT SAVED AS FUNCTION OF SUPERSCIPT M)           
                                                                        
C   Z()               SCRATCH ARRAY USED IN  SOLVE0,1  TO SOLVE A       
C                     LINEAR SYSTEM FOR THE CONSTANTS OF INTEGRATION    
                                                                        
C   Z0(IQ)            SOLUTION VECTORS Z-SUB-ZERO OF EQ. SS(16)         
                                                                        
C   Z0U(IU,LC)        Z-SUB-ZERO IN EQ. SS(16) INTERPOLATED TO USER     
C                     ANGLES FROM AN EQUATION DERIVED FROM SS(16)       
                                                                        
C   Z1(IQ)            SOLUTION VECTORS Z-SUB-ONE  OF EQ. SS(16)         
                                                                        
C   Z1U(IU,LC)        Z-SUB-ONE IN EQ. SS(16) INTERPOLATED TO USER      
C                     ANGLES FROM AN EQUATION DERIVED FROM SS(16)       
                                                                        
C   ZBEAM(IU,LC)      PARTICULAR SOLUTION FOR BEAM SOURCE               
                                                                        
C   ZJ(IQ)            RIGHT-HAND SIDE VECTOR  X-SUB-ZERO IN             
C                     EQ. SS(19), ALSO THE SOLUTION VECTOR              
C                     Z-SUB-ZERO AFTER SOLVING THAT SYSTEM              
                                                                        
C   ZZ(IQ,LC)         PERMANENT STORAGE FOR THE BEAM SOURCE VECTORS ZJ  
                                                                        
C   ZPLK0(IQ,LC)      PERMANENT STORAGE FOR THE THERMAL SOURCE          
C                     VECTORS  Z0  OBTAINED BY SOLVING  EQ. SS(16)      
                                                                        
C   ZPLK1(IQ,LC)      PERMANENT STORAGE FOR THE THERMAL SOURCE          
C                     VECTORS  Z1  OBTAINED BY SOLVING  EQ. SS(16)      
                                                                        
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                          
                                                                        
      LOGICAL LYRCUT, PASS1                                             
      INTEGER IPVT( NNLYRI ), LAYRU( MXULV )                            
      REAL*8    AMB( MI,MI ), APB( MI,MI ),                             
     $        ARRAY( MXCMU,MXCMU ), B( NNLYRI ), BDR( MI,0:MI ),        
     $        BEM( MI ), CBAND( MI9M2,NNLYRI ), CC( MXCMU,MXCMU ),      
     $        CMU( MXCMU ), CWT( MXCMU ), EMU( MXUMU ), EVAL( MI ),     
     $        EVECC( MXCMU, MXCMU ), EXPBEA( 0:MXCLY ), FLYR( MXCLY ),  
     $        FLDN( MXULV ), FLDIR( MXULV ), GL( 0:MXCMU,MXCLY ),       
     $        GC( MXCMU,MXCMU,MXCLY ), GU( MXUMU,MXCMU,MXCLY ),         
     $        HLPR( 0:MXCMU ), KK( MXCMU,MXCLY ), LL( MXCMU,MXCLY ),    
     $        OPRIM( MXCLY ), PHIRAD( MXPHI ), PKAG( 0:MXCLY ),         
     $        PSIX( MXCMU ), RMU( MXUMU,0:MI ), TAUC( 0:MXCLY ),        
     $        TAUCPR( 0:MXCLY ), U0C( MXCMU,MXULV ), UTAUPR( MXULV ),   
     $        UUM( MXUMU,MXULV,0:MXCMU ), WK( MXCMU ), XR0( MXCLY ),    
     $        XR1( MXCLY ), YLM0( 0:MXCMU ), YLMC( 0:MXCMU,MXCMU ),     
     $        YLMU( 0:MXCMU,MXUMU ), Z( NNLYRI ), Z0( MXCMU ),          
     $        Z0U( MXUMU,MXCLY ), Z1( MXCMU ),                          
     $        Z1U( MXUMU,MXCLY ), ZJ( MXCMU ), ZZ( MXCMU,MXCLY ),       
     $        ZPLK0( MXCMU,MXCLY ), ZPLK1( MXCMU,MXCLY ),               
     $        ZBEAM( MXUMU,MXCLY )                                      
C---- ------------------------------------------------------------------
C==== >       LOWER CASE VARIABLES ADDED                                
      REAL*8  CBANDT( MI9M2,NNLYRI ), CBANDS( MI9M2,NNLYRI ),           
     $        DUMMY0( MXCMU,MXCLY ), DUMMY1( MXCMU,MXCLY ),             
     $        DUMBEM( MI ), USAVE( MXUMU ), Z0UMS( MXUMU,MXCLY ),       
     $        Z1UMS( MXUMU,MXCLY ), BEAMMS( MXUMU,MXCLY )               
      LOGICAL MSFLAG                                                    
C-----------------------------------------------------------------------
                                                                        
      DOUBLE PRECISION   D1MACH                                         
      DOUBLE PRECISION   AAD( MI,MI ), EVALD( MI ) , EVECCD( MI,MI ),   
     $                   WKD( MXCMU )                                   
                                                                        
      SAVE  PASS1, PI, EPSIL, RPD                                       
      DATA  PASS1 / .TRUE. /                                            
                                                                        
           PASS1=.FALSE.                                                
         PI = 2. * DASIN(1.0D0)                                         
         EPSIL = 10.*D1MACH(3)                                          
         RPD = PI / 180.0                                               
      IF ( PASS1 )  THEN                                                
C                                ** INSERT INPUT VALUES FOR SELF-TEST   
C                                   NOTE: SELF-TEST MUST NOT USE IBCND=1
                                                                        
         CALL  SLFTST( ACCUR, ALBEDO, BTEMP, DELTAM, DTAUC( 1 ), FBEAM, 
     $                 FISOT, IBCND, LAMBER, NLYR, PLANK, NPHI,         
     $                 NUMU, NSTR, NTAU, ONLYFL, PHI( 1 ), PHI0, PMOM,  
     $                 PRNT, SSALB( 1 ), TEMIS, TEMPER, TTEMP, UMU( 1 ),
     $                 USRANG, USRTAU, UTAU( 1 ), UMU0, WVNMHI, WVNMLO, 
     $                 .FALSE., DUM, DUM, DUM, DUM )                    
      END IF                                                            
                                                                        
   1  CONTINUE                                                          
                                                                        
C-----------------------------------------------------------------------
C=====>      LOWER CASE VARIABLES ADDED                                 
C            **  INITIALIZE FOR MULTIPLE SCATTERING SOURCE FUNCTIONS USE
       IF ( (.NOT.PASS1).AND. MSFLAG)  THEN                             
          MSFLAG=.TRUE.                                                 
          DO 2 IU = 1, NUMU                                             
2         USAVE(IU) = UMU(IU)                                           
          CALL  ZEROIT( BEAMMS,MXUMU*MXCLY )                            
          CALL  ZEROIT( Z0UMS,MXUMU*MXCLY )                             
          CALL  ZEROIT( Z1UMS,MXUMU*MXCLY )                             
       END IF                                                           
C-----------------------------------------------------------------------
                                                                        
Calley      IF ( PRNT(1) )  WRITE( *,1010 )  HEADER                     
      IF ( PRNT(1) .AND. IPR.GT.0)  WRITE(IPR,1010 )  HEADER            
                                                                        
C                         ** ZERO SOME ARRAYS (NOT STRICTLY NECESSARY,  
C                            BUT OTHERWISE UNUSED PARTS OF ARRAYS       
C                            COLLECT GARBAGE)                           
      DO 10 I = 1, NNLYRI                                               
         IPVT(I) = 0                                                    
10    CONTINUE                                                          
      CALL ZEROAL( MXCLY, XR0, XR1, TAUC(1),                            
     $             MXCMU, CMU, CWT, PSIX, EVAL, WK, Z0, Z1, ZJ,         
     $             MXCMU+1, HLPR, YLM0,                                 
     $             MXCMU**2, ARRAY, CC, EVECC, YLMC,                    
     $             (MXCMU+1)*MXUMU, YLMU,                               
     $             MI**2, AMB, APB,                                     
     $             MXCMU*MXCLY, KK, LL, ZZ, ZPLK0, ZPLK1,               
     $             MXUMU*MXCLY, Z0U, Z1U, ZBEAM,                        
     $             MXCMU**2*MXCLY, GC,                                  
     $             MXUMU*MXCMU*MXCLY, GU,                               
     $             NNLYRI, Z )                                          
                                                                        
C                                  ** CALCULATE CUMULATIVE OPTICAL DEPTH
C                                     AND DITHER SINGLE-SCATTER ALBEDO  
C                                     TO IMPROVE NUMERICAL BEHAVIOR OF  
C                                     EIGENVALUE/VECTOR COMPUTATION     
      TAUC( 0 ) = 0.                                                    
      DO 20  LC = 1, NLYR                                               
         IF( SSALB(LC).EQ.1.0 )  SSALB(LC) = 1.0 - EPSIL                
         TAUC(LC) = TAUC(LC-1) + DTAUC(LC)                              
20    CONTINUE                                                          
C                                ** CHECK INPUT DIMENSIONS AND VARIABLES
                                                                        
      CALL  CHEKIN( NLYR, DTAUC, SSALB, PMOM, TEMPER, WVNMLO,           
     $              WVNMHI, USRTAU, NTAU, UTAU, NSTR, USRANG,           
     $              NUMU, UMU, NPHI, PHI, IBCND, FBEAM, UMU0,           
     $              PHI0, FISOT, LAMBER, ALBEDO, HL, BTEMP,             
     $              TTEMP, TEMIS, PLANK, ONLYFL, ACCUR, MAXCLY,         
     $              MAXULV, MAXUMU, MAXCMU, MAXPHI, MXCLY,              
     $              MXULV,  MXUMU,  MXCMU,  MXPHI, TAUC )               
                                                                        
C                                 ** PERFORM VARIOUS SETUP OPERATIONS   
                                                                        
      CALL  SETDIS( CMU, CWT, DELTAM, DTAUC, EXPBEA, FBEAM, FLYR,       
     $              GL, HL, HLPR, IBCND, LAMBER, LAYRU, LYRCUT,         
     $              MAXUMU, MAXCMU, MXCMU, NCUT, NLYR, NTAU, NN,        
     $              NSTR, PLANK, NUMU, ONLYFL, OPRIM, PMOM, SSALB,      
     $              TAUC, TAUCPR, UTAU, UTAUPR, UMU, UMU0, USRTAU,      
     $              USRANG )                                            
                                                                        
C                                             ** PRINT INPUT INFORMATION
Calley      IF ( PRNT(1) )                                              
      IF ( PRNT(1) .AND. IPR.GT.0 )                                     
     $     CALL PRTINP( NLYR, DTAUC, SSALB, PMOM, TEMPER, WVNMLO,       
     $                  WVNMHI, NTAU, UTAU, NSTR, NUMU, UMU, NPHI, PHI, 
     $                  IBCND, FBEAM, UMU0, PHI0, FISOT, LAMBER,        
     $                  ALBEDO, HL, BTEMP, TTEMP, TEMIS, DELTAM, PLANK, 
     $                  ONLYFL, ACCUR, FLYR, LYRCUT, OPRIM, TAUC,       
     $                  TAUCPR, MAXCMU, PRNT(7) )                       
                                                                        
                                                                        
      IF ( IBCND.EQ.1 )  THEN                                           
C                              ** HANDLE SPECIAL CASE FOR GETTING ALBEDO
C                                 AND TRANSMISSIVITY OF MEDIUM FOR MANY 
C                                 BEAM ANGLES AT ONCE                   
                                                                        
         CALL  ALBTRN( ALBEDO, AMB, APB, ARRAY, B, BDR, CBAND, CC,      
     $                 CMU, CWT, EVAL, EVECC, GL, GC, GU, IPVT,         
     $                 KK, LL, NLYR, NN, NSTR, NUMU, PRNT, TAUCPR,      
     $                 UMU, U0U, WK, YLMC, YLMU, Z, AAD, EVALD,         
     $                 EVECCD, WKD, MI, MI9M2, MAXULV, MAXUMU,          
     $                 MXCMU, MXUMU, NNLYRI, ALBMED, TRNMED )           
         RETURN                                                         
      ENDIF                                                             
C                                   ** CALCULATE PLANCK FUNCTIONS       
      IF ( .NOT.PLANK )  THEN                                           
         BPLANK = 0.0                                                   
         TPLANK = 0.0                                                   
         CALL  ZEROIT( PKAG, MXCLY+1 )                                  
      ELSE                                                              
C                      **  USE DIFFERENT PLANCK FUNCTIONS PLKAVG OR BBFN
C=====>    LOWER CASE VARIABLES ADDED                                   
           IF ( PASS1 .OR. (.NOT.MSFLAG) )  THEN                        
            TPLANK = TEMIS * PLKAVG( WVNMLO, WVNMHI, TTEMP )            
            BPLANK =         PLKAVG( WVNMLO, WVNMHI, BTEMP )            
            DO 40  LEV = 0, NLYR                                        
40            PKAG( LEV ) = PLKAVG( WVNMLO, WVNMHI, TEMPER(LEV) )       
           ELSE                                                         
              TPLANK = TEMIS * DISBBF( TTEMP, WN0 )                     
              BPLANK =         DISBBF( BTEMP, WN0 )                     
              DO 41  LEV = 0, NLYR                                      
            PKAG( LEV ) = DISBBF( TEMPER(LEV), WN0 )                    
41           CONTINUE                                                   
           END IF                                                       
        END IF                                                          
C ========  BEGIN LOOP TO SUM AZIMUTHAL COMPONENTS OF INTENSITY  =======
C ========  (EQ STWJ 5)                                                 
                                                                        
      KCONV = 0                                                         
      NAZ = NSTR-1                                                      
C                                            ** AZIMUTH-INDEPENDENT CASE
                                                                        
      IF ( FBEAM.EQ.0.0 .OR. (1.-UMU0).LT.1.E-5 .OR. ONLYFL .OR.        
     $     (NUMU.EQ.1.AND.(1.-UMU(1)).LT.1.E-5 ) )                      
     $   NAZ = 0                                                        
                                                                        
      CALL  ZEROIT( UU, MAXUMU*MAXULV*MAXPHI )                          
      DO  200  MAZIM = 0, NAZ                                           
                                                                        
      IF ( MAZIM.EQ.0 )  DELM0 = 1.0                                    
      IF ( MAZIM.GT.0 )  DELM0 = 0.0                                    
C                                  ** GET NORMALIZED ASSOCIATED LEGENDRE
C                                     POLYNOMIALS FOR INCIDENT BEAM     
C                                     ANGLE COSINE                      
      IF ( FBEAM.GT.0.0 )                                               
     $     CALL  LEPOLY( 1, MAZIM, MXCMU, NSTR-1, -UMU0, YLM0 )         
                                                                        
C                                  ** GET NORMALIZED ASSOCIATED LEGENDRE
C                                         POLYNOMIALS FOR COMPUTATIONAL 
C                                         AND USER POLAR ANGLE COSINES  
      IF ( (.NOT.ONLYFL .AND. USRANG) )                                 
     $     CALL  LEPOLY( NUMU, MAZIM, MXCMU, NSTR-1, UMU, YLMU )        
         CALL  LEPOLY( NN,   MAZIM, MXCMU, NSTR-1, CMU, YLMC )          
                                                                        
C=====> LOWER CASE VARIABLES ADDED                                      
       IF ( (.NOT.PASS1) .AND. MSFLAG )  THEN                           
           DO 42 IU = 1, NUMU                                           
42         UMU(IU) = USAVE(IU)                                          
           CALL  LEPOLY( NUMU, MAZIM, MXCMU, NSTR-1, UMU, YLMU )        
        END IF                                                          
C                       ** EVALUATE NORMALIZED ASSOCIATED LEGENDRE      
C                          POLYNOMIALS WITH NEGATIVE  CMU  FROM THOSE   
C                          WITH POSITIVE  CMU; DAVE/ARMSTRONG EQ. (15)  
      SGN  = - 1.0                                                      
      DO  50  L = MAZIM, NSTR-1                                         
         SGN = - SGN                                                    
         DO  50  IQ = NN+1, NSTR                                        
            YLMC( L,IQ ) = SGN * YLMC( L,IQ-NN )                        
 50   CONTINUE                                                          
C                                 ** SPECIFY USERS BOTTOM REFLECTIVITY  
C                                    AND EMISSIVITY PROPERTIES          
      IF ( .NOT.LYRCUT )                                                
     $   CALL  SURFAC( ALBEDO, DELM0, FBEAM, HLPR, LAMBER,              
     $                 MI, MAZIM, MXCMU, MXUMU, NN, NUMU, NSTR, ONLYFL, 
     $                 UMU, USRANG, YLM0, YLMC, YLMU, BDR, EMU, BEM,    
     $                 RMU )                                            
C ===================  BEGIN LOOP ON COMPUTATIONAL LAYERS  =============
                                                                        
      DO 100  LC = 1, NCUT                                              
                                                                        
C                        ** SOLVE EIGENFUNCTION PROBLEM IN EQ. STWJ(8B);
C                           RETURN EIGENVALUES AND EIGENVECTORS         
                                                                        
         CALL  SOLEIG( AMB, APB, ARRAY, CMU, CWT, GL(0,LC), MI, MAZIM,  
     $                 MXCMU, NN, NSTR, WK, YLMC, CC, EVECC, EVAL,      
     $                 KK(1,LC), GC(1,1,LC), AAD, WKD, EVECCD, EVALD )  
C                                  ** CALCULATE PARTICULAR SOLUTIONS OF 
C                                     EQ.SS(18) FOR INCIDENT BEAM SOURCE
         IF ( FBEAM.GT.0.0 )                                            
     $        CALL  UPBEAM( ARRAY, CC, CMU, DELM0, FBEAM, GL(0,LC),     
     $                      IPVT, MAZIM, MXCMU, NN, NSTR, PI, UMU0, WK, 
     $                      YLM0, YLMC, ZJ, ZZ(1,LC) )                  
         IF ( PLANK .AND. MAZIM.EQ.0 ) THEN                             
                                                                        
C                              ** CALCULATE PARTICULAR SOLUTIONS OF     
C                                 EQ. SS(15) FOR THERMAL EMISSION SOURCE
                                                                        
            DELTAT = TAUCPR(LC) - TAUCPR(LC-1)                          
            XR1( LC ) = 0.0                                             
                                                                        
            IF ( DELTAT.GT.EPSIL ) XR1( LC ) = ( PKAG(LC) - PKAG(LC-1) )
     $                                       / DELTAT                   
            XR0( LC ) = PKAG(LC-1) - XR1(LC) * TAUCPR(LC-1)             
            CALL UPISOT( ARRAY, CC, CMU, IPVT, MXCMU, NN, NSTR,         
     $                     OPRIM(LC), WK, XR0(LC), XR1(LC), Z0, Z1,     
     $                     ZPLK0(1,LC), ZPLK1(1,LC) )                   
         END IF                                                         
C=====>    LOWER CASE VARIABLES ADDED                                   
         IF ( (.NOT.ONLYFL .AND. USRANG) .OR. MSFLAG ) THEN             
                                                                        
C                                            ** INTERPOLATE EIGENVECTORS
C                                               TO USER ANGLES          
                                                                        
            CALL  TERPEV( CWT, EVECC, GL(0,LC), GU(1,1,LC), MAZIM,      
     $                    MXCMU, MXUMU, NN, NSTR, NUMU, WK, YLMC, YLMU) 
                                                                        
C                                            ** INTERPOLATE SOURCE TERMS
C                                               TO USER ANGLES          
                                                                        
            CALL  TERPSO( CWT, DELM0, FBEAM, GL(0,LC), MAZIM,           
     $                    MXCMU, PLANK, NUMU, NSTR, OPRIM(LC),          
     $                    PI, YLM0, YLMC, YLMU, PSIX, XR0(LC), XR1(LC), 
     $                    Z0, ZJ, ZBEAM(1,LC), Z0U(1,LC), Z1U(1,LC),    
     $                    Z0UMS(1,LC), Z1UMS(1,LC), BEAMMS(1,LC) )      
C=====>    LOWER CASE VARIABLES ADDED                                   
         END IF                                                         
100   CONTINUE                                                          
                                                                        
C ===================  END LOOP ON COMPUTATIONAL LAYERS  ===============
                                                                        
C                      ** SET COEFFICIENT MATRIX OF EQUATIONS COMBINING 
C                         BOUNDARY AND LAYER INTERFACE CONDITIONS       
      CALL  SETMTX( BDR, CBAND, CMU, CWT, DELM0, GC, KK, LAMBER,        
     $              LYRCUT, MI, MI9M2, MXCMU, NCOL, NCUT, NNLYRI,       
     $              NN, NSTR, TAUCPR, WK )                              
C=====>        LOWER CASE VARIABLES ADDED                               
        DO 110 JK = 1, MI9M2                                            
           DO 110 IK = 1, NNLYRI                                        
           CBANDS(JK,IK)=CBAND(JK,IK)                                   
           CBANDT(JK,IK)=CBAND(JK,IK)                                   
110     CONTINUE                                                        
                                                                        
C                      ** SOLVE FOR CONSTANTS OF INTEGRATION IN HOMO-   
C                         GENEOUS SOLUTION (GENERAL BOUNDARY CONDITIONS)
C               **  COMBINED SOLAR AND THERMAL SOURCES FOR SELFTEST CASE
      CALL  SOLVE0( B, BDR, BEM, BPLANK, CBAND, CMU, CWT, EXPBEA,       
     $              FBEAM, FISOT, IPVT, LAMBER, LL, LYRCUT,             
     $              MAZIM, MI, MI9M2, MXCMU, NCOL, NCUT, NN, NSTR,      
     $              NNLYRI, PI, TPLANK, TAUCPR, UMU0, Z, ZZ,            
     $              ZPLK0, ZPLK1 )                                      
                                                                        
C                                  ** COMPUTE UPWARD AND DOWNWARD FLUXES
      IF ( MAZIM.EQ.0 )                                                 
     $     CALL FLUXES( CMU, CWT, FBEAM, GC, KK, LAYRU, LL, LYRCUT,     
     $                  MXCMU, MXULV, NCUT, NN, NSTR, NTAU, PI,         
     $                  PRNT, SSALB, TAUCPR, UMU0, UTAU, UTAUPR,        
     $                  XR0, XR1, ZZ, ZPLK0, ZPLK1, DFDT, FLUP,         
     $                  FLDN, FLDIR, RFLDIR, RFLDN, UAVG, U0C, MAXULV ) 
C-----------------------------------------------------------------------
C            **  COMPUTE MULTIPLE SCATTERING SOURCE FUNCTIONS SEPARATELY
C=====>      LOWER CASE VARIABLES ADDED                                 
       IF ( (.NOT.PASS1) .AND. MSFLAG )  THEN                           
                                                                        
           CALL ZEROIT( DUMMY0, MXCMU*MXCLY )                           
C                            **  FIRST CALL FOR SOLAR MS SOURCE FUNCTION
                                                                        
           IF ( FBEAM.GT.0. )  THEN                                     
           CALL ZEROIT( DUMMY1, MXCMU*MXCLY )                           
           CALL ZEROIT( DUMBEM, MI )                                    
           CALL  SOLVE0( B,BDR,DUMBEM, 0.D0, CBANDS, CMU, CWT, EXPBEA,  
     $                   FBEAM, FISOT, IPVT, LAMBER, LL, LYRCUT,        
     $                   MAZIM, MI, MI9M2, MXCMU, NCOL, NCUT, NN, NSTR, 
     $                   NNLYRI, PI, 0.D0, TAUCPR, UMU0, Z, ZZ,         
     $                   DUMMY0, DUMMY1 )                               
           CALL  MSSOLR( CMU, CWT, FBEAM, GC, GU, KK, LAYRU, LL,        
     $                   LYRCUT, MAXUMU, MXCMU, MXUMU, NCUT, NN,        
     $                   NSTR, NTAU, NUMU, PI, TAUCPR, UMU0, UTAU,      
     $                   UTAUPR, BEAMMS, ZZ, FDNSRT, S0CMS )            
           END IF                                                       
                                                                        
C                         **  SECOND CALL FOR THERMAL MS SOURCE FUNCTION
                                                                        
           IF ( PLANK )  THEN                                           
           CALL ZEROIT(DUMMY0,MXCMU*MXCLY)                              
           DO 111 JK = 0, MXCLY                                         
111        EXPBEA(JK) = 0.0                                             
           CALL  SOLVE0( B, BDR, BEM, BPLANK, CBANDT, CMU, CWT, EXPBEA, 
     $                   FBEAM, FISOT, IPVT, LAMBER, LL, LYRCUT,        
     $                   MAZIM, MI, MI9M2, MXCMU, NCOL, NCUT, NN, NSTR, 
     $                   NNLYRI, PI, TPLANK, TAUCPR, UMU0, Z, DUMMY0,   
     $                   ZPLK0, ZPLK1 )                                 
                                                                        
           CALL  MSTHML( CMU, CWT, GC, GU, KK, LAYRU, LL, LYRCUT,       
     $                   MAXUMU, MXCMU, MXUMU, NCUT, NN, NSTR, NTAU,    
     $                   NUMU, OPRIM, PI, TAUCPR, UMU0, UTAUPR,         
     $                   XR0, XR1, Z0UMS, Z1UMS, ZPLK0, ZPLK1,          
     $                   FDNTRT, T0CMS )                                
                                                                        
           END IF                                                       
                                                                        
        END IF                                                          
C-----------------------------------------------------------------------
                                                                        
           IF ( ONLYFL )  THEN                                          
         IF( MAXUMU.GE.NSTR )  THEN                                     
C                                         ** SAVE AZIM-AVGD INTENSITIES 
C                                            AT QUADRATURE ANGLES       
            DO 120 LU = 1, NTAU                                         
               DO 120 IQ = 1, NSTR                                      
                  U0U( IQ,LU ) = U0C( IQ,LU )                           
120         CONTINUE                                                    
         ELSE                                                           
               CALL  ZEROIT( U0U, MAXUMU*MAXULV )                       
         ENDIF                                                          
         GO TO 210                                                      
      ENDIF                                                             
                                                                        
      IF ( USRANG ) THEN                                                
C                          ** COMPUTE AZIMUTHAL INTENSITY               
C                                        COMPONENTS AT USER ANGLES      
         CALL  USRINT( BPLANK, CMU, CWT, DELM0, EMU, EXPBEA,            
     $                 FBEAM, FISOT, GC, GU, KK, LAMBER, LAYRU, LL,     
     $                 LYRCUT, MAZIM, MXCMU, MXULV, MXUMU, NCUT,        
     $                 NLYR, NN, NSTR, PLANK, NUMU, NTAU, PI, RMU,      
     $                 TAUCPR, TPLANK, UMU, UMU0, UTAUPR, WK,           
     $                 ZBEAM, Z0U, Z1U, ZZ, ZPLK0, ZPLK1, UUM )         
                                                                        
      ELSE                                                              
C                                     ** COMPUTE AZIMUTHAL INTENSITY    
C                                        COMPONENTS AT QUADRATURE ANGLES
                                                                        
         CALL  CMPINT( FBEAM, GC, KK, LAYRU, LL, LYRCUT, MAZIM,         
     $                 MXCMU, MXULV, MXUMU, NCUT, NN, NSTR,             
     $                 PLANK, NTAU, TAUCPR, UMU0, UTAUPR,               
     $                 ZZ, ZPLK0, ZPLK1, UUM )                          
      END IF                                                            
                                                                        
      IF( MAZIM.EQ.0 ) THEN                                             
                                                                        
         DO  140  J = 1, NPHI                                           
            PHIRAD( J ) = RPD * ( PHI(J) - PHI0 )                       
 140     CONTINUE                                                       
C                               ** SAVE AZIMUTHALLY AVERAGED INTENSITIES
         DO 160  LU = 1, NTAU                                           
            DO 160  IU = 1, NUMU                                        
               U0U( IU,LU ) = UUM( IU,LU,0 )                            
 160     CONTINUE                                                       
C                              ** PRINT AZIMUTHALLY AVERAGED INTENSITIES
C                                 AT USER ANGLES                        
         IF ( PRNT(4) )                                                 
     $        CALL PRAVIN( UMU, NUMU, MAXUMU, UTAU, NTAU, U0U )         
                                                                        
      END IF                                                            
C                                ** INCREMENT INTENSITY BY CURRENT      
C                                   AZIMUTHAL COMPONENT (FOURIER        
C                                   COSINE SERIES);  EQ SD(2)           
      AZERR = 0.0                                                       
      DO 180  J = 1, NPHI                                               
         COSPHI = COS( MAZIM * PHIRAD(J) )                              
         DO 180  LU = 1, NTAU                                           
            DO 180  IU = 1, NUMU                                        
               AZTERM = UUM( IU,LU,MAZIM ) * COSPHI                     
               UU( IU,LU,J ) = UU( IU,LU,J ) + AZTERM                   
               AZERR = DMAX1( RATIO( DABS(AZTERM), DABS(UU(IU,LU,J)) ), 
     $                        AZERR )                                   
180   CONTINUE                                                          
      IF ( AZERR.LE.ACCUR )  KCONV = KCONV + 1                          
      IF ( KCONV.GE.2 )      GOTO 210                                   
                                                                        
200   CONTINUE                                                          
                                                                        
C ===================  END LOOP ON AZIMUTHAL COMPONENTS  ===============
                                                                        
                                                                        
C                                                 ** PRINT INTENSITIES  
                                                                        
Calley 210  IF ( PRNT(5) .AND. .NOT.ONLYFL )                            
 210  CONTINUE                                                          
      IF ( PRNT(5) .AND. .NOT.ONLYFL .AND. IPR.GT.0 )                   
     $     CALL  PRTINT( UU, UTAU, NTAU, UMU, NUMU, PHI, NPHI,          
     $                   MAXULV, MAXUMU )                               
                                                                        
                                                                        
      IF ( PASS1 )  THEN                                                
C                                    ** COMPARE TEST CASE RESULTS WITH  
C                                       CORRECT ANSWERS AND ABORT IF BAD
                                                                        
         CALL SLFTST( ACCUR, ALBEDO, BTEMP, DELTAM, DTAUC( 1 ), FBEAM,  
     $                FISOT, IBCND, LAMBER, NLYR, PLANK, NPHI,          
     $                NUMU, NSTR, NTAU, ONLYFL, PHI( 1 ), PHI0, PMOM,   
     $                PRNT, SSALB( 1 ), TEMIS, TEMPER, TTEMP, UMU( 1 ), 
     $                USRANG, USRTAU, UTAU( 1 ), UMU0, WVNMHI, WVNMLO,  
     $                .TRUE., FLUP( 1 ), RFLDIR( 1 ), RFLDN( 1 ),       
     $                UU( 1,1,1 ) )                                     
         PASS1 = .FALSE.                                                
         GO TO 1                                                        
      END IF                                                            
                                                                        
                                                                        
                SFDTRT=FDNTRT                                           
                SFDSRT=FDNSRT                                           
                                                                        
                                                                        
                                                                        
      RETURN                                                            
                                                                        
1010  FORMAT ( ////, 1X, 120('*'), /, 25X,                              
     $  'DISCRETE ORDINATES RADIATIVE TRANSFER PROGRAM, VERSION 1.0',   
     $  /, 1X, A, /, 1X, 120('*') )                                     
      END                                                               
      FUNCTION   DOP(WAVL,A,CEN1,B,C,CEN2,D,E,CEN3,F,G)                 
CCC                                                                     
CCC    DESCRIBES THE REAL PART OF THE DIELECTRIC CONSTANT               
CCC                                                                     
      V=1./WAVL                                                         
      V2=V*V                                                            
      H1=CEN1**2-V2                                                     
      H2=CEN2**2-V2                                                     
      H3=CEN3**2-V2                                                     
      DOP=SQRT(A+B*H1/(H1*H1+C*V2)+D*H2/(H2*H2+E*V2)+F*H3/(H3*H3+G*V2)) 
      RETURN                                                            
      END                                                               
      DOUBLE PRECISION FUNCTION DPANDX(H,SH,GAMMA)                      
C                                                                       
C     DOUBLE PRECISION (DP) VERSION OF THE ROUTINE PREVIOUSLY           
C     CALLED ANDEX.  COMPUTES THE INDEX OF REFRACTION AT                
C     HEIGHT H, SH IS THE SCALE HEIGHT, GAMMA IS THE VALUE              
C     AT H=0 OF THE REFRACTIVITY = INDEX OF REFRACTION - 1.             
      DOUBLE PRECISION H,SH,GAMMA,HSH                                   
C                                                                       
C     LIST COMMONS:                                                     
C                                                                       
C     /CNSTNS/                                                          
C       PI       THE CONSTANT PI                                        
C       DEG      NUMBER OF DEGREES IN ONE RADIAN.                       
C       BIGNUM   MAXIMUM SINGLE PRECISION NUMBER.                       
C       BIGEXP   MAXIMUM EXPONENTIAL ARGUMENT WITHOUT OVERFLOW.         
      REAL PI,DEG,BIGNUM,BIGEXP                                         
      COMMON/CNSTNS/PI,DEG,BIGNUM,BIGEXP                                
C                                                                       
C     /GRAUND/                                                          
C       GNDALT   GROUND ALTITUDE [KM].                                  
      REAL GNDALT                                                       
      COMMON/GRAUND/GNDALT                                              
      DPANDX=DBLE(1.)+GAMMA                                             
      IF(SH.EQ.0.)RETURN                                                
      IF(H.LT.GNDALT)THEN                                               
          HSH=DBLE(GNDALT)/SH                                           
      ELSE                                                              
          HSH=H/SH                                                      
      ENDIF                                                             
      IF(HSH.GT.BIGEXP)THEN                                             
          DPANDX=DBLE(1.)                                               
      ELSE                                                              
          DPANDX=DBLE(1.)+GAMMA*EXP(-HSH)                               
      ENDIF                                                             
      RETURN                                                            
      END                                                               
      SUBROUTINE DPEXNT(X,X1,X2,A)                                      
C                                                                       
C     DOUBLE PRECISION VERSION OF THE ROUTINE EXPINT                    
C                                                                       
      IMPLICIT DOUBLE PRECISION(A-H, O-Z)                               
C     EXPONENTIAL INTERPOLATION                                         
CJ DB                                                                   
         IF(X1.LT.0.)X1=0.                                              
         IF(X2.LT.0.)X2=0.                                              
CJ                                                                      
      IF(X1.EQ.0.0 .OR. X2.EQ.0.0)  GO TO 100                           
      X = X1*(X2/X1)**A                                                 
      RETURN                                                            
  100 X = X1+(X2-X1)*A                                                  
      RETURN                                                            
      END                                                               
      SUBROUTINE DPFILL(HA,HB,JNEXT)                                    
C********************************************************************   
C     THIS SUBROUTINE DEFINES THE ATMOSPHERIC BOUNDARIES OF THE PATH    
C     FROM HA TO HB AND INTERPOLATES (EXTRAPOLATES) THE DENSITIES TO    
C     THESE BOUNDARIES ASSUMING THE DENSITIES VARY EXPONENTIALLY        
C     WITH HEIGHT                                                       
C********************************************************************   
      INTEGER I,J,JNEXT,IA,IB,I2,K,I1                                   
      LOGICAL LSMALL                                                    
      DOUBLE PRECISION ZP,PP,TP,RFNDXP,                                 
     $     SP,PPSUM,TPSUM,RHOPSM,DENP,AMTP                              
      INCLUDE 'PARAM.LST'                                               
      DOUBLE PRECISION HA,HB,Z(LAYDIM),P(LAYDIM),T(LAYDIM),             
     1  DRFNDX(LAYDIM),DDNSTY(KMAX,LAYDIM),A                            
C                                                                       
C                                                                       
C                                                                       
C     CONVENTION                                                        
C     MMOLX = MAXIMUM NUMBER OF NEW SPECIES (IDENTIFIED BY "X")         
C     MMOL  = MAXIMUM NUMBER OF OLD SPECIES (W/O SUFFIX "X")            
C     THESE DEFINE THE MAXIMUM ARRAY SIZES.                             
C                                                                       
C     THE ACTUAL NUMBER OF PARAMETERS ARE:                              
C     NSPC = ACTUAL NUMBER OF OLD SPECIES (12), CAN'T EXCEED MMOL       
C     NSPECX = ACTUAL NUMBER OF "X" SPECIES,     CAN'T EXCEED MMOLX     
C                                                                       
C     PARAMETER KMAX DENOTES THE NUMBER OF MODTRAN "SPECIES".           
C     THIS INCLUDES THE 12 ORIGINAL BAND MODEL PARAMETER MOLECULES      
C     PLUS A HOST OF OTHER ABSORPTION AND/OR SCATTERING SOURCES.        
C                                                                       
      DOUBLE PRECISION DI1X, DI2X, DJNXTX                               
C                                                                       
      COMMON /MODELX/ DNSTYX(MMOLX,LAYDIM)                              
      COMMON /RFRPTX/ DENPX(MMOLX,LAYDIM+1),AMTPX(MMOLX,LAYDIM+1)       
C                                                                       
C                                                                       
C                                                                       
C     SSI COMMENTS ON DOUBLE PRECISION VARIABLES:                       
C     RFRPTH IS THE OLD COMMON BLOCK IN SINGLE PRECISION.               
C     DPRFRP IS THE SAME COMMON BLOCK IN DOUBLE PRECISION; IT IS NEW.   
C     IN THIS ROUTINE SP IS USED AS A PREFIX TO DENOTE THE              
C     SINGLE PRECISION VARIABLES OF RFRPTH.                             
C     THE FOLLOWING ARE THE EXCEPTIONS:                                 
C     SPRFN  STANDS FOR THE OLD SINGLE PRECISION RFNDXP                 
C     SPPPSU STANDS FOR THE OLD SINGLE PRECISION PPSUM                  
C     SPTPSU STANDS FOR THE OLD SINGLE PRECISION TPSUM                  
C     SPRHOP STANDS FOR THE OLD SINGLE PRECISION RHOPSM                 
C     THE VARIABLES OF THE DOUBLE PRECISION BLOCK DPRFRP HAVE THE       
C     SAME NAMES AS THOSE OF THE ORIGINAL SINGLE PRECISION BLOCK;       
C     THAT IS, WITHOUT ANY PREFIXES.                                    
C                                                                       
C     VARIABLES IN THE COMMON BLOCK /MODEL/ ARE TEMPORARILY STORED      
C     IN DOUBLE PRECISION ARRAYS FOR DPFILL CALCULATIONS:               
C       ZM => Z, PM => P, TM => T, RFNDX => DRFNDX & DENSTY => DDNSTY   
C                                                                       
C     SOME OTHER VARIABLES WERE DECLARED IN DOUBLE PRECISION.           
C     THEIR SP COUNTERPARTS WERE PREFIXED WITH "SP".                    
C     SINCE THESE DO NOT INVOLVE COMMON BLOCKS NOTHING MORE ABOUT       
C     THEM IS SAID.  SEE THE DECLARATIONS ABOVE FOR THE SPECIFIC        
C     VARIABLES.                                                        
C                                                                       
C     FILE UNIT NUMBERS                                                 
C       IRD      MODTRAN INPUT FILE, tape5, UNIT NUMBER (1).            
C       IPR      MODTRAN STANDARD OUTPUT FILE, tape6, UNIT NUMBER (2).  
C       IPU      MODTRAN SPECTRAL DATA FILE, tape7, UNIT NUMBER (7).    
C       NPR      PRINTOUT LEVEL SWITCH (1=small,0=normal,-1=large).     
C       IPR1     MODTRAN FLUX OUTPUT FILE, tape8, UNIT NUMBER (8).      
C       ISCRCH   MULTIPLE SCATTERING SCRATCH FILE UNIT NUMBER (10).     
C       ITB      MOLECULAR BAND MODEL PARAMETER FILE UNIT NUMBER (9).   
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                           
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                       
      REAL ZM,PM,TM,RFNDX,DENSTY                                        
      COMMON/MODEL/ZM(LAYDIM),PM(LAYDIM),TM(LAYDIM),                    
     1  RFNDX(LAYDIM),DENSTY(KMAX,LAYDIM)                               
      INTEGER IKMAX,ML,ISSGEO,IMULT                                     
      COMMON/CNTRL/IKMAX,ML,ISSGEO,IMULT                                
      COMMON /RFRPTH/ SPZP(LAYDIM+1),SPPP(LAYDIM+1),SPTP(LAYDIM+1),     
     $ SPRFN(LAYDIM+1),SPSP(LAYDIM+1),SPPPSU(LAYDIM+1),SPTPSU(LAYDIM+1) 
     $ ,SPRHOP(LAYDIM+1),SPDENP(KMAX,LAYDIM+1),SPAMTP(KMAX,LAYDIM+1)    
      COMMON /DPRFRP/ ZP(LAYDIM+1),PP(LAYDIM+1),TP(LAYDIM+1),           
     $ RFNDXP(LAYDIM+1),SP(LAYDIM+1), PPSUM(LAYDIM+1),TPSUM(LAYDIM+1),  
     $ RHOPSM(LAYDIM+1),DENP(KMAX,LAYDIM+1), AMTP(KMAX,LAYDIM+1)        
      COMMON /SMALL2/LSMALL                                             
      DO 9 I=1, LAYDIM                                                  
         Z(I)=DBLE(ZM(I))                                               
         P(I)=DBLE(PM(I))                                               
         T(I)=DBLE(TM(I))                                               
         DRFNDX(I)=DBLE(RFNDX(I))                                       
         DO 9999 J=1, KMAX                                              
            DDNSTY(J,I)=DBLE(DENSTY(J,I))                               
 9999    CONTINUE                                                       
C        FOR CFC'S, WE ALWAYS USE SINGLE PRECISION VARIABLES, SO NO     
C        NEED FOR THE ABOVE LOOP FOR CFC'S.                             
C                                                                       
 9    CONTINUE                                                          
C                                                                       
      DO 99 I=1, LAYDIM+1                                               
         ZP(I)=DBLE(SPZP(I))                                            
         PP(I)=DBLE(SPPP(I))                                            
         TP(I)=DBLE(SPTP(I))                                            
         RFNDXP(I)=DBLE(SPRFN(I))                                       
         DO 999 J=1, KMAX                                               
            DENP(J,I)=DBLE(SPDENP(J,I))                                 
 999     CONTINUE                                                       
C        FOR CFC'S, WE ALWAYS USE SINGLE PRECISION VARIABLES, SO NO     
C        NEED FOR THE ABOVE LOOP FOR CFC'S.                             
C                                                                       
 99   CONTINUE                                                          
C                                                                       
C     IF(HA.GE.HB .AND. LSMALL .NE. .TRUE.) THEN                        
      IF(HA.GE.HB .AND.    (.NOT. LSMALL )) THEN                        
Calley         WRITE(IPR,22) HA,HB,JNEXT                                
         IF (IPR .GT. 0) WRITE(IPR,22) HA,HB,JNEXT                      
 22      FORMAT('0SUBROUTINE DPFILL- ERROR, HA .GE. HB',//,             
     $        10X,'HA, HB, JNEXT = ',2E25.15,I6)                        
         STOP                                                           
      ENDIF                                                             
C***  FIND Z(IA):  THE SMALLEST Z.GT.HA                                 
      DO 100 IA=1,ML                                                    
         IF(HA.LT.Z(IA))GOTO110                                         
 100  CONTINUE                                                          
      IA=ML+1                                                           
      IB=IA                                                             
      GO TO 130                                                         
C***  FIND Z(IB):  THE SMALLEST Z.GE.HB                                 
 110  CONTINUE                                                          
      DO 120 IB=IA,ML                                                   
         IF(HB-Z(IB).LE..0001)GOTO130                                   
 120  CONTINUE                                                          
      IB=ML+1                                                           
 130  CONTINUE                                                          
C***  INTERPOLATE DENSITIES TO HA,HB                                    
      ZP(JNEXT)=HA                                                      
      I2=IA                                                             
      IF(I2.EQ.1) I2=2                                                  
      IF(I2.GT.ML) I2=ML                                                
      I1=I2-1                                                           
      A=(HA-Z(I1))/(Z(I2)-Z(I1))                                        
      CALL DPEXNT(PP(JNEXT),P(I1),P(I2),A)                              
      TP(JNEXT)=T(I1)+(T(I2)-T(I1))*A                                   
      CALL DPEXNT(RFNDXP(JNEXT),DRFNDX(I1),DRFNDX(I2),A)                
      DO 140 K=1,KMAX                                                   
          IF(K.EQ.66 .OR. K.EQ.67 .OR. K.EQ.16)THEN                     
C                                                                       
C             LINEARLY INTERPOLATE CLOUD DENSITIES                      
              DENP(K,JNEXT)=DDNSTY(K,I1)+A*(DDNSTY(K,I2)-DDNSTY(K,I1))  
          ELSE                                                          
C                                                                       
C             EXPONENTIALLY INTERPOLATE                                 
              CALL DPEXNT(DENP(K,JNEXT),DDNSTY(K,I1),DDNSTY(K,I2),A)    
          ENDIF                                                         
 140  CONTINUE                                                          
C                                                                       
      DO 145 KX=1, NSPECX                                               
C        STORE SINGLE PRECISION VARIABLES IN DOUBLE PRECISION.          
         DI1X=DBLE(DNSTYX(KX,I1))                                       
         DI2X=DBLE(DNSTYX(KX,I2))                                       
         CALL DPEXNT(DJNXTX,DI1X,DI2X,A)                                
C        BACK TO SINGLE PRECISION                                       
         DENPX(KX,JNEXT)=REAL(DJNXTX)                                   
 145  CONTINUE                                                          
C                                                                       
      IF(IA.NE.IB) THEN                                                 
C***     FILL IN DENSITIES BETWEEN HA AND HB                            
         I1=IA                                                          
         I2=IB-1                                                        
         DO 151 I=I1,I2                                                 
            JNEXT=JNEXT+1                                               
            ZP(JNEXT)=Z(I)                                              
            PP(JNEXT)=P(I)                                              
            TP(JNEXT)=T(I)                                              
            RFNDXP(JNEXT)=DRFNDX(I)                                     
            DO 150 K=1,KMAX                                             
               DENP(K,JNEXT)=DDNSTY(K,I)                                
 150        CONTINUE                                                    
C                                                                       
            DO 155 KX=1,NSPECX                                          
               DENPX(KX,JNEXT)=DNSTYX(KX,I)                             
 155        CONTINUE                                                    
C                                                                       
 151     CONTINUE                                                       
      ENDIF                                                             
C***  INTERPOLATE THE DENSITIES TO HB                                   
      JNEXT=JNEXT+1                                                     
      ZP(JNEXT)=HB                                                      
      I2=IB                                                             
      IF(I2.EQ.1) I2=2                                                  
      IF(I2.GT.ML) I2=ML                                                
      I1=I2-1                                                           
      A=(HB-Z(I1))/(Z(I2)-Z(I1))                                        
      CALL DPEXNT(PP(JNEXT),P(I1),P(I2),A)                              
      TP(JNEXT)=T(I1)+(T(I2)-T(I1))*A                                   
      CALL DPEXNT(RFNDXP(JNEXT),DRFNDX(I1),DRFNDX(I2),A)                
      DO 170 K=1,KMAX                                                   
          IF(K.EQ.66 .OR. K.EQ.67 .OR. K.EQ.16)THEN                     
C                                                                       
C             LINEARLY INTERPOLATE CLOUD DENSITIES                      
              DENP(K,JNEXT)=DDNSTY(K,I1)+A*(DDNSTY(K,I2)-DDNSTY(K,I1))  
          ELSE                                                          
C                                                                       
C             EXPONENTIALLY INTERPOLATE                                 
              CALL DPEXNT(DENP(K,JNEXT),DDNSTY(K,I1),DDNSTY(K,I2),A)    
          ENDIF                                                         
 170  CONTINUE                                                          
C                                                                       
      DO 175 KX=1, NSPECX                                               
C        STORE SINGLE PRECISION VARIABLES IN DOUBLE PRECISION.          
         DI1X=DBLE(DNSTYX(KX,I1))                                       
         DI2X=DBLE(DNSTYX(KX,I2))                                       
         CALL DPEXNT(DJNXTX, DI1X, DI2X, A)                             
C        BACK TO SINGLE PRECISION                                       
         DENPX(KX,JNEXT)=REAL(DJNXTX)                                   
 175  CONTINUE                                                          
C                                                                       
      DO 1 I=1, LAYDIM                                                  
         ZM(I)=REAL(Z(I))                                               
         PM(I)=REAL(P(I))                                               
         TM(I)=REAL(T(I))                                               
         RFNDX(I)=REAL(DRFNDX(I))                                       
         DO 1111 J=1, KMAX                                              
            DENSTY(J,I)=REAL(DDNSTY(J,I))                               
 1111    CONTINUE                                                       
C        NO NEED FOR A LOOP CORRESPONDING TO ABOVE FOR CFC'S.           
 1    CONTINUE                                                          
      DO 11 I=1, LAYDIM+1                                               
         SPZP(I)=REAL(ZP(I))                                            
         SPPP(I)=REAL(PP(I))                                            
         SPTP(I)=REAL(TP(I))                                            
         SPRFN(I)=REAL(RFNDXP(I))                                       
         DO 111 J=1, KMAX                                               
            SPDENP(J,I)=REAL(DENP(J,I))                                 
 111     CONTINUE                                                       
C        NO NEED FOR A LOOP CORRESPONDING TO ABOVE FOR CFC'S.           
 11   CONTINUE                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE DPFISH(H,SH,GAMMA)                                     
C                                                                       
C     DOUBLE PRECISION VERSION OF THE PREVIOUS ROUTINE FINDSH.  GIVEN AN
C     ALTITUDE H, THIS SUBROUTINE FINDS THE LAYER BOUNDARIES ZM(I1) AND 
C     ZM(I2) WHICH CONTAIN H, THEN CALCULATES THE SCALE HEIGHT (SH) AND 
C     THE VALUE AT THE GROUND (GAMMA+1) FOR THE INDEX OF REFRACTION.    
C                                                                       
C     DECLARE ROUTINE ARGUMENTS:                                        
      DOUBLE PRECISION H,SH,GAMMA                                       
C                                                                       
C     INCLUDE PARAMETERS:                                               
      INCLUDE 'PARAM.LST'                                               
C                                                                       
C     LIST COMMONS:                                                     
      INTEGER IKMAX,ML,ISSGEO,IMULT                                     
      COMMON/CNTRL/IKMAX,ML,ISSGEO,IMULT                                
      REAL ZM,PM,TM,RFNDX,DENSTY                                        
      COMMON/MODEL/ZM(LAYDIM),PM(LAYDIM),TM(LAYDIM),                    
     1  RFNDX(LAYDIM),DENSTY(KMAX,LAYDIM)                               
C                                                                       
C     DECLARE LOCAL VARIABLES:                                          
      DOUBLE PRECISION Z1,Z2,RFNDX1,RFNDX2                              
C                                                                       
C     LOOP OVER LAYERS                                                  
      I1=1                                                              
      DO 10 I2=2,ML-1                                                   
          IF(ZM(I2).GE.REAL(H))GOTO20                                   
   10 I1=I2                                                             
      I2=ML                                                             
   20 CONTINUE                                                          
      Z1=DBLE(ZM(I1))                                                   
      Z2=DBLE(ZM(I2))                                                   
      RFNDX1=DBLE(RFNDX(I1))                                            
      RFNDX2=DBLE(RFNDX(I2))                                            
      CALL DPSCHT(Z1,Z2,RFNDX1,RFNDX2,SH,GAMMA)                         
      RETURN                                                            
      END                                                               
      SUBROUTINE DPFNMN(H1,ANGLE,H2,LENN,ITER,HMIN,PHI,IERROR)          
      INCLUDE 'PARAM.LST'                                               
C***********************************************************************
C     DOUBLE PRECISION VERSION OF THE FORMER ROUTINE FNDHMN.            
C                                                                       
C     THIS SUBROUTINE CALCULATES THE MINIMUM ALTITUDE HMIN ALONG        
C     THE REFRACTED PATH AND THE FINAL ZENITH ANGLE PHI.                
C     THE PARAMETER LENN INDICATES WHETHER THE PATH GOES THROUGH        
C     A TANGENT HEIGHT (LENN=1) OR NOT (LENN=0).  IF ANGLE > 90 AND     
C     H1 > H2, THEN LENN CAN EITHER BE 1 OR 0, AND THE CHOICE IS        
C     LEFT TO THE USER.                                                 
C     THE (INDEX OF REFRACTION - 1.0) IS MODELED AS AN EXPONENTIAL      
C     BETWEEN THE LAYER BOUNDARIES, WITH A SCALE HEIGHT SH AND AN       
C     AMOUNT AT THE GROUND GAMMA.                                       
C     CPATH IS THE REFRACTIVE CONSTANT FOR THIS PATH AND                
C     EQUALS  INDEX(H1)*(RE+H1)*SIN(ANGLE).                             
C***********************************************************************
      INTEGER LENN,ITER,IERROR,N                                        
      DOUBLE PRECISION H1,ANGLE,H2,HMIN,PHI,CRFRCT,H,DPANDX,SH,TANHT,   
     1  GAMMA,CPATH,CH2,CMIN,HT1,CT1,HT2,CT2,HT3,CT3,DC,HT,HTAN,ZMIN,   
     2  DPRE,DPDH                                                       
      REAL GNDALT                                                       
      COMMON/GRAUND/GNDALT                                              
C                                                                       
C     HTAN IS USED CALCULATE TANGENT HEIGHT FOR PRINTING ERROR MESSAGES 
C     HTAN IS NOT MEANT TO REPLACE HT WHICH HOLDS THE TANGENT HEIGHT IN 
C     THIS ROUTINE AS FAR AS MODTRAN GOES.  FOR SOME INPUT ERRORS       
C     HT IS CALCULATED.                                                 
C                                                                       
C     FILE UNIT NUMBERS                                                 
C       IRD      MODTRAN INPUT FILE, tape5, UNIT NUMBER (1).            
C       IPR      MODTRAN STANDARD OUTPUT FILE, tape6, UNIT NUMBER (2).  
C       IPU      MODTRAN SPECTRAL DATA FILE, tape7, UNIT NUMBER (7).    
C       NPR      PRINTOUT LEVEL SWITCH (1=small,0=normal,-1=large).     
C       IPR1     MODTRAN FLUX OUTPUT FILE, tape8, UNIT NUMBER (8).      
C       ISCRCH   MULTIPLE SCATTERING SCRATCH FILE UNIT NUMBER (10).     
C       ITB      MOLECULAR BAND MODEL PARAMETER FILE UNIT NUMBER (9).   
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                           
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                       
      REAL RE,ZMAX                                                      
      INTEGER IPATH                                                     
      COMMON/PARMTR/RE,ZMAX,IPATH                                       
      INTEGER IKMAX,ML,ISSGEO,IMULT                                     
      COMMON/CNTRL/IKMAX,ML,ISSGEO,IMULT                                
      INTEGER MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT                     
      REAL TBOUND,SALB                                                  
      LOGICAL MODTRN                                                    
      COMMON/CARD1/MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB,   
     1  MODTRN                                                          
      REAL ETA                                                          
      DOUBLE PRECISION DPDEG                                            
      DATA DPDH/1./,ETA/5.0E-8/,DPDEG/57.2957795131D0/                  
C***  ETA MAY BE TOO SMALL FOR SOME COMPUTERS. TRY 1.0E-7 FOR 32 BIT    
C***  WORD MACHINES                                                     
C     CRFRCT IS REFRACTIVE CONSTANT FOR THE PATH                        
      CRFRCT(H) = (DPRE+H)*DPANDX(H,SH,GAMMA)                           
C                                                                       
      DPRE=DBLE(RE)                                                     
      N = 0                                                             
      CALL DPFISH(H1,SH,GAMMA)                                          
      CPATH = CRFRCT(H1)*SIN(ANGLE/DPDEG)                               
      CALL DPFISH(H2,SH,GAMMA)                                          
      CH2 = CRFRCT(H2)                                                  
      IF(ABS(CPATH/CH2).LE.1.0) THEN                                    
         IF(ANGLE.LE.90.0)  THEN                                        
            LENN = 0                                                    
            HMIN = H1                                                   
C***        CALCULATE THE ZENITH ANGLE PHI AT H2                        
            PHI = ASIN(CPATH/CH2)*DPDEG                                 
            IF(ANGLE.LE.90.0 .OR. LENN.EQ.1)PHI=DBLE(180.)-PHI          
            RETURN                                                      
         ENDIF                                                          
         IF(H1.LE.H2)  LENN = 1                                         
         IF(LENN.NE.1)  THEN                                            
            LENN = 0                                                    
            HMIN = H2                                                   
C***        CALCULATE THE ZENITH ANGLE PHI AT H2                        
            PHI = ASIN(CPATH/CH2)*DPDEG                                 
            IF(ANGLE.LE.90. .OR. LENN.EQ.1)PHI=DBLE(180.)-PHI           
            RETURN                                                      
         ENDIF                                                          
C***     LONG PATH THROUGH A TANGENT HEIGHT.                            
C***     SOLVE ITERATIVELY FOR THE TANGENT HEIGHT HT.                   
C***     HT IS THE HEIGHT FOR WHICH  INDEX(HT)*(DPRE+HT) = CPATH.       
         ZMIN=DBLE(GNDALT)                                              
         CALL DPFISH(ZMIN,SH,GAMMA)                                     
         CMIN = CRFRCT(ZMIN)                                            
C***     FOR BETA CASES (ITER>0), ALLOW FOR HT < 0.0                    
         IF(ITER.NE.0 .OR. CPATH.GE.CMIN)  THEN                         
            HT1 = (DPRE+H1)*SIN(ANGLE/DPDEG)-DPRE                       
            CALL DPFISH(HT1,SH,GAMMA)                                   
            CT1 = CRFRCT(HT1)                                           
            HT2 = HT1-DPDH                                              
            CALL DPFISH(HT2,SH,GAMMA)                                   
            CT2 = CRFRCT(HT2)                                           
C***        ITERATE TO FIND HT                                          
            N = 2                                                       
 120        CONTINUE                                                    
            IF(CT2 .NE. CT1) THEN                                       
               N = N+1                                                  
               HT3 = HT2+(HT2-HT1)*(CPATH-CT2)/(CT2-CT1)                
               CALL DPFISH(HT3,SH,GAMMA)                                
               CT3 = CRFRCT(HT3)                                        
               DC = CPATH-CT3                                           
               IF(ABS((CPATH-CT3)/CPATH).LT.ETA) THEN                   
                  HT = HT3                                              
                  HMIN = HT                                             
C***              CALCULATE THE ZENITH ANGLE PHI AT H2                  
                  PHI = ASIN(CPATH/CH2)*DPDEG                           
                  IF(ANGLE.LE.90. .OR. LENN.EQ.1)PHI=DBLE(180.)-PHI     
                  RETURN                                                
               ENDIF                                                    
               IF(N.GT.15) THEN                                         
                  DC = CPATH-CT3                                        
Calley                  WRITE(IPR,24)  N,CPATH,CT3,DC,HT3               
                  IF (IPR .GT. 0) WRITE(IPR,24)  N,CPATH,CT3,DC,HT3     
                  GO TO 25                                              
               ENDIF                                                    
               HT1 = HT2                                                
               CT1 = CT2                                                
               HT2 = HT3                                                
               CT2 = CT3                                                
               GO TO 120                                                
            ENDIF                                                       
            HT3 = HT2                                                   
            HT = HT3                                                    
            HMIN = HT                                                   
C***        CALCULATE THE ZENITH ANGLE PHI AT H2                        
            PHI = ASIN(CPATH/CH2)*DPDEG                                 
            IF(ANGLE.LE.90. .OR. LENN.EQ.1)PHI=DBLE(180.)-PHI           
            RETURN                                                      
         ENDIF                                                          
C                                                                       
C        RETURN WITH AN ERROR FOR PATHS TO THE SUN (OR MOON).           
         IF(ISSGEO.NE.0 .OR. IEMSCT.EQ.3)THEN                           
            IERROR=-5                                                   
            RETURN                                                      
         ENDIF                                                          
C***     TANGENT PATH INTERSECTS EARTH                                  
Calley         WRITE(IPR,'(///2(A,F11.3),A,//9X,2(A,F11.3),A,I2,A)')    
         IF (IPR .GT. 0) WRITE(IPR,                                     
     +                   '(///2(A,F11.3),A,//9X,2(A,F11.3),A,I2,A)')    
     1     ' TANGENT PATH WITH H1 =',H1,' KM AND ANGLE =',ANGLE,        
     2     ' DEG INTERSECTS THE EARTH.',' H2 HAS BEEN RESET FROM',H2,   
     3     ' KM TO',ZMIN,' KM, AND LEN HAS BEEN RESET FROM',LENN,' TO 0'
         H2 = ZMIN                                                      
         HMIN = ZMIN                                                    
         LENN = 0                                                       
         CH2 = CMIN                                                     
C***     CALCULATE THE ZENITH ANGLE PHI AT H2                           
         PHI = ASIN(CPATH/CH2)*DPDEG                                    
         IF(ANGLE.LE.90. .OR. LENN.EQ.1)PHI=DBLE(180.)-PHI              
         RETURN                                                         
      ENDIF                                                             
C                                                                       
C***  H2 LT TANGENT HEIGHT FOR THIS H1 AND ANGLE                        
      IERROR = 2                                                        
 25   HTAN=TANHT(CPATH,H1)                                              
Calley      WRITE(IPR,20)HTAN                                           
      IF (IPR .GT. 0) WRITE(IPR,20)HTAN                                 
C                                                                       
 20   FORMAT('0H2 IS LESS THAN THE TANGENT HEIGHT FOR THIS PATH AND ',  
     $'CAN''T BE REACHED;',/,' TANGENT HEIGHT = ',1X,F7.3,/)            
 24   FORMAT(///,'0FROM SUBROUTINE FNDHMN :',//,                        
     $     10X,'THE PROCEDURE TO FIND THE TANGENT HEIGHT DID NOT ',     
     $     'CONVERGE AFTER ',I3,'  ITERATIONS',//,                      
     $     10X,'CPATH   = ',F12.5,' KM',//,10X,'CT3     = ',F12.5,' KM',
     $     //,10X,'DC      = ',E12.3,' KM',//,                          
     $     10X,'HT3     = ',F12.5,' KM')                                
      END                                                               
      SUBROUTINE DPLAYR(J,SINAI,COSAI,CPATH,SH,GAMMA,IAMT,S,BEND,RNG)   
      INCLUDE 'PARAM.LST'                                               
C                                                                       
C     DOUBLE PRECISION VERSION OF THE PREVIOUS ROUTINE "LAYER"          
C*****************************************************************      
C     THIS SUBROUTINE CALCULATES THE REFRACTED PATH FROM Z1 TO Z2       
C     WITH THE SIN OF THE INITIAL INCIDENCE ANGLE SINAI                 
C*****************************************************************      
      DOUBLE PRECISION ZP,PP,TP,RFNDXP,SP,PPSUM,TPSUM,RHOPSM,DENP,      
     $     AMTP,DPRE                                                    
      DOUBLE PRECISION HDEN(KMAX),DENA(KMAX),DENB(KMAX),DPANDX          
      REAL EPSILN,SPZP,SPPP,SPTP,SPDENP,SPSP,SPPPSU,SPTPSU,SPAMTP       
      DOUBLE PRECISION Z1,Z2,H1,R1,DHMIN,SINAI1,COSAI1,Y1,Y3,X1,SINAI,  
     $     COSAI,CPATH,SH,GAMMA,BEND,RATIO1,S,DSDX1,DBNDX1,PA,PB,TA,    
     $     TB,RHOA,RHOB,DZ,HP,HRHO,DH,H3,R3,H2,R2,SINAI2,SINAI3,RATIO2, 
     $     RATIO3,COSAI3,X3,DX,W1,W2,W3,COSAI2,X2,D31,D32,D21,          
     $     DSDX2,DSDX3,DS,DBEND,DSDZ,DHHP,DHRH,H3Z1,                    
     $     DPRARF,DBNDX2,DBNDX3,RNG                                     
      INTEGER N,J,IAMT,K                                                
      LOGICAL LSMALL                                                    
C                                                                       
C     SSI COMMENTS ON DOUBLE PRECISION VARIABLES:                       
C     RFRPTH IS THE OLD COMMON BLOCK IN SINGLE PRECISION.               
C     DPRFRP IS THE SAME COMMON BLOCK IN DOUBLE PRECISION; IT IS NEW.   
C     IN THIS ROUTINE SP IS USED AS A PREFIX TO DENOTE THE              
C     SINGLE PRECISION VARIABLES OF RFRPTH.                             
C     THE FOLLOWING ARE THE EXCEPTIONS:                                 
C     SPRFN  STANDS FOR THE OLD SINGLE PRECISION RFNDXP                 
C     SPPPSU STANDS FOR THE OLD SINGLE PRECISION PPSUM                  
C     SPTPSU STANDS FOR THE OLD SINGLE PRECISION TPSUM                  
C     SPRHOP STANDS FOR THE OLD SINGLE PRECISION RHOPSM                 
C     THE VARIABLES OF THE DOUBLE PRECISION BLOCK DPRFRP HAVE THE       
C     SAME NAMES AS THOSE OF THE ORIGINAL SINGLE PRECISION BLOCK;       
C     THAT IS, WITHOUT ANY PREFIXES.                                    
C                                                                       
      REAL RE,ZMAX                                                      
      INTEGER IPATH                                                     
      COMMON/PARMTR/RE,ZMAX,IPATH                                       
C                                                                       
C       PI       THE CONSTANT PI                                        
C       DEG      NUMBER OF DEGREES IN ONE RADIAN.                       
C       BIGNUM   MAXIMUM SINGLE PRECISION NUMBER.                       
C       BIGEXP   MAXIMUM EXPONENTIAL ARGUMENT WITHOUT OVERFLOW.         
      REAL PI,DEG,BIGNUM,BIGEXP                                         
      COMMON/CNSTNS/PI,DEG,BIGNUM,BIGEXP                                
      COMMON /RFRPTH/ SPZP(LAYDIM+1),SPPP(LAYDIM+1),SPTP(LAYDIM+1),     
     $     SPRFN(LAYDIM+1),SPSP(LAYDIM+1),                              
     $     SPPPSU(LAYDIM+1),SPTPSU(LAYDIM+1),SPRHOP(LAYDIM+1),          
     $     SPDENP(KMAX,LAYDIM+1),SPAMTP(KMAX,LAYDIM+1)                  
      COMMON /DPRFRP/ ZP(LAYDIM+1),PP(LAYDIM+1),TP(LAYDIM+1),           
     $     RFNDXP(LAYDIM+1),SP(LAYDIM+1),PPSUM(LAYDIM+1),               
     $     TPSUM(LAYDIM+1),RHOPSM(LAYDIM+1),DENP(KMAX,LAYDIM+1),        
     $     AMTP(KMAX,LAYDIM+1)                                          
      COMMON /SMALL2/LSMALL                                             
C                                                                       
C                                                                       
C                                                                       
C     CONVENTION                                                        
C     MMOLX = MAXIMUM NUMBER OF NEW SPECIES (IDENTIFIED BY "X")         
C     MMOL  = MAXIMUM NUMBER OF OLD SPECIES (W/O SUFFIX "X")            
C     THESE DEFINE THE MAXIMUM ARRAY SIZES.                             
C                                                                       
C     THE ACTUAL NUMBER OF PARAMETERS ARE:                              
C     NSPC = ACTUAL NUMBER OF OLD SPECIES (12), CAN'T EXCEED MMOL       
C     NSPECX = ACTUAL NUMBER OF "X" SPECIES,     CAN'T EXCEED MMOLX     
C                                                                       
C     PARAMETER KMAX DENOTES THE NUMBER OF MODTRAN "SPECIES".           
C     THIS INCLUDES THE 12 ORIGINAL BAND MODEL PARAMETER MOLECULES      
C     PLUS A HOST OF OTHER ABSORPTION AND/OR SCATTERING SOURCES.        
                                                                        
      REAL DENAX(MMOLX),DENBX(MMOLX),HDENX(MMOLX)                       
      COMMON /RFRPTX/ DENPX(MMOLX,LAYDIM+1),AMTPX(MMOLX,LAYDIM+1)       
C                                                                       
C       GCAIR   GAS CONSTANT FOR AIR [MB/(GM CM-3 K)].                  
      DOUBLE PRECISION GCAIR,DELTAS                                     
      DATA EPSILN/1.E-5/,GCAIR/2870.53/,DELTAS/5./                      
C***  INITIALIZE LOOP                                                   
      DPRE=DBLE(RE)                                                     
      N=0                                                               
      Z1=ZP(J)                                                          
      Z2=ZP(J+1)                                                        
      H1=Z1                                                             
      R1=DPRE+H1                                                        
      DHMIN=DBLE(.5)*DELTAS**2/R1                                       
      SINAI1=CPATH/(DPANDX(H1,SH,GAMMA)*R1)                             
      COSAI1=-SQRT((DBLE(1.)-SINAI1)*(DBLE(1.)+SINAI1))                 
      Y1=DBLE(.25)*COSAI1**2                                            
      Y1=2*Y1*(DBLE(1.)+Y1*(DBLE(1.)+Y1))                               
      Y3=DBLE(0.)                                                       
      X1=-R1*COSAI1                                                     
      RATIO1=R1/DPRARF(H1,SH,GAMMA)                                     
      DSDX1=DBLE(1.)/(DBLE(1.)-RATIO1*SINAI1**2)                        
      DBNDX1=DSDX1*SINAI1*RATIO1/R1                                     
      S=DBLE(0.)                                                        
      BEND=DBLE(0.)                                                     
      IF(IAMT.NE.2) THEN                                                
C***  INITIALIZE THE VARIABLES FOR THE CALCULATION OF THE               
C***  ABSORBER AMOUNTS                                                  
      PA=PP(J)                                                          
      PB=PP(J+1)                                                        
      TA=TP(J)                                                          
      TB=TP(J+1)                                                        
      RHOA=PA/(GCAIR*TA)                                                
      RHOB=PB/(GCAIR*TB)                                                
      DZ=ZP(J+1)-ZP(J)                                                  
      IF (LSMALL .AND. ABS(DZ) .LT. 1E-15) THEN                         
      DZ=1.D-20                                                         
      HP=1.D-20                                                         
      ELSEIF( .NOT. LSMALL .AND. (ABS(PB/PA) .GE. 0.99999)) THEN        
         HP=1.D-20                                                      
      ELSE                                                              
         HP=-DZ/LOG(PB/PA)                                              
      ENDIF                                                             
      IF(ABS(RHOB/RHOA-DBLE(1.)).GE.EPSILN)THEN                         
      HRHO=-DZ/LOG(RHOB/RHOA)                                           
      ELSE                                                              
         HRHO=1.D30                                                     
      ENDIF                                                             
      DO 105 K=1,KMAX+NSPECX                                            
         IF ( K .GT. KMAX) THEN                                         
            KX=K-KMAX                                                   
            DENAX(KX)=DENPX(KX,J)                                       
            DENBX(KX)=DENPX(KX,J+1)                                     
            IF(DENAX(KX).LE.0. .OR. DENBX(KX).LE.0.)THEN                
C***           USE LINEAR INTERPOLATION                                 
               HDENX(KX)=0.                                             
               GO TO 105                                                
            ENDIF                                                       
            IF(ABS(1.-DENAX(KX)/DENBX(KX)).GT.EPSILN)THEN               
C***           USE EXPONENTIAL INTERPOLATION                            
               HDENX(KX)=-REAL(DZ)/LOG(DENBX(KX)/DENAX(KX))             
            ELSE                                                        
C***           USE LINEAR INTERPOLATION                                 
               HDENX(KX)=0.                                             
            ENDIF                                                       
            GO TO 105                                                   
         ENDIF                                                          
C                                                                       
         DENA(K)=DENP(K,J)                                              
         DENB(K)=DENP(K,J+1)                                            
         HDEN(K)=DBLE(0.)                                               
         IF(DENA(K).GT.0. .AND. DENB(K).GT.0. .AND.                     
     1     K.NE.16 .AND. K.NE.66 .AND. K.NE.67 .AND.                    
     2     ABS(DENB(K)-DENA(K)).GT.DBLE(EPSILN)*DENB(K))                
     3     HDEN(K)=DZ/LOG(DENA(K)/DENB(K))                              
 105  CONTINUE                                                          
      ENDIF                                                             
C***                                                                    
C***  LOOP THROUGH PATH                                                 
C***  INTEGRATE PATH QUANTITIES USING QUADRATIC INTEGRATION WITH        
C***  UNEQUALLY SPACED POINTS                                           
C***                                                                    
 115  CONTINUE                                                          
      N=N+1                                                             
      DH=-DELTAS*COSAI1                                                 
      IF(DH.LT.DHMIN) DH=DHMIN                                          
      H3=H1+DH                                                          
      IF(H3.GT.Z2) H3=Z2                                                
      DH=H3-H1                                                          
      R3=DPRE+H3                                                        
      H2=H1+DH/2                                                        
      R2=DPRE+H2                                                        
      SINAI2=CPATH/(DPANDX(H2,SH,GAMMA)*R2)                             
      SINAI3=CPATH/(DPANDX(H3,SH,GAMMA)*R3)                             
      RATIO2=R2/DPRARF(H2,SH,GAMMA)                                     
      RATIO3=R3/DPRARF(H3,SH,GAMMA)                                     
      IF((DBLE(1.)-SINAI2).LE.EPSILN)THEN                               
C***  NEAR A TANGENT HEIGHT, COSAI=-SQRT(1-SINAI**2) LOSES              
C***  PRECISION.  USE THE FOLLOWING ALGORITHM TO GET COSAI.             
      Y3=Y1+(SINAI1*(DBLE(1.)-RATIO1)/R1                                
     1  +DBLE(4.)*SINAI2*(DBLE(1.)-RATIO2)/R2                           
     2  +SINAI3*(DBLE(1.)-RATIO3)/R3)*DH/DBLE(6.)                       
      IF(Y3.GE.0.)THEN                                                  
          COSAI3=-SQRT(Y3*(DBLE(2.)-Y3))                                
      ELSE                                                              
          Y3=DBLE(1.)-SINAI3                                            
          COSAI3=-SQRT(Y3*(DBLE(1.)+SINAI3))                            
      ENDIF                                                             
      X3=-R3*COSAI3                                                     
      DX=X3-X1                                                          
      W1=DBLE(.5)*DX                                                    
      W2=DBLE(.0)                                                       
      W3=DBLE(.5)*DX                                                    
      GO TO 118                                                         
C***                                                                    
      ENDIF                                                             
      COSAI2=-SQRT((DBLE(1.)-SINAI2)*(DBLE(1.)+SINAI2))                 
      COSAI3=-SQRT((DBLE(1.)-SINAI3)*(DBLE(1.)+SINAI3))                 
      X2=-R2*COSAI2                                                     
      X3=-R3*COSAI3                                                     
C***  CALCULATE WEIGHTS                                                 
      D31=X3-X1                                                         
      D32=X3-X2                                                         
      D21=X2-X1                                                         
      IF(D32.EQ.0. .OR. D21.EQ.0.)THEN                                  
      W1=DBLE(.5)*D31                                                   
      W2=DBLE(.0)                                                       
      W3=DBLE(.5)*D31                                                   
      ELSE                                                              
         W1=(2-D32/D21)*D31/6                                           
         W2=D31**3/(D32*D21*6)                                          
         W3=(2-D21/D32)*D31/6                                           
      ENDIF                                                             
C***                                                                    
 118  CONTINUE                                                          
      DSDX2=DBLE(1.)/(DBLE(1.)-RATIO2*SINAI2**2)                        
      DSDX3=DBLE(1.)/(DBLE(1.)-RATIO3*SINAI3**2)                        
      DBNDX2=DSDX2*SINAI2*RATIO2/R2                                     
      DBNDX3=DSDX3*SINAI3*RATIO3/R3                                     
C***  INTEGRATE                                                         
      DS=W1*DSDX1+W2*DSDX2+W3*DSDX3                                     
      IF(LSMALL)DS=RNG                                                  
      S=S+DS                                                            
      DBEND=W1*DBNDX1+W2*DBNDX2+W3*DBNDX3                               
      IF(LSMALL)DBEND=DBLE(0.)                                          
      BEND=BEND+DBEND                                                   
      IF(IAMT.NE.2)  THEN                                               
C***  CALCULATE AMOUNTS                                                 
      IF (LSMALL .AND. ABS(DZ) .LT. 1E-15 ) THEN                        
      DSDZ=DBLE(BIGEXP+1.)                                              
      DHHP=0                                                            
      ELSE                                                              
         DSDZ=DS/DH                                                     
         DHHP=DH/HP                                                     
      ENDIF                                                             
      IF(DHHP .LE. BIGEXP) THEN                                         
      PB=PA*EXP(-DHHP )                                                 
      ELSE                                                              
         PB=DBLE(0.)                                                    
      ENDIF                                                             
      DHRH=DH/HRHO                                                      
      IF(DHRH .LE. BIGEXP) THEN                                         
      RHOB=RHOA*EXP(-DHRH   )                                           
      ELSE                                                              
         RHOB=DBLE(0.)                                                  
      ENDIF                                                             
      IF((DH/HRHO).GE.EPSILN)  THEN                                     
      PPSUM(J)=PPSUM(J)+                                                
     $     DSDZ*(HP/(DBLE(1.)+HP/HRHO))*(PA*RHOA-PB*RHOB)               
      TPSUM(J)=TPSUM(J)+DSDZ*HP*(PA-PB)/GCAIR                           
      RHOPSM(J)=RHOPSM(J)+DSDZ*HRHO*(RHOA-RHOB)                         
      SPPPSU(J)=REAL(PPSUM(J))                                          
      SPTPSU(J)=REAL(TPSUM(J))                                          
      SPRHOP(J)=REAL(RHOPSM(J))                                         
      ELSE                                                              
         PPSUM(J)=PPSUM(J)+DS*(PA*RHOA+PB*RHOB)/2                       
         TPSUM(J)=TPSUM(J)+DS*(PA+PB)/GCAIR/2                           
         RHOPSM(J)=RHOPSM(J)+DS*(RHOA+RHOB)/2                           
         SPPPSU(J)=REAL(PPSUM(J))                                       
         SPTPSU(J)=REAL(TPSUM(J))                                       
         SPRHOP(J)=REAL(RHOPSM(J))                                      
      ENDIF                                                             
      DO 140 K=1,KMAX+NSPECX                                            
C                                                                       
         IF ( K .GT. KMAX) THEN                                         
            KX=K -KMAX                                                  
            IF(ABS(HDENX(KX)).EQ.0.)THEN                                
C***           LINEAR INTERPOLATION                                     
               DENBX(KX)=DENPX(KX,J)+                                   
     1           (DENPX(KX,J+1)-DENPX(KX,J))*REAL((H3-Z1)/DZ)           
               AMTPX(KX,J)=AMTPX(KX,J)+.5*(DENAX(KX)+DENBX(KX))*REAL(DS)
            ELSEIF(REAL(DH)/HDENX(KX).GE.EPSILN)THEN                    
C***           EXPONENTIAL INTERPOLATION                                
               H3Z1= (H3-Z1)/DBLE(HDENX(KX))                            
               IF(H3Z1.LE.BIGEXP)THEN                                   
                  DENBX(KX)=DENPX(KX,J)*EXP(-REAL(H3Z1))                
               ELSE                                                     
                  DENBX(KX)=0.                                          
               ENDIF                                                    
               AMTPX(KX,J)=AMTPX(KX,J)+                                 
     1           REAL(DSDZ)*HDENX(KX)*(DENAX(KX)-DENBX(KX))             
            ELSE                                                        
C***           LINEAR INTERPOLATION                                     
               DENBX(KX)=DENPX(KX,J)+                                   
     1           (DENPX(KX,J+1)-DENPX(KX,J))*REAL((H3-Z1)/DZ)           
               AMTPX(KX,J)=AMTPX(KX,J)+.5*(DENAX(KX)+DENBX(KX))*REAL(DS)
            ENDIF                                                       
            GO TO 140                                                   
         ENDIF                                                          
C                                                                       
         IF(ABS(HDEN(K)).EQ.0.)THEN                                     
C***        LINEAR INTERPOLATION                                        
            DENB(K)=DENP(K,J)+(DENP(K,J+1)-DENP(K,J))*(H3-Z1)/DZ        
            AMTP(K,J)=AMTP(K,J)+DBLE(.5)*(DENA(K)+DENB(K))*DS           
         ELSEIF(DH/HDEN(K).GE.EPSILN)THEN                               
C***        EXPONENTIAL INTERPOLATION                                   
            H3Z1= (H3-Z1)/HDEN(K)                                       
            IF(H3Z1 .LE.BIGEXP) THEN                                    
               DENB(K)=DENP(K,J)*EXP(-H3Z1)                             
            ELSE                                                        
               DENB(K)=DBLE(0.)                                         
            ENDIF                                                       
            AMTP(K,J)=AMTP(K,J)+DSDZ*HDEN(K)*(DENA(K)-DENB(K))          
         ELSE                                                           
C***        LINEAR INTERPOLATION                                        
            DENB(K)=DENP(K,J)+(DENP(K,J+1)-DENP(K,J))*(H3-Z1)/DZ        
            AMTP(K,J)=AMTP(K,J)+DBLE(.5)*(DENA(K)+DENB(K))*DS           
         ENDIF                                                          
         SPAMTP(K,J)=REAL(AMTP(K,J))                                    
 140     CONTINUE                                                       
         PA=PB                                                          
         RHOA=RHOB                                                      
         DO 145 K=1,KMAX+NSPECX                                         
            IF (K .LE. KMAX) THEN                                       
               DENA(K)=DENB(K)                                          
            ELSE                                                        
               DENAX(K-KMAX)=DENBX(K-KMAX)                              
            ENDIF                                                       
 145     CONTINUE                                                       
      ENDIF                                                             
      IF(H3.LT.Z2) THEN                                                 
         H1=H3                                                          
         R1=R3                                                          
         SINAI1=SINAI3                                                  
         RATIO1=RATIO3                                                  
         Y1=Y3                                                          
         COSAI1=COSAI3                                                  
         X1=X3                                                          
         DSDX1=DSDX3                                                    
         DBNDX1=DBNDX3                                                  
         IF (.NOT. LSMALL) GO TO 115                                    
      ENDIF                                                             
      SINAI=SINAI3                                                      
      COSAI=COSAI3                                                      
      SP(J)=S                                                           
      SPSP(J)=REAL(S)                                                   
      RETURN                                                            
      END                                                               
      DOUBLE PRECISION FUNCTION DPRARF(H,SH,GAMMA)                      
C                                                                       
C     DOUBLE PRECISION (DP) VERSION OF THE ROUTINE PREVIOUSLY CALLED    
C     RADREF.  COMPUTES THE RADIUS OF CURVATURE OF THE REFRACTED RAY FOR
C     HORIZONTAL PATH:  DPRARF = DPANDX/ D(DPANDX)/D(RADIUS)            
C     DPANDX = DOUBLE PRECISION (DP) VERSION OF ANDEX                   
      DOUBLE PRECISION H,SH,GAMMA,HSH                                   
C                                                                       
C       PI       THE CONSTANT PI                                        
C       DEG      NUMBER OF DEGREES IN ONE RADIAN.                       
C       BIGNUM   MAXIMUM SINGLE PRECISION NUMBER.                       
C       BIGEXP   MAXIMUM EXPONENTIAL ARGUMENT WITHOUT OVERFLOW.         
      REAL PI,DEG,BIGNUM,BIGEXP                                         
      COMMON/CNSTNS/PI,DEG,BIGNUM,BIGEXP                                
      IF(SH.EQ.0.)GOTO20                                                
      HSH=H/SH                                                          
      IF(HSH .GT. BIGEXP) GO TO 20                                      
      DPRARF=SH*(DBLE(1.)+EXP(HSH )/GAMMA)                              
      RETURN                                                            
   20 DPRARF=DBLE(BIGNUM)                                               
      RETURN                                                            
      END                                                               
      SUBROUTINE DPRFPA(H1,H2,ANGLE,PHI,LEN,HMIN,IAMT,BETA,RANGE,BENDNG)
C                                                                       
C     THIS ROUTINE, A DOUBLE PRECISION VERSION OF THE PREVIOUS ROUTINE  
C     "RFPATH", TRACES THE REFRACTED RAY FROM H1 WITH INITIAL ZENITH    
C     ANGLE "ANGLE" TO H2 WHERE THE ZENITH ANGLE IS PHI, AND CALCULATES 
C     THE ABSORBER AMOUNTS (IF IAMT.EQ.1) ALONG THE PATH.  IT STARTS    
C     FROM THE LOWEST POINT ALONG THE PATH (THE TANGENT HEIGHT HMIN     
C     IF LEN=1 OR HA=MIN(H1,H2) IF LEN=0) AND PROCEEDS TO THE HIGHEST   
C     POINT.  BETA AND RANGE ARE THE EARTH CENTERED ANGLE AND THE TOTAL 
C     DISTANCE RESPECTIVELY FOR THE REFRACTED PATH FROM H1 TO H2.       
C                                                                       
C     DECLARE INPUTS                                                    
      DOUBLE PRECISION H1,H2,ANGLE,PHI,HMIN,BETA,RANGE,BENDNG           
      INTEGER LEN,IAMT                                                  
C                                                                       
C     INCLUDE PARAMETERS                                                
      INCLUDE 'PARAM.LST'                                               
C                                                                       
C     LIST COMMONS                                                      
C                                                                       
C     FILE UNIT NUMBERS                                                 
C       IRD      MODTRAN INPUT FILE, tape5, UNIT NUMBER (1).            
C       IPR      MODTRAN STANDARD OUTPUT FILE, tape6, UNIT NUMBER (2).  
C       IPU      MODTRAN SPECTRAL DATA FILE, tape7, UNIT NUMBER (7).    
C       NPR      PRINTOUT LEVEL SWITCH (1=small,0=normal,-1=large).     
C       IPR1     MODTRAN FLUX OUTPUT FILE, tape8, UNIT NUMBER (8).      
C       ISCRCH   MULTIPLE SCATTERING SCRATCH FILE UNIT NUMBER (10).     
C       ITB      MOLECULAR BAND MODEL PARAMETER FILE UNIT NUMBER (9).   
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                           
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                       
      REAL RE,ZMAX                                                      
      INTEGER IPATH                                                     
      COMMON/PARMTR/RE,ZMAX,IPATH                                       
C                                                                       
C       PI       THE CONSTANT PI                                        
C       DEG      NUMBER OF DEGREES IN ONE RADIAN.                       
C       BIGNUM   MAXIMUM SINGLE PRECISION NUMBER.                       
C       BIGEXP   MAXIMUM EXPONENTIAL ARGUMENT WITHOUT OVERFLOW.         
      REAL PI,DEG,BIGNUM,BIGEXP                                         
      COMMON/CNSTNS/PI,DEG,BIGNUM,BIGEXP                                
      REAL SPZP,SPPP,SPTP,SPRFN,SPSP,SPPPSU,SPTPSU,SPRHOP,SPDENP,SPAMTP 
      COMMON/RFRPTH/SPZP(LAYDIM+1),SPPP(LAYDIM+1),                      
     1  SPTP(LAYDIM+1),SPRFN(LAYDIM+1),SPSP(LAYDIM+1),                  
     2  SPPPSU(LAYDIM+1),SPTPSU(LAYDIM+1),SPRHOP(LAYDIM+1),             
     3  SPDENP(KMAX,LAYDIM+1),SPAMTP(KMAX,LAYDIM+1)                     
      DOUBLE PRECISION ZP,PP,TP,RFNDXP,SP,PPSUM,TPSUM,RHOPSM,DENP,AMTP  
      COMMON/DPRFRP/ZP(LAYDIM+1),PP(LAYDIM+1),TP(LAYDIM+1),             
     1  RFNDXP(LAYDIM+1),SP(LAYDIM+1),PPSUM(LAYDIM+1),TPSUM(LAYDIM+1),  
     2  RHOPSM(LAYDIM+1),DENP(KMAX,LAYDIM+1),AMTP(KMAX,LAYDIM+1)        
      INTEGER JTURN,LJ                                                  
      REAL ATHETA,ADBETA,PHASFN,AH1,ARH,ANGSUN,TBBYS,PATMS,WPATHS       
      COMMON/SOLS/JTURN,LJ(LAYTWO+1),ATHETA(LAYDIM+1),                  
     1  ADBETA(LAYDIM+1),PHASFN(LAYTWO,4),AH1(LAYTWO),ARH(LAYTWO),      
     2  ANGSUN,TBBYS(LAYTHR,12),PATMS(LAYTHR,12),WPATHS(LAYTHR,KMAX)    
      INTEGER IKMAX,ML,ISSGEO,IMULT                                     
      COMMON/CNTRL/IKMAX,ML,ISSGEO,IMULT                                
C                                                                       
C     /PATH/                                                            
C       QTHETA  COSINE OF PATH ZENITH AT PATH BOUNDARIES.               
C       AHT     ALTITUDES AT PATH BOUNDARIES.                           
C       TPH     TEMPERATURE AT PATH BOUNDARIES.                         
C       IMAP    MAPPING FROM PATH SEGMENTS TO LAYERS.                   
      INTEGER IMAP                                                      
      REAL QTHETA,AHT,TPH                                               
      COMMON/PATH/QTHETA(LAYTWO),AHT(LAYTWO),TPH(LAYTWO),IMAP(LAYTWO)   
      DOUBLE PRECISION DHALFR,DPRNG2                                    
      COMMON/SMALL1/DHALFR,DPRNG2                                       
      LOGICAL LSMALL                                                    
      COMMON/SMALL2/LSMALL                                              
      DOUBLE PRECISION SMH1,SMH2,TRANGE                                 
      COMMON/SMALL4/SMH1,SMH2,TRANGE                                    
      LOGICAL LPRINT                                                    
      COMMON/CPRINT/LPRINT                                              
C                                                                       
C     DECLARE LOCAL VARIABLES                                           
      INTEGER IHIGH,KA,JD,J2A,J2B,JO,IORDER,                            
     1  MAX,I,JNEXT,JHA,JMAX,J2,J,IHLOW,J1                              
      DOUBLE PRECISION DPANDX,HA,HB,SH,GAMMA,CPATH,S,SINAI,THETA,DS,    
     1  DBEND,DBETA,COSAI,ANGLEA,RHOBAR,TBAR,PBAR,SAVCOS,SAVSIN,RNG,DPRE
C                                                                       
C     LIST DATA                                                         
      CHARACTER*2 HLOW(2)                                               
      DOUBLE PRECISION DPDEG                                            
      DATA HLOW/'H1','H2'/,DPDEG/57.2957795131D0/                       
      IF(LSMALL)THEN                                                    
C         IF (LSMALL) SET H1 AND H2 EQUAL TO DOUBLE PRECISION           
C         VALUES SAVED VIA COMMON STATEMENTS.                           
          H1=SMH1                                                       
          H2=SMH2                                                       
      ENDIF                                                             
      DPRE=DBLE(RE)                                                     
      DO 10 I=1,LAYDIM+1                                                
          ZP(I)=DBLE(SPZP(I))                                           
          RFNDXP(I)=DBLE(SPRFN(I))                                      
          PPSUM(I)=DBLE(SPPPSU(I))                                      
          TPSUM(I)=DBLE(SPTPSU(I))                                      
          RHOPSM(I)=DBLE(SPRHOP(I))                                     
   10 CONTINUE                                                          
      MAX=0                                                             
      IF(H1.LE.H2)THEN                                                  
          IORDER=1                                                      
          HA=H1                                                         
          HB=H2                                                         
          ANGLEA=ANGLE                                                  
      ELSE                                                              
          IORDER=-1                                                     
          HA=H2                                                         
          HB=H1                                                         
          ANGLEA=PHI                                                    
      ENDIF                                                             
      IF(LSMALL)THEN                                                    
          SAVSIN=SIN(ANGLEA/DPDEG)                                      
          SAVCOS=-COS(ANGLEA/DPDEG)                                     
          SINAI=SIN(ANGLEA/DPDEG)                                       
          COSAI=-COS(ANGLEA/DPDEG)                                      
      ENDIF                                                             
      JNEXT=1                                                           
CalleyIF(IAMT.EQ.1 .AND. NPR.LT.1 .AND. LPRINT)WRITE(IPR,'(/A,///(3A))')
      IF(IAMT.EQ.1 .AND. NPR.LT.1 .AND. LPRINT .AND. IPR.GT.0) WRITE(   
     +  IPR,'(/A,///(3A))')                                             
     1  '1CALCULATION OF THE REFRACTED PATH THROUGH THE ATMOSPHERE',    
     2  '  I START ALT   END ALT     THETA    DRANGE     RANGE',        
     3  '     DBETA      BETA       PHI     DBEND   BENDING',           
     4  '       PBAR    TBAR    RHOBAR',                                
     5  '       (KM)      (KM)       (DEG)     (KM)       (KM)',        
     6  '     (DEG)     (DEG)     (DEG)     (DEG)    (DEG) ',           
     7  '       (MB)     (K)  (GM/CM3)'                                 
      IF(LEN.EQ.1) THEN                                                 
C                                                                       
C         LONG PATH:  FILL IN THE SYMMETRIC PART FROM                   
C                     THE TANGENT HEIGHT TO HA                          
          CALL DPFILL(HMIN,HA,JNEXT)                                    
          JHA=JNEXT                                                     
      ENDIF                                                             
C                                                                       
C     IF LEN=0, OR IF LEN=1 TO FILL IN THE REMAINING PATH FROM HA TO HB 
      IF(HA.NE.HB)CALL DPFILL(HA,HB,JNEXT)                              
      JMAX=JNEXT                                                        
      IPATH=JMAX                                                        
C                                                                       
C     INTEGRATE EACH SEGMENT OF THE PATH                                
C     CALCULATE CPATH SEPERATELY FOR LEN=0,1                            
      IF(LEN.EQ.0)THEN                                                  
          CALL DPFISH(HA,SH,GAMMA)                                      
          CPATH=(DPRE+HA)*DPANDX(HA,SH,GAMMA)*SIN(ANGLEA/DPDEG)         
      ELSE IF (LEN .EQ. 1) THEN                                         
          CALL DPSCHT(ZP(1),ZP(2),RFNDXP(1),RFNDXP(2),SH,GAMMA)         
          CPATH=(DPRE+HMIN)*DPANDX(HMIN,SH,GAMMA)                       
      ENDIF                                                             
      BETA=DBLE(0.)                                                     
      S=DBLE(0.)                                                        
      BENDNG=DBLE(0.)                                                   
      IF(LEN.EQ.0) THEN                                                 
C                                                                       
C         SHORT PATH                                                    
C           ANGLEA   ZENITH ANGLE AT HA [DEG].                          
C           SINAI    SINE OF THE INCIDENT ANGLE.                        
C           COSAI    COSINE OF THE INCIDENT ANGLE.                      
          JNEXT=1                                                       
          THETA=ANGLEA                                                  
          SINAI=COS((DBLE(90.)-ANGLEA)/DPDEG)                           
          COSAI=-SIN((DBLE(90.)-ANGLEA)/DPDEG)                          
          IF(SINAI.GT. DBLE(1.))SINAI= DBLE(1.)                         
          IF(SINAI.LT.-DBLE(1.))SINAI=-DBLE(1.)                         
      ELSE                                                              
C                                                                       
C         DO SYMMETRIC PART,FROM TANGENT HEIGHT(HMIN) TO HA             
          IHLOW=1                                                       
          IF(IORDER.EQ.-1)IHLOW=2                                       
Calley          IF(IAMT.EQ.1 .AND. NPR.LT.1 .AND. LPRINT)WRITE(IPR,     
          IF(IAMT.EQ.1 .AND. NPR.LT.1 .AND. LPRINT .AND. IPR.GT.0)WRITE(
     +      IPR,                                                        
     1      '(T7,A,T17,A2,/T7,A,/)')'TANGENT',HLOW(IHLOW),'HEIGHT'      
          SINAI=DBLE(1.)                                                
          COSAI=DBLE(0.)                                                
          THETA=DBLE(90.)                                               
          J2=JHA-1                                                      
          RNG=DHALFR/J2                                                 
          DO 20 J=1,J2                                                  
              CALL DPSCHT(ZP(J),ZP(J+1),RFNDXP(J),RFNDXP(J+1),SH,GAMMA) 
              CALL DPLAYR(J,SINAI,COSAI,CPATH,                          
     1          SH,GAMMA,IAMT,DS,DBEND,RNG)                             
              IF(LSMALL)THEN                                            
                  SINAI=SAVSIN                                          
                  COSAI=SAVCOS                                          
              ENDIF                                                     
              IF(SINAI.GT. DBLE(1.))SINAI= DBLE(1.)                     
              IF(SINAI.LT.-DBLE(1.))SINAI=-DBLE(1.)                     
              DBEND=DBEND*DPDEG                                         
              PHI=ASIN(SINAI)*DPDEG                                     
              DBETA=THETA-PHI+DBEND                                     
              IF(LSMALL)DBETA=(2*DPDEG*SAVSIN*DS)/(ZP(J)+ZP(J+1)+2*DPRE)
              PHI=DBLE(180.)-PHI                                        
              S=S+DS                                                    
C                                                                       
C             SAVE REFRACTED RAY PATH LENGTH FOR MULTIPLE SCATTERING.   
              BENDNG=BENDNG+DBEND                                       
              BETA=BETA+DBETA                                           
              IF(IAMT.EQ.1)THEN                                         
                  PBAR=PPSUM(J)/RHOPSM(J)                               
                  TBAR=TPSUM(J)/RHOPSM(J)                               
                  RHOBAR=RHOPSM(J)/DS                                   
Calley                  IF(IAMT.EQ.1 .AND. NPR.LT.1 .AND. LPRINT)       
                  IF(IAMT.EQ.1.AND.NPR.LT.1.AND.LPRINT.AND.IPR.GT.0)    
     1              WRITE(IPR,'(I3,10F10.5,F11.5,F8.2,1PE10.3)')        
     2              J,ZP(J),ZP(J+1),THETA,DS,S,DBETA,BETA,              
     3              PHI,DBEND,BENDNG,PBAR,TBAR,RHOBAR                   
                  J2A=J2-J+1                                            
                  J2B=J2+J                                              
                  QTHETA(J2A)=COS(REAL(PHI)/DEG)                        
                  QTHETA(J2B)=COS(REAL(THETA)/DEG)                      
                  MAX=J2B                                               
              ENDIF                                                     
              IF(ISSGEO.NE.1)THEN                                       
                  ATHETA(J)=REAL(THETA)                                 
                  ADBETA(J)=REAL(DBETA)                                 
              ENDIF                                                     
              THETA=DBLE(180.)-PHI                                      
   20     CONTINUE                                                      
C                                                                       
C         DOUBLE PATH QUANTITIES FOR OTHER PART OF THE SYMMETRIC PATH.  
          BENDNG=2*BENDNG                                               
          BETA=2*BETA                                                   
          S=2*S                                                         
Calley          IF(IAMT.EQ.1 .AND. NPR.LT.1 .AND. LPRINT)               
          IF(IAMT.EQ.1 .AND. NPR.LT.1 .AND. LPRINT .AND. IPR.GT.0)      
     1      WRITE(IPR,'(2(/T10,A),T40,F9.3,T58,F9.3,T85,F9.3,/)')       
     2      'DOUBLE RANGE, BETA, BENDING',                              
     3      'FOR SYMMETRIC PART OF PATH',S,BETA,BENDNG                  
          JNEXT=JHA                                                     
      ENDIF                                                             
C                                                                       
C     DO PATH FROM HA TO HB                                             
      IF(HA.NE.HB)THEN                                                  
          JO=MAX-JNEXT+1                                                
          J1=JNEXT                                                      
          J2=JMAX-1                                                     
          IF(H1.GT.H2)THEN                                              
              JD=J2-J1+1                                                
              DO 30 KA=MAX,1,-1                                         
                  QTHETA(KA+JD)=QTHETA(KA)                              
   30         CONTINUE                                                  
              MAX=MAX+JD                                                
              JO=0                                                      
          ENDIF                                                         
          IHLOW=1                                                       
          IF(IORDER.EQ.-1)IHLOW=2                                       
          IHIGH=MOD(IHLOW,2)+1                                          
Calley          IF(IAMT.EQ.1 .AND. NPR.LT.1 .AND. LPRINT)               
          IF(IAMT.EQ.1 .AND. NPR.LT.1 .AND. LPRINT .AND. IPR.GT.0)      
     1      WRITE(IPR,'(T11,A2,A,A2,/)') HLOW(IHLOW),' TO ',HLOW(IHIGH) 
          DO 40 J=J1,J2                                                 
              CALL DPSCHT(ZP(J),ZP(J+1),RFNDXP(J),RFNDXP(J+1),SH,GAMMA) 
              RNG=DPRNG2*((ZP(J+1)-ZP(J))/(ZP(J2+1)-ZP(J1)))            
              CALL DPLAYR(J,SINAI,COSAI,CPATH,                          
     1          SH,GAMMA,IAMT,DS,DBEND,RNG)                             
              IF(LSMALL)THEN                                            
                  SINAI=SAVSIN                                          
                  COSAI=SAVCOS                                          
              ENDIF                                                     
              IF(SINAI.GT. DBLE(1.))SINAI= DBLE(1.)                     
              IF(SINAI.LT.-DBLE(1.))SINAI=-DBLE(1.)                     
              DBEND=DBEND*DPDEG                                         
              PHI=ASIN(SINAI)*DPDEG                                     
              DBETA=THETA-PHI+DBEND                                     
              IF(LSMALL)DBETA=(DPDEG*2*SAVSIN*DS)/(ZP(J)+ZP(J+1)+2*DPRE)
              PHI=DBLE(180.)-PHI                                        
              S=S+DS                                                    
              BENDNG=BENDNG+DBEND                                       
              BETA=BETA+DBETA                                           
              IF(IAMT.EQ.1)THEN                                         
                  PBAR=PPSUM(J)/RHOPSM(J)                               
                  TBAR=TPSUM(J)/RHOPSM(J)                               
                  RHOBAR=RHOPSM(J)/DS                                   
Calley                  IF(IAMT.EQ.1 .AND. NPR.LT.1 .AND. LPRINT)       
                  IF(IAMT.EQ.1.AND.NPR.LT.1.AND.LPRINT.AND.IPR.GT.0)    
     1              WRITE(IPR,'(I3,10F10.5,F11.5,F8.2,1PE10.3)')        
     2              J,ZP(J),ZP(J+1),THETA,DS,S,DBETA,BETA,              
     3              PHI,DBEND,BENDNG,PBAR,TBAR,RHOBAR                   
              ENDIF                                                     
C                                                                       
C             SAVE LAYER REFRACTED PATH ANGLE FOR MULTIPLE SCATTERING.  
              IF(H2.GT.H1)THEN                                          
                  QTHETA(J+JO)=COS(REAL(THETA)/DEG)                     
                  MAX=J+JO                                              
              ELSE                                                      
                  J2B=J2-J+1                                            
                  QTHETA(J2B)=COS(REAL(PHI)/DEG)                        
              ENDIF                                                     
              IF(ISSGEO.NE.1)THEN                                       
                  ATHETA(J)=REAL(THETA)                                 
                  ADBETA(J)=REAL(DBETA)                                 
              ENDIF                                                     
              THETA=DBLE(180.)-PHI                                      
   40     CONTINUE                                                      
      ENDIF                                                             
      IF(ISSGEO.EQ.0)ATHETA(JMAX)=REAL(THETA)                           
      IF(IORDER.EQ.-1)PHI=ANGLEA                                        
      RANGE=S                                                           
      DO 50 I=1,LAYDIM+1                                                
          SPZP(I)=REAL(ZP(I))                                           
          SPRFN(I)=REAL(RFNDXP(I))                                      
          SPPPSU(I)=REAL(PPSUM(I))                                      
          SPTPSU(I)=REAL(TPSUM(I))                                      
          SPRHOP(I)=REAL(RHOPSM(I))                                     
   50 CONTINUE                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE DPSCHT(Z1,Z2,RFNDX1,RFNDX2,SH,GAMMA)                   
C***********************************************************************
C     THE DOUBLE PRECISION VERSION OF THE PREVIOUS ROUTINE SCALHT.      
C                                                                       
C     THIS SUBROUTINE CALCULATES THE SCALE HEIGHT SH OF THE (INDEX OF   
C     REFRACTION-1.0) FROM THE VALUES OF THE INDEX AT THE ALTITUDES Z1  
C     AND Z2 ( Z1 < Z2). IT ALSO CALCULATES THE EXTRAPOLATED VALUE      
C     GAMMA OF THE (INDEX-1.0) AT Z = 0.0                               
C***********************************************************************
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                               
      RF1 = RFNDX1+1.0E-20                                              
      RF2 = RFNDX2+1.0E-20                                              
      RATIO = RF1/RF2                                                   
      IF(ABS(RATIO-1.0).LT.1.0E-05)  GO TO 100                          
C     SH = (Z2-Z1)/ALOG(RATIO)                                          
      SH = (Z2-Z1)/LOG(RATIO)                                           
      GAMMA = RF1*(RF2/RF1)**(-Z1/(Z2-Z1))                              
      GO TO 110                                                         
 100  CONTINUE                                                          
C*****THEVARIATION IN THE INDEX OF REFRACTION WITH HEIGHT IS            
C*****INSIGNIFICANTOR ZERO                                              
      SH = 0.0                                                          
      GAMMA = RFNDX1                                                    
 110  CONTINUE                                                          
      RETURN                                                            
      END                                                               
      REAL*8 FUNCTION  DREF( MU, HL, NSTR )                             
C           INSERT FOR DOUBLE PRECISION - NORTH                         
            IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                      
C        EXACT FLUX ALBEDO FOR GIVEN ANGLE OF INCIDENCE, GIVEN          
C        A BIDIRECTIONAL REFLECTIVITY CHARACTERIZED BY ITS              
C        LEGENDRE COEFFICIENTS ( NOTE** THESE WILL ONLY AGREE           
C        WITH BOTTOM-BOUNDARY ALBEDOS CALCULATED BY 'DISORT' IN         
C        THE LIMIT AS NUMBER OF STREAMS GO TO INFINITY, BECAUSE         
C        'DISORT' EVALUATES THE INTEGRAL 'CL' ONLY APPROXIMATELY,       
C        BY QUADRATURE, WHILE THIS ROUTINE CALCULATES IT EXACTLY. )     
                                                                        
C      INPUT :   MU     COSINE OF INCIDENCE ANGLE                       
C                HL     LEGENDRE COEFFICIENTS OF BIDIRECTIONAL REF'Y    
C              NSTR     NUMBER OF ELEMENTS OF 'HL' TO CONSIDER          
                                                                        
C      INTERNAL VARIABLES (P-SUB-L IS THE L-TH LEGENDRE POLYNOMIAL) :   
                                                                        
C              CL    INTEGRAL FROM 0 TO 1 OF  MU * P-SUB-L(MU)          
C                       (VANISHES FOR  L = 3, 5, 7, ... )               
C              PL    P-SUB-L                                            
C            PLM1    P-SUB-(L-1)                                        
C            PLM2    P-SUB-(L-2)                                        
                                                                        
      PARAMETER  ( MAXTRM = 100 )                                       
      LOGICAL      PASS1                                                
      REAL*8         MU, HL( 0:* )                                      
      REAL*8         C( MAXTRM )                                        
      SAVE  PASS1, C                                                    
      DATA  PASS1 / .TRUE. /                                            
                                                                        
                                                                        
      IF ( PASS1 )  THEN                                                
         PASS1 = .FALSE.                                                
         CL = 0.125                                                     
         C(2) = 10. * CL                                                
         DO 1  L = 4, MAXTRM, 2                                         
            CL = - CL * (L-3) / (L+2)                                   
            C(L) = 2. * (2*L+1) * CL                                    
    1    CONTINUE                                                       
      END IF                                                            
                                                                        
      IF ( NSTR.GT.MAXTRM )  CALL                                       
     $     ERRMSG( 'DREF--PARAMETER MAXTRM TOO SMALL', .TRUE. )         
                                                                        
      DREF = HL(0) - 2.*HL(1) * MU                                      
      PLM2 = 1.0                                                        
      PLM1 = - MU                                                       
      DO 10  L = 2, NSTR-1                                              
C                                ** LEGENDRE POLYNOMIAL RECURRENCE      
                                                                        
         PL = ( (2*L-1) * (-MU) * PLM1 - (L-1) * PLM2 ) / L             
         IF( MOD(L,2).EQ.0 )  DREF = DREF + C(L) * HL(L) * PL           
         PLM2 = PLM1                                                    
         PLM1 = PL                                                      
   10 CONTINUE                                                          
                                                                        
      RETURN                                                            
      END                                                               
      SUBROUTINE  DSCAL(N,DA,DX,INCX)                                   
C                                                                       
C     SCALES A VECTOR BY A CONSTANT.                                    
C     USES UNROLLED LOOPS FOR INCREMENT EQUAL TO ONE.                   
C     JACK DONGARRA, LINPACK, 3/11/78.                                  
C                                                                       
      DOUBLE PRECISION DA,DX(*)                                         
      INTEGER I,INCX,M,MP1,N,NINCX                                      
C                                                                       
      IF(N.LE.0)RETURN                                                  
      IF(INCX.EQ.1)GO TO 20                                             
C                                                                       
C        CODE FOR INCREMENT NOT EQUAL TO 1                              
C                                                                       
      NINCX = N*INCX                                                    
      DO 10 I = 1,NINCX,INCX                                            
        DX(I) = DA*DX(I)                                                
   10 CONTINUE                                                          
      RETURN                                                            
C                                                                       
C        CODE FOR INCREMENT EQUAL TO 1                                  
C                                                                       
C                                                                       
C        CLEAN-UP LOOP                                                  
C                                                                       
   20 M = MOD(N,5)                                                      
      IF( M .EQ. 0 ) GO TO 40                                           
      DO 30 I = 1,M                                                     
        DX(I) = DA*DX(I)                                                
   30 CONTINUE                                                          
      IF( N .LT. 5 ) RETURN                                             
   40 MP1 = M + 1                                                       
      DO 50 I = MP1,N,5                                                 
        DX(I) = DA*DX(I)                                                
        DX(I + 1) = DA*DX(I + 1)                                        
        DX(I + 2) = DA*DX(I + 2)                                        
        DX(I + 3) = DA*DX(I + 3)                                        
        DX(I + 4) = DA*DX(I + 4)                                        
   50 CONTINUE                                                          
      RETURN                                                            
      END                                                               
      BLOCK DATA DSTDTA                                                 
C>    BLOCK DATA                                                        
C********************************************************************** 
C*                                                                    * 
C*    DESERT AEROSOL EXTINCTION COEFFICIENTS, ABSORPTION COEFFICIENTS * 
C*    AND ASYMMETRY PARAMETERS FOR FOUR WIND SPEEDS: 0 M/S, 10 M/S,   * 
C*    20 M/S AND 30 M/S                                               * 
C*                                                                    * 
C*    PROGRAMMED BY:  D. R. LONGTIN         OPTIMETRICS, INC.         * 
C*                                          BURLINGTON, MASSACHUSETTS * 
C*                                          FEB  1988                 * 
C*                                                                    * 
C********************************************************************** 
C                                                                       
      INCLUDE 'PARAM.LST'                                               
      REAL DSEXT,DSABS,DSASYM                                           
      COMMON/DESAER/DSEXT(NWAVLN,4),DSABS(NWAVLN,4),DSASYM(NWAVLN,4)    
C                                                                       
C     EXTINCTION COEFFICIENTS                                           
C                                                                       
      DATA (DSEXT(I,1),I=1,NWAVLN)/                                     
     1 8.7330E-2, 7.1336E-2, 6.5754E-2, 4.0080E-2, 2.8958E-2, 1.4537E-2,
     1 7.1554E-3, 4.3472E-3, 3.5465E-3, 2.9225E-3, 2.5676E-3, 4.3573E-3,
     1 5.7479E-3, 2.9073E-3, 2.0109E-3, 1.8890E-3, 1.8525E-3, 1.8915E-3,
     1 1.9503E-3, 2.3256E-3, 4.9536E-3, 2.0526E-3, 2.6738E-3, 9.2804E-3,
     1 1.5352E-2, 6.9396E-3, 2.2455E-3, 1.9840E-3, 1.9452E-3, 1.9019E-3,
     1 1.8551E-3, 1.9661E-3, 1.9865E-3, 2.4089E-3, 1.7485E-3, 1.4764E-3,
     1 2.2604E-3, 2.1536E-3, 2.3008E-3, 2.9272E-3, 2.6943E-3, 2.4319E-3,
     1 1.9199E-3, 1.4887E-3, 8.0630E-4, 4.6950E-4, 2.0792E-4/           
      DATA (DSEXT(I,2),I=1,NWAVLN)/                                     
     2 1.0419E-1, 8.8261E-2, 8.2699E-2, 5.7144E-2, 4.6078E-2, 3.1831E-2,
     2 2.4638E-2, 2.1952E-2, 2.1254E-2, 2.0743E-2, 2.0397E-2, 2.2340E-2,
     2 2.3848E-2, 2.1104E-2, 2.0422E-2, 2.0462E-2, 2.0591E-2, 2.0843E-2,
     2 2.1030E-2, 2.1630E-2, 2.2880E-2, 1.9075E-2, 2.0928E-2, 2.9835E-2,
     2 3.8025E-2, 2.7349E-2, 2.1502E-2, 2.1475E-2, 2.1563E-2, 2.1726E-2,
     2 2.2265E-2, 2.2580E-2, 2.2708E-2, 2.1705E-2, 2.1230E-2, 2.0523E-2,
     2 2.6686E-2, 2.5461E-2, 2.3785E-2, 2.6033E-2, 2.6484E-2, 2.6464E-2,
     2 2.5318E-2, 2.3341E-2, 1.7824E-2, 1.3092E-2, 7.2020E-3/           
      DATA (DSEXT(I,3),I=1,NWAVLN)/                                     
     3 2.7337E-1, 2.5795E-1, 2.5252E-1, 2.2773E-1, 2.1710E-1, 2.0402E-1,
     3 1.9809E-1, 1.9664E-1, 1.9635E-1, 1.9655E-1, 1.9661E-1, 1.9907E-1,
     3 2.0164E-1, 1.9957E-1, 2.0013E-1, 2.0142E-1, 2.0270E-1, 2.0400E-1,
     3 2.0501E-1, 2.0665E-1, 2.0573E-1, 1.9165E-1, 2.0121E-1, 2.2402E-1,
     3 2.4718E-1, 2.2503E-1, 2.0749E-1, 2.0910E-1, 2.0999E-1, 2.1165E-1,
     3 2.1784E-1, 2.1727E-1, 2.1803E-1, 2.0995E-1, 2.1214E-1, 2.1308E-1,
     3 2.5226E-1, 2.4234E-1, 2.2638E-1, 2.3991E-1, 2.4680E-1, 2.5176E-1,
     3 2.5655E-1, 2.5505E-1, 2.3610E-1, 2.1047E-1, 1.5938E-1/           
      DATA (DSEXT(I,4),I=1,NWAVLN)/                                     
     4 1.9841E0, 1.9721E0, 1.9676E0, 1.9488E0, 1.9424E0, 1.9377E0,      
     4 1.9374E0, 1.9484E0, 1.9509E0, 1.9549E0, 1.9570E0, 1.9642E0,      
     4 1.9737E0, 1.9764E0, 1.9860E0, 1.9944E0, 2.0020E0, 2.0113E0,      
     4 2.0148E0, 2.0245E0, 2.0283E0, 1.9397E0, 1.9973E0, 2.1039E0,      
     4 2.2246E0, 2.1587E0, 2.0409E0, 2.0520E0, 2.0613E0, 2.0651E0,      
     4 2.1194E0, 2.1065E0, 2.1104E0, 2.0651E0, 2.0926E0, 2.1155E0,      
     4 2.3696E0, 2.2931E0, 2.1828E0, 2.2708E0, 2.3304E0, 2.3762E0,      
     4 2.4533E0, 2.4915E0, 2.5118E0, 2.4463E0, 2.2122E0/                
C                                                                       
C     ABSORPTION COEFFICIENTS                                           
C                                                                       
      DATA (DSABS(I,1),I=1,NWAVLN)/                                     
     1 6.4942E-4, 6.1415E-4, 5.8584E-4, 4.4211E-4, 1.3415E-4, 7.8142E-5,
     1 5.7566E-5, 8.3848E-5, 7.6988E-5, 4.4486E-5, 8.9604E-5, 2.4887E-3,
     1 3.3444E-3, 6.8781E-4, 1.6387E-4, 3.5236E-4, 3.5340E-4, 4.0930E-4,
     1 5.0526E-4, 8.2146E-4, 3.7647E-3, 1.0162E-3, 1.3525E-3, 7.7761E-3,
     1 1.3108E-2, 5.1252E-3, 1.0973E-3, 6.8573E-4, 5.7622E-4, 5.1268E-4,
     1 7.6834E-4, 5.3793E-4, 5.0611E-4, 1.2828E-3, 6.7827E-4, 4.3826E-4,
     1 5.1221E-4, 8.8642E-4, 9.5535E-4, 1.0000E-3, 7.5646E-4, 6.1552E-4,
     1 4.6087E-4, 3.5642E-4, 2.3556E-4, 1.7596E-4, 1.1699E-4/           
      DATA (DSABS(I,2),I=1,NWAVLN)/                                     
     2 4.3569E-3, 4.3413E-3, 4.3277E-3, 4.0649E-3, 3.9091E-4, 8.4594E-5,
     2 5.8501E-5, 8.4412E-5, 7.7547E-5, 4.6817E-5, 9.2721E-5, 2.5389E-3,
     2 3.3588E-3, 7.9414E-4, 8.5079E-4, 4.6002E-3, 4.4872E-3, 4.6200E-3,
     2 5.2973E-3, 4.8910E-3, 8.9899E-3, 5.4745E-3, 3.6375E-3, 1.1862E-2,
     2 1.5179E-2, 7.0015E-3, 8.4693E-3, 6.9516E-3, 6.3008E-3, 6.3684E-3,
     2 8.4992E-3, 6.9625E-3, 6.5192E-3, 7.8955E-3, 7.7192E-3, 5.8540E-3,
     2 5.3263E-3, 9.3004E-3, 7.4848E-3, 3.0952E-3, 1.8219E-3, 1.3078E-3,
     2 1.0653E-3, 5.5231E-4, 3.2311E-4, 2.2422E-4, 1.3839E-4/           
      DATA (DSABS(I,3),I=1,NWAVLN)/                                     
     3 4.1552E-2, 4.1671E-2, 4.1781E-2, 4.1125E-2, 5.0552E-3, 2.1085E-4,
     3 7.5703E-5, 9.5531E-5, 8.8354E-5, 9.0588E-5, 1.5058E-4, 3.4972E-3,
     3 3.6310E-3, 2.6709E-3, 1.2558E-2, 5.9184E-2, 5.8289E-2, 5.9206E-2,
     3 6.5487E-2, 5.8707E-2, 7.4669E-2, 5.2152E-2, 2.5783E-2, 4.7971E-2,
     3 3.2378E-2, 2.4739E-2, 8.1225E-2, 7.5085E-2, 7.1232E-2, 7.3042E-2,
     3 8.0638E-2, 7.8255E-2, 7.4882E-2, 7.8853E-2, 8.1412E-2, 6.5722E-2,
     3 4.8565E-2, 8.4983E-2, 7.1273E-2, 3.0870E-2, 1.7031E-2, 1.1455E-2,
     3 1.0554E-2, 4.0418E-3, 2.1509E-3, 1.4115E-3, 7.9698E-4/           
      DATA (DSABS(I,4),I=1,NWAVLN)/                                     
     4 4.1777E-1, 4.1880E-1, 4.2000E-1, 4.1846E-1, 8.6452E-2, 2.6538E-3,
     4 4.0804E-4, 3.1418E-4, 2.9996E-4, 9.3018E-4, 1.2814E-3, 2.1436E-2,
     4 8.7553E-3, 3.7670E-2, 2.0849E-1, 7.0914E-1, 7.0420E-1, 7.1379E-1,
     4 7.6309E-1, 7.1128E-1, 8.2992E-1, 5.3585E-1, 2.4456E-1, 3.8103E-1,
     4 1.7784E-1, 1.9305E-1, 7.9910E-1, 7.8987E-1, 7.7502E-1, 7.9400E-1,
     4 7.6332E-1, 8.3629E-1, 8.1581E-1, 8.3122E-1, 8.4901E-1, 7.0150E-1,
     4 4.4205E-1, 7.7354E-1, 7.1088E-1, 3.9328E-1, 2.3337E-1, 1.6258E-1,
     4 1.5289E-1, 5.8849E-2, 3.5576E-2, 2.4463E-2, 1.4525E-2/           
C                                                                       
C     ASYMMETRY PARAMETER                                               
C                                                                       
      DATA (DSASYM(I,1),I=1,NWAVLN)/                                    
     1 0.6603, 0.6581, 0.6547, 0.6383, 0.6276, 0.5997, 0.5829, 0.5873,  
     1 0.5967, 0.6130, 0.6323, 0.6850, 0.6068, 0.6312, 0.6816, 0.7298,  
     1 0.7574, 0.7874, 0.8124, 0.8424, 0.8301, 0.8107, 0.6143, 0.6167,  
     1 0.4892, 0.4917, 0.6662, 0.6334, 0.6298, 0.6498, 0.7470, 0.6711,  
     1 0.6751, 0.7538, 0.8054, 0.7797, 0.5522, 0.6575, 0.4702, 0.3719,  
     1 0.3626, 0.3690, 0.3790, 0.3805, 0.3766, 0.3639, 0.3281/          
      DATA (DSASYM(I,2),I=1,NWAVLN)/                                    
     2 0.6836, 0.6879, 0.6877, 0.6919, 0.6901, 0.7045, 0.7279, 0.7466,  
     2 0.7522, 0.7568, 0.7629, 0.7700, 0.7567, 0.7617, 0.7781, 0.8289,  
     2 0.8360, 0.8465, 0.8624, 0.8707, 0.9524, 0.8292, 0.6202, 0.6425,  
     2 0.5777, 0.5623, 0.7610, 0.7310, 0.7247, 0.7419, 0.7782, 0.7481,  
     2 0.7446, 0.8090, 0.8415, 0.8110, 0.6120, 0.7106, 0.5739, 0.4421,  
     2 0.4089, 0.3979, 0.3917, 0.3853, 0.3842, 0.3829, 0.3797/          
      DATA (DSASYM(I,3),I=1,NWAVLN)/                                    
     3 0.7718, 0.7865, 0.7907, 0.8077, 0.7801, 0.7827, 0.7871, 0.7880,  
     3 0.7887, 0.7888, 0.7894, 0.7909, 0.7882, 0.7934, 0.8103, 0.8729,  
     3 0.8766, 0.8844, 0.8979, 0.8997, 0.9698, 0.8318, 0.6197, 0.6420,  
     3 0.5797, 0.5698, 0.8014, 0.7938, 0.7901, 0.8069, 0.7894, 0.8139,  
     3 0.8086, 0.8546, 0.8691, 0.8288, 0.6394, 0.7400, 0.6495, 0.5235,  
     3 0.4793, 0.4583, 0.4376, 0.4169, 0.4006, 0.3941, 0.3875/          
      DATA (DSASYM(I,4),I=1,NWAVLN)/                                    
     4 0.8290, 0.8407, 0.8443, 0.8500, 0.8087, 0.7994, 0.7988, 0.7987,  
     4 0.7988, 0.7989, 0.7998, 0.8023, 0.8011, 0.8076, 0.8331, 0.9045,  
     4 0.9083, 0.9149, 0.9266, 0.9263, 0.9783, 0.8321, 0.6168, 0.6379,  
     4 0.5706, 0.5673, 0.8196, 0.8324, 0.8347, 0.8549, 0.7940, 0.8621,  
     4 0.8588, 0.8918, 0.8922, 0.8407, 0.6488, 0.7557, 0.7021, 0.6024,  
     4 0.5533, 0.5280, 0.5016, 0.4711, 0.4396, 0.4230, 0.4058/          
      END                                                               
      SUBROUTINE  DSWAP (N,DX,INCX,DY,INCY)                             
C                                                                       
C     INTERCHANGES TWO VECTORS.                                         
C     USES UNROLLED LOOPS FOR INCREMENTS EQUAL ONE.                     
C     JACK DONGARRA, LINPACK, 3/11/78.                                  
C                                                                       
      DOUBLE PRECISION DX(*),DY(*),DTEMP                                
      INTEGER I,INCX,INCY,IX,IY,M,MP1,N                                 
C                                                                       
      IF(N.LE.0)RETURN                                                  
      IF(INCX.EQ.1.AND.INCY.EQ.1)GO TO 20                               
C                                                                       
C       CODE FOR UNEQUAL INCREMENTS OR EQUAL INCREMENTS NOT EQUAL       
C         TO 1                                                          
C                                                                       
      IX = 1                                                            
      IY = 1                                                            
      IF(INCX.LT.0)IX = (-N+1)*INCX + 1                                 
      IF(INCY.LT.0)IY = (-N+1)*INCY + 1                                 
      DO 10 I = 1,N                                                     
        DTEMP = DX(IX)                                                  
        DX(IX) = DY(IY)                                                 
        DY(IY) = DTEMP                                                  
        IX = IX + INCX                                                  
        IY = IY + INCY                                                  
   10 CONTINUE                                                          
      RETURN                                                            
C                                                                       
C       CODE FOR BOTH INCREMENTS EQUAL TO 1                             
C                                                                       
C                                                                       
C       CLEAN-UP LOOP                                                   
C                                                                       
   20 M = MOD(N,3)                                                      
      IF( M .EQ. 0 ) GO TO 40                                           
      DO 30 I = 1,M                                                     
        DTEMP = DX(I)                                                   
        DX(I) = DY(I)                                                   
        DY(I) = DTEMP                                                   
   30 CONTINUE                                                          
      IF( N .LT. 3 ) RETURN                                             
   40 MP1 = M + 1                                                       
      DO 50 I = MP1,N,3                                                 
        DTEMP = DX(I)                                                   
        DX(I) = DY(I)                                                   
        DY(I) = DTEMP                                                   
        DTEMP = DX(I + 1)                                               
        DX(I + 1) = DY(I + 1)                                           
        DY(I + 1) = DTEMP                                               
        DTEMP = DX(I + 2)                                               
        DX(I + 2) = DY(I + 2)                                           
        DY(I + 2) = DTEMP                                               
   50 CONTINUE                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE DTRDI(T,LDT,N,DET,JOB,INFO)                            
      INTEGER LDT,N,JOB,INFO                                            
      DOUBLE PRECISION T(LDT,*),DET(2)                                  
C                                                                       
C     DTRDI COMPUTES THE DETERMINANT AND INVERSE OF A DOUBLE PRECISION  
C     TRIANGULAR MATRIX.                                                
C                                                                       
C     ON ENTRY                                                          
C                                                                       
C        T       DOUBLE PRECISION(LDT,N)                                
C                T CONTAINS THE TRIANGULAR MATRIX. THE ZERO             
C                ELEMENTS OF THE MATRIX ARE NOT REFERENCED, AND         
C                THE CORRESPONDING ELEMENTS OF THE ARRAY CAN BE         
C                USED TO STORE OTHER INFORMATION.                       
C                                                                       
C        LDT     INTEGER                                                
C                LDT IS THE LEADING DIMENSION OF THE ARRAY T.           
C                                                                       
C        N       INTEGER                                                
C                N IS THE ORDER OF THE SYSTEM.                          
C                                                                       
C        JOB     INTEGER                                                
C                = 010       NO DET, INVERSE OF LOWER TRIANGULAR.       
C                = 011       NO DET, INVERSE OF UPPER TRIANGULAR.       
C                = 100       DET, NO INVERSE.                           
C                = 110       DET, INVERSE OF LOWER TRIANGULAR.          
C                = 111       DET, INVERSE OF UPPER TRIANGULAR.          
C                                                                       
C     ON RETURN                                                         
C                                                                       
C        T       INVERSE OF ORIGINAL MATRIX IF REQUESTED.               
C                OTHERWISE UNCHANGED.                                   
C                                                                       
C        DET     DOUBLE PRECISION(2)                                    
C                DETERMINANT OF ORIGINAL MATRIX IF REQUESTED.           
C                OTHERWISE NOT REFERENCED.                              
C                DETERMINANT = DET(1) * 10.0**DET(2)                    
C                WITH  1.0 .LE. DABS(DET(1)) .LT. 10.0                  
C                OR  DET(1) .EQ. 0.0 .                                  
C                                                                       
C        INFO    INTEGER                                                
C                INFO CONTAINS ZERO IF THE SYSTEM IS NONSINGULAR        
C                AND THE INVERSE IS REQUESTED.                          
C                OTHERWISE INFO CONTAINS THE INDEX OF                   
C                A ZERO DIAGONAL ELEMENT OF T.                          
C                                                                       
C                                                                       
C     LINPACK. THIS VERSION DATED 08/14/78 .                            
C     CLEVE MOLER, UNIVERSITY OF NEW MEXICO, ARGONNE NATIONAL LAB.      
C                                                                       
C     SUBROUTINES AND FUNCTIONS                                         
C                                                                       
C     BLAS DAXPY,DSCAL                                                  
C     FORTRAN DABS,MOD                                                  
C                                                                       
C     INTERNAL VARIABLES                                                
C                                                                       
      DOUBLE PRECISION TEMP                                             
      DOUBLE PRECISION TEN                                              
      INTEGER I,J,K,KB,KM1,KP1                                          
C                                                                       
C     BEGIN BLOCK PERMITTING ...EXITS TO 180                            
C                                                                       
C        COMPUTE DETERMINANT                                            
C                                                                       
         IF (JOB/100 .EQ. 0) GO TO 70                                   
            DET(1) = 1.0D0                                              
            DET(2) = 0.0D0                                              
            TEN = 10.0D0                                                
            DO 50 I = 1, N                                              
               DET(1) = T(I,I)*DET(1)                                   
C           ...EXIT                                                     
               IF (DET(1) .EQ. 0.0D0) GO TO 60                          
   10          IF (DABS(DET(1)) .GE. 1.0D0) GO TO 20                    
                  DET(1) = TEN*DET(1)                                   
                  DET(2) = DET(2) - 1.0D0                               
               GO TO 10                                                 
   20          CONTINUE                                                 
   30          IF (DABS(DET(1)) .LT. TEN) GO TO 40                      
                  DET(1) = DET(1)/TEN                                   
                  DET(2) = DET(2) + 1.0D0                               
               GO TO 30                                                 
   40          CONTINUE                                                 
   50       CONTINUE                                                    
   60       CONTINUE                                                    
   70    CONTINUE                                                       
C                                                                       
C        COMPUTE INVERSE OF UPPER TRIANGULAR                            
C                                                                       
         IF (MOD(JOB/10,10) .EQ. 0) GO TO 170                           
            IF (MOD(JOB,10) .EQ. 0) GO TO 120                           
C              BEGIN BLOCK PERMITTING ...EXITS TO 110                   
                  DO 100 K = 1, N                                       
                     INFO = K                                           
C              ......EXIT                                               
                     IF (T(K,K) .EQ. 0.0D0) GO TO 110                   
                     T(K,K) = 1.0D0/T(K,K)                              
                     TEMP = -T(K,K)                                     
                     CALL DSCAL(K-1,TEMP,T(1,K),1)                      
                     KP1 = K + 1                                        
                     IF (N .LT. KP1) GO TO 90                           
                     DO 80 J = KP1, N                                   
                        TEMP = T(K,J)                                   
                        T(K,J) = 0.0D0                                  
                        CALL DAXPY(K,TEMP,T(1,K),1,T(1,J),1)            
   80                CONTINUE                                           
   90                CONTINUE                                           
  100             CONTINUE                                              
                  INFO = 0                                              
  110          CONTINUE                                                 
            GO TO 160                                                   
  120       CONTINUE                                                    
C                                                                       
C              COMPUTE INVERSE OF LOWER TRIANGULAR                      
C                                                                       
               DO 150 KB = 1, N                                         
                  K = N + 1 - KB                                        
                  INFO = K                                              
C     ............EXIT                                                  
                  IF (T(K,K) .EQ. 0.0D0) GO TO 180                      
                  T(K,K) = 1.0D0/T(K,K)                                 
                  TEMP = -T(K,K)                                        
                  IF (K .NE. N) CALL DSCAL(N-K,TEMP,T(K+1,K),1)         
                  KM1 = K - 1                                           
                  IF (KM1 .LT. 1) GO TO 140                             
                  DO 130 J = 1, KM1                                     
                     TEMP = T(K,J)                                      
                     T(K,J) = 0.0D0                                     
                     CALL DAXPY(N-K+1,TEMP,T(K,K),1,T(K,J),1)           
  130             CONTINUE                                              
  140             CONTINUE                                              
  150          CONTINUE                                                 
               INFO = 0                                                 
  160       CONTINUE                                                    
  170    CONTINUE                                                       
  180 CONTINUE                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE  ERRMSG( MESSAG, FATAL )                               
                                                                        
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
C        PRINT OUT A WARNING OR ERROR MESSAGE;  ABORT IF ERROR          
C                                                                       
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                          
                                                                        
      LOGICAL       FATAL, ONCE                                         
      CHARACTER*(*) MESSAG                                              
      INTEGER       MAXMSG, NUMMSG                                      
      SAVE          MAXMSG, NUMMSG, ONCE                                
      DATA NUMMSG / 0 /,  MAXMSG / 100 /,  ONCE / .FALSE. /             
                                                                        
                                                                        
      IF ( FATAL )  THEN                                                
Calley         WRITE ( *, '(/,2A)' )  ' ******* ERROR >>>>>>  ', MESSAG 
         IF (IPR .GT. 0) WRITE ( IPR,                                   
     +                    '(/,2A)' )  ' ******* ERROR >>>>>>  ', MESSAG 
         STOP                                                           
      END IF                                                            
                                                                        
      NUMMSG = NUMMSG + 1                                               
      IF ( NUMMSG.GT.MAXMSG )  THEN                                     
Calley         IF ( .NOT.ONCE )  WRITE ( *,99 )                         
         IF ((.NOT.ONCE) .AND. IPR.GT.0)  WRITE (IPR,99 )               
         ONCE = .TRUE.                                                  
      ELSE                                                              
Calley       WRITE ( *, '(/,2A)' )  ' ******* WARNING >>>>>>  ', MESSAG 
         IF (IPR .GT. 0) WRITE (IPR,                                    
     +                  '(/,2A)' )  ' ******* WARNING >>>>>>  ', MESSAG 
      ENDIF                                                             
                                                                        
      RETURN                                                            
                                                                        
   99 FORMAT( ///,' >>>>>>  TOO MANY WARNING MESSAGES --  ',            
     $   'THEY WILL NO LONGER BE PRINTED  <<<<<<<', /// )               
      END                                                               
      SUBROUTINE EXABIN(ICH)                                            
      INTEGER ICH(4)                                                    
      INCLUDE 'PARAM.LST'                                               
C                                                                       
C      LOADS EXTINCTION, ABSORPTION AND ASYMMETRY COEFFICIENTS          
C      FOR THE FOUR AEROSOL ALTITUDE REGIONS                            
C                                                                       
C      MODIFIED FOR ASYMMETRY - JAN 1986 (A.E.R. INC.)                  
C                                                                       
      COMMON /CARD2/ IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,VIS,WSS,WHH,   
     1    RAINRT                                                        
      COMMON /CARD2D/ IREG(4),ALTB(4),IREGC(4)                          
C                                                                       
      INTEGER KPOINT                                                    
      REAL WAVLEN,EXTC,ABSC,ASYM,AWCCON,TX,W,RELHUM,PATM,TBBY,WPATH     
      COMMON/BASE/WAVLEN(MXWVLN),EXTC(NAER,MXWVLN),ABSC(NAER,MXWVLN),   
     1  ASYM(NAER,MXWVLN),AWCCON(NAER),KPOINT(NSPC),TX(KMAX),W(KMAX),   
     2  RELHUM(LAYDIM),PATM(LAYTHR),TBBY(LAYTHR),WPATH(LAYTHR,KMAX)     
      COMMON/EXTD/VX0(NWAVLN),                                          
     1  RUREXT(NWAVLN,4),RURABS(NWAVLN,4),RURSYM(NWAVLN,4),             
     2  URBEXT(NWAVLN,4),URBABS(NWAVLN,4),URBSYM(NWAVLN,4),             
     3  OCNEXT(NWAVLN,4),OCNABS(NWAVLN,4),OCNSYM(NWAVLN,4),             
     4  TROEXT(NWAVLN,4),TROABS(NWAVLN,4),TROSYM(NWAVLN,4),             
     5  FG1EXT(NWAVLN),FG1ABS(NWAVLN),FG1SYM(NWAVLN),                   
     6  FG2EXT(NWAVLN),FG2ABS(NWAVLN),FG2SYM(NWAVLN),                   
     7  BSTEXT(NWAVLN),BSTABS(NWAVLN),BSTSYM(NWAVLN),                   
     8  AVOEXT(NWAVLN),AVOABS(NWAVLN),AVOSYM(NWAVLN),                   
     9  FVOEXT(NWAVLN),FVOABS(NWAVLN),FVOSYM(NWAVLN),                   
     &  DMEEXT(NWAVLN),DMEABS(NWAVLN),DMESYM(NWAVLN),                   
     1  CCUEXT(NWAVLN),CCUABS(NWAVLN),CCUSYM(NWAVLN),                   
     2  CALEXT(NWAVLN),CALABS(NWAVLN),CALSYM(NWAVLN),                   
     3  CSTEXT(NWAVLN),CSTABS(NWAVLN),CSTSYM(NWAVLN),                   
     4  CSCEXT(NWAVLN),CSCABS(NWAVLN),CSCSYM(NWAVLN),                   
     5  CNIEXT(NWAVLN),CNIABS(NWAVLN),CNISYM(NWAVLN)                    
      COMMON/CIRR/CI64XT(NWAVLN),CI64AB(NWAVLN),CI64G(NWAVLN),          
     1            CIR4XT(NWAVLN),CIR4AB(NWAVLN),CIR4G(NWAVLN)           
      DIMENSION RHZONE(4)                                               
      DIMENSION ELWCR(4),ELWCU(4),ELWCM(4),ELWCT(4)                     
      REAL MDLWC                                                        
      DATA RHZONE/0.,70.,80.,99./                                       
      DATA ELWCR/3.517E-04,3.740E-04,4.439E-04,9.529E-04/               
      DATA ELWCM/4.675E-04,6.543E-04,1.166E-03,3.154E-03/               
      DATA ELWCU/3.102E-04,3.802E-04,4.463E-04,9.745E-04/               
      DATA ELWCT/1.735E-04,1.820E-04,2.020E-04,2.408E-04/               
      DATA AFLWC/1.295E-02/,RFLWC/1.804E-03/,CULWC/7.683E-03/           
      DATA ASLWC/4.509E-03/,STLWC/5.272E-03/,SCLWC/4.177E-03/           
      DATA SNLWC/7.518E-03/,BSLWC/1.567E-04/,FVLWC/5.922E-04/           
      DATA AVLWC/1.675E-04/,MDLWC/4.775E-04/                            
      DO 2 I = 1,4                                                      
2     AWCCON(I) = 0                                                     
CC    I1=1                                                              
C                                                                       
C     "NWAVLN" VALUES CALCULATED IN AEREXT USING ROUTINE GAMFOG         
      NE=NWAVLN-1                                                       
C                                                                       
CC    IF (IHAZE.EQ.7) I1=2                                              
CC    IF(IHAZE.EQ.3)  I1 = 2                                            
      DO 185 M=1 ,4                                                     
      IF(IREG(M) .NE. 0)        GO TO 185                               
      ITA=ICH(M)                                                        
      ITC=ICH(M)-7                                                      
      ITAS = ITA                                                        
      IF(IREGC(M) .NE. 0) GO TO 100                                     
12    CONTINUE                                                          
      WRH=W(15)                                                         
      IF (ICH(M).EQ.6.AND.M.NE.1) WRH=70.                               
C     THIS CODING  DOES NOT ALLOW TROP RH DEPENDENT  ABOVE EH(7,I)      
C     DEFAULTS TO TROPOSPHERIC AT 70. PERCENT                           
      DO 10 I=2,4                                                       
      IF (WRH.LT.RHZONE(I)) GO TO 15                                    
   10 CONTINUE                                                          
      I=4                                                               
   15 II=I-1                                                            
      IF(WRH.GT.0.0.AND.WRH.LT.99.)X=ALOG(100.0-WRH)                    
      X1=ALOG(100.0-RHZONE(II))                                         
      X2=ALOG(100.0-RHZONE(I))                                          
      IF (WRH.GE.99.0) X=X2                                             
      IF (WRH.LE.0.0) X=X1                                              
17    DO 80 N=1,NE                                                      
      ITA = ITAS                                                        
      IF(ITA.EQ.3. AND. M.EQ.1) GO TO 18                                
      ABSC(M,N)=0.                                                      
      EXTC(M,N)=0.                                                      
      ASYM(M,N)=0.                                                      
      IF(ITA.GT.6) GO TO 45                                             
      IF(ITA.LE.0) GO TO 80                                             
18    IF(N.GE.41. AND. ITA.EQ.3) ITA = 4                                
C     RH DEPENDENT AEROSOLS                                             
      GO TO (20,20,22,25,30,35), ITA                                    
   20 Y2=ALOG(RUREXT(N,I))                                              
      Y1=ALOG(RUREXT(N,II))                                             
      Z2=ALOG(RURABS(N,I))                                              
      Z1=ALOG(RURABS(N,II))                                             
      A2=ALOG(RURSYM(N,I))                                              
      A1=ALOG(RURSYM(N,II))                                             
      E2=ALOG(ELWCR(I))                                                 
      E1=ALOG(ELWCR(II))                                                
      GO TO 40                                                          
  22  IF(M.GT.1) GO TO 25                                               
      A2=ALOG(OCNSYM(N,I))                                              
      A1=ALOG(OCNSYM(N,II))                                             
      A=A1+(A2-A1)*(X-X1)/(X2-X1)                                       
      ASYM(M,N)=EXP(A)                                                  
      E2=ALOG(ELWCM(I))                                                 
      E1=ALOG(ELWCM(II))                                                
C                                                                       
C     NAVY MARITIME AEROSOL CHANGES TO MARINE IN MICROWAVE              
C     NO NEED TO DEFINE EQUIVALENT WATER                                
C                                                                       
      GO TO 80                                                          
   25 Y2=ALOG(OCNEXT(N,I))                                              
      Y1=ALOG(OCNEXT(N,II))                                             
      Z2=ALOG(OCNABS(N,I))                                              
      Z1=ALOG(OCNABS(N,II))                                             
      A2=ALOG(OCNSYM(N,I))                                              
      A1=ALOG(OCNSYM(N,II))                                             
      E2=ALOG(ELWCM(I))                                                 
      E1=ALOG(ELWCM(II))                                                
      GO TO 40                                                          
   30 Y2=ALOG(URBEXT(N,I))                                              
      Y1=ALOG(URBEXT(N,II))                                             
      Z2=ALOG(URBABS(N,I))                                              
      Z1=ALOG(URBABS(N,II))                                             
      A2=ALOG(URBSYM(N,I))                                              
      A1=ALOG(URBSYM(N,II))                                             
      E2=ALOG(ELWCU(I))                                                 
      E1=ALOG(ELWCU(II))                                                
      GO TO 40                                                          
   35 Y2=ALOG(TROEXT(N,I))                                              
      Y1=ALOG(TROEXT(N,II))                                             
      Z2=ALOG(TROABS(N,I))                                              
      Z1=ALOG(TROABS(N,II))                                             
      A2=ALOG(TROSYM(N,I))                                              
      A1=ALOG(TROSYM(N,II))                                             
      E2=ALOG(ELWCT(I))                                                 
      E1=ALOG(ELWCT(II))                                                
   40 Y=Y1+(Y2-Y1)*(X-X1)/(X2-X1)                                       
      ZK=Z1+(Z2-Z1)*(X-X1)/(X2-X1)                                      
      A=A1+(A2-A1)*(X-X1)/(X2-X1)                                       
      ABSC(M,N)=EXP(ZK)                                                 
      EXTC(M,N)=EXP(Y)                                                  
      ASYM(M,N)=EXP(A)                                                  
      IF(N.EQ.1) EC=E1+(E2-E1)*(X-X1)/(X2-X1)                           
      IF(N.EQ.1) AWCCON(M)=EXP(EC)                                      
      GO TO 80                                                          
   45 IF (ITA.GT.19) GO TO 75                                           
      IF (ITC.LT.1) GO TO 80                                            
      GO TO (50,55,80,60,65,70,65,70,60,60,70,75), ITC                  
   50 ABSC(M,N)=FG1ABS(N)                                               
      EXTC(M,N)=FG1EXT(N)                                               
      ASYM(M,N)=FG1SYM(N)                                               
      IF(N.EQ.1) AWCCON(M)=AFLWC                                        
      GO TO 80                                                          
   55 ABSC(M,N)=FG2ABS(N)                                               
      EXTC(M,N)=FG2EXT(N)                                               
      ASYM(M,N)=FG2SYM(N)                                               
      IF(N.EQ.1) AWCCON(M)=RFLWC                                        
      GO TO 80                                                          
   60 ABSC(M,N)=BSTABS(N)                                               
      EXTC(M,N)=BSTEXT(N)                                               
      ASYM(M,N)=BSTSYM(N)                                               
      IF(N.EQ.1) AWCCON(M)=BSLWC                                        
      GO TO 80                                                          
   65 ABSC(M,N)=AVOABS(N)                                               
      EXTC(M,N)=AVOEXT(N)                                               
      ASYM(M,N)=AVOSYM(N)                                               
      IF(N.EQ.1) AWCCON(M)=AVLWC                                        
      GO TO 80                                                          
   70 ABSC(M,N)=FVOABS(N)                                               
      EXTC(M,N)=FVOEXT(N)                                               
      ASYM(M,N)=FVOSYM(N)                                               
      IF(N.EQ.1) AWCCON(M)=FVLWC                                        
      GO TO 80                                                          
   75 ABSC(M,N)=DMEABS(N)                                               
      EXTC(M,N)=DMEEXT(N)                                               
      ASYM(M,N)=DMESYM(N)                                               
      IF(N.EQ.1) AWCCON(M)=MDLWC                                        
   80 CONTINUE                                                          
      GO TO 185                                                         
100   CONTINUE                                                          
CCC                                                                     
CCC       SECTION TO LOAD EXTINCTION AND ABSORPTION COEFFICIENTS        
CCC       FOR CLOUD AND OR RAIN MODELS                                  
CCC                                                                     
      DO 150 N=1,NE                                                     
      ABSC(M,N)=0.0                                                     
      EXTC(M,N)=0.0                                                     
      ASYM(M,N)=0.0                                                     
      IC=ICLD                                                           
      GO TO (125,130,135,140,145,135,145,145,125,125,125), IC           
125   ABSC(M,N)=CCUABS(N)                                               
      EXTC(M,N)=CCUEXT(N)                                               
      ASYM(M,N)=CCUSYM(N)                                               
      IF(N.EQ.1) AWCCON(M)=CULWC                                        
      GO TO 150                                                         
130   ABSC(M,N)=CALABS(N)                                               
      EXTC(M,N)=CALEXT(N)                                               
      ASYM(M,N)=CALSYM(N)                                               
      IF(N.EQ.1) AWCCON(M)=ASLWC                                        
      GO TO 150                                                         
135   ABSC(M,N)=CSTABS(N)                                               
      EXTC(M,N)=CSTEXT(N)                                               
      ASYM(M,N)=CSTSYM(N)                                               
      IF(N.EQ.1) AWCCON(M)=STLWC                                        
      GO TO 150                                                         
140   ABSC(M,N)=CSCABS(N)                                               
      EXTC(M,N)=CSCEXT(N)                                               
      ASYM(M,N)=CSCSYM(N)                                               
      IF(N.EQ.1) AWCCON(M)=SCLWC                                        
      GO TO 150                                                         
145   ABSC(M,N)=CNIABS(N)                                               
      EXTC(M,N)=CNIEXT(N)                                               
      ASYM(M,N)=CNISYM(N)                                               
      IF(N.EQ.1) AWCCON(M)=SNLWC                                        
150   CONTINUE                                                          
185   CONTINUE                                                          
      DO 200 N=1,NWAVLN                                                 
      ABSC(5,N)=0.                                                      
      EXTC(5,N)=0.                                                      
      ASYM(5,N)=0.                                                      
      AWCCON(5)=0.                                                      
      IF(ICLD .EQ. 18) THEN                                             
           EXTC(5,N)= CI64XT(N)                                         
           ABSC(5,N)= CI64AB(N)                                         
           ASYM(5,N)= CI64G(N)                                          
           AWCCON(5)=3.446E-3                                           
      ENDIF                                                             
      IF(ICLD .EQ. 19) THEN                                             
           EXTC(5,N)= CIR4XT(N)                                         
           ABSC(5,N)= CIR4AB(N)                                         
           ASYM(5,N)= CIR4G(N)                                          
           AWCCON(5)=5.811E-2                                           
      ENDIF                                                             
200   CONTINUE                                                          
      RETURN                                                            
C                                                                       
      END                                                               
      REAL FUNCTION EXPINT(X1,X2,A)                                     
C                                                                       
C     EXPONENTIAL INTERPOLATION FOR POSITIVE ARGUMENTS                  
      REAL X1,X2,A                                                      
      IF(X1.GT.0. .AND. X2.GT.0.)THEN                                   
          EXPINT=X1*(X2/X1)**A                                          
      ELSE                                                              
          EXPINT=X1+(X2-X1)*A                                           
      ENDIF                                                             
      RETURN                                                            
      END                                                               
      BLOCK DATA EXTDTA                                                 
      INCLUDE 'PARAM.LST'                                               
C>    BLOCK DATA                                                        
CCC                                                                     
CCC   ALTITUDE REGIONS FOR AEROSOL EXTINCTION COEFFICIENTS              
CCC                                                                     
CCC                                                                     
CCC         0-2KM                                                       
CCC           RUREXT=RURAL EXTINCTION   RURABS=RURAL ABSORPTION         
CCC           RURSYM=RURAL ASYMMETRY FACTORS                            
CCC           URBEXT=URBAN EXTINCTION   URBABS=URBAN ABSORPTION         
CCC           URBSYM=URBAN ASYMMETRY FACTORS                            
CCC           OCNEXT=MARITIME EXTINCTION  OCNABS=MARITIME ABSORPTION    
CCC           OCNSYM=MARITIME ASYMMETRY FACTORS                         
CCC           TROEXT=TROPSPHER EXTINCTION  TROABS=TROPOSPHER ABSORPTION 
CCC           TROSYM=TROPSPHERIC ASYMMETRY FACTORS                      
CCC           FG1EXT=FOG1 .2KM VIS EXTINCTION  FG1ABS=FOG1 ABSORPTION   
CCC           FG1SYM=FOG1 ASYMMETRY FACTORS                             
CCC           FG2EXT=FOG2 .5KM VIS EXTINCTION  FG2ABS=FOG2 ABSORPTION   
CCC           FG2SYM=FOG2 ASYMMETRY FACTORS                             
CCC         >2-10KM                                                     
CCC           TROEXT=TROPOSPHER EXTINCTION  TROABS=TROPOSPHER ABSORPTION
CCC           TROSYM=TROPOSPHERIC ASYMMETRY FACTORS                     
CCC         >10-30KM                                                    
CCC           BSTEXT=BACKGROUND STRATOSPHERIC EXTINCTION                
CCC           BSTABS=BACKGROUND STRATOSPHERIC ABSORPTION                
CCC           BSTSYM=BACKGROUND STRATOSPHERIC ASYMMETRY FACTORS         
CCC           AVOEXT=AGED VOLCANIC EXTINCTION                           
CCC           AVOABS=AGED VOLCANIC ABSORPTION                           
CCC           AVOSYM=AGED VOLCANIC ASYMMETRY FACTORS                    
CCC           FVOEXT=FRESH VOLCANIC EXTINCTION                          
CCC           FVOABS=FRESH VOLCANIC ABSORPTION                          
CCC           FVOSYM=FRESH VOLCANIC ASYMMETRY FACTORS                   
CCC         >30-100KM                                                   
CCC           DMEEXT=METEORIC DUST EXTINCTION                           
CCC           DMEABS=METEORIC DUST ABSORPTION                           
CCC           DMESYM=METEORIC DUST ASYMMETRY FACTORS                    
C                                                                       
C     AEROSOL EXTINCTION AND ABSORPTION DATA                            
C                                                                       
C     MODIFIED TO INCLUDE ASYMMETRY DATA - JAN 1986 (A.E.R. INC.)       
C                                                                       
      COMMON/EXTD/VX0(NWAVLN),                                          
     1  RUREXT(NWAVLN,4),RURABS(NWAVLN,4),RURSYM(NWAVLN,4),             
     2  URBEXT(NWAVLN,4),URBABS(NWAVLN,4),URBSYM(NWAVLN,4),             
     3  OCNEXT(NWAVLN,4),OCNABS(NWAVLN,4),OCNSYM(NWAVLN,4),             
     4  TROEXT(NWAVLN,4),TROABS(NWAVLN,4),TROSYM(NWAVLN,4),             
     5  FG1EXT(NWAVLN),FG1ABS(NWAVLN),FG1SYM(NWAVLN),                   
     6  FG2EXT(NWAVLN),FG2ABS(NWAVLN),FG2SYM(NWAVLN),                   
     7  BSTEXT(NWAVLN),BSTABS(NWAVLN),BSTSYM(NWAVLN),                   
     8  AVOEXT(NWAVLN),AVOABS(NWAVLN),AVOSYM(NWAVLN),                   
     9  FVOEXT(NWAVLN),FVOABS(NWAVLN),FVOSYM(NWAVLN),                   
     &  DMEEXT(NWAVLN),DMEABS(NWAVLN),DMESYM(NWAVLN),                   
     1  CCUEXT(NWAVLN),CCUABS(NWAVLN),CCUSYM(NWAVLN),                   
     2  CALEXT(NWAVLN),CALABS(NWAVLN),CALSYM(NWAVLN),                   
     3  CSTEXT(NWAVLN),CSTABS(NWAVLN),CSTSYM(NWAVLN),                   
     4  CSCEXT(NWAVLN),CSCABS(NWAVLN),CSCSYM(NWAVLN),                   
     5  CNIEXT(NWAVLN),CNIABS(NWAVLN),CNISYM(NWAVLN)                    
C                                                                       
C         CI64--    STANDARD  CIRRUS  CLOUD  MODEL                      
C              ICE 64 MICRON MODE RADIUS CIRRUS CLOUD MODEL             
C                                                                       
C         CIR4--    OPTICALLY  THIN  CIRRUS  MODEL                      
C              ICE  4 MICRON MODE RADIUS CIRRUS CLOUD MODEL             
C                                                                       
      COMMON/CIRR/CI64XT(NWAVLN),CI64AB(NWAVLN),CI64G(NWAVLN),          
     1            CIR4XT(NWAVLN),CIR4AB(NWAVLN),CIR4G(NWAVLN)           
      DATA VX0 /                                                        
     *   .2000,   .3000,   .3371,   .5500,   .6943,  1.0600,  1.5360,   
     *  2.0000,  2.2500,  2.5000,  2.7000,  3.0000,  3.3923,  3.7500,   
     *  4.5000,  5.0000,  5.5000,  6.0000,  6.2000,  6.5000,  7.2000,   
     *  7.9000,  8.2000,  8.7000,  9.0000,  9.2000, 10.0000, 10.5910,   
     * 11.0000, 11.5000, 12.5000, 14.8000, 15.0000, 16.4000, 17.2000,   
     * 18.5000, 21.3000, 25.0000, 30.0000, 40.0000, 50.0000, 60.0000,   
     * 80.0000, 100.000, 150.000, 200.000, 300.000/                     
      DATA (RUREXT(I,1),I=1,NWAVLN)/                                    
     1 2.09291, 1.74582, 1.60500, 1.00000,  .75203,  .41943,  .24070,   
     2  .14709,  .13304,  .12234,  .13247,  .11196,  .10437,  .09956,   
     3  .09190,  .08449,  .07861,  .07025,  .07089,  .07196,  .07791,   
     4  .04481,  .04399,  .12184,  .12658,  .12829,  .09152,  .08076,   
     5  .07456,  .06880,  .06032,  .04949,  .05854,  .06000,  .06962,   
     6  .05722,  .06051,  .05177,  .04589,  .04304,                     
     7  .03582,  .03155,  .02018,  .01469,  .00798,  .00551, 0./        
      DATA (RUREXT(I,2),I=1,NWAVLN)/                                    
     1 2.09544, 1.74165, 1.59981, 1.00000,  .75316,  .42171,  .24323,   
     2  .15108,  .13608,  .12430,  .13222,  .13823,  .11076,  .10323,   
     3  .09475,  .08728,  .08076,  .07639,  .07797,  .07576,  .07943,   
     4  .04899,  .04525,  .12165,  .12741,  .12778,  .09032,  .07962,   
     5  .07380,  .06880,  .06329,  .05791,  .06646,  .06639,  .07443,   
     6  .06304,  .06443,  .05538,  .04867,  .04519,                     
     7  .03821,  .03374,  .02173,  .01587,  .00862,  .00594, 0./        
      DATA (RUREXT(I,3),I=1,NWAVLN)/                                    
     1 2.07082, 1.71456, 1.57962, 1.00000,  .76095,  .43228,  .25348,   
     2  .16456,  .14677,  .13234,  .13405,  .20316,  .12873,  .11506,   
     3  .10481,  .09709,  .08918,  .09380,  .09709,  .08791,  .08601,   
     4  .06247,  .05601,  .11905,  .12595,  .12348,  .08741,  .07703,   
     5  .07266,  .07044,  .07443,  .08146,  .08810,  .08563,  .08962,   
     6  .08051,  .07677,  .06658,  .05747,  .05184,                     
     7  .04572,  .04074,  .02689,  .01981,  .01084,  .00714, 0./        
      DATA (RUREXT(I,4),I=1,NWAVLN)/                                    
     1 1.66076, 1.47886, 1.40139, 1.00000,  .80652,  .50595,  .32259,   
     2  .23468,  .20772,  .18532,  .17348,  .35114,  .20006,  .17386,   
     3  .16139,  .15424,  .14557,  .16215,  .16766,  .14994,  .14032,   
     4  .12968,  .12601,  .13551,  .13582,  .13228,  .11070,  .09994,   
     5  .09873,  .10418,  .13241,  .15924,  .16139,  .15949,  .15778,   
     6  .15184,  .13848,  .12563,  .11076,  .09601,                     
     7  .09312,  .08720,  .06644,  .05264,  .03181,  .02196, 0.0/       
      DATA (RURABS(I,1),I=1,NWAVLN)/                                    
     1  .67196,  .11937,  .08506,  .05930,  .05152,  .05816,  .05006,   
     2  .01968,  .02070,  .02101,  .05652,  .02785,  .01316,  .00867,   
     3  .01462,  .01310,  .01627,  .02013,  .02165,  .02367,  .03538,   
     4  .02823,  .03962,  .06778,  .07285,  .08120,  .04032,  .03177,   
     5  .02557,  .02342,  .02177,  .02627,  .03943,  .03114,  .03696,   
     6  .02956,  .03500,  .03241,  .03297,  .03380,                     
     7  .03170,  .02794,  .01769,  .01305,  .00730,  .00518, 0.0/       
      DATA (RURABS(I,2),I=1,NWAVLN)/                                    
     1  .62968,  .10816,  .07671,  .05380,  .04684,  .05335,  .04614,   
     2  .01829,  .01899,  .01962,  .05525,  .06816,  .01652,  .00867,   
     3  .01544,  .01373,  .01627,  .02892,  .02829,  .02532,  .03487,   
     4  .02835,  .03854,  .06684,  .07272,  .08038,  .03987,  .03247,   
     5  .02816,  .02816,  .03101,  .03741,  .04829,  .04032,  .04399,   
     6  .03734,  .03956,  .03601,  .03525,  .03563,                     
     7 .03357,  .02965,  .01887,  .01395,  .00782,  .00555, 0.0/        
      DATA (RURABS(I,3),I=1,NWAVLN)/                                    
     1  .51899,  .08278,  .05816,  .04082,  .03570,  .04158,  .03620,   
     2  .01513,  .01481,  .01633,  .05278,  .13690,  .02494,  .00886,   
     3  .01804,  .01582,  .01677,  .04816,  .04367,  .03013,  .03443,   
     4  .02930,  .03677,  .06209,  .06911,  .07475,  .03892,  .03494,   
     5  .03513,  .03968,  .05152,  .06241,  .06937,  .06203,  .06215,   
     6  .05614,  .05209,  .04608,  .04196,  .04095,                     
     7  .03916,  .03486,  .02262,  .01686,  .00951,  .00674, 0.0/       
      DATA (RURABS(I,4),I=1,NWAVLN)/                                    
     1  .21943,  .02848,  .01943,  .01342,  .01171,  .01437,  .01323,   
     2  .01152,  .00696,  .01329,  .06108,  .24690,  .05323,  .01430,   
     3  .03361,  .02949,  .02652,  .09437,  .08506,  .05348,  .04627,   
     4  .04380,  .04557,  .05380,  .05715,  .05899,  .04861,  .05253,   
     5  .06171,  .07437,  .10152,  .12019,  .12190,  .11734,  .11411,   
     6  .10766,  .09487,  .08430,  .07348,  .06861,                     
     7  .06936,  .06458,  .04735,  .03761,  .02313,  .01668, 0.0/       
      DATA (RURSYM(I,1),I=1,NWAVLN)/                                    
     1  .7581,   .6785,   .6712,   .6479,   .6342,   .6176,   .6334,    
     2  .7063,   .7271,   .7463,   .7788,   .7707,   .7424,   .7312,    
     3  .7442,   .7516,   .7662,   .7940,   .7886,   .7797,   .7664,    
     4  .8525,   .8700,   .5846,   .5570,   .5992,   .6159,   .6271,    
     5  .6257,   .6374,   .6546,   .6861,   .6859,   .6120,   .5570,    
     6  .5813,   .5341,   .5284,   .5137,   .4348,   .4223,   .3775,    
     7  .3435,   .3182,   .2791,   .2494,   .0000/                      
      DATA (RURSYM(I,2),I=1,NWAVLN)/                                    
     1  .7632,   .6928,   .6865,   .6638,   .6498,   .6314,   .6440,    
     2  .7098,   .7303,   .7522,   .7903,   .7804,   .7380,   .7319,    
     3  .7508,   .7584,   .7738,   .8071,   .7929,   .7843,   .7747,    
     4  .8507,   .8750,   .6112,   .5851,   .6272,   .6466,   .6616,    
     5  .6653,   .6798,   .6965,   .7026,   .6960,   .6360,   .5848,    
     6  .6033,   .5547,   .5445,   .5274,   .4518,   .4318,   .3863,    
     7  .3516,   .3257,   .2853,   .2548,   .0000/                      
      DATA (RURSYM(I,3),I=1,NWAVLN)/                                    
     1  .7725,   .7240,   .7197,   .6997,   .6858,   .6650,   .6702,    
     2  .7181,   .7378,   .7653,   .8168,   .7661,   .7286,   .7336,    
     3  .7654,   .7735,   .7910,   .8303,   .8025,   .7957,   .7946,    
     4  .8468,   .8734,   .6831,   .6619,   .6994,   .7250,   .7449,    
     5  .7547,   .7665,   .7644,   .7265,   .7170,   .6769,   .6409,    
     6  .6442,   .6031,   .5854,   .5646,   .4977,   .4602,   .4127,    
     7  .3751,   .3476,   .3048,   .2721,   .0000/                      
      DATA (RURSYM(I,4),I=1,NWAVLN)/                                    
     1  .7778,   .7793,   .7786,   .7717,   .7628,   .7444,   .7365,    
     2  .7491,   .7609,   .7921,   .8688,   .7537,   .7294,   .7413,    
     3  .7928,   .8016,   .8225,   .8761,   .8359,   .8285,   .8385,    
     4  .8559,   .8654,   .8414,   .8415,   .8527,   .8740,   .8903,    
     5  .8952,   .8923,   .8611,   .8033,   .7989,   .7758,   .7632,    
     6  .7508,   .7314,   .7091,   .6867,   .6419,   .5790,   .5259,    
     7  .4749,   .4415,   .3886,   .3489,   .0000/                      
      DATA (URBEXT(I,1),I=1,NWAVLN)/                                    
     1 1.88816, 1.63316, 1.51867, 1.00000,  .77785,  .47095,  .30006,   
     2  .21392,  .19405,  .17886,  .18127,  .16133,  .14785,  .14000,   
     3  .12715,  .11880,  .11234,  .10601,  .10500,  .10361,  .10342,   
     4  .08766,  .08652,  .11937,  .12139,  .12297,  .09797,  .09057,   
     5  .08595,  .08196,  .07563,  .06696,  .07209,  .06842,  .07177,   
     6  .06354,  .06177,  .05373,  .04728,  .04051,                     
     7  .03154,  .02771,  .01759,  .01278,  .00693,  .00480, 0.0/       
      DATA (URBEXT(I,2),I=1,NWAVLN)/                                    
     1 1.95582, 1.64994, 1.53070, 1.00000,  .77614,  .46639,  .29487,   
     2  .21051,  .18943,  .17285,  .17209,  .21418,  .15354,  .14051,   
     3  .12728,  .11861,  .11089,  .11329,  .11323,  .10563,  .10247,   
     4  .08696,  .08361,  .12013,  .12418,  .12304,  .09614,  .08842,   
     5  .08487,  .08285,  .08361,  .08430,  .08880,  .08449,  .08601,   
     6  .07835,  .07323,  .06367,  .05500,  .04747,                     
     7  .03901,  .03454,  .02240,  .01638,  .00891,  .00612, 0.0/       
      DATA (URBEXT(I,3),I=1,NWAVLN)/                                    
     1 1.96430, 1.64032, 1.52392, 1.00000,  .77709,  .46253,  .28690,   
     2  .20310,  .17981,  .16101,  .15614,  .26475,  .15456,  .13563,   
     3  .12215,  .11361,  .10500,  .11715,  .11753,  .10392,  .09766,   
     4  .08443,  .08057,  .10943,  .11342,  .11063,  .08703,  .08025,   
     5  .07886,  .08032,  .09101,  .10070,  .10386,  .09943,  .09886,   
     6  .09152,  .08247,  .07152,  .06089,  .05253,                     
     7  .04582,  .04091,  .02717,  .02008,  .01103,  .00754, 0.0/       
      DATA (URBEXT(I,4),I=1,NWAVLN)/                                    
     1 1.41266, 1.33816, 1.29114, 1.00000,  .83646,  .55025,  .35342,   
     2  .25285,  .21576,  .18310,  .16215,  .37854,  .20494,  .16665,   
     3  .14778,  .13892,  .12943,  .15525,  .15709,  .13513,  .12481,   
     4  .11759,  .11494,  .11487,  .11329,  .11108,  .09911,  .09209,   
     5  .09342,  .10120,  .13177,  .15696,  .15766,  .15513,  .15203,   
     6  .14532,  .13038,  .11785,  .10411,  .09101,                     
     7  .08907,  .08399,  .06579,  .05337,  .03372,  .02379, 0.0/       
      DATA (URBABS(I,1),I=1,NWAVLN)/                                    
     1  .78437,  .58975,  .54285,  .36184,  .29222,  .20886,  .15658,   
     2  .12329,  .11462,  .10747,  .11797,  .10025,  .08759,  .08184,   
     3  .07506,  .07006,  .06741,  .06601,  .06544,  .06449,  .06665,   
     4  .06278,  .06949,  .07316,  .07462,  .08101,  .05753,  .05272,   
     5  .04899,  .04734,  .04494,  .04443,  .05133,  .04348,  .04443,   
     6  .03994,  .03981,  .03633,  .03468,  .03146,                     
     7  .02809,  .02471,  .01556,  .01145,  .00639,  .00454, 0.0/       
      DATA (URBABS(I,2),I=1,NWAVLN)/                                    
     1  .69032,  .49367,  .45165,  .29741,  .24070,  .17399,  .13146,   
     2  .10354,  .09589,  .09025,  .10411,  .15101,  .07880,  .06949,   
     3  .06570,  .06095,  .05829,  .07171,  .06797,  .05975,  .06013,   
     4  .05589,  .06051,  .07139,  .07494,  .07956,  .05525,  .05184,   
     5  .05089,  .05291,  .05886,  .06380,  .06880,  .06127,  .06019,   
     6  .05525,  .05070,  .04500,  .04076,  .03741,                     
     7  .03400,  .03010,  .01926,  .01427,  .00800,  .00567, 0.0/       
      DATA (URBABS(I,3),I=1,NWAVLN)/                                    
     1  .54848,  .37101,  .33734,  .21949,  .17785,  .12968,  .09854,   
     2  .07804,  .07165,  .06791,  .08563,  .19639,  .06722,  .05316,   
     3  .05316,  .04886,  .04620,  .07570,  .06899,  .05291,  .05101,   
     4  .04734,  .05025,  .06171,  .06570,  .06854,  .04892,  .04797,   
     5  .05057,  .05665,  .07127,  .08095,  .08411,  .07728,  .07475,   
     6  .06886,  .06019,  .05222,  .04538,  .04171,                     
     7  .03911,  .03486,  .02271,  .01697,  .00961,  .00681, 0.0/       
      DATA (URBABS(I,4),I=1,NWAVLN)/                                    
     1  .15975,  .10000,  .09013,  .05785,  .04671,  .03424,  .02633,   
     2  .02525,  .01975,  .02354,  .06241,  .26690,  .05810,  .02285,   
     3  .03810,  .03386,  .03044,  .09627,  .08557,  .05405,  .04576,   
     4  .04392,  .04424,  .04671,  .04791,  .04861,  .04684,  .05177,   
     5  .06158,  .07475,  .10342,  .12146,  .12177,  .11734,  .11335,   
     6  .10608,  .09171,  .08063,  .06968,  .06475,                     
     7  .06559,  .06131,  .04591,  .03714,  .02365,  .01734, 0.0/       
      DATA (URBSYM(I,1),I=1,NWAVLN)/                                    
     1  .7785,   .7182,   .7067,   .6617,   .6413,   .6166,   .6287,    
     2  .6883,   .7070,   .7243,   .7370,   .7446,   .7391,   .7371,    
     3  .7414,   .7435,   .7466,   .7543,   .7498,   .7424,   .7270,    
     4  .7674,   .7850,   .5880,   .5616,   .5901,   .6159,   .6238,    
     5  .6240,   .6281,   .6306,   .6298,   .6252,   .5785,   .5378,    
     6  .5512,   .5072,   .4930,   .4709,   .4009,   .4110,   .3672,    
     7  .3344,   .3093,   .2717,   .2426,   .0000/                      
      DATA (URBSYM(I,2),I=1,NWAVLN)/                                    
     1  .7906,   .7476,   .7385,   .6998,   .6803,   .6536,   .6590,    
     2  .7066,   .7258,   .7484,   .7769,   .7405,   .7351,   .7459,    
     3  .7625,   .7673,   .7759,   .7910,   .7732,   .7703,   .7644,    
     4  .7966,   .8142,   .6635,   .6428,   .6700,   .6935,   .7050,    
     5  .7092,   .7145,   .7094,   .6762,   .6684,   .6316,   .5997,    
     6  .6013,   .5625,   .5433,   .5198,   .4552,   .4387,   .3928,    
     7  .3575,   .3310,   .2899,   .2588,   .0000/                      
      DATA (URBSYM(I,3),I=1,NWAVLN)/                                    
     1  .7949,   .7713,   .7650,   .7342,   .7162,   .6873,   .6820,    
     2  .7131,   .7312,   .7583,   .8030,   .7171,   .7185,   .7400,    
     3  .7698,   .7778,   .7923,   .8142,   .7864,   .7867,   .7891,    
     4  .8147,   .8298,   .7276,   .7136,   .7361,   .7590,   .7729,    
     5  .7783,   .7808,   .7624,   .7094,   .7022,   .6714,   .6480,    
     6  .6417,   .6104,   .5887,   .5651,   .5058,   .4692,   .4212,    
     7  .3825,   .3549,   .3112,   .2778,   .0000/                      
      DATA (URBSYM(I,4),I=1,NWAVLN)/                                    
     1  .7814,   .7993,   .7995,   .7948,   .7870,   .7682,   .7751,    
     2  .7501,   .7565,   .7809,   .8516,   .7137,   .7039,   .7241,    
     3  .7728,   .7846,   .8093,   .8576,   .8125,   .8140,   .8304,    
     4  .8472,   .8549,   .8525,   .8569,   .8640,   .8853,   .9017,    
     5  .9061,   .9021,   .8685,   .8126,   .8091,   .7897,   .7802,    
     6  .7691,   .7550,   .7353,   .7146,   .6754,   .6134,   .5601,    
     7  .5056,   .4701,   .4134,   .3714,   .0000/                      
      DATA (OCNEXT(I,1),I=1,NWAVLN)/                                    
     1 1.47576, 1.32614, 1.26171, 1.00000,  .88133,  .70297,  .56487,   
     2  .46006,  .42044,  .38310,  .35076,  .42266,  .32278,  .28810,   
     3  .24905,  .21184,  .16734,  .14791,  .21532,  .15076,  .12057,   
     4  .10038,  .10703,  .15070,  .15665,  .14639,  .10228,  .08367,   
     5  .07373,  .06829,  .05044,  .04373,  .04962,  .06158,  .07703,   
     6  .07234,  .06297,  .05481,  .05329,  .08741,                     
     7  .04608,  .03959,  .02382,  .01712,  .00936,  .00665, 0.0/       
      DATA (OCNEXT(I,2),I=1,NWAVLN)/                                    
     1 1.36924, 1.25443, 1.20835, 1.00000,  .91367,  .77089,  .64987,   
     2  .54886,  .50247,  .45038,  .38209,  .50589,  .43766,  .38076,   
     3  .31658,  .27475,  .22215,  .21019,  .27570,  .21057,  .16949,   
     4  .14209,  .14215,  .16956,  .17082,  .16025,  .11665,  .09759,   
     5  .09215,  .09373,  .10532,  .12570,  .13000,  .13633,  .14291,   
     6  .13506,  .11475,  .09658,  .08291,  .10348,                     
     7  .06693,  .05786,  .03522,  .02519,  .01358,  .00954, 0.0/       
      DATA (OCNEXT(I,3),I=1,NWAVLN)/                                    
     1 1.22259, 1.14627, 1.11842, 1.00000,  .94766,  .87538,  .80418,   
     2  .72930,  .68582,  .62165,  .49962,  .67949,  .66468,  .59253,   
     3  .49551,  .44671,  .37886,  .35924,  .43367,  .37019,  .30842,   
     4  .26437,  .25228,  .24905,  .23975,  .22766,  .17804,  .15316,   
     5  .15373,  .16791,  .22361,  .28348,  .28677,  .29082,  .29038,   
     6  .27810,  .23867,  .20209,  .16430,  .14943,                     
     7  .12693,  .11177,  .07095,  .05084,  .02690,  .01838, 0.0/       
      DATA (OCNEXT(I,4),I=1,NWAVLN)/                                    
     1 1.09133, 1.06601, 1.05620, 1.00000,  .97506,  .94791,  .94203,   
     2  .93671,  .92867,  .90411,  .80253,  .89222,  .94462,  .92146,   
     3  .85797,  .82595,  .76747,  .68646,  .78209,  .75266,  .68658,   
     4  .62722,  .60228,  .56335,  .53728,  .51861,  .43449,  .37196,   
     5  .35899,  .37316,  .46854,  .58234,  .58690,  .60348,  .60563,   
     6  .60000,  .55392,  .50367,  .43576,  .35949,                     
     7  .34729,  .32254,  .23600,  .17953,  .10071,  .06714, 0.0/       
      DATA (OCNABS(I,1),I=1,NWAVLN)/                                    
     1  .30987,  .04354,  .02880,  .01797,  .01468,  .01766,  .01582,   
     2  .00816,  .01146,  .01677,  .03310,  .03380,  .00715,  .00443,   
     3  .00500,  .00601,  .00753,  .01595,  .02943,  .00994,  .01367,   
     4  .01671,  .02538,  .03481,  .03405,  .03601,  .01608,  .01310,   
     5  .01152,  .01082,  .01070,  .01563,  .02063,  .03171,  .03810,   
     6  .03741,  .03804,  .03759,  .04209,  .07892,                     
     7  .04347,  .03754,  .02269,  .01649,  .00917,  .00657, 0.0/       
      DATA (OCNABS(I,2),I=1,NWAVLN)/                                    
     1  .23367,  .03127,  .02070,  .01297,  .01063,  .01285,  .01190,   
     2  .00937,  .00911,  .01576,  .05576,  .23487,  .03949,  .00905,   
     3  .02057,  .01816,  .01665,  .08025,  .08044,  .03677,  .03139,   
     4  .03190,  .03766,  .04532,  .04544,  .04715,  .03405,  .03614,   
     5  .04329,  .05424,  .07823,  .09728,  .10057,  .10247,  .10222,   
     6  .09551,  .08241,  .07158,  .06506,  .09203,                     
     7  .06133,  .05332,  .03258,  .02366,  .01308,  .00932, 0.0/       
      DATA (OCNABS(I,3),I=1,NWAVLN)/                                    
     1  .13025,  .01557,  .01013,  .00646,  .00532,  .00665,  .00722,   
     2  .01335,  .00728,  .01810,  .09835,  .37329,  .09703,  .01968,   
     3  .05114,  .04342,  .03709,  .17456,  .16468,  .08785,  .06880,   
     4  .06589,  .06791,  .07247,  .07329,  .07449,  .07025,  .07962,   
     5  .09899,  .12481,  .17867,  .22019,  .22228,  .22051,  .21595,   
     6  .20335,  .17278,  .14677,  .12171,  .12430,                     
     7  .10890,  .09644,  .06106,  .04465,  .02457,  .01732, 0.0/       
      DATA (OCNABS(I,4),I=1,NWAVLN)/                                    
     1  .03506,  .00323,  .00215,  .00139,  .00114,  .00171,  .00532,   
     2  .03082,  .01101,  .03741,  .20101,  .47608,  .21165,  .05234,   
     3  .12886,  .11215,  .09684,  .32810,  .31778,  .20513,  .16658,   
     4  .15956,  .15842,  .15905,  .15968,  .16051,  .16506,  .18323,   
     5  .21709,  .25652,  .33222,  .39639,  .39854,  .40297,  .40025,   
     6  .39025,  .35468,  .32006,  .27715,  .25348,                     
     7  .25632,  .23876,  .17092,  .13198,  .07692,  .05407, 0.0/       
      DATA (OCNSYM(I,1),I=1,NWAVLN)/                                    
     1  .7516,   .6960,   .6920,   .6756,   .6767,   .6844,   .6936,    
     2  .7055,   .7110,   .7177,   .7367,   .6287,   .6779,   .6784,    
     3  .6599,   .6659,   .6859,   .6887,   .6095,   .6558,   .6665,    
     4  .6697,   .6594,   .5851,   .5644,   .5760,   .5903,   .5991,    
     5  .6024,   .5979,   .6087,   .5837,   .5763,   .5348,   .4955,    
     6  .4821,   .4635,   .4373,   .3944,   .2344,   .2754,   .2447,    
     7  .2266,   .2088,   .1766,   .1481,   .0000/                      
      DATA (OCNSYM(I,2),I=1,NWAVLN)/                                    
     1  .7708,   .7288,   .7243,   .7214,   .7211,   .7330,   .7445,    
     2  .7579,   .7649,   .7790,   .8182,   .7673,   .7171,   .7205,    
     3  .7235,   .7251,   .7397,   .7537,   .6934,   .7137,   .7193,    
     4  .7206,   .7151,   .6732,   .6620,   .6696,   .6821,   .6895,    
     5  .6898,   .6819,   .6556,   .5925,   .5869,   .5511,   .5284,    
     6  .5124,   .4912,   .4646,   .4302,   .3124,   .3101,   .2752,    
     7  .2529,   .2335,   .2021,   .1738,   .0000/                      
      DATA (OCNSYM(I,3),I=1,NWAVLN)/                                    
     1  .7954,   .7782,   .7752,   .7717,   .7721,   .7777,   .7872,    
     2  .8013,   .8089,   .8301,   .8844,   .8332,   .7557,   .7597,    
     3  .7823,   .7822,   .7944,   .8157,   .7712,   .7738,   .7784,    
     4  .7807,   .7800,   .7682,   .7659,   .7692,   .7780,   .7828,    
     5  .7776,   .7621,   .7115,   .6342,   .6294,   .5999,   .5854,    
     6  .5700,   .5512,   .5265,   .4996,   .4236,   .3765,   .3357,    
     7  .3066,   .2830,   .2466,   .2184,   .0000/                      
      DATA (OCNSYM(I,4),I=1,NWAVLN)/                                    
     1  .8208,   .8270,   .8260,   .8196,   .8176,   .8096,   .8096,    
     2  .8202,   .8255,   .8520,   .9228,   .8950,   .7965,   .7847,    
     3  .8242,   .8244,   .8376,   .8857,   .8463,   .8332,   .8379,    
     4  .8441,   .8467,   .8502,   .8534,   .8562,   .8688,   .8789,    
     5  .8785,   .8683,   .8252,   .7562,   .7519,   .7261,   .7141,    
     6  .6980,   .6789,   .6540,   .6294,   .5783,   .5100,   .4595,    
     7  .4164,   .3868,   .3404,   .3042,   .0000/                      
      DATA (TROEXT(I,1),I=1,NWAVLN)/                                    
     1 2.21222, 1.82753, 1.67032, 1.00000,  .72424,  .35272,  .15234,   
     2  .05165,  .03861,  .02994,  .04671,  .02462,  .01538,  .01146,   
     3  .01032,  .00816,  .00861,  .00994,  .01057,  .01139,  .01747,   
     4  .01494,  .02418,  .03165,  .03386,  .04247,  .01601,  .01215,   
     5  .00937,  .00861,  .00823,  .01139,  .01924,  .01234,  .01348,   
     6  .01114,  .01297,  .01266,  .01418,  .01487,                     
     7  .01543,  .01321,  .00793,  .00582,  .00330,  .00239, 0.0/       
      DATA (TROEXT(I,2),I=1,NWAVLN)/                                    
     1 2.21519, 1.82266, 1.66557, 1.00000,  .72525,  .35481,  .15449,   
     2  .05475,  .04044,  .03082,  .04620,  .05272,  .01867,  .01266,   
     3  .01127,  .00886,  .00886,  .01449,  .01399,  .01228,  .01728,   
     4  .01475,  .02285,  .03215,  .03494,  .04285,  .01652,  .01304,   
     5  .01101,  .01120,  .01297,  .01753,  .02468,  .01741,  .01766,   
     6  .01513,  .01557,  .01456,  .01532,  .01582,                     
     7  .01619,  .01386,  .00832,  .00610,  .00346,  .00251, 0.0/       
      DATA (TROEXT(I,3),I=1,NWAVLN)/                                    
     1 2.19082, 1.79462, 1.64456, 1.00000,  .73297,  .36443,  .16278,   
     2  .06468,  .04658,  .03399,  .04538,  .11892,  .02835,  .01646,   
     3  .01386,  .01076,  .00968,  .02551,  .02222,  .01468,  .01690,   
     4  .01437,  .01994,  .03127,  .03513,  .04076,  .01722,  .01513,   
     5  .01519,  .01791,  .02538,  .03272,  .03816,  .03038,  .02886,   
     6  .02551,  .02228,  .01937,  .01804,  .01791,                     
     7  .01798,  .01539,  .00924,  .00678,  .00384,  .00278, 0.0/       
      DATA (TROEXT(I,4),I=1,NWAVLN)/                                    
     1 1.75696, 1.54829, 1.45962, 1.00000,  .77816,  .43139,  .21778,   
     2  .11329,  .08101,  .05506,  .04943,  .25291,  .06816,  .03703,   
     3  .02601,  .01968,  .01468,  .04962,  .04247,  .02234,  .01797,   
     4  .01532,  .01633,  .02259,  .02487,  .02595,  .01728,  .01892,   
     5  .02399,  .03247,  .05285,  .06462,  .06608,  .05930,  .05525,   
     6  .04861,  .03753,  .02968,  .02348,  .02165,                     
     7  .02152,  .01841,  .01104,  .00809,  .00458,  .00332, 0.0/       
      DATA (TROABS(I,1),I=1,NWAVLN)/                                    
     1  .69671,  .09905,  .06563,  .04101,  .03354,  .03627,  .02810,   
     2  .00873,  .00918,  .00930,  .03215,  .01285,  .00513,  .00316,   
     3  .00557,  .00494,  .00646,  .00867,  .00937,  .01025,  .01646,   
     4  .01481,  .02418,  .02886,  .03070,  .04032,  .01494,  .01139,   
     5  .00873,  .00816,  .00797,  .01133,  .01911,  .01215,  .01329,   
     6  .01101,  .01291,  .01266,  .01418,  .01487,                     
     7  .01543,  .01321,  .00793,  .00582,  .00330,  .00239, 0.0/       
      DATA (TROABS(I,2),I=1,NWAVLN)/                                    
     1  .65000,  .08791,  .05816,  .03652,  .02994,  .03278,  .02557,   
     2  .00810,  .00842,  .00867,  .03139,  .03949,  .00646,  .00316,   
     3  .00595,  .00519,  .00646,  .01304,  .01247,  .01095,  .01620,   
     4  .01449,  .02278,  .02930,  .03184,  .04063,  .01544,  .01234,   
     5  .01044,  .01076,  .01272,  .01741,  .02462,  .01722,  .01747,   
     6  .01506,  .01551,  .01456,  .01532,  .01582,                     
     7  .01619,  .01386,  .00832,  .00610,  .00346,  .00251, 0.0/       
      DATA (TROABS(I,3),I=1,NWAVLN)/                                    
     1  .52804,  .06367,  .04158,  .02633,  .02184,  .02443,  .01937,   
     2  .00658,  .00646,  .00709,  .02949,  .10013,  .00968,  .00310,   
     3  .00677,  .00582,  .00646,  .02361,  .01994,  .01266,  .01544,   
     4  .01386,  .01968,  .02848,  .03203,  .03854,  .01620,  .01449,   
     5  .01462,  .01747,  .02513,  .03253,  .03797,  .03019,  .02861,   
     6  .02538,  .02215,  .01930,  .01797,  .01791,                     
     7  .01797,  .01539,  .00924,  .00677,  .00384,  .00278, 0.0/       
      DATA (TROABS(I,4),I=1,NWAVLN)/                                    
     1  .19829,  .01842,  .01215,  .00791,  .00665,  .00778,  .00652,   
     2  .00361,  .00253,  .00399,  .02570,  .20690,  .01715,  .00316,   
     3  .00873,  .00728,  .00658,  .04481,  .03525,  .01646,  .01405,   
     4  .01310,  .01468,  .01956,  .02184,  .02367,  .01608,  .01816,   
     5  .02342,  .03203,  .05234,  .06399,  .06538,  .05867,  .05456,   
     6  .04810,  .03715,  .02949,  .02335,  .02158,                     
     7  .02149,  .01840,  .01104,  .00809,  .00458,  .00332, 0.0/       
      DATA (TROSYM(I,1),I=1,NWAVLN)/                                    
     1  .7518,   .6710,   .6638,   .6345,   .6152,   .5736,   .5280,    
     2  .4949,   .4700,   .4467,   .4204,   .4028,   .3777,   .3563,    
     3  .3150,   .2919,   .2695,   .2465,   .2402,   .2313,   .2101,    
     4  .1760,   .1532,   .2091,   .2079,   .1843,   .1811,   .1687,    
     5  .1626,   .1526,   .1356,   .1030,   .0962,   .1024,   .1086,    
     6  .0928,   .0836,   .0643,   .0451,   .0290,   .0156,   .0118,    
     7  .0076,   .0050,   .0024,   .0015,   .0000/                      
      DATA (TROSYM(I,2),I=1,NWAVLN)/                                    
     1  .7571,   .6858,   .6790,   .6510,   .6315,   .5887,   .5418,    
     2  .5075,   .4829,   .4598,   .4338,   .4043,   .3890,   .3680,    
     3  .3259,   .3026,   .2800,   .2541,   .2494,   .2414,   .2196,    
     4  .1873,   .1657,   .2123,   .2110,   .1890,   .1836,   .1709,    
     5  .1640,   .1534,   .1354,   .1044,   .0984,   .1026,   .1073,    
     6  .0935,   .0842,   .0661,   .0477,   .0309,   .0171,   .0129,    
     7  .0084,   .0056,   .0027,   .0017,   .0000/                      
      DATA (TROSYM(I,3),I=1,NWAVLN)/                                    
     1  .7667,   .7176,   .7128,   .6879,   .6690,   .6255,   .5769,    
     2  .5403,   .5167,   .4947,   .4703,   .4143,   .4190,   .3993,    
     3  .3563,   .3325,   .3095,   .2767,   .2751,   .2693,   .2464,    
     4  .2175,   .1992,   .2247,   .2215,   .2042,   .1952,   .1814,    
     5  .1726,   .1604,   .1398,   .1111,   .1065,   .1068,   .1086,    
     6  .0984,   .0888,   .0724,   .0549,   .0358,   .0216,   .0166,    
     7  .0109,   .0073,   .0036,   .0023,   .0000/                      
      DATA (TROSYM(I,4),I=1,NWAVLN)/                                    
     1  .7696,   .7719,   .7710,   .7606,   .7478,   .7142,   .6727,    
     2  .6381,   .6201,   .6050,   .5912,   .4849,   .5137,   .5019,    
     3  .4625,   .4389,   .4169,   .3696,   .3707,   .3708,   .3473,    
     4  .3232,   .3112,   .3022,   .2938,   .2850,   .2675,   .2494,    
     5  .2347,   .2165,   .1857,   .1536,   .1509,   .1441,   .1416,    
     6  .1354,   .1245,   .1088,   .0905,   .0614,   .0440,   .0354,    
     7  .0257,   .0179,   .0089,   .0059,   .0000/                      
      DATA FG1EXT /                                                     
     1  .98519,  .99158,  .99089, 1.00000, 1.00576, 1.01747, 1.03177,   
     2 1.04146, 1.04696, 1.05323, 1.05886, 1.04899, 1.06823, 1.07804,   
     3 1.09272, 1.10367, 1.11684, 1.10430, 1.11367, 1.12899, 1.14987,   
     4 1.17209, 1.18278, 1.20133, 1.21266, 1.21949, 1.22677, 1.15589,   
     5 1.05684,  .98291, 1.01120, 1.10911, 1.11462, 1.14671, 1.16247,   
     6 1.18540, 1.21580, 1.24610, 1.26840, 1.20500, 1.20850, 1.23340,   
     7 1.19560, 1.06530,  .68949,  .42888, 0.00000/                     
      DATA FG1ABS /                                                     
     1  .00013, 0.00000, 0.00000, 0.00000, 0.00000,  .00095,  .01513,   
     2  .10861,  .03892,  .13272,  .47133,  .49696,  .45785,  .17918,   
     3  .37373,  .34601,  .31867,  .55190,  .55025,  .49987,  .46342,   
     4  .45943,  .45918,  .46089,  .46241,  .46386,  .47196,  .48905,   
     5  .51468,  .53101,  .55266,  .58665,  .58899,  .60367,  .61158,   
     6  .62335,  .64120,  .65627,  .66278,  .66393,  .69344,  .71087,   
     7  .67625,  .61180,  .42130,  .29086, 0.00000/                     
      DATA FG1SYM /                                                     
     1  .8578,   .8726,   .8722,   .8717,   .8703,   .8652,   .8618,    
     2  .8798,   .8689,   .8918,   .9641,   .9502,   .9297,   .8544,    
     3  .9007,   .8885,   .8812,   .9604,   .9470,   .9193,   .9039,    
     4  .9039,   .9057,   .9110,   .9158,   .9194,   .9381,   .9537,    
     5  .9595,   .9587,   .9418,   .9101,   .9081,   .8957,   .8898,    
     6  .8812,   .8685,   .8491,   .8246,   .7815,   .7148,   .6480,    
     7  .5481,   .4725,   .3457,   .2575,   .0000/                      
      DATA FG2EXT /                                                     
     1  .94791,  .96215,  .97063, 1.00000, 1.00937, 1.05177, 1.12519,   
     2 1.29570, 1.39203, 1.41120, 1.04715, 1.10816, 1.43285, 1.45272,   
     3 1.18709, 1.04367,  .82354,  .71747,  .92405,  .79342,  .60266,   
     4  .47677,  .43171,  .36734,  .33259,  .31184,  .24139,  .21601,   
     5  .24006,  .28816,  .42671,  .56861,  .57266,  .58089,  .57165,   
     6  .54247,  .43983,  .34475,  .24907,  .19291,  .18500,  .15586,   
     7  .09047,  .06445,  .03533,  .02529, 0.00000/                     
      DATA FG2ABS /                                                     
     1 0.00000, 0.00000, 0.00000, 0.00000, 0.00000,  .00013,  .00247,   
     2  .01987,  .00620,  .02323,  .17209,  .57930,  .19810,  .03475,   
     3  .09639,  .08000,  .06582,  .34589,  .32703,  .17025,  .12633,   
     4  .11816,  .11627,  .11519,  .11538,  .11601,  .12329,  .14468,   
     5  .18633,  .24057,  .35411,  .44886,  .45095,  .45215,  .44278,   
     6  .41778,  .34433,  .27826,  .21066,  .17864,  .17626,  .15028,   
     7  .08844,  .06358,  .03515,  .02523, 0.00000/                     
      DATA FG2SYM /                                                     
     1  .8388,   .8459,   .8419,   .8286,   .8224,   .7883,   .7763,    
     2  .8133,   .8393,   .8767,   .9258,   .8982,   .7887,   .8082,    
     3  .8319,   .8243,   .8210,   .8282,   .8037,   .7904,   .7728,    
     4  .7528,   .7436,   .7274,   .7171,   .7100,   .6790,   .6520,    
     5  .6305,   .6020,   .5475,   .4577,   .4511,   .4084,   .3872,    
     6  .3566,   .2976,   .2340,   .1711,   .0956,   .0623,   .0454,    
     7  .0286,   .0190,   .0090,   .0052,   .0000/                      
      DATA BSTEXT /                                                     
     E 2.0752E0,  1.8656E0,  1.7246E0,  1.0000E0,  7.0156E-1, 3.0170E-1,
     E 1.1440E-1, 5.1225E-2, 3.4285E-2, 2.3475E-2, 1.6878E-2, 6.6506E-2,
     E 1.0943E-1, 8.9653E-2, 6.7609E-2, 5.2855E-2, 6.7496E-2, 5.7975E-2,
     E 4.2471E-2, 2.4176E-2, 4.6102E-2, 1.2339E-1, 1.7699E-1, 1.2389E-1,
     E 9.0220E-2, 8.5793E-2, 3.2838E-2, 2.6528E-2, 5.0703E-2, 1.9471E-2,
     E 1.1710E-2, 1.6106E-2, 1.7716E-2, 3.9533E-2, 3.7954E-2, 5.4871E-3,
     E 8.8409E-3, 1.2289E-3, 1.0647E-3, 3.3151E-3, 4.5164E-3, 4.1496E-3,
     E 3.2801E-3, 2.4481E-3, 1.0714E-3, 5.0381E-4, 1.2101E-4/           
      DATA BSTABS /                                                     
     A 2.4347E-7, 1.4949E-7, 1.3020E-7, 6.8716E-8, 1.0053E-7, 4.2384E-6,
     A 2.3075E-4, 1.4889E-3, 1.8377E-3, 3.3645E-3, 4.6858E-3, 5.9424E-2,
     A 1.0129E-1, 8.2396E-2, 6.3621E-2, 5.0327E-2, 6.5798E-2, 5.6149E-2,
     A 4.0939E-2, 2.3226E-2, 4.5800E-2, 1.2276E-1, 1.7568E-1, 1.2216E-1,
     A 8.9058E-2, 8.4861E-2, 3.1979E-2, 2.6097E-2, 5.0244E-2, 1.9042E-2,
     A 1.1497E-2, 1.6024E-2, 1.7639E-2, 3.9452E-2, 3.7847E-2, 5.4251E-3,
     A 8.8160E-3, 1.2118E-3, 1.0579E-3, 3.3122E-3, 4.5150E-3, 4.1489E-3,
     A 3.2799E-3, 2.4481E-3, 1.0713E-3, 5.0381E-4, 1.2101E-4/           
      DATA BSTSYM /                                                     
     G 0.6749, 0.6943, 0.6991, 0.6846, 0.6572, 0.5861, 0.4965, 0.4164,  
     G 0.3772, 0.3385, 0.3069, 0.2599, 0.2234, 0.2028, 0.1554, 0.1291,  
     G 0.1057, 0.0962, 0.0909, 0.0802, 0.0595, 0.0458, 0.0413, 0.0479,  
     G 0.0483, 0.0451, 0.0504, 0.0379, 0.0346, 0.0365, 0.0273, 0.0180,  
     G 0.0174, 0.0144, 0.0151, 0.0141, 0.0094, 0.0075, 0.0049, 0.0031,  
     G 0.0020, 0.0014, 0.0008, 0.0005, 0.0002, 0.0001, 0.0001/          
      DATA AVOEXT /                                                     
     1 1.14880, 1.19171, 1.18013, 1.00000,  .84873,  .53019,  .27968,   
     2  .14551,  .11070,  .08633,  .07184,  .06076,  .04506,  .03399,   
     3  .02095,  .01538,  .01266,  .01019,  .00994,  .01044,  .01361,   
     4  .01791,  .02278,  .02918,  .03108,  .03234,  .03456,  .03184,   
     5  .02772,  .02475,  .01715,  .01563,  .01665,  .01646,  .01734,   
     6  .01772,  .01076,  .01051,  .01133,  .01329,                     
     7  .01492,  .01277,  .00766,  .00562,  .00318,  .00231, 0.0/       
      DATA AVOABS /                                                     
     1  .44816,  .11259,  .08500,  .05272,  .04082,  .02449,  .01487,   
     2  .01019,  .00867,  .00842,  .00842,  .00949,  .00741,  .00487,   
     3  .00316,  .00335,  .00399,  .00449,  .00525,  .00665,  .01114,   
     4  .01652,  .02177,  .02437,  .02506,  .02658,  .03006,  .02861,   
     5  .02513,  .02285,  .01620,  .01532,  .01633,  .01620,  .01709,   
     6  .01741,  .01057,  .01038,  .01127,  .01329,                     
     7  .01492,  .01277,  .00766,  .00562,  .00318,  .00231, 0.0/       
      DATA AVOSYM /                                                     
     1  .8272,   .7148,   .7076,   .6978,   .6886,   .6559,   .6062,    
     2  .5561,   .5255,   .4958,   .4729,   .4401,   .4015,   .3699,    
     3  .3125,   .2773,   .2472,   .2173,   .2054,   .1908,   .1623,    
     4  .1348,   .1233,   .1615,   .1757,   .1712,   .1521,   .1326,    
     5  .1230,   .1081,   .0801,   .0528,   .0514,   .0461,   .0446,    
     6  .0449,   .0415,   .0330,   .0198,   .0097,   .0044,   .0032,    
     7  .0020,   .0013,   .0006,   .0004,   .0000/                      
      DATA FVOEXT /                                                     
     1  .88715,  .92532,  .94013, 1.00000, 1.03013, 1.05975, 1.01171,   
     2  .88677,  .82538,  .76361,  .71563,  .67424,  .60589,  .55057,   
     3  .45222,  .37646,  .32316,  .25519,  .22728,  .20525,  .17810,   
     4  .14481,  .14152,  .37639,  .44551,  .44405,  .42222,  .36462,   
     5  .32551,  .27519,  .16728,  .10627,  .10861,  .10886,  .11665,   
     6  .13127,  .10108,  .08557,  .06411,  .05741,                     
     7  .05531,  .04707,  .02792,  .02028,  .01136,  .00820, 0.0/       
      DATA FVOABS /                                                     
     1  .41582,  .22892,  .19108,  .14468,  .12475,  .09158,  .06601,   
     2  .04943,  .04367,  .04342,  .04399,  .05076,  .04133,  .02829,   
     3  .01924,  .01981,  .02297,  .02475,  .02778,  .03411,  .05335,   
     4  .07133,  .08816,  .15342,  .18506,  .19354,  .20791,  .18449,   
     5  .16101,  .13759,  .08456,  .06886,  .07278,  .07367,  .07956,   
     6  .08785,  .06032,  .05747,  .05133,  .05323,                     
     7  .05453,  .04657,  .02773,  .02020,  .01135,  .00820, 0.0/       
      DATA FVOSYM /                                                     
     1  .9295,   .8115,   .7897,   .7473,   .7314,   .7132,   .7113,    
     2  .7238,   .7199,   .7165,   .7134,   .6989,   .6840,   .6687,    
     3  .6409,   .6325,   .6199,   .6148,   .6142,   .6072,   .5853,    
     4  .5632,   .5486,   .4753,   .4398,   .4329,   .4091,   .4105,    
     5  .4120,   .4136,   .4140,   .3637,   .3577,   .3344,   .3220,    
     6  .3052,   .2957,   .2564,   .2055,   .1229,   .0632,   .0483,    
     7  .0321,   .0216,   .0103,   .0059,   .0000/                      
      DATA DMEEXT /                                                     
     1 1.05019, 1.05880, 1.05259, 1.00000,  .94949,  .81456,  .66051,   
     2  .54380,  .49133,  .44677,  .41671,  .38063,  .34778,  .32804,   
     3  .29722,  .27506,  .25082,  .22620,  .21652,  .20253,  .17266,   
     4  .14905,  .14234,  .14082,  .15057,  .16399,  .23608,  .24481,   
     5  .27791,  .25076,  .15272,  .09601,  .09456,  .14576,  .12373,   
     6  .18348,  .12190,  .12924,  .08538,  .04108,                     
     7  .04714,  .04069,  .02480,  .01789,  .00980,  .00693, 0.0/       
      DATA DMEABS /                                                     
     1  .00063,  .00152,  .00184,  .00506,  .00791,  .01829,  .03728,   
     2  .06158,  .07538,  .08943,  .10051,  .11614,  .13310,  .14348,   
     3  .14633,  .13728,  .12462,  .11184,  .10709,  .10076,  .09006,   
     4  .08734,  .09000,  .10304,  .11905,  .13437,  .19551,  .20095,   
     5  .22494,  .18418,  .09285,  .06665,  .06823,  .12329,  .10551,   
     6  .16184,  .09835,  .10582,  .06759,  .03247,                     
     7  .04405,  .03816,  .02327,  .01696,  .00946,  .00677, 0.0/       
      DATA DMESYM /                                                     
     1  .7173,   .7039,   .7020,   .6908,   .6872,   .6848,   .6891,    
     2  .6989,   .7046,   .7099,   .7133,   .7159,   .7134,   .7058,    
     3  .6827,   .6687,   .6583,   .6513,   .6494,   .6475,   .6467,    
     4  .6496,   .6506,   .6461,   .6334,   .6177,   .5327,   .5065,    
     5  .4632,   .4518,   .5121,   .5450,   .5467,   .4712,   .4853,    
     6  .3984,   .4070,   .3319,   .3427,   .3766,   .3288,   .2969,    
     7  .2808,   .2661,   .2409,   .2098,   .0000/                      
      DATA CCUEXT /                                                     
     1  .98081,  .98746,  .98915, 1.00000, 1.00650, 1.02230, 1.04180,   
     2 1.05830, 1.06780, 1.07870, 1.09780, 1.06440, 1.09750, 1.11300,   
     3 1.14320, 1.16660, 1.20540, 1.15420, 1.17610, 1.21910, 1.26990,   
     4 1.30300, 1.31090, 1.31060, 1.29940, 1.28640, 1.16620,  .98693,   
     5  .88130,  .83429,  .92012, 1.07340, 1.08150, 1.12680, 1.14770,   
     6 1.17600, 1.19210, 1.19120, 1.14510,  .97814,  .96308,  .94390,   
     7  .75994,  .56647,  .26801,  .15748, 0.00000/                     
      DATA CCUABS /                                                     
     1  .00007,  .00001,  .00000,  .00000,  .00001,  .00059,  .00956,   
     2  .07224,  .02502,  .08913,  .41512,  .51824,  .41304,  .12614,   
     3  .29826,  .26739,  .23672,  .55428,  .55642,  .44494,  .38433,   
     4  .37277,  .37000,  .36872,  .36896,  .36984,  .37868,  .40498,   
     5  .44993,  .48941,  .54799,  .60964,  .61302,  .63227,  .64074,   
     6  .65112,  .65367,  .64760,  .61924,  .59000,  .61601,  .61058,   
     7  .49236,  .38532,  .20641,  .13474, 0.00000/                     
      DATA CCUSYM /                                                     
     1  .8557,   .8676,   .8680,   .8658,   .8630,   .8557,   .8496,    
     2  .8566,   .8464,   .8627,   .9417,   .9458,   .8891,   .8136,    
     3  .8503,   .8400,   .8453,   .9428,   .9168,   .8759,   .8733,    
     4  .8841,   .8894,   .8986,   .9044,   .9082,   .9239,   .9342,    
     5  .9367,   .9331,   .9119,   .8719,   .8692,   .8515,   .8424,    
     6  .8287,   .8059,   .7742,   .7354,   .6554,   .5557,   .4720,    
     7  .3713,   .2990,   .1846,   .1156,   .0000/                      
      DATA CALEXT /                                                     
     1  .97331,  .98106,  .98472, 1.00000, 1.00850, 1.03090, 1.05770,   
     2 1.08070, 1.09390, 1.11530, 1.20260, 1.08250, 1.13480, 1.16770,   
     3 1.26750, 1.33520, 1.41110, 1.18200, 1.28390, 1.38040, 1.38430,   
     4 1.31200, 1.26540, 1.17160, 1.10410, 1.05640,  .83383,  .66530,   
     5  .61995,  .62907,  .77190,  .96660,  .97609, 1.02520, 1.04380,   
     6 1.06270, 1.02550,  .95714,  .82508,  .63464,  .60962,  .54998,   
     7  .34165,  .22587,  .10647,  .07067, 0.00000/                     
      DATA CALABS /                                                     
     1  .00004,  .00000,  .00000,  .00000,  .00000,  .00036,  .00607,   
     2  .04771,  .01579,  .05734,  .33199,  .54434,  .35157,  .08528,   
     3  .21785,  .18813,  .15982,  .52068,  .52125,  .35294,  .28359,   
     4  .26999,  .26668,  .26477,  .26484,  .26565,  .27546,  .30540,   
     5  .36011,  .41780,  .51479,  .60420,  .60818,  .62781,  .63339,   
     6  .63544,  .60762,  .56843,  .50067,  .44739,  .45910,  .42486,   
     7  .27527,  .19352,  .09932,  .06832, 0.00000/                     
      DATA CALSYM /                                                     
     1  .8523,   .8632,   .8623,   .8573,   .8532,   .8422,   .8297,    
     2  .8252,   .8145,   .8317,   .9312,   .9383,   .8291,   .7640,    
     3  .8202,   .8276,   .8547,   .9224,   .8859,   .8621,   .8706,    
     4  .8780,   .8804,   .8833,   .8849,   .8858,   .8889,   .8899,    
     5  .8872,   .8790,   .8513,   .7984,   .7944,   .7683,   .7545,    
     6  .7333,   .6939,   .6405,   .5727,   .4313,   .3156,   .2437,    
     7  .1693,   .1185,   .0574,   .0332,   .0000/                      
      DATA CSTEXT /                                                     
     1  .97430,  .98324,  .98570, 1.00000, 1.00890, 1.03100, 1.05590,   
     2 1.08130, 1.09760, 1.12170, 1.16390, 1.07880, 1.13660, 1.16990,   
     3 1.22930, 1.26720, 1.31080, 1.15290, 1.23270, 1.29770, 1.31180,   
     4 1.27830, 1.25190, 1.19190, 1.14390, 1.10790,  .91743,  .74497,   
     5  .68246,  .67604,  .80234,  .98329,  .99219, 1.03880, 1.05710,   
     6 1.07730, 1.05460, 1.00640,  .90146,  .71967,  .69823,  .65179,   
     7  .44906,  .30781,  .14114,  .08913, 0.00000/                     
      DATA CSTABS /                                                     
     1  .00005,  .00001,  .00000,  .00000,  .00000,  .00042,  .00681,   
     2  .05317,  .01779,  .06484,  .35033,  .53843,  .36321,  .09457,   
     3  .23629,  .20663,  .17789,  .52440,  .52484,  .37331,  .30681,   
     4  .29375,  .29057,  .28880,  .28887,  .28969,  .29913,  .32789,   
     5  .37961,  .43212,  .51866,  .60025,  .60398,  .62285,  .62874,   
     6  .63229,  .61185,  .58151,  .52536,  .47993,  .49571,  .47074,   
     7  .33104,  .24066,  .12346,  .08312, 0.00000/                     
      DATA CSTSYM /                                                     
     1  .8519,   .8633,   .8629,   .8590,   .8546,   .8432,   .8328,    
     2  .8330,   .8251,   .8439,   .9332,   .9388,   .8422,   .7823,    
     3  .8288,   .8291,   .8482,   .9255,   .8906,   .8613,   .8675,    
     4  .8772,   .8810,   .8869,   .8905,   .8927,   .9016,   .9069,    
     5  .9060,   .8989,   .8714,   .8204,   .8168,   .7932,   .7811,    
     6  .7628,   .7319,   .6905,   .6401,   .5324,   .4233,   .3459,    
     7  .2636,   .2027,   .1120,   .0663,   .0000/                      
      DATA CSCEXT /                                                     
     1  .96965,  .97960,  .98266, 1.00000, 1.01040, 1.03530, 1.06590,   
     2 1.09980, 1.12280, 1.16020, 1.20330, 1.08630, 1.16840, 1.21860,   
     3 1.28860, 1.32310, 1.33780, 1.11630, 1.24450, 1.30260, 1.26260,   
     4 1.17670, 1.12990, 1.04180,  .98070,  .93828,  .74401,  .59962,   
     5  .56489,  .57976,  .72193,  .90905,  .91772,  .96075,  .97500,   
     6  .98623,  .93761,  .86388,  .73722,  .56926,  .54699,  .49341,   
     7  .31131,  .20846,  .09872,  .06531, 0.00000/                     
      DATA CSCABS /                                                     
     1  .00004,  .00000,  .00000,  .00000,  .00000,  .00035,  .00553,   
     2  .04382,  .01430,  .05271,  .30881,  .54982,  .32983,  .07796,   
     3  .20033,  .17269,  .14662,  .49557,  .49304,  .32632,  .26104,   
     4  .24829,  .24525,  .24349,  .24358,  .24437,  .25378,  .28239,   
     5  .33510,  .39227,  .49203,  .58265,  .58638,  .60338,  .60677,   
     6  .60472,  .56954,  .52556,  .45708,  .40717,  .41646,  .38375,   
     7  .25009,  .17726,  .09148,  .06291, 0.00000/                     
      DATA CSCSYM /                                                     
     1  .8495,   .8597,   .8594,   .8535,   .8479,   .8349,   .8214,    
     2  .8192,   .8151,   .8395,   .9321,   .9329,   .8156,   .7722,    
     3  .8270,   .8319,   .8533,   .9138,   .8772,   .8562,   .8628,    
     4  .8691,   .8713,   .8742,   .8759,   .8768,   .8805,   .8818,    
     5  .8783,   .8685,   .8362,   .7776,   .7734,   .7458,   .7317,    
     6  .7106,   .6738,   .6250,   .5655,   .4409,   .3338,   .2655,    
     7  .1947,   .1427,   .0727,   .0422,   .0000/                      
      DATA CNIEXT /                                                     
     1  .97967,  .98623,  .98795, 1.00000, 1.00710, 1.02340, 1.04300,   
     2 1.06100, 1.07130, 1.08440, 1.10650, 1.06540, 1.10200, 1.12040,   
     3 1.15490, 1.17990, 1.21730, 1.15000, 1.18140, 1.22610, 1.26770,   
     4 1.28840, 1.29070, 1.28200, 1.26650, 1.25130, 1.12860,  .95670,   
     5  .85784,  .81564,  .90486, 1.05950, 1.06760, 1.11240, 1.13250,   
     6 1.15910, 1.16960, 1.16290, 1.11130,  .94771,  .93251,  .91151,   
     7  .73279,  .55018,  .26554,  .15656, 0.00000/                     
      DATA CNIABS /                                                     
     1  .00007,  .00001,  .00000,  .00000,  .00001,  .00058,  .00948,   
     2  .07084,  .02436,  .08711,  .40714,  .52024,  .40688,  .12335,   
     3  .29163,  .26107,  .23098,  .54886,  .55047,  .43579,  .37552,   
     4  .36411,  .36140,  .36017,  .36043,  .36132,  .37019,  .39640,   
     5  .44146,  .48184,  .54304,  .60651,  .60988,  .62882,  .63682,   
     6  .64613,  .64572,  .63682,  .60584,  .57559,  .60014,  .59283,   
     7  .47587,  .37364,  .20267,  .13269, 0.00000/                     
      DATA CNISYM /                                                     
     1  .8550,   .8670,   .8677,   .8645,   .8616,   .8538,   .8474,    
     2  .8534,   .8439,   .8609,   .9411,   .9449,   .8822,   .8101,    
     3  .8486,   .8403,   .8475,   .9405,   .9134,   .8749,   .8732,    
     4  .8833,   .8882,   .8968,   .9025,   .9061,   .9217,   .9322,    
     5  .9346,   .9308,   .9086,   .8669,   .8641,   .8457,   .8364,    
     6  .8222,   .7992,   .7677,   .7298,   .6525,   .5558,   .4752,    
     7  .3796,   .3105,   .1995,   .1287,   .0000/                      
C          EXTINCTION  COEFFICIENTS                                     
      DATA CI64XT/                                                      
     1   9.947E-01,  9.968E-01,  9.972E-01,  1.000E+00,  1.002E+00,     
     2   1.005E+00,  1.010E+00,  1.013E+00,  1.016E+00,  1.018E+00,     
     3   1.019E+00,  1.016E+00,  1.023E+00,  1.026E+00,  1.030E+00,     
     4   1.033E+00,  1.036E+00,  1.037E+00,  1.038E+00,  1.040E+00,     
     5   1.043E+00,  1.047E+00,  1.049E+00,  1.051E+00,  1.052E+00,     
     6   1.053E+00,  1.055E+00,  1.032E+00,  1.034E+00,  1.047E+00,     
     7   1.060E+00,  1.074E+00,  1.075E+00,  1.081E+00,  1.085E+00,     
     8   1.090E+00,  1.102E+00,  1.117E+00,  1.131E+00,  1.094E+00,     
     9   1.168E+00,  1.187E+00,  1.244E+00,  1.297E+00,  1.475E+00,     
     X   1.695E+00,  1.556E+00 /                                        
C         ABSORPTION  COEFFICIENTS                                      
      DATA CI64AB/                                                      
     1   7.893E-05,  1.914E-05,  1.450E-05,  5.904E-06,  3.905E-05,     
     2   1.917E-03,  2.604E-01,  3.732E-01,  8.623E-02,  2.253E-01,     
     3   4.152E-01,  4.460E-01,  4.660E-01,  4.589E-01,  4.848E-01,     
     4   4.786E-01,  4.915E-01,  4.944E-01,  4.936E-01,  4.947E-01,     
     5   4.978E-01,  5.012E-01,  5.028E-01,  5.070E-01,  5.095E-01,     
     6   5.111E-01,  5.205E-01,  5.126E-01,  4.969E-01,  4.868E-01,     
     7   4.836E-01,  4.982E-01,  4.999E-01,  5.097E-01,  5.126E-01,     
     8   5.188E-01,  5.108E-01,  4.915E-01,  5.559E-01,  5.515E-01,     
     9   5.600E-01,  5.948E-01,  6.225E-01,  6.348E-01,  5.693E-01,     
     X   3.306E-01,  8.661E-02 /                                        
C         ASYMMETRY  PARAMETER  -  G                                    
      DATA CI64G/                                                       
     1   .8626,  .8824,  .8851,  .8893,  .8904,  .8913,  .9332,  .9549, 
     2   .9141,  .9407,  .9763,  .9428,  .9509,  .9580,  .9699,  .9679, 
     3   .9735,  .9737,  .9717,  .9712,  .9712,  .9715,  .9721,  .9744, 
     4   .9756,  .9764,  .9822,  .9849,  .9721,  .9530,  .9341,  .9352, 
     5   .9366,  .9426,  .9425,  .9448,  .9365,  .9256,  .9485,  .9417, 
     6   .8868,  .8983,  .8589,  .8115,  .6810,  .5923,  .5703 /        
C          EXTINCTION COEFFICIENTS                                      
      DATA CIR4XT/                                                      
     1   9.685E-01,  9.803E-01,  9.826E-01,  1.000E+00,  1.011E+00,     
     2   1.038E+00,  1.066E+00,  1.090E+00,  1.118E+00,  1.201E+00,     
     3   1.374E+00,  1.019E+00,  1.143E+00,  1.198E+00,  1.331E+00,     
     4   1.434E+00,  1.424E+00,  1.283E+00,  1.298E+00,  1.326E+00,     
     5   1.287E+00,  1.230E+00,  1.191E+00,  1.048E+00,  9.634E-01,     
     6   9.093E-01,  6.067E-01,  5.216E-01,  6.953E-01,  8.902E-01,     
     7   1.083E+00,  1.228E+00,  1.214E+00,  1.076E+00,  1.032E+00,     
     8   8.881E-01,  6.275E-01,  3.462E-01,  2.118E-01,  3.955E-01,     
     9   5.089E-01,  3.012E-01,  1.235E-01,  5.377E-02,  2.068E-02,     
     X   6.996E-03,  1.560E-03 /                                        
C          ABSORPTION  COEFFICIENTS                                     
      DATA CIR4AB/                                                      
     1   5.316E-06,  1.461E-06,  9.045E-07,  4.431E-07,  2.746E-06,     
     2   1.413E-04,  2.920E-02,  5.578E-02,  6.844E-03,  2.151E-02,     
     3   6.322E-02,  5.051E-01,  4.578E-01,  1.360E-01,  3.269E-01,     
     4   1.572E-01,  2.246E-01,  4.176E-01,  4.282E-01,  3.802E-01,     
     5   3.517E-01,  3.037E-01,  2.543E-01,  2.410E-01,  2.432E-01,     
     6   2.438E-01,  2.346E-01,  3.747E-01,  4.839E-01,  5.722E-01,     
     7   6.368E-01,  5.303E-01,  5.085E-01,  3.920E-01,  3.437E-01,     
     8   2.481E-01,  1.175E-01,  7.172E-02,  1.108E-01,  3.459E-01,     
     9   4.044E-01,  2.545E-01,  9.594E-02,  4.410E-02,  1.887E-02,     
     X   6.433E-03,  1.456E-03 /                                        
C        ASYMMETRY  PARAMETER  -  G                                     
      DATA CIR4G/                                                       
     1   .8517,  .8654,  .8661,  .8615,  .8574,  .8447,  .8321,  .8248, 
     2   .8227,  .8612,  .9363,  .9231,  .8419,  .7550,  .8481,  .8358, 
     3   .8718,  .8953,  .8884,  .8786,  .8731,  .8660,  .8625,  .8652, 
     4   .8659,  .8658,  .8676,  .8630,  .8434,  .8194,  .7882,  .7366, 
     5   .7339,  .7161,  .7015,  .6821,  .6383,  .5823,  .4845,  .2977, 
     6   .2295,  .1716,  .1228,  .0748,  .0329,  .0186,  .0081 /        
      END                                                               
      SUBROUTINE FDBETA(H1,H2,BETA,ANGLE,PHI,LENN,HMIN,IERROR)          
C                                                                       
C     GIVEN H1,H2,AND BETA (THE EARTH CENTERED ANGLE), THIS SUBROUTINE  
C     CALCULATES THE ZENITH ANGLE AT H1 (ANGLE) AND AT H2 (PHI).        
C     BASED ON A NEWTON-RAPHSON METHOD.                                 
C                                                                       
C     DECLARE ROUTINE ARGUMENTS:                                        
      DOUBLE PRECISION H1,H2,BETA,ANGLE,PHI,HMIN                        
      INTEGER LENN,IERROR                                               
C                                                                       
C     LIST COMMONS:                                                     
C                                                                       
C     FILE UNIT NUMBERS                                                 
C       IRD      MODTRAN INPUT FILE, tape5, UNIT NUMBER (1).            
C       IPR      MODTRAN STANDARD OUTPUT FILE, tape6, UNIT NUMBER (2).  
C       IPU      MODTRAN SPECTRAL DATA FILE, tape7, UNIT NUMBER (7).    
C       NPR      PRINTOUT LEVEL SWITCH (1=small,0=normal,-1=large).     
C       IPR1     MODTRAN FLUX OUTPUT FILE, tape8, UNIT NUMBER (8).      
C       ISCRCH   MULTIPLE SCATTERING SCRATCH FILE UNIT NUMBER (10).     
C       ITB      MOLECULAR BAND MODEL PARAMETER FILE UNIT NUMBER (9).   
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                           
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                       
      REAL RE,ZMAX                                                      
      INTEGER IPATH                                                     
      COMMON/PARMTR/RE,ZMAX,IPATH                                       
      REAL GNDALT                                                       
      COMMON/GRAUND/GNDALT                                              
C                                                                       
C     DECLARE LOCAL VARIABLES:                                          
      INTEGER IAMTB,ITER                                                
      DOUBLE PRECISION HA,HB,BETA1,RANGE,BENDNG,ANGLE1,RATIOA,RATIOB,   
     1  STORE,DENOM,DERIV,APREV,AWGHTD,DBPREV,DBETA,DPRE                
C                                                                       
C     LIST DATA:                                                        
      DOUBLE PRECISION TOLRNC,DPDEG                                     
      INTEGER ITERMX                                                    
      DATA TOLRNC/2.D-4/,DPDEG/57.2957795131D0/,ITERMX/35/              
      DPRE=DBLE(RE)                                                     
      IF(BETA.EQ.0.)THEN                                                
         LENN=0                                                         
         ANGLE=DBLE(0.)                                                 
         HMIN=H1                                                        
         IF(H1.GT.H2)THEN                                               
            ANGLE=DBLE(180.)                                            
            HMIN=H2                                                     
         ENDIF                                                          
         PHI=DBLE(180.)-ANGLE                                           
      ENDIF                                                             
      IF(H1.GT.H2)THEN                                                  
         HA=H2                                                          
         HB=H1                                                          
      ELSE                                                              
         HA=H1                                                          
         HB=H2                                                          
      ENDIF                                                             
C                                                                       
C***  SET PARAMETER TO SUPPRESS CALCULATION OF AMOUNTS IN ROUTINE LAYER 
      IAMTB = 2                                                         
C                                                                       
C***  GUESS AT ANGLE,INTEGRATETO FIND BETA, TEST FOR CONVERGENCE, AND   
C***  ITERATE FIRST GUESS AT ANGLE: USE GEOMETRIC SOLN (NO REFRACTION)  
Calley      WRITE(IPR,'(///30H CASE 2D: GIVEN H1, H2,  BETA:,//         
      IF (IPR .GT. 0) WRITE(IPR,                                        
     +                '(///30H CASE 2D: GIVEN H1, H2,  BETA:,//         
     $     42H ITERATE AROUND ANGLE UNTIL BETA CONVERGES,//             
     $     14H ITER    ANGLE,T21,4HBETA,T30,5HDBETA,T40,5HRANGE,T51,    
     $     4HHMIN,T61,3HPHI,T70,7HBENDING,/T10,5H(DEG),T21,5H(DEG),T30, 
     $     5H(DEG),T41,4H(KM),T51,4H(KM),T60,5H(DEG),T71,5H(DEG),/)')   
C                                                                       
C     CALCULATE ANGLE1, A GUESS VALUE FOR ANGLE                         
      RATIOA=(HB-HA)/(DPRE+HA)                                          
      RATIOB=(HB-HA)/(DPRE+HB)                                          
      STORE=2*SIN(DBLE(.5)*BETA/DPDEG)**2                               
      DENOM=RATIOB-STORE                                                
      ANGLE1=DBLE(90.)                                                  
      IF(DENOM.NE.0.)ANGLE1=DPDEG*ATAN(SIN(BETA/DPDEG)/DENOM)           
      IF(ANGLE1.LT.0.)ANGLE1=ANGLE1+DBLE(180.)                          
C                                                                       
C     CALCULATE THE DERIVATIVE D(ANGLE)/D(BETA)                         
      DERIV=(RATIOA+STORE)/(RATIOA*RATIOB+2*STORE)                      
C                                                                       
C     DERIV TENDS TO OVERSHOOT VALUE.  FUDGE (=.6) SPEEDS UP CONVERGENCE
      DERIV=DBLE(.6)*DERIV                                              
C                                                                       
C     BEGIN ITERATIVE PROCEDURE                                         
      ITER=0                                                            
 10   ITER=ITER+1                                                       
      IF(ITER.GT.ITERMX)THEN                                            
Calley         WRITE(IPR,'(40H0FDBETA, CASE 2D (H1,H2,BETA): SOLUTION , 
         IF (IPR .GT. 0) WRITE(IPR,                                     
     +        '(40H0FDBETA, CASE 2D (H1,H2,BETA): SOLUTION ,            
     $        16HDID NOT CONVERGE,//10X,4HH1 =,F13.6,4X,4HH2 =,F13.6,   
     $        4X,6HBETA =,F13.6,4X,12HITERATIONS =,I5,//10X,4HLAST,     
     $        10H ITERATION,//10X,7HANGLE =,F16.9,4X,6HBETA =,F16.9)')  
     $        H1,H2,BETA,ITER,ANGLE1,BETA1                              
         IERROR=1                                                       
         RETURN                                                         
      ENDIF                                                             
C                                                                       
C     DETERMINE BETA1, THE BETA CORRESPONDING TO ANGLE1                 
      CALL DPFNMN(HA,ANGLE1,HB,LENN,ITER,HMIN,PHI,IERROR)               
      CALL DPRFPA(HA,HB,ANGLE1,PHI,LENN,HMIN,                           
     $     IAMTB,BETA1,RANGE,BENDNG)                                    
Calley      WRITE(IPR,'(I5,3F10.4,2F10.3,2F10.4)')                      
      IF (IPR .GT. 0) WRITE(IPR,'(I5,3F10.4,2F10.3,2F10.4)')            
     $     ITER,ANGLE1,BETA1,BETA-BETA1,RANGE,HMIN,PHI,BENDNG           
      DBETA = BETA1-BETA                                                
      AWGHTD=(ANGLE1*ABS(DBETA)+APREV*ABS(DBPREV))                      
     $     /(ABS(DBETA)+ABS(DBPREV))                                    
C                                                                       
C     CHECK FOR CONVERGENCE                                             
      IF(ABS(BETA-BETA1).LT.TOLRNC)THEN                                 
         IF(HMIN.LT.GNDALT)THEN                                         
Calley            WRITE(IPR,'(3A,//9X,A)')'0FDBETA,',                   
            IF (IPR .GT. 0) WRITE(IPR,'(3A,//9X,A)')'0FDBETA,',         
     $           ' CASE 2D(H1,H2,BETA): REFRACTED TANGENT HEIGHT',      
     $           ' IS LESS THAN ZERO-PATH INTERSECTS THE EARTH',        
     $           ' BETA IS TOO LARGE FOR THIS H1 AND H2'                
            IERROR=1                                                    
         ELSEIF(H1.LE.H2)THEN                                           
            BETA=BETA1                                                  
            ANGLE=ANGLE1                                                
         ELSE                                                           
            BETA=BETA1                                                  
            ANGLE=PHI                                                   
            PHI=ANGLE1                                                  
         ENDIF                                                          
         RETURN                                                         
      ENDIF                                                             
C                                                                       
      APREV =  ANGLE1                                                   
      IF (DBPREV*DBETA .LT. 0.0D00 .AND. ITER .GT. 5) THEN              
         ANGLE1=AWGHTD                                                  
         DBPREV = BETA1 - BETA                                          
      ELSE                                                              
         DBPREV = BETA1 - BETA                                          
         ANGLE1=ANGLE1-DERIV*DBPREV                                     
      ENDIF                                                             
      GOTO10                                                            
C                                                                       
      END                                                               
      SUBROUTINE FLAYZ(ML,ICLD,GNDALT,IVSA)                             
C                                                                       
C     THIS ROUTINE DETERMINES THE LAYER BOUNDARIES WHEN                 
C     ONE OF THE MODEL ATMOSPHERES IS SELECTED.                         
C                                                                       
C     INCLUDE PARAMETERS.                                               
      INCLUDE 'PARAM.LST'                                               
      INTEGER NDFLT                                                     
      PARAMETER(NDFLT=36)                                               
C                                                                       
C     DECLARE INPUTS.                                                   
      INTEGER ML,ICLD,IVSA                                              
      REAL GNDALT                                                       
C                                                                       
C     LIST COMMONS.                                                     
      REAL ZM,PM,TM,RFNDX,DENSTY                                        
      COMMON/MODEL/ZM(LAYDIM),PM(LAYDIM),TM(LAYDIM),                    
     1  RFNDX(LAYDIM),DENSTY(KMAX,LAYDIM)                               
      INTEGER NCRALT,NCRSPC                                             
      REAL CTHIK,CALT,CEXT,CWAVLN,CCOLWD,CCOLIP,CHUMID,ASYMWD,ASYMIP    
      COMMON/CARD2A/CTHIK,CALT,CEXT,NCRALT,NCRSPC,                      
     1  CWAVLN,CCOLWD,CCOLIP,CHUMID,ASYMWD,ASYMIP                       
      REAL ZVSA,RHVSA,AHVSA                                             
      INTEGER IHVSA                                                     
      COMMON/ZVSALY/ZVSA(10),RHVSA(10),AHVSA(10),IHVSA(10)              
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH                               
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                           
C                                                                       
C     DECLARE LOCAL VARIABLES.                                          
      INTEGER I,ILAST,INEXT,NEXT,IHI,J,IM1,ICIR(4)                      
      REAL DALT,CLDD,TOL,CIRRUS(4)                                      
C                                                                       
C     DECLARE DATA                                                      
      REAL ZDFLT(NDFLT)                                                 
      DATA ZDFLT/ 0., 1., 2., 3., 4., 5., 6., 7., 8., 9.,10.,11.,       
     1           12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,       
     2           24.,25.,30.,35.,40.,45.,50.,55.,60.,70.,80.,100./      
      IF(IVSA.EQ.1)THEN                                                 
C                                                                       
C         VERTICAL STRUCTURE ALGORITHM (VSA) OPTION IS ON.              
C         FIRST 9 BOUNDARY ALTITUDES WERE DEFINED IN ROUTINE VSA.       
          DO 10 I=1,9                                                   
              ZM(I)=ZVSA(I)                                             
   10     CONTINUE                                                      
C                                                                       
C         ADD A BOUNDARY ALTITUDE 10 METERS ABOVE ZVSA(9).              
          ML=10                                                         
          ZM(10)=ZM(9)+.01                                              
C                                                                       
C         FIND THE FIRST DEFAULT ALTITUDE HALF A METER ABOVE ZM(10).    
          ILAST=0                                                       
          DO 20 INEXT=1,NDFLT                                           
              IF(ZDFLT(INEXT).GE.ZM(10)+.0005)GOTO30                    
   20     ILAST=INEXT                                                   
C                                                                       
C         NO DEFAULT ALTITUDES ABOVE ZM(10)+.0005.                      
          RETURN                                                        
C                                                                       
C         ADD DEFAULT ALTITUDES.                                        
   30     CONTINUE                                                      
          IF(ML+NDFLT-ILAST.GT.LAYDIM)THEN                              
Calley              WRITE(IPR,'(2A,I3,/8X,2A,I3,A)')                    
              IF (IPR .GT. 0) WRITE(IPR,'(2A,I3,/8X,2A,I3,A)')          
     1          ' ERROR:  VERTICAL STRUCTURE ALGORITHM INCREASES',      
     2          ' LAYER BOUNDARY NUMBER ABOVE',LAYDIM,' INCREASE',      
     3          ' PARAMETER LAYDIM TO',ML+NDFLT-ILAST,' IN PARAM.LST'   
               STOP 'INCREASE PARAMETER LAYDIM'                         
          ENDIF                                                         
          DO 40 I=INEXT,NDFLT                                           
              ML=ML+1                                                   
              ZM(ML)=ZM(I)                                              
   40     CONTINUE                                                      
          RETURN                                                        
      ENDIF                                                             
C                                                                       
C     ASSIGN DEFAULT ALTITUDES                                          
      ML=NDFLT                                                          
      DO 50 I=1,NDFLT                                                   
          ZM(I)=ZDFLT(I)                                                
   50 CONTINUE                                                          
C                                                                       
C     IF THE INPUT GROUND ALTITUDE IS LESS THAN 6 KM ABOVE              
C     SEA LEVEL, SCALE BOTTOM 5 LAYER BOUNDARIES.                       
      IF(GNDALT.LT.ZM(7))THEN                                           
          DALT=(ZM(7)-GNDALT)/(ZM(7)-ZM(1))                             
cjv 1/10/97  Lex fix. 'If a ground altitude between 0 and 6 km is used a
cjv          with one of the model atmospheres, the layer is completely
cjv          screwed up.  This simple fix eliminates the problem.'
c
cjv          DO 60 I=1,6                                                
          DO 60 I=6,1,-1                                                
cjv ^
              ZM(I)=GNDALT+DALT*(ZM(I)-ZM(1))                           
   60     CONTINUE                                                      
      ENDIF                                                             
      IF(ICLD.NE.18 .AND. ICLD.NE.19)RETURN                             
C                                                                       
C     CIRRUS CLOUD.  DEFINE CLOUD BOUNDARIES.                           
      CLDD=.1*CTHIK                                                     
      CIRRUS(1)=CALT-.5*CLDD                                            
      IF(CIRRUS(1).LE.GNDALT)CIRRUS(1)=GNDALT                           
      CIRRUS(2)=CIRRUS(1)+CLDD                                          
      CIRRUS(3)=CIRRUS(1)+CTHIK                                         
      CIRRUS(4)=CIRRUS(3)+CLDD                                          
      IF(CIRRUS(4).GE.ZM(NDFLT))THEN                                    
Calley          WRITE(IPR,'(2A,/8X,2A)')' ERROR:  CIRRUS LAYER',        
          IF (IPR.GT.0)WRITE(IPR,'(2A,/8X,2A)')' ERROR:  CIRRUS LAYER', 
     1      ' IS ABOVE THE TOP OF THE MODEL ATMOSPHERE.',               
     2      ' IF YOU REALLY WANT A CLOUD AT THIS ALTITUDE,',            
     3      ' INPUT A USER-DEFINED ATMOSPHERE.'                         
          STOP 'CIRRUS CLOUD ABOVE TOP OF ATMOSPHERE'                   
      ENDIF                                                             
C                                                                       
C     CHECK ZM DIMENSION                                                
      ML=NDFLT+4                                                        
      IF(LAYDIM.LT.ML)THEN                                              
Calley          WRITE(IPR,'(3A,I3,/14X,A,I3,A)')' ERROR:  CIRRUS',      
          IF (IPR .GT. 0) WRITE(IPR,                                    
     +                    '(3A,I3,/14X,A,I3,A)')' ERROR:  CIRRUS',      
     1      ' LAYER INCREASES LAYER BOUNDARY NUMBER ABOVE',LAYDIM,      
     2      ' INCREASE PARAMETER LAYDIM TO',ML,' IN PARAM.LST'          
          STOP 'INCREASE PARAMETER LAYDIM'                              
      ENDIF                                                             
C                                                                       
C     COMBINE DEFAULT AND CIRRUS LAYERS STARTING FROM THE TOP.          
      NEXT=ML                                                           
      IHI=NDFLT                                                         
      DO 90 J=4,1,-1                                                    
          DO 70 I=IHI,1,-1                                              
              IF(CIRRUS(J).GE.ZM(I))GOTO80                              
              ZM(NEXT)=ZM(I)                                            
              NEXT=NEXT-1                                               
   70     CONTINUE                                                      
   80     CONTINUE                                                      
          ZM(NEXT)=CIRRUS(J)                                            
          ICIR(J)=NEXT                                                  
          NEXT=NEXT-1                                                   
          IHI=I                                                         
   90 CONTINUE                                                          
C                                                                       
C     SET TOLERANCE FOR MERGING LAYERS                                  
      TOL=MIN(.5*CLDD,.0005)                                            
C                                                                       
C     CHECK FOR MERGING                                                 
      DO 120 J=4,1,-1                                                   
          IF(ZM(ICIR(J)+1)-ZM(ICIR(J)).LT.TOL)THEN                      
              IM1=ICIR(J)+1                                             
              DO 100 I=ICIR(J)+2,ML                                     
                  ZM(IM1)=ZM(I)                                         
  100         IM1=I                                                     
              ML=ML-1                                                   
          ELSEIF(ZM(ICIR(J))-ZM(ICIR(J)-1).LT.TOL)THEN                  
              IM1=ICIR(J)-1                                             
              DO 110 I=ICIR(J),ML                                       
                  ZM(IM1)=ZM(I)                                         
  110         IM1=I                                                     
              ML=ML-1                                                   
          ENDIF                                                         
  120 CONTINUE                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE  FLUXES( CMU, CWT, FBEAM, GC, KK, LAYRU, LL, LYRCUT,   
     $                    MXCMU, MXULV, NCUT, NN, NSTR, NTAU, PI,       
     $                    PRNT, SSALB, TAUCPR, UMU0, UTAU, UTAUPR,      
     $                    XR0, XR1, ZZ, ZPLK0, ZPLK1, DFDT, FLUP,       
     $                    FLDN, FLDIR, RFLDIR, RFLDN, UAVG, U0C,        
     $                    MAXULV )                                      
                                                                        
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
C       CALCULATES THE RADIATIVE FLUXES, MEAN INTENSITY, AND FLUX       
C       DERIVATIVE WITH RESPECT TO OPTICAL DEPTH FROM THE M=0 INTENSITY 
C       COMPONENTS (THE AZIMUTHALLY-AVERAGED INTENSITY)                 
                                                                        
C    I N P U T     V A R I A B L E S:                                   
                                                                        
C       CMU      :  ABSCISSAE FOR GAUSS QUADRATURE OVER ANGLE COSINE    
C       CWT      :  WEIGHTS FOR GAUSS QUADRATURE OVER ANGLE COSINE      
C       GC       :  EIGENVECTORS AT POLAR QUADRATURE ANGLES, SC(1)      
C       KK       :  EIGENVALUES OF COEFF. MATRIX IN EQ. SS(7)           
C       LAYRU    :  LAYER NUMBER OF USER LEVEL -UTAU-                   
C       LL       :  CONSTANTS OF INTEGRATION IN EQ. SC(1), OBTAINED     
C                   BY SOLVING SCALED VERSION OF EQ. SC(5);             
C                   EXPONENTIAL TERM OF EQ. SC(12) NOT INCLUDED         
C       LYRCUT   :  LOGICAL FLAG FOR TRUNCATION OF COMPUT. LAYER        
C       NN       :  ORDER OF DOUBLE-GAUSS QUADRATURE (NSTR/2)           
C       NCUT     :  NUMBER OF COMPUTATIONAL LAYER WHERE ABSORPTION      
C                     OPTICAL DEPTH EXCEEDS -ABSCUT-                    
C       TAUCPR   :  CUMULATIVE OPTICAL DEPTH (DELTA-M-SCALED)           
C       UTAUPR   :  OPTICAL DEPTHS OF USER OUTPUT LEVELS IN DELTA-M     
C                     COORDINATES;  EQUAL TO  -UTAU- IF NO DELTA-M      
C       XR0      :  EXPANSION OF THERMAL SOURCE FUNCTION IN EQ. SS(14)  
C       XR1      :  EXPANSION OF THERMAL SOURCE FUNCTION EQS. SS(16)    
C       ZZ       :  BEAM SOURCE VECTORS IN EQ. SS(19)                   
C       ZPLK0    :  THERMAL SOURCE VECTORS -Z0-, BY SOLVING EQ. SS(16)  
C       ZPLK1    :  THERMAL SOURCE VECTORS -Z1-, BY SOLVING EQ. SS(16)  
C       (REMAINDER ARE 'DISORT' INPUT VARIABLES)                        
                                                                        
C   O U T P U T     V A R I A B L E S:                                  
                                                                        
C       U0C      :  AZIMUTHALLY AVERAGED INTENSITIES                    
C                   ( AT POLAR QUADRATURE ANGLES )                      
C       (RFLDIR, RFLDN, FLUP, DFDT, UAVG ARE 'DISORT' OUTPUT VARIABLES) 
                                                                        
C   I N T E R N A L       V A R I A B L E S:                            
                                                                        
C       DIRINT   :  DIRECT INTENSITY ATTENUATED                         
C       FDNTOT   :  TOTAL DOWNWARD FLUX (DIRECT + DIFFUSE)              
C       FLDIR    :  DIRECT-BEAM FLUX (DELTA-M SCALED)                   
C       FLDN     :  DIFFUSE DOWN-FLUX (DELTA-M SCALED)                  
C       FNET     :  NET FLUX (TOTAL-DOWN - DIFFUSE-UP)                  
C       FACT     :  EXP( - UTAUPR / UMU0 )                              
C       PLSORC   :  PLANCK SOURCE FUNCTION (THERMAL)                    
C       ZINT     :  INTENSITY OF M = 0 CASE, IN EQ. SC(1)               
C+---------------------------------------------------------------------+
C                                                                       
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                          
                                                                        
      LOGICAL LYRCUT, PRNT(*)                                           
      REAL*8 DFDT(*),FLUP(*),FLDIR(*),FLDN(*),RFLDIR(*),RFLDN(* ),      
     $        U0C( MXCMU,MXULV ), UAVG(*)                               
      INTEGER LAYRU(*)                                                  
      REAL*8    CMU(*), CWT(*), GC( MXCMU,MXCMU,* ), KK( MXCMU,* ),     
     $        LL( MXCMU,* ), SSALB(*), TAUCPR( 0:* ),                   
     $        UTAU(*), UTAUPR(*), XR0(*), XR1(*), ZZ( MXCMU,* ),        
     $        ZPLK0( MXCMU,* ), ZPLK1( MXCMU,* )                        
                                                                        
                                                                        
Calley      IF ( PRNT(2) )  WRITE( *,1010 )                             
      IF ( PRNT(2) .AND. IPR.GT.0)  WRITE( IPR,1010 )                   
C                                          ** ZERO DISORT OUTPUT ARRAYS 
      CALL  ZEROIT( U0C, MXULV*MXCMU )                                  
      CALL  ZEROIT( RFLDIR, MAXULV )                                    
      CALL  ZEROIT( FLDIR,  MXULV )                                     
      CALL  ZEROIT( RFLDN,  MAXULV )                                    
      CALL  ZEROIT( FLDN,   MXULV )                                     
      CALL  ZEROIT( FLUP,   MAXULV )                                    
      CALL  ZEROIT( UAVG,   MAXULV )                                    
      CALL  ZEROIT( DFDT,   MAXULV )                                    
C                                        ** LOOP OVER USER LEVELS       
      DO 100  LU = 1, NTAU                                              
                                                                        
         LYU = LAYRU(LU)                                                
                                                                        
         IF ( LYRCUT .AND. LYU.GT.NCUT ) THEN                           
C                                                ** NO RADIATION REACHES
C                                                ** THIS LEVEL          
            FDNTOT = 0.0                                                
            FNET   = 0.0                                                
            PLSORC = 0.0                                                
            GO TO 90                                                    
         END IF                                                         
                                                                        
         IF ( FBEAM.GT.0.0 )  THEN                                      
            FACT  = DEXP( - UTAUPR(LU) / UMU0 )                         
            DIRINT = FBEAM * FACT                                       
            FLDIR(  LU ) = UMU0 * ( FBEAM * FACT )                      
            RFLDIR( LU ) = UMU0 * FBEAM * DEXP( - UTAU( LU ) / UMU0 )   
         ELSE                                                           
            DIRINT = 0.0                                                
            FLDIR(  LU ) = 0.0                                          
            RFLDIR( LU ) = 0.0                                          
         END IF                                                         
                                                                        
         DO 20  IQ = 1, NN                                              
                                                                        
            ZINT = 0.0                                                  
            DO 10  JQ = 1, NN                                           
               ZINT = ZINT + GC(IQ,JQ,LYU) * LL(JQ,LYU) *               
     $                DEXP( - KK(JQ,LYU) * (UTAUPR(LU) - TAUCPR(LYU)) ) 
10          CONTINUE                                                    
            DO 11  JQ = NN+1, NSTR                                      
               ZINT = ZINT + GC(IQ,JQ,LYU) * LL(JQ,LYU) *               
     $           DEXP( - KK(JQ,LYU) * (UTAUPR(LU) - TAUCPR(LYU-1)) )    
11          CONTINUE                                                    
                                                                        
            U0C( IQ,LU ) = ZINT                                         
            IF ( FBEAM.GT.0.0 )  U0C( IQ,LU ) = ZINT + ZZ(IQ,LYU) * FACT
            U0C( IQ,LU ) = U0C( IQ,LU ) + ZPLK0(IQ,LYU)                 
     $                     + ZPLK1(IQ,LYU) * UTAUPR(LU)                 
            UAVG(LU) = UAVG(LU) + CWT(NN+1-IQ) * U0C( IQ,LU )           
            FLDN(LU) = FLDN(LU) + CWT(NN+1-IQ)*CMU(NN+1-IQ) * U0C(IQ,LU)
20       CONTINUE                                                       
                                                                        
         DO 40  IQ = NN+1, NSTR                                         
                                                                        
            ZINT = 0.0                                                  
            DO 30  JQ = 1, NN                                           
               ZINT = ZINT + GC(IQ,JQ,LYU) * LL(JQ,LYU) *               
     $                DEXP( - KK(JQ,LYU) * (UTAUPR(LU) - TAUCPR(LYU)) ) 
30          CONTINUE                                                    
            DO 31  JQ = NN+1, NSTR                                      
               ZINT = ZINT + GC(IQ,JQ,LYU) * LL(JQ,LYU) *               
     $           DEXP( - KK(JQ,LYU) * (UTAUPR(LU) - TAUCPR(LYU-1)) )    
31          CONTINUE                                                    
                                                                        
            U0C( IQ,LU ) = ZINT                                         
            IF ( FBEAM.GT.0.0 )  U0C( IQ,LU ) = ZINT + ZZ(IQ,LYU) * FACT
            U0C( IQ,LU ) = U0C( IQ,LU ) + ZPLK0(IQ,LYU)                 
     $                     + ZPLK1(IQ,LYU) * UTAUPR(LU)                 
            UAVG(LU) = UAVG(LU) + CWT(IQ-NN) * U0C( IQ,LU )             
            FLUP(LU) = FLUP(LU) + CWT(IQ-NN) * CMU(IQ-NN) * U0C( IQ,LU )
40       CONTINUE                                                       
                                                                        
         FLUP( LU )  = 2.0 * PI * FLUP( LU )                            
         FLDN( LU )  = 2.0 * PI * FLDN( LU )                            
         FDNTOT = FLDN( LU ) + FLDIR( LU )                              
         FNET   = FDNTOT - FLUP( LU )                                   
         RFLDN( LU ) = FDNTOT - RFLDIR( LU )                            
         UAVG( LU ) = ( 2.0 * PI * UAVG(LU) + DIRINT ) / ( 4.*PI )      
         PLSORC =  XR0(LYU) + XR1(LYU) * UTAUPR(LU)                     
         DFDT( LU ) = ( 1.0-SSALB(LYU) ) * 4.*PI* ( UAVG(LU) - PLSORC ) 
Calley90      IF( PRNT(2) )  WRITE( *,1020 ) UTAU(LU), LYU, RFLDIR(LU), 
 90      CONTINUE                                                       
         IF(PRNT(2) .AND. IPR.GT.0)  WRITE( IPR,1020 ) UTAU(LU), LYU,   
     +                                 RFLDIR(LU),                      
     $                                 RFLDN(LU), FDNTOT, FLUP(LU),     
     $                                 FNET, UAVG(LU), PLSORC, DFDT(LU) 
100   CONTINUE                                                          
                                                                        
      IF ( PRNT(3) )  THEN                                              
Calley         WRITE ( *,1100 )                                         
         IF (IPR .GT. 0) WRITE ( IPR,1100 )                             
         DO 200  LU = 1, NTAU                                           
Calley            WRITE( *,1110 )  UTAU( LU )                           
            IF (IPR .GT. 0) WRITE( IPR, 1110 )  UTAU( LU )              
            DO  200  IQ = 1, NN                                         
               ANG1 = 180./PI * ACOS( CMU(2*NN-IQ+1) )                  
               ANG2 = 180./PI * ACOS( CMU(IQ) )                         
Calley               WRITE( *,1120 ) ANG1, CMU(2*NN-IQ+1), U0C(IQ,LU),  
               IF (IPR .GT. 0) WRITE( IPR, 1120 ) ANG1, CMU(2*NN-IQ+1), 
     +                                                     U0C(IQ,LU),  
     $                         ANG2, CMU(IQ),        U0C(IQ+NN,LU)      
200      CONTINUE                                                       
      END IF                                                            
                                                                        
1010  FORMAT( //, 21X,                                                  
     $ '<----------------------- FLUXES ----------------------->', /,   
     $ '   OPTICAL  COMPU    DOWNWARD    DOWNWARD    DOWNWARD     ',    
     $ ' UPWARD                    MEAN      PLANCK   D(NET FLUX)', /,  
     $ '     DEPTH  LAYER      DIRECT     DIFFUSE       TOTAL     ',    
     $ 'DIFFUSE         NET   INTENSITY      SOURCE   / D(OP DEP)', / ) 
1020  FORMAT( F10.4, I7, 1P,7E12.3, E14.3 )                             
1100  FORMAT( //, ' ******** AZIMUTHALLY AVERAGED INTENSITIES',         
     $      ' ( AT POLAR QUADRATURE ANGLES ) *******' )                 
1110  FORMAT( /, ' OPTICAL DEPTH =', F10.4, //,                         
     $  '     ANGLE (DEG)   COS(ANGLE)     INTENSITY',                  
     $  '     ANGLE (DEG)   COS(ANGLE)     INTENSITY' )                 
1120  FORMAT( 2( 0P,F16.4, F13.5, 1P,E14.3 ) )                          
                                                                        
      RETURN                                                            
      END                                                               
      SUBROUTINE FLXADD(ML,IEMSCT,SALB)                                 
C                                                                       
C     CALCULATES UPWARD (UPF) AND DOWNWARD (DNF) FLUX PROFILES USING    
C     ADDING METHOD.  LAYER SOURCE FUNCTIONS CALCULATED FROM STREAM     
C     APPROXIMATION [FOR THERMAL SEE ISAACS ET AL, AFGL-TR-86-0073      
C     AND FOR SOLAR SEE MEADOR AND WEAVER, J ATMOS SCI V37, P630].      
C     ***  A.E.R. 1986;  S.S.I. 1995.  ***                              
C                                                                       
C     DECLARE INPUTS                                                    
C       ML       NUMBER OF ATMOSPHERIC LAYER BOUNDARIES                 
C       IEMSCT   FLAG = 1 FOR THERMAL SCATTER ONLY                      
C                     = 2 FOR THERMAL AND SOLAR SCATTER                 
C       SALB     SURFACE SCATTERING ALBEDO                              
      INTEGER ML,IEMSCT                                                 
      REAL SALB                                                         
C                                                                       
C     LIST PARAMETERS                                                   
      INCLUDE 'PARAM.LST'                                               
      INTEGER IBND                                                      
      REAL AA,BB,CC,QA,CPS                                              
      COMMON/AABBCC/AA(11),BB(11),CC(11),IBND(11),QA(11),CPS(11)        
      INTEGER KPOINT                                                    
      REAL WAVLEN,EXTC,ABSC,ASYM,AWCCON,TX,W,RELHUM,PATM,TBBY,WPATH     
      COMMON/BASE/WAVLEN(MXWVLN),EXTC(NAER,MXWVLN),ABSC(NAER,MXWVLN),   
     1  ASYM(NAER,MXWVLN),AWCCON(NAER),KPOINT(NSPC),TX(KMAX),W(KMAX),   
     2  RELHUM(LAYDIM),PATM(LAYTHR),TBBY(LAYTHR),WPATH(LAYTHR,KMAX)     
C                                                                       
C     COMMON /MSRD/                                                     
C       CSZEN0  LAYER BOUNDARY COSINE OF SOLAR/LUNAR ZENITH.            
C       CSZEN   LAYER AVERAGE COSINE OF SOLAR/LUNAR ZENITH.             
C       CSZENX  AVERAGE SOLAR/LUNAR COSINE ZENITH EXITING               
C               (AWAY FROM EARTH) THE CURRENT LAYER.                    
C       BBGRND  THERMAL EMISSION (FLUX) AT THE GROUND [W CM-2 / CM-1].  
C       BBNDRY  LAYER BOUNDARY THERMAL EMISSION (FLUX) [W CM-2 / CM-1]. 
C       COSBAR  LAYER HENYEY-GREENSTEIN ASYMMETRY FACTOR.               
C       TSCAT   LAYER SCATTERING OPTICAL DEPTH.                         
C       TCONT   LAYER CONTINUUM OPTICAL DEPTH.                          
C       TAUT    LAYER TOTAL OPTICAL DEPTH.                              
C       DEPRAT  FRACTIONAL DECREASE IN WEAK-LINE OPTICAL DEPTH TO SUN.  
C       S0DEP   OPTICAL DEPTH FROM LAYER BOUNDARY TO SUN.               
C       S0TRN   TRANSMITTED SOLAR IRRADIANCES [W CM-2 / CM-1]           
C       UPF     LAYER BOUNDARY UPWARD THERMAL FLUX [W CM-2 / CM-1].     
C       DNF     LAYER BOUNDARY DOWNWARD THERMAL FLUX [W CM-2 / CM-1].   
C       UPFS    LAYER BOUNDARY UPWARD SOLAR FLUX [W CM-2 / CM-1].       
C       DNFS    LAYER BOUNDARY DOWNWARD SOLAR FLUX [W CM-2 / CM-1].     
      REAL CSZEN0,CSZEN,CSZENX,BBGRND,BBNDRY,COSBAR,TSCAT,              
     1  TCONT,TAUT,DEPRAT,S0DEP,S0TRN,UPF,DNF,UPFS,DNFS                 
      COMMON/MSRD/CSZEN0(LAYDIM),CSZEN(LAYDIM),CSZENX(LAYDIM),          
     1  BBGRND,BBNDRY(LAYDIM),COSBAR(LAYDIM),TSCAT(LAYDIM),             
     2  TCONT(LAYDIM),TAUT(NKSUB,LAYDIM),DEPRAT(LAYDIM),                
     3  S0DEP(NKSUB,LAYDIM),S0TRN(NKSUB,LAYDIM),UPF(NKSUB,LAYDIM),      
     4  DNF(NKSUB,LAYDIM),UPFS(NKSUB,LAYDIM),DNFS(NKSUB,LAYDIM)         
      REAL EDN,EUP,EUPC,TDF,RUPC,REF,EDNS,EUPS,EUPCS,TDFS,RUPCS,REFS    
      COMMON/FLUX/EDN(LAYDIM),EUP(LAYDIM),EUPC(LAYDIM),TDF(LAYDIM),     
     1  RUPC(LAYDIM),REF(LAYDIM),EDNS(LAYDIM),EUPS(LAYDIM),             
     2  EUPCS(LAYDIM),TDFS(LAYDIM),RUPCS(LAYDIM),REFS(LAYDIM)           
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH                               
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                           
C                                                                       
C     INTERNAL VARIABLES:                                               
C       TAUM(K,N) MOLECULAR OPTICAL THICKNESS OF LAYER N FOR K          
C       EUP(N)    INTRINSIC UPWARD THERMAL FLUX OF LAYER N              
C       EDN(N)    INTRINSIC DOWNWARD THERMAL FLUX OF LAYER N            
C       TDF(N)    INTRINSIC THERMAL TRANSMISSION OF LAYER N             
C       REF(N)    INTRINSIC THERMAL REFLECTANCE OF LAYER N              
C       EUPS(N)   INTRINSIC UPWARD SOLAR FLUX OF LAYER N                
C       EDNS(N)   INTRINSIC DOWNWARD SOLAR FLUX OF LAYER N              
C       TDFS(N)   INTRINSIC SOLAR TRANSMISSION OF LAYER N               
C       REFS(N)   INTRINSIC SOLAR REFLECTANCE OF LAYER N                
C                                                                       
C     DECLARE LOCAL VARIABLES                                           
      INTEGER NLAYRS,IKP1,N,NM1,IK,MOL,K,IB                             
      REAL RDNCN,RUPCN,EUPCN,RDNCNS,RUPCNS,EUPCNS,TAU,A1ME0,A2C,        
     1  EDNCN,EDNCNS,AC,DENOM,RT3,COEF,A2C2,C,HALFE1,E0,EXPAN,          
     2  ONEME0,E1,COEF1,COEF2,ACM1,ONEPE0,ONEME1,E2,EX,SOURC,TWGP,SMDPJ 
C                                                                       
C     DECLARE LOCAL ARRAYS                                              
      REAL TAUM(3,LAYDIM),DPJ(3,LAYDIM),GKWJ(3,11),DPWJ(3,11)           
C                                                                       
C     LIST DATA                                                         
      DATA RT3/1.7320508/                                               
C                                                                       
C     NUMBER OF LAYERS                                                  
      NLAYRS=ML-1                                                       
C                                                                       
C     11 MOLECULES BY JOSEPH H PIERLUISSI                               
C       DPWJ   PROBABILITY FOR EACH MOLECULE FIT DOUBLE EXPONENTIAL.    
C       GKWJ   BAND DEPENDENT SCALING OF DENSITIES TO GET K AMOUNT.     
C       CPS    THE STORED VALUES OF PIERLUISSI BAND MODEL COEFFICIENTS. 
C       IBND   MAPPING FROM MOLECULE NUMBER TO BAND NUMBER.             
      DO 10 MOL=1,11                                                    
          IF(IBND(MOL).LE.0)GOTO10                                      
          GKWJ(1,MOL)=CC(MOL)*10.**CPS(MOL)                             
          GKWJ(2,MOL)=.09*GKWJ(1,MOL)                                   
          GKWJ(3,MOL)=.015*GKWJ(1,MOL)                                  
          DPWJ(1,MOL)=AA(MOL)                                           
          DPWJ(2,MOL)=BB(MOL)                                           
          DPWJ(3,MOL)=1.-AA(MOL)-BB(MOL)                                
   10 CONTINUE                                                          
C                                                                       
C     TAUM IS DEFINED AS THE SUM OF THE OPTICAL DEPTHS BY MOLECULE      
      IK=LAYTWO+ML                                                      
      DO 40 N=1,NLAYRS                                                  
          IK=IK-1                                                       
          TAUT(1,N)=TCONT(N)                                            
          UPF(1,N)=0.                                                   
          DNF(1,N)=0.                                                   
          UPFS(1,N)=0.                                                  
          DNFS(1,N)=0.                                                  
          SMDPJ=0.                                                      
          DO 30 K=1,3                                                   
              TAUM(K,N)=0.                                              
              TWGP=0.                                                   
              DO 20 MOL=1,11                                            
                  IB=IBND(MOL)                                          
                  IF(IB.LE.0)GOTO20                                     
                  TAU=WPATH(IK,IB)*GKWJ(K,MOL)                          
                  TAUM(K,N)=TAUM(K,N)+TAU                               
                  TWGP=TWGP+TAU*DPWJ(K,MOL)                             
   20         CONTINUE                                                  
C                                                                       
C             EFFECTIVE PROBABILITY BY LAYER DPJ IS BASED ON            
C             MOLECULAR PROBABILITY WEIGHTED BY OPTICAL DEPTH.          
              DPJ(K,N)=.33333333                                        
              IF(TAUM(K,N).NE.0.)DPJ(K,N)=TWGP/TAUM(K,N)                
              SMDPJ=SMDPJ+DPJ(K,N)                                      
   30     CONTINUE                                                      
          DPJ(1,N)=DPJ(1,N)/SMDPJ                                       
          DPJ(2,N)=DPJ(2,N)/SMDPJ                                       
          DPJ(3,N)=DPJ(3,N)/SMDPJ                                       
   40 CONTINUE                                                          
      UPF(1,ML)=0.                                                      
      DNF(1,ML)=0.                                                      
      UPFS(1,ML)=0.                                                     
      DNFS(1,ML)=0.                                                     
C                                                                       
C     PROBABILITY INTEGRATION LOOP                                      
      DO 70 K=1,3                                                       
C                                                                       
C         COMPOSITE DOWNWARD REFLECTION                                 
          RDNCN=0.                                                      
C                                                                       
C         DEFINE INITIAL UPWARD COMPOSITE SURFACE REFLECTANCE           
          RUPCN=SALB                                                    
C                                                                       
C         SURFACE EMISSION                                              
          EUPCN=(1.-RUPCN)*BBGRND                                       
          EUP(ML)=EUPCN                                                 
          EUPC(ML)=EUPCN                                                
          RUPC(ML)=0.                                                   
          IF(IEMSCT.EQ.2)THEN                                           
              RDNCNS=0.                                                 
              RUPCNS=SALB                                               
              EUPCNS=RUPCNS*CSZEN0(1)*S0TRN(1,1)                        
              EUPS(ML)=EUPCNS                                           
              EUPCS(ML)=EUPCNS                                          
              RUPCS(ML)=0.                                              
          ENDIF                                                         
C                                                                       
C         UPWARD ADDING LOOP STARTS FROM BOTTOM OF ATMOSPHERE.          
          IKP1=1                                                        
          DO 50 N=NLAYRS,1,-1                                           
C                                                                       
C             LAYER INDICES IN OPPOSITE DIRECTION IN ROUTINE LOOP.      
              IK=IKP1                                                   
              IKP1=IKP1+1                                               
C                                                                       
C             STORE MOLECULAR OPTICAL THICKNESS FOR CALCULATION         
C             OF SCATTERING ALBEDO IN ROUTINE LOOP.                     
              TAUT(1,IK)=TAUT(1,IK)+TAUM(K,N)*DPJ(K,N)                  
C                                                                       
C             TAU IS THE LAYER OPTICAL THICKNESS                        
              TAU=TAUM(K,N)+TCONT(IK)                                   
C                                                                       
C             USE TWO STREAM APPROXIMATION FOR THERMAL                  
C               EUP AND EDN ARE UPWARD AND DOWNWARD THERMAL FLUX        
C               FOR AN ISOLATED LAYER.  TDF AND REF ARE THE THERMAL     
C               TRANSMISSION AND REFLECTANCE FOR AN ISOLATED LAYER      
              C=RT3*(TAU-TSCAT(IK)*COSBAR(IK))                          
              A2C=RT3*(TAU-TSCAT(IK))                                   
              A2C2=A2C*C                                                
              AC=SQRT(A2C2)                                             
              IF(AC.GT.20.)THEN                                         
                  DENOM=C+AC                                            
                  REF(N)=(C-AC)/DENOM                                   
                  DENOM=.5*DENOM                                        
                  TDF(N)=0.                                             
                  IF(AC.LT.35.)TDF(N)=C*AC*EXP(-AC)/DENOM**2            
                  ACM1=AC-1.                                            
                  EUP(N)=(BBNDRY(IK)+ACM1*BBNDRY(IKP1))/DENOM           
                  EDN(N)=(BBNDRY(IKP1)+ACM1*BBNDRY(IK))/DENOM           
              ELSE                                                      
                  IF(AC.LT..08)THEN                                     
                      EXPAN=1.-AC*(3.-AC)/6.                            
                      ONEME0=AC*EXPAN                                   
                      A1ME0=A2C*EXPAN                                   
                      E0=1.-ONEME0                                      
                      ONEPE0=2.-ONEME0                                  
                      ONEME1=AC*(.5-AC*(4.-AC)/24.)                     
                      E1=1.-ONEME1                                      
                      E2=A2C2*(1.-AC+.55*A2C2)/3.                       
                  ELSE                                                  
                      E0=EXP(-AC)                                       
                      ONEME0=1.-E0                                      
                      ONEPE0=1.+E0                                      
                      E1=ONEME0/AC                                      
                      A1ME0=A2C*E1                                      
                      ONEME1=1.-E1                                      
                      E2=ONEME0-ONEPE0*ONEME1                           
                  ENDIF                                                 
                  HALFE1=.5*E1                                          
                  DENOM=(1.+(C-AC)*HALFE1)*(ONEPE0+A1ME0)               
                  TDF(N)=2*E0/DENOM                                     
                  REF(N)=(C-A2C)*HALFE1*ONEPE0/DENOM                    
                  COEF1=A1ME0*E1+E2                                     
                  COEF2=A1ME0*(ONEME1+E0)+ONEME0**2-E2                  
                  EUP(N)=(COEF1*BBNDRY(IK)+COEF2*BBNDRY(IKP1))/DENOM    
                  EDN(N)=(COEF1*BBNDRY(IKP1)+COEF2*BBNDRY(IK))/DENOM    
              ENDIF                                                     
C                                                                       
C             CALCULATE COMPOSITE FLUXES AND REFLECTANCES               
              COEF=TDF(N)/(1.-RUPCN*REF(N))                             
              EUPCN=EUP(N)+COEF*(EUPCN+EDN(N)*RUPCN)                    
              RUPCN=REF(N)+COEF*TDF(N)*RUPCN                            
              EUPC(N)=EUPCN                                             
              RUPC(N)=RUPCN                                             
              IF(IEMSCT.EQ.2)THEN                                       
C                                                                       
C                 CALCULATE VARIABLES FOR SOLAR HYBRID MODIFIED         
C                 DELTA EDDINGTON 2-STREAM APPROXIMATION.               
                  CALL TRLAY(TAU,TSCAT(IK),COSBAR(IK),CSZEN(IK),        
     1              S0DEP(1,IK),DEPRAT(IK),EX,TDFS(N),REFS(N))          
                  SOURC=CSZENX(IK)*S0TRN(1,IKP1)                        
                  EUPS(N)=SOURC*REFS(N)                                 
                  EDNS(N)=SOURC*TDFS(N)                                 
                  TDFS(N)=EX+TDFS(N)                                    
                  COEF=TDFS(N)/(1.-RUPCNS*REFS(N))                      
                  EUPCNS=EUPS(N)+COEF*(EUPCNS+EDNS(N)*RUPCNS)           
                  RUPCNS=REFS(N)+COEF*TDFS(N)*RUPCNS                    
                  EUPCS(N)=EUPCNS                                       
                  RUPCS(N)=RUPCNS                                       
              ENDIF                                                     
   50     CONTINUE                                                      
C                                                                       
C         NOW ADD DOWNWARD FROM TOP LAYER (N=1)                         
          EDNCN=0.                                                      
          IK=ML                                                         
          DPJ(K,ML)=DPJ(K,NLAYRS)                                       
          DNF(1,ML)=DNF(1,ML)+DPJ(K,ML)*EDNCN                           
          UPF(1,ML)=UPF(1,ML)+DPJ(K,ML)*EUPC(1)                         
          RDNCN=0.                                                      
          IF(IEMSCT.EQ.2)THEN                                           
              EDNCNS=0.                                                 
              DNFS(K,1)=EDNCNS                                          
              UPFS(K,1)=EUPCS(1)                                        
              RDNCNS=0.                                                 
          ENDIF                                                         
          NM1=1                                                         
          DO 60 N=2,ML                                                  
              IK=IK-1                                                   
              DENOM=1.-RDNCN*REF(NM1)                                   
              COEF=TDF(NM1)/DENOM                                       
              EDNCN=EDN(NM1)+COEF*(EDNCN+EUP(NM1)*RDNCN)                
              RDNCN=REF(NM1)+COEF*TDF(NM1)*RDNCN                        
              COEF=DPJ(K,N)/DENOM                                       
              UPF(1,IK)=UPF(1,IK)+COEF*(EUPC(N)+EDNCN*RUPC(N))          
              DNF(1,IK)=DNF(1,IK)+COEF*(EDNCN+EUPC(N)*RDNCN)            
              IF(IEMSCT.EQ.2)THEN                                       
                  DENOM=1.-RDNCNS*REFS(NM1)                             
                  COEF=TDFS(NM1)/DENOM                                  
                  EDNCNS=EDNS(NM1)+COEF*(EDNCNS+EUPS(NM1)*RDNCNS)       
                  RDNCNS=REFS(NM1)+COEF*TDFS(NM1)*RDNCNS                
                  COEF=DPJ(K,N)/DENOM                                   
                  UPFS(1,IK)=UPFS(1,IK)+COEF*(EUPCS(N)+EDNCNS*RUPCS(N)) 
                  DNFS(1,IK)=DNFS(1,IK)+COEF*(EDNCNS+EUPCS(N)*RDNCNS)   
              ENDIF                                                     
   60     NM1=N                                                         
   70 CONTINUE                                                          
      WRITE(ISCRCH)(COSBAR(IK),TSCAT(IK),TAUT(1,IK),IK=1,NLAYRS),       
     1  (UPF(1,IK),DNF(1,IK),UPFS(1,IK),DNFS(1,IK),IK=1,ML)             
      RETURN                                                            
      END                                                               
      SUBROUTINE FNDPTH(CPATH,H1,HTAN,H2,RANGEI,BETA,LENN,ANGLE,PHI)    
C                                                                       
C     THIS ROUTINE DETERMINES H2, BETA AND LENN GIVEN H1, ANGLE, RANGE, 
C     HTAN, AND CPATH (THE LOWTRAN 6 MANUAL, AFGL-TR-83-0187, PP 14-17).
C                                                                       
C     DECLARE ARGUMENTS:                                                
C       CPATH   REFRACTIVE PATH CONSTANT [KM].                          
C       H1      OBSERVER ALTITUDE [KM].                                 
C       HTAN    SLANT PATH TANGENT ALTITUDE [KM].                       
C       H2      FINAL ALTITUDE [KM].                                    
C       RANGEI  SLANT PATH RANGE [KM].                                  
C       BETA    EACH CENTER ANGLE [DEG].                                
C       LENN    LENGTH SWITCH (=0 FOR SHORT PATHS,                      
C                 =1 FOR PATHS THROUGH TANGENT POINT WITH H2<H1).       
C       ANGLE   PATH ZENITH ANGLE AT H1 TOWARDS H2 [DEG].               
C       PHI     PATH ZENITH ANGLE AT H2 TOWARDS H1 [DEG].               
      INTEGER LENN                                                      
      DOUBLE PRECISION CPATH,H1,HTAN,H2,RANGEI,BETA,ANGLE,PHI           
C                                                                       
C     LIST COMMONS:                                                     
      REAL GNDALT                                                       
      COMMON/GRAUND/GNDALT                                              
      REAL RE,ZMAX                                                      
      INTEGER IPATH                                                     
      COMMON/PARMTR/RE,ZMAX,IPATH                                       
C                                                                       
C     DECLARE LOCAL VARIABLES                                           
C       CAPRJ IS FOR CAPITAL R WITH SUBSCRIPT J                         
C       PNTGRN IS THE INTEGRAND OF EQUATION 21.                         
      INTEGER I                                                         
      DOUBLE PRECISION R1,R2,R,DR,RPLDR,RANGEO,PNTGRN,SAVE,             
     1  RX,RATIO,CAPRJ,XJ,XJPL1,DX,CTHETA,STHETA,DBETA,                 
     2  Z,DZ,DPDEG,BASE,PERP,DRNG,DIFF,DPRE                             
      DATA DR,DPDEG/0.005,57.2957795131D0/                              
C                                                                       
C     (RANGEI .LT. DR) SHOULD NOT HAPPEN; SO THIS CHECK IS REDUNDANT.   
      IF (RANGEI .LT. DR) STOP'STOPPED IN FNDPTH'                       
      DPRE=DBLE(RE)                                                     
      RANGEO=0                                                          
      BETA=0                                                            
      DO 200 I=1,2                                                      
         IF (ANGLE.LE.90.D0 .AND. I.EQ.1)GOTO200                        
         IF (I .EQ. 1) THEN                                             
            R1=DPRE+H1                                                  
            R2=DPRE+HTAN                                                
         ELSEIF (I .EQ. 2) THEN                                         
            IF(HTAN.LT.DBLE(GNDALT+.001) .AND. ANGLE.GT.90.D0)GOTO200   
C           IF (HTAN APPROXIMATELY 0) THEN YOU ARE ABOUT TO HIT THE EART
            R2=DPRE+DBLE(ZMAX)                                          
            IF (ANGLE.LE.90.D0) THEN                                    
               R1=DPRE + H1                                             
            ELSE                                                        
               R1 =DPRE + HTAN                                          
            ENDIF                                                       
         ENDIF                                                          
         IF (R2 .LT. R1) THEN                                           
            DZ=-DR                                                      
         ELSE                                                           
            DZ=DR                                                       
         ENDIF                                                          
         DO 100 R=R1, R2-DZ, DZ                                         
            Z=R-DPRE                                                    
            CALL IRFXN(Z,RX,RATIO)                                      
            STHETA=CPATH/(RX*R)                                         
            IF(STHETA.GT. DBLE(1.))STHETA= DBLE(1.)                     
            IF(STHETA.LT.-DBLE(1.))STHETA=-DBLE(1.)                     
            SAVE=STHETA                                                 
            CTHETA=SQRT(DBLE(1.)-STHETA**2)                             
C                                                                       
C           IF (R1 .GT. R2) THEN CTHETA IS NEGATIVE BECAUSE THETA .GT. 9
            IF (R1 .GT. R2) CTHETA=-CTHETA                              
            XJ=R*CTHETA                                                 
            CAPRJ=-R/RATIO                                              
            PNTGRN=1/(1-CAPRJ*STHETA*STHETA)                            
            RPLDR=R+DZ                                                  
            Z=RPLDR-DPRE                                                
            CALL IRFXN(Z,RX,RATIO)                                      
            STHETA=CPATH/(RX*RPLDR)                                     
            CTHETA=SQRT(1-STHETA**2)                                    
            IF (R1 .GT. R2) CTHETA=-CTHETA                              
            XJPL1=RPLDR*CTHETA                                          
            DX=XJPL1-XJ                                                 
            DRNG=PNTGRN*DX                                              
            RANGEO=RANGEO + DRNG                                        
            DBETA=(((SAVE+STHETA)/2)*(PNTGRN*DX))/(R-DZ/2)              
            BETA=BETA+DBETA                                             
            IF (RANGEO .GE. RANGEI) THEN                                
               DIFF=(RANGEI-(RANGEO-DRNG))                              
               H2=R -DPRE + (DZ/DRNG)*DIFF                              
               BETA=BETA*DPDEG                                          
               IF (I .EQ. 2) THEN                                       
                  LENN=1                                                
                  IF (ANGLE.LE.90.D0)LENN=0                             
                  IF(H2.LT.HTAN)THEN                                    
C                                                                       
C                    THIS WILL BE THE CASE IF I=2, AND YOU HAVE         
C                    GONE THROUGH THE R-LOOP BARELY (ONLY) ONCE.        
                     H2=HTAN                                            
                     LENN=0                                             
                  ENDIF                                                 
               ELSE                                                     
                  LENN=0                                                
               ENDIF                                                    
C                                                                       
C              CORRECTION FOR VERY SHORT PATHS; HERE IT IS ABOUT 5 KM OR
               IF (RANGEI .LT. 5.0 .AND. RANGEO/RANGEI .GT. 1.05) THEN  
C                 CALCULATE BETA BY STARIGHT LINE GEOMETRY.             
                  PERP =SIN(ANGLE/DPDEG)*RANGEI                         
                  BASE=COS(ANGLE/DPDEG)*RANGEI + DPRE+H1                
                  BETA=ATAN(PERP/BASE)*DPDEG                            
                  RANGEO=RANGEI                                         
                  H2=BASE-DPRE                                          
               ENDIF                                                    
               PHI=DBLE(180.)-ACOS(CTHETA)*DPDEG                        
               RETURN                                                   
            ENDIF                                                       
 100     CONTINUE                                                       
 200  CONTINUE                                                          
C                                                                       
C     COMES HERE IF YOU HAVE REACHED ZMAX, BUT YOUR RANGEI IS STILL     
C     NOT EQUAL TO OUTPUT VALUE.                                        
C     IN THIS CASE DO THE FOLLOWING.                                    
C                                                                       
      RANGEI=RANGEO                                                     
      H2=DBLE(ZMAX)                                                     
      IF (ANGLE.LE.90.D0)THEN                                           
         LENN=0                                                         
      ELSE                                                              
         LENN=1                                                         
      ENDIF                                                             
      IF(HTAN.LT.DBLE(GNDALT+.001) .AND. ANGLE.GT.90.D0)THEN            
C        YOU HAVE HIT THE EARTH IF YOU ARE AT THIS POINT OF THE CODE    
         LENN=0                                                         
         H2=DBLE(GNDALT)                                                
      ENDIF                                                             
      BETA=BETA*DPDEG                                                   
      PHI=DBLE(180.)-ACOS(CTHETA)*DPDEG                                 
      RETURN                                                            
      END                                                               
      SUBROUTINE FRN296(V1C,FH2O)                                       
C     LOADS FOREIGN CONTINUUM  296K                                     
      COMMON /FH2O/ V1,V2,DV,NPT,F296(2003)                             
      CALL SINT(V1,V1C,DV,NPT,F296,FH2O)                                
      RETURN                                                            
      END                                                               
      SUBROUTINE FRQ5DT(LOOP0,IV)                                       
C                                                                       
C     THIS ROUTINE DEFINES THE LAYER INDEPENDENT 5 CM-1 DATA            
      LOGICAL LOOP0,MODTRN                                              
C                                                                       
C       PI       THE CONSTANT PI                                        
C       DEG      NUMBER OF DEGREES IN ONE RADIAN.                       
C       BIGNUM   MAXIMUM SINGLE PRECISION NUMBER.                       
C       BIGEXP   MAXIMUM EXPONENTIAL ARGUMENT WITHOUT OVERFLOW.         
      REAL PI,DEG,BIGNUM,BIGEXP                                         
      COMMON/CNSTNS/PI,DEG,BIGNUM,BIGEXP                                
      COMMON/CARD1/MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB,   
     1  MODTRN                                                          
      COMMON/AABBCC/A1(11),B1(11),C1(11),IBND(11),QA(11),CPS(11)        
      COMMON/WNLOHI/IWLH2O(15),IWLO3(6),IWLCO2(11),IWLCO(4),IWLCH4(5),  
     1  IWLN2O(12),IWLO2(7),IWLNH3(3),IWLNO(2),IWLNO2(4),IWLSO2(5),     
     2              IWHH2O(15),IWHO3(6),IWHCO2(11),IWHCO(4),IWHCH4(5),  
     3  IWHN2O(12),IWHO2(7),IWHNH3(3),IWHNO(2),IWHNO2(4),IWHSO2(5)      
      COMMON/H2O/CPH2O(3515)                                            
      COMMON/O3/CPO3(447)                                               
      COMMON/UFMIX1/CPCO2(1219)                                         
      COMMON/UFMIX2/CPCO(173),CPCH4(493),CPN2O(704),CPO2(382)           
      COMMON/TRACEG/CPNH3(431),CPNO(62),CPNO2(142),CPSO2(226)           
      COMMON/FRQ5/SIGO20,SIGO2A,SIGO2B,C0,CT1,CT2,ABB(19),CRSNO2,CRSSO2 
      SAVE INDH2O,INDO3,INDCO2,INDCO,INDCH4,INDN2O,                     
     1  INDO2,INDNH3,INDNO,INDNO2,INDSO2                                
C     INITIALIZE DATA                                                   
      DATA MNAER/1/                                                     
      IF(LOOP0)THEN                                                     
C                                                                       
C         INITIALIZE FREQUENCY REGION INDEX FOR EACH MOLECULE           
          INDH2O=1                                                      
          INDO3 =1                                                      
          INDCO2=1                                                      
          INDCO =1                                                      
          INDCH4=1                                                      
          INDN2O=1                                                      
          INDO2 =1                                                      
          INDNH3=1                                                      
          INDNO =1                                                      
          INDNO2=1                                                      
          INDSO2=1                                                      
          RETURN                                                        
      ENDIF                                                             
      V=FLOAT(IV)                                                       
      IF(.NOT.MODTRN)THEN                                               
          CPS( 1)=CXDTA(V,IWLH2O,IWHH2O,CPH2O,INDH2O)                   
          CPS( 2)=CXDTA(V,IWLCO2,IWHCO2,CPCO2,INDCO2)                   
          CPS( 3)=CXDTA(V,IWLO3 ,IWHO3 ,CPO3 ,INDO3 )                   
          CPS( 4)=CXDTA(V,IWLN2O,IWHN2O,CPN2O,INDN2O)                   
          CPS( 5)=CXDTA(V,IWLCO, IWHCO, CPCO, INDCO )                   
          CPS( 6)=CXDTA(V,IWLCH4,IWHCH4,CPCH4,INDCH4)                   
          CPS( 7)=CXDTA(V,IWLO2, IWHO2, CPO2, INDO2 )                   
          CPS( 8)=CXDTA(V,IWLNO, IWHNO, CPNO, INDNO )                   
          CPS( 9)=CXDTA(V,IWLSO2,IWHSO2,CPSO2,INDSO2)                   
          CPS(10)=CXDTA(V,IWLNO2,IWHNO2,CPNO2,INDNO2)                   
          CPS(11)=CXDTA(V,IWLNH3,IWHNH3,CPNH3,INDNH3)                   
      ENDIF                                                             
C                                                                       
C     N2 CONTINUUM                                                      
      CALL C4DTA(ABB(4),V)                                              
      CALL ABCDTA(IV)                                                   
C                                                                       
      CALL SLF296(V,SH2OT0)                                             
      CALL SLF260(V,SH2OT1)                                             
      CALL FRN296(V,FH2O)                                               
C                                                                       
C                                                                       
C     RADIATION FIELD                                                   
C                                                                       
                                                                        
      VTEMP=1.438786*V                                                  
      IF(VTEMP/260..GT.BIGEXP)THEN                                      
          RADFN0=V                                                      
          RADFN1=V                                                      
      ELSE                                                              
          STORE=EXP(-VTEMP/296.)                                        
          RADFN0=V*(1.-STORE)/(1.+STORE)                                
          STORE=EXP(-VTEMP/260.)                                        
          RADFN1=V*(1.-STORE)/(1.+STORE)                                
      ENDIF                                                             
      ABB(5)=SH2OT0*RADFN0                                              
C                                                                       
C   CO2 CONTINUM                                                        
C                                                                       
CC    CALL CCO2  (V,FCO2)                                               
C                                                                       
CC    FCO2 = FCO2 * RADFN0                                              
      CALL C6DTA(ABB(6),V)                                              
CC    ABB(9)=SH2OT1*RADFN1-SH2OT0*RADFN0                                
      ABB(9)=SH2OT1*RADFN1                                              
      ABB(10)=FH2O*RADFN0                                               
C     HNO3 ABSORPTION CALCULATION                                       
      ABB(11)=0.                                                        
      IF(.NOT.MODTRN)CALL HNO3(V,ABB(11))                               
      CALL AEREXT(V,MNAER)                                              
C                                                                       
C     O2 CONTINUUM CONTRIBUTIONS                                        
          CALL HERTDA(ABB(17),V)                                        
      CALL O2CONT(V,SIGO20,SIGO2A,SIGO2B)                               
      IF(V.GE.49600.)CALL SCHRUN(V,CPS(7))                              
C                                                                       
C     DIFFUSE OZONE                                                     
      C0=0.                                                             
      IF(V.GE.40800.)THEN                                               
          CALL O3UV(V,C0)                                               
          CT1=0.                                                        
          CT2=0.                                                        
          ABB(8)=0.                                                     
      ELSEIF(V.GT.24565.)THEN                                           
          CALL O3HHT0(V,C0)                                             
          CALL O3HHT1(V,CT1)                                            
          CALL O3HHT2(V,CT2)                                            
          ABB(8)=0.                                                     
      ELSE                                                              
          CALL O3CHAP(V,C0,CT1,CT2)                                     
          ABB(8)=0.                                                     
      ENDIF                                                             
C                                                                       
C     NO2 CROSS-SECTIONS (14000 CM-1 TO 50000 CM-1)                     
      CALL NO2XS(V,CRSNO2)                                              
C                                                                       
C     SO2 CROSS-SECTIONS (14000 CM-1 TO 50000 CM-1)                     
      CALL SO2XS(V,CRSSO2)                                              
      RETURN                                                            
      END                                                               
      SUBROUTINE FTRANG(H1,H2,RANGE,ANGLE,PHI,LENN,HMIN,IERROR)         
C                                                                       
C     GIVEN H1, H2 AND RANGE, THIS SUBROUTINE CALCULATES THE ZENITH     
C     ANGLE AT H1 (ANGLE) AND AT H2 (PHI).                              
C                                                                       
C     DECLARE ARGUMENTS:                                                
C       H1      OBSERVER ALTITUDE [KM].                                 
C       H2      FINAL ALTITUDE [KM].                                    
C       RANGE   SLANT PATH RANGE [KM].                                  
C       ANGLE   ZENITH ANGLE AT H1 TOWARDS H2 [DEG].                    
C       PHI     ZENITH ANGLE AT H2 TOWARDS H1 [DEG].                    
C       LENN    PATH LENGTH SWITCH (=0 SHORT PATH,                      
C                 =1 FOR PATH THROUGH TANGENT POINT).                   
C       HMIN    PATH MINIMUM ALTITUDE [KM].                             
C       IERROR  ERROR FLAG (=0 FOR SUCCESS, =1 FOR FAILURE).            
      DOUBLE PRECISION H1,H2,RANGE,ANGLE,PHI,HMIN                       
      INTEGER LENN,IERROR                                               
C                                                                       
C     LIST COMMONS:                                                     
C                                                                       
C     FILE UNIT NUMBERS                                                 
C       IRD      MODTRAN INPUT FILE, tape5, UNIT NUMBER (1).            
C       IPR      MODTRAN STANDARD OUTPUT FILE, tape6, UNIT NUMBER (2).  
C       IPU      MODTRAN SPECTRAL DATA FILE, tape7, UNIT NUMBER (7).    
C       NPR      PRINTOUT LEVEL SWITCH (1=small,0=normal,-1=large).     
C       IPR1     MODTRAN FLUX OUTPUT FILE, tape8, UNIT NUMBER (8).      
C       ISCRCH   MULTIPLE SCATTERING SCRATCH FILE UNIT NUMBER (10).     
C       ITB      MOLECULAR BAND MODEL PARAMETER FILE UNIT NUMBER (9).   
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                           
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                       
      REAL RE,ZMAX                                                      
      INTEGER IPATH                                                     
      COMMON/PARMTR/RE,ZMAX,IPATH                                       
      REAL GNDALT                                                       
      COMMON/GRAUND/GNDALT                                              
C                                                                       
C     DECLARE LOCAL VARIABLES:                                          
C       LOWER   FLAG, .TRUE. WHEN ANGLE INCREMENT NEEDS TO BE DECREASED.
C       DANGLE  ANGLE INCREMENT [DEG].                                  
C       HA      THE LOWER OF H1 AND H2 [KM].                            
C       HB      THE HIGHER OF H1 AND H2 [KM].                           
C       HBSAV   SAVED VALUE OF HB [KM].                                 
C       ANGLE1  CURRENT GUESS FOR ANGLE [DEG].                          
C       ITER    ITERATION COUNTER.                                      
      LOGICAL LOWER                                                     
      DOUBLE PRECISION DANGLE,HA,HB,HBSAV,RA,COEF,STORE,ANGLE1,         
     1  BETA,RANGE1,BENDNG,TERM1,TERM2,ADDRAN,ADDANG,ARG,DPRE           
      INTEGER ITER                                                      
C                                                                       
C     DECLARE DATA:                                                     
C       TOLRNC  MAXIMUM ALLOWED RANGE ERROR [KM].                       
C       ITERMX  MAXIMUM NUMBER OF ITERATIONS.                           
C       IAMT    COLUMN AMOUNT CALCULATION SWITCH.                       
      REAL TOLRNC                                                       
      INTEGER ITERMX,IAMT                                               
      DOUBLE PRECISION DPDEG                                            
      DATA TOLRNC/1.E-3/,ITERMX/30/,IAMT/2/,DPDEG/57.2957795131D0/      
C                                                                       
C     INITIALIZE PARAMETERS                                             
      LOWER=.FALSE.                                                     
      DANGLE=.1D0                                                       
      HA=H1                                                             
      HB=H2                                                             
      IF(H1.GT.H2)THEN                                                  
          HA=H2                                                         
          HB=H1                                                         
      ENDIF                                                             
C                                                                       
C     HBSAV IS DEFINED TO PROTECT AGAINST RPATH REDEFINING HB           
      HBSAV=HB                                                          
C                                                                       
C     GUESS AT ANGLE, INTEGRATE OVER PATH TO FIND RANGE, TEST           
C     FOR CONVERGENCE, AND ITERATE ANGLE IF NECESSARY.                  
Calley      WRITE(IPR,'(///A,3F10.5,A,//A,//(2A))')                     
      IF (IPR .GT. 0) WRITE(IPR,'(///A,3F10.5,A,//A,//(2A))')           
     1  ' CASE 2C: GIVEN H1, H2, RANGE:  (',H1,H2,RANGE,' )',           
     2  ' ITERATE AROUND ANGLE UNTIL RANGE CONVERGES',                  
     3  ' ITER    ANGLE      RANGE     DRANGE    ',                     
     4  '   BETA       HMIN        PHI    BENDING',                     
     5  '         (DEG)       (KM)      (KM)     ',                     
     6  '  (DEG)       (KM)      (DEG)     (DEG)'                       
C                                                                       
C     CALCULATE THE NO REFRACTION ZENITH ANGLE AS AN INITIAL GUESS      
      DPRE=DBLE(RE)                                                     
      RA=DPRE+HA                                                        
      COEF=.5D0/RA                                                      
      STORE=(HB-HA)*(DPRE+HB+RA)                                        
      ANGLE=DPDEG*ACOS(COEF*(STORE/RANGE-RANGE))                        
      ANGLE1=ANGLE                                                      
C                                                                       
C     BEGIN ITERATIVE PROCEDURE                                         
      ITER=0                                                            
   10 ITER=ITER+1                                                       
          IF(ITER.GT.ITERMX)THEN                                        
Calley        WRITE(IPR,'(41h0FITRNG, CASE 2C (H1,H2,RANGE): SOLUTION , 
              IF (IPR .GT. 0) WRITE(IPR,                                
     +                  '(41h0FITRNG, CASE 2C (H1,H2,RANGE): SOLUTION , 
     1          16hDID NOT CONVERGE,//10X,4hH1 =,F13.6,4x,4hH2 =,F13.6, 
     2          4x,7hRANGE =,F13.6,4x,12hITERATIONS =,I5,//10X,5hLAST , 
     3          9hITERATION,//10X,7hANGLE =,F16.9,4x,7hRANGE =,F16.9)') 
     4          H1,H2,BETA,ITER,ANGLE1,RANGE1                           
              IERROR=1                                                  
              RETURN                                                    
          ENDIF                                                         
C                                                                       
C         DETERMINE RANGE1, THE RANGE CORRESPONDING TO ANGLE1           
          HB=HBSAV                                                      
          IF(ANGLE1.LE.90.)THEN                                         
C                                                                       
C             SHORT UPWARD PATH                                         
              LENN=0                                                    
              CALL DPFNMN(HA,ANGLE1,HB,LENN,ITER,HMIN,PHI,IERROR)       
              CALL DPRFPA(HA,HB,ANGLE1,PHI,LENN,                        
     1          HMIN,IAMT,BETA,RANGE1,BENDNG)                           
          ELSE                                                          
C                                                                       
C             LONG PATH                                                 
              LENN=1                                                    
              CALL DPFNMN(HA,ANGLE1,HB,LENN,ITER,HMIN,PHI,IERROR)       
              CALL DPRFPA(HA,HB,ANGLE1,PHI,LENN,                        
     1          HMIN,IAMT,BETA,RANGE1,BENDNG)                           
              IF(LENN.EQ.0)THEN                                         
C                                                                       
C                 THE PATH INTERSECTED THE EARTH.  DECREASE ANGLE BY .1 
Calley                  WRITE(IPR,'(I3,7F11.5)')ITER,ANGLE1,            
                  IF (IPR .GT. 0) WRITE(IPR,'(I3,7F11.5)')ITER,ANGLE1,  
     1              RANGE1,RANGE-RANGE1,BETA,HMIN,PHI,BENDNG            
                  LOWER=.TRUE.                                          
                  ANGLE1=ANGLE1-DANGLE                                  
                  GOTO10                                                
              ENDIF                                                     
          ENDIF                                                         
C                                                                       
C         IF THE FINAL ALTITUDE HB HAS BEEN LOWERED (BECAUSE            
C         HB WAS ABOVE THE TOP OF THE ATMOSPHERE), ADD ON THE           
C         REMAINDER OF PATH LENGTH ASSUMING NO REFRACTION.              
          IF(HBSAV.GT.HB)THEN                                           
              TERM1=(DPRE+HB)*COS(PHI/DPDEG)                            
              TERM2=(HBSAV-HB)*(2*DPRE+HBSAV+HB)                        
              ADDRAN=TERM2/(SQRT(TERM1*TERM1+TERM2)-TERM1)              
              RANGE1=RANGE1+ADDRAN                                      
              ADDANG=DPDEG*ASIN(ADDRAN*SIN(PHI/DPDEG)/(DPRE+HBSAV))     
              BETA=BETA+ADDANG                                          
              PHI=PHI+ADDANG                                            
          ENDIF                                                         
Calley          WRITE(IPR,'(I3,7F11.5)')                                
          IF (IPR .GT. 0) WRITE(IPR,'(I3,7F11.5)')                      
     1      ITER,ANGLE1,RANGE1,RANGE-RANGE1,BETA,HMIN,PHI,BENDNG        
C                                                                       
C         CHECK FOR CONVERGENCE                                         
          IF(ABS(RANGE-RANGE1).LT.TOLRNC .OR.                           
     1      ABS(1.D0-RANGE1/RANGE).LT.2.D-6)THEN                        
              RANGE=RANGE1                                              
              IF(H1.LE.H2)THEN                                          
                  ANGLE=ANGLE1                                          
              ELSE                                                      
                  ANGLE=PHI                                             
                  PHI=ANGLE1                                            
              ENDIF                                                     
              IF(HMIN.GE.GNDALT)RETURN                                  
Calley              WRITE(IPR,'(/A,//8X,2A)')                           
              IF (IPR .GT. 0) WRITE(IPR,'(/A,//8X,2A)')                 
     1          'FTRANG, CASE 2B (H1,H2,RANGE):  RANGE IS TOO LARGE.',  
     2          ' REFRACTED PATH TANGENT HEIGHT IS LESS THAN',          
     3          ' GROUND ALTITUDE; THE PATH INTERSECTS THE EARTH.'      
              IERROR=1                                                  
              RETURN                                                    
          ENDIF                                                         
C                                                                       
C         DETERMINE NEW VALUE FOR ANGLE (.6 IS A FUDGE FACTOR INTRODUCED
C         TO AVOID OVER CORRECTING AND SPEED UP CONVERGENCE).           
          IF(RANGE1.LE.0.)STOP 'FTRANG error:  Range is zero or less.'  
          ARG=COEF*(STORE/RANGE1-RANGE1)                                
          IF(ARG.GE.1)THEN                                              
              ANGLE1=ANGLE1+.6D0*ANGLE                                  
          ELSEIF(ARG.GT.-1)THEN                                         
              ANGLE1=ANGLE1+.6D0*(ANGLE-DPDEG*ACOS(ARG))                
          ELSE                                                          
              ANGLE1=ANGLE1+.6D0*(ANGLE-180.D0)                         
          ENDIF                                                         
C                                                                       
C         CHECK IF ANGLE INCREMENT MUST BE LOWERED                      
          IF(LOWER)THEN                                                 
              DANGLE=.2D0*DANGLE                                        
              LOWER=.FALSE.                                             
          ENDIF                                                         
      GOTO10                                                            
      END                                                               
      FUNCTION   GAMFOG(MR,FREQ,T,RHO)                                  
C                                                                       
C        COMPUTES ATTENUATION OF EQUIVALENT LIQUID WATER CONTENT        
C       IN CLOUDS OR FOG IN DB/KM                                       
C       CONVERTED TO NEPERS BY NEW CONSTANT 1.885                       
C                                                                       
C        FREQ = WAVENUMBER (INVERSE CM)                                 
C        T    = TEMPERATURE (DEGREES KELVIN)                            
C        RHO  = EQUIVALENT LIQUID CONTENT  (G/CUBIC METER)              
C      CINDEX=COMPLEX DIELECTRIC CONSTANT M  FROM INDEX                 
C      WAVL = WAVELENGTH IN CM                                          
C                                                                       
      COMPLEX CINDEX                                                    
      IF(RHO.GT.0.) GO TO 2                                             
      GAMFOG=0.                                                         
      RETURN                                                            
    2 CONTINUE                                                          
      KEY=1                                                             
      IF(MR. GE. 5) KEY = 0                                             
      WAVL=1.0/FREQ                                                     
      TC=T-273.2                                                        
CCC                                                                     
CCC    CHANGE TEMP SO THAT MINIMUM IS -20.0 CENT.                       
CCC                                                                     
      IF(TC.LT.-20.0) TC=-20.0                                          
      CALL INDX (WAVL,TC,KEY,REIL,AIMAK)                                
      CINDEX=CMPLX(REIL,AIMAK)                                          
CCC                                                                     
CCC   ATTENUATION = 6.0*PI*FREQ*RHO*IMAG(-K)                            
CCC    6.0*PI/10. = 1.885 (THE FACTOR OF 10 IS FOR UNITS CONVERSION)    
CCC                                                                     
C     GAMFOG=8.1888*FREQ*RHO*AIMAG( -  (CINDEX**2-1)/(CINDEX**2+2))     
      GAMFOG=1.885 *FREQ*RHO*AIMAG( -  (CINDEX**2-1)/(CINDEX**2+2))     
      RETURN                                                            
      END                                                               
      SUBROUTINE GEO(IERROR,BENDNG,MSOFF,ICH1)                          
      INCLUDE 'PARAM.LST'                                               
C                                                                       
C     ROUTINE 'GEO' SERVES AS AN INTERFACE BETWEEN ROUTINE              
C     'DRIVER' AND THE GEOMETRY SUBROUTINES INCLUDING 'GEOINP',         
C     'REDUCE', 'FDBETA', 'EXPINT', 'DPEXNT', 'DPFNMN',                 
C     'DPFISH', 'DPSCHT', 'DPANDX', 'DPRARF', 'DPRFPA', 'DPFILL'        
C     AND 'DPLAYR'.  THESE ROUTINES CALCULATE THE ABSORBER              
C     AMOUNTS FOR A REFRACTED PATH THROUGH THE ATMOSPHERE.              
      INTEGER IERROR,MSOFF,ICH1                                         
      REAL BENDNG                                                       
C                                                                       
C     MMOLX  = MAXIMUM NUMBER OF NEW SPECIES (IDENTIFIED BY "X")        
C     MMOL   = MAXIMUM NUMBER OF OLD SPECIES (W/O SUFFIX "X")           
C     NSPC   = ACTUAL NUMBER OF OLD SPECIES (12), CAN'T EXCEED MMOL     
C     NSPECX = ACTUAL NUMBER OF "X" SPECIES,     CAN'T EXCEED MMOLX     
C                                                                       
C     PARAMETER KMAX DENOTES THE NUMBER OF MODTRAN "SPECIES".           
C     THIS INCLUDES THE 12 ORIGINAL BAND MODEL PARAMETER MOLECULES      
C     PLUS A HOST OF OTHER ABSORPTION AND/OR SCATTERING SOURCES.        
      CHARACTER*8 CNAMEX                                                
      COMMON/NAMEX/CNAMEX(MMOLX)                                        
      REAL DNSTYX                                                       
      COMMON/MODELX/DNSTYX(MMOLX,LAYDIM)                                
      REAL DENPX,AMTPX                                                  
      COMMON/RFRPTX/DENPX(MMOLX,LAYDIM+1),AMTPX(MMOLX,LAYDIM+1)         
      REAL TXX,WX,WPATHX                                                
      COMMON/NONAME/TXX(MMOLX),WX(MMOLX),WPATHX(LAYTHR,MMOLX)           
      DOUBLE PRECISION DPH1,DPH2,DPANGL,DPPHI,DPHMIN,                   
     1  DPBETA,DPBEND,DPRANG,SMMIN,DPZP,DPPP,DPTP,                      
     2  DPRFN,DPSP,DPTPSU,DPRHOP,DPDENP,DPAMTP,DPPPSU                   
      LOGICAL LSAVE,LNOGEO                                              
C                                                                       
C     SSI COMMENTS ON DOUBLE PRECISION VARIABLES:  /RFRPTH/ IS THE OLD  
C     REFRACTED PATH COMMON BLOCK IN SINGLE PRECISION.  /DPRFRP/ IS     
C     THE SAME COMMON BLOCK IN DOUBLE PRECISION AND IS NEW.  IN THIS    
C     ROUTINE "DP" IS USED AS A PREFIX TO DENOTE THE DOUBLE PRECISION   
C     VARIABLES OF DPRFRP.  THE FOLLOWING ARE THE EXCEPTIONS:           
C       DPRFN    STANDS FOR THE OLD DOUBLE PRECISION RFNDXP             
C       DPPPSU   STANDS FOR THE OLD DOUBLE PRECISION PPSUM              
C       DPTPSU   STANDS FOR THE OLD DOUBLE PRECISION TPSUM              
C       DPRHOP   STANDS FOR THE OLD DOUBLE PRECISION RHOPSM             
C                                                                       
C     SOME OTHER VARIABLES WERE DECLARED DOUBLE PRECISION; THEY ARE ALSO
C     IDENTIFIED BY THE "DP" PREFIX, BUT ARE NOT COMMON BLOCK VARIABLES.
      INTEGER KPOINT                                                    
      REAL WAVLEN,EXTC,ABSC,ASYM,AWCCON,TX,W,RELHUM,PATM,TBBY,WPATH     
      COMMON/BASE/WAVLEN(MXWVLN),EXTC(NAER,MXWVLN),ABSC(NAER,MXWVLN),   
     1  ASYM(NAER,MXWVLN),AWCCON(NAER),KPOINT(NSPC),TX(KMAX),W(KMAX),   
     2  RELHUM(LAYDIM),PATM(LAYTHR),TBBY(LAYTHR),WPATH(LAYTHR,KMAX)     
C                                                                       
C     FILE UNIT NUMBERS                                                 
C       IRD      MODTRAN INPUT FILE, tape5, UNIT NUMBER (1).            
C       IPR      MODTRAN STANDARD OUTPUT FILE, tape6, UNIT NUMBER (2).  
C       IPU      MODTRAN SPECTRAL DATA FILE, tape7, UNIT NUMBER (7).    
C       NPR      PRINTOUT LEVEL SWITCH (1=small,0=normal,-1=large).     
C       IPR1     MODTRAN FLUX OUTPUT FILE, tape8, UNIT NUMBER (8).      
C       ISCRCH   MULTIPLE SCATTERING SCRATCH FILE UNIT NUMBER (10).     
C       ITB      MOLECULAR BAND MODEL PARAMETER FILE UNIT NUMBER (9).   
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                           
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                       
      INTEGER MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT                     
      REAL TBOUND,SALB                                                  
      LOGICAL MODTRN                                                    
      COMMON/CARD1/MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,        
     1  SALB,MODTRN                                                     
      INTEGER LENN                                                      
      REAL H1,H2,ANGLE,RANGE,BETA,REE                                   
      COMMON/CARD3/H1,H2,ANGLE,RANGE,BETA,REE,LENN                      
      INTEGER IKMAX,ML,ISSGEO,IMULT                                     
      COMMON/CNTRL/IKMAX,ML,ISSGEO,IMULT                                
      REAL ZM,PM,TM,RFNDX,DENSTY                                        
      COMMON/MODEL/ZM(LAYDIM),PM(LAYDIM),TM(LAYDIM),                    
     1  RFNDX(LAYDIM),DENSTY(KMAX,LAYDIM)                               
      REAL RE,ZMAX                                                      
      INTEGER IPATH                                                     
      COMMON/PARMTR/RE,ZMAX,IPATH                                       
      REAL ZP,PP,TP,RFNDXP,SP,PPSUM,TPSUM,RHOPSM,DENP,AMTP              
      COMMON/RFRPTH/ZP(LAYDIM+1),PP(LAYDIM+1),TP(LAYDIM+1),             
     1  RFNDXP(LAYDIM+1),SP(LAYDIM+1),PPSUM(LAYDIM+1),TPSUM(LAYDIM+1),  
     2  RHOPSM(LAYDIM+1),DENP(KMAX,LAYDIM+1),AMTP(KMAX,LAYDIM+1)        
      COMMON/DPRFRP/DPZP(LAYDIM+1),DPPP(LAYDIM+1),                      
     1  DPTP(LAYDIM+1),DPRFN(LAYDIM+1),DPSP(LAYDIM+1),                  
     2  DPPPSU(LAYDIM+1),DPTPSU(LAYDIM+1),DPRHOP(LAYDIM+1),             
     3  DPDENP(KMAX,LAYDIM+1),DPAMTP(KMAX,LAYDIM+1)                     
      INTEGER JTURN,LJ                                                  
      REAL ATHETA,ADBETA,PHASFN,AH1,ARH,ANGSUN,TBBYS,PATMS,WPATHS       
      COMMON/SOLS/JTURN,LJ(LAYTWO+1),ATHETA(LAYDIM+1),                  
     1  ADBETA(LAYDIM+1),PHASFN(LAYTWO,4),AH1(LAYTWO),ARH(LAYTWO),      
     2  ANGSUN,TBBYS(LAYTHR,12),PATMS(LAYTHR,12),WPATHS(LAYTHR,KMAX)    
C                                                                       
C     /PATH/                                                            
C       QTHETA  COSINE OF PATH ZENITH AT PATH BOUNDARIES.               
C       AHT     ALTITUDES AT PATH BOUNDARIES.                           
C       TPH     TEMPERATURE AT PATH BOUNDARIES.                         
C       IMAP    MAPPING FROM PATH SEGMENTS TO LAYERS.                   
      INTEGER IMAP                                                      
      REAL QTHETA,AHT,TPH                                               
      COMMON/PATH/QTHETA(LAYTWO),AHT(LAYTWO),TPH(LAYTWO),IMAP(LAYTWO)   
      DOUBLE PRECISION DHALFR,DPRNG2                                    
      COMMON/SMALL1/DHALFR,DPRNG2                                       
      LOGICAL LSMALL                                                    
      COMMON/SMALL2/LSMALL                                              
      REAL SMALL                                                        
      COMMON/SMALL3/SMALL                                               
      LOGICAL LPRINT                                                    
      COMMON/CPRINT/LPRINT                                              
      REAL GNDALT                                                       
      COMMON/GRAUND/GNDALT                                              
      REAL EXTV,ABSV,ASYV                                               
      COMMON/AER/EXTV(NAER),ABSV(NAER),ASYV(NAER)                       
C                                                                       
C     DECLARE FUNCTIONS                                                 
      INTEGER PSLCT                                                     
      REAL EXPINT                                                       
C                                                                       
C     DECLARE LOCAL VARIABLES                                           
      INTEGER JMAX,JMAXP1,I,J,K,L,ILO,IHI,IH1,IH2,JOFF,JOFFM1,ISLCT,    
     1  LENNSV,IAMT,LDEL                                                
      LOGICAL LOGLOS                                                    
      REAL TLRNCE,PZERO,PHI,FAC,WTEM,RANGSV,HMIN,PHISV,PRCNT,H2MX       
C                                                                       
C     KMOL(K) IS A POINTER USED TO REORDER THE AMOUNTS WHEN PRINTING    
      INTEGER KMOL(17)                                                  
      DATA KMOL/1,2,3,11,8,5,9,10,4,6,7,12,13,14,16,15,17/              
      DATA TLRNCE/0.001/,PZERO/1013.25/                                 
      LSMALL=.FALSE.                                                    
      LPRINT=.TRUE.                                                     
      LNOGEO=.FALSE.                                                    
C                                                                       
C     INITIALIZE CONSTANTS AND CLEAR CUMULATIVE VARIABLES.              
Calley      IF(GNDALT.GT.ZM(1))WRITE(6,'(/A,2F10.6,I5)')                
      IF(GNDALT.GT.ZM(1) .AND. IPR.GT.0) WRITE(IPR,'(/A,2F10.6,I5)')    
     1  ' GNDALT IS > FIRST PROFILE ALTITUDE:',GNDALT,ZM(1),MODEL       
      IERROR=0                                                          
C                                                                       
C     INITIALIZE CUMULATIVE VARIABLES                                   
      DO 30 I=1,LAYDIM+1                                                
          LJ(I)=0                                                       
          SP(I)=0.                                                      
          PPSUM(I)=0.                                                   
          TPSUM(I)=0.                                                   
          RHOPSM(I)=0.                                                  
          DPSP(I)=DBLE(0.)                                              
          DPPPSU(I)=DBLE(0.)                                            
          DPTPSU(I)=DBLE(0.)                                            
          DPRHOP(I)=DBLE(0.)                                            
          DO 10 K=1,KMAX                                                
              AMTP(K,I)=0.                                              
              DPAMTP(K,I)=DBLE(0.)                                      
   10     CONTINUE                                                      
          DO 20 K=1,NSPECX                                              
              AMTPX(K,I)=0.                                             
   20     CONTINUE                                                      
   30 CONTINUE                                                          
      IF(ITYPE.LT.2)THEN                                                
C                                                                       
C         HORIZONTAL PATH, MODEL EQ 1 TO 7:  INTERPOLATE PROFILE TO H1  
          ZP(1)=H1                                                      
          DPZP(1)=DBLE(ZP(1))                                           
          IF(ML.EQ.1)THEN                                               
              PP(1)=PM(1)                                               
              DPPP(1)=DBLE(PM(1))                                       
              TP(1)=TM(1)                                               
              TPH(1)=TP(1)                                              
              DPTP(1)=DBLE(TM(1))                                       
              LJ(1)=1                                                   
              SP(1)=RANGE                                               
              DPSP(1)=DBLE(RANGE)                                       
              DO 40 K=1,KMAX                                            
                  DENP(K,1)=DENSTY(K,1)                                 
   40         CONTINUE                                                  
              DO 50 K=1,NSPECX                                          
                  DENPX(K,1)=DNSTYX(K,1)                                
   50         CONTINUE                                                  
          ELSEIF(H1.LT.ZM(1))THEN                                       
Calley              WRITE(IPR,'(A,2F10.6)')                             
              IF (IPR .GT. 0) WRITE(IPR,'(A,2F10.6)')                   
     1          ' ERROR HORIZ PATH H1 < ZM(1)',H1,ZM(1)                 
              IERROR=1                                                  
              RETURN                                                    
          ELSE                                                          
              ILO=1                                                     
              DO 60 IHI=2,ML                                            
                  IF(H1.LT.ZM(IHI))GOTO70                               
   60         ILO=IHI                                                   
   70         FAC=(H1-ZM(ILO))/(ZM(IHI)-ZM(ILO))                        
              PP(1)=EXPINT(PM(ILO),PM(IHI),FAC)                         
              TP(1)=TM(ILO)+(TM(IHI)-TM(ILO))*FAC                       
              TPH(1)=TP(1)                                              
              DPTP(1)=DBLE(TM(ILO)+(TM(IHI)-TM(ILO))*FAC)               
              LJ(1)=ILO                                                 
              IF(FAC.GT..5)LJ(1)=IHI                                    
              SP(LJ(1))=RANGE                                           
              DPSP(LJ(1))=DBLE(RANGE)                                   
              DO 80 K=1,KMAX                                            
                  DENP(K,1)=EXPINT(DENSTY(K,ILO),DENSTY(K,IHI),FAC)     
   80         CONTINUE                                                  
              DO 90 K=1,NSPECX                                          
                  DENPX(K,1)=EXPINT(DNSTYX(K,ILO),DNSTYX(K,IHI),FAC)    
   90         CONTINUE                                                  
C                                                                       
C             USE LINEAR INTERPOLATION FOR CLOUDS                       
              DENP(16,1)=DENSTY(16,ILO)                                 
     1          +FAC*(DENSTY(16,IHI)-DENSTY(16,ILO))                    
              DENP(66,1)=DENSTY(66,ILO)                                 
     1          +FAC*(DENSTY(66,IHI)-DENSTY(66,ILO))                    
              DENP(67,1)=DENSTY(67,ILO)                                 
     1          +FAC*(DENSTY(67,IHI)-DENSTY(67,ILO))                    
          ENDIF                                                         
C                                                                       
C         CALCULATE ABSORBER AMOUNTS FOR A HORIZONTAL PATH              
Calley          WRITE(IPR,'(2(A,F11.3),A,I4)')                          
          IF (IPR .GT. 0) WRITE(IPR,'(2(A,F11.3),A,I4)')                
     1      '0HORIZONTAL PATH AT ALTITUDE =',H1,                        
     2      ' KM WITH RANGE =',RANGE,' KM, MODEL =',MODEL               
          IKMAX=1                                                       
          JMAX=1                                                        
          IF(MODEL.EQ.0)THEN                                            
              TP(1)=TM(1)                                               
              PP(1)=PM(1)                                               
              DPTP(1)=DBLE(TM(1))                                       
              DPPP(1)=DBLE(PM(1))                                       
          ENDIF                                                         
          JOFF=MSOFF+1                                                  
          PATM(JOFF)=PP(1)/PZERO                                        
          TBBY(JOFF)=TP(1)                                              
          DO 100 K=1,KMAX                                               
              W(K)=DENP(K,1)*RANGE                                      
              WPATH(JOFF,K)=W(K)                                        
  100     CONTINUE                                                      
          DO 110 K=1,NSPECX                                             
              WX(K)=DENPX(K,1)*RANGE                                    
              WPATHX(JOFF,K)=WX(K)                                      
  110     CONTINUE                                                      
          W(9)=W(5)*(296.-TP(1))/(296.-260.)                            
          WTEM=TP(1)-273.15                                             
          W(59)=W(8)*.269*WTEM                                          
          W(60)=W(59)*WTEM                                              
          WPATH(JOFF,9)=W(9)                                            
          WPATH(JOFF,59)=W(59)                                          
          WPATH(JOFF,60)=W(60)                                          
      ELSE                                                              
C                                                                       
C         SLANT PATH SELECTED.  INTERPRET SLANT PATH PARAMETERS.        
C                                                                       
C         LOGLOS IS A LOGICAL VARIABLE THAT IS TRUE                     
C         ONLY THE OPTICAL PATH WITH ITYPE = 2.                         
          LOGLOS=.FALSE.                                                
          IF(ITYPE.EQ.2 .AND. MSOFF.EQ.0)THEN                           
              LOGLOS=.TRUE.                                             
              ISLCT=PSLCT(ANGLE,RANGE,BETA)                             
C                                                                       
C             SPECIAL TREATMENT EXCEPT FOR CASE 2A (ISLCT=21)           
              IF(ISLCT.GT.21)THEN                                       
C                                                                       
C                 IF RANGE IS SMALL, CONVERT TO CASE 2C (ISLCT=23)      
                  CALL SMPREP(H1,H2,ANGLE,RANGE,BETA,ISLCT)             
                  IF(RANGE.GT.0 .AND. RANGE.LE.SMALL)THEN               
                      LSMALL=.TRUE.                                     
                      RANGSV=RANGE                                      
                      ISLCT= 23                                         
                  ELSEIF(ISLCT.EQ.22)THEN                               
C                                                                       
C                     CASE 2B:  (H1,ANGLE,RANGE)                        
C                     IF PATH TYPE IS CASE 2B, CHECK THAT THE RANGE     
C                     USED IN THE CALCULATION EQUALS THE INPUT RANGE.   
C                     DETERMINE H2 AND LENN USING ROUTINE NEWH2.        
                      LENNSV=LENN                                       
                      RANGSV=RANGE                                      
                      DPH1=DBLE(H1)                                     
                      DPANGL=DBLE(ANGLE)                                
                      DPRANG=DBLE(RANGE)                                
                      CALL NEWH2(DPH1,DPH2,DPANGL,                      
     1                  DPRANG,DPBETA,LENN,DPHMIN,DPPHI)                
                      IF(LENN.EQ.0)DPHMIN=MIN(DPH2,DPH1)                
                      H2=REAL(DPH2)                                     
                      HMIN=REAL(DPHMIN)                                 
                      PHISV=REAL(DPPHI)                                 
                      LPRINT=.FALSE.                                    
                      IAMT=2                                            
                      CALL DPRFPA(DPH1,DPH2,DPANGL,DPPHI,               
     1                  LENN,DPHMIN,IAMT,DPBETA,DPRANG,DPBEND)          
                      LPRINT=.TRUE.                                     
                      PRCNT=100*ABS(REAL(DPRANG)-RANGSV)/RANGSV         
Calley                      WRITE(IPR,'((A))')'1',                      
                      IF (IPR .GT. 0) WRITE(IPR,'((A))')'1',            
     1                  ' SOME INTERNAL DETAILS:'                       
Calley                      WRITE(IPR,'(/(A))')                         
                      IF (IPR .GT. 0) WRITE(IPR,'(/(A))')               
     1                  ' LOS IS INTERNAL CASE 2B (H1, ANGLE, RANGE).', 
     2                  ' USING H2 OBTAINED FROM SUBROUTINE NEWH2:'     
Calley                      WRITE(IPR,'(/(A,F12.5))')                   
                      IF (IPR .GT. 0) WRITE(IPR,'(/(A,F12.5))')         
     1                  ' H1                        =',H1,              
     2                  ' H2                        =',H2,              
     3                  ' ANGLE                     =',ANGLE,           
     4                  ' PHI                       =',PHISV,           
     5                  ' BETA                      =',BETA,            
     6                  ' HMIN (MINIMUM ALTITUDE)   =',HMIN,            
     7                  ' RANGE (OUTPUT)            =',DPRANG,          
     8                  ' RANGE (INPUT)             =',RANGSV,          
     9                  ' PERCENT DIFFERENCE        =',PRCNT            
Calley                      WRITE(IPR,'(A,I12,/)')                      
                      IF (IPR .GT. 0) WRITE(IPR,'(A,I12,/)')            
     1                  ' LENN                      =',LENN             
                      IF(ANGLE.GT.90. .AND.                             
     1                  ABS(H2-GNDALT).LT.TLRNCE)THEN                   
                          LNOGEO=.TRUE.                                 
                          PHI=PHISV                                     
                          ANGLE=REAL(DPANGL)                            
                          HMIN=REAL(DPHMIN)                             
                          BETA=REAL(DPBETA)                             
                          RANGE=REAL(DPRANG)                            
Calley                      WRITE(IPR,'(/2A,/)')'***** WARNING ***** ', 
                          IF (IPR .GT. 0) WRITE(IPR,                    
     +                                '(/2A,/)')'***** WARNING ***** ', 
     1                      ' PATH HITS THE EARTH.'                     
                      ELSEIF(ANGLE.LE.90. .AND.                         
     1                  ABS(H2-ZMAX).LT.TLRNCE)THEN                     
                          LNOGEO=.TRUE.                                 
                          PHI=PHISV                                     
                          ANGLE=REAL(DPANGL)                            
                          HMIN=REAL(DPHMIN)                             
                          BETA=REAL(DPBETA)                             
                          RANGE=REAL(DPRANG)                            
Calley                      WRITE(IPR,'(/2A,/)')'***** WARNING ***** ', 
                          IF (IPR .GT. 0) WRITE(IPR,                    
     +                                '(/2A,/)')'***** WARNING ***** ', 
     1                      ' PATH HITS THE UPPERMOST LAYER BOUNDARY.'  
                      ELSEIF(PRCNT.LE.1. .OR. H2.GE.ZMAX)THEN           
Calley                          WRITE(IPR,'(/(2A))')                    
                          IF (IPR .GT. 0) WRITE(IPR,'(/(2A))')          
     1                      ' PERCENT DIFFERENCE IS THAN 1 OR THE',     
     2                      ' PATH TERMINATES AT THE TOP OF THE',       
     3                      ' ATMOSPHERE; THESE PATH PARAMETERS',       
     4                      ' WILL BE USED WITHOUT CALLING GEOINP.'     
                          LNOGEO=.TRUE.                                 
                          PHI=PHISV                                     
                          ANGLE=REAL(DPANGL)                            
                          HMIN=REAL(DPHMIN)                             
                          BETA=REAL(DPBETA)                             
                          RANGE=REAL(DPRANG)                            
                      ELSE                                              
Calley                    WRITE(IPR,'(/2A,/2A,/)')' SINCE THE PERCENT', 
                          IF (IPR .GT. 0) WRITE(IPR,                    
     +                              '(/2A,/2A,/)')' SINCE THE PERCENT', 
     1                      ' DIFFERENCE EXCEEDS 1,',' "EQUIVALENT"',   
     2                      ' INTERNAL CASE 2C WILL BE USED.'           
                          LNOGEO=.FALSE.                                
                          RANGE=RANGSV                                  
                          BETA=0.                                       
                          HMIN=0.                                       
                          PHI=0.                                        
                          LENN=LENNSV                                   
                          ANGLE=0.                                      
                          ISLCT=PSLCT(ANGLE,RANGE,BETA)                 
                      ENDIF                                             
                  ENDIF                                                 
              ENDIF                                                     
          ENDIF                                                         
          LSAVE=LSMALL                                                  
          LSMALL=.FALSE.                                                
          IF(.NOT.LNOGEO)CALL GEOINP(H1,H2,ANGLE,RANGE,                 
     1      BETA,ITYPE,LENN,HMIN,PHI,IERROR,ISLCT,LOGLOS,H2MX)          
          LSMALL=LSAVE                                                  
C                                                                       
C         CHECK FOR IERROR                                              
          IF(IERROR.NE.0)THEN                                           
Calley           IF(ISSGEO.NE.1)WRITE(IPR,'(2A)')'0GEO:  IERROR NE 0:', 
              IF(ISSGEO.NE.1 .AND. IPR.GT.0) WRITE(IPR,                 
     +                                    '(2A)')'0GEO:  IERROR NE 0:', 
     1          ' END THIS CALCULATION AND SKIP TO THE NEXT CASE'       
              RETURN                                                    
          ELSEIF(LSMALL)THEN                                            
              RANGE=RANGSV                                              
              CALL SMGEO(ANGLE,BETA,PHI,DHALFR,DPRNG2,BENDNG,LENN,SMMIN)
              HMIN=REAL(SMMIN)                                          
          ENDIF                                                         
C                                                                       
C         CALCULATE THE PATH THROUGH THE ATMOSPHERE                     
          IAMT=1                                                        
          DPH1=DBLE(H1)                                                 
          DPH2=DBLE(H2)                                                 
          DPANGL=DBLE(ANGLE)                                            
          DPPHI=DBLE(PHI)                                               
          DPHMIN=DBLE(HMIN)                                             
          DPBETA=DBLE(BETA)                                             
          DPRANG=DBLE(RANGE)                                            
          DPBEND=DBLE(BENDNG)                                           
C                                                                       
C         IF ANGLE IS NEAR 90., HMIN IS NEAR H1, AND RANGSV EXCEEDS     
C         SMALL, THEN YOU HAVE A HALF-TANGENT PATH I.E. H1, H2 AND      
C         THE EARTH CENTER FORM A RIGHT TRIANGLE.  IN THIS CASE, DO     
C         NOT LET LENN EQUAL 1 BECAUSE THAT MAY MAKE HMIN IDENTICALLY   
C         EQUAL TO H1 PRODUCING PROBLEMS IN SUBROUTINE FILL.  THE       
C         CHECK ON THE VARIABLE SMALL SIMPLY POINTS OUT THE FACT        
C         SMALL PATHS ARE ALREADY DEALT WITH BY OTHER METHODS.          
          IF(ABS(ANGLE-90.).LT..001 .AND. ABS(HMIN-H1).LT.TLRNCE        
     1      .AND. RANGSV.GT.SMALL)LENN=0                                
          CALL DPRFPA(DPH1,DPH2,DPANGL,DPPHI,                           
     1      LENN,DPHMIN,IAMT,DPBETA,DPRANG,DPBEND)                      
          H1=REAL(DPH1)                                                 
          H2=REAL(DPH2)                                                 
          ANGLE=REAL(DPANGL)                                            
          PHI=REAL(DPPHI)                                               
          HMIN=REAL(DPHMIN)                                             
          IF(HMIN.LT.GNDALT-TLRNCE .AND. (LOGLOS .OR. ITYPE.EQ.3))THEN  
C             LOGLOS ONLY DEALS WITH ITYPE=2.                           
C             THEREFORE, THE CHECK FOR ITYPE=3.                         
Calley              WRITE(IPR,'(2(/A,F12.6),/(A))')'GNDALT =',GNDALT,   
              IF (IPR .GT. 0) WRITE(IPR,                                
     +                        '(2(/A,F12.6),/(A))')'GNDALT =',GNDALT,   
     1          'HMIN =',HMIN,'HMIN IS LESS THAN GNDALT.',              
     2          'THIS RUN ABORTED, NEXT RUN ATTEMPTED',' '              
              IERROR=1                                                  
              RETURN                                                    
          ENDIF                                                         
          BETA=REAL(DPBETA)                                             
          RANGE=REAL(DPRANG)                                            
          BENDNG=REAL(DPBEND)                                           
C                                                                       
C         LOAD LAYER AMOUNTS IN AMTP INTO WPATH FROM H1 TO H2           
          DO 120 I=1,IPATH                                              
              IF(H1.EQ.ZP(I))IH1=I                                      
              IF(H2.EQ.ZP(I))IH2=I                                      
  120     CONTINUE                                                      
          JMAX=(IPATH-1)+LENN*(MIN0(IH1,IH2)-1)                         
          IF(JMAX.GT.LAYTWO)STOP 'JMAX IS GREATER THAN PARAMETER LAYTWO'
          IKMAX=JMAX                                                    
C                                                                       
C         DETERMINE LJ(J), WHICH IS THE LAYER NUMBER L=LJ(J)            
C         IN AMTP(K,L), STARTING FROM HMIN, WHICH CORRESPONDS           
C         TO THE LAYER J IN WPATH(J+MSOFF,K), STARTING FROM             
C         H1 INITIAL DIRECTION OF PATH IS DOWN.                         
          L=IH1                                                         
          LDEL=-1                                                       
          IF(LENN.EQ.0 .AND. H1.LE.H2)THEN                              
C                                                                       
C             INITIAL DIRECTION OF PATH IS UP                           
              L=0                                                       
              LDEL=1                                                    
          ENDIF                                                         
          JTURN=0                                                       
          JMAXP1=JMAX+1                                                 
          DO 130 J=1,JMAXP1                                             
C                                                                       
C             TEST FOR REVERSING DIRECTION OF PATH FROM DOWN TO UP      
              IF(L.EQ.1 .AND. LDEL.EQ.-1)THEN                           
                  JTURN=J                                               
                  L=0                                                   
                  LDEL=1                                                
              ENDIF                                                     
              L=L+LDEL                                                  
              LJ(J)=L                                                   
  130     CONTINUE                                                      
C                                                                       
C         LOAD TBBY = THE DENSITY WEIGHTED MEAN TEMPERATURE             
C         AND WPATH = THE INCREMENTAL LAYER AMOUNTS.                    
          DO 140 K=1,KMAX                                               
              W(K)=0.                                                   
  140     CONTINUE                                                      
          DO 150 K=1,NSPECX                                             
              WX(K)=0.                                                  
  150     CONTINUE                                                      
          DO 180 J=1,JMAX                                               
              L=LJ(J)                                                   
              IF(L.GE.ML)L=ML                                           
              JOFF=MSOFF+J                                              
              TBBY(JOFF)=TPSUM(L)/RHOPSM(L)                             
              PATM(JOFF)=PPSUM(L)/(PZERO*RHOPSM(L))                     
              AMTP(9,L)=AMTP(5,L)*(296.-TBBY(JOFF))/36.                 
              WTEM=TBBY(JOFF)-273.15                                    
              AMTP(59,L)=.269*AMTP(8,L)*WTEM                            
              AMTP(60,L)=AMTP(59,L)*WTEM                                
              DO 160 K=1,KMAX                                           
                  WPATH(JOFF,K)=AMTP(K,L)                               
                  W(K)=W(K)+AMTP(K,L)                                   
  160         CONTINUE                                                  
              DO 170 K=1,NSPECX                                         
                  WPATHX(JOFF,K)=AMTPX(K,L)                             
                  WX(K)=WX(K)+AMTPX(K,L)                                
  170         CONTINUE                                                  
  180     CONTINUE                                                      
          IKMAX=JMAX                                                    
C                                                                       
C         INCLUDE BOUNDARY EMISSION IF CARD 1 CONTAINS A NON-ZERO       
C         TBOUND OR IF THE SLANT PATH INTERSECTS THE EARTH (TBOUND      
C         SET TO TEMPERATURE OF LOWEST BOUNDARY IN THIS CASE).          
          IF(TBOUND.EQ.0. .AND. H2.LE.ZM(1))TBOUND=TM(1)                
C                                                                       
C         PRINT LAYER PATH SEGMENT ABSORBER AMOUNTS                     
          IF(NPR.NE.2)THEN                                              
              ILO=1                                                     
              DO 190 IHI=2,ML-1                                         
                  IF(ZM(ILO).GE.H1)GOTO200                              
  190         ILO=IHI                                                   
              IHI=ML                                                    
  200         FAC=(H1-ZM(ILO))/(ZM(IHI)-ZM(ILO))                        
              TPH(1)=TM(ILO)+FAC*(TM(IHI)-TM(ILO))                      
C                                                                       
C             LDEL=0 => GOING DOWN;    LDEL=1 => GOING UP.              
              LDEL=1                                                    
              IF(LENN.EQ.1 .OR. H1.GT.H2)LDEL=0                         
              AHT(1)=H1                                                 
              DO 210 J=1,JMAX                                           
                  L=LJ(J)                                               
                  IF(J.EQ.JTURN)LDEL=1                                  
                  AHT(J+1)=ZP(L+LDEL)                                   
                  TPH(J+1)=TP(L+LDEL)                                   
  210         CONTINUE                                                  
Calley              IF(NPR.NE.1)THEN                                    
              IF(NPR.NE.1 .AND. IPR.GT.0)THEN                           
                  WRITE(IPR,'(////2A,//(3A))')'1  LAYER ABSORBER',      
     1              ' AMOUNTS FOR THE PATH SEGMENT ENDING AT Z',        
     2              '  J      Z        TBAR       HNO3         O3 UV ', 
     3              '    CNTMSLF1     CNTMSLF2      CNTMFRN ',          
     4              '       O2         WAT DROP     ICE PART',          
     5              '       (KM)        (K)     (ATM CM)     (ATM CM)', 
     6              '   (MOL CM-2)   (MOL CM-2)   (MOL CM-2)',          
     7              '   (MOL CM-2)   (KM GM/M3)   (KM GM/M3)'           
                  WRITE(IPR,'(/(I3,0PF10.4,F9.2,1P6E13.3,0P2F13.7))')   
     1              (J,AHT(J+1),TBBY(MSOFF+J),                          
     2              (WPATH(MSOFF+J,KMOL(K)),K=4,8),WPATH(MSOFF+J,58),   
     3              (WPATH(MSOFF+J,K),K=66,67),J=1,JMAX)                
                  WRITE(IPR,'(///A,T10,A,T19,A,T31,A,T47,A,T60,A,       
     1              T73,A,T86,A,T99,A,T110,A,T123,A,/T9,A,T109,A)')     
     2              '1 J','Z','N2 CONT','MOL SCAT','AER 1','AER 2',     
     3              'AER 3','AER 4','CIRRUS','WAT DROP','ICE PART',     
     4              '(KM)','(550 NM OPTICAL DEPTH)'                     
                  WRITE(IPR,'(/(I3,0PF10.4,9F13.7))')(J,AHT(J+1),       
     1              (WPATH(MSOFF+J,KMOL(K)),K=9,15),WPATH(MSOFF+J,66)   
     2              *EXTV(6),WPATH(MSOFF+J,67)*EXTV(7),J=1,JMAX)        
              ENDIF                                                     
          ENDIF                                                         
C                                                                       
C         PRINT PATH SUMMARY                                            
Calley          IF(ISSGEO.NE.1)THEN                                     
          IF(ISSGEO.NE.1 .AND. IPR.GT.0)THEN                            
              IF(NPR.LT.1)THEN                                          
                  WRITE(IPR,'(///3A)')                                  
     1              '1    J    Z       H2O       O3        CO2 ',       
     2              '      CO        CH4       N2O       O2  ',         
     3              '      NH3       NO        NO2       SO2'           
                  IF(MODTRN)THEN                                        
                      WRITE(IPR,'(8X,A,44X,A,45X,A)')                   
     1                  '(KM)    (          ','ATM CM',')'              
                  ELSE                                                  
                      WRITE(IPR,'(8X,A,44X,A,45X,A)')                   
     1                  '(KM)   (G/CM**2)  (','ATM CM',')'              
                  ENDIF                                                 
                  WRITE(IPR,'(/(I4,0PF10.4,1P11E10.2))')(J,AHT(J+1),    
     1              WPATH(MSOFF+J,17),WPATH(MSOFF+J,31),                
     2              WPATH(MSOFF+J,36),WPATH(MSOFF+J,44),                
     3              WPATH(MSOFF+J,46),WPATH(MSOFF+J,47),                
     4              WPATH(MSOFF+J,50),WPATH(MSOFF+J,52),                
     5              WPATH(MSOFF+J,54),WPATH(MSOFF+J,55),                
     6              WPATH(MSOFF+J,56),J=1,JMAX)                         
                  WRITE(IPR,'(///A14,13(1X,A8:),/(14X,13(1X,A8)))')     
     1              '1  J      Z   ',(CNAMEX(K),K=1,MIN(22,NSPECX))     
                  WRITE(IPR,'(8X,A,2(53X,A))')'(KM)    (','ATM CM',')'  
                  DO 220 J=1,JMAX                                       
                      JOFF=MSOFF+J                                      
                      WRITE(IPR,'(I4,F10.4,1P13E9.2:,/(14X,1P13E9.2:))')
     1                  J,AHT(J+1),(WPATHX(JOFF,K),K=1,MIN(22,NSPECX))  
 220              CONTINUE                                              
              ENDIF                                                     
              WRITE(IPR,'(//A,/8(/10X,A,F11.5,A),/10X,A,I11)')          
     1          '0SUMMARY OF THE GEOMETRY CALCULATION',                 
     2          'H1      =',H1,   ' KM', 'H2      =',H2,    ' KM',      
     3          'ANGLE   =',ANGLE,' DEG','RANGE   =',RANGE, ' KM',      
     4          'BETA    =',BETA, ' DEG','PHI     =',PHI,   ' DEG',     
     5          'HMIN    =',HMIN, ' KM', 'BENDING =',BENDNG,' DEG',     
     6          'LENN    =',LENN                                        
          ENDIF                                                         
      ENDIF                                                             
C                                                                       
C     CALCULATE THE AEROSOL WEIGHTED MEAN RELATIVE HUMIDITY (RH)        
      IF(W(7).GT.0. .AND. ICH1.LE.7)THEN                                
          W(15)=100.-EXP(W(15)/W(7))                                    
      ELSEIF(W(12).GT.0. .AND. ICH1.GT.7)THEN                           
          W(15)=100.-EXP(W(15)/W(12))                                   
      ELSE                                                              
          W(15)=0.                                                      
      ENDIF                                                             
C                                                                       
C     CONVERT MOLECULAR BAND WPATH TO CUMULATIVE                        
C     PATH AMOUNTS FOR LOWTRAN RUNS.                                    
      IF(.NOT.MODTRN)THEN                                               
          JOFFM1=MSOFF+1                                                
          DO 240 J=2,JMAX                                               
              JOFF=MSOFF+J                                              
              DO 230 K=17,57                                            
                  WPATH(JOFF,K)=WPATH(JOFFM1,K)+WPATH(JOFF,K)           
  230         CONTINUE                                                  
  240     JOFFM1=JOFF                                                   
      ENDIF                                                             
C                                                                       
C     PRINT TOTAL PATH AMOUNTS                                          
      IF(H1.LT.ZM(1))THEN                                               
Calley          WRITE(IPR,'(/2A,F8.4,A,/14X,A,F8.4,A)')' FATAL ERROR: ',
          IF (IPR .GT. 0) WRITE(IPR,                                    
     +      '(/2A,F8.4,A,/14X,A,F8.4,A)')' FATAL ERROR: ',              
     1      ' INITIAL ALTITUDE [H1 =',H1,' KM] IS BELOW THE',           
     2      ' BOTTOM OF THE ATMOSPHERE [ZM(1) =',ZM(1),' KM].'          
          IERROR=1                                                      
          RETURN                                                        
      ELSEIF(H2.LT.ZM(1) .AND. ITYPE.NE.1)THEN                          
Calley          WRITE(IPR,'(/2A,F8.4,A,/14X,A,F8.4,A)')' FATAL ERROR: ',
          IF (IPR .GT. 0) WRITE(IPR,                                    
     +      '(/2A,F8.4,A,/14X,A,F8.4,A)')' FATAL ERROR: ',              
     1      ' FINAL OR TANGENT ALTITUDE [H2 =',H2,' KM] IS BELOW',      
     2      ' THE BOTTOM OF THE ATMOSPHERE [ZM(1) =',ZM(1),' KM].'      
          IERROR=1                                                      
          RETURN                                                        
      ENDIF                                                             
      IF(ISSGEO.EQ.1)RETURN                                             
Calley      WRITE(IPR,'(////A,//15X,2A,/15X,A,//10X,1P7E12.4,           
      IF (IPR .GT. 0) WRITE(IPR,'(////A,//15X,2A,/15X,A,//10X,1P7E12.4, 
     1  /(//15X,2A:,/73X,A,//10X,0P7F12.6,F12.2))')                     
     2  '1  EQUIVALENT SEA LEVEL TOTAL ABSORBER AMOUNTS',               
     3  '  HNO3      O3 UV      CNTMSLF1    CNTMSLF2    CNTMFRN  ',     
     4  '   N2 CONT     MOL SCAT',                                      
     5  '(ATM CM)   (ATM CM)   (MOL CM-2)  (MOL CM-2)  (MOL CM-2)',     
     6  (W(KMOL(K)),K=4,10),' AER 1       AER 2       AER 3      ',     
     7  ' AER 4      CIRRUS     WAT DROP    ICE PART   MEAN AER RH',    
     8  '(KM GM/M3)  (KM GM/M3)    (PRCNT)',                            
     9  (W(KMOL(K)),K=11,15),W(66),W(67),W(KMOL(16)),' H2O     ',       
     &  '    O3          CO2         CO          CH4         N2O'       
      IF(MODTRN)THEN                                                    
Calley          WRITE(IPR,'(13X,A,2(35X,A))')'(','ATM CM',')'           
          IF (IPR .GT. 0) WRITE(IPR,'(13X,A,2(35X,A))')'(','ATM CM',')' 
      ELSE                                                              
Calley      WRITE(IPR,'(13X,A,2(22X,A))')'(G/CM**2)     (','ATM CM',')' 
          IF (IPR .GT. 0) WRITE(IPR,                                    
     +                '(13X,A,2(22X,A))')'(G/CM**2)     (','ATM CM',')' 
      ENDIF                                                             
Calley      WRITE(IPR,'((/10X,1P6E12.4,//2(/15X,A),2(22X,A)))')         
      IF (IPR.GT.0) WRITE(IPR,'((/10X,1P6E12.4,//2(/15X,A),2(22X,A)))') 
     1  W(17),W(31),W(36),W(44),W(46),W(47),                            
     2  ' O2          NH3         NO          NO2         SO2',         
     3  '(','ATM CM',')',W(50),W(52),W(54),W(55),W(56)                  
      IHI=7                                                             
  250 IF(NSPECX.GT.IHI)THEN                                             
Calley       WRITE(IPR,'(//8X,7(4X,A),/13X,A,2(36X,A),//10X,1P7E12.4)') 
          IF (IPR .GT. 0) WRITE(IPR,                                    
     +                 '(//8X,7(4X,A),/13X,A,2(36X,A),//10X,1P7E12.4)') 
     1      (CNAMEX(I),I=IHI-6,IHI),'(','ATM CM',')',(WX(I),I=IHI-6,IHI)
          IHI=IHI+7                                                     
          GOTO250                                                       
      ENDIF                                                             
Calley      WRITE(IPR,'(//8X,7(4X,A))')(CNAMEX(I),I=IHI-6,NSPECX)       
      IF (IPR .GT. 0) WRITE(IPR,                                        
     +                '(//8X,7(4X,A))')(CNAMEX(I),I=IHI-6,NSPECX)       
Calley      WRITE(IPR,'(13X,A,2(36X,A),//10X,1P7E12.4)')                
      IF (IPR .GT. 0) WRITE(IPR,'(13X,A,2(36X,A),//10X,1P7E12.4)')      
     1  '(','ATM CM',')',(WX(I),I=IHI-6,NSPECX)                         
      RETURN                                                            
      END                                                               
      SUBROUTINE GEOINP(SPH1,SPH2,SPANGL,SPRANG,SPBETA,                 
     1  ITYPE,LENN,SPHMIN,SPPHI,IERROR,ISLCT,LOGLOS,SPH2MX)             
C                                                                       
C     THIS ROUTINE INTERPRETS THE ALLOWABLE COMBINATIONS OF INPUT PATH  
C     PARAMETERS INTO THE STANDARD SET:  H1, H2, ANGLE, PHI, HMIN AND   
C     LENN.  THE ALLOWABLE COMBINATIONS OF INPUT PARAMETERS ARE         
C                                                                       
C          FOR ITYPE = 2  (SLANT PATH H1 TO H2)                         
C              A.  H1, H2 AND ANGLE;                                    
C              B.  H1, ANGLE AND RANGE;                                 
C              C.  H1, H2 AND RANGE; OR                                 
C              D.  H1, H2, AND BETA.                                    
C                                                                       
C          FOR ITYPE = 3  (SLANT PATH H1 TO SPACE/GROUND)               
C              A. H1 AND ANGLE; OR                                      
C              B. H1 AND HMIN (INPUT AS H2).                            
C                                                                       
C     THIS ROUTINE ALSO DETECTS BAD INPUT (IMPOSSIBLE GEOMETRY) AND     
C     ITYPE = 2 CASES WHICH INTERSECT THE EARTH, AND RETURNS THESE      
C     CASES WITH ERROR FLAGS.                                           
C                                                                       
C     DECLARE ARGUMENTS:                                                
C       SPH1     ALTITUDE OF OBSERVER [KM].                             
C       SPH2     FINAL OR TANGENT ALTITUDE [KM].                        
C       SPANGL   PATH ZENITH ANGLE FROM OBSERVER TOWARDS SPH2 [DEG].    
C       SPRANG   SLANT PATH RANGE [KM].                                 
C       SPBETA   SLANT PATH EARTH CENTER ANGLE [DEG].                   
C       ITYPE    FLAG FOR GEOMETRY TYPE.                                
C       LENN     LENGTH FLAG USED FOR CASE 2A WHEN H2<H1 AND ANGLE>90   
C                (=0 FOR SHORT PATH, =1 FOR PATH THROUGH TANGENT POINT).
C       SPHMIN   SLANT PATH MINIMUM ALTITUDE [KM].                      
C       SPPHI    PATH ZENITH ANGLE FROM FINAL ALTITUDE TOWARDS          
C                OBSERVER [DEG].                                        
C       IERROR   ERROR FLAG (=0 FOR ACCEPTABLE GEOMETRY INPUTS).        
C       ISLCT    ????                                                   
C       LOGLOS   LOGICAL FLAG(.TRUE. FOR ITYPE=2 WITH NO SUN).          
C       SPH2MX   VALUE OF H2 PRIOR TO CALLING ROUTINE REDUCE.           
      REAL SPH1,SPH2,SPANGL,SPRANG,SPBETA,SPHMIN,SPPHI,SPH2MX           
      INTEGER ITYPE,LENN,IERROR,ISLCT                                   
      LOGICAL LOGLOS                                                    
C                                                                       
C     LIST COMMONS:                                                     
C                                                                       
C     FILE UNIT NUMBERS                                                 
C       IRD      MODTRAN INPUT FILE, tape5, UNIT NUMBER (1).            
C       IPR      MODTRAN STANDARD OUTPUT FILE, tape6, UNIT NUMBER (2).  
C       IPU      MODTRAN SPECTRAL DATA FILE, tape7, UNIT NUMBER (7).    
C       NPR      PRINTOUT LEVEL SWITCH (1=small,0=normal,-1=large).     
C       IPR1     MODTRAN FLUX OUTPUT FILE, tape8, UNIT NUMBER (8).      
C       ISCRCH   MULTIPLE SCATTERING SCRATCH FILE UNIT NUMBER (10).     
C       ITB      MOLECULAR BAND MODEL PARAMETER FILE UNIT NUMBER (9).   
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                           
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                       
      REAL RE,ZMAX                                                      
      INTEGER IPATH                                                     
      COMMON/PARMTR/RE,ZMAX,IPATH                                       
      REAL GNDALT                                                       
      COMMON/GRAUND/GNDALT                                              
C                                                                       
C     DECLARE LOCAL VARIABLES:                                          
      DOUBLE PRECISION H1,H2,ANGLE,RANGE,BETA,HMIN,PHI,H2ST,STORE       
C                                                                       
C     DEFINE DATA                                                       
C       ITER    COUNTER USED IN CALL TO DPFNMN.                         
      INTEGER ITER                                                      
      DATA ITER/0/                                                      
C                                                                       
C     DEFINE DOUBLE PRECISION GEOMETRY PARAMETERS:                      
      H1=DBLE(SPH1)                                                     
      H2=DBLE(SPH2)                                                     
      ANGLE=DBLE(SPANGL)                                                
      RANGE=DBLE(SPRANG)                                                
      BETA=DBLE(SPBETA)                                                 
      HMIN=DBLE(SPHMIN)                                                 
      PHI=DBLE(SPPHI)                                                   
C                                                                       
C     BRANCH BASED ON PATH TYPE.                                        
      IF(ITYPE.EQ.3)THEN                                                
C                                                                       
C         SLANT PATH TO SPACE.                                          
          IF(H2.EQ.0.)THEN                                              
C                                                                       
C             CASE 3A:  H1 AND ANGLE.                                   
Calley              IF(NPR.LT.1)WRITE(IPR,'(//A)')                      
              IF(NPR.LT.1 .AND. IPR.GT.0) WRITE(IPR,'(//A)')            
     1          ' CASE 3A:  GIVEN H1,H2=SPACE,ANGLE'                    
              H2=DBLE(ZMAX)                                             
              IF(ANGLE.GT.90.)LENN=1                                    
              CALL DPFNMN(H1,ANGLE,H2,LENN,ITER,HMIN,PHI,IERROR)        
          ELSE                                                          
C                                                                       
C             CASE 3B:  H1 AND HMIN                                     
Calley              IF(NPR.LT.1)WRITE(IPR,'(//A)')                      
              IF(NPR.LT.1 .AND. IPR.GT.0) WRITE(IPR,'(//A)')            
     1          ' CASE 3B:  GIVEN H1, HMIN, H2=SPACE'                   
              HMIN=H2                                                   
              H2=DBLE(ZMAX)                                             
              IF(H1.LT.HMIN)THEN                                        
Calley                  WRITE(IPR,'(/2A,//10X,2(A,F13.6))')' GEOINP,',  
                  IF (IPR .GT. 0) WRITE(IPR,                            
     +                            '(/2A,//10X,2(A,F13.6))')' GEOINP,',  
     1              ' CASE 3B (H1,HMIN,SPACE):  ERROR IN INPUT DATA',   
     2              'H1 =',H1,'    IS LESS THAN HMIN =',HMIN            
                  IERROR=1                                              
              ELSE                                                      
                  STORE=90.D0                                           
                  CALL DPFNMN(HMIN,STORE,H1,LENN,ITER,HMIN,ANGLE,IERROR)
                  STORE=90.D0                                           
                  CALL DPFNMN(HMIN,STORE,H2,LENN,ITER,HMIN,PHI,IERROR)  
                  LENN=1                                                
                  IF(HMIN.EQ.H1)LENN=0                                  
              ENDIF                                                     
          ENDIF                                                         
      ELSEIF(ITYPE.EQ.2)THEN                                            
C                                                                       
C         SLANT PATH TO BETWEEN ALTITUDES.                              
          IF((LOGLOS .AND. ISLCT.EQ.21) .OR.                            
     1      (.NOT.LOGLOS .AND. RANGE.LE.0. .AND. BETA.LE.0.))THEN       
C                                                                       
C             CASE 2A:  H1, H2, ANGLE                                   
Calley              IF(NPR.LT.1)WRITE(IPR,'(//A)')                      
              IF(NPR.LT.1 .AND. IPR.GT.0) WRITE(IPR,'(//A)')            
     1          ' CASE 2A:  GIVEN H1, H2 AND ANGLE'                     
              IF(H1.GE.H2 .AND. ANGLE.LE.90.)THEN                       
Calley               WRITE(IPR,'(/2A,//(10X,2(A,F13.6),A))')' GEOINP,', 
                  IF (IPR .GT. 0) WRITE(IPR,                            
     +                         '(/2A,//(10X,2(A,F13.6),A))')' GEOINP,', 
     1              ' CASE 2A (H1,H2,ANGLE):  ERROR IN INPUT DATA',     
     2              'H1 (=',H1,'KM) IS GREATER THAN OR EQUAL TO H2 (= ',
     3              H2,'KM)','AND ANGLE (=',ANGLE,                      
     4              'DEG) DOES NOT EXCEED 90DEG.'                       
                  IERROR=1                                              
              ELSEIF(H1.LE.GNDALT .AND. ANGLE.GT.90.)THEN               
Calley                  WRITE(IPR,'(/2A)')                              
                  IF (IPR .GT. 0) WRITE(IPR,'(/2A)')                    
     1              ' GEOINP, ITYPE = 2: SLANT PATH INTERSECTS',        
     1              ' THE EARTH OR GNDALT, AND CANNOT REACH H2.'        
                  IERROR=1                                              
              ELSE                                                      
Calley                  IF(H2.LT.H1 .AND. ANGLE.GT.90. .AND. NPR.LT.1)  
                  IF(H2.LT.H1 .AND. ANGLE.GT.90.0 .AND. NPR.LT.1        
     +                        .AND. IPR.GT.0)                           
     1              WRITE(IPR,'(//3A,I3)')' EITHER A SHORT PATH',       
     2              ' (LENN=0) OR A LONG PATH THROUGH A TANGENT',       
     3              ' HEIGHT (LENN=1) IS POSSIBLE: LENN = ',LENN        
                  H2ST=H2                                               
                  CALL DPFNMN(H1,ANGLE,H2,LENN,ITER,HMIN,PHI,IERROR)    
                  IF(H2.NE.H2ST)THEN                                    
Calley                      WRITE(IPR,'(/2A)')                          
                      IF (IPR .GT. 0) WRITE(IPR,'(/2A)')                
     1                  ' GEOINP, ITYPE = 2: SLANT PATH INTERSECTS',    
     2                  ' THE EARTH OR GNDALT, AND CANNOT REACH H2.'    
                      IERROR=1                                          
                  ENDIF                                                 
              ENDIF                                                     
          ELSEIF((LOGLOS .AND. ISLCT.EQ.24) .OR.                        
     1      (.NOT.LOGLOS .AND. BETA.GT.0.))THEN                         
C                                                                       
C             CASE 2D:  H1, H2, BETA                                    
              CALL FDBETA(H1,H2,BETA,ANGLE,PHI,LENN,HMIN,IERROR)        
          ELSEIF((LOGLOS .AND. ISLCT.EQ.22) .OR.                        
     1      (.NOT.LOGLOS .AND. ANGLE.GT.0.))THEN                        
C                                                                       
C             CASE 2B:  H1, ANGLE, RANGE                                
              CALL NEWH2(H1,H2,ANGLE,RANGE,BETA,LENN,HMIN,PHI)          
              IF(ANGLE.GT.90. .AND.PHI.GT.90.)LENN=1                    
              CALL DPFNMN(H1,ANGLE,H2,LENN,ITER,HMIN,PHI,IERROR)        
          ELSE                                                          
C                                                                       
C             CASE 2C:  H1, H2, RANGE                                   
              CALL FTRANG(H1,H2,RANGE,ANGLE,PHI,LENN,HMIN,IERROR)       
          ENDIF                                                         
      ELSE                                                              
Calley          WRITE(IPR,'(/2A,I10)')' GEOINP:  ERROR IN INPUT DATA,', 
          IF (IPR .GT. 0) WRITE(IPR,                                    
     +                    '(/2A,I10)')' GEOINP:  ERROR IN INPUT DATA,', 
     1      ' ITYPE NOT EQUAL TO 2 OR 3.   ITYPE =',ITYPE               
          IERROR=1                                                      
      ENDIF                                                             
C                                                                       
C     TEST IERROR AND RECHECK LENN                                      
      SPH2MX=REAL(H2)                                                   
      IF(IERROR.EQ.0)THEN                                               
          LENN=0                                                        
          IF(ABS(HMIN-MIN(H1,H2)).GT..00005)LENN=1                      
C                                                                       
C         REDUCE PATH END POINTS ABOVE ZMAX TO ZMAX                     
          IF(HMIN.GE.ZMAX)THEN                                          
Calley              WRITE(IPR,'(/2A,//4(4X,A,F11.5))')                  
              IF (IPR .GT. 0) WRITE(IPR,'(/2A,//4(4X,A,F11.5))')        
     1          ' GEOINP:  THE ENTIRE PATH LIES ABOVE ZMAX,',           
     2          ' THE TOP OF THE ATMOSPHERIC PROFILE',                  
     3          'ZMAX =',ZMAX,'H1 =',H1,'H2 =',H2,'HMIN =',HMIN         
              IERROR=1                                                  
          ELSE                                                          
              IF(H1.GT.ZMAX .OR. H2.GT.ZMAX)CALL REDUCE(H1,H2,ANGLE,PHI)
Calley              IF(NPR.LT.1)WRITE(IPR,'(//A,/5(/10X,A,F11.5,A),     
              IF(NPR.LT.1 .AND. IPR.GT.0) WRITE(IPR,                    
     +                                    '(//A,/5(/10X,A,F11.5,A),     
     1          /10X,A,I11)')' SLANT PATH PARAMETERS IN STANDARD FORM', 
     2          'H1      =',H1   ,' KM' ,'H2      =',H2 ,' KM' ,        
     3          'ANGLE   =',ANGLE,' DEG','PHI     =',PHI,' DEG',        
     4          'HMIN    =',HMIN ,' KM' ,'LENN    =',LENN               
          ENDIF                                                         
      ENDIF                                                             
C                                                                       
C     DEFINE SINGLE PRECISION VALUES AND RETURN                         
      SPH1=REAL(H1)                                                     
      SPH2=REAL(H2)                                                     
      SPANGL=REAL(ANGLE)                                                
      SPRANG=REAL(RANGE)                                                
      SPBETA=REAL(BETA)                                                 
      SPHMIN=REAL(HMIN)                                                 
      SPPHI=REAL(PHI)                                                   
      RETURN                                                            
      END                                                               
      FUNCTION   GMRAIN(FREQ,T,RATE)                                    
C                                                                       
C        COMPUTES ATTENUATION OF CONDENSED WATER IN FORM OF RAIN        
C                                                                       
C        FREQ = WAVENUMBER (CM-1)                                       
C        T    = TEMPERATURE (DEGREES KELVIN)                            
C        RATE = PRECIPITATION RATE (MM/HR)                              
C       WVLTH = WAVELENGTH IN CM                                        
C                                                                       
C     TABLES ATTAB AND FACTOR CALCULATED FROM FULL MIE THEORY           
C     UTILIZING MARSHALL-PALMER SIZE DISTRIBUTION WITH RAYS INDEX       
C     OF REFRACTION                                                     
C                                                                       
C     ATTAB IS ATTENUATION DATA TABLE IN NEPERS FOR 20 DEG CELSIUS      
C     WITH RADIATION FIELD REMOVED                                      
C                                                                       
C     WVNTBL IS WAVENUMBER TABLE FOR WAVENUMBERS USED IN TABLE ATTAB    
C     TMPTAB IS INTERPOLATION DATA TABLE FOR TEMPERATURES IN DEG KELVIN 
C                                                                       
C     TLMDA IS INTERPOLATION DATA TABLE FOR WAVELENGTH IN CM            
C     TFREQ IS INTERPOLATION DATA TABLE FOR WAVENUMBER IN CM-1          
C                                                                       
C     RATTAB IS RAIN RATE TABLE IN MM/HR                                
C                                                                       
C     FACTOR IS TABLE OF TEMPERATURE CORRECTION FACTORS FOR             
C     TABLE ATTAB FOR REPRESENTATIVE RAINS WITHOUT RADIATION FIELD      
C                                                                       
C                                                                       
C     AITKEN INTERPOLATION SCHEME WRITTEN BY                            
C           E.T. FLORANCE O.N.R. PASADENA CA.                           
C                                                                       
C                                                                       
      DIMENSION ATTAB1(35),ATTAB2(35),ATTAB3(35),ATTAB4(35),ATTAB5(35)  
      DIMENSION ATTAB6(35),ATTAB7(35),ATTAB8(35),ATTAB9(35)             
      DIMENSION ATTAB(35,9),WVLTAB(27),RATTAB(9),FACTOR(5,8,5)          
      DIMENSION X(4),Y(4),ATTN(4),RATES(4)                              
CCC   DIMENSION X(3),Y(3),ATTN(3),RATES(3)                              
      DIMENSION TMPTAB(5),TLMDA(6),FACIT(5),TFACT(5)                    
      DIMENSION TFREQ(8),WVNTBL(35)                                     
      DIMENSION FACEQ1(5,8),FACEQ2(5,8),FACEQ3(5,8),FACEQ4(5,8)         
      DIMENSION FACEQ5(5,8)                                             
      EQUIVALENCE (ATTAB1(1),ATTAB(1,1)),(ATTAB2(1),ATTAB(1,2))         
      EQUIVALENCE (ATTAB3(1),ATTAB(1,3)),(ATTAB4(1),ATTAB(1,4))         
      EQUIVALENCE (ATTAB5(1),ATTAB(1,5)),(ATTAB6(1),ATTAB(1,6))         
      EQUIVALENCE (ATTAB7(1),ATTAB(1,7)),(ATTAB8(1),ATTAB(1,8))         
      EQUIVALENCE (ATTAB9(1),ATTAB(1,9))                                
      EQUIVALENCE (FACEQ1(1,1),FACTOR(1,1,1))                           
      EQUIVALENCE (FACEQ2(1,1),FACTOR(1,1,2))                           
      EQUIVALENCE (FACEQ3(1,1),FACTOR(1,1,3))                           
      EQUIVALENCE (FACEQ4(1,1),FACTOR(1,1,4))                           
      EQUIVALENCE (FACEQ5(1,1),FACTOR(1,1,5))                           
      DATA WVLTAB/.03,.033,.0375,.043,.05,.06,.075,.1,.15,.2,.25,.3,.5, 
     1.8,1.,2.,3.,4.,5.,5.5,6.,6.5,7.,8.,9.,10.,15./                    
      DATA WVNTBL/ 0.0000,                                              
     1    .0667,.1000,.1111,.1250,.1429,.1538,                          
     2  .1667,.1818,.2000,.2500,.3333,.5000,1.0000,                     
     3 1.2500,2.0000,3.3333,4.0000,5.0000,6.6667,10.0000,               
     4 13.3333,16.6667,20.0000,23.2558,26.6667,30.3030,33.3333,         
     5 50.0,80.0,120.0,180.0,250.0,300.0,350.0/                         
      DATA RATTAB /.25,1.25,2.5,5.,12.5,25.,50.,100.,150./              
      DATA TLMDA/.03,.1,.5,1.25,3.2,10./                                
      DATA TFREQ/0.0,0.1,0.3125,0.8,2.0,10.0,33.3333,350.0/             
      DATA TMPTAB/273.15,283.15,293.15,303.15,313.15/                   
      DATA ATTAB1/                                                      
     1 1.272E+00,1.332E+00,1.361E+00,1.368E+00,1.393E+00,1.421E+00,     
     2 1.439E+00,1.466E+00,1.499E+00,1.541E+00,1.682E+00,1.951E+00,     
     3 2.571E+00,3.575E+00,3.808E+00,4.199E+00,3.665E+00,3.161E+00,     
     4 2.462E+00,1.632E+00,8.203E-01,4.747E-01,3.052E-01,2.113E-01,     
     5 1.551E-01,1.168E-01,8.958E-02,7.338E-02,3.174E-02,1.178E-02,     
     6 5.016E-03,2.116E-03,1.123E-03,8.113E-04,6.260E-04/               
      DATA ATTAB2/                                                      
     1 4.915E+00,5.257E+00,5.518E+00,5.632E+00,5.807E+00,6.069E+00,     
     2 6.224E+00,6.452E+00,6.756E+00,7.132E+00,8.453E+00,1.132E+01,     
     3 1.685E+01,2.177E+01,2.246E+01,2.156E+01,1.470E+01,1.167E+01,     
     4 8.333E+00,5.089E+00,2.356E+00,1.320E+00,8.315E-01,5.705E-01,     
     5 4.151E-01,3.119E-01,2.385E-01,1.955E-01,8.373E-02,3.138E-02,     
     6 1.351E-02,5.789E-03,3.090E-03,2.236E-03,1.725E-03/               
      DATA ATTAB3/                                                      
     1 8.798E+00,9.586E+00,1.023E+01,1.049E+01,1.093E+01,1.159E+01,     
     2 1.205E+01,1.263E+01,1.343E+01,1.450E+01,1.832E+01,2.627E+01,     
     3 3.904E+01,4.664E+01,4.702E+01,4.152E+01,2.542E+01,1.959E+01,     
     4 1.363E+01,8.087E+00,3.660E+00,2.028E+00,1.274E+00,8.710E-01,     
     5 6.340E-01,4.757E-01,3.634E-01,2.971E-01,1.275E-01,4.795E-02,     
     6 2.072E-02,8.936E-03,4.780E-03,3.460E-03,2.670E-03/               
      DATA ATTAB4/                                                      
     1 1.575E+01,1.750E+01,1.914E+01,1.991E+01,2.108E+01,2.276E+01,     
     2 2.399E+01,2.561E+01,2.785E+01,3.097E+01,4.204E+01,6.334E+01,     
     3 8.971E+01,9.853E+01,9.609E+01,7.718E+01,4.290E+01,3.220E+01,     
     4 2.188E+01,1.271E+01,5.641E+00,3.110E+00,1.947E+00,1.327E+00,     
     5 9.657E-01,7.242E-01,5.539E-01,4.528E-01,1.942E-01,7.335E-02,     
     6 3.181E-02,1.380E-02,7.394E-03,5.354E-03,4.132E-03/               
      DATA ATTAB5/                                                      
     1 3.400E+01,3.927E+01,4.523E+01,4.796E+01,5.207E+01,5.886E+01,     
     2 6.383E+01,7.060E+01,8.005E+01,9.360E+01,1.381E+02,2.069E+02,     
     3 2.620E+02,2.534E+02,2.366E+02,1.673E+02,8.285E+01,6.059E+01,     
     4 4.013E+01,2.280E+01,9.939E+00,5.439E+00,3.400E+00,2.315E+00,     
     5 1.685E+00,1.263E+00,9.664E-01,7.914E-01,3.397E-01,1.288E-01,     
     6 5.611E-02,2.450E-02,1.316E-02,9.536E-03,7.360E-03/               
      DATA ATTAB6/                                                      
     1 6.087E+01,7.347E+01,8.886E+01,9.653E+01,1.081E+02,1.283E+02,     
     2 1.435E+02,1.649E+02,1.947E+02,2.346E+02,3.543E+02,4.991E+02,     
     3 5.705E+02,5.048E+02,4.510E+02,2.900E+02,1.335E+02,9.607E+01,     
     4 6.269E+01,3.520E+01,1.519E+01,8.295E+00,5.182E+00,3.529E+00,     
     5 2.569E+00,1.927E+00,1.474E+00,1.208E+00,5.191E-01,1.975E-01,     
     6 8.627E-02,3.784E-02,2.037E-02,1.476E-02,1.139E-02/               
      DATA ATTAB7/                                                      
     1 1.090E+02,1.396E+02,1.811E+02,2.029E+02,2.396E+02,3.039E+02,     
     2 3.536E+02,4.189E+02,5.081E+02,6.217E+02,9.038E+02,1.165E+03,     
     3 1.212E+03,9.731E+02,8.330E+02,4.901E+02,2.123E+02,1.507E+02,     
     4 9.718E+01,5.408E+01,2.316E+01,1.264E+01,7.896E+00,5.377E+00,     
     5 3.915E+00,2.939E+00,2.249E+00,1.844E+00,7.940E-01,3.029E-01,     
     6 1.327E-01,5.846E-02,3.151E-02,2.284E-02,1.763E-02/               
      DATA ATTAB8/                                                      
     1 1.950E+02,2.703E+02,3.904E+02,4.614E+02,5.825E+02,7.909E+02,     
     2 9.475E+02,1.142E+03,1.380E+03,1.656E+03,2.237E+03,2.610E+03,     
     3 2.500E+03,1.820E+03,1.491E+03,8.103E+02,3.336E+02,2.344E+02,     
     4 1.495E+02,8.273E+01,3.524E+01,1.922E+01,1.203E+01,8.182E+00,     
     5 5.961E+00,4.477E+00,3.429E+00,2.812E+00,1.216E+00,4.651E-01,     
     6 2.043E-01,9.033E-02,4.874E-02,3.534E-02,2.728E-02/               
      DATA ATTAB9/                                                      
     1 2.742E+02,4.012E+02,6.353E+02,7.829E+02,1.027E+03,1.439E+03,     
     2 1.725E+03,2.071E+03,2.475E+03,2.909E+03,3.738E+03,4.104E+03,     
     3 3.776E+03,2.589E+03,2.070E+03,1.078E+03,4.326E+02,3.023E+02,     
     4 1.918E+02,1.059E+02,4.499E+01,2.454E+01,1.539E+01,1.045E+01,     
     5 7.615E+00,5.722E+00,4.384E+00,3.596E+00,1.561E+00,5.978E-01,     
     6 2.630E-01,1.165E-01,6.292E-02,4.562E-02,3.522E-02/               
      DATA FACEQ1/                                                      
     1 1.606,1.252,1.000, .816, .680,1.603,1.246,1.000, .817, .684,     
     2 1.444,1.207,1.000, .838, .694,1.016, .985,1.000,1.034,1.058,     
     3  .950, .976,1.000,1.034,1.068, .922, .956,1.000,1.044,1.090,     
     4  .932, .966,1.000,1.034,1.068, .957, .978,1.000,1.022,1.044/     
      DATA FACEQ2/                                                      
     1 1.606,1.252,1.000, .816, .680,1.612,1.256,1.000, .817, .684,     
     2 1.193,1.101,1.000, .889, .769, .885, .927,1.000,1.086,1.175,     
     3  .941, .976,1.000,1.024,1.047, .932, .966,1.000,1.034,1.079,     
     4  .932, .966,1.000,1.034,1.068, .957, .978,1.000,1.022,1.044/     
      DATA FACEQ3/                                                      
     1 1.606,1.252,1.000, .816, .680,1.621,1.256,1.000, .817, .673,     
     2  .969, .995,1.000, .982, .940, .895, .937,1.000,1.075,1.143,     
     3  .950, .976,1.000,1.024,1.036, .932, .966,1.000,1.034,1.079,     
     4  .932, .966,1.000,1.034,1.068, .957, .978,1.000,1.022,1.044/     
      DATA FACEQ4/                                                      
     1 1.606,1.252,1.000, .816, .680,1.631,1.265,1.000, .807, .662,     
     2  .848, .927,1.000,1.044,1.079, .922, .956,1.000,1.055,1.111,     
     3  .950, .976,1.000,1.013,1.036, .932, .966,1.000,1.034,1.079,     
     4  .932, .966,1.000,1.034,1.068, .957, .978,1.000,1.022,1.044/     
      DATA FACEQ5/                                                      
     1 1.606,1.252,1.000, .816, .680,1.603,1.265,1.000, .807, .662,     
     2  .820, .918,1.000,1.075,1.132, .941, .966,1.000,1.034,1.079,     
     3  .960, .976,1.000,1.013,1.036, .932, .966,1.000,1.034,1.079,     
     4  .932, .966,1.000,1.034,1.068, .957, .978,1.000,1.022,1.044/     
      DATA RATLIM /.05/                                                 
C         GIVE ZERO ATTN IF RATE FALLS BELOW LIMIT                      
      IF(RATE.GT.RATLIM) GO TO 12                                       
      GMRAIN = 0.                                                       
      RETURN                                                            
12    CONTINUE                                                          
CC 12 WVLTH =  1.0  /FREQ                                               
CCC   JMAX=3                                                            
      JMAX=4                                                            
CCC   IF(WVLTH.GT.WVLTAB(1)) GO TO      14                              
CCC   ILOW=0                                                            
CCC   JMAX=2                                                            
CCC   GO TO 18                                                          
CCC   THIS DO LOOP IS 2 LESS THAN NO. OF WVLTAB INPUT                   
CCC14 DO 15 I=2,25                                                      
14    DO 15 I=3,33                                                      
CCC   IF(WVLTH.LT.(.5*(WVLTAB(I)+WVLTAB(I+1)))) GO TO 16                
      IF(FREQ.LT.WVNTBL(I)) GO TO 16                                    
   15 CONTINUE                                                          
CCC   SET ILOW EQUAL TO 1 LESS THAN DO MAX                              
CCC   ILOW=24                                                           
      I=34                                                              
CCC   GO TO 18                                                          
CCC16 ILOW = I-2                                                        
16    ILOW=I-3                                                          
   18 CONTINUE                                                          
CCC   DO 190 I=2,7                                                      
      DO 190 K=3,7                                                      
CCC   IF (RATE. LT.(.5*(RATTAB(I)+RATTAB(I+1))))GO TO 195               
      IF(RATE.LT.RATTAB(K)) GO TO 195                                   
  190 CONTINUE                                                          
CCC   KMIN=6                                                            
      K=8                                                               
CCC   GO TO 198                                                         
CC195 KMIN=I-2                                                          
195   KMIN=K-3                                                          
  198 CONTINUE                                                          
      DO 20 J=1,JMAX                                                    
      IJ = ILOW + J                                                     
      X(J) =       WVNTBL(IJ)                                           
   20 CONTINUE                                                          
C        INTERPOLATE                                                    
CCC   Z = -ALOG(FREQ)                                                   
CCC   DO 25 K=1,3                                                       
      DO 25 K=1,4                                                       
      KJ=KMIN+K                                                         
      RATES(K)=RATTAB(KJ)                                               
      DO 24 J=1,JMAX                                                    
      IJ = ILOW + J                                                     
      Y(J)= ALOG(ATTAB(IJ,KJ))                                          
   24 CONTINUE                                                          
      ATTN(K)=EXP(AITK(X,Y,FREQ,JMAX) )                                 
   25 CONTINUE                                                          
C        APPLY TEMPERATURE CORRECTION                                   
      DO 31 I=2,5                                                       
      IF(T.LT.TMPTAB(I)) GO TO 33                                       
   31 CONTINUE                                                          
      ILOW = 4                                                          
      GO TO 35                                                          
   33 ILOW = I-1                                                        
   35 CONTINUE                                                          
      DO 41 J=2,8                                                       
      IF(FREQ.LT.TFREQ(J)) GO TO 43                                     
   41 CONTINUE                                                          
CCC   JLOW IS 2 LESS THAN DO MAX                                        
      JLOW=6                                                            
      GO TO 45                                                          
   43 JLOW = J-2                                                        
   45 CONTINUE                                                          
      DO 50 K=1,2                                                       
      DO 49 J=1,2                                                       
C        INTERPOLATE IN TEMPERATURE                                     
CCC   KJ=(KMIN/2)+K                                                     
      KJ=K+(KMIN+1)/2                                                   
      JI = JLOW + J                                                     
      FAC = ((TMPTAB(ILOW)-T)*FACTOR(ILOW+1,JI,KJ)+(T-TMPTAB(ILOW+1))*  
     1 FACTOR(ILOW,JI,KJ))/(TMPTAB(ILOW)-TMPTAB(ILOW+1))                
      JI = JLOW +3-J                                                    
      FACIT(J) = (TFREQ(JI)-FREQ )*FAC                                  
   49 CONTINUE                                                          
      TFACT(K) = (FACIT(2)-FACIT(1))/(TFREQ(JLOW+1)-TFREQ(JLOW+2))      
   50 CONTINUE                                                          
C        COMPUTE ATTENUATION (DB/KM)                                    
CCC   KJ=2*KMIN/2+1                                                     
      KJ=2*((KMIN+1)/2)+1                                               
CCC   GMRAIN=AITK(RATES,ATTN,RATE,3)*                                   
      GMRAIN=AITK(RATES,ATTN,RATE,4)*                                   
     1((RATE-RATTAB(KJ))*TFACT(2)+(RATTAB(KJ+2)-RATE)*                  
     2TFACT(1))/(RATTAB(KJ+2)-RATTAB(KJ))                               
CCC                                                                     
CCC    APPLY CONVERSION TO NEPERS                                       
CCC                                                                     
      RETURN                                                            
      END                                                               
      SUBROUTINE GTSTRT(IV,IREC,ITB)                                    
C                                                                       
C     FIND THE RECORD (IREC) WHERE FREQUENCY IV STARTS IN THE           
C     BAND MODEL PARAMETER TAPE.  ITB IS THE UNIT NUMBER.               
C                                                                       
C     DECLARE INPUTS/OUTPUTS                                            
      INTEGER IV,IREC,ITB                                               
C                                                                       
C     DECLARE LOCAL VARIABLES                                           
      INTEGER IV2,IRCLO,IRCHI,IRCTST,IDR                                
      IRCLO=2                                                           
C                                                                       
C     FIND IRCHI SO THAT IT IS GREATER THAN OR EQUAL TO MAXIMUM RECORD. 
C     IRCHI = 2**16 = 65536 SHOULD EXCEED NUMBER OF RECORDS.            
C     SO THIS RECORD IS OFF THE FILE.                                   
C     DO THE FOLLOWING IN CASE IRCHI IS NOT LARGE ENOUGH.               
C                                                                       
      IRCHI=65536                                                       
   10 READ(ITB,REC=IRCHI,ERR=20)IV2                                     
      IRCHI=IRCHI+IRCHI                                                 
      GOTO10                                                            
C                                                                       
C     START BISECTION LOOP.                                             
C     FIND FREQUENCY AT THE MID-RECORD BETWEEN IRCLO AND IRCHI.         
C     RESET IRCLO AND IRCHI.                                            
C     TAKES ONLY 16 READS (MAXIMUM) TO LOCATE THE STARTING POINT.       
C                                                                       
   20 IDR=IRCHI-IRCLO                                                   
      IF(IDR.GT.1)THEN                                                  
         IRCTST=IRCLO+IDR/2                                             
         READ(ITB,REC=IRCTST,ERR=30)IV2                                 
         IF(IV2.LT.IV)THEN                                              
            IRCLO=IRCTST                                                
            GOTO20                                                      
         ENDIF                                                          
   30    IRCHI=IRCTST                                                   
         GOTO20                                                         
      ENDIF                                                             
      READ(ITB,REC=IRCLO)IV2                                            
      IF (IV2.EQ.IV)THEN                                                
         IREC=IRCLO                                                     
      ELSE                                                              
         IREC=IRCHI                                                     
      ENDIF                                                             
      END                                                               
      SUBROUTINE H2SRC(BETAH2,IPH,PARM1,PARM2,                          
     1  PARM3,PARM4,PSIPO,G,MSOFF,ICH1,KNTRVL)                          
C                                                                       
C     THIS ROUTINE CALLS SSGEO FOR A VERTICAL PATH AT H2.               
C                                                                       
C     DECLARE INPUTS/OUTPUTS                                            
C       BETAH2   EARTH CENTER ANGLE BETWEEN H1 AND H2                   
C       IPH      PHASE FUNCTION FLAG                                    
C       PARM1    OBSERVER LATITUDE [DEG NORTH OF EQUATOR]               
C       PARM2    OBSERVER LONGITUDE [DEG WEST OF GREENWICH]             
C       PARM3    SOLAR LATITUDE [DEG NORTH OF EQUATOR]                  
C       PARM4    SOLAR LONGITUDE [DEG WEST OF GREENWICH]                
C       PSIPO    PATH TRUE AZIMUTH ANGLE [DEG EAST OF NORTH]            
C       G        HENYEY-GREENSTEIN ASYMMETRY FACTOR (IPH=0)             
C       MSOFF    OFFSET FOR MULTIPLE SCATTERING PATH ARRAYS             
C       ICH1     HAZE MODEL FLAG                                        
C       KNTRVL   NUMBER OF WEIGHTS IN CORRELATED-K APPROACH             
      REAL BETAH2,PARM1,PARM2,PARM3,PARM4,PSIPO,G                       
      INTEGER IPH,MSOFF,ICH1,KNTRVL                                     
C                                                                       
C     INCLUDE COMMONS                                                   
C                                                                       
C     FILE UNIT NUMBERS                                                 
C       IRD      MODTRAN INPUT FILE, tape5, UNIT NUMBER (1).            
C       IPR      MODTRAN STANDARD OUTPUT FILE, tape6, UNIT NUMBER (2).  
C       IPU      MODTRAN SPECTRAL DATA FILE, tape7, UNIT NUMBER (7).    
C       NPR      PRINTOUT LEVEL SWITCH (1=small,0=normal,-1=large).     
C       IPR1     MODTRAN FLUX OUTPUT FILE, tape8, UNIT NUMBER (8).      
C       ISCRCH   MULTIPLE SCATTERING SCRATCH FILE UNIT NUMBER (10).     
C       ITB      MOLECULAR BAND MODEL PARAMETER FILE UNIT NUMBER (9).   
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                           
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                       
C                                                                       
C     DECLARE LOCAL VARIABLES                                           
      REAL PRM1SV,PRM2SV,PSISAV                                         
      INTEGER IERROR                                                    
C                                                                       
C     SAVE SOLAR PATH GEOMETRY VARIABLES                                
      PRM1SV=PARM1                                                      
      PRM2SV=PARM2                                                      
      PSISAV=PSIPO                                                      
C                                                                       
C     WRITE OUT HEADER                                                  
Calley      WRITE(IPR,'(/2A)')' THE MULTIPLE SCATTERING FLUX',          
      IF (IPR .GT. 0)WRITE(IPR,'(/2A)')' THE MULTIPLE SCATTERING FLUX', 
     1  ' CALCULATIONS ARE BASED ON A VERTICAL PATH AT H2:'             
C                                                                       
C     DETERMINE LATITUDE, LONGITUDE AND PATH AZIMUTH AT H2.             
      CALL LOCATE(PRM1SV,PRM2SV,PSISAV,BETAH2,PARM1,PARM2)              
      CALL PSIECA(PARM1,PARM2,PRM1SV,PRM2SV,PSIPO,BETAH2)               
      PSIPO=PSIPO+180.                                                  
      IF(PSIPO.GE.360.)PSIPO=PSIPO-360.                                 
Calley      WRITE(IPR,'((5X,A,F12.5))')                                 
      IF (IPR .GT. 0) WRITE(IPR,'((5X,A,F12.5))')                       
     1  ' OBSERVER LATITUDE AT H2 [DEG NORTH OF EQUATOR]  ',PARM1,      
     2  ' OBSERVER LONGITUDE AT H2 [DEG WEST OF GREENWICH]',PARM2,      
     3  ' OBSERVER PATH AZIMUTH AT H2 [DEG EAST OF NORTH] ',PSIPO       
C                                                                       
C     CALL SSGEO                                                        
      IERROR=0                                                          
      CALL SSGEO(IERROR,IPH,PARM1,PARM2,PARM3,PARM4,                    
     1  PSIPO,G,MSOFF,ICH1,KNTRVL)                                      
C                                                                       
C     RETURN SAVED GEOMETRY VARIABLES                                   
      PARM1=PRM1SV                                                      
      PARM2=PRM2SV                                                      
      PSIPO=PSISAV                                                      
C                                                                       
C     RETURN TO DRIVER                                                  
      RETURN                                                            
      END                                                               
      REAL FUNCTION HENGNS(G,COSANG)                                    
C                                                                       
C     CALCULATES THE HENYEY-GREENSTEIN SCATTERING PHASE FUNCTION        
C                                                                       
C     INPUTS                                                            
C       G        HENYEY-GREENSTEIN ASYMMETRY FACTOR                     
C       COSANG   COSINE OF THE SCATTERING ANGLE                         
      REAL G,COSANG                                                     
C                                                                       
C     OUTPUTS                                                           
C       HENGNS   HENYEY-GREENSTEIN SCATTERING PHASE FUNCTION [STER-1]   
C                                                                       
C     COMMONS                                                           
C       PI       THE CONSTANT PI                                        
C       DEG      NUMBER OF DEGREES IN ONE RADIAN.                       
C       BIGNUM   MAXIMUM SINGLE PRECISION NUMBER.                       
C       BIGEXP   MAXIMUM EXPONENTIAL ARGUMENT WITHOUT OVERFLOW.         
      REAL PI,DEG,BIGNUM,BIGEXP                                         
      COMMON/CNSTNS/PI,DEG,BIGNUM,BIGEXP                                
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH                               
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                           
C                                                                       
C     LOCAL VARIABLES                                                   
      REAL ONEMG,DENOM                                                  
      ONEMG=1.-G                                                        
      DENOM=ONEMG**2+2*G*(1.-COSANG)                                    
      DENOM=4.*PI*DENOM*SQRT(DENOM)                                     
      IF(DENOM.GE.0.)THEN                                               
          HENGNS=ONEMG*(1.+G)/DENOM                                     
          RETURN                                                        
      ENDIF                                                             
Calley      WRITE(IPR,'(2A,/14X,2(A,F9.5))')' FATAL ERROR: ',           
      IF (IPR .GT. 0) WRITE(IPR,'(2A,/14X,2(A,F9.5))')' FATAL ERROR: ', 
     1  ' HENYEY-GREENSTEIN PHASE FUNCTION IS NOT WELL DEFINED FOR',    
     2  ' ASYMMETRY FACTOR (G) =',G,' AND COS(ANGLE) =',COSANG          
      RETURN                                                            
      END                                                               
      SUBROUTINE HERTDA(HERZ,V)                                         
C                                                                       
C     HERZBERG O2 ABSORPTION                                            
C     HALL,1987 PRIVATE COMMUNICATION, BASED ON:                        
C                                                                       
C     REF. JOHNSTON ET.AL, JGR,89,11661-11665,1984                      
C         NICOLET, 1987 (RECENT STUDIES IN ATOMIC & MOLECULAR PROCESSES,
C                        PLEMUN PUBLISHING CORP, NY 1987)               
C     AND YOSHINO, ET.AL., 1988 (PREPRINT OF "IMPROVED ABSORPTION       
C         CROSS SECTIONS OF OXYGEN IN THE WAVELENGTH REGION 205-240NM   
C         OF THE HERZBERG CONTINUUM")                                   
C                                                                       
      HERZ=0.0                                                          
      IF(V.LE.36000.00) RETURN                                          
C                                                                       
C     EXTRAPOLATE SMOOTHLY THROUGH THE HERZBERG BAND REGION             
C     NOTE: HERZBERG BANDS ARE NOT CORRECTLY INCLUDED                   
C                                                                       
      CORR=0.                                                           
      IF(V.LE.40000.)CORR=((40000.-V)/4000.)*7.917E-27                  
C                                                                       
C     CONVERSION TO ATM-CM /KM                                          
C                                                                       
      RLOSCH = 2.6868 E24 * 1.0E-5                                      
C                                                                       
C     HALL'S NEW HERZBERG  (LEAST SQRS FIT, LN(P))                      
C                                                                       
C     YRATIO=2048.7/WL(I)  ****IN ANGSTOMS****                          
C           =.20487/WN(I)     IN MICRONS                                
C           =WCM(I)/48811.0   IN CM-1                                   
C                                                                       
      YRATIO= V    /48811.0                                             
      HERZ=6.884E-24*(YRATIO)*EXP(-69.738*(ALOG(YRATIO))**2)-CORR       
      HERZ = HERZ * RLOSCH                                              
      RETURN                                                            
      END                                                               
      SUBROUTINE HNO3 (V,HABS)                                          
C                                                                       
C     HNO3  STATISTICAL BAND PARAMETERS                                 
C                                                                       
      DIMENSION H1(15), H2(16), H3(13)                                  
C     ARRAY H1 CONTAINS HNO3 ABS, COEF(CM-1ATM-1) FROM  850 TO 920 CM-1 
      DATA H1/2.197,3.911,6.154,8.150,9.217,9.461,11.56,11.10,11.17,12.4
     10,10.49,7.509,6.136,4.899,2.866/                                  
C     ARRAY H2 CONTAINS HNO3 ABS, COEF(CM-1ATM-1) FROM 1275 TO1350 CM-1 
      DATA H2/2.828,4.611,6.755,8.759,10.51,13.74,18.00,21.51,23.09,21.6
     18,21.32,16.82,16.42,17.87,14.86,8.716/                            
C     ARRAY H3 CONTAINS HNO3 ABS, COEF(CM-1ATM-1) FROM 1675 TO1735 CM-1 
      DATA H3/5.003,8.803,14.12,19.83,23.31,23.58,23.22,21.09,26.99,25.8
     14,24.79,17.68,9.420/                                              
      HABS=0.                                                           
      IF (V.GE.850.0.AND.V.LE.920.0) GO TO 5                            
      IF (V.GE.1275.0.AND.V.LE.1350.0) GO TO 10                         
      IF (V.GE.1675.0.AND.V.LE.1735.0) GO TO 15                         
      RETURN                                                            
    5 I=(V-845.)/5.                                                     
      HABS=H1(I)                                                        
      RETURN                                                            
   10 I=(V-1270.)/5.                                                    
      HABS=H2(I)                                                        
      RETURN                                                            
   15 I=(V-1670.)/5.                                                    
      HABS=H3(I)                                                        
      RETURN                                                            
      END                                                               
      INTEGER FUNCTION IDAMAX(N,DX,INCX)                                
C                                                                       
C     FINDS THE INDEX OF ELEMENT HAVING MAX. ABSOLUTE VALUE.            
C     JACK DONGARRA, LINPACK, 3/11/78.                                  
C                                                                       
      DOUBLE PRECISION DX(*),DMAX                                       
      INTEGER I,INCX,IX,N                                               
C                                                                       
      IDAMAX = 0                                                        
      IF( N .LT. 1 ) RETURN                                             
      IDAMAX = 1                                                        
      IF(N.EQ.1)RETURN                                                  
      IF(INCX.EQ.1)GO TO 20                                             
C                                                                       
C        CODE FOR INCREMENT NOT EQUAL TO 1                              
C                                                                       
      IX = 1                                                            
      DMAX = DABS(DX(1))                                                
      IX = IX + INCX                                                    
      DO 10 I = 2,N                                                     
         IF(DABS(DX(IX)).LE.DMAX) GO TO 5                               
         IDAMAX = I                                                     
         DMAX = DABS(DX(IX))                                            
    5    IX = IX + INCX                                                 
   10 CONTINUE                                                          
      RETURN                                                            
C                                                                       
C        CODE FOR INCREMENT EQUAL TO 1                                  
C                                                                       
   20 DMAX = DABS(DX(1))                                                
      DO 30 I = 2,N                                                     
         IF(DABS(DX(I)).LE.DMAX) GO TO 30                               
         IDAMAX = I                                                     
         DMAX = DABS(DX(I))                                             
   30 CONTINUE                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE INDX (WAVL,TC,KEY,REIL,ZIMAG)                          
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
C * *                                                                   
C * * WAVELENGTH IS IN CENTIMETERS.  TEMPERATURE IS IN DEG. C.      * * 
C * *                                                                   
C * * KEY IS SET TO 1 IN SUBROUTINE GAMFOG                          * * 
C * *                                                                   
C * * KEY IS SET TO 0 IN SUBROUTINE GAMFOG    FOR CIRRUS            * * 
C * *                                                                   
C * * REAL IS THE REAL PART OF THE REFRACTIVE INDEX.                * * 
C * *                                                                   
C * * ZIMAG IS THE IMAGINARY PART OF THE REFRACTIVE INDEX IT IS     * * 
C * *                                                                   
C * * RETURNED NEG. I.E.  M= REAL - I*ZIMAG  .                      * * 
C * *                                                                   
C * * A SERIES OF CHECKS ARE MADE AND WARNINGS GIVEN.               * * 
C * *                                                                   
C * * RAY APPLIED OPTICS VOL 11,NO.8,AUG 72, PG. 1836-1844          * * 
C * *                                                                   
C * * CORRECTIONS HAVE BEEN MADE TO RAYS ORIGINAL PAPER             * * 
C * *                                                                   
C * *                                                                   
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                          
      R1=0.0                                                            
      R2=0.0                                                            
Calley      IF(WAVL.LT..0001) WRITE(IPR,1)                              
Calley      IF(TC.LT.-20.) WRITE(IPR,2)                                 
      IF(WAVL .LT. 0.0001 .AND. IPR .GT. 0) WRITE(IPR,1)                
      IF(TC.LT.-20.0 .AND. IPR.GT.0) WRITE(IPR,2)                       
    1 FORMAT(///,30X,'ATTEMPTING TO EVALUATE FOR A WAVELENGTH LESS THAN 
     1ONE MICRON',//)                                                   
    2 FORMAT(///,30X,'ATTEMPTING TO EVALUATE FOR A TEMPERATURE LESS THAN
     2 -20. DEGREES CENTIGRADE',//)                                     
      CALL DEBYE(WAVL,TC,KEY,REIL,ZIMAG)                                
C * *  TABLE 3 WATER PG. 1840                                           
    4 IF(WAVL.GT..034) GO TO 5                                          
      GO TO 7                                                           
    5 IF(WAVL.GT..1) GO TO 11                                           
    6  R2 =DOP(WAVL,1.83899,1639.,52340.4,10399.2,588.24,345005.,       
     3259913.,161.29,43319.7,27661.2)                                   
      R2=R2+R2*(TC-25.)*.0001*EXP((.000025*WAVL)**.25)                  
      REIL=REIL*(WAVL-.034)/.066+R2*(.1-WAVL)/.066                      
      GO TO 11                                                          
    7 IF(WAVL.GT..0006) GO TO 8                                         
      GO TO 10                                                          
    8 REIL=DOP(WAVL,1.83899,1639.,52340.4,10399.2,588.24,345005.,       
     4259913.,161.29,43319.7,27661.2)                                   
      REIL=REIL+REIL*(TC-25.)*.0001*EXP((.000025*WAVL)**.25)            
      IF(WAVL.GT..0007) GO TO 11                                        
    9 R1=DOP(WAVL,1.79907,3352.27,99.914E+04,15.1963E+04,1639.,50483.5, 
     59246.27,588.24,84.4697E+04,10.7615E+05)                           
      R1=R1+R1*(TC-25.)*.0001*EXP((.000025*WAVL)**.25)                  
      REIL=R1*(.0007-WAVL)/.0001+REIL*(WAVL-.0006)/.0001                
      GO TO 11                                                          
   10 REIL=DOP(WAVL,1.79907,3352.27,99.914E+04,15.1963E+04,1639.,       
     650483.5,9246.27,588.24,84.4697E+04,10.7615E+05)                   
      REIL=REIL+REIL*(TC-25.)*.0001*EXP((.000025*WAVL)**.25)            
C * *  TABLE 2 WATER PG. 1840                                           
   11 IF(WAVL.GE..3) GO TO 57                                           
      IF(WAVL.GE..03) GO TO 12                                          
      GO TO 13                                                          
   12 ZIMAG=ZIMAG+AB(WAVL,.25,300.,.47,3.)+AB(WAVL,.39,17.,.45,1.3)+    
     7AB(WAVL,.41,62.,.35,1.7)                                          
      GO TO 57                                                          
   13 IF(WAVL.GE..0062) GO TO 14                                        
      GO TO 15                                                          
   14 ZIMAG=ZIMAG+AB(WAVL,.41,62.,.35,1.7)+AB(WAVL,.39,17.,.45,1.3)+    
     8AB(WAVL,.25,300.,.4,2.)                                           
      GO TO 57                                                          
   15 IF(WAVL.GE..0017) GO TO 16                                        
      GO TO 17                                                          
   16 ZIMAG=ZIMAG+AB(WAVL,.39,17.,.45,1.3)+AB(WAVL,.41,62.,.22,1.8)+    
     9AB(WAVL,.25,300.,.4,2.)                                           
      GO TO 57                                                          
   17 IF(WAVL.GE..00061) GO TO 18                                       
      GO TO 19                                                          
   18 ZIMAG=ZIMAG+AB(WAVL,.12,6.1,.042,.6)+AB(WAVL,.39,17.,.165,2.4)+   
     1AB(WAVL,.41,62.,.22,1.8)                                          
      GO TO 57                                                          
   19 IF(WAVL.GE..000495) GO TO 20                                      
      GO TO 21                                                          
   20 ZIMAG=ZIMAG+AB(WAVL,.01,4.95,.05,1.)+AB(WAVL,.12,6.1,.009,2.)     
      GO TO 57                                                          
   21 IF(WAVL.GE..000297) GO TO 22                                      
      GO TO 23                                                          
   22 ZIMAG=ZIMAG+AB(WAVL,.27,2.97,.04,2.)+AB(WAVL,.01,4.95,.06,1.)     
      GO TO 57                                                          
   23 ZIMAG=ZIMAG+AB(WAVL,.27,2.97,.025,2.)+AB(WAVL,.01,4.95,.06,1.)    
   57 CONTINUE                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE INTERP(INTYPE,X,X1,X2,F,F1,F2)                         
C     SUBROUTINE INTERP INTERPOLATES TO DETERMINE THE VALUE OF F        
C     AT X, GIVEN F1 AT X1 AND F2 AT X2.                                
C     INTYPE=1 FOR LINEAR INTERPOLATION                                 
C     INTYPE=2 FOR LOGARITHMIC INTERPOLATION                            
      ITYPE=INTYPE                                                      
      IF(F1.LE.0.0.OR.F2.LE.0.0) ITYPE=1                                
      IF(ITYPE.EQ.2) GO TO 100                                          
C     LINEAR INTERPOLATION                                              
      F=F1+(X-X1)*(F2-F1)/(X2-X1)                                       
      RETURN                                                            
100   CONTINUE                                                          
      A1=ALOG(F1)                                                       
      A2=ALOG(F2)                                                       
      A=A1+(X-X1)*(A2-A1)/(X2-X1)                                       
      F=EXP(A)                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE IRFXN(X,RX,RATIO)                                      
      INCLUDE 'PARAM.LST'                                               
C                                                                       
C     THIS ROUTINE FINDS INDEX OF REFRACTION AND ITS DERIVATIVE AT X.   
C                                                                       
C     X = HEIGHT FROM THE SURFACE OF THE EARTH                          
C     RX = INDEX OF REFRACTION                                          
C     DRX = DERIVATIVE                                                  
C     RATIO = RX/DRX                                                    
C                                                                       
      DOUBLE PRECISION  X, RX, RATIO, XN, H                             
      INTEGER I, J                                                      
C                                                                       
      REAL ZM,PM,TM,RFNDX,DENSTY                                        
      COMMON/MODEL/ZM(LAYDIM),PM(LAYDIM),TM(LAYDIM),                    
     1  RFNDX(LAYDIM),DENSTY(KMAX,LAYDIM)                               
      INTEGER IKMAX,ML,ISSGEO,IMULT                                     
      COMMON/CNTRL/IKMAX,ML,ISSGEO,IMULT                                
C                                                                       
      IF (X .GT. ZM(ML)) THEN                                           
         J = ML                                                         
         GO TO 200                                                      
      ENDIF                                                             
      DO 300 I = 2, ML                                                  
         IF (X .LE. ZM(I)) THEN                                         
            J = I                                                       
            GO TO 200                                                   
         ENDIF                                                          
 300  CONTINUE                                                          
C                                                                       
 200  I = J -1                                                          
C                                                                       
      H = -(ZM(J)-ZM(I))/LOG(RFNDX(J)/RFNDX(I))                         
      XN = RFNDX(I)*EXP(-(X-ZM(I))/H)                                   
      RX = 1 + XN                                                       
      RATIO = -(RX*H)/XN                                                
      RETURN                                                            
      END                                                               
      FUNCTION   JOU(CHAR)                                              
      COMMON /IFIL/ IRD,IPR,IPU,NOPR,NFHDRF,ISCRCH                      
C                                                                       
      CHARACTER*1 CHAR,HOLVEC(22)                                       
      DIMENSION INDX1(22)                                               
      DATA  HOLVEC                                                      
     X /'1','2','3','4','5','6','0','0','0','0',' ','A',                
     X  'B','C','D','E','F','G','H','I','J','K'/                        
      DATA  INDX1                                                       
     X /  1,  2,  3,  4,  5,  6,  0,  0,  0,  0, 10, 10,                
     X   11, 12, 13, 14, 15, 16, 17, 18, 19, 20/                        
C                                                                       
       INDX=0                                                           
      DO 100 I=1,22                                                     
       IF (HOLVEC(I) .NE. CHAR) GO TO 100                               
       INDX=INDX1(I)                                                    
       GO TO 110                                                        
100   CONTINUE                                                          
110   IF (INDX .EQ. 0) THEN                                             
Calley        WRITE(IPR,910) CHAR                                       
        IF (IPR .GT. 0) WRITE(IPR,910) CHAR                             
910     FORMAT('0 INVALID PARAMETER :',2X,A1)                           
        STOP ' JOU: BAD PARAM '                                         
      END IF                                                            
920   FORMAT(5X,A1,I5)                                                  
      JOU=INDX                                                          
                    RETURN                                              
      END                                                               
      SUBROUTINE LAY5DT(V,IKOFF,IPATH)                                  
C                                                                       
C     THIS ROUTINE DEFINES THE LAYER DEPENDENT 5 CM-1 DATA              
      INTEGER IKOFF,IPATH                                               
      REAL V                                                            
C                                                                       
C     THE TXNEW AND TXOLD ARRAYS CONTAIN:                               
C        1   ASYMMETRY PARAMETER WEIGHTED BY SCATTERING DEPTH           
C        2   INCREMENTAL AEROSOL SCATTERING OPTICAL DEPTH               
C        3   TOTAL O2 CONTINUUM TRANSMITTANCE                           
C        4   N2 CONTINUUM TRANSMITTANCE                                 
C        5   TOTAL H2O CONTINUUM TRANSMITTANCE                          
C        6   RAYLEIGH MOLECULAR SCATTERED TRANSMITTANCE                 
C        7   AEROSOL EXTINCTION                                         
C        8   TOTAL OZONE CONTINUUM TRANSMITTANCE                        
C        9   PRODUCT OF ALL CONTINUUM TRANSMITTANCES EXCEPT O2 AND HNO3 
C       10   AEROSOL ABSORPTION                                         
C       11   HNO3 TRANSMITTANCE                                         
C       12   MOLECULAR CONTINUUM OPTICAL DEPTH                          
C       13   INCREMENTAL AEROSOL + CLOUD EXTINCTION OPTICAL DEPTH       
C       14   TOTAL CONTINUUM OPTICAL DEPTH                              
C       15   RAYLEIGH MOLECULAR SCATTERING OPTICAL DEPTH                
C       16   CIRRUS CLOUD TRANSMITTANCE (ICLD = 20 ONLY)                
C       17   UV/VIS NO2 TRANSMISSION                                    
C       18   UV/VIS SO2 TRANSMISSION                                    
C       19   INCREMENTAL WATER DROPLET SCATTERING OPTICAL DEPTH         
C       20   INCREMENTAL ICE PARTICLE SCATTERING OPTICAL DEPTH          
C                                                                       
C     FOR LOWTRAN RUNS, TX CONTAINS MOLECULAR LINE CENTER TRANSMITTANCES
C       17=H2O  36=CO2  31=O3   47=N2O  44=CO   46=CH4                  
C       50=O2   54=NO   56=SO2  55=NO2  52=NH3                          
C                                                                       
      INCLUDE 'PARAM.LST'                                               
      INTEGER KPOINT                                                    
      REAL WAVLEN,EXTC,ABSC,ASYM,AWCCON,TX,W,RELHUM,PATM,TBBY,WPATH     
      COMMON/BASE/WAVLEN(MXWVLN),EXTC(NAER,MXWVLN),ABSC(NAER,MXWVLN),   
     1  ASYM(NAER,MXWVLN),AWCCON(NAER),KPOINT(NSPC),TX(KMAX),W(KMAX),   
     2  RELHUM(LAYDIM),PATM(LAYTHR),TBBY(LAYTHR),WPATH(LAYTHR,KMAX)     
C                                                                       
C       PI       THE CONSTANT PI                                        
C       DEG      NUMBER OF DEGREES IN ONE RADIAN.                       
C       BIGNUM   MAXIMUM SINGLE PRECISION NUMBER.                       
C       BIGEXP   MAXIMUM EXPONENTIAL ARGUMENT WITHOUT OVERFLOW.         
      REAL PI,DEG,BIGNUM,BIGEXP                                         
      COMMON/CNSTNS/PI,DEG,BIGNUM,BIGEXP                                
      INTEGER MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT                     
      REAL TBOUND,SALB                                                  
      LOGICAL MODTRN                                                    
      COMMON/CARD1/MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB,   
     1  MODTRN                                                          
      INTEGER IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA                       
      REAL VIS,WSS,WHH,RAINRT                                           
      COMMON/CARD2/IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,VIS,WSS,WHH,     
     1  RAINRT                                                          
      REAL EXTV,ABSV,ASYV                                               
      COMMON/AER/EXTV(NAER),ABSV(NAER),ASYV(NAER)                       
      INTEGER IBND                                                      
      REAL A1,B1,C1,QA,CPS                                              
      COMMON/AABBCC/A1(11),B1(11),C1(11),IBND(11),QA(11),CPS(11)        
      REAL SIGO20,SIGO2A,SIGO2B,C0,CT1,CT2,ABB,CRSNO2,CRSSO2            
      COMMON/FRQ5/SIGO20,SIGO2A,SIGO2B,C0,CT1,CT2,ABB(19),CRSNO2,CRSSO2 
      REAL TXNEW,TXOLD                                                  
      COMMON/LAY5/TXNEW(20,LAYTHR,3),TXOLD(20,LAYTHR,3)                 
      SAVE /LAY5/                                                       
C                                                                       
C     DECLARE LOCAL VARIABLES                                           
      INTEGER IAER,K                                                    
      REAL ABSSM,SCTSM,ASYMSM,EXTSM,ASYMR,SCTTRM,                       
     1  SH2OT0,SH2OT1,SH2O,FH2O,TAVE                                    
C                                                                       
C     DECLARE FUNCTIONS                                                 
      REAL DBLTX                                                        
C                                                                       
C     LIST DATA                                                         
      INTEGER MAP(NAER)                                                 
      DATA MAP/7,12,13,14,16,66,67/                                     
C                                                                       
C     CONTRIBUTION OF RAIN TO EXTINCTION, SCATTERING AND ABSORPTION     
      EXTSM=0.                                                          
      ABSSM=0.                                                          
      SCTSM=0.                                                          
      ASYMR=0.                                                          
      IF(W(3).NE.0.)CALL RAIN(V,EXTSM,ABSSM,SCTSM,ASYMR)                
C                                                                       
C     CALCULATE INCREMENTAL OPTICAL DEPTH VARIABLES                     
      IF(IPATH.EQ.3)THEN                                                
          TXOLD( 1,IKOFF,IPATH)=TXNEW( 1,IKOFF,IPATH)                   
          TXOLD( 2,IKOFF,IPATH)=TXNEW( 2,IKOFF,IPATH)                   
          TXOLD(13,IKOFF,IPATH)=TXNEW(13,IKOFF,IPATH)                   
          TXOLD(19,IKOFF,IPATH)=TXNEW(19,IKOFF,IPATH)                   
          TXOLD(20,IKOFF,IPATH)=TXNEW(20,IKOFF,IPATH)                   
          ASYMSM=SCTSM*ASYMR                                            
          DO 10 IAER=1,NAER                                             
              SCTTRM=W(MAP(IAER))*(EXTV(IAER)-ABSV(IAER))               
              ASYMSM=ASYMSM+SCTTRM*ASYV(IAER)                           
C                                                                       
C             FOR THE SINGLE SCATTER SOLAR RADIANCE CALCULATIONS        
C             (ROUTINE SSRAD), THE AEROSOL AND CLOUD INCREMENTAL        
C             OPTICAL DEPTH CONTRIBUTIONS ARE KEPT SEPARATE.            
              IF(IAER.EQ.6)THEN                                         
                  TXNEW(19,IKOFF,IPATH)=SCTTRM                          
              ELSEIF(IAER.EQ.7)THEN                                     
                  TXNEW(20,IKOFF,IPATH)=SCTTRM                          
              ELSE                                                      
                  SCTSM=SCTSM+SCTTRM                                    
              ENDIF                                                     
              EXTSM=EXTSM+W(MAP(IAER))*EXTV(IAER)                       
              ABSSM=ABSSM+W(MAP(IAER))*ABSV(IAER)                       
   10     CONTINUE                                                      
          TXNEW( 1,IKOFF,IPATH)=ASYMSM                                  
          TXNEW( 2,IKOFF,IPATH)=SCTSM                                   
          TXNEW(13,IKOFF,IPATH)=EXTSM                                   
      ELSE                                                              
C                                                                       
C         ADD AEROSOL EXTINCTION AND ABSORPTION TO RAIN CONTRIBUTION    
          DO 20 IAER=1,NAER                                             
              EXTSM=EXTSM+W(MAP(IAER))*EXTV(IAER)                       
              ABSSM=ABSSM+W(MAP(IAER))*ABSV(IAER)                       
   20     CONTINUE                                                      
      ENDIF                                                             
C                                                                       
C     DETERMINE OPTICAL DEPTHS                                          
C       TX(4)   N2 CONTINUUM                                            
C       TX(5)   SUM OF H2O CONTINUUM CONTRIBUTIONS                      
C       TX(6)   RAYLEIGH MOLECULAR SCATTERING                           
C       TX(8)   VISIBLE AND ULTRAVIOLET O3 (= 0 IF ABBUV > 0)           
C       TX(11)  HNO3 ABSORPTION (LOWTRAN CALCULATIONS ONLY)             
C       TX(16)  CIRRUS CLOUDS                                           
C       TX(9)   SUM OF CONTINUUM CONTRIBUTIONS EXCLUDING O2 AND HNO3    
C       TX(3)   O2 CONTINUUM CONTRIBUTIONS                              
      TX(4)=ABB(4)*W(4)                                                 
      TX(5)=0.                                                          
      IF(W(5).GT.0.)THEN                                                
          SH2OT0=ABB(5)                                                 
          SH2OT1=ABB(9)                                                 
          FH2O=ABB(10)                                                  
          TAVE=296.-36.*W(9)/W(5)                                       
          CALL CKD(SH2OT0,SH2OT1,TAVE,SH2O,FH2O,V)                      
          TX(5)=1.E-20*(SH2O*W(5)+FH2O*W(10))                           
      ENDIF                                                             
      TX(6)=ABB(6)*W(6)                                                 
      TX(8)=ABB(8)*W(8)+C0*(.269*W(8)+CT1*W(59)+CT2*W(60))              
      TX(11)=ABB(11)*W(11)                                              
      TX(16)=0.                                                         
      IF(ICLD.EQ.20)TX(16)=2*W(16)                                      
      TX(3)=W(58)*ABB(17)+                                              
     1  SIGO20*(W(63)+SIGO2A*(W(1)-220.*W(63))+SIGO2B*W(2))             
      TX(64)=CRSNO2*W(64)                                               
      TX(65)=CRSSO2*W(65)                                               
      TX(9)=TX(4)+TX(5)+TX(6)+TX(8)+EXTSM+TX(16)                        
C                                                                       
C     STORE CUMULATIVE AEROSOL PARAMETERS FOR DIFFERENT VERTICAL REGIONS
      TX(10)=ABSSM                                                      
      TX(7)=EXTSM                                                       
C                                                                       
C     STORE OPTICAL THICKNESS PARAMETERS                                
      TXOLD(12,IKOFF,IPATH)=TXNEW(12,IKOFF,IPATH)                       
      TXNEW(12,IKOFF,IPATH)=TX(4)+TX(5)+TX(8)+TX(3)                     
      TXOLD(14,IKOFF,IPATH)=TXNEW(14,IKOFF,IPATH)                       
      TXNEW(14,IKOFF,IPATH)=TX(9)+TX(3)+TX(64)+TX(65)                   
      TXOLD(15,IKOFF,IPATH)=TXNEW(15,IKOFF,IPATH)                       
      TXNEW(15,IKOFF,IPATH)=TX(6)                                       
      DO 30 K=3,11                                                      
          TXOLD(K,IKOFF,IPATH)=TXNEW(K,IKOFF,IPATH)                     
          IF(TX(K).LE.BIGEXP)THEN                                       
              TXNEW(K,IKOFF,IPATH)=EXP(-TX(K))                          
          ELSE                                                          
              TXNEW(K,IKOFF,IPATH)=1./BIGNUM                            
          ENDIF                                                         
   30 CONTINUE                                                          
      TXOLD(16,IKOFF,IPATH)=TXNEW(16,IKOFF,IPATH)                       
      IF(TX(16).LE.BIGEXP)THEN                                          
          TXNEW(16,IKOFF,IPATH)=EXP(-TX(16))                            
      ELSE                                                              
          TXNEW(16,IKOFF,IPATH)=1./BIGNUM                               
      ENDIF                                                             
      TXOLD(17,IKOFF,IPATH)=TXNEW(17,IKOFF,IPATH)                       
      IF(TX(64).LE.BIGEXP)THEN                                          
          TXNEW(17,IKOFF,IPATH)=EXP(-TX(64))                            
      ELSE                                                              
          TXNEW(17,IKOFF,IPATH)=1./BIGNUM                               
      ENDIF                                                             
C                                                                       
      TXOLD(18,IKOFF,IPATH)=TXNEW(18,IKOFF,IPATH)                       
      IF(TX(65).LE.BIGEXP)THEN                                          
          TXNEW(18,IKOFF,IPATH)=EXP(-TX(65))                            
      ELSE                                                              
          TXNEW(18,IKOFF,IPATH)=1./BIGNUM                               
      ENDIF                                                             
C                                                                       
      IF(.NOT.MODTRN)THEN                                               
C                                                                       
C         LOWTRAN7 DOUBLE EXPONENTIAL MOLECULAR TRANSMITTANCES          
          DO 40 K=1,11                                                  
              TX(KPOINT(K))=1.                                          
              IF(CPS(K).GT.-20.)                                        
     1          TX(KPOINT(K))=DBLTX(W(IBND(K)),CPS(K),QA(K))            
   40     CONTINUE                                                      
      ENDIF                                                             
      RETURN                                                            
      END                                                               
      SUBROUTINE LAYCLD(K,EQLWCZ,RRATZ,ICLD1,GNDALT)                    
C                                                                       
C     ROUTINE TO DETERMINE CLOUD DENSITY AND RAIN RATE FOR LAYER K      
C                                                                       
C     ZM      COMMON /MODEL/ FINAL ALTITUDES FOR LOWTRAN                
C     ZK      EFFECTIVE CLOUD ALTITUDES                                 
C     ZCLD    CLOUD ALTITUDE ARRAY                                      
      INCLUDE 'PARAM.LST'                                               
      REAL ZCLD,CLD,CLDICE,RR                                           
      COMMON/CLDRR/ZCLD(1:NZCLD,0:1),CLD(1:NZCLD,0:5),                  
     1  CLDICE(1:NZCLD,0:1),RR(1:NZCLD,0:5)                             
      REAL ZM,PM,TM,RFNDX,DENSTY                                        
      COMMON/MODEL/ZM(LAYDIM),PM(LAYDIM),TM(LAYDIM),                    
     1  RFNDX(LAYDIM),DENSTY(KMAX,LAYDIM)                               
      IF(ICLD1.LE.0 .OR. ICLD1.GT.11)RETURN                             
      ZK=ZM(K)-GNDALT                                                   
      IF(ZK.LT.0.)ZK=0.                                                 
      IF(ICLD1.LE.5)THEN                                                
C                                                                       
C         ICLD1 IS 1- 5 ONE OF 5 SPECIFIC CLOUD MODELS IS CHOSEN        
          MC=ICLD1                                                      
          MR=6                                                          
      ELSE                                                              
C                                                                       
C         ICLD1 IS 6-11 ONE OF 5 SPECIFIC CLOUD/RAIN MODELS CHOSEN      
          MC=1                                                          
          IF(ICLD1.EQ.6)MC=3                                            
          IF(ICLD1.EQ.7 .OR. ICLD1.EQ.8)MC=5                            
          MR=ICLD1-5                                                    
      ENDIF                                                             
      EQLWCZ=0.                                                         
      RRATZ=0.                                                          
      IF(ZK.GE.ZCLD(1,1))THEN                                           
          MKM1=1                                                        
          DO 10 MK=2,16                                                 
              IF(ZK.LE.ZCLD(MK,1))THEN                                  
                  FAC=(ZCLD(MK,1)-ZK)/(ZCLD(MK,1)-ZCLD(MKM1,1))         
                  EQLWCZ=CLD(MK,MC)+FAC*(CLD(MKM1,MC)-CLD(MK,MC))       
                  IF(MR.LE.5)RRATZ=RR(MK,MR)+FAC*(RR(MKM1,MR)-RR(MK,MR))
                  RETURN                                                
              ENDIF                                                     
   10     MKM1=MK                                                       
      ENDIF                                                             
      RETURN                                                            
      END                                                               
      SUBROUTINE LAYVSA(K,RH,AHAZE,IHA1,ZNEW)                           
C                                                                       
C     RETURNS HAZE FOR VSA OPTION                                       
C                                                                       
      INCLUDE 'PARAM.LST'                                               
      REAL ZM,PM,TM,RFNDX,DENSTY                                        
      COMMON/MODEL/ZM(LAYDIM),PM(LAYDIM),TM(LAYDIM),                    
     1  RFNDX(LAYDIM),DENSTY(KMAX,LAYDIM)                               
      COMMON /CARD1/ MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB  
     1  ,MODTRN                                                         
      LOGICAL MODTRN                                                    
      COMMON /ZVSALY/ ZVSA(10),RHVSA(10),AHVSA(10),IHVSA(10)            
C                                                                       
      DIMENSION ZNEW(LAYDIM)                                            
      RH=0.                                                             
      AHAZE=0                                                           
      IHA1=0                                                            
C     HMXVSA=ZVSA(9)                                                    
      IF(MODEL.EQ.0.OR.MODEL.EQ.7) RETURN                               
      IF(K.GT.9) RETURN                                                 
      ZM(K)=ZVSA(K)                                                     
      RH=RHVSA(K)                                                       
      AHAZE=AHVSA(K)                                                    
      IHA1=IHVSA(K)                                                     
      RETURN                                                            
      END                                                               
      SUBROUTINE  LEPOLY( NMU, M, MAXMU, TWONM1, MU, YLM )              
                                                                        
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
C       COMPUTES THE NORMALIZED ASSOCIATED LEGENDRE POLYNOMIAL,         
C       DEFINED IN TERMS OF THE ASSOCIATED LEGENDRE POLYNOMIAL          
C       PLM = P-SUB-L-SUPER-M AS                                        
                                                                        
C             YLM(MU) = SQRT( (L-M)!/(L+M)! ) * PLM(MU)                 
                                                                        
C       FOR FIXED ORDER -M- AND ALL DEGREES FROM L = M TO TWONM1.       
C       WHEN M.GT.0, ASSUMES THAT Y-SUB(M-1)-SUPER(M-1) IS AVAILABLE    
C       FROM A PRIOR CALL TO THE ROUTINE.                               
                                                                        
C       REFERENCE: DAVE, J.V. AND B.H. ARMSTRONG, COMPUTATIONS OF       
C                  HIGH-ORDER ASSOCIATED LEGENDRE POLYNOMIALS,          
C                  J. QUANT. SPECTROSC. RADIAT. TRANSFER 10,            
C                  557-562, 1970.  (HEREAFTER D/A)                      
                                                                        
C       METHOD: VARYING DEGREE RECURRENCE RELATIONSHIP.                 
                                                                        
C       NOTE 1: THE D/A FORMULAS ARE TRANSFORMED BY                     
C               SETTING  M = N-1; L = K-1.                              
C       NOTE 2: ASSUMES THAT ROUTINE IS CALLED FIRST WITH  M = 0,       
C               THEN WITH  M = 1, ETC. UP TO  M = TWONM1.               
C       NOTE 3: LOOPS ARE WRITTEN IN SUCH A WAY AS TO VECTORIZE.        
                                                                        
C  I N P U T     V A R I A B L E S:                                     
                                                                        
C       NMU    :  NUMBER OF ARGUMENTS OF -YLM-                          
C       M      :  ORDER OF -YLM-                                        
C       MAXMU  :  FIRST DIMENSION OF -YLM-                              
C       TWONM1 :  MAX DEGREE OF -YLM-                                   
C       MU(I)  :  I = 1 TO NMU, ARGUMENTS OF -YLM-                      
C       IF M.GT.0, YLM(M-1,I) FOR I = 1 TO NMU IS REQUIRED              
                                                                        
C  O U T P U T     V A R I A B L E:                                     
                                                                        
C       YLM(L,I) :  L = M TO TWONM1, NORMALIZED ASSOCIATED LEGENDRE     
C                   POLYNOMIALS EVALUATED AT ARGUMENT -MU(I)-           
C+---------------------------------------------------------------------+
      REAL*8     MU(*), YLM( 0:MAXMU,* )                                
      INTEGER  M, NMU, TWONM1                                           
      PARAMETER  ( MAXSQT = 1000 )                                      
      REAL*8     SQT( MAXSQT )                                          
      LOGICAL  PASS1                                                    
      SAVE  SQT, PASS1                                                  
      DATA  PASS1 / .TRUE. /                                            
                                                                        
                                                                        
      IF ( PASS1 )  THEN                                                
         PASS1 = .FALSE.                                                
         DO 1  NS = 1, MAXSQT                                           
            SQT( NS ) = DSQRT( DBLE(NS) )                               
    1    CONTINUE                                                       
      ENDIF                                                             
                                                                        
      IF ( 2*TWONM1 .GT. MAXSQT )                                       
     $   CALL ERRMSG( 'LEPOLY--NEED TO INCREASE PARAM MAXSQT', .TRUE. ) 
                                                                        
      IF ( M .EQ. 0 )  THEN                                             
C                             ** UPWARD RECURRENCE FOR ORDINARY         
C                             ** LEGENDRE POLYNOMIALS                   
         DO  10  I = 1, NMU                                             
            YLM( 0,I ) = 1.                                             
            YLM( 1,I ) = MU( I )                                        
  10     CONTINUE                                                       
                                                                        
         DO  20  L = 2, TWONM1                                          
            DO  20  I = 1, NMU                                          
               YLM( L,I ) = ( ( 2*L-1 ) * MU(I) * YLM( L-1,I )          
     $                      - ( L-1 ) * YLM( L-2,I ) ) / L              
  20     CONTINUE                                                       
                                                                        
      ELSE                                                              
                                                                        
         DO  30  I = 1, NMU                                             
C                               ** Y-SUB-M-SUPER-M; DERIVED FROM        
C                               ** D/A EQS. (11,12)                     
                                                                        
            YLM( M,I) = - SQT( 2*M-1 ) / SQT( 2*M )                     
     $                  * DSQRT( 1. - MU(I)**2 ) * YLM( M-1,I )         
                                                                        
C                              ** Y-SUB-(M+1)-SUPER-M; DERIVED FROM     
C                              ** D/A EQS. (13,14) USING EQS. (11,12)   
                                                                        
            YLM( M+1,I ) = SQT( 2*M+1 ) * MU(I) * YLM( M,I )            
30       CONTINUE                                                       
C                                   ** UPWARD RECURRENCE; D/A EQ. (10)  
         DO  40  L = M+2, TWONM1                                        
            TMP1 = SQT( L-M ) * SQT( L+M )                              
            TMP2 = SQT( L-M-1 ) * SQT( L+M-1 )                          
            DO  40  I = 1, NMU                                          
               YLM( L,I ) = ( ( 2*L-1 ) * MU(I) * YLM( L-1,I )          
     $                        - TMP2 * YLM( L-2,I ) ) / TMP1            
40       CONTINUE                                                       
                                                                        
      END IF                                                            
                                                                        
      RETURN                                                            
      END                                                               
      SUBROUTINE LOCATE(OLAT,OLONG,OPSI,DBETA,RLAT,RLONG)               
C                                                                       
C     THIS ROUTINE CALCULATES THE LATITUDE AND LONGITUDE AT A POINT "R" 
C     ALONG A LINE OF SIGHT FROM AN OBSERVER AT "O"                     
C                                                                       
C     INPUT                                                             
C       OLAT    THE LATITUDE AT "O" [DEG NORTH, -90 TO 90]              
C       OLONG   THE LONGITUDE AT "O" [DEG WEST, 0 TO 360]               
C       OPSI    THE PATH AZIMUTH AT "O" [DEG EAST OF NORTH, 0 TO 360]   
C       DBETA   THE EARTH CENTER ANGLE FROM "O" TO "R" [DEG, 0 TO 180]  
C                                                                       
C     OUTPUT                                                            
C       RLAT    THE LATITUDE AT "R" [DEG, -90 TO 90]                    
C       RLONG   THE LONGITUDE AT "R" [DEG WEST, 0 TO 360]               
      REAL OLAT,OLONG,OPSI,DBETA,RLAT,RLONG                             
C                                                                       
C     CAUTION:  OLONG AND OPSI ARE NOT WELL DEFINED AT THE NORTH        
C               (OLAT=90) AND SOUTH (OLAT=-90) POLES.  THIS ROUTINE     
C               RETURNS THE VALUES OF LATITUDE AND LONGITUDE OBTAINED   
C               IN THE LIMIT AS OLAT APPROACHES + OR - 90.              
C                                                                       
C     DECLARE LOCAL VARIABLES                                           
      REAL DEG,SOLAT,COLAT,SOLONG,COLONG,SDBETA,CDBETA,                 
     1  SOPSI,COPSI,SRLAT,XP,YP,X,Y                                     
      DATA DEG/57.2957795/                                              
      SOLAT=SIN(OLAT/DEG)                                               
      COLAT=COS(OLAT/DEG)                                               
      SOLONG=SIN(OLONG/DEG)                                             
      COLONG=COS(OLONG/DEG)                                             
      SDBETA=SIN(DBETA/DEG)                                             
      CDBETA=COS(DBETA/DEG)                                             
      SOPSI=SIN(OPSI/DEG)                                               
      COPSI=COS(OPSI/DEG)                                               
      SRLAT=SOLAT*CDBETA+COLAT*SDBETA*COPSI                             
      IF(SRLAT.GE.1.)THEN                                               
          RLAT=90.                                                      
      ELSEIF(SRLAT.GT.-1.)THEN                                          
          RLAT=DEG*ASIN(SRLAT)                                          
      ELSE                                                              
          RLAT=-90.                                                     
      ENDIF                                                             
      XP=COLAT*CDBETA-SOLAT*SDBETA*COPSI                                
      YP=SDBETA*SOPSI                                                   
      X=COLONG*XP+SOLONG*YP                                             
      Y=SOLONG*XP-COLONG*YP                                             
      IF(X.EQ.0.)THEN                                                   
          RLONG=90.                                                     
          IF(Y.LT.0.)RLONG=270.                                         
      ELSE                                                              
          RLONG=DEG*ATAN(Y/X)                                           
          IF(X.LT.0)RLONG=RLONG+180.                                    
          IF(RLONG.LT.0.)RLONG=RLONG+360.                               
      ENDIF                                                             
      RETURN                                                            
      END                                                               

      SUBROUTINE LOOP(LOOP0,IV,IVX,IKMX,MXFREQ,SUMTMS,SUMMS,TRANSM,     
     1  IPH,SUMSSS,IVTEST,UNIF,TRACE,TRANSX,RADCUM,S0,FRAC,UANG,        
     2  DIS,NSTR,GROUND,TSNOBS,TSNREF,FDNTRT,FDNSRT,KNTRVL)             
C                                                                       
C     THIS ROUTINE PERFORMS THE LOOP OVER LAYERS FOR EACH FREQUENCY     
      INCLUDE 'PARAM.LST'                                               
      INTEGER IV,IVX,IKMX,MXFREQ,IPH,NSTR,KNTRVL                        
      REAL SUMTMS,SUMMS,SUMSSS,UNIF,TRACE,TRANSX,                       
     1  RADCUM,S0,FRAC,TSNOBS,TSNREF,FDNTRT,FDNSRT                      
      DOUBLE PRECISION UANG                                             
      LOGICAL LOOP0,TRANSM,IVTEST,DIS,GROUND                            
C                                                                       
C     CONVENTION                                                        
C     MMOLX=MAXIMUM NUMBER OF NEW SPECIES (IDENTIFIED BY "X")           
C     MMOL =MAXIMUM NUMBER OF OLD SPECIES (W/O SUFFIX "X")              
C     THESE DEFINE THE MAXIMUM ARRAY SIZES.                             
C                                                                       
C     THE ACTUAL NUMBER OF PARAMETERS ARE:                              
C     NSPEC=ACTUAL NUMBER OF OLD SPECIES (12), CAN'T EXCEED MMOL        
C     NSPECX=ACTUAL NUMBER OF "X" SPECIES,     CAN'T EXCEED MMOLX       
C                                                                       
C     PARAMETER KMAX DENOTES THE NUMBER OF MODTRAN "SPECIES".           
C     THIS INCLUDES THE 12 ORIGINAL BAND MODEL PARAMETER MOLECULES      
C     PLUS A HOST OF OTHER ABSORPTION AND/OR SCATTERING SOURCES.        
      REAL TXX,WX,WPATHX                                                
      COMMON/NONAME/TXX(MMOLX),WX(MMOLX),WPATHX(LAYTHR,MMOLX)           
      INTEGER KPOINT                                                    
      REAL WAVLEN,EXTC,ABSC,ASYM,AWCCON,TX,W,RELHUM,PATM,TBBY,WPATH     
      COMMON/BASE/WAVLEN(MXWVLN),EXTC(NAER,MXWVLN),ABSC(NAER,MXWVLN),   
     1  ASYM(NAER,MXWVLN),AWCCON(NAER),KPOINT(NSPC),TX(KMAX),W(KMAX),   
     2  RELHUM(LAYDIM),PATM(LAYTHR),TBBY(LAYTHR),WPATH(LAYTHR,KMAX)     
C                                                                       
C       PI       THE CONSTANT PI.                                       
C       DEG      NUMBER OF DEGREES IN ONE RADIAN.                       
C       BIGNUM   MAXIMUM SINGLE PRECISION NUMBER.                       
C       BIGEXP   MAXIMUM EXPONENTIAL ARGUMENT WITHOUT OVERFLOW.         
      REAL PI,DEG,BIGNUM,BIGEXP                                         
      COMMON/CNSTNS/PI,DEG,BIGNUM,BIGEXP                                
C                                                                       
C     FILE UNIT NUMBERS                                                 
C       IRD      MODTRAN INPUT FILE, tape5, UNIT NUMBER (1).            
C       IPR      MODTRAN STANDARD OUTPUT FILE, tape6, UNIT NUMBER (2).  
C       IPU      MODTRAN SPECTRAL DATA FILE, tape7, UNIT NUMBER (7).    
C       NPR      PRINTOUT LEVEL SWITCH (1=small,0=normal,-1=large).     
C       IPR1     MODTRAN FLUX OUTPUT FILE, tape8, UNIT NUMBER (8).      
C       ISCRCH   MULTIPLE SCATTERING SCRATCH FILE UNIT NUMBER (10).     
C       ITB      MOLECULAR BAND MODEL PARAMETER FILE UNIT NUMBER (9).   
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                           
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                       
      INTEGER MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT                     
      REAL TBOUND,SALB                                                  
      LOGICAL MODTRN                                                    
      COMMON/CARD1/MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB,   
     1  MODTRN                                                          
      INTEGER IKMAX,ML,ISSGEO,IMULT                                     
      COMMON/CNTRL/IKMAX,ML,ISSGEO,IMULT                                
C                                                                       
C     /PATH/                                                            
C       QTHETA  COSINE OF PATH ZENITH AT PATH BOUNDARIES.               
C       AHT     ALTITUDES AT PATH BOUNDARIES.                           
C       TPH     TEMPERATURE AT PATH BOUNDARIES.                         
C       IMAP    MAPPING FROM PATH SEGMENTS TO LAYERS.                   
      INTEGER IMAP                                                      
      REAL QTHETA,AHT,TPH                                               
      COMMON/PATH/QTHETA(LAYTWO),AHT(LAYTWO),TPH(LAYTWO),IMAP(LAYTWO)   
      INTEGER JTURN,LJ                                                  
      REAL ATHETA,ADBETA,PHASFN,AH1,ARH,ANGSUN,TBBYS,PATMS,WPATHS       
      COMMON/SOLS/JTURN,LJ(LAYTWO+1),ATHETA(LAYDIM+1),                  
     1  ADBETA(LAYDIM+1),PHASFN(LAYTWO,4),AH1(LAYTWO),ARH(LAYTWO),      
     2  ANGSUN,TBBYS(LAYTHR,12),PATMS(LAYTHR,12),WPATHS(LAYTHR,KMAX)    
C                                                                       
C     COMMON /MSRD/                                                     
C       CSZEN0  LAYER BOUNDARY COSINE OF SOLAR/LUNAR ZENITH.            
C       CSZEN   LAYER AVERAGE COSINE OF SOLAR/LUNAR ZENITH.             
C       CSZENX  AVERAGE SOLAR/LUNAR COSINE ZENITH EXITING               
C               (AWAY FROM EARTH) THE CURRENT LAYER.                    
C       BBGRND  THERMAL EMISSION (FLUX) AT THE GROUND [W CM-2 / CM-1].  
C       BBNDRY  LAYER BOUNDARY THERMAL EMISSION (FLUX) [W CM-2 / CM-1]. 
C       COSBAR  LAYER HENYEY-GREENSTEIN ASYMMETRY FACTOR.               
C       TSCAT   LAYER SCATTERING OPTICAL DEPTH.                         
C       TCONT   LAYER CONTINUUM OPTICAL DEPTH.                          
C       TAUT    LAYER TOTAL OPTICAL DEPTH.                              
C       DEPRAT  FRACTIONAL DECREASE IN WEAK-LINE OPTICAL DEPTH TO SUN.  
C       S0DEP   OPTICAL DEPTH FROM LAYER BOUNDARY TO SUN.               
C       S0TRN   TRANSMITTED SOLAR IRRADIANCES [W CM-2 / CM-1]           
C       UPF     LAYER BOUNDARY UPWARD THERMAL FLUX [W CM-2 / CM-1].     
C       DNF     LAYER BOUNDARY DOWNWARD THERMAL FLUX [W CM-2 / CM-1].   
C       UPFS    LAYER BOUNDARY UPWARD SOLAR FLUX [W CM-2 / CM-1].       
C       DNFS    LAYER BOUNDARY DOWNWARD SOLAR FLUX [W CM-2 / CM-1].     
      REAL CSZEN0,CSZEN,CSZENX,BBGRND,BBNDRY,COSBAR,TSCAT,              
     1  TCONT,TAUT,DEPRAT,S0DEP,S0TRN,UPF,DNF,UPFS,DNFS                 
      COMMON/MSRD/CSZEN0(LAYDIM),CSZEN(LAYDIM),CSZENX(LAYDIM),          
     1  BBGRND,BBNDRY(LAYDIM),COSBAR(LAYDIM),TSCAT(LAYDIM),             
     2  TCONT(LAYDIM),TAUT(NKSUB,LAYDIM),DEPRAT(LAYDIM),                
     3  S0DEP(NKSUB,LAYDIM),S0TRN(NKSUB,LAYDIM),UPF(NKSUB,LAYDIM),      
     4  DNF(NKSUB,LAYDIM),UPFS(NKSUB,LAYDIM),DNFS(NKSUB,LAYDIM)         
      REAL TXNEW,TXOLD                                                  
      COMMON/LAY5/TXNEW(20,LAYTHR,3),TXOLD(20,LAYTHR,3)                 
      SAVE /LAY5/                                                       
      LOGICAL LSAME                                                     
      COMMON/SOLAR/LSAME                                                
      REAL ZM,PM,TM,RFNDX,DENSTY                                        
      COMMON/MODEL/ZM(LAYDIM),PM(LAYDIM),TM(LAYDIM),                    
     1  RFNDX(LAYDIM),DENSTY(KMAX,LAYDIM)                               
C                                                                       
C     COMMON /CORKDT/                                                   
C       WTKSUB   SPECTRAL BIN SUB-INTERVAL FRACTIONAL WIDTHS.           
C       DEPLAY   INCREMENTAL EXTINCTION OPTICAL DEPTHS                  
C       TRNLAY   INCREMENTAL TRANSMITTANCES                             
C       TRNCUM   CUMULATIVE TRANSMITTANCES                              
      REAL WTKSUB,DEPLAY,TRNLAY,TRNCUM                                  
      COMMON/CORKDT/WTKSUB(NKSUB),DEPLAY(NKSUB),                        
     1  TRNLAY(NKSUB),TRNCUM(NKSUB)                                     
      SAVE /CORKDT/                                                     
C                                                                       
C       SUBINT   SPECTRAL BIN "K" SUB-INTERVAL FRACTIONAL WIDTHS.       
C       UPFLX    LAYER BOUNDARY UPWARD THERMAL FLUX [W CM-2 / CM-1].    
C       DNFLX    LAYER BOUNDARY DOWNWARD THERMAL FLUX [W CM-2 / CM-1].  
C       UPFLXS   BOUNDARY UPWARD SCATTERED SOLAR FLUX [W CM-2 / CM-1].  
C       DNFLXS   BOUNDARY DOWNWARD SCATTERED SOLAR FLUX [W CM-2 / CM-1].
C       NTFLX    LAYER BOUNDARY NET (THERMAL PLUS SCATTERED SOLAR       
C                PLUS DIRECT SOLAR) UPWARD FLUX [W CM-2 / CM-1].        
      REAL SUBINT,UPFLX,DNFLX,UPFLXS,DNFLXS,NTFLX                       
      COMMON/NETFLX/SUBINT(NKSUB),UPFLX(LAYDIM),DNFLX(LAYDIM),          
     1  UPFLXS(LAYDIM),DNFLXS(LAYDIM),NTFLX(LAYDIM)                     
C                                                                       
C     DECLARE FUNCTION NAMES                                            
      REAL BETABS,BBFN                                                  
C                                                                       
C     DECLARE LOCAL VARIABLES                                           
      INTEGER I,J,K,IPATH,MSOFF,IK,IKP1,N,IKOFF,INDEXX,                 
     1  INTRVL,NFRNT,NBACK,NP1                                          
      REAL V,STORE,BLAYER,BBOUND,DTAU,THMLAY,SOLLAY,COEF,WTTRAN,        
     1  UP,DN,THMBND,SOLBND,THMDIF,SOLDIF,BNCOEF,DFCOEF,THMSCT,         
     2  TRNOLD,TRNNEW,TX9LAY,TX9CUM,OPTDEP,EMSLAY,B0,OMEGA,TMOL,        
     3  FACTOR,SMTRNL,SMTHML,SMSOLL                                     
C                                                                       
C     LOOP0 IS .TRUE. FOR FIRST CALL FROM ROUTINE TRANS                 
      IF(LOOP0)THEN                                                     
C                                                                       
C         DEFINE NUMBER OF CORRELATED-K METHOD SPECTRAL                 
C         BINS (=1 IF METHOD IS NOT BEING USED).                        
          SUBINT(1)=1.                                                  
          IF(KNTRVL.GT.1)THEN                                           
              DO 10 INTRVL=1,KNTRVL                                     
                  SUBINT(INTRVL)=WTKSUB(INTRVL)                         
   10         CONTINUE                                                  
          ENDIF                                                         
C                                                                       
C         INITIALIZE TRANSMISSION ARRAYS                                
          DO 20 I=1,20                                                  
              DO 20 J=1,LAYTHR                                          
                  DO 20 K=1,3                                           
                      TXOLD(I,J,K)=0.                                   
                      TXNEW(I,J,K)=0.                                   
   20     CONTINUE                                                      
          DO 30 K=1,NSPECX                                              
              TXX(K)=1.                                                 
   30     CONTINUE                                                      
C                                                                       
C         INITIALIZATION FOR MULTIPLE SCATTERING CALCULATIONS           
          IF(IMULT.NE.0)CALL MAPMS(ML,IKMAX)                            
C                                                                       
C         INITIALIZATION FOR LOWTRAN CALCULATIONS                       
          IF(.NOT.MODTRN)CALL FRQ5DT(LOOP0,IV)                          
          RETURN                                                        
      ENDIF                                                             
C                                                                       
C     DEFINE THE LAYER INDEPENDENT 5 CM-1 DATA                          
      IF(IVTEST)CALL FRQ5DT(LOOP0,IV)                                   
      V=IVX                                                             
      IPATH=1                                                           
C                                                                       
C     MSOFF IS EQUAL LAYTWO FOR THE MULTIPLE SCATTERING LAYER LOOP.     
      IF(.NOT.LSAME)THEN                                                
          MSOFF=ABS(IMULT)*LAYTWO                                       
      ELSE                                                              
C                                                                       
C         IF (LSAME) FLUX DATA ARE UNCHANGED FROM THE PREVIOUS RUN.     
C         SET MSOFF TO 0 TO SKIP THE MULTIPLE SCATTERING CALCULATION.   
          MSOFF=0                                                       
          READ(ISCRCH)(COSBAR(IK),TSCAT(IK),                            
     1      (TAUT(INTRVL,IK),INTRVL=1,KNTRVL),IK=1,ML-1),               
     2      ((UPF(INTRVL,IK),DNF(INTRVL,IK),                            
     3      UPFS(INTRVL,IK),DNFS(INTRVL,IK),INTRVL=1,KNTRVL),IK=1,ML)   
      ENDIF                                                             
C                                                                       
C     FOR EACH WAVENUMBER, AN INITIAL CALL (IK=0) TO BMOD IS REQUIRED   
      IK=0                                                              
   40 IF(MODTRN)CALL BMOD(IK,IKMX,IPATH,IVX,MSOFF,MXFREQ)               
C                                                                       
C     INITIALIZE PARAMETERS                                             
      IPATH=1                                                           
      TRNOLD=1.                                                         
      TX9CUM=1.                                                         
      IF(.NOT.TRANSM)THEN                                               
          SUMMS=0.                                                      
          SUMTMS=0.                                                     
          DO 50 INTRVL=1,KNTRVL                                         
              TRNCUM(INTRVL)=1.                                         
   50     CONTINUE                                                      
      ENDIF                                                             
C                                                                       
C     BEGINNING OF LAYER LOOP                                           
      IF(MSOFF.GT.0)THEN                                                
          BBNDRY(1)=PI*BBFN(TM(1),V)                                    
          IF(GROUND .AND. TBOUND.GT.0.)THEN                             
              BBGRND=PI*BBFN(TBOUND,V)                                  
          ELSE                                                          
              BBGRND=BBNDRY(1)                                          
          ENDIF                                                         
      ENDIF                                                             
      DO 180 IK=1,IKMAX                                                 
C                                                                       
C         MSOFF IS A LAYER OFFSET PARAMETER EQUAL TO 0 FOR              
C         THE LINE-OF-SIGHT PATH AND EQUAL TO LAYTWO FOR THE            
C         MULTIPLE SCATTERING VERTICAL PATH FROM GROUND TO SPACE.       
          IKOFF=IK+MSOFF                                                
C                                                                       
C         FOR TRANSMISSION RUNS, W(K) WAS DEFINED IN ROUTINE GEO.       
          IF(TRANSM)GOTO110                                             
C                                                                       
C         LOAD APPROPRIATE ABSORBER AMOUNTS INTO W(K)                   
          IF(IEMSCT.EQ.1)GOTO90                                         
C                                                                       
C         FOR FIRST LAYER (IK=1) CALCULATE SUN-TO-OBSERVER TRANSMITTANCE
          IF(IPATH.EQ.1)THEN                                            
              INDEXX=MSOFF+1                                            
              IF(WPATHS(INDEXX,36).GE.0.)THEN                           
C                                                                       
C                 LOAD W WITH SUN-TO-OBSERVER PATH ABSORBER AMOUNTS     
                  DO 60 K=1,KMAX                                        
   60             W(K)=WPATHS(INDEXX,K)                                 
                  GOTO110                                               
              ENDIF                                                     
C                                                                       
C             IN SSGEO, SCATTERING POINT INDEXX WAS DETERMINED TO       
C             BE IN THE SHADE AND WPATHS(INDEXX,36) WAS SET TO -5.      
              CALL SHADE(IPH,IK,MSOFF,IPATH,                            
     1          KNTRVL,V,TSNOBS,TSNREF,SUMSSS)                          
          ENDIF                                                         
   70     IPATH=2                                                       
          INDEXX=MSOFF+IK+1                                             
          IF(WPATHS(INDEXX,36).GE.0.)THEN                               
C                                                                       
C             LOAD W WITH SUN-TO-SCATTERING POINT ABSORBER AMOUNTS.     
C             FOR THE OPTICAL PATH (MSOFF=0) WHEN THE CORRELATED-K      
C             APPROACH IS NOT USED (KNTRVL=1), MOST OF THE WPATHS ALSO  
C             INCLUDE THE OBSERVER-TO-SCATTERING POINT ABSORBER AMOUNTS.
              DO 80 K=1,KMAX                                            
                  W(K)=WPATHS(INDEXX,K)                                 
   80         CONTINUE                                                  
              GOTO110                                                   
          ENDIF                                                         
C                                                                       
C         IN SSGEO, THE W'S WERE SET TO -5 IF THE SUN WAS BLOCKED       
          CALL SHADE(IPH,IK,MSOFF,IPATH,KNTRVL,V,TSNOBS,TSNREF,SUMSSS)  
C                                                                       
C         LOAD W(K) WITH OPTICAL PATH ABSORBER AMOUNT                   
   90     IPATH=3                                                       
          DO 100 K=1,KMAX                                               
              W(K)=WPATH(IKOFF,K)                                       
  100     CONTINUE                                                      
C                                                                       
C         DEFINE THE LAYER DEPENDENT 5 CM-1 DATA                        
  110     CONTINUE                                                      
          IF(IVTEST)CALL LAY5DT(V,IKOFF,IPATH)                          
C                                                                       
C         DEFINE TX ARRAY                                               
C           1   ASYMMETRY PARAMETER WEIGHTED BY SCATTERING DEPTH        
C           2   INCREMENTAL AEROSOL SCATTERING OPTICAL DEPTH            
C           3   TOTAL O2 CONTINUUM TRANSMITTANCE                        
C           4   N2 CONTINUUM TRANSMITTANCE                              
C           5   TOTAL H2O CONTINUUM TRANSMITTANCE                       
C           6   RAYLEIGH MOLECULAR SCATTERED TRANSMITTANCE              
C           7   AEROSOL EXTINCTION                                      
C           8   TOTAL OZONE CONTINUUM TRANSMITTANCE                     
C           9   PRODUCT OF ALL CONTINUUM TRANSMITTANCES EXCEPT O2 & HNO3
C          10   AEROSOL ABSORPTION                                      
C          11   HNO3 TRANSMITTANCE                                      
C          12   MOLECULAR CONTINUUM OPTICAL DEPTH                       
C          13   INCREMENTAL AEROSOL+CLOUD EXTINCTION OPTICAL DEPTH      
C          14   TOTAL CONTINUUM OPTICAL DEPTH                           
C          15   LAYER RAYLEIGH MOLECULAR SCATTERING OPTICAL DEPTH       
C          16   CIRRUS CLOUD TRANSMITTANCE (ICLD=20 ONLY)               
C          64   UV/VIS NO2 TRANSMITTANCE                                
C          65   UV/VIS SO2 TRANSMITTANCE                                
C          66   INCREMENTAL WATER DROPLET SCATTERING OPTICAL DEPTH      
C          67   INCREMENTAL ICE PARTICLE SCATTERING OPTICAL DEPTH       
C          ---  MOLECULAR LINE CENTER TRANSMITTANCE  ---                
C          17=H2O  36=CO2  31=O3   47=N2O  44=CO   46=CH4               
C          50=O2   54=NO   56=SO2  55=NO2  52=NH3  11=HNO3              
          DO 120 K=1,16                                                 
              STORE=TXNEW(K,IKOFF,IPATH)                                
              TX(K)=STORE+FRAC*(TXOLD(K,IKOFF,IPATH)-STORE)             
  120     CONTINUE                                                      
          STORE=TXNEW(17,IKOFF,IPATH)                                   
          TX(64)=STORE+FRAC*(TXOLD(17,IKOFF,IPATH)-STORE)               
          STORE=TXNEW(18,IKOFF,IPATH)                                   
          TX(65)=STORE+FRAC*(TXOLD(18,IKOFF,IPATH)-STORE)               
          STORE=TXNEW(19,IKOFF,IPATH)                                   
          TX(66)=STORE+FRAC*(TXOLD(19,IKOFF,IPATH)-STORE)               
          STORE=TXNEW(20,IKOFF,IPATH)                                   
          TX(67)=STORE+FRAC*(TXOLD(20,IKOFF,IPATH)-STORE)               
CORK      IF(KNTRVL.GT.1)THEN                                           
CORK          IF(IPATH.LT.3)THEN                                        
C                                                                       
C                 SOLAR PATH                                            
CORK              CALL BMCRKS(KNTRVL,INDEXX)                            
CORK              CALL SSCORK(IPH,IK,MSOFF,                             
CORK 1              IPATH,KNTRVL,V,S0,TSNOBS,SUMSSS)                    
CORK              GOTO(70,90),IPATH                                     
CORK          ELSE                                                      
C                                                                       
C                 OPTICAL (LINE-OF-SIGHT) PATH                          
CORK              CALL BMCORK(KNTRVL,IK,MSOFF)                          
CORK              IF(IEMSCT.EQ.2)CALL SSCORK(IPH,IK,MSOFF,              
CORK 1              IPATH,KNTRVL,V,S0,TSNOBS,SUMSSS)                    
CORK          ENDIF                                                     
CORK      ELSE                                                          
              IF(MODTRN)CALL BMOD(IK,IKMX,IPATH,IVX,MSOFF,MXFREQ)       
C                                                                       
C             BEER'S LAW SPECIES CONTRIBUTIONS                          
              TRANSX=TXX(1)                                             
              DO 130 K=2,NSPECX                                         
                  TRANSX=TRANSX*TXX(K)                                  
  130         CONTINUE                                                  
C                                                                       
C             COMBINE TRANSMISSIONS IF NOT USING CORRELATED-K METHOD    
C               UNIF    UNIFORMLY MIXED GASES TRANSMITTANCE             
C               TRACE   TRACE GASES TRANSMITTANCE                       
              UNIF=TX(36)*TX(44)*TX(46)*TX(47)*TX(50)                   
              TRACE=TX(52)*TX(54)*TX(55)*TX(56)*TX(11)                  
              IF(IPATH.EQ.3)THEN                                        
                  IF(TRNOLD.LE.0.)THEN                                  
C                     TRANSMITTANCE OF THE CURRENT LAYER CANNOT         
C                     BE DETERMINED.  ASSUME IT IS ZERO.                
                      TRNLAY(1)=0.                                      
                      DEPLAY(1)=BIGEXP                                  
                  ELSE                                                  
                      DEPLAY(1)=0.                                      
                      TRNLAY(1)=1.                                      
                      TRNNEW=TX(17)*UNIF*TX(31)*TRACE*TRANSX            
                      IF(TRNNEW.LT.TRNOLD)THEN                          
C                                                                       
C                         DETERMINE DECREASE IN TRANSMITTANCE.          
                          TRNLAY(1)=TRNNEW/TRNOLD                       
                          DEPLAY(1)=BIGEXP                              
                          IF(TRNLAY(1).GT.0.)DEPLAY(1)=-LOG(TRNLAY(1))  
                          TRNOLD=TRNNEW                                 
                      ENDIF                                             
                  ENDIF                                                 
                  DEPLAY(1)=DEPLAY(1)+TX(14)                            
                  IF(MSOFF.EQ.0)THEN                                    
                      TX9LAY=TX(9)*TX(3)*TX(64)*TX(65)                  
                      TX9CUM=TX9CUM*TX9LAY                              
                      TX(9)=TX9CUM*TRNNEW                               
                      TRNLAY(1)=TRNLAY(1)*TX9LAY                        
                      IF(IEMSCT.EQ.2)CALL SSRAD(IPH,IK,MSOFF,           
     1                  IPATH,V,S0,TRNNEW,TSNOBS,TSNREF,SUMSSS)         
                  ENDIF                                                 
              ELSEIF(TRANSM)THEN                                        
C                                                                       
C                 DEFINE SPECIES DEPENDENT TRANSMITTANCES               
C                 FOR TRANSMISSION ONLY CALCULATIONS.                   
                  UNIF=UNIF*TX(3)                                       
                  TRACE=TRACE*TX(64)*TX(65)                             
                  TX(9)=TX(17)*UNIF*TX(31)*TX(9)*TRACE*TRANSX           
C                                                                       
C                 COMBINE IR AND UV/VIS CONTRIBUTIONS                   
C                 FOR NO2, SO2 AND O2.                                  
                  TX(64)=TX(64)*TX(55)                                  
                  TX(65)=TX(65)*TX(56)                                  
                  TX(50)=TX(50)*TX(3)                                   
C                                                                       
C                 OZONE CONTRIBUTIONS ARE MODELED WITH                  
C                 THE MODTRAN BAND MODEL BELOW 9170 CM-1                
C                 AND AS A CONTINUUM ABOVE 9170 CM-1.                   
                  IF(IV.GE.9170)TX(31)=TX(8)                            
C                                                                       
C                 IF TRANSMISSION ONLY CALCULATION, RETURN              
                  RETURN                                                
              ELSEIF(IEMSCT.EQ.2)THEN                                   
C                                                                       
C                 CALCULATE TMOL, THE MOLECULAR TRANSMITTANCES          
C                 TO THE SUN.  VALUES OF TMOL LESS THAN 1.E-8           
C                 ARE NOT ACCURATE AND ARE SET TO ZERO.                 
                  TMOL=TX(17)*UNIF*TX(31)*TRACE*TRANSX                  
                  IF(TMOL.LT.1.E-8)TMOL=0.                              
                  CALL SSRAD(IPH,IK,MSOFF,IPATH,                        
     1              V,S0,TMOL,TSNOBS,TSNREF,SUMSSS)                     
                  GOTO(70,90),IPATH                                     
              ENDIF                                                     
CORK      ENDIF                                                         
C                                                                       
C         INITIALIZE TOTAL TRANSMITTANCE                                
          TX(9)=0.                                                      
          IF(MSOFF.GT.0)THEN                                            
C                                                                       
C             SET UP FOR MULTIPLE SCATTERING VERTICAL PATH CALCULATION  
              IKP1=IK+1                                                 
              BBNDRY(IKP1)=PI*BBFN(TM(IKP1),V)                          
CORK          CALL THMFLX(KNTRVL,IK,IKP1,ML,V,                          
CORK 1          BBGRND,BBNDRY(IK),BBNDRY(IKP1))                         
              TSCAT(IK)=TX(2)+TX(66)+TX(67)+TX(15)                      
              COSBAR(IK)=0.                                             
              IF(TSCAT(IK).GT.0.)COSBAR(IK)=TX(1)/TSCAT(IK)             
              IF(MODTRN .OR. DIS)THEN                                   
                  DO 140 INTRVL=1,KNTRVL                                
                      TAUT(INTRVL,IK)=DEPLAY(INTRVL)                    
  140             CONTINUE                                              
C                                                                       
C                 NUMERICAL INSTABILITIES CAN CAUSE TSCAT TO EXCEED     
C                 TAUT; THE FOLLOWING PROTECTS AGAINST THIS ANOMALY.    
                  IF(TSCAT(IK).GT.TAUT(1,IK))TSCAT(IK)=TAUT(1,IK)       
              ELSE                                                      
                  TCONT(IK)=TX(12)+TX(13)+TX(15)                        
              ENDIF                                                     
C                                                                       
C             INITIALIZE NET FLUX ARRAY                                 
              UPFLX(IK)=0.                                              
              DNFLX(IK)=0.                                              
              UPFLXS(IK)=0.                                             
              DNFLXS(IK)=0.                                             
              NTFLX(IK)=0.                                              
              GOTO180                                                   
          ELSEIF(IMULT.EQ.0)THEN                                        
C                                                                       
C             NO MULTIPLE SCATTERING.  DEFINE BLACKBODY FUNCTIONS.      
              BLAYER=BBFN(TBBY(IK),V)                                   
              BBOUND=BBFN(TPH(IK),V)                                    
C                                                                       
C             LOOP OVER CORRELATED-K METHOD SUB-INTERVALS               
              SMTRNL=0.                                                 
              SMTHML=0.                                                 
              DO 150 INTRVL=1,KNTRVL                                    
                  OPTDEP=DEPLAY(INTRVL)                                 
                  IF(OPTDEP.LT..02)THEN                                 
                      THMLAY=OPTDEP*(BLAYER+OPTDEP*(BBOUND-4*BLAYER)/6) 
                  ELSE                                                  
                      EMSLAY=1.-TRNLAY(INTRVL)                          
                      THMLAY=EMSLAY*BBOUND+2*(BLAYER-BBOUND)            
     1                  *(EMSLAY/OPTDEP-TRNLAY(INTRVL))                 
                  ENDIF                                                 
                  THMLAY=SUBINT(INTRVL)*TRNCUM(INTRVL)*THMLAY           
                  RADCUM=RADCUM+THMLAY                                  
                  TRNCUM(INTRVL)=TRNCUM(INTRVL)*TRNLAY(INTRVL)          
                  TX(9)=TX(9)+SUBINT(INTRVL)*TRNCUM(INTRVL)             
                  SMTRNL=SMTRNL+SUBINT(INTRVL)*TRNLAY(INTRVL)           
                  SMTHML=SMTHML+SUBINT(INTRVL)*THMLAY                   
  150         CONTINUE                                                  
C                                                                       
C             IF NOPRNT=-1, PRINT WEIGHTING FUNCTION DATA.              
Calley              IF(NOPRNT.EQ.-1)WRITE(IPR1,                         
              IF(NOPRNT.EQ.-1 .AND. IPR1.GT.0) WRITE(IPR1,              
     1          '(I7,2F10.5,3X,2(1P2E11.3,0P2F11.7))')IVX,AHT(IK),      
     2          AHT(IK+1),BLAYER,BBOUND,TX(9),SMTRNL,SMTHML,RADCUM      
          ELSEIF(DIS)THEN                                               
C                                                                       
C             DISORT (DISCREET ORDINATE) MULTIPLE SCATTERING            
              N=ML-IMAP(IK)                                             
              SMTRNL=0.                                                 
              SMTHML=0.                                                 
              SMSOLL=0.                                                 
              DO 160 INTRVL=1,KNTRVL                                    
                  DTAU=1.-TRNLAY(INTRVL)                                
C                                                                       
C                 THE DISORT THERMAL (T0CMS) AND SOLAR (S0CMS)          
C                 SOURCE TERMS HAVE BEEN STORED IN THE UPF AND          
C                 UPFS ARRAYS, RESPECTIVELY.                            
                  THMLAY=DTAU*UPF(INTRVL,N)                             
                  SOLLAY=DTAU*UPFS(INTRVL,N)                            
                  WTTRAN=SUBINT(INTRVL)*TRNCUM(INTRVL)                  
                  RADCUM=RADCUM+WTTRAN*THMLAY                           
                  SUMMS=SUMMS+WTTRAN*SOLLAY                             
                  TRNCUM(INTRVL)=TRNCUM(INTRVL)*TRNLAY(INTRVL)          
                  TX(9)=TX(9)+SUBINT(INTRVL)*TRNCUM(INTRVL)             
                  SMTRNL=SMTRNL+SUBINT(INTRVL)*TRNLAY(INTRVL)           
                  SMTHML=SMTHML+SUBINT(INTRVL)*THMLAY                   
                  SMSOLL=SMSOLL+SUBINT(INTRVL)*SOLLAY                   
  160         CONTINUE                                                  
Calley              IF(NOPRNT.EQ.-1)                                    
              IF(NOPRNT.EQ.-1 .AND. IPR1.GT.0)                          
     1          WRITE(IPR1,'(I7,F8.3,3X,2F9.6,2(24X,1P2E12.5))')        
     2          IVX,AHT(IK+1),TX(9),SMTRNL,SMTHML,RADCUM,SMSOLL,SUMMS   
          ELSE                                                          
C                                                                       
C             TWO-FLUX MULTIPLE SCATTERING.  DEFINE BLACKBODY FUNCTIONS.
              BLAYER=BBFN(TBBY(IK),V)                                   
              BBOUND=BBFN(TPH(IK),V)                                    
              N=IMAP(IK)                                                
              B0=.5                                                     
              IF(COSBAR(N).NE.0.)B0=BETABS(QTHETA(IK),COSBAR(N))        
              UP=B0/PI                                                  
              DN=(1.-B0)/PI                                             
              NFRNT=N                                                   
              NBACK=N+1                                                 
              IF(QTHETA(IK).LT.0.)THEN                                  
                  NFRNT=NBACK                                           
                  NBACK=N                                               
              ENDIF                                                     
C                                                                       
C             LOOP OVER CORRELATED-K METHOD SUB-INTERVALS               
              SMTRNL=0.                                                 
              SMTHML=0.                                                 
              SMSOLL=0.                                                 
              DO 170 INTRVL=1,KNTRVL                                    
                  OMEGA=0.                                              
                  IF(TAUT(INTRVL,N).GT.0.)OMEGA=TSCAT(N)/TAUT(INTRVL,N) 
C                                                                       
C                 THERMAL AND SOLAR SOURCE TERMS.                       
                  THMBND=UP*UPF(INTRVL,NFRNT)+DN*DNF(INTRVL,NFRNT)      
                  SOLBND=UP*UPFS(INTRVL,NFRNT)+DN*DNFS(INTRVL,NFRNT)    
                  THMDIF=UP*(UPF(INTRVL,NBACK)-UPF(INTRVL,NFRNT))       
     1                  +DN*(DNF(INTRVL,NBACK)-DNF(INTRVL,NFRNT))       
                  SOLDIF=UP*(UPFS(INTRVL,NBACK)-UPFS(INTRVL,NFRNT))     
     1                  +DN*(DNFS(INTRVL,NBACK)-DNFS(INTRVL,NFRNT))     
                  OPTDEP=DEPLAY(INTRVL)                                 
                  IF(OPTDEP.LT..02)THEN                                 
                      BNCOEF=OPTDEP*(1.-.5*OPTDEP)                      
                      DFCOEF=OPTDEP*(.5-OPTDEP/3.)                      
                  ELSE                                                  
                      BNCOEF=1.-TRNLAY(INTRVL)                          
                      DFCOEF=BNCOEF/OPTDEP-TRNLAY(INTRVL)               
                  ENDIF                                                 
                  THMSCT=OMEGA*(BNCOEF*THMBND+DFCOEF*THMDIF)            
                  THMLAY=THMSCT                                         
     1              +(1.-OMEGA)*(BNCOEF*BBOUND+2*DFCOEF*(BLAYER-BBOUND))
                  SOLLAY=OMEGA*(BNCOEF*SOLBND+DFCOEF*SOLDIF)            
                  WTTRAN=SUBINT(INTRVL)*TRNCUM(INTRVL)                  
                  RADCUM=RADCUM+WTTRAN*THMLAY                           
                  SUMTMS=SUMTMS+WTTRAN*THMSCT                           
                  SUMMS=SUMMS+WTTRAN*SOLLAY                             
                  TRNCUM(INTRVL)=TRNCUM(INTRVL)*TRNLAY(INTRVL)          
                  TX(9)=TX(9)+SUBINT(INTRVL)*TRNCUM(INTRVL)             
                  SMTRNL=SMTRNL+SUBINT(INTRVL)*TRNLAY(INTRVL)           
                  SMTHML=SMTHML+SUBINT(INTRVL)*THMLAY                   
                  SMSOLL=SMSOLL+SUBINT(INTRVL)*SOLLAY                   
  170         CONTINUE                                                  
              IF(NOPRNT.EQ.-1)THEN                                      
C                                                                       
C                 INTERPOLATE FLUXES IF PATH SEGMENT DOES               
C                 NOT TERMINATE AT A LAYER BOUNDARY.                    
                  FACTOR=AHT(IK+1)-ZM(NBACK)                            
                  IF(ABS(FACTOR).LT..0001)THEN                          
Calley                      WRITE(IPR1,'(I7,F8.3,3X,2F9.6,1P8E12.5)')   
                      IF (IPR1 .GT. 0) WRITE(IPR1,                      
     +                                 '(I7,F8.3,3X,2F9.6,1P8E12.5)')   
     1                  IVX,AHT(IK+1),TX(9),SMTRNL,                     
     2                  UPFLX(NBACK),DNFLX(NBACK),SMTHML,RADCUM,        
     3                  UPFLXS(NBACK),DNFLXS(NBACK),SMSOLL,SUMMS        
                  ELSE                                                  
                      FACTOR=FACTOR/(ZM(NFRNT)-ZM(NBACK))               
Calley                      WRITE(IPR1,'(I7,F8.3,3X,2F9.6,1P8E12.5)')   
                      IF (IPR1 .GT. 0) WRITE(IPR1,                      
     +                                 '(I7,F8.3,3X,2F9.6,1P8E12.5)')   
     1                  IVX,AHT(IK+1),TX(9),SMTRNL,                     
     2                  UPFLX(NBACK)+FACTOR*(UPFLX(NFRNT)-UPFLX(NBACK)),
     3                  DNFLX(NBACK)+FACTOR*(DNFLX(NFRNT)-DNFLX(NBACK)),
     4                  SMTHML,RADCUM,UPFLXS(NBACK)+FACTOR*             
     5                  (UPFLXS(NFRNT)-UPFLXS(NBACK)),                  
     6                  DNFLXS(NBACK)+FACTOR*                           
     7                  (DNFLXS(NFRNT)-DNFLXS(NBACK)),SMSOLL,SUMMS      
                  ENDIF                                                 
              ENDIF                                                     
          ENDIF                                                         
C                                                                       
C         IF TOTAL TRANSMISSION HAS DROPPED TO ZERO AND IVTEST IS       
C         FALSE, EXIT LAYER LOOP UNLESS THE CORRELATED-K APPROACH       
C         IS BEING USED AND WEIGHTING FUNCTIONS ARE BEING PRINTED.      
          IF(TX(9).LE.0. .AND. .NOT.IVTEST .AND.                        
     1      (KNTRVL.EQ.1 .OR. NOPRNT.NE.-1))GOTO190                     
  180 CONTINUE                                                          
C                                                                       
C     LAYER LOOP EXIT                                                   
  190 CONTINUE                                                          
      IF(MSOFF.GT.0)THEN                                                
C                                                                       
C         CALCULATE SOLAR AND THERMAL FLUXES.                           
          UPFLX(ML)=0.                                                  
          DNFLX(ML)=0.                                                  
          UPFLXS(ML)=0.                                                 
          DNFLXS(ML)=0.                                                 
          NTFLX(ML)=0.                                                  
          IF(DIS)THEN                                                   
              CALL MSRAD(GROUND,UANG,NSTR,V,S0,KNTRVL)                  
C                                                                       
C             CALCULATE COOLING RATES.                                  
CORK          CALL COOL(IVX)                                            
Calley              IF(NOPRNT.EQ.-1)                                    
              IF(NOPRNT.EQ.-1 .AND. IPR1.GT.0)                          
     1          WRITE(IPR1,'(/I7,0PF8.3,3X,A)')IVX,AHT(1),' 1.000000'   
          ELSE                                                          
              IF(MODTRN)THEN                                            
                  CALL BMFLUX(ML,KNTRVL,IEMSCT,SALB,S0)                 
C                                                                       
C                 CALCULATE COOLING RATES.                              
CORK              CALL COOL(IVX)                                        
              ELSE                                                      
                  CALL FLXADD(ML,IEMSCT,SALB)                           
              ENDIF                                                     
              IF(NOPRNT.EQ.-1)THEN                                      
                  N=IMAP(1)                                             
                  FACTOR=AHT(1)-ZM(N)                                   
                  IF(ABS(FACTOR).LE..0001)THEN                          
Calley                  WRITE(IPR1,'(/(I7,0PF8.3,A,2(1P2E12.5:,24X)))') 
                      IF (IPR1 .GT. 0) WRITE(IPR1,                      
     +                             '(/(I7,0PF8.3,A,2(1P2E12.5:,24X)))') 
     1                  IVX,AHT(1),'    1.000000         ',             
     2                  UPFLX(N),DNFLX(N),UPFLXS(N),DNFLXS(N)           
                  ELSE                                                  
                      NP1=N+1                                           
                      FACTOR=FACTOR/(ZM(NP1)-ZM(N))                     
Calley                  WRITE(IPR1,'(/(I7,0PF8.3,A,2(1P2E12.5:,24X)))') 
                      IF (IPR1 .GT. 0) WRITE(IPR1,                      
     +                             '(/(I7,0PF8.3,A,2(1P2E12.5:,24X)))') 
     1                  IVX,AHT(1),'    1.000000         ',             
     2                  UPFLX(N)+FACTOR*(UPFLX(NP1)-UPFLX(N)),          
     3                  DNFLX(N)+FACTOR*(DNFLX(NP1)-DNFLX(N)),          
     4                  UPFLXS(N)+FACTOR*(UPFLXS(NP1)-UPFLXS(N)),       
     5                  DNFLXS(N)+FACTOR*(DNFLXS(NP1)-DNFLXS(N))        
                  ENDIF                                                 
              ENDIF                                                     
          ENDIF                                                         
C                                                                       
C         VERTICAL PATH COMPLETE.  NOW PERFORM OPTICAL PATH CALCULATIONS
          IKMAX=IKMX                                                    
          MSOFF=0                                                       
          IK=-1                                                         
          GOTO40                                                        
      ELSEIF(GROUND)THEN                                                
          IF(IEMSCT.EQ.2 .AND. KNTRVL.GT.1)THEN                         
              IK=IKMAX+1                                                
              TSNREF=SUBINT(1)*S0TRN(1,IK)*TRNCUM(1)                    
C                                                                       
C             IF THE GROUND SCATTERING POINT IS IN SHADOW, THE GROUND   
C             REFLECTED SOLAR IRRADIANCE, TSNREF, IS ZERO.              
              IF(TSNREF.GT.0.)THEN                                      
                  DO 200 INTRVL=2,KNTRVL                                
                      TSNREF=TSNREF+SUBINT(INTRVL)*                     
     1                  S0TRN(INTRVL,IK)*TRNCUM(INTRVL)                 
  200             CONTINUE                                              
              ENDIF                                                     
          ENDIF                                                         
          IF(IMULT.NE.0)THEN                                            
C                                                                       
C             CALCULATE TRANSMITTED GROUND THERMAL AND SOLAR FLUXES     
              FDNTRT=0.                                                 
              FDNSRT=0.                                                 
              FACTOR=SALB/PI                                            
              DO 210 INTRVL=1,KNTRVL                                    
                  COEF=SUBINT(INTRVL)*TRNCUM(INTRVL)                    
                  FDNTRT=FDNTRT+COEF*DNF(INTRVL,1)                      
                  FDNSRT=FDNSRT+COEF*DNFS(INTRVL,1)                     
  210         CONTINUE                                                  
Calley              FDNTRT=FACTOR*FDNTRT                                
Calley              FDNSRT=FACTOR*FDNSRT                                
          ENDIF                                                         
      ELSEIF(IEMSCT.EQ.2)THEN                                           
          TSNREF=0.                                                     
      ENDIF                                                             
      RETURN                                                            
      END                                                               
      SUBROUTINE MAPMS(ML,IKMAX)                                        
C                                                                       
C     ROUTINE MAPMS DETERMINES WHICH ATMOSPHERIC LAYER                  
C     CONTAINS EACH LINE-OF-SIGHT PATH SEGMENT.                         
C                                                                       
C     LIST PARAMETERS                                                   
      INCLUDE 'PARAM.LST'                                               
C                                                                       
C     DECLARE INPUTS                                                    
C       ML      NUMBER OF LAYER BOUNDARIES                              
C       IKMAX   NUMBER OF LINE-OF-SIGHT PATHS SEGMENTS                  
      INTEGER ML,IKMAX                                                  
      REAL ZM,PM,TM,RFNDX,DENSTY                                        
      COMMON/MODEL/ZM(LAYDIM),PM(LAYDIM),TM(LAYDIM),                    
     1  RFNDX(LAYDIM),DENSTY(KMAX,LAYDIM)                               
C                                                                       
C     /PATH/                                                            
C       QTHETA  COSINE OF PATH ZENITH AT PATH BOUNDARIES.               
C       AHT     ALTITUDES AT PATH BOUNDARIES.                           
C       IMAP    MAPPING FROM PATH SEGMENTS TO LAYERS.                   
      INTEGER IMAP                                                      
      REAL QTHETA,AHT,TPH                                               
      COMMON/PATH/QTHETA(LAYTWO),AHT(LAYTWO),TPH(LAYTWO),IMAP(LAYTWO)   
C                                                                       
C     DECLARE LOCAL VARIABLES                                           
      INTEGER I,J,JP1                                                   
      REAL AVGALT                                                       
C                                                                       
C     LOOP OVER PATH SEGMENTS                                           
      J=1                                                               
      DO 20 JP1=2,IKMAX+1                                               
C                                                                       
C         DEFINE LINE SEGMENT MIDDLE ALTITUDE                           
          AVGALT=.5*(AHT(J)+AHT(JP1))                                   
          IMAP(J)=1                                                     
          DO 10 I=2,ML                                                  
              IF(ZM(I).GE.AVGALT)GOTO20                                 
   10     IMAP(J)=I                                                     
          STOP 'ERROR in MAPMS:  Path segment above top of atmosphere.' 
   20 J=JP1                                                             
      RETURN                                                            
      END                                                               
      BLOCK DATA MARDTA                                                 
C>    BLOCK DATA                                                        
C                                                                       
C     MARINE AEROSOL EXTINCTION AND ABSORPTION DATA                     
C            CODED BY STU GATHMAN                  -  NRL               
C                                                                       
      COMMON/A/T1QEXT(40,4),T2QEXT(40,4),T3QEXT(40,4),                  
     1T1QABS(40,4),T2QABS(40,4),T3QABS(40,4),ALAM(40),AREL(4)           
      DIMENSION A1(40),A2(40),A3(40),A4(40)                             
      DIMENSION B1(40),B2(40),B3(40),B4(40)                             
      DIMENSION C1(40),C2(40),C3(40),C4(40)                             
      DIMENSION D1(40),D2(40),D3(40),D4(40)                             
      DIMENSION E1(40),E2(40),E3(40),E4(40)                             
      DIMENSION F1(40),F2(40),F3(40),F4(40)                             
      EQUIVALENCE (A1(1), T1QEXT(1,1)), (A2(1), T1QEXT(1,2)),           
     +            (A3(1), T1QEXT(1,3)), (A4(1), T1QEXT(1,4))            
      EQUIVALENCE (B1(1), T2QEXT(1,1)), (B2(1), T2QEXT(1,2)),           
     +            (B3(1), T2QEXT(1,3)), (B4(1), T2QEXT(1,4))            
      EQUIVALENCE (C1(1), T3QEXT(1,1)), (C2(1), T3QEXT(1,2)),           
     +            (C3(1), T3QEXT(1,3)), (C4(1), T3QEXT(1,4))            
      EQUIVALENCE (D1(1), T1QABS(1,1)), (D2(1), T1QABS(1,2)),           
     +            (D3(1), T1QABS(1,3)), (D4(1), T1QABS(1,4))            
      EQUIVALENCE (E1(1), T2QABS(1,1)), (E2(1), T2QABS(1,2)),           
     +            (E3(1), T2QABS(1,3)), (E4(1), T2QABS(1,4))            
      EQUIVALENCE (F1(1), T3QABS(1,1)), (F2(1), T3QABS(1,2)),           
     +            (F3(1), T3QABS(1,3)), (F4(1), T3QABS(1,4))            
      DATA AREL/50.,85.,95.,98./                                        
      DATA ALAM/                                                        
     * 0.2000,   0.3000,   0.3371,   0.5500,   0.6943,   1.0600,        
     * 1.5360,   2.0000,   2.2500,   2.5000,   2.7000,   3.0000,        
     * 3.3923,   3.7500,   4.5000,   5.0000,   5.5000,   6.0000,        
     * 6.2000,   6.5000,   7.2000,   7.9000,   8.2000,   8.7000,        
     * 9.0000,   9.2000,  10.0000,  10.5910,  11.0000,  11.5000,        
     *12.5000,  14.8000,  15.0000,  16.4000,  17.2000,  18.5000,        
     *21.3000,  25.0000,  30.0000,  40.0000/                            
      DATA A1/                                                          
     *-3.2949,  -3.4662,  -3.5275,  -3.8505,  -4.0388,  -4.4410,        
     *-4.8584,  -5.1720,  -5.3272,  -5.4342,  -5.2765,  -4.5101,        
     *-5.3730,  -5.7468,  -5.7579,  -5.8333,  -5.8552,  -5.1780,        
     *-5.2910,  -5.5959,  -5.6295,  -5.6748,  -5.6051,  -5.5363,        
     *-5.5330,  -5.5136,  -5.6568,  -5.6040,  -5.5221,  -5.3902,        
     *-5.1724,  -5.0903,  -5.0901,  -5.1285,  -5.1444,  -5.1963,        
     *-5.3101,  -5.3994,  -5.4873,  -5.4779/                            
      DATA A2/                                                          
     *-2.8302,  -2.9446,  -2.9904,  -3.2510,  -3.4104,  -3.7635,        
     *-4.1452,  -4.4466,  -4.6160,  -4.7772,  -4.7030,  -3.8461,        
     *-4.6466,  -5.0105,  -5.0747,  -5.1810,  -5.2705,  -4.5537,        
     *-4.6594,  -4.9872,  -5.0872,  -5.1229,  -5.0985,  -5.0623,        
     *-5.0544,  -5.0407,  -5.0793,  -4.9796,  -4.8748,  -4.7298,        
     *-4.5063,  -4.4260,  -4.4280,  -4.4650,  -4.4912,  -4.5474,        
     *-4.6672,  -4.7711,  -4.8814,  -4.9073/                            
      DATA A3/                                                          
     *-2.3712,  -2.4231,  -2.4512,  -2.6377,  -2.7631,  -3.0569,        
     *-3.3918,  -3.6682,  -3.8305,  -4.0111,  -4.0467,  -3.2055,        
     *-3.8717,  -4.1908,  -4.3282,  -4.4495,  -4.5780,  -3.9249,        
     *-4.0136,  -4.3349,  -4.4674,  -4.5088,  -4.5083,  -4.4973,        
     *-4.4923,  -4.4845,  -4.4753,  -4.3617,  -4.2509,  -4.1029,        
     *-3.8779,  -3.7963,  -3.7989,  -3.8345,  -3.8639,  -3.9215,        
     *-4.0438,  -4.1532,  -4.2719,  -4.3120/                            
      DATA A4/                                                          
     *-1.9911,  -1.9989,  -2.0126,  -2.1342,  -2.2283,  -2.4663,        
     *-2.7552,  -3.0036,  -3.1528,  -3.3328,  -3.4468,  -2.6649,        
     *-3.1986,  -3.4769,  -3.6571,  -3.7821,  -3.9284,  -3.3776,        
     *-3.4435,  -3.7436,  -3.8910,  -3.9455,  -3.9573,  -3.9633,        
     *-3.9639,  -3.9610,  -3.9427,  -3.8304,  -3.7203,  -3.5733,        
     *-3.3489,  -3.2650,  -3.2675,  -3.3017,  -3.3317,  -3.3893,        
     *-3.5126,  -3.6243,  -3.7467,  -3.7927/                            
      DATA B1/                                                          
     *-0.5781,  -0.5525,  -0.5484,  -0.5147,  -0.5094,  -0.5324,        
     *-0.6138,  -0.7139,  -0.7776,  -0.8624,  -0.9838,  -0.7720,        
     *-0.8542,  -0.9535,  -1.0873,  -1.1624,  -1.2647,  -1.2123,        
     *-1.1811,  -1.2905,  -1.4126,  -1.4643,  -1.5227,  -1.4560,        
     *-1.4177,  -1.4144,  -1.5746,  -1.6348,  -1.6431,  -1.6023,        
     *-1.4648,  -1.3910,  -1.3898,  -1.4056,  -1.4196,  -1.4655,        
     *-1.5795,  -1.6825,  -1.7924,  -1.8224/                            
      DATA B2/                                                          
     *-0.1809,  -0.1651,  -0.1566,  -0.1258,  -0.1113,  -0.1046,        
     *-0.1468,  -0.2157,  -0.2679,  -0.3480,  -0.4988,  -0.2657,        
     *-0.2991,  -0.3924,  -0.5266,  -0.5983,  -0.7037,  -0.6671,        
     *-0.6074,  -0.7134,  -0.8352,  -0.9080,  -0.9577,  -0.9579,        
     *-0.9542,  -0.9629,  -1.0867,  -1.1219,  -1.1032,  -1.0330,        
     *-0.8663,  -0.7677,  -0.7667,  -0.7768,  -0.7919,  -0.8304,        
     *-0.9354,  -1.0400,  -1.1640,  -1.2357/                            
      DATA B3/                                                          
     * 0.2483,   0.2574,   0.2626,   0.2887,   0.3055,   0.3312,        
     * 0.3262,   0.2922,   0.2589,   0.1989,   0.0548,   0.2322,        
     * 0.2487,   0.1816,   0.0685,   0.0090,  -0.0846,  -0.0876,        
     *-0.0110,  -0.0936,  -0.2013,  -0.2799,  -0.3216,  -0.3575,        
     *-0.3769,  -0.3944,  -0.5018,  -0.5379,  -0.5179,  -0.4473,        
     *-0.2822,  -0.1730,  -0.1713,  -0.1737,  -0.1850,  -0.2141,        
     *-0.3046,  -0.4002,  -0.5221,  -0.6163/                            
      DATA B4/                                                          
     * 0.6276,   0.6324,   0.6363,   0.6570,   0.6715,   0.7006,        
     * 0.7172,   0.7091,   0.6925,   0.6543,   0.5356,   0.6473,        
     * 0.6924,   0.6516,   0.5661,   0.5206,   0.4440,   0.4091,        
     * 0.4902,   0.4325,   0.3427,   0.2691,   0.2336,   0.1872,        
     * 0.1593,   0.1386,   0.0348,  -0.0131,  -0.0031,   0.0566,        
     * 0.2093,   0.3214,   0.3238,   0.3278,   0.3211,   0.3007,        
     * 0.2257,   0.1426,   0.0304,  -0.0739/                            
      DATA C1/                                                          
     * 2.1434,   2.1454,   2.1469,   2.1539,   2.1577,   2.1673,        
     * 2.1812,   2.1970,   2.2030,   2.2115,   2.2149,   2.1931,        
     * 2.2220,   2.2326,   2.2425,   2.2479,   2.2494,   2.2203,        
     * 2.2382,   2.2473,   2.2380,   2.2373,   2.2179,   2.2310,        
     * 2.2417,   2.2421,   2.2244,   2.1950,   2.1686,   2.1370,        
     * 2.1193,   2.1454,   2.1477,   2.1703,   2.1725,   2.1729,        
     * 2.1580,   2.1324,   2.0878,   2.0131/                            
      DATA C2/                                                          
     * 2.5480,   2.5512,   2.5511,   2.5562,   2.5601,   2.5669,        
     * 2.5792,   2.5874,   2.5950,   2.6022,   2.6081,   2.5875,        
     * 2.6093,   2.6184,   2.6319,   2.6391,   2.6439,   2.6138,        
     * 2.6319,   2.6437,   2.6442,   2.6421,   2.6336,   2.6336,        
     * 2.6353,   2.6325,   2.6075,   2.5680,   2.5340,   2.5025,        
     * 2.5122,   2.5652,   2.5681,   2.5869,   2.5925,   2.5986,        
     * 2.5947,   2.5835,   2.5566,   2.4949/                            
      DATA C3/                                                          
     * 2.9825,   2.9831,   2.9847,   2.9893,   2.9929,   2.9976,        
     * 3.0090,   3.0130,   3.0179,   3.0233,   3.0294,   3.0148,        
     * 3.0293,   3.0357,   3.0481,   3.0563,   3.0627,   3.0410,        
     * 3.0532,   3.0646,   3.0713,   3.0733,   3.0716,   3.0701,        
     * 3.0681,   3.0662,   3.0457,   3.0067,   2.9733,   2.9460,        
     * 2.9643,   3.0156,   3.0182,   3.0337,   3.0399,   3.0477,        
     * 3.0511,   3.0501,   3.0384,   2.9943/                            
      DATA C4/                                                          
     * 3.3635,   3.3621,   3.3652,   3.3699,   3.3729,   3.3768,        
     * 3.3868,   3.3888,   3.3916,   3.3952,   3.4000,   3.3911,        
     * 3.4013,   3.4056,   3.4152,   3.4218,   3.4280,   3.4148,        
     * 3.4222,   3.4312,   3.4393,   3.4442,   3.4452,   3.4463,        
     * 3.4455,   3.4452,   3.4329,   3.4016,   3.3719,   3.3468,        
     * 3.3617,   3.4046,   3.4068,   3.4198,   3.4255,   3.4334,        
     * 3.4402,   3.4447,   3.4428,   3.4144/                            
      DATA D1/                                                          
     *-7.7562,  -7.8498,  -7.8630,  -7.8493,  -7.7889,  -7.5044,        
     *-7.0058,  -6.3955,  -6.3210,  -6.0026,  -5.4176,  -4.5443,        
     *-5.6380,  -6.2635,  -5.9512,  -5.9860,  -5.9526,  -5.1907,        
     *-5.3115,  -5.6289,  -5.6502,  -5.6922,  -5.6157,  -5.5462,        
     *-5.5437,  -5.5234,  -5.6647,  -5.6087,  -5.5250,  -5.3918,        
     *-5.1733,  -5.0909,  -5.0907,  -5.1291,  -5.1450,  -5.1968,        
     *-5.3105,  -5.3997,  -5.4875,  -5.4779/                            
      DATA D2/                                                          
     *-7.5869,  -7.6977,  -7.7070,  -7.6883,  -7.6227,  -7.2788,        
     *-6.6637,  -5.9117,  -6.0351,  -5.6292,  -4.8814,  -3.8947,        
     *-5.0236,  -5.7607,  -5.3390,  -5.4052,  -5.4335,  -4.5711,        
     *-4.6910,  -5.0400,  -5.1263,  -5.1522,  -5.1200,  -5.0797,        
     *-5.0708,  -5.0554,  -5.0883,  -4.9842,  -4.8775,  -4.7313,        
     *-4.5074,  -4.4271,  -4.4290,  -4.4661,  -4.4923,  -4.5484,        
     *-4.6679,  -4.7716,  -4.8817,  -4.9075/                            
      DATA D3/                                                          
     *-7.3806,  -7.5324,  -7.5421,  -7.5190,  -7.4456,  -6.9683,        
     *-6.1934,  -5.3374,  -5.6261,  -5.1328,  -4.2936,  -3.2785,        
     *-4.3895,  -5.1770,  -4.7151,  -4.7944,  -4.8513,  -3.9542,        
     *-4.0698,  -4.4296,  -4.5444,  -4.5647,  -4.5533,  -4.5320,        
     *-4.5225,  -4.5111,  -4.4899,  -4.3685,  -4.2548,  -4.1053,        
     *-3.8800,  -3.7987,  -3.8013,  -3.8369,  -3.8663,  -3.9238,        
     *-4.0456,  -4.1545,  -4.2728,  -4.3123/                            
      DATA D4/                                                          
     *-7.1591,  -7.3911,  -7.3998,  -7.3737,  -7.2891,  -6.6133,        
     *-5.7137,  -4.8091,  -5.1828,  -4.6408,  -3.7712,  -2.7644,        
     *-3.8361,  -4.6426,  -4.1724,  -4.2573,  -4.3263,  -3.4249,        
     *-3.5341,  -3.8962,  -4.0222,  -4.0421,  -4.0386,  -4.0258,        
     *-4.0169,  -4.0077,  -3.9676,  -3.8419,  -3.7270,  -3.5776,        
     *-3.3529,  -3.2698,  -3.2724,  -3.3066,  -3.3365,  -3.3940,        
     *-3.5164,  -3.6272,  -3.7486,  -3.7935/                            
      DATA E1/                                                          
     *-4.1531,  -4.2017,  -4.0836,  -4.1441,  -4.0515,  -3.7234,        
     *-3.2022,  -2.5924,  -2.5215,  -2.2244,  -1.7099,  -1.0243,        
     *-1.8178,  -2.4304,  -2.1483,  -2.1897,  -2.1768,  -1.5025,        
     *-1.5770,  -1.8688,  -1.9132,  -1.9550,  -1.9023,  -1.8200,        
     *-1.8019,  -1.7822,  -1.9415,  -1.9082,  -1.8419,  -1.7290,        
     *-1.5359,  -1.4523,  -1.4511,  -1.4744,  -1.4875,  -1.5339,        
     *-1.6446,  -1.7377,  -1.8338,  -1.8404/                            
      DATA E2/                                                          
     *-4.0237,  -4.0786,  -4.0596,  -4.0117,  -3.9167,  -3.5334,        
     *-2.8890,  -2.1314,  -2.2533,  -1.8686,  -1.2114,  -0.5112,        
     *-1.2226,  -1.9313,  -1.5503,  -1.6190,  -1.6646,  -0.9328,        
     *-0.9892,  -1.2921,  -1.3909,  -1.4236,  -1.4060,  -1.3666,        
     *-1.3550,  -1.3429,  -1.3966,  -1.3198,  -1.2346,  -1.1147,        
     *-0.9248,  -0.8332,  -0.8328,  -0.8490,  -0.8658,  -0.9072,        
     *-1.0110,  -1.1088,  -1.2210,  -1.2642/                            
      DATA E3/                                                          
     *-3.8225,  -3.9189,  -3.8934,  -3.8788,  -3.7792,  -3.2584,        
     *-2.4500,  -1.5859,  -1.8664,  -1.3920,  -0.6602,  -0.0250,        
     *-0.6305,  -1.3614,  -0.9442,  -1.0200,  -1.0892,  -0.3681,        
     *-0.4088,  -0.6976,  -0.8140,  -0.8430,  -0.8410,  -0.8268,        
     *-0.8209,  -0.8142,  -0.8176,  -0.7305,  -0.6447,  -0.5305,        
     *-0.3534,  -0.2582,  -0.2574,  -0.2661,  -0.2802,  -0.3137,        
     *-0.4046,  -0.4954,  -0.6063,  -0.6635/                            
      DATA E4/                                                          
     *-3.6380,  -3.8218,  -3.8158,  -3.6544,  -3.6442,  -2.9366,        
     *-1.9981,  -1.0852,  -1.4468,  -0.9222,  -0.1746,   0.3789,        
     *-0.1326,  -0.8516,  -0.4270,  -0.5021,  -0.5774,   0.1072,        
     * 0.0779,  -0.1890,  -0.3060,  -0.3330,  -0.3362,  -0.3320,        
     *-0.3290,  -0.3248,  -0.3123,  -0.2275,  -0.1469,  -0.0421,        
     * 0.1192,   0.2136,   0.2149,   0.2122,   0.2019,   0.1760,        
     * 0.0989,   0.0190,  -0.0836,  -0.1437/                            
      DATA F1/                                                          
     *-0.5486,  -0.6082,  -0.5956,  -0.5356,  -0.4402,  -0.0871,        
     * 0.4527,   1.0366,   1.1096,   1.3655,   1.7101,   1.8903,        
     * 1.6543,   1.2291,   1.4722,   1.4553,   1.4742,   1.8427,        
     * 1.8260,   1.6925,   1.6714,   1.6561,   1.6818,   1.7408,        
     * 1.7604,   1.7735,   1.6870,   1.6975,   1.7266,   1.7732,        
     * 1.8476,   1.8953,   1.8977,   1.9100,   1.9121,   1.9074,        
     * 1.8820,   1.8553,   1.8167,   1.8034/                            
      DATA F2/                                                          
     *-0.4081,  -0.4784,  -0.4660,  -0.4117,  -0.3046,   0.0831,        
     * 0.7409,   1.4609,   1.3780,   1.7134,   2.1471,   2.2808,        
     * 2.1315,   1.6742,   1.9804,   1.9449,   1.9238,   2.2748,        
     * 2.2689,   2.1587,   2.1154,   2.1037,   2.1124,   2.1387,        
     * 2.1490,   2.1552,   2.1238,   2.1535,   2.1840,   2.2226,        
     * 2.2790,   2.3247,   2.3268,   2.3387,   2.3422,   2.3439,        
     * 2.3339,   2.3198,   2.2926,   2.2751/                            
      DATA F3/                                                          
     *-0.2242,  -0.3289,  -0.3406,  -0.2786,  -0.1532,   0.3414,        
     * 1.1618,   1.9783,   1.7412,   2.1629,   2.6182,   2.6999,        
     * 2.6101,   2.1844,   2.4931,   2.4589,   2.4253,   2.7204,        
     * 2.7182,   2.6391,   2.5975,   2.5896,   2.5918,   2.6017,        
     * 2.6055,   2.6086,   2.6049,   2.6334,   2.6574,   2.6843,        
     * 2.7225,   2.7601,   2.7620,   2.7734,   2.7780,   2.7832,        
     * 2.7839,   2.7809,   2.7677,   2.7571/                            
      DATA F4/                                                          
     *-0.0119,  -0.2110,  -0.2063,  -0.1444,  -0.0667,   0.6542,        
     * 1.5923,   2.4405,   2.1326,   2.5924,   3.0247,   3.0696,        
     * 3.0154,   2.6365,   2.9257,   2.8957,   2.8634,   3.1026,        
     * 3.1009,   3.0465,   3.0135,   3.0090,   3.0097,   3.0147,        
     * 3.0167,   3.0193,   3.0233,   3.0464,   3.0635,   3.0808,        
     * 3.1047,   3.1337,   3.1354,   3.1458,   3.1506,   3.1572,        
     * 3.1639,   3.1680,   3.1651,   3.1624/                            
      END                                                               
      SUBROUTINE MARINE(VIS,MODEL,WS,WH,ICSTL,BEXT,BABS,NL)             
      INCLUDE 'PARAM.LST'                                               
C                                                                       
C        THIS SUBROUTINE DETERMINES AEROSOL EXT + ABS COEFFICIENTS      
C          FOR THE NAVY MARITIME MODEL                                  
C            CODED BY STU GATHMAN                  -  NRL               
C                                                                       
C        INPUTS-                                                        
C        WSS = CURRENT WIND SPEED (M/S)                                 
C        WHH = 24 HOUR AVERAGE WIND SPEED (M/S)                         
C        RHH = RELATIVE HUMIDITY (PERCENTAGE)                           
C        VIS = METEOROLOGICAL RANGE (KM)                                
C        ICTL = AIR MASS CHARACTER  1 = OPEN OCEAN                      
C                      10 = STRONG CONTINENTAL INFLUENCE                
C        MODEL = MODEL ATMOSPHERE                                       
C                                                                       
C        OUTPUTS-                                                       
C        BEXT = EXTINCTION COEFFICIENT (KM-1)                           
C        BABS = ABSORPTION COEFFICIENT (KM-1)                           
C                                                                       
      COMMON /MART/ RHH                                                 
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                          
C                                                                       
C       PI       THE CONSTANT PI                                        
C       DEG      NUMBER OF DEGREES IN ONE RADIAN.                       
C       BIGNUM   MAXIMUM SINGLE PRECISION NUMBER.                       
C       BIGEXP   MAXIMUM EXPONENTIAL ARGUMENT WITHOUT OVERFLOW.         
      REAL PI,DEG,BIGNUM,BIGEXP                                         
      COMMON/CNSTNS/PI,DEG,BIGNUM,BIGEXP                                
      COMMON/A/T1QEXT(40,4),T2QEXT(40,4),T3QEXT(40,4),                  
     1T1QABS(40,4),T2QABS(40,4),T3QABS(40,4),ALAM(40),AREL(4)           
      REAL WSPD(8),RHD(8),BEXT(NAER,MXWVLN),BABS(NAER,MXWVLN)           
      DATA WSPD/6.9, 4.1, 4.1, 10.29, 6.69, 12.35, 7.2, 6.9/            
      DATA RHD/80., 75.63, 76.2, 77.13, 75.24, 80.53, 45.89, 80./       
      PISC = PI/1000.0                                                  
Calley      WRITE(IPR,890)                                              
      IF (IPR .GT. 0) WRITE(IPR,890)                                    
C                                                                       
C     CHECK LIMITS OF MODEL VALIDITY                                    
C                                                                       
      RH = RHH                                                          
      IF(RHH.GT.0.) GO TO 10                                            
      RH=RHD(MODEL+1)                                                   
10    IF(WS.GT.20.0) WS=20.                                             
      IF(WH.GT.20.0) WH = 20.                                           
      IF(RH.GT.98.0) RH = 98.                                           
      IF(RH.LT.50.0.AND.RH.GE.0.0) RH = 50.                             
      IF(ICSTL.LT.1.OR.ICSTL.GT.10) ICSTL = 3                           
C                                                                       
C     FIND SIZE DISTRIBUTION PARAMETERS FROM METEOROLOGY INPUT          
C                                                                       
Calley      IF(WH.LE.0.) WRITE(IPR,920)                                 
      IF(WH.LE.0.0 .AND. IPR.GT.0) WRITE(IPR,920)                       
      IF(WH .LE. 0.0) WH = WSPD(MODEL + 1)                              
Calley      IF(WS.LE.0.) WRITE(IPR,930)                                 
      IF(WS.LE.0.0 .AND. IPR.GT.0) WRITE(IPR,930)                       
      IF(WS.LE.0.0)WS=WH                                                
Calley      WRITE(IPR,910)WS,WH,RH,ICSTL                                
      IF (IPR .GT. 0) WRITE(IPR,910)WS,WH,RH,ICSTL                      
C                                                                       
C        F IS A RELATIVE HUMIDITY DEPENDENT GROWTH CORRECTION           
C        TO THE ATTENUATION COEFFICIENT.                                
C                                                                       
      F=((2.-RH/100.)/(6.*(1.-RH/100.)))**0.33333                       
      A1=2000.0*ICSTL*ICSTL                                             
      A2 = AMAX1(5.866*(WH-2.2), 0.5)                                   
CCC   A3 = AMAX1(0.01527*(WS-2.2), 1.14E-5)                             
      A3 = 10**(0.06*WS-2.8)                                            
C                                                                       
C     FIND EXTINCTION AT 0.55 MICRONS AND NORMALIZE TO 1.               
C                                                                       
C     INTERPOLATE FOR RELATIVE HUMIDITY                                 
C                                                                       
      DO 40   J=2,4                                                     
      IF(RH.LE.AREL(J)) GO TO 42                                        
 40   CONTINUE                                                          
 42   DELRH=AREL(J)-AREL(J-1)                                           
      DELRHV=RH-AREL(J-1)                                               
      RATIO=DELRHV/DELRH                                                
      QE1=T1QEXT(4,J-1)+(T1QEXT(4,J)-T1QEXT(4,J-1))*RATIO               
      QE2=T2QEXT(4,J-1)+(T2QEXT(4,J)-T2QEXT(4,J-1))*RATIO               
      QE3=T3QEXT(4,J-1)+(T3QEXT(4,J)-T3QEXT(4,J-1))*RATIO               
      TOTAL = A1*10.**QE1 + A2*10.**QE2 + A3*10.**QE3                   
      EXT55=PISC*TOTAL/F                                                
C                                                                       
C     IF METEOROLOLICAL RANGE NOT SPECIFIED,FIND FROM METEOR DATA       
C                                                                       
      IF(VIS.LE.0.) VIS=3.912/(EXT55+0.01159)                           
      C=(1./EXT55)*(PISC/F)                                             
      A1=C*A1                                                           
      A2=C*A2                                                           
      A3=C*A3                                                           
C                                                                       
C     CALCULATE NORMALIZED ATTENUATION COEFICIENTS                      
C                                                                       
      DO 45   I=1,40                                                    
      T1XV = T1QEXT(I,J-1) + (T1QEXT(I,J) - T1QEXT(I,J-1))*RATIO        
      T2XV = T2QEXT(I,J-1) + (T2QEXT(I,J) - T2QEXT(I,J-1))*RATIO        
      T3XV = T3QEXT(I,J-1) + (T3QEXT(I,J) - T3QEXT(I,J-1))*RATIO        
      T1AV = T1QABS(I,J-1) + (T1QABS(I,J) - T1QABS(I,J-1))*RATIO        
      T2AV = T2QABS(I,J-1) + (T2QABS(I,J) - T2QABS(I,J-1))*RATIO        
      T3AV = T3QABS(I,J-1) + (T3QABS(I,J) - T3QABS(I,J-1))*RATIO        
      BEXT(NL,I)=A1*10**T1XV+A2*10**T2XV+A3*10**T3XV                    
      BABS(NL,I)=A1*10**T1AV+A2*10**T2AV+A3*10**T3AV                    
 45   CONTINUE                                                          
Calley      WRITE(IPR,900) VIS                                          
      IF (IPR .GT. 0) WRITE(IPR,900) VIS                                
      RETURN                                                            
890   FORMAT('0MARINE AEROSOL MODEL USED')                              
900   FORMAT('0',T10,'VIS = ',F10.2,' KM')                              
910   FORMAT(T10,'WIND SPEED = ',F8.2,' M/SEC',/,T10,                   
     1 'WIND SPEED (24 HR AVERAGE) = ',F8.2,' M/SEC',/,                 
     2 T10,'RELATIVE HUMIDITY = ',F8.2,' PERCENT',/,                    
     3 T10,'AIRMASS CHARACTER =' ,I3)                                   
920   FORMAT('0  WS NOT SPECIFIED, A DEFAULT VALUE IS USED')            
930   FORMAT('0  WH NOT SPECIFIED, A DEFAULT VALUE IS USED')            
      END                                                               
      BLOCK DATA MDTA                                                   
C                                                                       
C     CLOUD AND RAIN DATA                                               
      INCLUDE 'PARAM.LST'                                               
      REAL ZCLD,CLD,CLDICE,RR                                           
      COMMON/CLDRR/ZCLD(1:NZCLD,0:1),CLD(1:NZCLD,0:5),                  
     1  CLDICE(1:NZCLD,0:1),RR(1:NZCLD,0:5)                             
C                                                                       
C     PROFILE ALTITUDES [KM]                                            
      DATA ZCLD/NZCLD*0.,                                               
     1    .00,  .16,  .33,  .66, 1.00, 1.50, 2.00,2.4,2.7,3.00,3.5,     
     2   4.00, 4.50, 5.00, 5.50, 6.00/                                  
C                                                                       
C     WATER DROPLET DENSITIES [GM/M3]                                   
      DATA CLD/NZCLD*0.,                                                
     1    .00,  .00,  .00,  .20,  .35, 1.00, 1.00,1.0, .3, .15, .0,5*.0,
     2    .00,  .00,  .00,  .00,  .00,  .00,  .00, .3, .4, .30, .0,5*.0,
     3    .00,  .00,  .15,  .30,  .15,  .00,  .00, .0, .0, .00, .0,5*.0,
     4    .00,  .00,  .00,  .10,  .15,  .15,  .10, .0, .0, .00, .0,5*.0,
     5    .00,  .30,  .65,  .40,  .00,  .00,  .00, .0, .0, .00, .0,5*.0/
C                                                                       
C     ICE PARTICLE DENSITIES [GM/M3]                                    
      DATA CLDICE/NZCLD*0.,NZCLD*0./                                    
C                                                                       
C     RAIN RATES [MM/HR]                                                
      DATA RR/NZCLD*0.,                                                 
     1   2.00, 1.78, 1.43, 1.22,  .86,  .22,  .00, .0, .0, .00, .0,5*.0,
     2   5.00, 4.00, 3.40, 2.60,  .80,  .20,  .00, .0, .0, .00, .0,5*.0,
     3  12.50,10.50, 8.00, 6.00, 2.50,  .80,  .20, .0, .0, .00, .0,5*.0,
     4  25.00,21.50,17.50,12.00, 7.50, 4.20, 2.50,1.0, .7, .20, .0,5*.0,
     5  75.00,70.00,65.00,60.00,45.00,20.00,12.50,7.0,3.5,1.00, .2,5*.0/
      END                                                               
      BLOCK DATA MLATMB                                                 
C>    BLOCK DATA                                                        
C***********************************************************************
C     THIS SUBROUTINE INITIALIZES THE 6 BUILT-IN ATMOSPHERIC PROFILES   
C     (FROM 'OPTICAL PROPERTIES OF THE ATMOSPHERE, THIRD EDITION'       
C     AFCRL-72-0497 (AD 753 075), 'U.S. STANDARD ATMOSPHERE 1976' AND   
C     'SUPPLEMENTS 1966'), PLUS COLLECTED CONSTITUENT PROFILES (REF)    
C     AND SETS OTHER CONSTANTS RELATED TO THE ATMOSPHERIC PROFILES      
C***********************************************************************
      COMMON /MLATM/  ALT(50),P1(50),P2(50),P3(50),P4(50),P5(50),P6(50),
     +T1(50),T2(50),T3(50),T4(50),T5(50),T6(50),                        
     +AMOL11(50),AMOL12(50),AMOL13(50),AMOL14(50),AMOL15(50),AMOL16(50),
     +AMOL17(50),AMOL18(50),                                            
     +AMOL21(50),AMOL22(50),AMOL23(50),AMOL24(50),AMOL25(50),AMOL26(50),
     +AMOL27(50),AMOL28(50),                                            
     +AMOL31(50),AMOL32(50),AMOL33(50),AMOL34(50),AMOL35(50),AMOL36(50),
     +AMOL37(50),AMOL38(50),                                            
     +AMOL41(50),AMOL42(50),AMOL43(50),AMOL44(50),AMOL45(50),AMOL46(50),
     +AMOL47(50),AMOL48(50),                                            
     +AMOL51(50),AMOL52(50),AMOL53(50),AMOL54(50),AMOL55(50),AMOL56(50),
     +AMOL57(50),AMOL58(50),                                            
     +AMOL61(50),AMOL62(50),AMOL63(50),AMOL64(50),AMOL65(50),AMOL66(50),
     +AMOL67(50),AMOL68(50)                                             
C     COMMON /TRAC/ TRAC(50,21)                                         
      COMMON /TRAC/ ANO(50),SO2(50),ANO2(50),ANH3(50),HNO3(50),OH(50),  
     X HF(50),HCL(50),HBR(50),HI(50),CLO(50),OCS(50),H2CO(50),          
     X HOCL(50),AN2(50),HCN(50),CH3CL(50),H2O2(50),C2H2(50),            
     X C2H6(50),PH3(50)                                                 
C     DATA ALT (KM)  /                                                  
      DATA ALT/                                                         
     C       0.0,       1.0,       2.0,       3.0,       4.0,           
     C       5.0,       6.0,       7.0,       8.0,       9.0,           
     C      10.0,      11.0,      12.0,      13.0,      14.0,           
     C      15.0,      16.0,      17.0,      18.0,      19.0,           
     C      20.0,      21.0,      22.0,      23.0,      24.0,           
     C      25.0,      27.5,      30.0,      32.5,      35.0,           
     C      37.5,      40.0,      42.5,      45.0,      47.5,           
     C      50.0,      55.0,      60.0,      65.0,      70.0,           
     C      75.0,      80.0,      85.0,      90.0,      95.0,           
     C     100.0,     105.0,     110.0,     115.0,     120.0/           
C     DATA PRESSURE  /                                                  
      DATA P1/                                                          
     C 1.013E+03, 9.040E+02, 8.050E+02, 7.150E+02, 6.330E+02,           
     C 5.590E+02, 4.920E+02, 4.320E+02, 3.780E+02, 3.290E+02,           
     C 2.860E+02, 2.470E+02, 2.130E+02, 1.820E+02, 1.560E+02,           
     C 1.320E+02, 1.110E+02, 9.370E+01, 7.890E+01, 6.660E+01,           
     C 5.650E+01, 4.800E+01, 4.090E+01, 3.500E+01, 3.000E+01,           
     C 2.570E+01, 1.763E+01, 1.220E+01, 8.520E+00, 6.000E+00,           
     C 4.260E+00, 3.050E+00, 2.200E+00, 1.590E+00, 1.160E+00,           
     C 8.540E-01, 4.560E-01, 2.390E-01, 1.210E-01, 5.800E-02,           
     C 2.600E-02, 1.100E-02, 4.400E-03, 1.720E-03, 6.880E-04,           
     C 2.890E-04, 1.300E-04, 6.470E-05, 3.600E-05, 2.250E-05/           
      DATA P2/                                                          
     C 1.013E+03, 9.020E+02, 8.020E+02, 7.100E+02, 6.280E+02,           
     C 5.540E+02, 4.870E+02, 4.260E+02, 3.720E+02, 3.240E+02,           
     C 2.810E+02, 2.430E+02, 2.090E+02, 1.790E+02, 1.530E+02,           
     C 1.300E+02, 1.110E+02, 9.500E+01, 8.120E+01, 6.950E+01,           
     C 5.950E+01, 5.100E+01, 4.370E+01, 3.760E+01, 3.220E+01,           
     C 2.770E+01, 1.907E+01, 1.320E+01, 9.300E+00, 6.520E+00,           
     C 4.640E+00, 3.330E+00, 2.410E+00, 1.760E+00, 1.290E+00,           
     C 9.510E-01, 5.150E-01, 2.720E-01, 1.390E-01, 6.700E-02,           
     C 3.000E-02, 1.200E-02, 4.480E-03, 1.640E-03, 6.250E-04,           
     C 2.580E-04, 1.170E-04, 6.110E-05, 3.560E-05, 2.270E-05/           
      DATA P3/                                                          
     C 1.018E+03, 8.973E+02, 7.897E+02, 6.938E+02, 6.081E+02,           
     C 5.313E+02, 4.627E+02, 4.016E+02, 3.473E+02, 2.993E+02,           
     C 2.568E+02, 2.199E+02, 1.882E+02, 1.611E+02, 1.378E+02,           
     C 1.178E+02, 1.007E+02, 8.610E+01, 7.360E+01, 6.280E+01,           
     C 5.370E+01, 4.580E+01, 3.910E+01, 3.340E+01, 2.860E+01,           
     C 2.440E+01, 1.646E+01, 1.110E+01, 7.560E+00, 5.180E+00,           
     C 3.600E+00, 2.530E+00, 1.800E+00, 1.290E+00, 9.400E-01,           
     C 6.830E-01, 3.620E-01, 1.880E-01, 9.500E-02, 4.700E-02,           
     C 2.220E-02, 1.030E-02, 4.560E-03, 1.980E-03, 8.770E-04,           
     C 4.074E-04, 2.000E-04, 1.057E-04, 5.980E-05, 3.600E-05/           
      DATA P4/                                                          
     C 1.010E+03, 8.960E+02, 7.929E+02, 7.000E+02, 6.160E+02,           
     C 5.410E+02, 4.740E+02, 4.130E+02, 3.590E+02, 3.108E+02,           
     C 2.677E+02, 2.300E+02, 1.977E+02, 1.700E+02, 1.460E+02,           
     C 1.260E+02, 1.080E+02, 9.280E+01, 7.980E+01, 6.860E+01,           
     C 5.900E+01, 5.070E+01, 4.360E+01, 3.750E+01, 3.228E+01,           
     C 2.780E+01, 1.923E+01, 1.340E+01, 9.400E+00, 6.610E+00,           
     C 4.720E+00, 3.400E+00, 2.480E+00, 1.820E+00, 1.340E+00,           
     C 9.870E-01, 5.370E-01, 2.880E-01, 1.470E-01, 7.100E-02,           
     C 3.200E-02, 1.250E-02, 4.510E-03, 1.610E-03, 6.060E-04,           
     C 2.480E-04, 1.130E-04, 6.000E-05, 3.540E-05, 2.260E-05/           
      DATA P5/                                                          
     C 1.013E+03, 8.878E+02, 7.775E+02, 6.798E+02, 5.932E+02,           
     C 5.158E+02, 4.467E+02, 3.853E+02, 3.308E+02, 2.829E+02,           
     C 2.418E+02, 2.067E+02, 1.766E+02, 1.510E+02, 1.291E+02,           
     C 1.103E+02, 9.431E+01, 8.058E+01, 6.882E+01, 5.875E+01,           
     C 5.014E+01, 4.277E+01, 3.647E+01, 3.109E+01, 2.649E+01,           
     C 2.256E+01, 1.513E+01, 1.020E+01, 6.910E+00, 4.701E+00,           
     C 3.230E+00, 2.243E+00, 1.570E+00, 1.113E+00, 7.900E-01,           
     C 5.719E-01, 2.990E-01, 1.550E-01, 7.900E-02, 4.000E-02,           
     C 2.000E-02, 9.660E-03, 4.500E-03, 2.022E-03, 9.070E-04,           
     C 4.230E-04, 2.070E-04, 1.080E-04, 6.000E-05, 3.590E-05/           
      DATA P6/                                                          
     C 1.013E+03, 8.988E+02, 7.950E+02, 7.012E+02, 6.166E+02,           
     C 5.405E+02, 4.722E+02, 4.111E+02, 3.565E+02, 3.080E+02,           
     C 2.650E+02, 2.270E+02, 1.940E+02, 1.658E+02, 1.417E+02,           
     C 1.211E+02, 1.035E+02, 8.850E+01, 7.565E+01, 6.467E+01,           
     C 5.529E+01, 4.729E+01, 4.047E+01, 3.467E+01, 2.972E+01,           
     C 2.549E+01, 1.743E+01, 1.197E+01, 8.010E+00, 5.746E+00,           
     C 4.150E+00, 2.871E+00, 2.060E+00, 1.491E+00, 1.090E+00,           
     C 7.978E-01, 4.250E-01, 2.190E-01, 1.090E-01, 5.220E-02,           
     C 2.400E-02, 1.050E-02, 4.460E-03, 1.840E-03, 7.600E-04,           
     C 3.200E-04, 1.450E-04, 7.100E-05, 4.010E-05, 2.540E-05/           
C     DATA TEMPERATUR/                                                  
      DATA T1/                                                          
     C    299.70,    293.70,    287.70,    283.70,    277.00,           
     C    270.30,    263.60,    257.00,    250.30,    243.60,           
     C    237.00,    230.10,    223.60,    217.00,    210.30,           
     C    203.70,    197.00,    194.80,    198.80,    202.70,           
     C    206.70,    210.70,    214.60,    217.00,    219.20,           
     C    221.40,    227.00,    232.30,    237.70,    243.10,           
     C    248.50,    254.00,    259.40,    264.80,    269.60,           
     C    270.20,    263.40,    253.10,    236.00,    218.90,           
     C    201.80,    184.80,    177.10,    177.00,    184.30,           
     C    190.70,    212.00,    241.60,    299.70,    380.00/           
      DATA T2/                                                          
     C    294.20,    289.70,    285.20,    279.20,    273.20,           
     C    267.20,    261.20,    254.70,    248.20,    241.70,           
     C    235.30,    228.80,    222.30,    215.80,    215.70,           
     C    215.70,    215.70,    215.70,    216.80,    217.90,           
     C    219.20,    220.40,    221.60,    222.80,    223.90,           
     C    225.10,    228.45,    233.70,    239.00,    245.20,           
     C    251.30,    257.50,    263.70,    269.90,    275.20,           
     C    275.70,    269.30,    257.10,    240.10,    218.10,           
     C    196.10,    174.10,    165.10,    165.00,    178.30,           
     C    190.50,    222.20,    262.40,    316.80,    380.00/           
      DATA T3/                                                          
     C    272.20,    268.70,    265.20,    261.70,    255.70,           
     C    249.70,    243.70,    237.70,    231.70,    225.70,           
     C    219.70,    219.20,    218.70,    218.20,    217.70,           
     C    217.20,    216.70,    216.20,    215.70,    215.20,           
     C    215.20,    215.20,    215.20,    215.20,    215.20,           
     C    215.20,    215.50,    217.40,    220.40,    227.90,           
     C    235.50,    243.20,    250.80,    258.50,    265.10,           
     C    265.70,    260.60,    250.80,    240.90,    230.70,           
     C    220.40,    210.10,    199.80,    199.50,    208.30,           
     C    218.60,    237.10,    259.50,    293.00,    333.00/           
      DATA T4/                                                          
     C    287.20,    281.70,    276.30,    270.90,    265.50,           
     C    260.10,    253.10,    246.10,    239.20,    232.20,           
     C    225.20,    225.20,    225.20,    225.20,    225.20,           
     C    225.20,    225.20,    225.20,    225.20,    225.20,           
     C    225.20,    225.20,    225.20,    225.20,    226.60,           
     C    228.10,    231.00,    235.10,    240.00,    247.20,           
     C    254.60,    262.10,    269.50,    273.60,    276.20,           
     C    277.20,    274.00,    262.70,    239.70,    216.60,           
     C    193.60,    170.60,    161.70,    161.60,    176.80,           
     C    190.40,    226.00,    270.10,    322.70,    380.00/           
      DATA T5/                                                          
     C    257.20,    259.10,    255.90,    252.70,    247.70,           
     C    240.90,    234.10,    227.30,    220.60,    217.20,           
     C    217.20,    217.20,    217.20,    217.20,    217.20,           
     C    217.20,    216.60,    216.00,    215.40,    214.80,           
     C    214.20,    213.60,    213.00,    212.40,    211.80,           
     C    211.20,    213.60,    216.00,    218.50,    222.30,           
     C    228.50,    234.70,    240.80,    247.00,    253.20,           
     C    259.30,    259.10,    250.90,    248.40,    245.40,           
     C    234.70,    223.90,    213.10,    202.30,    211.00,           
     C    218.50,    234.00,    252.60,    288.50,    333.00/           
      DATA T6/                                                          
     C    288.20,    281.70,    275.20,    268.70,    262.20,           
     C    255.70,    249.20,    242.70,    236.20,    229.70,           
     C    223.30,    216.80,    216.70,    216.70,    216.70,           
     C    216.70,    216.70,    216.70,    216.70,    216.70,           
     C    216.70,    217.60,    218.60,    219.60,    220.60,           
     C    221.60,    224.00,    226.50,    230.00,    236.50,           
     C    242.90,    250.40,    257.30,    264.20,    270.60,           
     C    270.70,    260.80,    247.00,    233.30,    219.60,           
     C    208.40,    198.60,    188.90,    186.90,    188.40,           
     C    195.10,    208.80,    240.00,    300.00,    360.00/           
C     DATA  H2O      /                                                  
      DATA AMOL11/                                                      
     C 2.593E+04, 1.949E+04, 1.534E+04, 8.600E+03, 4.441E+03,           
     C 3.346E+03, 2.101E+03, 1.289E+03, 7.637E+02, 4.098E+02,           
     C 1.912E+02, 7.306E+01, 2.905E+01, 9.900E+00, 6.220E+00,           
     C 4.000E+00, 3.000E+00, 2.900E+00, 2.750E+00, 2.600E+00,           
     C 2.600E+00, 2.650E+00, 2.800E+00, 2.900E+00, 3.200E+00,           
     C 3.250E+00, 3.600E+00, 4.000E+00, 4.300E+00, 4.600E+00,           
     C 4.900E+00, 5.200E+00, 5.500E+00, 5.700E+00, 5.900E+00,           
     C 6.000E+00, 6.000E+00, 6.000E+00, 5.400E+00, 4.500E+00,           
     C 3.300E+00, 2.100E+00, 1.300E+00, 8.500E-01, 5.400E-01,           
     C 4.000E-01, 3.400E-01, 2.800E-01, 2.400E-01, 2.000E-01/           
      DATA AMOL21/                                                      
     C 1.876E+04, 1.378E+04, 9.680E+03, 5.984E+03, 3.813E+03,           
     C 2.225E+03, 1.510E+03, 1.020E+03, 6.464E+02, 4.129E+02,           
     C 2.472E+02, 9.556E+01, 2.944E+01, 8.000E+00, 5.000E+00,           
     C 3.400E+00, 3.300E+00, 3.200E+00, 3.150E+00, 3.200E+00,           
     C 3.300E+00, 3.450E+00, 3.600E+00, 3.850E+00, 4.000E+00,           
     C 4.200E+00, 4.450E+00, 4.700E+00, 4.850E+00, 4.950E+00,           
     C 5.000E+00, 5.100E+00, 5.300E+00, 5.450E+00, 5.500E+00,           
     C 5.500E+00, 5.350E+00, 5.000E+00, 4.400E+00, 3.700E+00,           
     C 2.950E+00, 2.100E+00, 1.330E+00, 8.500E-01, 5.400E-01,           
     C 4.000E-01, 3.400E-01, 2.800E-01, 2.400E-01, 2.000E-01/           
      DATA AMOL31/                                                      
     C 4.316E+03, 3.454E+03, 2.788E+03, 2.088E+03, 1.280E+03,           
     C 8.241E+02, 5.103E+02, 2.321E+02, 1.077E+02, 5.566E+01,           
     C 2.960E+01, 1.000E+01, 6.000E+00, 5.000E+00, 4.800E+00,           
     C 4.700E+00, 4.600E+00, 4.500E+00, 4.500E+00, 4.500E+00,           
     C 4.500E+00, 4.500E+00, 4.530E+00, 4.550E+00, 4.600E+00,           
     C 4.650E+00, 4.700E+00, 4.750E+00, 4.800E+00, 4.850E+00,           
     C 4.900E+00, 4.950E+00, 5.000E+00, 5.000E+00, 5.000E+00,           
     C 4.950E+00, 4.850E+00, 4.500E+00, 4.000E+00, 3.300E+00,           
     C 2.700E+00, 2.000E+00, 1.330E+00, 8.500E-01, 5.400E-01,           
     C 4.000E-01, 3.400E-01, 2.800E-01, 2.400E-01, 2.000E-01/           
      DATA AMOL41/                                                      
     C 1.194E+04, 8.701E+03, 6.750E+03, 4.820E+03, 3.380E+03,           
     C 2.218E+03, 1.330E+03, 7.971E+02, 3.996E+02, 1.300E+02,           
     C 4.240E+01, 1.330E+01, 6.000E+00, 4.450E+00, 4.000E+00,           
     C 4.000E+00, 4.000E+00, 4.050E+00, 4.300E+00, 4.500E+00,           
     C 4.600E+00, 4.700E+00, 4.800E+00, 4.830E+00, 4.850E+00,           
     C 4.900E+00, 4.950E+00, 5.000E+00, 5.000E+00, 5.000E+00,           
     C 5.000E+00, 5.000E+00, 5.000E+00, 5.000E+00, 5.000E+00,           
     C 4.950E+00, 4.850E+00, 4.500E+00, 4.000E+00, 3.300E+00,           
     C 2.700E+00, 2.000E+00, 1.330E+00, 8.500E-01, 5.400E-01,           
     C 4.000E-01, 3.400E-01, 2.800E-01, 2.400E-01, 2.000E-01/           
      DATA AMOL51/                                                      
     C 1.405E+03, 1.615E+03, 1.427E+03, 1.166E+03, 7.898E+02,           
     C 4.309E+02, 2.369E+02, 1.470E+02, 3.384E+01, 2.976E+01,           
     C 2.000E+01, 1.000E+01, 6.000E+00, 4.450E+00, 4.500E+00,           
     C 4.550E+00, 4.600E+00, 4.650E+00, 4.700E+00, 4.750E+00,           
     C 4.800E+00, 4.850E+00, 4.900E+00, 4.950E+00, 5.000E+00,           
     C 5.000E+00, 5.000E+00, 5.000E+00, 5.000E+00, 5.000E+00,           
     C 5.000E+00, 5.000E+00, 5.000E+00, 5.000E+00, 5.000E+00,           
     C 4.950E+00, 4.850E+00, 4.500E+00, 4.000E+00, 3.300E+00,           
     C 2.700E+00, 2.000E+00, 1.330E+00, 8.500E-01, 5.400E-01,           
     C 4.000E-01, 3.400E-01, 2.800E-01, 2.400E-01, 2.000E-01/           
      DATA AMOL61/                                                      
     C 7.745E+03, 6.071E+03, 4.631E+03, 3.182E+03, 2.158E+03,           
     C 1.397E+03, 9.254E+02, 5.720E+02, 3.667E+02, 1.583E+02,           
     C 6.996E+01, 3.613E+01, 1.906E+01, 1.085E+01, 5.927E+00,           
     C 5.000E+00, 3.950E+00, 3.850E+00, 3.825E+00, 3.850E+00,           
     C 3.900E+00, 3.975E+00, 4.065E+00, 4.200E+00, 4.300E+00,           
     C 4.425E+00, 4.575E+00, 4.725E+00, 4.825E+00, 4.900E+00,           
     C 4.950E+00, 5.025E+00, 5.150E+00, 5.225E+00, 5.250E+00,           
     C 5.225E+00, 5.100E+00, 4.750E+00, 4.200E+00, 3.500E+00,           
     C 2.825E+00, 2.050E+00, 1.330E+00, 8.500E-01, 5.400E-01,           
     C 4.000E-01, 3.400E-01, 2.800E-01, 2.400E-01, 2.000E-01/           
C     DATA CO2       /                                                  
      DATA AMOL12/                                                      
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.280E+02, 3.200E+02, 3.100E+02, 2.700E+02,           
     C 1.950E+02, 1.100E+02, 6.000E+01, 4.000E+01, 3.500E+01/           
C     DATA CO2       /                                                  
      DATA AMOL22/                                                      
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.280E+02, 3.200E+02, 3.100E+02, 2.700E+02,           
     C 1.950E+02, 1.100E+02, 6.000E+01, 4.000E+01, 3.500E+01/           
C     DATA CO2       /                                                  
      DATA AMOL32/                                                      
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.280E+02, 3.200E+02, 3.100E+02, 2.700E+02,           
     C 1.950E+02, 1.100E+02, 6.000E+01, 4.000E+01, 3.500E+01/           
C     DATA CO2       /                                                  
      DATA AMOL42/                                                      
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.280E+02, 3.200E+02, 3.100E+02, 2.700E+02,           
     C 1.950E+02, 1.100E+02, 6.000E+01, 4.000E+01, 3.500E+01/           
C     DATA CO2       /                                                  
      DATA AMOL52/                                                      
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.280E+02, 3.200E+02, 3.100E+02, 2.700E+02,           
     C 1.950E+02, 1.100E+02, 6.000E+01, 4.000E+01, 3.500E+01/           
C     DATA CO2       /                                                  
      DATA AMOL62/                                                      
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.280E+02, 3.200E+02, 3.100E+02, 2.700E+02,           
     C 1.950E+02, 1.100E+02, 6.000E+01, 4.000E+01, 3.500E+01/           
C     DATA OZONE     /                                                  
      DATA AMOL13/                                                      
     C 2.869E-02, 3.150E-02, 3.342E-02, 3.504E-02, 3.561E-02,           
     C 3.767E-02, 3.989E-02, 4.223E-02, 4.471E-02, 5.000E-02,           
     C 5.595E-02, 6.613E-02, 7.815E-02, 9.289E-02, 1.050E-01,           
     C 1.256E-01, 1.444E-01, 2.500E-01, 5.000E-01, 9.500E-01,           
     C 1.400E+00, 1.800E+00, 2.400E+00, 3.400E+00, 4.300E+00,           
     C 5.400E+00, 7.800E+00, 9.300E+00, 9.850E+00, 9.700E+00,           
     C 8.800E+00, 7.500E+00, 5.900E+00, 4.500E+00, 3.450E+00,           
     C 2.800E+00, 1.800E+00, 1.100E+00, 6.500E-01, 3.000E-01,           
     C 1.800E-01, 3.300E-01, 5.000E-01, 5.200E-01, 5.000E-01,           
     C 4.000E-01, 2.000E-01, 5.000E-02, 5.000E-03, 5.000E-04/           
      DATA AMOL23/                                                      
     C 3.017E-02, 3.337E-02, 3.694E-02, 4.222E-02, 4.821E-02,           
     C 5.512E-02, 6.408E-02, 7.764E-02, 9.126E-02, 1.111E-01,           
     C 1.304E-01, 1.793E-01, 2.230E-01, 3.000E-01, 4.400E-01,           
     C 5.000E-01, 6.000E-01, 7.000E-01, 1.000E+00, 1.500E+00,           
     C 2.000E+00, 2.400E+00, 2.900E+00, 3.400E+00, 4.000E+00,           
     C 4.800E+00, 6.000E+00, 7.000E+00, 8.100E+00, 8.900E+00,           
     C 8.700E+00, 7.550E+00, 5.900E+00, 4.500E+00, 3.500E+00,           
     C 2.800E+00, 1.800E+00, 1.300E+00, 8.000E-01, 4.000E-01,           
     C 1.900E-01, 2.000E-01, 5.700E-01, 7.500E-01, 7.000E-01,           
     C 4.000E-01, 2.000E-01, 5.000E-02, 5.000E-03, 5.000E-04/           
      DATA AMOL33/                                                      
     C 2.778E-02, 2.800E-02, 2.849E-02, 3.200E-02, 3.567E-02,           
     C 4.720E-02, 5.837E-02, 7.891E-02, 1.039E-01, 1.567E-01,           
     C 2.370E-01, 3.624E-01, 5.232E-01, 7.036E-01, 8.000E-01,           
     C 9.000E-01, 1.100E+00, 1.400E+00, 1.800E+00, 2.300E+00,           
     C 2.900E+00, 3.500E+00, 3.900E+00, 4.300E+00, 4.700E+00,           
     C 5.100E+00, 5.600E+00, 6.100E+00, 6.800E+00, 7.100E+00,           
     C 7.200E+00, 6.900E+00, 5.900E+00, 4.600E+00, 3.700E+00,           
     C 2.750E+00, 1.700E+00, 1.000E-00, 5.500E-01, 3.200E-01,           
     C 2.500E-01, 2.300E-01, 5.500E-01, 8.000E-01, 8.000E-01,           
     C 4.000E-01, 2.000E-01, 5.000E-02, 5.000E-03, 5.000E-04/           
      DATA AMOL43/                                                      
     C 2.412E-02, 2.940E-02, 3.379E-02, 3.887E-02, 4.478E-02,           
     C 5.328E-02, 6.564E-02, 7.738E-02, 9.114E-02, 1.420E-01,           
     C 1.890E-01, 3.050E-01, 4.100E-01, 5.000E-01, 6.000E-01,           
     C 7.000E-01, 8.500E-01, 1.000E+00, 1.300E+00, 1.700E+00,           
     C 2.100E+00, 2.700E+00, 3.300E+00, 3.700E+00, 4.200E+00,           
     C 4.500E+00, 5.300E+00, 5.700E+00, 6.900E+00, 7.700E+00,           
     C 7.800E+00, 7.000E+00, 5.400E+00, 4.200E+00, 3.200E+00,           
     C 2.500E+00, 1.700E+00, 1.200E+00, 8.000E-01, 4.000E-01,           
     C 2.000E-01, 1.800E-01, 6.500E-01, 9.000E-01, 8.000E-01,           
     C 4.000E-01, 2.000E-01, 5.000E-02, 5.000E-03, 5.000E-04/           
      DATA AMOL53/                                                      
     C 1.802E-02, 2.072E-02, 2.336E-02, 2.767E-02, 3.253E-02,           
     C 3.801E-02, 4.446E-02, 7.252E-02, 1.040E-01, 2.100E-01,           
     C 3.000E-01, 3.500E-01, 4.000E-01, 6.500E-01, 9.000E-01,           
     C 1.200E+00, 1.500E+00, 1.900E+00, 2.450E+00, 3.100E+00,           
     C 3.700E+00, 4.000E+00, 4.200E+00, 4.500E+00, 4.600E+00,           
     C 4.700E+00, 4.900E+00, 5.400E+00, 5.900E+00, 6.200E+00,           
     C 6.250E+00, 5.900E+00, 5.100E+00, 4.100E+00, 3.000E+00,           
     C 2.600E+00, 1.600E+00, 9.500E-01, 6.500E-01, 5.000E-01,           
     C 3.300E-01, 1.300E-01, 7.500E-01, 8.000E-01, 8.000E-01,           
     C 4.000E-01, 2.000E-01, 5.000E-02, 5.000E-03, 5.000E-04/           
      DATA AMOL63/                                                      
     C 2.660E-02, 2.931E-02, 3.237E-02, 3.318E-02, 3.387E-02,           
     C 3.768E-02, 4.112E-02, 5.009E-02, 5.966E-02, 9.168E-02,           
     C 1.313E-01, 2.149E-01, 3.095E-01, 3.846E-01, 5.030E-01,           
     C 6.505E-01, 8.701E-01, 1.187E+00, 1.587E+00, 2.030E+00,           
     C 2.579E+00, 3.028E+00, 3.647E+00, 4.168E+00, 4.627E+00,           
     C 5.118E+00, 5.803E+00, 6.553E+00, 7.373E+00, 7.837E+00,           
     C 7.800E+00, 7.300E+00, 6.200E+00, 5.250E+00, 4.100E+00,           
     C 3.100E+00, 1.800E+00, 1.100E+00, 7.000E-01, 3.000E-01,           
     C 2.500E-01, 3.000E-01, 5.000E-01, 7.000E-01, 7.000E-01,           
     C 4.000E-01, 2.000E-01, 5.000E-02, 5.000E-03, 5.000E-04/           
C     DATA  N2O      /                                                  
      DATA AMOL14/                                                      
     C 3.200E-01, 3.200E-01, 3.200E-01, 3.200E-01, 3.200E-01,           
     C 3.200E-01, 3.200E-01, 3.200E-01, 3.200E-01, 3.195E-01,           
     C 3.179E-01, 3.140E-01, 3.095E-01, 3.048E-01, 2.999E-01,           
     C 2.944E-01, 2.877E-01, 2.783E-01, 2.671E-01, 2.527E-01,           
     C 2.365E-01, 2.194E-01, 2.051E-01, 1.967E-01, 1.875E-01,           
     C 1.756E-01, 1.588E-01, 1.416E-01, 1.165E-01, 9.275E-02,           
     C 6.693E-02, 4.513E-02, 2.751E-02, 1.591E-02, 9.378E-03,           
     C 4.752E-03, 3.000E-03, 2.065E-03, 1.507E-03, 1.149E-03,           
     C 8.890E-04, 7.056E-04, 5.716E-04, 4.708E-04, 3.932E-04,           
     C 3.323E-04, 2.837E-04, 2.443E-04, 2.120E-04, 1.851E-04/           
C     DATA  N2O      /                                                  
      DATA AMOL24/                                                      
     C 3.200E-01, 3.200E-01, 3.200E-01, 3.200E-01, 3.200E-01,           
     C 3.200E-01, 3.200E-01, 3.200E-01, 3.195E-01, 3.163E-01,           
     C 3.096E-01, 2.989E-01, 2.936E-01, 2.860E-01, 2.800E-01,           
     C 2.724E-01, 2.611E-01, 2.421E-01, 2.174E-01, 1.843E-01,           
     C 1.607E-01, 1.323E-01, 1.146E-01, 1.035E-01, 9.622E-02,           
     C 8.958E-02, 8.006E-02, 6.698E-02, 4.958E-02, 3.695E-02,           
     C 2.519E-02, 1.736E-02, 1.158E-02, 7.665E-03, 5.321E-03,           
     C 3.215E-03, 2.030E-03, 1.397E-03, 1.020E-03, 7.772E-04,           
     C 6.257E-04, 5.166E-04, 4.352E-04, 3.727E-04, 3.237E-04,           
     C 2.844E-04, 2.524E-04, 2.260E-04, 2.039E-04, 1.851E-04/           
C     DATA  N2O      /                                                  
      DATA AMOL34/                                                      
     C 3.200E-01, 3.200E-01, 3.200E-01, 3.200E-01, 3.200E-01,           
     C 3.200E-01, 3.200E-01, 3.200E-01, 3.195E-01, 3.163E-01,           
     C 3.096E-01, 2.989E-01, 2.936E-01, 2.860E-01, 2.800E-01,           
     C 2.724E-01, 2.611E-01, 2.421E-01, 2.174E-01, 1.843E-01,           
     C 1.621E-01, 1.362E-01, 1.230E-01, 1.124E-01, 1.048E-01,           
     C 9.661E-02, 8.693E-02, 7.524E-02, 6.126E-02, 5.116E-02,           
     C 3.968E-02, 2.995E-02, 2.080E-02, 1.311E-02, 8.071E-03,           
     C 4.164E-03, 2.629E-03, 1.809E-03, 1.321E-03, 1.007E-03,           
     C 7.883E-04, 6.333E-04, 5.194E-04, 4.333E-04, 3.666E-04,           
     C 3.140E-04, 2.717E-04, 2.373E-04, 2.089E-04, 1.851E-04/           
C     DATA  N2O      /                                                  
      DATA AMOL44/                                                      
     C 3.100E-01, 3.100E-01, 3.100E-01, 3.100E-01, 3.079E-01,           
     C 3.024E-01, 2.906E-01, 2.822E-01, 2.759E-01, 2.703E-01,           
     C 2.651E-01, 2.600E-01, 2.549E-01, 2.494E-01, 2.433E-01,           
     C 2.355E-01, 2.282E-01, 2.179E-01, 2.035E-01, 1.817E-01,           
     C 1.567E-01, 1.350E-01, 1.218E-01, 1.102E-01, 9.893E-02,           
     C 8.775E-02, 7.327E-02, 5.941E-02, 4.154E-02, 3.032E-02,           
     C 1.949E-02, 1.274E-02, 9.001E-03, 6.286E-03, 4.558E-03,           
     C 2.795E-03, 1.765E-03, 1.214E-03, 8.866E-04, 6.756E-04,           
     C 5.538E-04, 4.649E-04, 3.979E-04, 3.459E-04, 3.047E-04,           
     C 2.713E-04, 2.439E-04, 2.210E-04, 2.017E-04, 1.851E-04/           
C     DATA  N2O      /                                                  
      DATA AMOL54/                                                      
     C 3.200E-01, 3.200E-01, 3.200E-01, 3.200E-01, 3.200E-01,           
     C 3.200E-01, 3.200E-01, 3.200E-01, 3.195E-01, 3.163E-01,           
     C 3.096E-01, 2.989E-01, 2.936E-01, 2.860E-01, 2.800E-01,           
     C 2.724E-01, 2.611E-01, 2.421E-01, 2.174E-01, 1.843E-01,           
     C 1.621E-01, 1.362E-01, 1.230E-01, 1.122E-01, 1.043E-01,           
     C 9.570E-02, 8.598E-02, 7.314E-02, 5.710E-02, 4.670E-02,           
     C 3.439E-02, 2.471E-02, 1.631E-02, 1.066E-02, 7.064E-03,           
     C 3.972E-03, 2.508E-03, 1.726E-03, 1.260E-03, 9.602E-04,           
     C 7.554E-04, 6.097E-04, 5.024E-04, 4.210E-04, 3.579E-04,           
     C 3.080E-04, 2.678E-04, 2.350E-04, 2.079E-04, 1.851E-04/           
C     DATA  N2O      /                                                  
      DATA AMOL64/                                                      
     C 3.200E-01, 3.200E-01, 3.200E-01, 3.200E-01, 3.200E-01,           
     C 3.200E-01, 3.200E-01, 3.200E-01, 3.200E-01, 3.195E-01,           
     C 3.179E-01, 3.140E-01, 3.095E-01, 3.048E-01, 2.999E-01,           
     C 2.944E-01, 2.877E-01, 2.783E-01, 2.671E-01, 2.527E-01,           
     C 2.365E-01, 2.194E-01, 2.051E-01, 1.967E-01, 1.875E-01,           
     C 1.756E-01, 1.588E-01, 1.416E-01, 1.165E-01, 9.275E-02,           
     C 6.693E-02, 4.513E-02, 2.751E-02, 1.591E-02, 9.378E-03,           
     C 4.752E-03, 3.000E-03, 2.065E-03, 1.507E-03, 1.149E-03,           
     C 8.890E-04, 7.056E-04, 5.716E-04, 4.708E-04, 3.932E-04,           
     C 3.323E-04, 2.837E-04, 2.443E-04, 2.120E-04, 1.851E-04/           
C     DATA CO        /                                                  
      DATA AMOL15/                                                      
     C 1.500E-01, 1.450E-01, 1.399E-01, 1.349E-01, 1.312E-01,           
     C 1.303E-01, 1.288E-01, 1.247E-01, 1.185E-01, 1.094E-01,           
     C 9.962E-02, 8.964E-02, 7.814E-02, 6.374E-02, 5.025E-02,           
     C 3.941E-02, 3.069E-02, 2.489E-02, 1.966E-02, 1.549E-02,           
     C 1.331E-02, 1.232E-02, 1.232E-02, 1.307E-02, 1.400E-02,           
     C 1.521E-02, 1.722E-02, 1.995E-02, 2.266E-02, 2.487E-02,           
     C 2.738E-02, 3.098E-02, 3.510E-02, 3.987E-02, 4.482E-02,           
     C 5.092E-02, 5.985E-02, 6.960E-02, 9.188E-02, 1.938E-01,           
     C 5.688E-01, 1.549E+00, 3.849E+00, 6.590E+00, 1.044E+01,           
     C 1.705E+01, 2.471E+01, 3.358E+01, 4.148E+01, 5.000E+01/           
C     DATA CO        /                                                  
      DATA AMOL25/                                                      
     C 1.500E-01, 1.450E-01, 1.399E-01, 1.349E-01, 1.312E-01,           
     C 1.303E-01, 1.288E-01, 1.247E-01, 1.185E-01, 1.094E-01,           
     C 9.962E-02, 8.964E-02, 7.814E-02, 6.374E-02, 5.025E-02,           
     C 3.941E-02, 3.069E-02, 2.489E-02, 1.966E-02, 1.549E-02,           
     C 1.331E-02, 1.232E-02, 1.232E-02, 1.307E-02, 1.400E-02,           
     C 1.521E-02, 1.722E-02, 1.995E-02, 2.266E-02, 2.487E-02,           
     C 2.716E-02, 2.962E-02, 3.138E-02, 3.307E-02, 3.487E-02,           
     C 3.645E-02, 3.923E-02, 4.673E-02, 6.404E-02, 1.177E-01,           
     C 2.935E-01, 6.815E-01, 1.465E+00, 2.849E+00, 5.166E+00,           
     C 1.008E+01, 1.865E+01, 2.863E+01, 3.890E+01, 5.000E+01/           
C     DATA CO        /                                                  
      DATA AMOL35/                                                      
     C 1.500E-01, 1.450E-01, 1.399E-01, 1.349E-01, 1.312E-01,           
     C 1.303E-01, 1.288E-01, 1.247E-01, 1.185E-01, 1.094E-01,           
     C 9.962E-02, 8.964E-02, 7.814E-02, 6.374E-02, 5.025E-02,           
     C 3.941E-02, 3.069E-02, 2.489E-02, 1.966E-02, 1.549E-02,           
     C 1.331E-02, 1.232E-02, 1.232E-02, 1.307E-02, 1.400E-02,           
     C 1.498E-02, 1.598E-02, 1.710E-02, 1.850E-02, 1.997E-02,           
     C 2.147E-02, 2.331E-02, 2.622E-02, 3.057E-02, 3.803E-02,           
     C 6.245E-02, 1.480E-01, 2.926E-01, 5.586E-01, 1.078E+00,           
     C 1.897E+00, 2.960E+00, 4.526E+00, 6.862E+00, 1.054E+01,           
     C 1.709E+01, 2.473E+01, 3.359E+01, 4.149E+01, 5.000E+01/           
C     DATA CO        /                                                  
      DATA AMOL45/                                                      
     C 1.500E-01, 1.450E-01, 1.399E-01, 1.349E-01, 1.312E-01,           
     C 1.303E-01, 1.288E-01, 1.247E-01, 1.185E-01, 1.094E-01,           
     C 9.962E-02, 8.964E-02, 7.814E-02, 6.374E-02, 5.025E-02,           
     C 3.941E-02, 3.069E-02, 2.489E-02, 1.966E-02, 1.549E-02,           
     C 1.331E-02, 1.232E-02, 1.232E-02, 1.307E-02, 1.400E-02,           
     C 1.510E-02, 1.649E-02, 1.808E-02, 1.997E-02, 2.183E-02,           
     C 2.343E-02, 2.496E-02, 2.647E-02, 2.809E-02, 2.999E-02,           
     C 3.220E-02, 3.650E-02, 4.589E-02, 6.375E-02, 1.176E-01,           
     C 3.033E-01, 7.894E-01, 1.823E+00, 3.402E+00, 5.916E+00,           
     C 1.043E+01, 1.881E+01, 2.869E+01, 3.892E+01, 5.000E+01/           
C     DATA CO        /                                                  
      DATA AMOL55/                                                      
     C 1.500E-01, 1.450E-01, 1.399E-01, 1.349E-01, 1.312E-01,           
     C 1.303E-01, 1.288E-01, 1.247E-01, 1.185E-01, 1.094E-01,           
     C 9.962E-02, 8.964E-02, 7.814E-02, 6.374E-02, 5.025E-02,           
     C 3.941E-02, 3.069E-02, 2.489E-02, 1.966E-02, 1.549E-02,           
     C 1.331E-02, 1.232E-02, 1.232E-02, 1.307E-02, 1.400E-02,           
     C 1.521E-02, 1.722E-02, 2.037E-02, 2.486E-02, 3.168E-02,           
     C 4.429E-02, 6.472E-02, 1.041E-01, 1.507E-01, 2.163E-01,           
     C 3.141E-01, 4.842E-01, 7.147E-01, 1.067E+00, 1.516E+00,           
     C 2.166E+00, 3.060E+00, 4.564E+00, 6.877E+00, 1.055E+01,           
     C 1.710E+01, 2.473E+01, 3.359E+01, 4.149E+01, 5.000E+01/           
C     DATA CO        /                                                  
      DATA AMOL65/                                                      
     C 1.500E-01, 1.450E-01, 1.399E-01, 1.349E-01, 1.312E-01,           
     C 1.303E-01, 1.288E-01, 1.247E-01, 1.185E-01, 1.094E-01,           
     C 9.962E-02, 8.964E-02, 7.814E-02, 6.374E-02, 5.025E-02,           
     C 3.941E-02, 3.069E-02, 2.489E-02, 1.966E-02, 1.549E-02,           
     C 1.331E-02, 1.232E-02, 1.232E-02, 1.307E-02, 1.400E-02,           
     C 1.498E-02, 1.598E-02, 1.710E-02, 1.850E-02, 2.009E-02,           
     C 2.220E-02, 2.497E-02, 2.824E-02, 3.241E-02, 3.717E-02,           
     C 4.597E-02, 6.639E-02, 1.073E-01, 1.862E-01, 3.059E-01,           
     C 6.375E-01, 1.497E+00, 3.239E+00, 5.843E+00, 1.013E+01,           
     C 1.692E+01, 2.467E+01, 3.356E+01, 4.148E+01, 5.000E+01/           
C     DATA  CH4      /                                                  
      DATA AMOL16/                                                      
     C 1.700E+00, 1.700E+00, 1.700E+00, 1.700E+00, 1.700E+00,           
     C 1.700E+00, 1.700E+00, 1.699E+00, 1.697E+00, 1.693E+00,           
     C 1.685E+00, 1.675E+00, 1.662E+00, 1.645E+00, 1.626E+00,           
     C 1.605E+00, 1.582E+00, 1.553E+00, 1.521E+00, 1.480E+00,           
     C 1.424E+00, 1.355E+00, 1.272E+00, 1.191E+00, 1.118E+00,           
     C 1.055E+00, 9.870E-01, 9.136E-01, 8.300E-01, 7.460E-01,           
     C 6.618E-01, 5.638E-01, 4.614E-01, 3.631E-01, 2.773E-01,           
     C 2.100E-01, 1.651E-01, 1.500E-01, 1.500E-01, 1.500E-01,           
     C 1.500E-01, 1.500E-01, 1.500E-01, 1.400E-01, 1.300E-01,           
     C 1.200E-01, 1.100E-01, 9.500E-02, 6.000E-02, 3.000E-02/           
C     DATA  CH4      /                                                  
      DATA AMOL26/                                                      
     C 1.700E+00, 1.700E+00, 1.700E+00, 1.700E+00, 1.697E+00,           
     C 1.687E+00, 1.672E+00, 1.649E+00, 1.629E+00, 1.615E+00,           
     C 1.579E+00, 1.542E+00, 1.508E+00, 1.479E+00, 1.451E+00,           
     C 1.422E+00, 1.390E+00, 1.356E+00, 1.323E+00, 1.281E+00,           
     C 1.224E+00, 1.154E+00, 1.066E+00, 9.730E-01, 8.800E-01,           
     C 7.888E-01, 7.046E-01, 6.315E-01, 5.592E-01, 5.008E-01,           
     C 4.453E-01, 3.916E-01, 3.389E-01, 2.873E-01, 2.384E-01,           
     C 1.944E-01, 1.574E-01, 1.500E-01, 1.500E-01, 1.500E-01,           
     C 1.500E-01, 1.500E-01, 1.500E-01, 1.400E-01, 1.300E-01,           
     C 1.200E-01, 1.100E-01, 9.500E-02, 6.000E-02, 3.000E-02/           
C     DATA  CH4      /                                                  
      DATA AMOL36/                                                      
     C 1.700E+00, 1.700E+00, 1.700E+00, 1.700E+00, 1.697E+00,           
     C 1.687E+00, 1.672E+00, 1.649E+00, 1.629E+00, 1.615E+00,           
     C 1.579E+00, 1.542E+00, 1.508E+00, 1.479E+00, 1.451E+00,           
     C 1.422E+00, 1.390E+00, 1.356E+00, 1.323E+00, 1.281E+00,           
     C 1.224E+00, 1.154E+00, 1.066E+00, 9.730E-01, 8.800E-01,           
     C 7.931E-01, 7.130E-01, 6.438E-01, 5.746E-01, 5.050E-01,           
     C 4.481E-01, 3.931E-01, 3.395E-01, 2.876E-01, 2.386E-01,           
     C 1.944E-01, 1.574E-01, 1.500E-01, 1.500E-01, 1.500E-01,           
     C 1.500E-01, 1.500E-01, 1.500E-01, 1.400E-01, 1.300E-01,           
     C 1.200E-01, 1.100E-01, 9.500E-02, 6.000E-02, 3.000E-02/           
C     DATA  CH4      /                                                  
      DATA AMOL46/                                                      
     C 1.700E+00, 1.700E+00, 1.700E+00, 1.700E+00, 1.697E+00,           
     C 1.687E+00, 1.672E+00, 1.649E+00, 1.629E+00, 1.615E+00,           
     C 1.579E+00, 1.542E+00, 1.506E+00, 1.471E+00, 1.434E+00,           
     C 1.389E+00, 1.342E+00, 1.290E+00, 1.230E+00, 1.157E+00,           
     C 1.072E+00, 9.903E-01, 9.170E-01, 8.574E-01, 8.013E-01,           
     C 7.477E-01, 6.956E-01, 6.442E-01, 5.888E-01, 5.240E-01,           
     C 4.506E-01, 3.708E-01, 2.992E-01, 2.445E-01, 2.000E-01,           
     C 1.660E-01, 1.500E-01, 1.500E-01, 1.500E-01, 1.500E-01,           
     C 1.500E-01, 1.500E-01, 1.500E-01, 1.400E-01, 1.300E-01,           
     C 1.200E-01, 1.100E-01, 9.500E-02, 6.000E-02, 3.000E-02/           
C     DATA  CH4      /                                                  
      DATA AMOL56/                                                      
     C 1.700E+00, 1.700E+00, 1.700E+00, 1.700E+00, 1.697E+00,           
     C 1.687E+00, 1.672E+00, 1.649E+00, 1.629E+00, 1.615E+00,           
     C 1.579E+00, 1.542E+00, 1.506E+00, 1.471E+00, 1.434E+00,           
     C 1.389E+00, 1.342E+00, 1.290E+00, 1.230E+00, 1.161E+00,           
     C 1.084E+00, 1.014E+00, 9.561E-01, 9.009E-01, 8.479E-01,           
     C 7.961E-01, 7.449E-01, 6.941E-01, 6.434E-01, 5.883E-01,           
     C 5.238E-01, 4.505E-01, 3.708E-01, 3.004E-01, 2.453E-01,           
     C 1.980E-01, 1.590E-01, 1.500E-01, 1.500E-01, 1.500E-01,           
     C 1.500E-01, 1.500E-01, 1.500E-01, 1.400E-01, 1.300E-01,           
     C 1.200E-01, 1.100E-01, 9.500E-02, 6.000E-02, 3.000E-02/           
C     DATA  CH4      /                                                  
      DATA AMOL66/                                                      
     C 1.700E+00, 1.700E+00, 1.700E+00, 1.700E+00, 1.700E+00,           
     C 1.700E+00, 1.700E+00, 1.699E+00, 1.697E+00, 1.693E+00,           
     C 1.685E+00, 1.675E+00, 1.662E+00, 1.645E+00, 1.626E+00,           
     C 1.605E+00, 1.582E+00, 1.553E+00, 1.521E+00, 1.480E+00,           
     C 1.424E+00, 1.355E+00, 1.272E+00, 1.191E+00, 1.118E+00,           
     C 1.055E+00, 9.870E-01, 9.136E-01, 8.300E-01, 7.460E-01,           
     C 6.618E-01, 5.638E-01, 4.614E-01, 3.631E-01, 2.773E-01,           
     C 2.100E-01, 1.650E-01, 1.500E-01, 1.500E-01, 1.500E-01,           
     C 1.500E-01, 1.500E-01, 1.500E-01, 1.400E-01, 1.300E-01,           
     C 1.200E-01, 1.100E-01, 9.500E-02, 6.000E-02, 3.000E-02/           
C     DATA O2        /                                                  
      DATA AMOL17/                                                      
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.000E+05, 1.900E+05, 1.800E+05,           
     C 1.600E+05, 1.400E+05, 1.200E+05, 9.400E+04, 7.250E+04/           
C     DATA O2        /                                                  
      DATA AMOL27/                                                      
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.000E+05, 1.900E+05, 1.800E+05,           
     C 1.600E+05, 1.400E+05, 1.200E+05, 9.400E+04, 7.250E+04/           
C     DATA O2        /                                                  
      DATA AMOL37/                                                      
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.000E+05, 1.900E+05, 1.800E+05,           
     C 1.600E+05, 1.400E+05, 1.200E+05, 9.400E+04, 7.250E+04/           
C     DATA O2        /                                                  
      DATA AMOL47/                                                      
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.000E+05, 1.900E+05, 1.800E+05,           
     C 1.600E+05, 1.400E+05, 1.200E+05, 9.400E+04, 7.250E+04/           
C     DATA O2        /                                                  
      DATA AMOL57/                                                      
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.000E+05, 1.900E+05, 1.800E+05,           
     C 1.600E+05, 1.400E+05, 1.200E+05, 9.400E+04, 7.250E+04/           
C     DATA O2        /                                                  
      DATA AMOL67/                                                      
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.000E+05, 1.900E+05, 1.800E+05,           
     C 1.600E+05, 1.400E+05, 1.200E+05, 9.400E+04, 7.250E+04/           
C     DATA DENSITY   /                                                  
      DATA AMOL18/                                                      
     C 2.450E+19, 2.231E+19, 2.028E+19, 1.827E+19, 1.656E+19,           
     C 1.499E+19, 1.353E+19, 1.218E+19, 1.095E+19, 9.789E+18,           
     C 8.747E+18, 7.780E+18, 6.904E+18, 6.079E+18, 5.377E+18,           
     C 4.697E+18, 4.084E+18, 3.486E+18, 2.877E+18, 2.381E+18,           
     C 1.981E+18, 1.651E+18, 1.381E+18, 1.169E+18, 9.920E+17,           
     C 8.413E+17, 5.629E+17, 3.807E+17, 2.598E+17, 1.789E+17,           
     C 1.243E+17, 8.703E+16, 6.147E+16, 4.352E+16, 3.119E+16,           
     C 2.291E+16, 1.255E+16, 6.844E+15, 3.716E+15, 1.920E+15,           
     C 9.338E+14, 4.314E+14, 1.801E+14, 7.043E+13, 2.706E+13,           
     C 1.098E+13, 4.445E+12, 1.941E+12, 8.706E+11, 4.225E+11/           
      DATA AMOL28/                                                      
     C 2.496E+19, 2.257E+19, 2.038E+19, 1.843E+19, 1.666E+19,           
     C 1.503E+19, 1.351E+19, 1.212E+19, 1.086E+19, 9.716E+18,           
     C 8.656E+18, 7.698E+18, 6.814E+18, 6.012E+18, 5.141E+18,           
     C 4.368E+18, 3.730E+18, 3.192E+18, 2.715E+18, 2.312E+18,           
     C 1.967E+18, 1.677E+18, 1.429E+18, 1.223E+18, 1.042E+18,           
     C 8.919E+17, 6.050E+17, 4.094E+17, 2.820E+17, 1.927E+17,           
     C 1.338E+17, 9.373E+16, 6.624E+16, 4.726E+16, 3.398E+16,           
     C 2.500E+16, 1.386E+16, 7.668E+15, 4.196E+15, 2.227E+15,           
     C 1.109E+15, 4.996E+14, 1.967E+14, 7.204E+13, 2.541E+13,           
     C 9.816E+12, 3.816E+12, 1.688E+12, 8.145E+11, 4.330E+11/           
      DATA AMOL38/                                                      
     C 2.711E+19, 2.420E+19, 2.158E+19, 1.922E+19, 1.724E+19,           
     C 1.542E+19, 1.376E+19, 1.225E+19, 1.086E+19, 9.612E+18,           
     C 8.472E+18, 7.271E+18, 6.237E+18, 5.351E+18, 4.588E+18,           
     C 3.931E+18, 3.368E+18, 2.886E+18, 2.473E+18, 2.115E+18,           
     C 1.809E+18, 1.543E+18, 1.317E+18, 1.125E+18, 9.633E+17,           
     C 8.218E+17, 5.536E+17, 3.701E+17, 2.486E+17, 1.647E+17,           
     C 1.108E+17, 7.540E+16, 5.202E+16, 3.617E+16, 2.570E+16,           
     C 1.863E+16, 1.007E+16, 5.433E+15, 2.858E+15, 1.477E+15,           
     C 7.301E+14, 3.553E+14, 1.654E+14, 7.194E+13, 3.052E+13,           
     C 1.351E+13, 6.114E+12, 2.952E+12, 1.479E+12, 7.836E+11/           
      DATA AMOL48/                                                      
     C 2.549E+19, 2.305E+19, 2.080E+19, 1.873E+19, 1.682E+19,           
     C 1.508E+19, 1.357E+19, 1.216E+19, 1.088E+19, 9.701E+18,           
     C 8.616E+18, 7.402E+18, 6.363E+18, 5.471E+18, 4.699E+18,           
     C 4.055E+18, 3.476E+18, 2.987E+18, 2.568E+18, 2.208E+18,           
     C 1.899E+18, 1.632E+18, 1.403E+18, 1.207E+18, 1.033E+18,           
     C 8.834E+17, 6.034E+17, 4.131E+17, 2.839E+17, 1.938E+17,           
     C 1.344E+17, 9.402E+16, 6.670E+16, 4.821E+16, 3.516E+16,           
     C 2.581E+16, 1.421E+16, 7.946E+15, 4.445E+15, 2.376E+15,           
     C 1.198E+15, 5.311E+14, 2.022E+14, 7.221E+13, 2.484E+13,           
     C 9.441E+12, 3.624E+12, 1.610E+12, 7.951E+11, 4.311E+11/           
      DATA AMOL58/                                                      
     C 2.855E+19, 2.484E+19, 2.202E+19, 1.950E+19, 1.736E+19,           
     C 1.552E+19, 1.383E+19, 1.229E+19, 1.087E+19, 9.440E+18,           
     C 8.069E+18, 6.898E+18, 5.893E+18, 5.039E+18, 4.308E+18,           
     C 3.681E+18, 3.156E+18, 2.704E+18, 2.316E+18, 1.982E+18,           
     C 1.697E+18, 1.451E+18, 1.241E+18, 1.061E+18, 9.065E+17,           
     C 7.742E+17, 5.134E+17, 3.423E+17, 2.292E+17, 1.533E+17,           
     C 1.025E+17, 6.927E+16, 4.726E+16, 3.266E+16, 2.261E+16,           
     C 1.599E+16, 8.364E+15, 4.478E+15, 2.305E+15, 1.181E+15,           
     C 6.176E+14, 3.127E+14, 1.531E+14, 7.244E+13, 3.116E+13,           
     C 1.403E+13, 6.412E+12, 3.099E+12, 1.507E+12, 7.814E+11/           
      DATA AMOL68/                                                      
     C 2.548E+19, 2.313E+19, 2.094E+19, 1.891E+19, 1.704E+19,           
     C 1.532E+19, 1.373E+19, 1.228E+19, 1.094E+19, 9.719E+18,           
     C 8.602E+18, 7.589E+18, 6.489E+18, 5.546E+18, 4.739E+18,           
     C 4.050E+18, 3.462E+18, 2.960E+18, 2.530E+18, 2.163E+18,           
     C 1.849E+18, 1.575E+18, 1.342E+18, 1.144E+18, 9.765E+17,           
     C 8.337E+17, 5.640E+17, 3.830E+17, 2.524E+17, 1.761E+17,           
     C 1.238E+17, 8.310E+16, 5.803E+16, 4.090E+16, 2.920E+16,           
     C 2.136E+16, 1.181E+16, 6.426E+15, 3.386E+15, 1.723E+15,           
     C 8.347E+14, 3.832E+14, 1.711E+14, 7.136E+13, 2.924E+13,           
     C 1.189E+13, 5.033E+12, 2.144E+12, 9.688E+11, 5.114E+11/           
                                                                        
      DATA ANO        /                                                 
     C  3.00E-04,  3.00E-04,  3.00E-04,  3.00E-04,  3.00E-04,           
     C  3.00E-04,  3.00E-04,  3.00E-04,  3.00E-04,  3.00E-04,           
     C  3.00E-04,  3.00E-04,  3.00E-04,  2.99E-04,  2.95E-04,           
     C  2.83E-04,  2.68E-04,  2.52E-04,  2.40E-04,  2.44E-04,           
     C  2.55E-04,  2.77E-04,  3.07E-04,  3.60E-04,  4.51E-04,           
     C  6.85E-04,  1.28E-03,  2.45E-03,  4.53E-03,  7.14E-03,           
     C  9.34E-03,  1.12E-02,  1.19E-02,  1.17E-02,  1.10E-02,           
     C  1.03E-02,  1.01E-02,  1.01E-02,  1.03E-02,  1.15E-02,           
     C  1.61E-02,  2.68E-02,  7.01E-02,  2.13E-01,  7.12E-01,           
     C  2.08E+00,  4.50E+00,  7.98E+00,  1.00E+01,  1.00E+01/           
      DATA SO2       /                                                  
     C  3.00E-04,  2.74E-04,  2.36E-04,  1.90E-04,  1.46E-04,           
     C  1.18E-04,  9.71E-05,  8.30E-05,  7.21E-05,  6.56E-05,           
     C  6.08E-05,  5.79E-05,  5.60E-05,  5.59E-05,  5.64E-05,           
     C  5.75E-05,  5.75E-05,  5.37E-05,  4.78E-05,  3.97E-05,           
     C  3.19E-05,  2.67E-05,  2.28E-05,  2.07E-05,  1.90E-05,           
     C  1.75E-05,  1.54E-05,  1.34E-05,  1.21E-05,  1.16E-05,           
     C  1.21E-05,  1.36E-05,  1.65E-05,  2.10E-05,  2.77E-05,           
     C  3.56E-05,  4.59E-05,  5.15E-05,  5.11E-05,  4.32E-05,           
     C  2.83E-05,  1.33E-05,  5.56E-06,  2.24E-06,  8.96E-07,           
     C  3.58E-07,  1.43E-07,  5.73E-08,  2.29E-08,  9.17E-09/           
      DATA ANO2       /                                                 
     C  2.30E-05,  2.30E-05,  2.30E-05,  2.30E-05,  2.30E-05,           
     C  2.30E-05,  2.30E-05,  2.30E-05,  2.30E-05,  2.32E-05,           
     C  2.38E-05,  2.62E-05,  3.15E-05,  4.45E-05,  7.48E-05,           
     C  1.71E-04,  3.19E-04,  5.19E-04,  7.71E-04,  1.06E-03,           
     C  1.39E-03,  1.76E-03,  2.16E-03,  2.58E-03,  3.06E-03,           
     C  3.74E-03,  4.81E-03,  6.16E-03,  7.21E-03,  7.28E-03,           
     C  6.26E-03,  4.03E-03,  2.17E-03,  1.15E-03,  6.66E-04,           
     C  4.43E-04,  3.39E-04,  2.85E-04,  2.53E-04,  2.31E-04,           
     C  2.15E-04,  2.02E-04,  1.92E-04,  1.83E-04,  1.76E-04,           
     C  1.70E-04,  1.64E-04,  1.59E-04,  1.55E-04,  1.51E-04/           
      DATA ANH3       /                                                 
     C  5.00E-04,  5.00E-04,  4.63E-04,  3.80E-04,  2.88E-04,           
     C  2.04E-04,  1.46E-04,  9.88E-05,  6.48E-05,  3.77E-05,           
     C  2.03E-05,  1.09E-05,  6.30E-06,  3.12E-06,  1.11E-06,           
     C  4.47E-07,  2.11E-07,  1.10E-07,  6.70E-08,  3.97E-08,           
     C  2.41E-08,  1.92E-08,  1.72E-08,  1.59E-08,  1.44E-08,           
     C  1.23E-08,  9.37E-09,  6.35E-09,  3.68E-09,  1.82E-09,           
     C  9.26E-10,  2.94E-10,  8.72E-11,  2.98E-11,  1.30E-11,           
     C  7.13E-12,  4.80E-12,  3.66E-12,  3.00E-12,  2.57E-12,           
     C  2.27E-12,  2.04E-12,  1.85E-12,  1.71E-12,  1.59E-12,           
     C  1.48E-12,  1.40E-12,  1.32E-12,  1.25E-12,  1.19E-12/           
      DATA HNO3      /                                                  
     C  5.00E-05,  5.96E-05,  6.93E-05,  7.91E-05,  8.87E-05,           
     C  9.75E-05,  1.11E-04,  1.26E-04,  1.39E-04,  1.53E-04,           
     C  1.74E-04,  2.02E-04,  2.41E-04,  2.76E-04,  3.33E-04,           
     C  4.52E-04,  7.37E-04,  1.31E-03,  2.11E-03,  3.17E-03,           
     C  4.20E-03,  4.94E-03,  5.46E-03,  5.74E-03,  5.84E-03,           
     C  5.61E-03,  4.82E-03,  3.74E-03,  2.59E-03,  1.64E-03,           
     C  9.68E-04,  5.33E-04,  2.52E-04,  1.21E-04,  7.70E-05,           
     C  5.55E-05,  4.45E-05,  3.84E-05,  3.49E-05,  3.27E-05,           
     C  3.12E-05,  3.01E-05,  2.92E-05,  2.84E-05,  2.78E-05,           
     C  2.73E-05,  2.68E-05,  2.64E-05,  2.60E-05,  2.57E-05/           
      DATA OH        /                                                  
     C  4.40E-08,  4.40E-08,  4.40E-08,  4.40E-08,  4.40E-08,           
     C  4.40E-08,  4.40E-08,  4.41E-08,  4.45E-08,  4.56E-08,           
     C  4.68E-08,  4.80E-08,  4.94E-08,  5.19E-08,  5.65E-08,           
     C  6.75E-08,  8.25E-08,  1.04E-07,  1.30E-07,  1.64E-07,           
     C  2.16E-07,  3.40E-07,  5.09E-07,  7.59E-07,  1.16E-06,           
     C  2.18E-06,  5.00E-06,  1.17E-05,  3.40E-05,  8.35E-05,           
     C  1.70E-04,  2.85E-04,  4.06E-04,  5.11E-04,  5.79E-04,           
     C  6.75E-04,  9.53E-04,  1.76E-03,  3.74E-03,  7.19E-03,           
     C  1.12E-02,  1.13E-02,  6.10E-03,  1.51E-03,  2.42E-04,           
     C  4.47E-05,  1.77E-05,  1.19E-05,  1.35E-05,  2.20E-05/           
      DATA HF        /                                                  
     C  1.00E-08,  1.00E-08,  1.23E-08,  1.97E-08,  3.18E-08,           
     C  5.63E-08,  9.18E-08,  1.53E-07,  2.41E-07,  4.04E-07,           
     C  6.57E-07,  1.20E-06,  1.96E-06,  3.12E-06,  4.62E-06,           
     C  7.09E-06,  1.05E-05,  1.69E-05,  2.57E-05,  4.02E-05,           
     C  5.77E-05,  7.77E-05,  9.90E-05,  1.23E-04,  1.50E-04,           
     C  1.82E-04,  2.30E-04,  2.83E-04,  3.20E-04,  3.48E-04,           
     C  3.72E-04,  3.95E-04,  4.10E-04,  4.21E-04,  4.24E-04,           
     C  4.25E-04,  4.25E-04,  4.25E-04,  4.25E-04,  4.25E-04,           
     C  4.25E-04,  4.25E-04,  4.25E-04,  4.25E-04,  4.25E-04,           
     C  4.25E-04,  4.25E-04,  4.25E-04,  4.25E-04,  4.25E-04/           
      DATA HCL       /                                                  
     C  1.00E-03,  7.49E-04,  5.61E-04,  4.22E-04,  3.19E-04,           
     C  2.39E-04,  1.79E-04,  1.32E-04,  9.96E-05,  7.48E-05,           
     C  5.68E-05,  4.59E-05,  4.36E-05,  6.51E-05,  1.01E-04,           
     C  1.63E-04,  2.37E-04,  3.13E-04,  3.85E-04,  4.42E-04,           
     C  4.89E-04,  5.22E-04,  5.49E-04,  5.75E-04,  6.04E-04,           
     C  6.51E-04,  7.51E-04,  9.88E-04,  1.28E-03,  1.57E-03,           
     C  1.69E-03,  1.74E-03,  1.76E-03,  1.79E-03,  1.80E-03,           
     C  1.80E-03,  1.80E-03,  1.80E-03,  1.80E-03,  1.80E-03,           
     C  1.80E-03,  1.80E-03,  1.80E-03,  1.80E-03,  1.80E-03,           
     C  1.80E-03,  1.80E-03,  1.80E-03,  1.80E-03,  1.80E-03/           
      DATA HBR       /                                                  
     C  1.70E-06,  1.70E-06,  1.70E-06,  1.70E-06,  1.70E-06,           
     C  1.70E-06,  1.70E-06,  1.70E-06,  1.70E-06,  1.70E-06,           
     C  1.70E-06,  1.70E-06,  1.70E-06,  1.70E-06,  1.70E-06,           
     C  1.70E-06,  1.70E-06,  1.70E-06,  1.70E-06,  1.70E-06,           
     C  1.70E-06,  1.70E-06,  1.70E-06,  1.70E-06,  1.70E-06,           
     C  1.71E-06,  1.76E-06,  1.90E-06,  2.26E-06,  2.82E-06,           
     C  3.69E-06,  4.91E-06,  6.13E-06,  6.85E-06,  7.08E-06,           
     C  7.14E-06,  7.15E-06,  7.15E-06,  7.15E-06,  7.15E-06,           
     C  7.15E-06,  7.15E-06,  7.15E-06,  7.15E-06,  7.15E-06,           
     C  7.15E-06,  7.15E-06,  7.15E-06,  7.15E-06,  7.15E-06/           
      DATA HI        /                                                  
     C  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,           
     C  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,           
     C  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,           
     C  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,           
     C  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,           
     C  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,           
     C  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,           
     C  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,           
     C  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,           
     C  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06/           
      DATA CLO       /                                                  
     C  1.00E-08,  1.00E-08,  1.00E-08,  1.00E-08,  1.00E-08,           
     C  1.00E-08,  1.00E-08,  1.00E-08,  1.01E-08,  1.05E-08,           
     C  1.21E-08,  1.87E-08,  3.18E-08,  5.61E-08,  9.99E-08,           
     C  1.78E-07,  3.16E-07,  5.65E-07,  1.04E-06,  2.04E-06,           
     C  4.64E-06,  8.15E-06,  1.07E-05,  1.52E-05,  2.24E-05,           
     C  3.97E-05,  8.48E-05,  1.85E-04,  3.57E-04,  5.08E-04,           
     C  6.07E-04,  5.95E-04,  4.33E-04,  2.51E-04,  1.56E-04,           
     C  1.04E-04,  7.69E-05,  6.30E-05,  5.52E-05,  5.04E-05,           
     C  4.72E-05,  4.49E-05,  4.30E-05,  4.16E-05,  4.03E-05,           
     C  3.93E-05,  3.83E-05,  3.75E-05,  3.68E-05,  3.61E-05/           
      DATA OCS       /                                                  
     C  6.00E-04,  5.90E-04,  5.80E-04,  5.70E-04,  5.62E-04,           
     C  5.55E-04,  5.48E-04,  5.40E-04,  5.32E-04,  5.25E-04,           
     C  5.18E-04,  5.09E-04,  4.98E-04,  4.82E-04,  4.60E-04,           
     C  4.26E-04,  3.88E-04,  3.48E-04,  3.09E-04,  2.74E-04,           
     C  2.41E-04,  2.14E-04,  1.88E-04,  1.64E-04,  1.37E-04,           
     C  1.08E-04,  6.70E-05,  2.96E-05,  1.21E-05,  4.31E-06,           
     C  1.60E-06,  6.71E-07,  4.35E-07,  3.34E-07,  2.80E-07,           
     C  2.47E-07,  2.28E-07,  2.16E-07,  2.08E-07,  2.03E-07,           
     C  1.98E-07,  1.95E-07,  1.92E-07,  1.89E-07,  1.87E-07,           
     C  1.85E-07,  1.83E-07,  1.81E-07,  1.80E-07,  1.78E-07/           
      DATA H2CO      /                                                  
     C  2.40E-03,  1.07E-03,  4.04E-04,  2.27E-04,  1.40E-04,           
     C  1.00E-04,  7.44E-05,  6.04E-05,  5.01E-05,  4.22E-05,           
     C  3.63E-05,  3.43E-05,  3.39E-05,  3.50E-05,  3.62E-05,           
     C  3.62E-05,  3.58E-05,  3.50E-05,  3.42E-05,  3.39E-05,           
     C  3.43E-05,  3.68E-05,  4.03E-05,  4.50E-05,  5.06E-05,           
     C  5.82E-05,  7.21E-05,  8.73E-05,  1.01E-04,  1.11E-04,           
     C  1.13E-04,  1.03E-04,  7.95E-05,  4.82E-05,  1.63E-05,           
     C  5.10E-06,  2.00E-06,  1.05E-06,  6.86E-07,  5.14E-07,           
     C  4.16E-07,  3.53E-07,  3.09E-07,  2.76E-07,  2.50E-07,           
     C  2.30E-07,  2.13E-07,  1.98E-07,  1.86E-07,  1.75E-07/           
      DATA HOCL      /                                                  
     C  7.70E-06,  1.06E-05,  1.22E-05,  1.14E-05,  9.80E-06,           
     C  8.01E-06,  6.42E-06,  5.42E-06,  4.70E-06,  4.41E-06,           
     C  4.34E-06,  4.65E-06,  5.01E-06,  5.22E-06,  5.60E-06,           
     C  6.86E-06,  8.77E-06,  1.20E-05,  1.63E-05,  2.26E-05,           
     C  3.07E-05,  4.29E-05,  5.76E-05,  7.65E-05,  9.92E-05,           
     C  1.31E-04,  1.84E-04,  2.45E-04,  2.96E-04,  3.21E-04,           
     C  3.04E-04,  2.48E-04,  1.64E-04,  9.74E-05,  4.92E-05,           
     C  2.53E-05,  1.50E-05,  1.05E-05,  8.34E-06,  7.11E-06,           
     C  6.33E-06,  5.78E-06,  5.37E-06,  5.05E-06,  4.78E-06,           
     C  4.56E-06,  4.37E-06,  4.21E-06,  4.06E-06,  3.93E-06/           
      DATA AN2        /                                                 
     C  7.81E+05,  7.81E+05,  7.81E+05,  7.81E+05,  7.81E+05,           
     C  7.81E+05,  7.81E+05,  7.81E+05,  7.81E+05,  7.81E+05,           
     C  7.81E+05,  7.81E+05,  7.81E+05,  7.81E+05,  7.81E+05,           
     C  7.81E+05,  7.81E+05,  7.81E+05,  7.81E+05,  7.81E+05,           
     C  7.81E+05,  7.81E+05,  7.81E+05,  7.81E+05,  7.81E+05,           
     C  7.81E+05,  7.81E+05,  7.81E+05,  7.81E+05,  7.81E+05,           
     C  7.81E+05,  7.81E+05,  7.81E+05,  7.81E+05,  7.81E+05,           
     C  7.81E+05,  7.81E+05,  7.81E+05,  7.81E+05,  7.81E+05,           
     C  7.81E+05,  7.81E+05,  7.81E+05,  7.80E+05,  7.79E+05,           
     C  7.77E+05,  7.74E+05,  7.70E+05,  7.65E+05,  7.60E+05/           
      DATA HCN       /                                                  
     C  1.70E-04,  1.65E-04,  1.63E-04,  1.61E-04,  1.60E-04,           
     C  1.60E-04,  1.60E-04,  1.60E-04,  1.60E-04,  1.60E-04,           
     C  1.60E-04,  1.60E-04,  1.60E-04,  1.59E-04,  1.57E-04,           
     C  1.55E-04,  1.52E-04,  1.49E-04,  1.45E-04,  1.41E-04,           
     C  1.37E-04,  1.34E-04,  1.30E-04,  1.25E-04,  1.19E-04,           
     C  1.13E-04,  1.05E-04,  9.73E-05,  9.04E-05,  8.46E-05,           
     C  8.02E-05,  7.63E-05,  7.30E-05,  7.00E-05,  6.70E-05,           
     C  6.43E-05,  6.21E-05,  6.02E-05,  5.88E-05,  5.75E-05,           
     C  5.62E-05,  5.50E-05,  5.37E-05,  5.25E-05,  5.12E-05,           
     C  5.00E-05,  4.87E-05,  4.75E-05,  4.62E-05,  4.50E-05/           
      DATA CH3CL     /                                                  
     C  7.00E-04,  6.70E-04,  6.43E-04,  6.22E-04,  6.07E-04,           
     C  6.02E-04,  6.00E-04,  6.00E-04,  5.98E-04,  5.94E-04,           
     C  5.88E-04,  5.79E-04,  5.66E-04,  5.48E-04,  5.28E-04,           
     C  5.03E-04,  4.77E-04,  4.49E-04,  4.21E-04,  3.95E-04,           
     C  3.69E-04,  3.43E-04,  3.17E-04,  2.86E-04,  2.48E-04,           
     C  1.91E-04,  1.10E-04,  4.72E-05,  1.79E-05,  7.35E-06,           
     C  3.03E-06,  1.32E-06,  8.69E-07,  6.68E-07,  5.60E-07,           
     C  4.94E-07,  4.56E-07,  4.32E-07,  4.17E-07,  4.05E-07,           
     C  3.96E-07,  3.89E-07,  3.83E-07,  3.78E-07,  3.73E-07,           
     C  3.69E-07,  3.66E-07,  3.62E-07,  3.59E-07,  3.56E-07/           
      DATA H2O2      /                                                  
     C  2.00E-04,  1.95E-04,  1.92E-04,  1.89E-04,  1.84E-04,           
     C  1.77E-04,  1.66E-04,  1.49E-04,  1.23E-04,  9.09E-05,           
     C  5.79E-05,  3.43E-05,  1.95E-05,  1.08E-05,  6.59E-06,           
     C  4.20E-06,  2.94E-06,  2.30E-06,  2.24E-06,  2.68E-06,           
     C  3.68E-06,  5.62E-06,  1.03E-05,  1.97E-05,  3.70E-05,           
     C  6.20E-05,  1.03E-04,  1.36E-04,  1.36E-04,  1.13E-04,           
     C  8.51E-05,  6.37E-05,  5.17E-05,  4.44E-05,  3.80E-05,           
     C  3.48E-05,  3.62E-05,  5.25E-05,  1.26E-04,  3.77E-04,           
     C  1.12E-03,  2.00E-03,  1.68E-03,  4.31E-04,  4.98E-05,           
     C  6.76E-06,  8.38E-07,  9.56E-08,  1.00E-08,  1.00E-09/           
      DATA C2H2      /                                                  
     C  3.00E-04,  1.72E-04,  9.57E-05,  6.74E-05,  5.07E-05,           
     C  3.99E-05,  3.19E-05,  2.80E-05,  2.55E-05,  2.40E-05,           
     C  2.27E-05,  2.08E-05,  1.76E-05,  1.23E-05,  7.32E-06,           
     C  4.52E-06,  2.59E-06,  1.55E-06,  8.63E-07,  5.30E-07,           
     C  3.10E-07,  1.89E-07,  1.04E-07,  5.75E-08,  2.23E-08,           
     C  8.51E-09,  4.09E-09,  2.52E-09,  1.86E-09,  1.52E-09,           
     C  1.32E-09,  1.18E-09,  1.08E-09,  9.97E-10,  9.34E-10,           
     C  8.83E-10,  8.43E-10,  8.10E-10,  7.83E-10,  7.60E-10,           
     C  7.40E-10,  7.23E-10,  7.07E-10,  6.94E-10,  6.81E-10,           
     C  6.70E-10,  6.59E-10,  6.49E-10,  6.40E-10,  6.32E-10/           
      DATA C2H6      /                                                  
     C  2.00E-03,  2.00E-03,  2.00E-03,  2.00E-03,  1.98E-03,           
     C  1.95E-03,  1.90E-03,  1.85E-03,  1.79E-03,  1.72E-03,           
     C  1.58E-03,  1.30E-03,  9.86E-04,  7.22E-04,  4.96E-04,           
     C  3.35E-04,  2.14E-04,  1.49E-04,  1.05E-04,  7.96E-05,           
     C  6.01E-05,  4.57E-05,  3.40E-05,  2.60E-05,  1.89E-05,           
     C  1.22E-05,  5.74E-06,  2.14E-06,  8.49E-07,  3.42E-07,           
     C  1.34E-07,  5.39E-08,  2.25E-08,  1.04E-08,  6.57E-09,           
     C  4.74E-09,  3.79E-09,  3.28E-09,  2.98E-09,  2.79E-09,           
     C  2.66E-09,  2.56E-09,  2.49E-09,  2.43E-09,  2.37E-09,           
     C  2.33E-09,  2.29E-09,  2.25E-09,  2.22E-09,  2.19E-09/           
      DATA PH3       /                                                  
     C  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,           
     C  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,           
     C  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,           
     C  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,           
     C  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,           
     C  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,           
     C  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,           
     C  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,           
     C  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,           
     C  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14/           
      END                                                               
      SUBROUTINE MSRAD(GROUND,UANG,NSTR,V,S0,KNTRVL)                    
C                                                                       
C     ROUTINE MSRAD SETS UP OPTICAL PROPERTIES PROFILES FOR VERTICAL    
C     PATH THEN CALLS DISORT WHICH RETURNS MS SOURCE FUNCTIONS.         
C                                                                       
C     LIST PARAMETERS:                                                  
      INCLUDE 'PARAM.LST'                                               
      INTEGER MAXULV,MAXUMU,MAXPHI,MAXCLY,MAXCMU,MXULV                  
      PARAMETER(MAXULV=LAYDIM,MAXUMU=1,MAXPHI=1,MAXCLY=LAYDIM,          
     1  MAXCMU=16,MXULV=LAYDIM+1)                                       
C                                                                       
C     DECLARE INPUTS:                                                   
      LOGICAL GROUND                                                    
      INTEGER NSTR,KNTRVL                                               
      REAL V,S0                                                         
      DOUBLE PRECISION UANG                                             
C                                                                       
C     LIST COMMONS:                                                     
      INTEGER MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT                     
      REAL TBOUND,SALB                                                  
      LOGICAL MODTRN                                                    
      COMMON/CARD1/MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB,   
     1  MODTRN                                                          
C                                                                       
C       SUBINT   SPECTRAL BIN "K" SUB-INTERVAL FRACTIONAL WIDTHS.       
C       UPFLX    LAYER BOUNDARY UPWARD THERMAL FLUX [W CM-2 / CM-1].    
C       DNFLX    LAYER BOUNDARY DOWNWARD THERMAL FLUX [W CM-2 / CM-1].  
C       UPFLXS   BOUNDARY UPWARD SCATTERED SOLAR FLUX [W CM-2 / CM-1].  
C       DNFLXS   BOUNDARY DOWNWARD SCATTERED SOLAR FLUX [W CM-2 / CM-1].
C       NTFLX    LAYER BOUNDARY NET (THERMAL PLUS SCATTERED SOLAR       
C                PLUS DIRECT SOLAR) UPWARD FLUX [W CM-2 / CM-1].        
      REAL SUBINT,UPFLX,DNFLX,UPFLXS,DNFLXS,NTFLX                       
      COMMON/NETFLX/SUBINT(NKSUB),UPFLX(LAYDIM),DNFLX(LAYDIM),          
     1  UPFLXS(LAYDIM),DNFLXS(LAYDIM),NTFLX(LAYDIM)                     
      INTEGER IKMAX,ML,ISSGEO,IMULT                                     
      COMMON/CNTRL/IKMAX,ML,ISSGEO,IMULT                                
C                                                                       
C     COMMON /MSRD/                                                     
C       CSZEN0  LAYER BOUNDARY COSINE OF SOLAR/LUNAR ZENITH.            
C       CSZEN   LAYER AVERAGE COSINE OF SOLAR/LUNAR ZENITH.             
C       CSZENX  AVERAGE SOLAR/LUNAR COSINE ZENITH EXITING               
C               (AWAY FROM EARTH) THE CURRENT LAYER.                    
C       BBGRND  THERMAL EMISSION (FLUX) AT THE GROUND [W CM-2 / CM-1].  
C       BBNDRY  LAYER BOUNDARY THERMAL EMISSION (FLUX) [W CM-2 / CM-1]. 
C       COSBAR  LAYER HENYEY-GREENSTEIN ASYMMETRY FACTOR.               
C       TSCAT   LAYER SCATTERING OPTICAL DEPTH.                         
C       TCONT   LAYER CONTINUUM OPTICAL DEPTH.                          
C       TAUT    LAYER TOTAL OPTICAL DEPTH.                              
C       DEPRAT  FRACTIONAL DECREASE IN WEAK-LINE OPTICAL DEPTH TO SUN.  
C       S0DEP   OPTICAL DEPTH FROM LAYER BOUNDARY TO SUN.               
C       S0TRN   TRANSMITTED SOLAR IRRADIANCES [W CM-2 / CM-1]           
C       UPF     LAYER BOUNDARY UPWARD THERMAL FLUX [W CM-2 / CM-1].     
C       DNF     LAYER BOUNDARY DOWNWARD THERMAL FLUX [W CM-2 / CM-1].   
C       UPFS    LAYER BOUNDARY UPWARD SOLAR FLUX [W CM-2 / CM-1].       
C       DNFS    LAYER BOUNDARY DOWNWARD SOLAR FLUX [W CM-2 / CM-1].     
      REAL CSZEN0,CSZEN,CSZENX,BBGRND,BBNDRY,COSBAR,TSCAT,              
     1  TCONT,TAUT,DEPRAT,S0DEP,S0TRN,UPF,DNF,UPFS,DNFS                 
      COMMON/MSRD/CSZEN0(LAYDIM),CSZEN(LAYDIM),CSZENX(LAYDIM),          
     1  BBGRND,BBNDRY(LAYDIM),COSBAR(LAYDIM),TSCAT(LAYDIM),             
     2  TCONT(LAYDIM),TAUT(NKSUB,LAYDIM),DEPRAT(LAYDIM),                
     3  S0DEP(NKSUB,LAYDIM),S0TRN(NKSUB,LAYDIM),UPF(NKSUB,LAYDIM),      
     4  DNF(NKSUB,LAYDIM),UPFS(NKSUB,LAYDIM),DNFS(NKSUB,LAYDIM)         
      INTEGER IV1,IV2,IDV,IFWHM                                         
      COMMON/CARD4/IV1,IV2,IDV,IFWHM                                    
      REAL ZM,PM,TM,RFNDX,DENSTY                                        
      COMMON/MODEL/ZM(LAYDIM),PM(LAYDIM),TM(LAYDIM),                    
     1  RFNDX(LAYDIM),DENSTY(KMAX,LAYDIM)                               
      DOUBLE PRECISION ALBEDO,BTEMP,FBEAM,TTEMP,WVNMLO,WVNMHI,UMU0,WN0  
      DOUBLE PRECISION DTAUC(MAXCLY),HL(0:MAXCMU),PHI(MAXPHI),          
     1  PMOM(0:MAXCMU,1:MAXCLY),SSALB(MAXCLY),TEMPER(0:MAXCLY),         
     2  UMU(MAXUMU),UTAU(MAXULV),RFLDIR(MAXULV),RFLDN(MAXULV),          
     3  FLDN(MXULV),FLUP(MAXULV),UAVG(MAXULV),DFDT(MAXULV),             
     4  U0U(MAXUMU,MAXULV),UU(MAXUMU,MAXULV,MAXPHI),ALBMED(MAXUMU),     
     5  TRNMED(MAXUMU),S0CMS(MAXUMU,MAXULV),T0CMS(MAXUMU,MAXULV)        
C                                                                       
C     DECLARE LOCAL VARIABLES                                           
      INTEGER IK,N,KWI,INTRVL,NEXT                                      
C                                                                       
C     DEFINE DATA                                                       
C       PRNT     DISORT PRINT OPTIONS                                   
C       ONLYFL   .FALSE. FOR USING DISORT FOR RADIATIVE                 
C                TRANSFER COMPUTATIONS (IT SHOULD BE LEFT               
C                AS ONLYFL=.TRUE. FOR THE MERGED PACKAGE).              
C       DELTAM   DELTA M APPROXIMATION FLAG (SET DELTAM                 
C                TO .FALSE. TO PERFORM CALCULATIONS                     
C                ANALOGOUS TO THOSE IN BMFLUX/FLXADD).                  
      LOGICAL USRTAU,USRANG,LAMBER,MSFLAG,PLANK,ONLYFL,DELTAM,PRNT(7)   
      INTEGER IBCND,NUMU,NPHI                                           
      DOUBLE PRECISION ACCUR,FISOT,TEMIS,PHI0,DPDEG                     
      CHARACTER HEADER*127                                              
      SAVE USRTAU,USRANG,LAMBER,MSFLAG,PLANK,ONLYFL,DELTAM,             
     1  PRNT,IBCND,NUMU,NPHI,ACCUR,FISOT,TEMIS,PHI0,HEADER              
      DATA USRTAU/.FALSE./,USRANG/.TRUE./,LAMBER/.TRUE./,MSFLAG/.TRUE./,
     1  PLANK/.TRUE./,ONLYFL/.TRUE./,DELTAM/.TRUE./,PRNT/7*.FALSE./     
      DATA IBCND/0/,NUMU/1/,NPHI/1/                                     
      DATA ACCUR/0./,FISOT/0./,TEMIS/0./,PHI0/0./,DPDEG/57.2957795131D0/
      DATA HEADER/'*'/                                                  
C                                                                       
C     DISORT INTERFACE                                                  
      TEMPER(0)=DBLE(TM(ML))                                            
      UTAU(1)=DBLE(0.)                                                  
      IK=ML                                                             
      DO 20 N=1,IKMAX                                                   
          IK=IK-1                                                       
C                                                                       
C         SET UP TEMPERATURE PROFILE                                    
          TEMPER(N)=DBLE(TM(IK))                                        
C                                                                       
C         CLEAN OUT ARRAYS CONTAINING SOURCE FUNCTIONS                  
          T0CMS(1,N)=DBLE(0.)                                           
          S0CMS(1,N)=DBLE(0.)                                           
C                                                                       
C         CALCULATE OPTICAL DEPTHS                                      
          DTAUC(N)=DBLE(TAUT(1,IK))                                     
          UTAU(N+1)=UTAU(N)+DTAUC(N)                                    
C                                                                       
C         CALCULATE SINGLE SCATTERING ALBEDO                            
          SSALB(N)=DBLE(0.)                                             
          IF(TSCAT(IK).LT.0.)TSCAT(IK)=0.                               
          IF(DTAUC(N).GT.0.)SSALB(N)=DBLE(TSCAT(IK))/DTAUC(N)           
          IF(SSALB(N).GT.1.)SSALB(N)=DBLE(1.)                           
C                                                                       
C         H-G FUNCTION MOMENTS OF LEGENDRE POLYNOMIALS                  
          PMOM(0,N)=DBLE(1.)                                            
          DO 10 KWI=1,NSTR                                              
               PMOM(KWI,N)=DBLE(COSBAR(IK)**KWI)                        
   10     CONTINUE                                                      
   20 CONTINUE                                                          
C                                                                       
C     OTHER DISORT VARIABLES DEFINED                                    
      WN0=DBLE(V)                                                       
      WVNMLO=DBLE(V-.5*IDV)                                             
      WVNMHI=DBLE(V+.5*IDV)                                             
      UMU(1)=-COS(UANG/DPDEG)                                           
      BTEMP=TEMPER(IKMAX)                                               
      IF(GROUND .AND. TBOUND.GT.0.)BTEMP=DBLE(TBOUND)                   
      TTEMP=TEMPER(0)                                                   
      FBEAM=DBLE(S0)                                                    
      UMU0=DBLE(CSZEN0(1))                                              
      ALBEDO=DBLE(SALB)                                                 
      PHI(1)=DBLE(0.)                                                   
C                                                                       
C     LOOP OVER CORRELATED-K SUB-INTERVALS                              
      INTRVL=1                                                          
      DO 40 NEXT=2,KNTRVL                                               
C                                                                       
C         CALL TO ROUTINE DISORT                                        
          CALL DISORT(IKMAX,DTAUC,SSALB,PMOM,TEMPER,WVNMLO,WVNMHI,      
     1      USRTAU,ML,UTAU,NSTR,USRANG,NUMU,UMU,NPHI,PHI,IBCND,FBEAM,   
     2      UMU0,PHI0,FISOT,LAMBER,ALBEDO,HL,BTEMP,TTEMP,TEMIS,DELTAM,  
     3      PLANK,ONLYFL,ACCUR,PRNT,HEADER,MAXCLY,MAXULV,MAXUMU,MAXCMU, 
     4      MAXPHI,RFLDIR,RFLDN,FLDN,FLUP,DFDT,UAVG,UU,U0U,ALBMED,      
     5      TRNMED,MSFLAG,WN0,S0CMS,T0CMS,DNFS(INTRVL,1),DNF(INTRVL,1)) 
C                                                                       
C         LOOP OVER LAYERS                                              
          UTAU(1)=DBLE(0.)                                              
          IK=ML                                                         
          DO 30 N=1,IKMAX                                               
              UPFLX(IK)=UPFLX(IK)+SUBINT(INTRVL)*REAL(FLUP(N))          
              DNFLX(IK)=DNFLX(IK)+SUBINT(INTRVL)*REAL(FLDN(N))          
              NTFLX(IK)=NTFLX(IK)+SUBINT(INTRVL)*REAL(FLUP(N)-FLDN(N))  
              IK=IK-1                                                   
C                                                                       
C             STORE THERMAL AND SOLAR SOURCE FUNCTIONS IN UPF AND UPFS. 
              UPF(INTRVL,N)=REAL(T0CMS(1,N))                            
              UPFS(INTRVL,N)=REAL(S0CMS(1,N))                           
C                                                                       
C             CLEAN OUT ARRAYS CONTAINING SOURCE FUNCTIONS.             
              T0CMS(1,N)=DBLE(0.)                                       
              S0CMS(1,N)=DBLE(0.)                                       
C                                                                       
C             CALCULATE OPTICAL DEPTHS                                  
              DTAUC(N)=DBLE(TAUT(NEXT,IK))                              
              UTAU(N+1)=UTAU(N)+DTAUC(N)                                
C                                                                       
C             CALCULATE SINGLE SCATTERING ALBEDO                        
              SSALB(N)=DBLE(0.)                                         
              IF(TSCAT(IK).LT.0.)TSCAT(IK)=0.                           
              IF(DTAUC(N).GT.0.)SSALB(N)=DBLE(TSCAT(IK))/DTAUC(N)       
              IF(SSALB(N).GT.1.)SSALB(N)=DBLE(1.)                       
   30     CONTINUE                                                      
          UPFLX(1)=UPFLX(1)+SUBINT(INTRVL)*REAL(FLUP(ML))               
          DNFLX(1)=DNFLX(1)+SUBINT(INTRVL)*REAL(FLDN(ML))               
          NTFLX(1)=NTFLX(1)+SUBINT(INTRVL)*REAL(FLUP(ML)-FLDN(ML))      
          INTRVL=NEXT                                                   
   40 CONTINUE                                                          
C                                                                       
C     LAST CORRELATED-K SUB-INTRVL.  CALL TO ROUTINE DISORT.            
      CALL DISORT(IKMAX,DTAUC,SSALB,PMOM,TEMPER,WVNMLO,WVNMHI,          
     1  USRTAU,ML,UTAU,NSTR,USRANG,NUMU,UMU,NPHI,PHI,IBCND,FBEAM,       
     2  UMU0,PHI0,FISOT,LAMBER,ALBEDO,HL,BTEMP,TTEMP,TEMIS,DELTAM,      
     3  PLANK,ONLYFL,ACCUR,PRNT,HEADER,MAXCLY,MAXULV,MAXUMU,MAXCMU,     
     4  MAXPHI,RFLDIR,RFLDN,FLDN,FLUP,DFDT,UAVG,UU,U0U,ALBMED,          
     5  TRNMED,MSFLAG,WN0,S0CMS,T0CMS,DNFS(KNTRVL,1),DNF(KNTRVL,1))     
C                                                                       
C     LOOP OVER LAYERS                                                  
      IK=ML                                                             
      DO 50 N=1,IKMAX                                                   
          UPFLX(IK)=UPFLX(IK)+SUBINT(KNTRVL)*REAL(FLUP(N))              
          DNFLX(IK)=DNFLX(IK)+SUBINT(KNTRVL)*REAL(FLDN(N))              
          NTFLX(IK)=NTFLX(IK)+SUBINT(KNTRVL)*REAL(FLUP(N)-FLDN(N))      
          IK=IK-1                                                       
C                                                                       
C         STORE THERMAL AND SOLAR SOURCE FUNCTIONS IN UPF AND UPFS.     
          UPF(KNTRVL,N)=REAL(T0CMS(1,N))                                
          UPFS(KNTRVL,N)=REAL(S0CMS(1,N))                               
   50 CONTINUE                                                          
      UPFLX(1)=UPFLX(1)+SUBINT(KNTRVL)*REAL(FLUP(ML))                   
      DNFLX(1)=DNFLX(1)+SUBINT(KNTRVL)*REAL(FLDN(ML))                   
      NTFLX(1)=NTFLX(1)+SUBINT(KNTRVL)*REAL(FLUP(ML)-FLDN(ML))          
C                                                                       
C     RETURN TO LOOP                                                    
      RETURN                                                            
      END                                                               
        SUBROUTINE  MSSOLR( CMU, CWT, FBEAM, GC, GU, KK, LAYRU, LL,     
     $                      LYRCUT, MAXUMU, MXCMU, MXUMU, NCUT, NN,     
     $                      NSTR, NTAU, NUMU, PI, TAUCPR, UMU0, UTAU,   
     $                      UTAUPR, BEAMMS, ZZ, FDNSRT, S0CMS )         
                                                                        
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
C    I N P U T     V A R I A B L E S:                                   
                                                                        
C       CMU      :  ABSCISSAE FOR GAUSS QUADRATURE OVER ANGLE COSINE    
C       CWT      :  WEIGHTS FOR GAUSS QUADRATURE OVER ANGLE COSINE      
C       GC       :  EIGENVECTORS AT POLAR QUADRATURE ANGLES, SC(1)      
C       GU       :  EIGENVECTORS INTERPOLATED TO USER POLAR ANGLES      
C                   (I.E., -G- IN EQ. SC(1))                            
C       KK       :  EIGENVALUES OF COEFF. MATRIX IN EQ. SS(7)           
C       LAYRU    :  LAYER NUMBER OF USER LEVEL -UTAU-                   
C       LL       :  CONSTANTS OF INTEGRATION IN EQ. SC(1), OBTAINED     
C                   BY SOLVING SCALED VERSION OF EQ. SC(5);             
C                   EXPONENTIAL TERM OF EQ. SC(12) NOT INCLUDED         
C       LYRCUT   :  LOGICAL FLAG FOR TRUNCATION OF COMPUT. LAYER        
C       NN       :  ORDER OF DOUBLE-GAUSS QUADRATURE (NSTR/2)           
C       NCUT     :  NUMBER OF COMPUTATIONAL LAYER WHERE ABSORPTION      
C                     OPTICAL DEPTH EXCEEDS -ABSCUT-                    
C       TAUCPR   :  CUMULATIVE OPTICAL DEPTH (DELTA-M-SCALED)           
C       UTAU     :  OPTICAL DEPTHS OF USER OUTPUT LEVELS                
C       UTAUPR   :  OPTICAL DEPTHS OF USER OUTPUT LEVELS IN DELTA-M     
C                     COORDINATES;  EQUAL TO  -UTAU- IF NO DELTA-M      
C       ZZ       :  BEAM SOURCE VECTORS IN EQ. SS(19)                   
                                                                        
C   I N T E R N A L       V A R I A B L E S:                            
                                                                        
C       FLDIR    :  DIRECT-BEAM FLUX (DELTA-M SCALED)                   
C       FACT     :  EXP( - UTAUPR / UMU0 )                              
C       ZINT     :  INTENSITY OF M = 0 CASE, IN EQ. SC(1)               
C      RFLDIR    :  DIRECT-BEAM FLUX (NOT DELTA-M SCALED)               
                                                                        
C   O U T P U T    V A R I A B L E S:                                   
                                                                        
C       S0CMS    :  MULTIPLE SCATTERING SOLAR SOURCE FUNCTION           
C      FDNSRT    :  DOWNWARD DIFFUSE SOLAR FLUX AT SURFACE              
                                                                        
      LOGICAL LYRCUT                                                    
      REAL*8    S0CMS( MAXUMU,* )                                       
      INTEGER LAYRU( * )                                                
      REAL*8    CMU( * ), CWT( * ), GC( MXCMU,MXCMU,* ),                
     $        GU( MXUMU,MXCMU,* ), KK( MXCMU,* ), LL( MXCMU,* ),        
     $        TAUCPR( 0:* ), UTAU( * ), UTAUPR( * ),                    
     $        BEAMMS( MXUMU,* ), ZZ( MXCMU,* )                          
                                                                        
C                                               ** LOOP OVER USER LEVELS
      DO 30 LU = 1, NTAU                                                
                                                                        
         LYU = LAYRU(LU)                                                
         IF ( LYRCUT .AND. LYU.GT.NCUT ) GOTO 30                        
                                                                        
C                                     ** NO RADIATION REACHES THIS LEVEL
                                                                        
         FACT  = DEXP( - UTAUPR(LU) / UMU0 )                            
C                                               ** LOOP OVER USER ANGLES
         DO 20 IU = 1, NUMU                                             
            ZINT = 0.0                                                  
            DO 10 JQ = 1, NN                                            
               ZINT = ZINT + GU(IU,JQ,LYU) * LL(JQ,LYU) *               
     $                DEXP( - KK(JQ,LYU) * (UTAUPR(LU) - TAUCPR(LYU)) ) 
10          CONTINUE                                                    
            DO 11 JQ = NN+1, NSTR                                       
               ZINT = ZINT + GU(IU,JQ,LYU) * LL(JQ,LYU) *               
     $         DEXP( - KK(JQ,LYU) * (UTAUPR(LU) - TAUCPR(LYU-1)) )      
11          CONTINUE                                                    
                                                                        
C                   **  MS SOURCE FUNCTIONS CALCULATED STW(30) M.S. TERM
                                                                        
            S0CMS(IU,LU) = ZINT + BEAMMS(IU,LYU) * FACT                 
20       CONTINUE                                                       
30    CONTINUE                                                          
                                                                        
C                                  **  LAYER AVERAGE OF S0CMS AS MODTRAN
      DO 40 IU = 1, NUMU                                                
         DO 40 LU = 1, NTAU-1                                           
         S0CMS(IU,LU) = ( S0CMS(IU,LU) + S0CMS(IU,LU+1) ) / 2.          
40    CONTINUE                                                          
                                                                        
      LU = NTAU                                                         
      LYU = LAYRU(LU)                                                   
      FDNSRT = 0.                                                       
                                                                        
      IF ( .NOT.( LYRCUT .AND. LYU.GT.NCUT ) )  THEN                    
C                                           ** RADIATION REACHES SURFACE
         FACT  = DEXP( - UTAUPR(LU) / UMU0 )                            
         FLDIR = UMU0 * ( FBEAM * FACT )                                
         RFLDIR= UMU0 * FBEAM * EXP( - UTAU( LU ) / UMU0 )              
                                                                        
         DO 60  IQ = 1, NN                                              
            ZINT = 0.0                                                  
            DO 50  JQ = 1, NN                                           
               ZINT = ZINT + GC(IQ,JQ,LYU) * LL(JQ,LYU) *               
     $                DEXP( - KK(JQ,LYU) * (UTAUPR(LU) - TAUCPR(LYU)) ) 
50          CONTINUE                                                    
            DO 51  JQ = NN+1, NSTR                                      
               ZINT = ZINT + GC(IQ,JQ,LYU) * LL(JQ,LYU) *               
     $          DEXP( - KK(JQ,LYU) * (UTAUPR(LU) - TAUCPR(LYU-1)) )     
51          CONTINUE                                                    
            FDNSRT = FDNSRT + CWT(NN+1-IQ) * CMU(NN+1-IQ) *             
     $                        ( ZINT + ZZ(IQ,LYU)*FACT )                
60       CONTINUE                                                       
                                                                        
         FDNSRT = 2.0 * PI * FDNSRT + FLDIR - RFLDIR                    
         IF ( FDNSRT.LT.0. )  FDNSRT = 0.                               
      END IF                                                            
                                                                        
      RETURN                                                            
      END                                                               
        SUBROUTINE  MSTHML( CMU, CWT, GC, GU, KK, LAYRU, LL, LYRCUT,    
     $                      MAXUMU, MXCMU, MXUMU, NCUT, NN, NSTR, NTAU, 
     $                      NUMU, OPRIM, PI, TAUCPR, UMU0, UTAUPR,      
     $                      XR0, XR1, Z0UMS, Z1UMS, ZPLK0, ZPLK1,       
     $                      FDNTRT, T0CMS )                             
                                                                        
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
C    I N P U T     V A R I A B L E S:                                   
                                                                        
C       CMU      :  ABSCISSAE FOR GAUSS QUADRATURE OVER ANGLE COSINE    
C       CWT      :  WEIGHTS FOR GAUSS QUADRATURE OVER ANGLE COSINE      
C       GC       :  EIGENVECTORS AT POLAR QUADRATURE ANGLES, SC(1)      
C       GU       :  EIGENVECTORS INTERPOLATED TO USER POLAR ANGLES      
C                   (I.E., -G- IN EQ. SC(1))                            
C       KK       :  EIGENVALUES OF COEFF. MATRIX IN EQ. SS(7)           
C       LAYRU    :  LAYER NUMBER OF USER LEVEL -UTAU-                   
C       LL       :  CONSTANTS OF INTEGRATION IN EQ. SC(1), OBTAINED     
C                   BY SOLVING SCALED VERSION OF EQ. SC(5);             
C                   EXPONENTIAL TERM OF EQ. SC(12) NOT INCLUDED         
C       LYRCUT   :  LOGICAL FLAG FOR TRUNCATION OF COMPUT. LAYER        
C       NN       :  ORDER OF DOUBLE-GAUSS QUADRATURE (NSTR/2)           
C       NCUT     :  NUMBER OF COMPUTATIONAL LAYER WHERE ABSORPTION      
C                     OPTICAL DEPTH EXCEEDS -ABSCUT-                    
C       OPRIM    :  SINGLE SCATTERING ALBEDO                            
C       TAUCPR   :  CUMULATIVE OPTICAL DEPTH (DELTA-M-SCALED)           
C       UTAUPR   :  OPTICAL DEPTHS OF USER OUTPUT LEVELS IN DELTA-M     
C                     COORDINATES;  EQUAL TO  -UTAU- IF NO DELTA-M      
C       XR0      :  EXPANSION OF THERMAL SOURCE FUNCTION                
C       XR1      :  EXPANSION OF THERMAL SOURCE FUNCTION EQS.SS(14-16)  
C       ZPLK0    :  THERMAL SOURCE VECTORS -Z0-, BY SOLVING EQ. SS(16)  
C       ZPLK1    :  THERMAL SOURCE VECTORS -Z1-, BY SOLVING EQ. SS(16)  
                                                                        
C   I N T E R N A L       V A R I A B L E S:                            
                                                                        
C       ZINT     :  INTENSITY OF M = 0 CASE, IN EQ. SC(1)               
                                                                        
C   O U T P U T    V A R I A B L E S:                                   
                                                                        
C       T0CMS    :  MULTIPLE SCATTERING THERMAL SOURCE FUNCTION         
C      FDNTRT    :  DOWNWARD DIFFUSE THERMAL FLUX AT SURFACE            
                                                                        
      LOGICAL LYRCUT                                                    
      REAL*8    T0CMS( MAXUMU,* )                                       
      INTEGER LAYRU( * )                                                
      REAL*8    T0C,CMU( * ), CWT( * ), GC( MXCMU,MXCMU,* ),            
     $        GU( MXUMU,MXCMU,* ), KK( MXCMU,* ), LL( MXCMU,* ),        
     $        OPRIM( * ), TAUCPR( 0:* ), UTAUPR( * ), XR0( * ),         
     $        XR1( * ), Z0UMS( MXUMU,* ), Z1UMS( MXUMU,* ),             
     $        FDNTRT,ZPLK0( MXCMU,* ), ZPLK1( MXCMU,* )                 
C                                               ** LOOP OVER USER LEVELS
      DO 30 LU = 1, NTAU                                                
         LYU = LAYRU(LU)                                                
         IF ( LYRCUT .AND. LYU.GT.NCUT ) GOTO 30                        
                                                                        
C                                     ** NO RADIATION REACHES THIS LEVEL
                                                                        
         T0C = (1. - OPRIM(LYU)) * ( XR0(LYU) + XR1(LYU)*UTAUPR(LU) )   
C                                ** LOOP OVER USER ANGLES               
         DO 20 IU = 1, NUMU                                             
            ZINT = 0.0                                                  
            DO 10 JQ = 1, NN                                            
               ZINT = ZINT + GU(IU,JQ,LYU) * LL(JQ,LYU) *               
     $                DEXP( - KK(JQ,LYU) * (UTAUPR(LU) - TAUCPR(LYU)) ) 
10          CONTINUE                                                    
            DO 11 JQ = NN+1, NSTR                                       
               ZINT = ZINT + GU(IU,JQ,LYU) * LL(JQ,LYU) *               
     $         DEXP( - KK(JQ,LYU) * (UTAUPR(LU) - TAUCPR(LYU-1)) )      
11          CONTINUE                                                    
                                                                        
C                   **  MS SOURCE FUNCTIONS CALCULATED STW(30) M.S. TERM
                                                                        
            T0CMS(IU,LU) = T0C + ZINT + Z0UMS(IU,LYU) +                 
     $                                  Z1UMS(IU,LYU) * UTAUPR(LU)      
20       CONTINUE                                                       
30    CONTINUE                                                          
C                                  **  LAYER AVERAGE OF T0CMS AS MODTRAN
      DO 40 IU = 1, NUMU                                                
         DO 40 LU = 1, NTAU-1                                           
                                                                        
                                                                        
         T0CMS(IU,LU) = ( T0CMS(IU,LU) + T0CMS(IU,LU+1) ) / 2.          
40    CONTINUE                                                          
      LU = NTAU                                                         
                                                                        
      LYU = LAYRU(LU)                                                   
                                                                        
C      FDNTRT = 0.0                                                     
      FDNTRT = 0.D0                                                     
                                                                        
      DO 60  IQ = 1, NN                                                 
                                                                        
                                                                        
         ZINT = 0.0                                                     
         DO 50  JQ = 1, NN                                              
            ZINT = ZINT + GC(IQ,JQ,LYU) * LL(JQ,LYU) *                  
     $             DEXP( - KK(JQ,LYU) * (UTAUPR(LU) - TAUCPR(LYU)) )    
50       CONTINUE                                                       
         DO 51  JQ = NN+1, NSTR                                         
            ZINT = ZINT + GC(IQ,JQ,LYU) * LL(JQ,LYU) *                  
     $             DEXP( - KK(JQ,LYU) * (UTAUPR(LU) - TAUCPR(LYU-1)) )  
51       CONTINUE                                                       
         FDNTRT = FDNTRT + CWT(NN+1-IQ) * CMU(NN+1-IQ) * ( ZINT +       
     $                      ZPLK0(IQ,LYU)+ZPLK1(IQ,LYU)*UTAUPR(LU) )    
60       CONTINUE                                                       
                                                                        
         FDNTRT = 2.0 * PI * FDNTRT                                     
         IF ( FDNTRT.LT.0. )  FDNTRT = 0.                               
      RETURN                                                            
      END                                                               
      SUBROUTINE NEWH2(H1,H2,ANGLE,RANGE,BETA,LENN,HTAN,PHI)            
C                                                                       
C     THIS ROUTINE DETERMINES                                           
C       HTAN     TANGENT HEIGHT [KM],                                   
C       H2       FINAL ALTITUDE [KM],                                   
C       BETA     EARTH CENTER ANGLE [DEG], AND                          
C       LENN     PATH SWITCH (=1 IF PATH PASSES THROUGH HTAN)           
C     GIVEN INPUTS                                                      
C       H1       INITIAL (OBSERVER) ALTITUDE [KM],                      
C       ANGLE    PATH ZENITH ANGLE AT H1 [DEG], AND                     
C       RANGE    PATH SLANT RANGE.                                      
C                                                                       
C     DECLARE ARGUMENTS:                                                
      DOUBLE PRECISION H1,H2,ANGLE,RANGE,BETA,HTAN,PHI                  
      INTEGER LENN                                                      
C                                                                       
C     LIST COMMONS:                                                     
      REAL RE,ZMAX                                                      
      INTEGER IPATH                                                     
      COMMON/PARMTR/RE,ZMAX,IPATH                                       
C                                                                       
C     DECLARE LOCAL VARIABLES:                                          
      DOUBLE PRECISION RX,CPATH,RATIO                                   
C                                                                       
C     DECLARE FUNCTIONS:                                                
      DOUBLE PRECISION TANHT                                            
C                                                                       
C     LIST DATA:                                                        
      DOUBLE PRECISION DEG                                              
      DATA DEG/57.2957795131D0/                                         
C                                                                       
C     COMPUTE CPATH, THE PATH CONSTANT,                                 
      CALL IRFXN(H1,RX,RATIO)                                           
      CPATH=RX*SIN(ANGLE/DEG)*(H1+DBLE(RE))                             
C                                                                       
C     FIND HTAN, H2, BETA AND LENN.                                     
      HTAN=TANHT(CPATH,H1)                                              
      CALL FNDPTH(CPATH,H1,HTAN,H2,RANGE,BETA,LENN,ANGLE,PHI)           
      IF(ANGLE.LE.90.)HTAN=MIN(H1,H2)                                   
C                                                                       
C     ROUTINE OPERATIONS COMPLETED.                                     
      RETURN                                                            
      END                                                               
      SUBROUTINE NEWSRC(H1SAV,H2SAV,ANGSAV,RNGSAV,BETASV,LENNSV,        
     1  IPARM,PARM1,PARM2,PARM3,PARM4,PSIPO,BETAH2,IERROR)              
C                                                                       
C     THIS ROUTINE PERFORMS THE FOLLOWING TASKS:                        
C          (1)  RELATIVE SOLAR GEOMETRY PARAMETERS ARE REPLACED BY      
C               ABSOLUTE SOLAR GEOMETRY PARAMETERS.                     
C          (2)  IF THE OBSERVER IS ABOVE THE TOP OF THE ATMOSPHERE,     
C               I.E. H1>ZMAX,  THIS ROUTINE DEFINES THE SOLAR/LUNAR     
C               ANGLES FOR THE POINT AT WHICH THE LINE-OF-SIGHT PATH    
C               ENTERS THE ATMOSPHERE.                                  
C          (3)  IF IMULT EQUALS -1, INDICATING THAT MULTIPLE SCATTERING 
C               CALCULATIONS ARE TO BE PERFORMED AT H2 INSTEAD H1, THIS 
C               ROUTINE RETURNS BETAH2, THE EARTH CENTER ANGLE BETWEEN  
C               H1 AND H2 FOR USE IN ROUTINE H2SRC.                     
C          (4)  IF SOLAR ANGLES ARE DEFINED AT H2 (IPARM=10, 11 OR 12), 
C               THIS ROUTINE DETERMINES THE SOLAR ANGLES AT H1 AND      
C               RESETS IPARM.                                           
C                                                                       
C     DECLARE INPUTS/OUTPUTS                                            
C       H1SAV    OBSERVER ALTITUDE [KM]                                 
C       H2SAV    FINAL ALTITUDE [KM]                                    
C       ANGSAV   PATH ZENITH ANGLE AT THE OBSERVER [DEG]                
C       RNGSAV   PATH RANGE [KM]                                        
C       BETASV   EARTH CENTER ANGLE SUBTENDED BY PATH [DEG]             
C       LENNSV   FLAG EQUAL TO 1 FOR PATHS THROUGH A TANGENT HEIGHT     
C       IPARM    SOLAR/LUNAR GEOMETRY SPECIFICATION FLAG                
C       PARM1    OBSERVER (H1) LATITUDE [DEG NORTH OF EQUATOR] IF IPARM 
C                IS 0 OR 1; TARGET (H2) LATITUDE IF IPARM IS 10 OR 11.  
C                RELATIVE SOLAR AZIMUTH [DEG EAST OF NORTH] AT OBSERVER 
C                (H1) IF IPARM IS 2 AND AT TARGET (H2) IF IPARM IS 12.  
C       PARM2    OBSERVER LONGITUDE [DEG WEST OF GREENWICH]  IF IPARM   
C                IS 0 OR 1; TARGET LONGITUDE IF IPARM IS 10 OR 11.      
C                SOLAR ZENITH ANGLE [DEG] AT OBSERVER IF IPARM IS 2 AND 
C                AT TARGET IF IPARM IS 12.                              
C       PARM3    SOURCE LATITUDE [DEG NORTH OF EQUATOR].                
C       PARM4    SOURCE LONGITUDE [DEG WEST OF GREENWICH].              
C       PSIPO    PATH TRUE AZIMUTH ANGLE [DEG EAST OF NORTH]            
C       BETAH2   EARTH CENTER ANGLE BETWEEN H1 AND H2                   
      REAL H1SAV,H2SAV,ANGSAV,RNGSAV,BETASV,PARM1,PARM2,PARM3,PARM4,    
     1  PSIPO,BETAH2                                                    
      INTEGER LENNSV,IPARM                                              
C                                                                       
C     INCLUDE PARAMETERS                                                
      INCLUDE 'PARAM.LST'                                               
C                                                                       
C     INCLUDE COMMONS                                                   
      INTEGER MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT                     
      REAL TBOUND,SALB                                                  
      LOGICAL MODTRN                                                    
      COMMON/CARD1/MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB,   
     1  MODTRN                                                          
      INTEGER LENN                                                      
      REAL H1,H2,ANGLE,RANGE,BETA,REE                                   
      COMMON/CARD3/H1,H2,ANGLE,RANGE,BETA,REE,LENN                      
C                                                                       
C       PI       THE CONSTANT PI                                        
C       DEG      NUMBER OF DEGREES IN ONE RADIAN.                       
C       BIGNUM   MAXIMUM SINGLE PRECISION NUMBER.                       
C       BIGEXP   MAXIMUM EXPONENTIAL ARGUMENT WITHOUT OVERFLOW.         
      REAL PI,DEG,BIGNUM,BIGEXP                                         
      COMMON/CNSTNS/PI,DEG,BIGNUM,BIGEXP                                
      INTEGER IKMAX,ML,ISSGEO,IMULT                                     
      COMMON/CNTRL/IKMAX,ML,ISSGEO,IMULT                                
      REAL RE,ZMAX                                                      
      INTEGER IPATH                                                     
      COMMON/PARMTR/RE,ZMAX,IPATH                                       
C                                                                       
C     FILE UNIT NUMBERS                                                 
C       IRD      MODTRAN INPUT FILE, tape5, UNIT NUMBER (1).            
C       IPR      MODTRAN STANDARD OUTPUT FILE, tape6, UNIT NUMBER (2).  
C       IPU      MODTRAN SPECTRAL DATA FILE, tape7, UNIT NUMBER (7).    
C       NPR      PRINTOUT LEVEL SWITCH (1=small,0=normal,-1=large).     
C       IPR1     MODTRAN FLUX OUTPUT FILE, tape8, UNIT NUMBER (8).      
C       ISCRCH   MULTIPLE SCATTERING SCRATCH FILE UNIT NUMBER (10).     
C       ITB      MOLECULAR BAND MODEL PARAMETER FILE UNIT NUMBER (9).   
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                           
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                       
      LOGICAL LSMALL                                                    
      COMMON/SMALL2/LSMALL                                              
C                                                                       
C     DECLARE LOCAL VARIABLES                                           
      REAL HMIN,PHI,STORE,ECA,PSINEW,PRM1NW,PRM2NW,H2MX                 
      DOUBLE PRECISION DPH1,DPH2,DPANG,DPPHI,DPHMIN,DPBETA,DPRANG,DPBEND
      INTEGER IERROR,NPRSAV,IAMT,LENGTH                                 
C                                                                       
C     DEFINE DATA                                                       
      LOGICAL LOGLOS                                                    
      INTEGER ISLCT,ITER                                                
      DATA LOGLOS/.FALSE./,ISLCT/0/,ITER/0/                             
C                                                                       
C     CALL GEOINP TO DETERMINE THE SET (H1,H2,HMIN,ANGLE,PHI,LENN,H2MX).
      IERROR=0                                                          
      NPRSAV=NPR                                                        
      NPR=2                                                             
      CALL GEOINP(H1,H2,ANGLE,RANGE,BETA,ITYPE,                         
     1  LENN,HMIN,PHI,IERROR,ISLCT,LOGLOS,H2MX)                         
      NPR=NPRSAV                                                        
C                                                                       
C     RESET VALUES AND RETURN IF EITHER AN INCONSISTENCY WAS DETECTED.  
      IF(IERROR.NE.0)THEN                                               
          H1=H1SAV                                                      
          H2=H2SAV                                                      
          ANGLE=ANGSAV                                                  
          RANGE=RNGSAV                                                  
          BETA=BETASV                                                   
          LENN=LENNSV                                                   
          BETAH2=0.                                                     
          RETURN                                                        
      ENDIF                                                             
C                                                                       
C     CHECK FOR RELATIVE SOLAR GEOMETRY PARAMETERS.                     
      IF(IPARM.EQ.2 .OR. IPARM.EQ.12)THEN                               
C                                                                       
C         RELATIVE SOLAR AZIMUTH AND SOLAR ZENITH ANGLES WERE           
C         INPUTS.  ASSUME THAT THE OBSERVER AND SUN ARE BOTH ON         
C         THE EQUATOR, THAT THE OBSERVER IS AT 0 DEG LONGITUDE,         
C         AND THAT THE SUN IS WEST OF THE OBSERVER.                     
C         STEP 1:  DETERMINE THE TRUE PATH AZIMUTH [PSIPO = TRUE SOLAR  
C                  AZIMUTH (270 DG) - RELATIVE SOLAR AZIMUTH (PARM1)].  
          PSIPO=270.-PARM1                                              
C                                                                       
C         STEP 2:  DETERMINE SOLAR ZENITH EXITING THE ATMOSPHERE        
C                  OR UPON HITTING THE HARD EARTH (180-DPPHI).          
          IF(IPARM.EQ.2)THEN                                            
              DPH1=DBLE(H1SAV)                                          
          ELSE                                                          
              DPH1=DBLE(H2MX)                                           
          ENDIF                                                         
          DPANG=DBLE(PARM2)                                             
          DPH2=DBLE(ZMAX)                                               
          LENGTH=1                                                      
          IERROR=0                                                      
          CALL DPFNMN(DPH1,DPANG,DPH2,LENGTH,ITER,DPHMIN,DPPHI,IERROR)  
C                                                                       
C         STEP 3:  SET SOLAR LONGITUDE TO SOLAR ZENITH PLUS BENDING.    
          IF(IERROR.EQ.0)THEN                                           
C                                                                       
C             THE SOLAR PATH FROM H1SAV PASSES THROUGH THE ATMOSPHERE.  
              IAMT=2                                                    
              LSMALL=.FALSE.                                            
              IF(DPH1.GT.DBLE(ZMAX))THEN                                
                  DPH1=DBLE(ZMAX)                                       
                  DPANG=DPPHI                                           
              ENDIF                                                     
              CALL DPRFPA(DPH1,DPH2,DPANG,DPPHI,LENGTH,                 
     1          DPHMIN,IAMT,DPBETA,DPRANG,DPBEND)                       
              PARM4=PARM2+REAL(DPBEND)                                  
          ELSE                                                          
C                                                                       
C             THE SOLAR PATH FROM H1SAV IS ABOVE THE ATMOSPHERE.        
              PARM4=PARM2                                               
          ENDIF                                                         
C                                                                       
C         STEP 4:  WRITE OUT CHANGE.                                    
          IF(IPARM.EQ.2)THEN                                            
Calley              WRITE(IPR,'(/A,/(F13.5,2A))')                       
              IF (IPR .GT. 0) WRITE(IPR,'(/A,/(F13.5,2A))')             
     1          ' REPLACING IPARM=2 SOLAR/LUNAR GEOMETRY PARAMETERS',   
     2          PARM1,'   RELATIVE SOLAR/LUNAR AZIMUTH AT H1',          
     3          ' (DEG EAST OF NORTH)',                                 
     4          PARM2,'   SOLAR/LUNAR ZENITH ANGLE AT H1 (DEG)'         
Calley              WRITE(IPR,'(4(/2A),/(F13.5,2A))')'      WITH',      
              IF (IPR .GT. 0) WRITE(IPR,                                
     +                        '(4(/2A),/(F13.5,2A))')'      WITH',      
     1          ' IPARM=0 SOLAR/LUNAR GEOMETRY PARAMETERS',             
     2          '      0.00000   OBSERVER (H1) LATITUDE',               
     3          ' (DEG NORTH OF EQUATOR)',                              
     4          '      0.00000   OBSERVER (H1) LONGITUDE',              
     5          ' (DEG WEST OF GREENWICH)',                             
     6          '      0.00000   SOURCE LATITUDE',                      
     7          ' (DEG NORTH OF EQUATOR)',                              
     8          PARM4,'   SOURCE LONGITUDE',                            
     9          ' (DEG WEST OF GREENWICH)',                             
     &          PSIPO,'   TRUE PATH AZIMUTH FROM H1 TO H2',             
     1          ' (DEG EAST OF NORTH)'                                  
          ELSE                                                          
Calley              WRITE(IPR,'(/A,/(F13.5,2A))')                       
              IF (IPR .GT. 0) WRITE(IPR,'(/A,/(F13.5,2A))')             
     1          ' REPLACING IPARM=12 SOLAR/LUNAR GEOMETRY PARAMETERS',  
     2          PARM1,'   RELATIVE SOLAR/LUNAR AZIMUTH AT H2',          
     3          ' (DEG EAST OF NORTH)',                                 
     4          PARM2,'   SOLAR/LUNAR ZENITH ANGLE AT H2 (DEG)'         
Calley              WRITE(IPR,'(4(/2A),/(F13.5,2A))')'      WITH',      
              IF (IPR .GT. 0) WRITE(IPR,                                
     +                        '(4(/2A),/(F13.5,2A))')'      WITH',      
     1          ' IPARM=10 SOLAR/LUNAR GEOMETRY PARAMETERS',            
     2          '      0.00000   TARGET (H2) LATITUDE',                 
     3          ' (DEG NORTH OF EQUATOR)',                              
     4          '      0.00000   TARGET (H2) LONGITUDE',                
     5          ' (DEG WEST OF GREENWICH)',                             
     6          '      0.00000   SOURCE LATITUDE',                      
     7          ' (DEG NORTH OF EQUATOR)',                              
     8          PARM4,'   SOURCE LONGITUDE',                            
     9          ' (DEG WEST OF GREENWICH)',                             
     &          PSIPO,'   TRUE PATH AZIMUTH FROM H2 TO H1',             
     1          ' (DEG EAST OF NORTH)'                                  
          ENDIF                                                         
C                                                                       
C         STEP 5:  SET ABSOLUTE SOLAR GEOMETRY VALUES                   
          IPARM=IPARM-2                                                 
          PARM1=0.                                                      
          PARM2=0.                                                      
          PARM3=0.                                                      
      ENDIF                                                             
C                                                                       
C     RETURN IF H1 IS BELOW THE TOP OF THE ATMOSPHERE                   
C     UNLESS IMULT EQUALS -1 (IF IMULT EQUALS -1, THE                   
C     EARTH CENTER ANGLE TO H2 MUST BE DETERMINED).                     
      IF(H1.LE.ZMAX .AND. IMULT.NE.-1 .AND. IPARM.LE.2)RETURN           
C                                                                       
C     IF MULTIPLE SCATTERING IS TO BE CALCULATED AT H2                  
C     OR SOLAR GEOMETRY PARAMETER ARE DEFINED AT H2,                    
C     DETERMINE THE EARTH CENTER ANGLE BETWEEN H1 AND H2.               
      IF(IMULT.EQ.-1 .OR. IPARM.GE.10)THEN                              
          IAMT=2                                                        
          LSMALL=.FALSE.                                                
          DPHMIN=DBLE(HMIN)                                             
          IF(ITYPE.EQ.3 .AND. H2SAV.NE.0.)THEN                          
C                                                                       
C             H2 IS THE TANGENT POINT (CASE 3B).                        
              DPH1=DPHMIN                                               
              DPH2=DBLE(H1)                                             
              DPANG=DBLE(90.)                                           
              DPPHI=DBLE(ANGLE)                                         
              LENGTH=0                                                  
          ELSE                                                          
C                                                                       
C             H2 IS THE FINAL ALTITUDE (NO MORE THAN ZMAX).             
              DPH1=DBLE(H1)                                             
              DPH2=DBLE(H2)                                             
              DPANG=DBLE(ANGLE)                                         
              DPPHI=DBLE(PHI)                                           
              LENGTH=LENN                                               
          ENDIF                                                         
          CALL DPRFPA(DPH1,DPH2,DPANG,DPPHI,LENGTH,                     
     1      DPHMIN,IAMT,DPBETA,DPRANG,DPBEND)                           
          BETAH2=REAL(DPBETA)                                           
          IF(H2MX.GT.H2)THEN                                            
C                                                                       
C             H2 WAS REDUCED TO THE TOP OF THE ATMOSPHERE.  ADD TO      
C             THE EARTH CENTER ANGLE THE H2 TO H2MX CONTRIBUTION.       
              STORE=SIN(PHI/DEG)/(RE+H2SAV)                             
              BETAH2=BETAH2+(180.-(DEG*ASIN((RE+ZMAX)*STORE)+PHI))      
          ENDIF                                                         
          IF(IPARM.GE.10)THEN                                           
C                                                                       
C             CONVERT FROM TARGET (H2) BASED SOLAR GEOMETRY PARAMETERS  
C             TO OBSERVER (H1) BASED SOLAR GEOMETRY PARAMETERS.         
Calley              WRITE(IPR,'(/(2A))')' CONVERT FROM IPARM=10',       
              IF (IPR .GT. 0) WRITE(IPR,                                
     +                        '(/(2A))')' CONVERT FROM IPARM=10',       
     1          ' TARGET (H2) SOLAR/LUNAR GEOMETRY PARAMETERS',         
     2          '      0.00000   TARGET (H2) LATITUDE',                 
     3          ' (DEG NORTH OF EQUATOR)',                              
     4          '      0.00000   TARGET (H2) LONGITUDE',                
     5          ' (DEG WEST OF GREENWICH)'                              
Calley              WRITE(IPR,'(F13.5,2X,A)')PSIPO,                     
              IF (IPR .GT. 0) WRITE(IPR,'(F13.5,2X,A)')PSIPO,           
     1          ' TRUE PATH AZIMUTH FROM H2 TO H1 (DEG EAST OF NORTH)'  
              CALL LOCATE(PARM1,PARM2,PSIPO,BETAH2,PRM1NW,PRM2NW)       
              CALL PSIECA(PRM1NW,PRM2NW,PARM1,PARM2,PSIPO,BETAH2)       
              PARM1=PRM1NW                                              
              PARM2=PRM2NW                                              
Calley              WRITE(IPR,'(/2A,/(F13.5,2A))')' TO IPARM=0',        
              IF (IPR.GT.0)WRITE(IPR,'(/2A,/(F13.5,2A))')' TO IPARM=0', 
     1          ' OBSERVER (H1) SOLAR/LUNAR GEOMETRY PARAMETERS',       
     2          PARM1,'   OBSERVER (H1) LATITUDE',                      
     3          ' (DEG NORTH OF EQUATOR)',                              
     4          PARM2,'   OBSERVER (H1) LONGITUDE',                     
     5          ' (DEG WEST OF GREENWICH)',                             
     6          PSIPO,'   TRUE PATH AZIMUTH FROM H1 TO H2',             
     7          ' (DEG EAST OF NORTH)'                                  
          ENDIF                                                         
          IF(H1SAV.LE.ZMAX)THEN                                         
              H1=H1SAV                                                  
              H2=H2SAV                                                  
              ANGLE=ANGSAV                                              
              RANGE=RNGSAV                                              
              BETA=BETASV                                               
              LENN=LENNSV                                               
              IPARM=0                                                   
              RETURN                                                    
          ENDIF                                                         
      ENDIF                                                             
C                                                                       
C     SET H2 TO ITS ORIGINAL VALUE                                      
      H2=H2SAV                                                          
C                                                                       
C     CALCULATE THE EARTH CENTER ANGLE, ECA, BETWEEN THE ORIGINAL       
C     OBSERVER ALTITUDE, H1SAV, AND THE NEW OBSERVER ALTITUDE, H1.      
C     ASSUME NO REFRACTION ABOVE, H1, THE TOP OF THE ATMOSPHERE.        
      STORE=SIN(ANGLE/DEG)/(RE+H1SAV)                                   
      ECA=180.-(DEG*ASIN((RE+H1)*STORE)+ANGLE)                          
      IF(ECA.LT.0.)ECA=0.                                               
C                                                                       
C     SLANT PATH BRANCHING                                              
      IF(ITYPE.EQ.2)THEN                                                
C                                                                       
C         IF PATH GEOMETRY WAS DEFINED BY CASE 2C (H1,H2,RANGE) OR      
C         CASE 2D (H1,H2,BETA), CHANGE TO CASE 2A (H1,H2,ANGLE).        
C         IF PATH WAS DEFINED BY CASE 2B (H1,ANGLE,RANGE) DETERMINE     
C         THE NEW RANGE.                                                
          BETA=0.                                                       
          RANGE=0.                                                      
          IF(BETASV.EQ.0. .AND. RNGSAV.NE.0. .AND. ANGSAV.NE.0.)        
     1      RANGE=RNGSAV-SIN(ECA/DEG)/STORE                             
      ENDIF                                                             
C                                                                       
C     WRITE OUT CHANGES IN GEOMETRY.                                    
Calley      WRITE(IPR,'(/A,//2A,/2A,/A,2F13.5)')                        
      IF (IPR .GT. 0) WRITE(IPR,'(/A,//2A,/2A,/A,2F13.5)')              
     1  ' OBSERVER ALTITUDE WAS LOWERED TO THE TOP OF THE ATMOSPHERE:', 
     2  ' NAME                   DESCRIPTION                ',          
     3  '      INPUT      REVISION',                                    
     4  ' -----   ------------------------------------------',          
     5  '   ----------   ----------',                                   
     6  ' H1      OBSERVER ALTITUDE (KM)                    ',          
     7  H1SAV,H1                                                        
      IF(ITYPE.EQ.3)THEN                                                
Calley          WRITE(IPR,'(2A,2F13.5)')' H2      ',                    
          IF (IPR .GT. 0) WRITE(IPR,'(2A,2F13.5)')' H2      ',          
     1      'TANGENT ALTITUDE (KM)                     ',H2SAV,H2       
      ELSE                                                              
Calley          WRITE(IPR,'(2A,2F13.5)')' H2      ',                    
          IF (IPR .GT. 0) WRITE(IPR,'(2A,2F13.5)')' H2      ',          
     1      'FINAL ALTITUDE (KM)                       ',H2SAV,H2       
      ENDIF                                                             
Calley      WRITE(IPR,'(3(A,2F13.5,/),A,2I13)')                         
      IF (IPR .GT. 0) WRITE(IPR,'(3(A,2F13.5,/),A,2I13)')               
     1  ' ANGLE   OBSERVER ZENITH (DEG)                     ',          
     2  ANGSAV,ANGLE,                                                   
     3  ' RANGE   SLANT RANGE (KM)                          ',          
     4  RNGSAV,RANGE,                                                   
     5  ' BETA    EARTH CENTER ANGLE (DEG)                  ',          
     6  BETASV,BETA,                                                    
     7  ' LENN    SHORT/LONG PATH FLAG                      ',          
     8  LENNSV,LENN                                                     
C                                                                       
C     BRANCH BASED ON SOLAR/LUNAR GEOMETRY SPECIFICATION FLAG           
      IF(IPARM.LT.2)THEN                                                
C                                                                       
C         OBSERVER LATITUDE, LONGITUDE, AND PATH AZIMUTH WERE           
C         INPUTS.  DETERMINE THEIR VALUES AT THE NEW H1.                
          CALL LOCATE(PARM1,PARM2,PSIPO,ECA,PRM1NW,PRM2NW)              
          CALL PSIECA(PRM1NW,PRM2NW,PARM1,PARM2,PSINEW,ECA)             
          PSINEW=PSINEW+180.                                            
          IF(PSINEW.GE.360.)PSINEW=PSINEW-360.                          
Calley          WRITE(IPR,'((A,2F13.5))')                               
          IF (IPR .GT. 0) WRITE(IPR,'((A,2F13.5))')                     
     1      ' PARM1   OBSERVER LATITUDE (DEG NORTH OF EQUATOR)  ',      
     2      PARM1,PRM1NW,                                               
     3      ' PARM2   OBSERVER LONGITUDE (DEG WEST OF GREENWICH)',      
     4      PARM2,PRM2NW,                                               
     5      ' PSIPO   PATH AZIMUTH (DEG EAST OF NORTH)          ',      
     6      PSIPO,PSINEW                                                
          PARM1=PRM1NW                                                  
          PARM2=PRM2NW                                                  
          PSIPO=PSINEW                                                  
      ENDIF                                                             
C                                                                       
C     REPLACE PATH GEOMETRY INPUTS                                      
      H1SAV=H1                                                          
      H2SAV=H2                                                          
      ANGSAV=ANGLE                                                      
      RNGSAV=RANGE                                                      
      BETASV=BETA                                                       
      LENNSV=LENN                                                       
      IPARM=0                                                           
C                                                                       
C     RETURN TO DRIVER                                                  
      RETURN                                                            
      END                                                               
      SUBROUTINE NO2XS(V,CROSS)                                         
      INTEGER NMAX                                                      
      PARAMETER (NMAX=7176)                                             
      DIMENSION CRSNO2(7176)                                            
C     BEGINNING AND ENDING FREQUENCIES (CM-1):    14095  49970          
C     BIN WIDTH AND TOTAL ENTRIES:        5   7176                      
C     CROSS-SECTIONS IN CM^2 TIMES 2.6868E19                            
      DATA VBEG, VEND, VINCR /14095.0, 49970.0, 5.0/                    
      DATA (CRSNO2(I),I=    1,  100)/                                   
     1     .21870,   .15350,   .10260,   .09893,   .10090,   .11710,    
     2     .13530,   .23030,   .21370,   .22680,   .12480,   .15960,    
     3     .17730,   .13800,   .14370,   .10780,   .13850,   .17470,    
     4     .16590,   .14350,   .11220,   .13870,   .10950,   .09848,    
     5     .12920,   .13350,   .04234,   .08134,   .07137,   .10730,    
     6     .11030,   .07682,   .07669,   .06166,   .05656,   .10160,    
     7     .09995,   .11720,   .09483,   .09305,   .03115,   .02633,    
     8     .10530,   .06741,   .01517,   .06836,   .09529,   .05382,    
     9     .01689,   .04787,   .04899,   .03848,   .06239,   .05901,    
     &     .04349,   .06058,   .07849,   .06572,   .02851,   .08506,    
     1     .07100,   .08237,   .05719,   .02472,   .06307,   .01950,    
     2     .02154,   .04849,   .04495,   .06848,   .06195,   .06561,    
     3     .06729,   .09270,   .05591,   .10490,   .05964,   .01618,    
     4     .06340,   .05316,   .09263,   .08107,   .04596,   .06632,    
     5     .04788,   .07965,   .06563,   .09042,   .02667,   .07322,    
     6     .08035,   .06220,   .07409,   .09548,   .14110,   .17830,    
     7     .15900,   .14000,   .15920,   .13030/                        
      DATA (CRSNO2(I),I=  101,  200)/                                   
     1     .10720,   .11170,   .13170,   .10950,   .11350,   .08546,    
     2     .08870,   .08289,   .11990,   .11190,   .09036,   .07293,    
     3     .11890,   .12690,   .12290,   .12140,   .11400,   .11880,    
     4     .14220,   .14500,   .14250,   .13300,   .14180,   .16530,    
     5     .18090,   .15070,   .15840,   .17590,   .13970,   .10660,    
     6     .18640,   .13800,   .16360,   .23500,   .20230,   .21570,    
     7     .24470,   .24520,   .21360,   .19570,   .21570,   .23140,    
     8     .18890,   .21340,   .20800,   .19130,   .22900,   .23120,    
     9     .26000,   .22120,   .29600,   .34020,   .24360,   .22600,    
     &     .21370,   .24420,   .21690,   .21130,   .20940,   .22380,    
     1     .23620,   .24160,   .19950,   .15450,   .22700,   .26500,    
     2     .26750,   .25430,   .25360,   .21760,   .25260,   .24170,    
     3     .18670,   .19580,   .24410,   .26420,   .21800,   .17950,    
     4     .18860,   .20500,   .21050,   .19770,   .19110,   .18070,    
     5     .18830,   .14600,   .15000,   .14010,   .11370,   .11430,    
     6     .12750,   .11600,   .06466,   .06873,   .08635,   .08132,    
     7     .08656,   .08974,   .05564,   .09207/                        
      DATA (CRSNO2(I),I=  201,  300)/                                   
     1     .05698,   .08596,   .08385,   .07201,   .08996,   .08037,    
     2     .10620,   .11490,   .12750,   .11600,   .12780,   .16540,    
     3     .16040,   .17680,   .17100,   .14150,   .16230,   .15250,    
     4     .11010,   .13880,   .14530,   .13730,   .15130,   .14020,    
     5     .14210,   .17980,   .19080,   .18040,   .20350,   .22460,    
     6     .26420,   .23120,   .18040,   .19740,   .21920,   .23070,    
     7     .24510,   .21910,   .21410,   .22240,   .21170,   .22910,    
     8     .21450,   .24130,   .24270,   .25830,   .27520,   .26030,    
     9     .27580,   .26990,   .26940,   .31870,   .27390,   .30050,    
     &     .29030,   .28740,   .31920,   .28690,   .25630,   .21510,    
     1     .23610,   .23550,   .25210,   .25810,   .23430,   .25770,    
     2     .32850,   .43700,   .53180,   .59710,   .58770,   .55740,    
     3     .66360,   .62420,   .62560,   .52170,   .52580,   .42510,    
     4     .37900,   .38750,   .36380,   .38540,   .38530,   .31840,    
     5     .28760,   .29980,   .34620,   .35620,   .42630,   .48640,    
     6     .48740,   .42600,   .46650,   .50700,   .55250,   .48450,    
     7     .43990,   .44750,   .37020,   .33350/                        
      DATA (CRSNO2(I),I=  301,  400)/                                   
     1     .36300,   .35730,   .35470,   .35860,   .34070,   .29520,    
     2     .35840,   .37500,   .32240,   .28030,   .31310,   .31760,    
     3     .32020,   .29840,   .28330,   .33590,   .37970,   .38370,    
     4     .34460,   .33930,   .30650,   .33730,   .33620,   .31840,    
     5     .33930,   .35520,   .29410,   .29420,   .32470,   .29960,    
     6     .29450,   .25960,   .28480,   .33710,   .35280,   .35660,    
     7     .30110,   .31410,   .31920,   .30160,   .26040,   .24730,    
     8     .25590,   .27490,   .31370,   .30600,   .30600,   .29810,    
     9     .29420,   .31850,   .27430,   .26550,   .25600,   .23850,    
     &     .21400,   .21390,   .22920,   .24940,   .25290,   .28130,    
     1     .31660,   .30980,   .30410,   .30160,   .28540,   .28940,    
     2     .30370,   .30540,   .34030,   .33810,   .35570,   .37810,    
     3     .39550,   .43190,   .38070,   .41830,   .43640,   .47590,    
     4     .46810,   .50190,   .52650,   .51940,   .49070,   .49680,    
     5     .51570,   .50800,   .48800,   .53620,   .54800,   .55630,    
     6     .53730,   .50980,   .46430,   .51350,   .50020,   .46070,    
     7     .42660,   .46580,   .50090,   .53270/                        
      DATA (CRSNO2(I),I=  401,  500)/                                   
     1     .61590,   .68670,   .73060,   .82510,   .82240,   .80780,    
     2     .73110,   .59730,   .63690,   .62580,   .59620,   .52880,    
     3     .51970,   .49470,   .47730,   .52020,   .60370,   .69650,    
     4     .82560,   .83960,   .81050,   .84270,   .89720,  1.01800,    
     5    1.07900,   .98130,   .88360,   .86200,   .78960,   .81970,    
     6     .73030,   .65930,   .64410,   .62840,   .63320,   .69620,    
     7     .75860,   .83640,   .76260,   .89530,   .80870,   .77040,    
     8     .77310,   .82810,  1.07700,  1.46500,  1.40000,  1.14700,    
     9    1.25500,  1.02700,   .92990,   .97420,   .94670,   .75260,    
     &     .70070,   .58690,   .47170,   .45950,   .45510,   .45290,    
     1     .43760,   .43540,   .42900,   .43200,   .45170,   .44010,    
     2     .42470,   .45220,   .45600,   .42140,   .49150,   .50730,    
     3     .46810,   .40760,   .39820,   .37830,   .42630,   .43830,    
     4     .41200,   .37220,   .34080,   .36740,   .39650,   .48630,    
     5     .47310,   .47820,   .43160,   .37730,   .33280,   .32630,    
     6     .36480,   .34660,   .36930,   .39750,   .41620,   .41070,    
     7     .44910,   .54050,   .62490,   .68300/                        
      DATA (CRSNO2(I),I=  501,  600)/                                   
     1     .72510,   .82050,   .83940,   .87020,  1.03100,   .96760,    
     2    1.05400,  1.13000,  1.05900,  1.04100,  1.11300,  1.13600,    
     3    1.17300,  1.12100,  1.10300,  1.14000,  1.05700,  1.00400,    
     4     .86580,   .88650,   .92010,   .90690,   .82520,   .79490,    
     5     .71610,   .68570,   .75590,   .79670,   .73520,   .72940,    
     6     .72730,   .71200,   .64380,   .63330,   .67810,   .78410,    
     7     .68600,   .59240,   .58140,   .59670,   .60660,   .65150,    
     8     .72090,   .78070,   .82880,   .89240,   .86650,   .85710,    
     9     .96400,  1.20500,  1.36600,  1.35000,  1.35400,  1.78000,    
     &    1.98300,  1.82100,  1.64200,  1.65900,  1.97300,  1.86100,    
     1    1.68200,  1.76800,  1.64000,  1.54400,  1.25900,  1.24800,    
     2    1.39200,  1.44200,  1.55000,  1.62100,  1.37300,  1.31000,    
     3    1.24200,  1.22800,  1.20100,  1.24800,  1.00400,   .99960,    
     4     .91290,   .91230,   .90680,   .91750,   .88850,   .96500,    
     5     .94560,  1.05300,  1.05000,  1.09300,  1.21100,  1.21100,    
     6    1.25300,  1.20000,  1.27900,  1.24800,  1.24600,  1.26500,    
     7    1.49400,  1.60300,  1.37100,  1.38800/                        
      DATA (CRSNO2(I),I=  601,  700)/                                   
     1    1.33500,  1.31300,  1.25700,  1.09000,  1.03500,   .92030,    
     2     .98190,   .84640,   .82520,   .80730,   .86130,   .89050,    
     3     .85680,   .78590,   .73700,   .71390,   .73000,   .80050,    
     4     .82110,   .88520,   .85980,   .81710,   .82140,   .87750,    
     5     .98820,  1.06000,  1.19000,  1.28500,  1.26100,  1.27600,    
     6    1.35800,  1.29400,  1.29400,  1.31100,  1.35700,  1.43000,    
     7    1.39800,  1.36100,  1.20100,  1.05300,   .91800,   .89060,    
     8     .95120,   .88800,   .76600,   .76340,   .84050,   .79400,    
     9     .73450,   .73040,   .73100,   .75770,   .76510,   .78140,    
     &     .84880,   .92050,  1.00900,  1.10200,  1.03700,  1.18400,    
     1    1.18600,  1.07400,  1.14600,  1.20300,  1.20700,  1.22800,    
     2    1.38000,  1.44800,  1.47200,  1.50600,  1.72800,  1.80500,    
     3    1.76100,  1.66300,  1.91100,  1.99800,  2.22300,  2.50000,    
     4    2.40400,  2.31200,  2.43000,  2.28200,  2.31400,  2.54200,    
     5    2.35400,  2.67100,  2.74400,  2.41300,  2.05700,  2.16200,    
     6    2.04400,  1.90000,  1.73200,  1.65400,  1.71400,  1.83100,    
     7    1.82800,  1.65300,  1.74700,  1.92800/                        
      DATA (CRSNO2(I),I=  701,  800)/                                   
     1    2.08900,  2.19800,  1.94600,  1.90500,  1.80600,  1.74900,    
     2    1.81200,  1.39700,  1.27200,  1.33300,  1.39700,  1.37400,    
     3    1.22300,  1.30900,  1.46900,  1.59200,  1.94800,  2.30100,    
     4    2.44100,  2.34200,  2.30700,  2.53100,  2.67900,  3.04200,    
     5    3.13800,  3.26000,  2.64400,  2.36300,  2.58100,  3.25200,    
     6    2.92700,  2.65900,  2.30200,  2.09300,  2.21900,  2.08800,    
     7    2.03200,  1.82400,  1.68900,  1.68500,  1.73200,  1.73600,    
     8    1.76400,  1.67600,  1.57100,  1.63900,  1.62200,  1.50500,    
     9    1.50900,  1.41500,  1.47100,  1.35300,  1.39000,  1.29500,    
     &    1.18000,  1.24200,  1.27300,  1.13800,  1.11200,  1.25000,    
     1    1.35600,  1.40400,  1.42400,  1.55300,  1.68500,  1.69900,    
     2    1.58700,  1.50600,  1.45100,  1.53900,  1.49500,  1.52900,    
     3    1.55400,  1.49500,  1.63000,  1.60700,  1.54000,  1.43500,    
     4    1.36600,  1.45800,  1.42300,  1.62200,  1.73600,  1.75600,    
     5    1.72500,  1.75800,  1.85600,  2.00500,  2.19600,  2.28900,    
     6    2.36200,  2.35200,  2.50300,  2.36500,  2.20800,  2.48200,    
     7    2.90000,  2.91400,  3.06900,  2.63600/                        
      DATA (CRSNO2(I),I=  801,  900)/                                   
     1    2.38300,  2.41200,  2.64800,  2.43000,  2.14100,  2.19000,    
     2    2.24200,  2.24000,  2.15100,  2.08600,  2.08700,  2.18600,    
     3    2.43500,  2.41000,  2.41500,  2.56800,  2.53600,  2.62400,    
     4    2.57700,  2.65700,  3.01200,  3.13100,  3.32400,  3.59800,    
     5    3.31500,  3.11000,  3.33000,  3.30100,  3.07900,  3.32300,    
     6    3.38400,  3.37600,  3.46400,  3.43700,  3.36000,  3.21100,    
     7    2.98900,  2.69600,  2.57400,  2.56900,  2.61100,  2.72100,    
     8    2.94400,  2.96600,  3.01100,  3.14100,  3.41800,  3.56100,    
     9    3.55900,  3.81100,  3.89400,  3.47300,  3.25700,  3.29100,    
     &    3.13200,  3.02800,  3.09800,  3.33400,  3.29700,  3.40700,    
     1    3.60000,  3.81000,  3.64600,  3.72800,  3.88100,  3.67900,    
     2    3.69600,  3.56200,  3.54400,  3.63400,  3.53200,  3.45100,    
     3    3.21600,  3.11900,  3.02100,  2.58900,  2.32300,  2.29100,    
     4    2.13600,  2.07900,  2.04300,  2.03500,  2.14200,  2.24600,    
     5    2.35000,  2.70900,  2.73700,  2.83800,  2.80900,  3.04000,    
     6    3.22500,  3.22600,  3.17300,  3.04300,  3.06300,  3.23300,    
     7    3.16000,  2.87600,  2.81100,  2.45900/                        
      DATA (CRSNO2(I),I=  901, 1000)/                                   
     1    2.12500,  2.08700,  2.08400,  2.14700,  2.15500,  2.05400,    
     2    2.02800,  2.09200,  2.21000,  2.35500,  2.22000,  2.30100,    
     3    2.15800,  2.03400,  2.05500,  2.06800,  2.18200,  2.26300,    
     4    2.27600,  2.50900,  2.82100,  2.84200,  2.87400,  3.12900,    
     5    3.12600,  3.04500,  3.27100,  3.14100,  3.20000,  3.31600,    
     6    3.42700,  3.67500,  3.86200,  3.68300,  3.74800,  3.96000,    
     7    4.06300,  4.08600,  4.09800,  4.03200,  3.90200,  3.90100,    
     8    3.85200,  3.93300,  3.83400,  3.71200,  3.80600,  3.74300,    
     9    3.74000,  3.75700,  3.73500,  3.82400,  3.94200,  3.90700,    
     &    3.79500,  3.84200,  4.04700,  4.10000,  4.06000,  4.04300,    
     1    4.10600,  4.14800,  4.21500,  4.26800,  4.46400,  4.68400,    
     2    4.59400,  4.74600,  4.79600,  5.04600,  4.82500,  4.72500,    
     3    4.67600,  4.62200,  4.32800,  4.56300,  5.07200,  5.59600,    
     4    5.86800,  5.96200,  5.78500,  5.87700,  5.73400,  5.51700,    
     5    5.83300,  6.35900,  6.32900,  6.10900,  5.89300,  5.67200,    
     6    4.97800,  4.75000,  4.55200,  4.47300,  4.19200,  4.14800,    
     7    4.05100,  3.90700,  3.85200,  3.78400/                        
      DATA (CRSNO2(I),I= 1001, 1100)/                                   
     1    3.66200,  3.67000,  4.36400,  4.26100,  4.44900,  4.18900,    
     2    4.15200,  4.16200,  3.95700,  3.75800,  3.80500,  3.93200,    
     3    4.06300,  3.88100,  3.92800,  4.06900,  3.90100,  3.86100,    
     4    4.30100,  4.40100,  4.44600,  4.49500,  4.53500,  4.84700,    
     5    5.17400,  5.20000,  5.00800,  4.88600,  5.14700,  5.04000,    
     6    5.13700,  5.04100,  4.75900,  4.64800,  4.80700,  5.38700,    
     7    5.55200,  5.42100,  5.54100,  5.12400,  4.68800,  4.33600,    
     8    4.25900,  4.08200,  3.53800,  3.54500,  3.71100,  3.66800,    
     9    3.42900,  3.35600,  3.59600,  3.64800,  3.94300,  4.13200,    
     &    4.04100,  3.89300,  4.13800,  4.20900,  4.25800,  4.16800,    
     1    4.01400,  4.10000,  4.24300,  4.30700,  4.46700,  4.64300,    
     2    4.63500,  4.71300,  4.80100,  4.71900,  4.43000,  4.64600,    
     3    4.88900,  5.08200,  5.06500,  5.03700,  5.04700,  5.12500,    
     4    5.33700,  5.63300,  5.61600,  5.99500,  6.90300,  6.72000,    
     5    6.62500,  6.27300,  6.18900,  6.04800,  5.76600,  5.69500,    
     6    6.10800,  6.81100,  6.51400,  6.59800,  6.60800,  6.53600,    
     7    6.43000,  6.51600,  6.72400,  6.95800/                        
      DATA (CRSNO2(I),I= 1101, 1200)/                                   
     1    7.02800,  7.37100,  7.81600,  7.20500,  6.66000,  6.54800,    
     2    6.74900,  7.20800,  6.83500,  6.48800,  6.08300,  5.98300,    
     3    6.31800,  6.37900,  5.81800,  5.49600,  5.34700,  5.52500,    
     4    5.32000,  5.14400,  4.92400,  5.23600,  5.19700,  5.46400,    
     5    5.55300,  5.78300,  5.91500,  5.89500,  5.92100,  5.92700,    
     6    6.18400,  6.30300,  6.14900,  6.09300,  6.14700,  6.50600,    
     7    7.06500,  7.63700,  7.86700,  8.26300,  9.10500,  9.59000,    
     8    8.67200,  7.99200,  7.95800,  7.56800,  7.14300,  6.48400,    
     9    6.01600,  5.84200,  5.75800,  5.81600,  5.62400,  5.84300,    
     &    6.30500,  6.41600,  6.97500,  8.03600,  7.53400,  7.00800,    
     1    6.60100,  6.06000,  5.94500,  5.66300,  5.41600,  5.23800,    
     2    5.13500,  5.15800,  5.16500,  5.06000,  4.93800,  5.00500,    
     3    5.21900,  5.09700,  4.61800,  4.55800,  4.54300,  4.39500,    
     4    4.27900,  4.19400,  4.25900,  4.22200,  4.21300,  4.08900,    
     5    4.20600,  4.27000,  4.43700,  4.70300,  4.74100,  4.75000,    
     6    4.97000,  4.94200,  5.01100,  5.08000,  4.94200,  5.13100,    
     7    5.78800,  5.95200,  6.09100,  6.66800/                        
      DATA (CRSNO2(I),I= 1201, 1300)/                                   
     1    6.87900,  7.23300,  7.63600,  8.26800,  8.43500,  8.74100,    
     2    8.91000,  8.78200,  8.82100,  8.54200,  8.44800,  8.47800,    
     3    8.59600,  8.62700,  8.56000,  8.67600,  8.73000,  8.43500,    
     4    8.03800,  8.13800,  8.27000,  8.56200,  8.77600,  9.29700,    
     5    9.34600,  9.15500,  9.10800,  8.89200,  8.58500,  8.50200,    
     6    8.25000,  7.97300,  7.85200,  7.95800,  7.86100,  7.51800,    
     7    7.11300,  6.68800,  6.48200,  6.67000,  7.00700,  7.09200,    
     8    7.18700,  6.91100,  6.59100,  6.23300,  5.98700,  5.93900,    
     9    5.99800,  6.08100,  6.12000,  6.07000,  6.00500,  5.94800,    
     &    6.13200,  6.31200,  6.88000,  7.23400,  7.69300,  8.07000,    
     1    8.66300,  8.38000,  8.40400,  8.66300,  9.13000,  9.52500,    
     2    9.61100, 10.35000, 10.58000, 10.56000, 10.26000, 10.98000,    
     3   12.45000, 12.77000, 11.47000,  9.86700,  8.44700,  7.71200,    
     4    7.31500,  6.98700,  6.80800,  6.79100,  6.53700,  6.50300,    
     5    7.02500,  7.04200,  6.83700,  6.69500,  6.57900,  7.16600,    
     6    7.75800,  8.01600,  7.94800,  7.92200,  7.89800,  7.90300,    
     7    7.78900,  7.58100,  7.53000,  7.47300/                        
      DATA (CRSNO2(I),I= 1301, 1400)/                                   
     1    7.36200,  7.17800,  7.25500,  7.51800,  7.44400,  7.48500,    
     2    7.39000,  7.28700,  7.30600,  7.32600,  7.16800,  6.91000,    
     3    6.84800,  6.71900,  6.42200,  6.37700,  6.41100,  6.36300,    
     4    6.69800,  7.03400,  7.21700,  7.37100,  7.58700,  7.46600,    
     5    7.56800,  7.75900,  8.07500,  8.38700,  8.68800,  8.92900,    
     6    9.25500,  9.54400, 10.04000,  9.68000,  9.54200,  9.20800,    
     7    9.20000,  9.27600,  9.15900,  8.85400,  8.73300,  8.96600,    
     8    9.13800,  9.32400,  9.34800,  9.36800,  9.40300,  9.71200,    
     9   10.41000, 10.91000, 11.32000, 11.22000, 11.13000, 10.99000,    
     &   10.17000,  9.55400,  8.91100,  8.55000,  8.24300,  8.18300,    
     1    8.65600,  8.94900,  8.41500,  8.61700,  8.83600,  8.64700,    
     2    8.44900,  8.68600,  8.58700,  8.42500,  8.51600,  8.79200,    
     3    8.63400,  9.16500,  8.68400,  8.91900,  9.33700,  9.55100,    
     4    9.42800,  9.75900,  9.70300,  9.75400,  9.85900,  9.87300,    
     5    9.58700,  9.74700, 10.18000, 10.63000, 10.96000, 11.43000,    
     6   11.72000, 11.70000, 11.96000, 12.31000, 12.69000, 13.24000,    
     7   12.52000, 12.40000, 13.15000, 12.41000/                        
      DATA (CRSNO2(I),I= 1401, 1500)/                                   
     1   10.75000,  9.85000,  9.74600,  9.28600,  8.83300,  8.91800,    
     2    8.99700,  9.06300,  8.72100,  8.41800,  8.44500,  8.84900,    
     3    8.96100,  8.97600,  9.16400,  9.42300,  9.17200,  8.86500,    
     4    8.30400,  8.40300,  8.26900,  7.85000,  8.31800,  8.47600,    
     5    8.24400,  8.38500,  8.57800,  8.63300,  8.80900,  8.79400,    
     6    8.91700,  9.15800,  9.17700,  9.53800,  9.09900,  8.68800,    
     7    8.80600,  8.61700,  7.93500,  8.60800,  8.79300,  9.13200,    
     8    9.08300,  9.13900,  9.36400,  9.16600,  9.22500, 10.24000,    
     9   11.15000, 11.15000, 11.20000, 11.13000, 10.41000, 10.73000,    
     &   10.80000, 10.76000, 11.20000, 11.54000, 12.15000, 12.03000,    
     1   11.07000, 11.01000, 10.07000,  9.41800,  9.04000,  8.34300,    
     2    7.77200,  7.80500,  7.57800,  7.56200,  7.77200,  7.67100,    
     3    7.95900,  8.46700,  9.10500,  9.43200,  9.85200, 10.20000,    
     4   10.42000, 10.66000, 11.06000, 11.57000, 11.83000, 11.24000,    
     5   11.72000, 12.20000, 12.11000, 12.50000, 13.21000, 14.14000,    
     6   14.57000, 14.85000, 14.72000, 14.33000, 15.21000, 15.34000,    
     7   14.10000, 12.13000, 11.39000, 10.56000/                        
      DATA (CRSNO2(I),I= 1501, 1600)/                                   
     1   10.17000,  9.98600,  9.98300, 10.01000,  9.74700,  9.73800,    
     2    9.85400, 10.24000, 10.62000, 10.95000, 11.20000, 11.77000,    
     3   11.67000, 11.29000, 12.10000, 12.36000, 12.36000, 13.12000,    
     4   13.73000, 12.99000, 12.47000, 12.31000, 11.74000, 11.74000,    
     5   11.09000, 11.06000, 11.24000, 11.13000, 11.42000, 11.14000,    
     6   10.61000, 10.63000, 10.01000, 10.19000, 11.12000, 11.84000,    
     7   12.16000, 12.64000, 13.02000, 12.73000, 12.27000, 12.78000,    
     8   13.84000, 13.78000, 13.54000, 13.05000, 12.99000, 13.13000,    
     9   12.67000, 11.83000, 10.86000, 10.15000,  9.73700,  9.34300,    
     &    9.01300,  8.90700,  9.00600,  9.68700, 10.41000, 10.57000,    
     1   11.08000, 11.54000, 11.52000, 11.63000, 11.06000, 10.74000,    
     2   10.69000, 11.18000, 11.33000, 11.44000, 11.87000, 12.13000,    
     3   11.81000, 12.13000, 12.47000, 12.54000, 11.98000, 10.67000,    
     4   10.12000,  9.90800,  9.93100,  9.88100, 10.20000, 10.26000,    
     5   10.57000, 11.35000, 11.95000, 12.21000, 12.47000, 12.15000,    
     6   11.67000, 11.31000, 11.51000, 12.07000, 12.68000, 12.75000,    
     7   12.73000, 12.30000, 11.93000, 12.08000/                        
      DATA (CRSNO2(I),I= 1601, 1700)/                                   
     1   12.29000, 12.78000, 12.41000, 12.07000, 11.79000, 11.01000,    
     2   10.89000, 11.27000, 11.57000, 11.61000, 11.76000, 11.84000,    
     3   11.83000, 12.28000, 12.49000, 12.14000, 12.18000, 12.28000,    
     4   12.16000, 11.60000, 11.01000, 10.63000, 10.54000, 10.60000,    
     5   10.89000, 11.39000, 11.31000, 11.83000, 12.38000, 12.56000,    
     6   12.56000, 12.89000, 13.66000, 14.32000, 13.99000, 13.85000,    
     7   15.20000, 16.50000, 18.26000, 19.17000, 19.23000, 19.29000,    
     8   19.61000, 18.09000, 16.72000, 16.16000, 14.84000, 13.56000,    
     9   12.79000, 12.19000, 11.77000, 11.52000, 11.60000, 11.00000,    
     &   10.81000, 10.73000, 10.90000, 10.84000, 11.18000, 11.57000,    
     1   12.69000, 12.79000, 12.70000, 12.96000, 12.97000, 13.57000,    
     2   13.96000, 14.10000, 14.49000, 14.53000, 15.54000, 16.07000,    
     3   16.81000, 17.53000, 18.41000, 17.92000, 17.27000, 16.63000,    
     4   14.96000, 14.27000, 14.58000, 13.75000, 13.19000, 12.46000,    
     5   12.06000, 11.87000, 12.20000, 12.24000, 12.15000, 12.16000,    
     6   11.76000, 11.43000, 11.41000, 11.48000, 11.46000, 11.55000,    
     7   11.14000, 10.71000, 10.65000, 10.45000/                        
      DATA (CRSNO2(I),I= 1701, 1800)/                                   
     1   10.36000, 10.47000, 10.66000, 10.61000,  9.75900,  9.45900,    
     2    9.53400, 10.07000, 10.11000, 10.00000, 10.26000, 10.46000,    
     3   10.89000, 11.55000, 11.61000, 11.64000, 11.43000, 11.43000,    
     4   11.77000, 11.55000, 11.71000, 12.52000, 13.44000, 14.77000,    
     5   15.49000, 15.69000, 15.60000, 15.99000, 15.66000, 16.12000,    
     6   17.23000, 17.62000, 18.60000, 18.85000, 18.13000, 17.01000,    
     7   18.01000, 18.29000, 16.98000, 16.51000, 15.73000, 14.74000,    
     8   12.84000, 11.58000, 11.02000, 10.71000, 10.49000, 10.46000,    
     9   10.66000, 10.86000, 10.87000, 10.88000, 10.87000, 11.12000,    
     &   11.35000, 11.42000, 11.64000, 11.90000, 12.58000, 13.12000,    
     1   13.59000, 13.87000, 13.75000, 14.23000, 14.48000, 14.55000,    
     2   14.86000, 15.34000, 15.08000, 15.13000, 15.83000, 16.16000,    
     3   16.10000, 16.05000, 16.21000, 17.01000, 18.55000, 18.88000,    
     4   18.75000, 19.65000, 18.42000, 18.33000, 16.82000, 15.42000,    
     5   14.60000, 14.45000, 14.35000, 14.22000, 14.51000, 15.16000,    
     6   15.76000, 15.64000, 15.54000, 15.56000, 14.99000, 14.99000,    
     7   14.84000, 14.34000, 13.82000, 13.65000/                        
      DATA (CRSNO2(I),I= 1801, 1900)/                                   
     1   13.43000, 13.11000, 12.51000, 12.14000, 12.13000, 11.56000,    
     2   11.58000, 12.01000, 12.39000, 12.41000, 12.54000, 12.97000,    
     3   13.53000, 14.07000, 14.16000, 14.68000, 15.14000, 15.27000,    
     4   15.49000, 15.59000, 15.65000, 15.31000, 16.13000, 16.69000,    
     5   16.55000, 16.12000, 15.76000, 16.00000, 15.98000, 15.57000,    
     6   14.26000, 13.71000, 13.43000, 12.50000, 11.85000, 11.54000,    
     7   11.37000, 11.48000, 11.54000, 11.57000, 11.84000, 12.23000,    
     8   12.29000, 12.47000, 13.15000, 13.73000, 13.97000, 13.88000,    
     9   13.81000, 14.33000, 15.24000, 15.63000, 15.63000, 15.78000,    
     &   16.52000, 16.56000, 15.92000, 16.17000, 16.08000, 15.35000,    
     1   15.61000, 16.28000, 16.13000, 15.62000, 14.55000, 14.68000,    
     2   14.40000, 13.37000, 12.40000, 11.77000, 11.74000, 11.98000,    
     3   11.99000, 12.05000, 12.18000, 11.95000, 11.92000, 11.95000,    
     4   12.54000, 12.54000, 12.86000, 13.29000, 13.66000, 14.14000,    
     5   14.33000, 13.95000, 14.08000, 15.43000, 16.97000, 17.20000,    
     6   17.41000, 17.62000, 18.25000, 17.79000, 17.01000, 16.40000,    
     7   17.28000, 17.50000, 16.57000, 15.67000/                        
      DATA (CRSNO2(I),I= 1901, 2000)/                                   
     1   15.71000, 15.79000, 15.62000, 15.46000, 15.45000, 14.52000,    
     2   14.05000, 14.19000, 14.40000, 14.52000, 14.54000, 14.65000,    
     3   14.95000, 15.13000, 15.10000, 15.00000, 15.06000, 15.45000,    
     4   15.79000, 15.92000, 15.67000, 15.11000, 14.36000, 14.25000,    
     5   13.97000, 13.87000, 14.06000, 14.35000, 14.72000, 15.07000,    
     6   15.32000, 15.42000, 15.55000, 14.80000, 14.54000, 14.67000,    
     7   14.73000, 14.98000, 15.02000, 15.00000, 14.51000, 14.34000,    
     8   14.47000, 14.93000, 15.25000, 15.10000, 15.21000, 14.68000,    
     9   14.61000, 14.73000, 14.70000, 13.90000, 13.32000, 13.22000,    
     &   13.24000, 13.40000, 13.70000, 14.54000, 14.74000, 14.60000,    
     1   14.26000, 13.99000, 14.14000, 14.25000, 13.70000, 13.50000,    
     2   13.94000, 14.13000, 13.69000, 13.20000, 13.07000, 13.39000,    
     3   13.61000, 13.90000, 13.65000, 13.16000, 12.88000, 12.48000,    
     4   12.29000, 12.25000, 12.35000, 12.49000, 12.25000, 12.17000,    
     5   12.32000, 12.46000, 12.38000, 12.12000, 12.15000, 12.39000,    
     6   12.35000, 12.02000, 12.01000, 12.24000, 12.68000, 13.15000,    
     7   13.55000, 14.13000, 14.52000, 14.78000/                        
      DATA (CRSNO2(I),I= 2001, 2100)/                                   
     1   14.65000, 14.27000, 14.36000, 14.39000, 14.48000, 14.50000,    
     2   14.27000, 13.65000, 13.44000, 13.68000, 13.90000, 14.44000,    
     3   14.99000, 15.65000, 16.82000, 17.45000, 18.34000, 18.79000,    
     4   18.68000, 19.04000, 18.09000, 17.52000, 17.42000, 17.25000,    
     5   16.37000, 15.58000, 15.27000, 15.22000, 14.94000, 14.40000,    
     6   13.63000, 13.44000, 13.09000, 13.12000, 13.16000, 13.22000,    
     7   13.37000, 13.27000, 13.48000, 13.40000, 12.99000, 13.03000,    
     8   13.37000, 13.62000, 13.89000, 14.19000, 14.51000, 14.94000,    
     9   15.56000, 16.04000, 16.00000, 16.00000, 16.54000, 17.19000,    
     &   17.07000, 17.04000, 17.02000, 16.10000, 15.15000, 14.74000,    
     1   14.57000, 14.60000, 14.77000, 15.32000, 15.81000, 15.93000,    
     2   15.91000, 15.76000, 15.35000, 14.95000, 15.00000, 15.68000,    
     3   16.06000, 15.99000, 15.92000, 16.50000, 16.94000, 17.43000,    
     4   17.82000, 17.91000, 17.94000, 16.94000, 15.64000, 15.26000,    
     5   15.71000, 15.17000, 14.21000, 14.04000, 13.40000, 12.92000,    
     6   12.83000, 12.39000, 12.31000, 12.41000, 12.30000, 12.27000,    
     7   12.44000, 12.33000, 12.37000, 12.34000/                        
      DATA (CRSNO2(I),I= 2101, 2200)/                                   
     1   12.52000, 13.09000, 13.17000, 13.53000, 14.06000, 14.41000,    
     2   14.14000, 13.88000, 14.17000, 14.03000, 13.96000, 14.03000,    
     3   14.33000, 14.81000, 15.23000, 15.72000, 16.41000, 17.12000,    
     4   17.07000, 16.36000, 15.63000, 15.64000, 16.03000, 15.69000,    
     5   14.74000, 14.38000, 14.36000, 14.55000, 14.69000, 14.88000,    
     6   15.03000, 15.18000, 15.39000, 15.52000, 15.32000, 14.94000,    
     7   14.37000, 13.81000, 13.84000, 13.75000, 13.49000, 13.39000,    
     8   13.28000, 13.34000, 13.33000, 13.54000, 13.65000, 13.51000,    
     9   13.36000, 13.35000, 13.49000, 13.62000, 13.78000, 13.80000,    
     &   13.73000, 13.92000, 14.28000, 14.65000, 14.75000, 15.02000,    
     1   15.25000, 15.32000, 15.44000, 15.45000, 15.61000, 15.72000,    
     2   15.89000, 16.03000, 16.23000, 16.27000, 16.25000, 16.47000,    
     3   16.43000, 16.25000, 16.30000, 16.49000, 16.83000, 16.74000,    
     4   16.50000, 16.98000, 16.92000, 16.96000, 17.02000, 16.58000,    
     5   16.09000, 15.79000, 15.44000, 15.18000, 15.03000, 14.71000,    
     6   14.41000, 13.96000, 14.05000, 13.99000, 14.10000, 14.15000,    
     7   14.45000, 15.19000, 15.88000, 16.20000/                        
      DATA (CRSNO2(I),I= 2201, 2300)/                                   
     1   16.54000, 17.16000, 17.35000, 16.96000, 16.61000, 16.58000,    
     2   16.39000, 16.31000, 16.23000, 16.00000, 15.31000, 15.02000,    
     3   14.62000, 14.11000, 13.71000, 13.68000, 13.67000, 13.68000,    
     4   13.91000, 13.96000, 13.89000, 13.99000, 13.98000, 13.93000,    
     5   13.81000, 13.92000, 14.02000, 14.21000, 14.48000, 14.77000,    
     6   14.88000, 15.20000, 15.39000, 15.78000, 16.30000, 16.13000,    
     7   15.84000, 15.69000, 15.84000, 16.08000, 16.03000, 15.91000,    
     8   15.48000, 15.09000, 14.83000, 14.56000, 14.52000, 14.24000,    
     9   13.95000, 13.60000, 13.45000, 13.60000, 13.59000, 13.66000,    
     &   13.69000, 13.68000, 13.73000, 13.97000, 14.16000, 14.14000,    
     1   13.98000, 13.96000, 14.09000, 14.04000, 13.90000, 13.71000,    
     2   13.53000, 13.34000, 13.42000, 13.58000, 13.78000, 14.16000,    
     3   14.55000, 14.88000, 15.26000, 15.23000, 15.08000, 15.22000,    
     4   15.16000, 15.18000, 15.23000, 15.10000, 15.13000, 15.34000,    
     5   15.69000, 16.20000, 16.65000, 16.90000, 16.82000, 16.31000,    
     6   15.96000, 15.46000, 15.06000, 14.78000, 14.92000, 15.02000,    
     7   15.06000, 14.90000, 14.78000, 14.70000/                        
      DATA (CRSNO2(I),I= 2301, 2400)/                                   
     1   14.68000, 14.79000, 14.93000, 14.87000, 15.05000, 15.30000,    
     2   15.38000, 15.37000, 15.19000, 14.98000, 15.06000, 15.15000,    
     3   15.02000, 14.88000, 14.79000, 14.63000, 14.82000, 15.10000,    
     4   15.55000, 15.53000, 15.58000, 15.68000, 15.73000, 15.51000,    
     5   15.27000, 14.92000, 14.79000, 14.78000, 14.64000, 14.49000,    
     6   14.48000, 14.52000, 14.46000, 14.61000, 14.74000, 14.75000,    
     7   14.89000, 15.01000, 15.27000, 15.23000, 15.18000, 15.05000,    
     8   14.97000, 15.06000, 15.10000, 14.99000, 14.94000, 14.82000,    
     9   14.85000, 14.80000, 14.66000, 14.44000, 14.36000, 14.22000,    
     &   13.94000, 13.79000, 13.69000, 13.58000, 13.59000, 13.74000,    
     1   13.75000, 13.87000, 13.98000, 14.16000, 14.50000, 14.71000,    
     2   15.04000, 15.36000, 15.45000, 15.10000, 14.75000, 14.61000,    
     3   14.61000, 14.73000, 14.65000, 14.65000, 14.86000, 15.10000,    
     4   15.24000, 15.62000, 15.85000, 15.60000, 15.38000, 15.39000,    
     5   15.30000, 15.08000, 15.00000, 14.69000, 14.64000, 14.78000,    
     6   14.94000, 15.07000, 15.13000, 14.85000, 14.51000, 14.23000,    
     7   14.08000, 14.01000, 13.88000, 14.09000/                        
      DATA (CRSNO2(I),I= 2401, 2500)/                                   
     1   14.05000, 14.04000, 13.85000, 13.72000, 13.65000, 13.55000,    
     2   13.65000, 13.74000, 13.60000, 13.48000, 13.31000, 13.36000,    
     3   13.48000, 13.79000, 14.04000, 14.41000, 14.56000, 14.56000,    
     4   14.38000, 14.20000, 14.39000, 14.63000, 14.55000, 14.53000,    
     5   14.37000, 14.37000, 14.49000, 14.69000, 14.61000, 14.48000,    
     6   14.63000, 14.61000, 14.71000, 14.92000, 14.95000, 15.09000,    
     7   15.33000, 15.42000, 15.37000, 15.16000, 15.22000, 15.27000,    
     8   15.45000, 15.52000, 15.36000, 15.59000, 15.70000, 15.85000,    
     9   15.89000, 15.97000, 15.72000, 15.85000, 15.63000, 15.11000,    
     &   14.89000, 14.53000, 14.29000, 13.92000, 13.79000, 13.69000,    
     1   13.60000, 13.59000, 13.37000, 13.40000, 13.24000, 13.13000,    
     2   13.26000, 13.21000, 13.13000, 12.92000, 12.83000, 12.85000,    
     3   12.88000, 13.06000, 13.18000, 13.19000, 13.14000, 12.97000,    
     4   12.95000, 13.02000, 13.04000, 12.99000, 13.14000, 13.29000,    
     5   13.60000, 13.71000, 13.98000, 14.26000, 14.34000, 14.62000,    
     6   15.07000, 15.36000, 15.44000, 15.87000, 15.99000, 16.01000,    
     7   16.31000, 16.31000, 16.19000, 16.10000/                        
      DATA (CRSNO2(I),I= 2501, 2600)/                                   
     1   15.97000, 15.80000, 15.37000, 14.92000, 14.85000, 14.86000,    
     2   14.90000, 14.88000, 14.75000, 14.77000, 14.70000, 14.47000,    
     3   14.37000, 14.12000, 13.91000, 13.57000, 13.24000, 13.12000,    
     4   12.95000, 12.96000, 12.87000, 12.72000, 12.75000, 12.70000,    
     5   12.80000, 12.99000, 13.30000, 13.43000, 13.53000, 13.57000,    
     6   13.79000, 13.64000, 13.69000, 13.66000, 13.47000, 13.24000,    
     7   13.24000, 13.22000, 13.32000, 13.44000, 13.52000, 13.52000,    
     8   13.57000, 13.71000, 13.77000, 13.85000, 14.16000, 14.27000,    
     9   14.42000, 14.55000, 14.86000, 14.94000, 15.02000, 15.07000,    
     &   15.14000, 15.11000, 14.94000, 15.00000, 15.08000, 15.09000,    
     1   14.95000, 15.07000, 14.81000, 14.60000, 14.37000, 14.14000,    
     2   13.87000, 13.57000, 13.50000, 13.21000, 13.13000, 13.14000,    
     3   13.12000, 12.75000, 12.53000, 12.46000, 12.50000, 12.45000,    
     4   12.73000, 12.69000, 12.78000, 13.03000, 13.28000, 13.34000,    
     5   13.25000, 13.33000, 13.53000, 13.42000, 13.50000, 13.39000,    
     6   13.10000, 13.02000, 12.99000, 13.06000, 13.17000, 13.41000,    
     7   13.51000, 13.34000, 13.47000, 13.49000/                        
      DATA (CRSNO2(I),I= 2601, 2700)/                                   
     1   13.39000, 13.20000, 13.07000, 13.08000, 13.16000, 13.12000,    
     2   12.96000, 12.86000, 13.02000, 13.07000, 13.28000, 13.22000,    
     3   13.35000, 13.44000, 13.37000, 13.52000, 13.68000, 13.67000,    
     4   13.77000, 13.75000, 13.79000, 13.78000, 13.66000, 13.62000,    
     5   13.83000, 13.78000, 13.77000, 13.78000, 13.87000, 13.61000,    
     6   13.42000, 13.26000, 13.05000, 13.02000, 12.76000, 12.57000,    
     7   12.51000, 12.51000, 12.38000, 12.32000, 12.41000, 12.41000,    
     8   12.66000, 12.77000, 12.97000, 13.25000, 13.55000, 13.86000,    
     9   14.04000, 14.24000, 14.51000, 14.52000, 14.54000, 14.75000,    
     &   14.86000, 14.96000, 15.12000, 15.09000, 14.94000, 14.90000,    
     1   14.89000, 14.61000, 14.47000, 14.26000, 14.06000, 13.96000,    
     2   13.86000, 13.74000, 13.61000, 13.37000, 13.19000, 13.01000,    
     3   12.94000, 12.85000, 12.81000, 12.66000, 12.66000, 12.45000,    
     4   12.33000, 12.05000, 12.02000, 12.16000, 12.26000, 12.39000,    
     5   12.59000, 12.47000, 12.49000, 12.72000, 12.72000, 12.75000,    
     6   12.64000, 12.69000, 12.82000, 12.88000, 12.98000, 12.86000,    
     7   12.71000, 12.86000, 12.93000, 12.80000/                        
      DATA (CRSNO2(I),I= 2701, 2800)/                                   
     1   12.74000, 12.92000, 12.86000, 12.66000, 12.72000, 12.63000,    
     2   12.64000, 12.55000, 12.60000, 12.55000, 12.55000, 12.53000,    
     3   12.56000, 12.53000, 12.68000, 12.83000, 12.89000, 12.95000,    
     4   13.01000, 13.12000, 13.13000, 13.06000, 13.21000, 13.42000,    
     5   13.42000, 13.26000, 13.19000, 13.14000, 12.95000, 12.80000,    
     6   12.62000, 12.45000, 12.26000, 11.98000, 11.99000, 11.81000,    
     7   11.69000, 11.64000, 11.52000, 11.44000, 11.42000, 11.45000,    
     8   11.50000, 11.49000, 11.50000, 11.49000, 11.57000, 11.49000,    
     9   11.56000, 11.47000, 11.44000, 11.59000, 11.58000, 11.50000,    
     &   11.50000, 11.49000, 11.55000, 11.74000, 11.82000, 11.99000,    
     1   12.07000, 12.10000, 12.17000, 12.38000, 12.44000, 12.42000,    
     2   12.65000, 12.82000, 12.89000, 12.96000, 13.05000, 13.15000,    
     3   13.01000, 13.08000, 13.13000, 13.46000, 13.67000, 13.85000,    
     4   13.93000, 13.82000, 14.02000, 14.08000, 14.07000, 13.96000,    
     5   13.92000, 13.67000, 13.59000, 13.29000, 13.21000, 13.00000,    
     6   12.66000, 12.50000, 12.33000, 12.21000, 12.08000, 11.94000,    
     7   11.81000, 11.72000, 11.60000, 11.45000/                        
      DATA (CRSNO2(I),I= 2801, 2900)/                                   
     1   11.42000, 11.49000, 11.18000, 11.33000, 11.41000, 11.44000,    
     2   11.59000, 11.80000, 11.75000, 11.86000, 11.92000, 11.97000,    
     3   12.12000, 12.28000, 12.38000, 12.74000, 12.78000, 12.88000,    
     4   13.05000, 13.33000, 13.42000, 13.53000, 13.66000, 13.65000,    
     5   13.75000, 13.78000, 13.75000, 13.77000, 13.86000, 13.56000,    
     6   13.34000, 12.97000, 12.86000, 12.52000, 12.35000, 12.09000,    
     7   11.90000, 11.63000, 11.40000, 11.16000, 11.13000, 10.94000,    
     8   10.75000, 10.53000, 10.44000, 10.23000, 10.10000, 10.29000,    
     9   10.23000, 10.12000, 10.08000, 10.38000, 10.56000, 10.81000,    
     &   10.92000, 11.01000, 11.02000, 11.23000, 11.32000, 11.55000,    
     1   11.45000, 11.33000, 11.18000, 10.99000, 10.97000, 10.86000,    
     2   10.77000, 10.77000, 10.85000, 10.95000, 11.10000, 11.20000,    
     3   11.39000, 11.48000, 11.54000, 11.76000, 11.84000, 12.03000,    
     4   12.01000, 11.83000, 11.83000, 11.53000, 11.53000, 11.44000,    
     5   11.53000, 11.30000, 11.29000, 11.42000, 11.19000, 11.18000,    
     6   10.97000, 10.83000, 10.75000, 10.44000, 10.41000, 10.63000,    
     7   10.48000, 10.41000, 10.34000, 10.23000/                        
      DATA (CRSNO2(I),I= 2901, 3000)/                                   
     1   10.34000, 10.24000, 10.36000, 10.30000, 10.17000, 10.27000,    
     2   10.29000, 10.57000, 10.67000, 10.73000, 10.95000, 11.13000,    
     3   11.34000, 11.44000, 11.83000, 12.29000, 12.37000, 12.55000,    
     4   12.76000, 12.90000, 13.00000, 13.09000, 13.48000, 13.38000,    
     5   13.28000, 13.33000, 13.14000, 12.83000, 12.49000, 12.00000,    
     6   11.78000, 11.57000, 11.20000, 11.07000, 11.10000, 11.14000,    
     7   11.07000, 10.93000, 10.76000, 10.97000, 10.81000, 10.99000,    
     8   11.13000, 10.99000, 10.98000, 11.19000, 11.14000, 11.46000,    
     9   11.37000, 11.46000, 11.55000, 11.42000, 11.65000, 11.46000,    
     &   11.30000, 11.23000, 11.41000, 11.39000, 11.38000, 11.26000,    
     1   11.14000, 11.25000, 11.28000, 11.06000, 10.91000, 10.71000,    
     2   10.77000, 10.59000, 10.54000, 10.55000, 10.34000, 10.44000,    
     3   10.27000, 10.43000, 10.46000, 10.39000, 10.53000, 10.73000,    
     4   10.58000, 10.56000, 10.54000, 10.26000, 10.26000, 10.16000,    
     5   10.25000, 10.32000, 10.15000, 10.21000, 10.26000, 10.17000,    
     6    9.94700, 10.03000,  9.93000,  9.98200, 10.02000,  9.99400,    
     7    9.95900, 10.16000, 10.10000, 10.27000/                        
      DATA (CRSNO2(I),I= 3001, 3100)/                                   
     1   10.30000, 10.19000, 10.10000,  9.99300, 10.02000, 10.18000,    
     2   10.04000,  9.88500,  9.72800,  9.68400,  9.52400,  9.27600,    
     3    9.34300,  9.15100,  9.22000,  9.21700,  9.24900,  9.18800,    
     4    9.19400,  9.44600,  9.47100,  9.39500,  9.53200,  9.48500,    
     5    9.46900,  9.57300,  9.61000,  9.74200,  9.90300, 10.05000,    
     6   10.29000, 10.37000, 10.38000, 10.32000, 10.46000, 10.48000,    
     7   10.70000, 10.66000, 10.57000, 10.71000, 10.94000, 10.96000,    
     8   11.00000, 10.73000, 11.06000, 11.16000, 10.99000, 10.91000,    
     9   11.09000, 10.92000, 10.79000, 10.58000, 10.52000, 10.60000,    
     &   10.25000, 10.38000, 10.08000,  9.97300,  9.99400, 10.10000,    
     1   10.07000, 10.04000,  9.88500,  9.89800,  9.87000,  9.78900,    
     2    9.65900,  9.92800, 10.02000, 10.21000,  9.91900,  9.68500,    
     3    9.86800,  9.66700,  9.77500, 10.15000, 10.42000, 10.38000,    
     4   10.22000, 10.40000, 10.25000, 10.26000, 10.19000, 10.35000,    
     5   10.47000, 10.39000, 10.54000, 10.27000, 10.39000, 10.48000,    
     6   10.38000, 10.40000, 10.37000, 10.09000,  9.92900,  9.70600,    
     7    9.63800,  9.31200,  9.18800,  9.00100/                        
      DATA (CRSNO2(I),I= 3101, 3200)/                                   
     1    8.83400,  8.57800,  8.61600,  8.50700,  8.58300,  8.54500,    
     2    8.50800,  8.29200,  8.64800,  8.57900,  8.73300,  8.81600,    
     3    8.77200,  9.01000,  8.87000,  8.89600,  9.05700,  8.95000,    
     4    9.23300,  9.27900,  9.18500,  9.08000,  9.17700,  9.11800,    
     5    9.27200,  9.35500,  9.09000,  9.26800,  9.40400,  9.30500,    
     6    9.29500,  9.11500,  9.41700,  9.18600,  8.94600,  8.85700,    
     7    8.85500,  8.85500,  8.82600,  8.93500,  8.89100,  8.80500,    
     8    8.58500,  8.82000,  8.90700,  8.53300,  8.95400,  8.74400,    
     9    8.89900,  9.27700,  9.12900,  9.31700,  9.52800,  9.22600,    
     &    9.37000,  9.44100,  9.28300,  9.01600,  8.58600,  8.37400,    
     1    8.67600,  8.86400,  8.40300,  8.46800,  8.05100,  8.23900,    
     2    8.08100,  8.15200,  8.23700,  8.27800,  8.04800,  8.40200,    
     3    8.56200,  8.59200,  8.48400,  8.49400,  8.72500,  8.98800,    
     4    8.70900,  8.90100,  8.94100,  8.98700,  9.45700,  9.41100,    
     5    9.41600,  9.25100,  9.19000,  9.56900, 10.07000, 10.02000,    
     6    9.67200,  9.74100,  9.65700,  9.75000,  9.68400,  9.43100,    
     7    9.25000,  9.28900,  9.29100,  9.04500/                        
      DATA (CRSNO2(I),I= 3201, 3300)/                                   
     1    8.71400,  8.40300,  8.62100,  8.26200,  8.27000,  8.27000,    
     2    8.24600,  8.18700,  8.08900,  7.83800,  8.04700,  8.00600,    
     3    7.94000,  8.18000,  8.36200,  8.35900,  8.15100,  8.33300,    
     4    8.32200,  8.23600,  7.93900,  8.04500,  7.98000,  8.23800,    
     5    8.38700,  8.07600,  7.90800,  7.98400,  8.00000,  8.00000,    
     6    8.11400,  7.56200,  7.84500,  7.81100,  7.81300,  7.90000,    
     7    7.85300,  7.97500,  7.86300,  8.14000,  8.13300,  8.13100,    
     8    8.08400,  8.27700,  8.09700,  8.59100,  8.60800,  8.22500,    
     9    8.27400,  8.35400,  8.37700,  8.52300,  8.64700,  8.41200,    
     &    8.41100,  8.26600,  8.40400,  8.33400,  7.96800,  7.90700,    
     1    7.85900,  8.23300,  8.11300,  7.67800,  7.80600,  7.60900,    
     2    7.72600,  7.65300,  7.71400,  7.62300,  7.46700,  7.37600,    
     3    7.43800,  7.71900,  7.92400,  7.98300,  7.81400,  7.51400,    
     4    7.59700,  7.58600,  7.61700,  7.91500,  8.18900,  7.92300,    
     5    7.71900,  7.73900,  7.88100,  7.70100,  7.52800,  7.48200,    
     6    7.63700,  7.49700,  7.48500,  7.69600,  7.98700,  7.59000,    
     7    7.52000,  7.46400,  7.61200,  7.33700/                        
      DATA (CRSNO2(I),I= 3301, 3400)/                                   
     1    7.42700,  7.53100,  7.78500,  7.19100,  7.45800,  7.42800,    
     2    7.76700,  7.86600,  7.70200,  7.62200,  7.93500,  8.06700,    
     3    7.75400,  7.54100,  7.40100,  7.40600,  7.51800,  7.42500,    
     4    7.40700,  7.48300,  7.13500,  7.55400,  7.57800,  7.51000,    
     5    7.49900,  7.46500,  7.26300,  7.50400,  7.68900,  7.82200,    
     6    7.49600,  7.22600,  7.46400,  7.82600,  7.81900,  7.59300,    
     7    7.77400,  7.31100,  7.18800,  7.10700,  7.14200,  7.14600,    
     8    7.06000,  7.11100,  7.13000,  7.05200,  7.08300,  7.04700,    
     9    6.97000,  7.05800,  7.06400,  7.04400,  6.93400,  6.96400,    
     &    6.93700,  6.97400,  7.08800,  7.09500,  7.13400,  7.19700,    
     1    7.11800,  7.18100,  7.07500,  6.96800,  7.08200,  7.21500,    
     2    7.19100,  7.14600,  7.29200,  7.27000,  7.12200,  7.09600,    
     3    7.11900,  7.20900,  7.30800,  7.21000,  7.23500,  7.21200,    
     4    7.11800,  7.09600,  7.08900,  7.07600,  7.09300,  6.99000,    
     5    7.02100,  6.91100,  7.03500,  7.01600,  6.91400,  6.81700,    
     6    6.71200,  6.69500,  6.78800,  6.76700,  6.79700,  6.73200,    
     7    6.71600,  6.71800,  6.64000,  6.71000/                        
      DATA (CRSNO2(I),I= 3401, 3500)/                                   
     1    6.59200,  6.69400,  6.57100,  6.52000,  6.51200,  6.41100,    
     2    6.51400,  6.62800,  6.54700,  6.36300,  6.49200,  6.51500,    
     3    6.56900,  6.67500,  6.69800,  6.60600,  6.59100,  6.65300,    
     4    6.81800,  6.81500,  6.89800,  6.96500,  6.90800,  6.88800,    
     5    7.00300,  7.01500,  6.86100,  6.84400,  6.86600,  6.84200,    
     6    6.88400,  6.84400,  6.72200,  6.65100,  6.83700,  6.76700,    
     7    6.54400,  6.53400,  6.52300,  6.57400,  6.64300,  6.37300,    
     8    6.26500,  6.29200,  6.35300,  6.28100,  6.33300,  6.26300,    
     9    6.31900,  6.21000,  6.16000,  6.27500,  6.17000,  6.34700,    
     &    6.37800,  6.41000,  6.36300,  6.38300,  6.26700,  6.19700,    
     1    6.30400,  6.44300,  6.41000,  6.41100,  6.34200,  6.40800,    
     2    6.53700,  6.51600,  6.54400,  6.43800,  6.49700,  6.63400,    
     3    6.54500,  6.44000,  6.48400,  6.58400,  6.62200,  6.52800,    
     4    6.47600,  6.57000,  6.56500,  6.51400,  6.41100,  6.38800,    
     5    6.25300,  6.14000,  6.24500,  6.19400,  6.11800,  6.10300,    
     6    6.17800,  6.14600,  6.03800,  5.88800,  5.88300,  5.86900,    
     7    5.86300,  5.73600,  5.69800,  5.79600/                        
      DATA (CRSNO2(I),I= 3501, 3600)/                                   
     1    5.81700,  5.69400,  5.78700,  5.69100,  5.60400,  5.72100,    
     2    5.81900,  5.74300,  5.63600,  5.65700,  5.63600,  5.78500,    
     3    5.75400,  5.54900,  5.39100,  5.50100,  5.66100,  5.73000,    
     4    5.70600,  5.67900,  5.76500,  5.76900,  5.81100,  5.84900,    
     5    5.80800,  5.84900,  5.91700,  5.95800,  5.92000,  5.86600,    
     6    5.99900,  6.08700,  6.14700,  5.99900,  5.77300,  5.79300,    
     7    5.75200,  5.63300,  5.54300,  5.45300,  5.51600,  5.65100,    
     8    5.63800,  5.49300,  5.35100,  5.34000,  5.38400,  5.47800,    
     9    5.31900,  5.13200,  5.18700,  5.36600,  5.21300,  5.18300,    
     &    5.23700,  5.21900,  4.99200,  5.20100,  5.25500,  5.18800,    
     1    5.21300,  5.24200,  5.02400,  5.13600,  5.26100,  5.33800,    
     2    5.47000,  5.34300,  5.31300,  5.23000,  5.50100,  5.40700,    
     3    5.36400,  5.29700,  5.37200,  5.36900,  5.40800,  5.56700,    
     4    5.59700,  5.55400,  5.46300,  5.46200,  5.62500,  5.53600,    
     5    5.52000,  5.66400,  5.62100,  5.36100,  5.26200,  5.45800,    
     6    5.43400,  5.23300,  5.09900,  4.97100,  4.96900,  5.10600,    
     7    5.15700,  5.02100,  5.08000,  5.28500/                        
      DATA (CRSNO2(I),I= 3601, 3700)/                                   
     1    5.10400,  5.05000,  4.97400,  4.94100,  5.20000,  5.10200,    
     2    5.09800,  5.06800,  5.00300,  5.23400,  5.28800,  4.95000,    
     3    4.95700,  5.17800,  5.11100,  5.05700,  5.23000,  5.09200,    
     4    5.00800,  5.03900,  4.97600,  4.97200,  5.00000,  4.92000,    
     5    4.86200,  4.90300,  5.00100,  5.06200,  4.90100,  4.81700,    
     6    4.99400,  4.96200,  4.92000,  4.98600,  4.81100,  4.78700,    
     7    4.89300,  4.97100,  4.84700,  4.94700,  5.04800,  5.01000,    
     8    5.04800,  5.07000,  5.03300,  5.07300,  5.08700,  5.04500,    
     9    5.03100,  4.99000,  4.94900,  4.95800,  4.90300,  4.82900,    
     &    4.76600,  4.76200,  4.69100,  4.72400,  4.63600,  4.55100,    
     1    4.60400,  4.51400,  4.50700,  4.42300,  4.30000,  4.32100,    
     2    4.35900,  4.32600,  4.30600,  4.27000,  4.23200,  4.28100,    
     3    4.34100,  4.31800,  4.30000,  4.27200,  4.28000,  4.35900,    
     4    4.38500,  4.48400,  4.43800,  4.44900,  4.41400,  4.36000,    
     5    4.46800,  4.55000,  4.46700,  4.49500,  4.54300,  4.52600,    
     6    4.53500,  4.53500,  4.45200,  4.36300,  4.41600,  4.49800,    
     7    4.51600,  4.49400,  4.35100,  4.42100/                        
      DATA (CRSNO2(I),I= 3701, 3800)/                                   
     1    4.30300,  4.30300,  4.32100,  4.29600,  4.31600,  4.32100,    
     2    4.31700,  4.27300,  4.21200,  4.22100,  4.16700,  4.16800,    
     3    4.16100,  4.01700,  3.95300,  4.08300,  4.16400,  4.13100,    
     4    4.12500,  4.02500,  4.05900,  4.13100,  4.13600,  4.13200,    
     5    4.15600,  4.17200,  4.14000,  4.07300,  4.11600,  4.23100,    
     6    4.16900,  4.17900,  4.21600,  4.24700,  4.22700,  4.25000,    
     7    4.23300,  4.20700,  4.20300,  4.23100,  4.30700,  4.23100,    
     8    4.23600,  4.23200,  4.23500,  4.18600,  4.16400,  4.15500,    
     9    4.10700,  4.12600,  4.15500,  4.18500,  4.17900,  4.13300,    
     &    4.14000,  4.08900,  4.04500,  4.04400,  4.01200,  3.95600,    
     1    3.97400,  4.05800,  4.05200,  4.02800,  4.11200,  4.18500,    
     2    4.12000,  4.03800,  4.03800,  4.08300,  4.15000,  4.13300,    
     3    4.10800,  4.10500,  4.10700,  4.19400,  4.19300,  4.12200,    
     4    4.11700,  4.14800,  4.09800,  4.10200,  4.07300,  3.98800,    
     5    4.01100,  4.01100,  3.96000,  3.88600,  3.83600,  3.83300,    
     6    3.81800,  3.76200,  3.75000,  3.80800,  3.82700,  3.74500,    
     7    3.89700,  3.95300,  3.87900,  3.82700/                        
      DATA (CRSNO2(I),I= 3801, 3900)/                                   
     1    3.83700,  3.80700,  3.73500,  3.69800,  3.64600,  3.57300,    
     2    3.53000,  3.58600,  3.70100,  3.69200,  3.54500,  3.48600,    
     3    3.47900,  3.46100,  3.43700,  3.38500,  3.34900,  3.34900,    
     4    3.30900,  3.37700,  3.35300,  3.29800,  3.26800,  3.27800,    
     5    3.32800,  3.37700,  3.33900,  3.25200,  3.27800,  3.34200,    
     6    3.32300,  3.27000,  3.23400,  3.25000,  3.28600,  3.27900,    
     7    3.21400,  3.19100,  3.30100,  3.29000,  3.27400,  3.27400,    
     8    3.27500,  3.26600,  3.27500,  3.31800,  3.38900,  3.46500,    
     9    3.41800,  3.40200,  3.43100,  3.38400,  3.39100,  3.42300,    
     &    3.46100,  3.49700,  3.50000,  3.44000,  3.40400,  3.45200,    
     1    3.39700,  3.36700,  3.36000,  3.34600,  3.34800,  3.36500,    
     2    3.32500,  3.20900,  3.23300,  3.36400,  3.38000,  3.30100,    
     3    3.25700,  3.25300,  3.27100,  3.29400,  3.27100,  3.20000,    
     4    3.25500,  3.27500,  3.21800,  3.22600,  3.30300,  3.34100,    
     5    3.30700,  3.32500,  3.33700,  3.27300,  3.26000,  3.26200,    
     6    3.31500,  3.36500,  3.37700,  3.37500,  3.40700,  3.47900,    
     7    3.49300,  3.53200,  3.59900,  3.60700/                        
      DATA (CRSNO2(I),I= 3901, 4000)/                                   
     1    3.56100,  3.50900,  3.52200,  3.63200,  3.60800,  3.51000,    
     2    3.50300,  3.49400,  3.46300,  3.45700,  3.45200,  3.42900,    
     3    3.54700,  3.36200,  3.31600,  3.31500,  3.31700,  3.33800,    
     4    3.30200,  3.21100,  3.21500,  3.19900,  3.20900,  3.20500,    
     5    3.18500,  3.11000,  3.04000,  3.00400,  2.96500,  2.91800,    
     6    2.89500,  2.91000,  2.87900,  2.91100,  2.89800,  2.82000,    
     7    2.75800,  2.74000,  2.75400,  2.66600,  2.61800,  2.62400,    
     8    2.64200,  2.64800,  2.63800,  2.61200,  2.64700,  2.65400,    
     9    2.67100,  2.64500,  2.62600,  2.64700,  2.68400,  2.69400,    
     &    2.76800,  2.70400,  2.76200,  2.80500,  2.79900,  2.80400,    
     1    2.89100,  2.94700,  2.79700,  2.83000,  2.87200,  2.84900,    
     2    2.84400,  2.87300,  2.80600,  2.75300,  2.74300,  2.78600,    
     3    2.81700,  2.80300,  2.74500,  2.67200,  2.63700,  2.60200,    
     4    2.58900,  2.55300,  2.56000,  2.58400,  2.58700,  2.57000,    
     5    2.55200,  2.52100,  2.55400,  2.55400,  2.55900,  2.55800,    
     6    2.50400,  2.46800,  2.54300,  2.59300,  2.54700,  2.48300,    
     7    2.45200,  2.46400,  2.50300,  2.58500/                        
      DATA (CRSNO2(I),I= 4001, 4100)/                                   
     1    2.58300,  2.52200,  2.52500,  2.58100,  2.62800,  2.62800,    
     2    2.65300,  2.67000,  2.72900,  2.79000,  2.80500,  2.76900,    
     3    2.76200,  2.83000,  2.81000,  2.77500,  2.74100,  2.74700,    
     4    2.80300,  2.83100,  2.81400,  2.77900,  2.77000,  2.75800,    
     5    2.74700,  2.75100,  2.75700,  2.71100,  2.72900,  2.70900,    
     6    2.65700,  2.63500,  2.69300,  2.74400,  2.71200,  2.72500,    
     7    2.66200,  2.66900,  2.71000,  2.63500,  2.61400,  2.68200,    
     8    2.59700,  2.54700,  2.52200,  2.51700,  2.57600,  2.53000,    
     9    2.49200,  2.51000,  2.48600,  2.45300,  2.45900,  2.41900,    
     &    2.39000,  2.42500,  2.40900,  2.38500,  2.35900,  2.29400,    
     1    2.28600,  2.32900,  2.36100,  2.36100,  2.36200,  2.37900,    
     2    2.30500,  2.29600,  2.27300,  2.29200,  2.35100,  2.39300,    
     3    2.31100,  2.29500,  2.34500,  2.37900,  2.37200,  2.34300,    
     4    2.33300,  2.36100,  2.34600,  2.33300,  2.28700,  2.24900,    
     5    2.27100,  2.31200,  2.23800,  2.23400,  2.28000,  2.28900,    
     6    2.22600,  2.18700,  2.23600,  2.18200,  2.17900,  2.20200,    
     7    2.21800,  2.21100,  2.21600,  2.21500/                        
      DATA (CRSNO2(I),I= 4101, 4200)/                                   
     1    2.19700,  2.18700,  2.19300,  2.19600,  2.14500,  2.11700,    
     2    2.10400,  2.10300,  2.10800,  2.09900,  2.06300,  2.12400,    
     3    2.11000,  2.07500,  2.03900,  1.99000,  2.08500,  2.12300,    
     4    2.11100,  2.06400,  2.02900,  2.11000,  2.13900,  2.09100,    
     5    2.07000,  2.05100,  2.01700,  1.99500,  2.04400,  2.06500,    
     6    1.98300,  1.94800,  2.04000,  2.05800,  2.04100,  1.98400,    
     7    1.98000,  2.01200,  2.04000,  2.02500,  1.98100,  1.96400,    
     8    1.95700,  1.94300,  1.91000,  1.91900,  1.97200,  1.94000,    
     9    1.93400,  1.99000,  2.05100,  2.04500,  2.02400,  1.98400,    
     &    1.96600,  1.99100,  1.97500,  2.02200,  2.05300,  2.04800,    
     1    2.02600,  2.03200,  2.08300,  2.10000,  2.10700,  2.12500,    
     2    2.14300,  2.09700,  2.06900,  2.02700,  2.03900,  2.07400,    
     3    2.07900,  2.08300,  2.12200,  2.13200,  2.13300,  2.12400,    
     4    2.06300,  1.99200,  1.99100,  2.01200,  2.04200,  2.06500,    
     5    2.02300,  2.02800,  2.02600,  2.00800,  1.98100,  1.99200,    
     6    1.93700,  2.00000,  2.03600,  2.01200,  1.94800,  1.95200,    
     7    1.93700,  1.88500,  1.84800,  1.88100/                        
      DATA (CRSNO2(I),I= 4201, 4300)/                                   
     1    1.92600,  1.94300,  1.96200,  1.97500,  1.96700,  1.89900,    
     2    1.83900,  1.82700,  1.85900,  1.90800,  1.91400,  1.81200,    
     3    1.83000,  1.88900,  1.93100,  1.88600,  1.79900,  1.81400,    
     4    1.84000,  1.85000,  1.83100,  1.83000,  1.85900,  1.83000,    
     5    1.81000,  1.83300,  1.84600,  1.81900,  1.81100,  1.79300,    
     6    1.75400,  1.70800,  1.79400,  1.75400,  1.66900,  1.59700,    
     7    1.65000,  1.66900,  1.67000,  1.66000,  1.64700,  1.65000,    
     8    1.60300,  1.62100,  1.65900,  1.69600,  1.69700,  1.61900,    
     9    1.56500,  1.55000,  1.56300,  1.58300,  1.55300,  1.51200,    
     &    1.51000,  1.52700,  1.51300,  1.46900,  1.50800,  1.53300,    
     1    1.52600,  1.47900,  1.49100,  1.52200,  1.54800,  1.56100,    
     2    1.54800,  1.51200,  1.53400,  1.55000,  1.55100,  1.54900,    
     3    1.57900,  1.58400,  1.58000,  1.58000,  1.61100,  1.59800,    
     4    1.60600,  1.60600,  1.59400,  1.63400,  1.65800,  1.63900,    
     5    1.61200,  1.60900,  1.69800,  1.62300,  1.62300,  1.65300,    
     6    1.65500,  1.64800,  1.64500,  1.64200,  1.63200,  1.59800,    
     7    1.61900,  1.61100,  1.59100,  1.57700/                        
      DATA (CRSNO2(I),I= 4301, 4400)/                                   
     1    1.61100,  1.58500,  1.55000,  1.54500,  1.58100,  1.56000,    
     2    1.57400,  1.58100,  1.59000,  1.60600,  1.58000,  1.53000,    
     3    1.51300,  1.50700,  1.44800,  1.45900,  1.50000,  1.56400,    
     4    1.63200,  1.57600,  1.51000,  1.48100,  1.49100,  1.54900,    
     5    1.50400,  1.52800,  1.53100,  1.51700,  1.51400,  1.53200,    
     6    1.53300,  1.54300,  1.57700,  1.62000,  1.61000,  1.60300,    
     7    1.59800,  1.58600,  1.54500,  1.51200,  1.51800,  1.55900,    
     8    1.54400,  1.54600,  1.50800,  1.46100,  1.43800,  1.47500,    
     9    1.49300,  1.49300,  1.48900,  1.54300,  1.48700,  1.47500,    
     &    1.46400,  1.41400,  1.41000,  1.41900,  1.41200,  1.39200,    
     1    1.40800,  1.37400,  1.36100,  1.36300,  1.38200,  1.37600,    
     2    1.33400,  1.31700,  1.32700,  1.27000,  1.28600,  1.30000,    
     3    1.31300,  1.33500,  1.33200,  1.34200,  1.34000,  1.31900,    
     4    1.35700,  1.35000,  1.34600,  1.34500,  1.33400,  1.37900,    
     5    1.37300,  1.35400,  1.34100,  1.30000,  1.30800,  1.31000,    
     6    1.29300,  1.27600,  1.30400,  1.30600,  1.28200,  1.21900,    
     7    1.22700,  1.24000,  1.25000,  1.24500/                        
      DATA (CRSNO2(I),I= 4401, 4500)/                                   
     1    1.23400,  1.28300,  1.28400,  1.21400,  1.25100,  1.26500,    
     2    1.25100,  1.21800,  1.20300,  1.24600,  1.25100,  1.22900,    
     3    1.17500,  1.26600,  1.24800,  1.22600,  1.24900,  1.26300,    
     4    1.22900,  1.19300,  1.16900,  1.21900,  1.22500,  1.21500,    
     5    1.19500,  1.18200,  1.24700,  1.23000,  1.18200,  1.17100,    
     6    1.17800,  1.16800,  1.15900,  1.16500,  1.13500,  1.18800,    
     7    1.23800,  1.25200,  1.23700,  1.24100,  1.25600,  1.27400,    
     8    1.19600,  1.21500,  1.22300,  1.21500,  1.22800,  1.20900,    
     9    1.20800,  1.21700,  1.19000,  1.15300,  1.15700,  1.17700,    
     &    1.16500,  1.16500,  1.17500,  1.19500,  1.23700,  1.20900,    
     1    1.18600,  1.16700,  1.15500,  1.19900,  1.23900,  1.25300,    
     2    1.20000,  1.20700,  1.20400,  1.20000,  1.19900,  1.23900,    
     3    1.23200,  1.22700,  1.25300,  1.26000,  1.25300,  1.23300,    
     4    1.18500,  1.13300,  1.13300,  1.15100,  1.18300,  1.16000,    
     5    1.14700,  1.13700,  1.13000,  1.15800,  1.13500,  1.11800,    
     6    1.13200,  1.16000,  1.13400,  1.11200,  1.11600,  1.09000,    
     7    1.07400,  1.06100,  1.05000,  1.08400/                        
      DATA (CRSNO2(I),I= 4501, 4600)/                                   
     1    1.11800,  1.12200,  1.05400,  1.16500,  1.20000,  1.19300,    
     2    1.13000,  1.10700,  1.09200,  1.08500,  1.09700,  1.03200,    
     3    1.02700,  1.05100,  1.09800,  1.08200,  1.04800,  1.02400,    
     4    1.10300,  1.07800,  1.04200,  1.00600,  1.03300,  1.06400,    
     5    1.06500,  1.03700,   .98490,   .96690,   .97230,  1.00200,    
     6    1.02400,   .99250,   .97660,   .99780,   .98900,   .95400,    
     7     .92220,   .90730,   .91620,   .89230,   .86550,   .86830,    
     8     .86310,   .90250,   .96050,   .97740,   .96140,   .95290,    
     9     .95610,  1.01600,   .96880,   .94340,   .95530,   .97530,    
     &     .92910,   .89910,   .92590,   .95420,   .99520,  1.02400,    
     1     .98670,   .89400,   .89000,   .93240,   .97310,   .99850,    
     2     .98700,   .93590,   .88350,   .92440,   .95250,   .93540,    
     3     .93050,   .93200,   .93420,   .93250,   .90090,   .92370,    
     4     .97990,  1.02000,  1.02100,  1.00800,   .97750,   .92290,    
     5     .87810,   .86800,   .94530,   .93200,   .93280,   .94930,    
     6    1.01800,  1.02200,  1.00800,   .97720,   .95520,   .96610,    
     7     .97460,   .96740,   .96270,   .94330/                        
      DATA (CRSNO2(I),I= 4601, 4700)/                                   
     1     .92120,   .92510,   .98710,  1.00700,   .98990,   .98040,    
     2     .96750,   .94980,   .91820,   .99330,  1.00800,   .99360,    
     3     .94910,   .97370,   .96810,   .91690,   .88190,   .90330,    
     4     .93820,   .98320,   .96250,   .93220,   .89260,   .87850,    
     5     .86130,   .85960,   .88790,   .88650,   .87850,   .87320,    
     6     .90180,   .87030,   .84960,   .84070,   .86690,   .84080,    
     7     .80240,   .75940,   .77760,   .79290,   .80790,   .81080,    
     8     .86720,   .89960,   .84620,   .82080,   .82180,   .83880,    
     9     .86650,   .83970,   .80550,   .75680,   .75400,   .77680,    
     &     .81140,   .81350,   .77890,   .76630,   .79880,   .84180,    
     1     .85610,   .86120,   .86730,   .83890,   .81240,   .78340,    
     2     .77660,   .77480,   .77480,   .77660,   .75370,   .74710,    
     3     .77280,   .78030,   .80180,   .82540,   .78070,   .76650,    
     4     .74670,   .69800,   .70040,   .69850,   .69680,   .72920,    
     5     .70950,   .70040,   .73680,   .72260,   .70660,   .69130,    
     6     .76380,   .76040,   .75080,   .76700,   .73170,   .73220,    
     7     .76820,   .74570,   .71200,   .68120/                        
      DATA (CRSNO2(I),I= 4701, 4800)/                                   
     1     .69490,   .68370,   .68780,   .72220,   .74230,   .73940,    
     2     .72470,   .69800,   .72100,   .74720,   .77420,   .70720,    
     3     .71170,   .77450,   .76300,   .76600,   .76550,   .72420,    
     4     .70450,   .71190,   .76580,   .76320,   .77140,   .78680,    
     5     .79230,   .77330,   .75930,   .77630,   .81030,   .81250,    
     6     .77760,   .77400,   .74280,   .69910,   .69570,   .72110,    
     7     .73730,   .71890,   .74420,   .74650,   .72250,   .67430,    
     8     .67680,   .69850,   .73060,   .74630,   .75190,   .73350,    
     9     .67680,   .66520,   .69870,   .70110,   .72240,   .75700,    
     &     .79920,   .73190,   .66070,   .61570,   .65030,   .68440,    
     1     .73210,   .73350,   .72820,   .71990,   .74190,   .72470,    
     2     .69770,   .66350,   .65720,   .66990,   .72980,   .70250,    
     3     .68300,   .66400,   .68160,   .70710,   .74070,   .76680,    
     4     .73370,   .69730,   .68140,   .76250,   .80090,   .76690,    
     5     .70890,   .70150,   .73050,   .69860,   .68220,   .67040,    
     6     .68770,   .71600,   .73710,   .71440,   .68930,   .67670,    
     7     .68500,   .66960,   .67630,   .70900/                        
      DATA (CRSNO2(I),I= 4801, 4900)/                                   
     1     .64460,   .62380,   .61710,   .60540,   .60600,   .61180,    
     2     .63530,   .64150,   .65460,   .70910,   .68390,   .65730,    
     3     .61700,   .57200,   .57340,   .61840,   .60830,   .61940,    
     4     .64370,   .64210,   .64840,   .65400,   .62990,   .64510,    
     5     .65670,   .62690,   .63150,   .62380,   .57740,   .53770,    
     6     .53890,   .59850,   .61190,   .63330,   .67370,   .66730,    
     7     .64270,   .60620,   .66230,   .64350,   .60590,   .61520,    
     8     .60540,   .59260,   .57930,   .60610,   .63300,   .66210,    
     9     .63790,   .62300,   .62550,   .65030,   .65130,   .61660,    
     &     .58040,   .56890,   .57290,   .58080,   .56500,   .53260,    
     1     .64670,   .65670,   .62700,   .58000,   .57600,   .58180,    
     2     .58330,   .58560,   .59070,   .61610,   .62100,   .62190,    
     3     .61460,   .59320,   .57820,   .58530,   .60970,   .62750,    
     4     .63750,   .58540,   .56030,   .57780,   .63680,   .65100,    
     5     .60200,   .57380,   .57860,   .62240,   .62940,   .61480,    
     6     .56900,   .57100,   .57960,   .59960,   .64510,   .64900,    
     7     .62850,   .62400,   .60220,   .56220/                        
      DATA (CRSNO2(I),I= 4901, 5000)/                                   
     1     .58020,   .57910,   .56720,   .52100,   .52320,   .54510,    
     2     .56940,   .57380,   .57220,   .56280,   .55220,   .53910,    
     3     .54000,   .54120,   .54200,   .53420,   .53850,   .54310,    
     4     .50490,   .54910,   .61460,   .61020,   .59810,   .57960,    
     5     .54740,   .55700,   .57370,   .55270,   .52680,   .50120,    
     6     .51740,   .53310,   .55580,   .62890,   .65790,   .67260,    
     7     .57200,   .59310,   .64300,   .64320,   .67180,   .70630,    
     8     .63510,   .58160,   .52490,   .56590,   .56620,   .55800,    
     9     .60910,   .62670,   .63530,   .57030,   .53220,   .49330,    
     &     .56430,   .57350,   .55910,   .56580,   .55660,   .53200,    
     1     .49220,   .49290,   .51910,   .53960,   .54110,   .52740,    
     2     .51440,   .50790,   .50210,   .52560,   .53910,   .55210,    
     3     .54490,   .53540,   .51190,   .53990,   .55730,   .56400,    
     4     .50520,   .46700,   .46550,   .50870,   .53590,   .49770,    
     5     .51920,   .53650,   .49420,   .52870,   .57520,   .61620,    
     6     .59660,   .56270,   .56070,   .56070,   .56150,   .56380,    
     7     .58790,   .63460,   .61220,   .59580/                        
      DATA (CRSNO2(I),I= 5001, 5100)/                                   
     1     .57120,   .58170,   .56440,   .49670,   .50090,   .50900,    
     2     .53090,   .55020,   .57040,   .62010,   .59170,   .56260,    
     3     .53060,   .53830,   .55270,   .57760,   .57440,   .56720,    
     4     .59410,   .59360,   .58220,   .53360,   .50510,   .46840,    
     5     .51270,   .54130,   .58130,   .53010,   .49940,   .47790,    
     6     .46300,   .45660,   .47390,   .49570,   .51900,   .55560,    
     7     .53590,   .50220,   .46280,   .48230,   .53540,   .53440,    
     8     .51260,   .45380,   .47780,   .49170,   .50380,   .49220,    
     9     .48940,   .51870,   .49850,   .47990,   .50290,   .49330,    
     &     .47930,   .52410,   .52060,   .49170,   .46990,   .47920,    
     1     .53010,   .51420,   .50250,   .48790,   .51280,   .53290,    
     2     .53340,   .52410,   .51480,   .54390,   .55670,   .56930,    
     3     .53650,   .51500,   .48260,   .51480,   .52960,   .52500,    
     4     .54900,   .56080,   .49930,   .46000,   .42270,   .48660,    
     5     .50600,   .51770,   .51460,   .51750,   .53170,   .51050,    
     6     .49830,   .50220,   .46840,   .43250,   .39100,   .40650,    
     7     .44530,   .45530,   .46720,   .49340/                        
      DATA (CRSNO2(I),I= 5101, 5200)/                                   
     1     .49220,   .49210,   .49600,   .52800,   .55250,   .51870,    
     2     .49520,   .46670,   .47260,   .48740,   .52350,   .51330,    
     3     .49670,   .44180,   .49480,   .54020,   .52760,   .52270,    
     4     .51780,   .51900,   .52160,   .52820,   .49780,   .47340,    
     5     .42660,   .46650,   .50920,   .51090,   .46930,   .39670,    
     6     .48340,   .51590,   .52810,   .54130,   .54620,   .52280,    
     7     .49080,   .46120,   .51560,   .51780,   .49370,   .50610,    
     8     .51560,   .53360,   .53030,   .52580,   .52030,   .53740,    
     9     .56750,   .57990,   .59330,   .62630,   .60940,   .59290,    
     &     .56790,   .57800,   .59410,   .57300,   .55800,   .53480,    
     1     .55490,   .56180,   .53560,   .55080,   .57150,   .57220,    
     2     .59070,   .63660,   .64630,   .65960,   .70810,   .69270,    
     3     .67310,   .66590,   .65630,   .63750,   .63300,   .64940,    
     4     .72750,   .76310,   .79610,   .83880,   .83480,   .80690,    
     5     .79830,   .79880,   .82020,   .87200,   .92760,   .99490,    
     6    1.01200,  1.02000,  1.04500,  1.07900,  1.20000,  1.28800,    
     7    1.37200,  1.41000,  1.43400,  1.47700/                        
      DATA (CRSNO2(I),I= 5201, 5300)/                                   
     1    1.54800,  1.59000,  1.62900,  1.65500,  1.68400,  1.75000,    
     2    1.76100,  1.73900,  1.55500,  1.39900,  1.08000,   .92560,    
     3     .74300,   .61100,   .55540,   .51030,   .50030,   .49290,    
     4     .48540,   .48210,   .47830,   .48260,   .47960,   .45760,    
     5     .43630,   .41440,   .41510,   .42330,   .44380,   .43170,    
     6     .42160,   .40470,   .40450,   .40810,   .41070,   .41770,    
     7     .44000,   .45610,   .47110,   .48360,   .49490,   .51480,    
     8     .54020,   .55060,   .52920,   .50980,   .48320,   .47270,    
     9     .47480,   .49580,   .51770,   .53820,   .55350,   .54580,    
     &     .51640,   .52320,   .52660,   .51800,   .50390,   .48390,    
     1     .53610,   .55950,   .57290,   .56420,   .55390,   .55340,    
     2     .55910,   .57600,   .57570,   .57120,   .52870,   .52120,    
     3     .52290,   .57090,   .59850,   .61920,   .63120,   .64550,    
     4     .65140,   .64720,   .61610,   .62840,   .64650,   .69570,    
     5     .71940,   .75050,   .75010,   .74670,   .71930,   .71460,    
     6     .71800,   .76240,   .79620,   .84100,   .85260,   .86400,    
     7     .89720,   .92090,   .97370,  1.01700/                        
      DATA (CRSNO2(I),I= 5301, 5400)/                                   
     1    1.07600,  1.12400,  1.15200,  1.20100,  1.23900,  1.28100,    
     2    1.33200,  1.35700,  1.38700,  1.43600,  1.48300,  1.46600,    
     3    1.43100,  1.31800,  1.18000,  1.05700,   .92400,   .86230,    
     4     .77740,   .74840,   .72720,   .70660,   .71140,   .73350,    
     5     .75160,   .76160,   .74990,   .75960,   .78540,   .81700,    
     6     .84320,   .89140,   .90990,   .93350,   .97580,  1.00800,    
     7    1.08000,  1.13200,  1.21500,  1.27500,  1.31700,  1.38200,    
     8    1.42500,  1.49000,  1.55900,  1.60200,  1.63400,  1.65000,    
     9    1.67300,  1.67300,  1.66100,  1.58600,  1.52000,  1.40200,    
     &    1.32000,  1.25900,  1.14900,  1.09400,  1.01600,   .97670,    
     1     .94890,   .90910,   .89660,   .88250,   .89020,   .89420,    
     2     .88850,   .89270,   .90380,   .87780,   .85910,   .85150,    
     3     .86740,   .91290,   .95490,   .98670,   .99330,  1.02300,    
     4    1.11400,  1.13300,  1.14300,  1.08400,  1.06800,  1.06600,    
     5    1.11700,  1.17100,  1.23800,  1.27200,  1.32300,  1.33300,    
     6    1.34500,  1.41000,  1.44700,  1.50400,  1.55700,  1.63100,    
     7    1.69000,  1.72300,  1.75400,  1.80700/                        
      DATA (CRSNO2(I),I= 5401, 5500)/                                   
     1    1.90500,  1.91800,  1.93400,  1.99900,  2.02000,  2.04800,    
     2    2.06100,  2.07000,  2.06400,  2.05100,  2.01600,  2.05600,    
     3    2.10000,  2.09900,  2.11500,  2.18100,  2.25300,  2.35300,    
     4    2.42600,  2.47800,  2.62900,  2.70300,  2.81200,  2.93600,    
     5    3.03800,  3.21500,  3.32700,  3.53800,  3.62900,  3.72200,    
     6    3.87000,  3.95400,  4.11000,  4.18500,  4.27300,  4.31900,    
     7    4.32400,  4.23200,  4.16200,  4.03900,  3.86100,  3.71100,    
     8    3.42200,  3.24200,  2.87700,  2.64900,  2.39900,  2.06600,    
     9    1.89100,  1.62400,  1.49600,  1.31800,  1.24400,  1.19100,    
     &    1.10800,  1.06000,   .96860,   .96790,   .96930,   .95080,    
     1     .93920,   .91410,   .89350,   .86480,   .89460,   .91140,    
     2     .91330,   .92240,   .94640,   .94770,   .95030,  1.01500,    
     3    1.03600,  1.03200,  1.02300,  1.00700,  1.00700,  1.01500,    
     4    1.07400,  1.05900,   .97830,  1.01600,  1.06500,  1.08800,    
     5    1.10900,  1.17400,  1.18700,  1.19700,  1.20200,  1.20600,    
     6    1.21600,  1.23000,  1.27600,  1.28300,  1.29200,  1.34100,    
     7    1.38000,  1.48100,  1.50800,  1.53000/                        
      DATA (CRSNO2(I),I= 5501, 5600)/                                   
     1    1.53000,  1.53000,  1.55200,  1.57100,  1.62500,  1.62400,    
     2    1.60500,  1.66900,  1.72400,  1.74400,  1.76400,  1.82700,    
     3    1.86100,  1.91300,  2.01200,  2.08000,  2.13000,  2.16100,    
     4    2.22800,  2.28300,  2.35600,  2.36600,  2.38400,  2.47700,    
     5    2.53500,  2.66000,  2.72200,  2.79500,  2.88400,  2.94000,    
     6    3.04500,  3.11000,  3.24000,  3.30500,  3.37400,  3.43300,    
     7    3.46500,  3.51900,  3.53900,  3.56700,  3.50500,  3.44000,    
     8    3.45000,  3.42600,  3.26200,  3.17300,  3.01000,  2.89700,    
     9    2.77900,  2.62400,  2.53700,  2.37800,  2.34100,  2.30700,    
     &    2.25500,  2.20200,  2.16400,  2.15300,  2.18000,  2.18800,    
     1    2.19900,  2.27100,  2.35100,  2.38300,  2.41800,  2.56000,    
     2    2.59800,  2.63800,  2.70300,  2.78400,  2.87500,  2.93000,    
     3    3.01300,  3.06900,  3.19600,  3.25800,  3.34000,  3.46300,    
     4    3.55100,  3.71500,  3.77500,  3.85800,  3.93500,  4.05500,    
     5    4.02000,  4.00200,  4.07200,  4.12300,  4.26700,  4.30400,    
     6    4.35000,  4.40900,  4.47200,  4.63200,  4.69500,  4.70700,    
     7    4.72800,  4.78200,  4.81400,  4.84800/                        
      DATA (CRSNO2(I),I= 5601, 5700)/                                   
     1    4.78800,  4.75300,  4.71600,  4.71600,  4.74300,  4.68600,    
     2    4.58400,  4.56300,  4.54600,  4.51000,  4.48300,  4.40000,    
     3    4.36500,  4.30300,  4.24300,  4.17900,  4.16600,  4.15800,    
     4    4.14600,  4.11300,  4.00500,  3.97700,  3.94300,  3.90700,    
     5    3.88300,  3.91200,  3.92900,  3.97400,  4.00000,  4.05200,    
     6    4.03800,  4.02000,  4.07500,  4.10400,  4.09600,  4.09400,    
     7    4.09200,  4.09600,  4.10300,  4.08000,  4.05800,  4.04700,    
     8    4.03500,  3.97700,  3.92600,  3.78600,  3.72600,  3.63900,    
     9    3.62200,  3.60800,  3.59000,  3.58100,  3.57000,  3.58700,    
     &    3.64600,  3.71300,  3.81400,  3.87800,  3.92500,  3.96200,    
     1    4.00400,  4.18200,  4.27500,  4.46600,  4.51200,  4.56900,    
     2    4.69400,  4.79000,  4.92800,  5.00700,  5.19800,  5.27400,    
     3    5.41200,  5.46700,  5.53900,  5.55800,  5.57100,  5.56600,    
     4    5.54500,  5.42600,  5.37100,  5.26100,  5.19200,  5.08800,    
     5    4.96300,  4.85200,  4.63800,  4.53200,  4.37600,  4.29600,    
     6    4.11800,  4.05200,  3.95100,  3.84200,  3.73000,  3.51100,    
     7    3.39300,  3.25800,  3.21600,  3.17400/                        
      DATA (CRSNO2(I),I= 5701, 5800)/                                   
     1    3.14400,  3.08300,  3.01700,  2.94000,  2.96400,  2.97800,    
     2    2.96400,  2.96200,  2.97700,  2.97800,  2.97300,  2.97700,    
     3    2.98200,  2.97300,  2.96900,  3.04900,  3.08900,  3.13800,    
     4    3.16000,  3.20700,  3.20800,  3.20100,  3.24100,  3.29400,    
     5    3.36100,  3.40500,  3.41600,  3.42700,  3.47500,  3.50600,    
     6    3.58600,  3.61100,  3.65000,  3.65400,  3.66000,  3.69500,    
     7    3.72400,  3.83000,  3.88100,  3.98400,  4.01200,  4.05100,    
     8    4.08500,  4.14900,  4.28200,  4.42200,  4.53100,  4.60000,    
     9    4.70400,  4.76300,  4.92400,  4.98400,  5.10000,  5.19500,    
     &    5.36500,  5.46600,  5.57700,  5.69700,  5.78000,  5.92400,    
     1    5.99300,  6.13000,  6.19900,  6.36500,  6.45400,  6.61800,    
     2    6.70600,  6.81100,  6.86000,  6.90200,  7.02400,  7.09200,    
     3    7.25000,  7.29700,  7.35000,  7.37300,  7.41900,  7.43200,    
     4    7.45100,  7.46600,  7.47900,  7.45700,  7.44000,  7.37300,    
     5    7.34700,  7.31000,  7.29600,  7.26800,  7.24200,  7.18800,    
     6    7.14700,  7.09400,  7.08700,  7.07900,  7.03200,  7.00900,    
     7    6.99300,  6.99200,  7.01100,  7.01600/                        
      DATA (CRSNO2(I),I= 5801, 5900)/                                   
     1    7.02200,  7.03500,  7.06300,  7.10800,  7.16700,  7.19200,    
     2    7.21400,  7.28100,  7.31600,  7.35800,  7.38600,  7.47600,    
     3    7.51200,  7.58800,  7.60700,  7.63700,  7.69500,  7.78100,    
     4    7.82700,  7.86800,  7.89700,  7.91500,  7.94100,  7.95600,    
     5    7.99400,  8.02800,  8.14400,  8.17300,  8.21700,  8.22400,    
     6    8.23300,  8.24100,  8.25000,  8.25000,  8.25200,  8.28900,    
     7    8.30300,  8.27200,  8.26300,  8.26100,  8.24600,  8.19100,    
     8    8.16500,  8.11000,  8.06300,  7.98500,  7.93700,  7.88100,    
     9    7.81200,  7.75900,  7.69200,  7.65800,  7.61800,  7.59900,    
     &    7.55000,  7.52900,  7.48100,  7.45100,  7.38100,  7.35900,    
     1    7.32400,  7.31200,  7.29500,  7.24400,  7.19800,  7.12500,    
     2    7.07900,  6.99300,  6.95300,  6.87700,  6.84600,  6.78000,    
     3    6.74800,  6.66800,  6.64300,  6.59500,  6.55100,  6.47500,    
     4    6.42200,  6.35600,  6.29700,  6.24300,  6.14800,  6.09000,    
     5    6.03100,  6.01200,  6.04100,  6.04200,  6.00000,  5.97800,    
     6    5.91800,  5.90300,  5.88200,  5.90100,  5.94500,  5.99500,    
     7    6.06900,  6.11600,  6.16500,  6.19600/                        
      DATA (CRSNO2(I),I= 5901, 6000)/                                   
     1    6.22100,  6.26800,  6.29700,  6.37000,  6.40800,  6.51300,    
     2    6.55400,  6.64000,  6.67000,  6.73000,  6.75300,  6.80200,    
     3    6.84600,  6.93600,  6.99200,  7.07900,  7.13100,  7.19500,    
     4    7.28600,  7.36400,  7.43100,  7.47300,  7.49900,  7.51300,    
     5    7.55100,  7.57400,  7.65500,  7.69300,  7.79400,  7.81700,    
     6    7.84100,  7.84300,  7.84100,  7.85400,  7.88700,  7.91000,    
     7    7.95100,  7.97100,  7.99700,  7.98800,  7.98000,  7.97600,    
     8    7.97400,  7.99400,  8.00500,  8.01200,  8.01200,  7.98200,    
     9    7.97300,  7.98100,  7.98600,  8.00800,  8.00200,  7.95700,    
     &    7.94200,  7.90900,  7.88000,  7.81000,  7.77700,  7.71700,    
     1    7.71500,  7.71600,  7.72000,  7.72600,  7.75600,  7.78600,    
     2    7.82100,  7.85100,  7.91100,  7.95300,  8.05300,  8.10900,    
     3    8.21700,  8.27200,  8.40900,  8.46700,  8.59100,  8.63900,    
     4    8.74800,  8.80100,  8.95300,  9.02200,  9.20000,  9.27000,    
     5    9.42700,  9.48000,  9.58500,  9.64100,  9.74500,  9.84200,    
     6    9.99900, 10.14000, 10.32000, 10.45000, 10.59000, 10.72000,    
     7   10.84000, 10.97000, 11.07000, 11.24000/                        
      DATA (CRSNO2(I),I= 6001, 6100)/                                   
     1   11.35000, 11.53000, 11.62000, 11.76000, 11.82000, 11.94000,    
     2   11.99000, 12.11000, 12.16000, 12.26000, 12.29000, 12.35000,    
     3   12.37000, 12.42000, 12.44000, 12.48000, 12.50000, 12.56000,    
     4   12.57000, 12.62000, 12.62000, 12.63000, 12.62000, 12.57000,    
     5   12.53000, 12.46000, 12.39000, 12.28000, 12.19000, 12.06000,    
     6   11.97000, 11.85000, 11.74000, 11.62000, 11.46000, 11.32000,    
     7   11.16000, 11.03000, 10.88000, 10.77000, 10.61000, 10.52000,    
     8   10.39000, 10.32000, 10.22000, 10.16000, 10.06000, 10.00000,    
     9    9.83200,  9.75400,  9.60000,  9.53600,  9.41600,  9.36900,    
     &    9.27600,  9.24400,  9.18300,  9.15900,  9.09600,  9.07300,    
     1    9.01500,  8.99100,  8.92700,  8.90600,  8.85600,  8.84500,    
     2    8.83000,  8.83600,  8.86600,  8.87400,  8.89100,  8.89200,    
     3    8.89100,  8.89700,  8.91400,  8.92200,  8.94400,  8.95300,    
     4    8.97400,  9.00100,  9.06800,  9.10500,  9.18200,  9.20300,    
     5    9.24000,  9.26000,  9.29900,  9.33300,  9.39600,  9.42300,    
     6    9.46900,  9.47600,  9.48500,  9.50500,  9.53800,  9.55900,    
     7    9.59100,  9.58400,  9.57300,  9.57100/                        
      DATA (CRSNO2(I),I= 6101, 6200)/                                   
     1    9.57000,  9.58800,  9.61400,  9.63100,  9.65500,  9.65400,    
     2    9.65300,  9.64500,  9.63500,  9.61100,  9.57900,  9.55000,    
     3    9.51500,  9.51200,  9.50900,  9.51200,  9.51600,  9.50300,    
     4    9.48800,  9.47400,  9.45700,  9.44600,  9.43300,  9.43500,    
     5    9.43700,  9.43300,  9.42900,  9.41400,  9.39800,  9.39700,    
     6    9.39600,  9.40500,  9.41600,  9.43000,  9.44700,  9.48700,    
     7    9.53700,  9.60000,  9.67800,  9.72200,  9.77600,  9.80300,    
     8    9.83800,  9.87200,  9.91900,  9.98300, 10.07000, 10.14000,    
     9   10.24000, 10.29000, 10.36000, 10.43000, 10.53000, 10.58000,    
     &   10.67000, 10.70000, 10.75000, 10.80000, 10.87000, 10.93000,    
     1   11.04000, 11.08000, 11.16000, 11.19000, 11.25000, 11.29000,    
     2   11.36000, 11.40000, 11.47000, 11.52000, 11.63000, 11.69000,    
     3   11.84000, 11.89000, 12.01000, 12.04000, 12.10000, 12.13000,    
     4   12.22000, 12.27000, 12.38000, 12.42000, 12.54000, 12.58000,    
     5   12.69000, 12.73000, 12.82000, 12.85000, 12.95000, 12.97000,    
     6   13.04000, 13.05000, 13.08000, 13.10000, 13.14000, 13.16000,    
     7   13.23000, 13.25000, 13.29000, 13.30000/                        
      DATA (CRSNO2(I),I= 6201, 6300)/                                   
     1   13.30000, 13.30000, 13.33000, 13.34000, 13.36000, 13.37000,    
     2   13.40000, 13.41000, 13.46000, 13.48000, 13.51000, 13.52000,    
     3   13.53000, 13.53000, 13.55000, 13.56000, 13.56000, 13.57000,    
     4   13.55000, 13.53000, 13.51000, 13.49000, 13.49000, 13.49000,    
     5   13.50000, 13.53000, 13.53000, 13.54000, 13.53000, 13.50000,    
     6   13.49000, 13.46000, 13.44000, 13.38000, 13.35000, 13.28000,    
     7   13.25000, 13.20000, 13.19000, 13.17000, 13.15000, 13.08000,    
     8   13.04000, 12.91000, 12.87000, 12.76000, 12.71000, 12.63000,    
     9   12.59000, 12.51000, 12.47000, 12.35000, 12.29000, 12.15000,    
     &   12.06000, 11.94000, 11.85000, 11.75000, 11.67000, 11.62000,    
     1   11.57000, 11.52000, 11.47000, 11.42000, 11.35000, 11.33000,    
     2   11.30000, 11.28000, 11.25000, 11.22000, 11.17000, 11.15000,    
     3   11.10000, 11.07000, 10.98000, 10.95000, 10.86000, 10.83000,    
     4   10.77000, 10.75000, 10.70000, 10.68000, 10.67000, 10.67000,    
     5   10.67000, 10.67000, 10.63000, 10.61000, 10.60000, 10.60000,    
     6   10.62000, 10.64000, 10.64000, 10.62000, 10.61000, 10.58000,    
     7   10.59000, 10.63000, 10.67000, 10.76000/                        
      DATA (CRSNO2(I),I= 6301, 6400)/                                   
     1   10.79000, 10.84000, 10.85000, 10.89000, 10.91000, 10.99000,    
     2   11.01000, 11.06000, 11.08000, 11.12000, 11.14000, 11.18000,    
     3   11.20000, 11.25000, 11.28000, 11.34000, 11.39000, 11.45000,    
     4   11.52000, 11.56000, 11.63000, 11.65000, 11.69000, 11.71000,    
     5   11.77000, 11.80000, 11.89000, 11.90000, 11.93000, 11.94000,    
     6   11.92000, 11.92000, 11.95000, 11.96000, 11.98000, 11.99000,    
     7   11.97000, 11.95000, 11.97000, 11.98000, 12.02000, 12.06000,    
     8   12.06000, 12.05000, 12.06000, 12.08000, 12.10000, 12.18000,    
     9   12.20000, 12.25000, 12.27000, 12.33000, 12.36000, 12.46000,    
     &   12.51000, 12.60000, 12.65000, 12.74000, 12.80000, 12.86000,    
     1   12.92000, 12.97000, 13.05000, 13.10000, 13.19000, 13.22000,    
     2   13.30000, 13.34000, 13.43000, 13.45000, 13.53000, 13.56000,    
     3   13.64000, 13.66000, 13.73000, 13.76000, 13.81000, 13.84000,    
     4   13.86000, 13.89000, 13.90000, 13.91000, 13.93000, 13.96000,    
     5   13.99000, 14.05000, 14.09000, 14.20000, 14.23000, 14.32000,    
     6   14.35000, 14.40000, 14.42000, 14.46000, 14.48000, 14.53000,    
     7   14.57000, 14.60000, 14.64000, 14.65000/                        
      DATA (CRSNO2(I),I= 6401, 6500)/                                   
     1   14.66000, 14.66000, 14.65000, 14.63000, 14.57000, 14.56000,    
     2   14.52000, 14.51000, 14.51000, 14.50000, 14.45000, 14.43000,    
     3   14.37000, 14.33000, 14.30000, 14.26000, 14.24000, 14.20000,    
     4   14.19000, 14.18000, 14.18000, 14.20000, 14.19000, 14.15000,    
     5   14.14000, 14.07000, 14.04000, 14.04000, 14.03000, 14.04000,    
     6   14.04000, 14.00000, 13.93000, 13.91000, 13.86000, 13.83000,    
     7   13.76000, 13.74000, 13.65000, 13.63000, 13.54000, 13.51000,    
     8   13.44000, 13.39000, 13.34000, 13.30000, 13.27000, 13.22000,    
     9   13.19000, 13.12000, 13.08000, 12.95000, 12.91000, 12.75000,    
     &   12.70000, 12.58000, 12.53000, 12.47000, 12.43000, 12.37000,    
     1   12.30000, 12.24000, 12.13000, 12.10000, 12.00000, 11.98000,    
     2   11.93000, 11.92000, 11.87000, 11.85000, 11.80000, 11.77000,    
     3   11.75000, 11.74000, 11.74000, 11.75000, 11.74000, 11.71000,    
     4   11.70000, 11.65000, 11.65000, 11.68000, 11.70000, 11.74000,    
     5   11.76000, 11.76000, 11.77000, 11.78000, 11.81000, 11.83000,    
     6   11.87000, 11.87000, 11.87000, 11.87000, 11.84000, 11.84000,    
     7   11.88000, 11.90000, 11.95000, 11.99000/                        
      DATA (CRSNO2(I),I= 6501, 6600)/                                   
     1   12.00000, 12.01000, 12.00000, 11.98000, 11.98000, 12.00000,    
     2   12.01000, 12.06000, 12.08000, 12.10000, 12.11000, 12.11000,    
     3   12.11000, 12.13000, 12.18000, 12.19000, 12.23000, 12.24000,    
     4   12.24000, 12.25000, 12.27000, 12.28000, 12.30000, 12.31000,    
     5   12.36000, 12.42000, 12.49000, 12.63000, 12.67000, 12.79000,    
     6   12.82000, 12.88000, 12.89000, 12.89000, 12.89000, 12.95000,    
     7   13.01000, 13.07000, 13.17000, 13.20000, 13.28000, 13.30000,    
     8   13.32000, 13.32000, 13.31000, 13.31000, 13.33000, 13.35000,    
     9   13.40000, 13.47000, 13.51000, 13.61000, 13.63000, 13.65000,    
     &   13.65000, 13.59000, 13.57000, 13.66000, 13.72000, 13.79000,    
     1   13.89000, 13.93000, 14.02000, 14.04000, 14.11000, 14.13000,    
     2   14.19000, 14.22000, 14.29000, 14.35000, 14.40000, 14.48000,    
     3   14.52000, 14.62000, 14.66000, 14.76000, 14.79000, 14.83000,    
     4   14.85000, 14.90000, 14.95000, 14.97000, 15.00000, 14.97000,    
     5   14.90000, 14.88000, 14.77000, 14.74000, 14.68000, 14.65000,    
     6   14.61000, 14.57000, 14.55000, 14.50000, 14.46000, 14.34000,    
     7   14.31000, 14.23000, 14.20000, 14.18000/                        
      DATA (CRSNO2(I),I= 6601, 6700)/                                   
     1   14.16000, 14.14000, 14.11000, 14.10000, 14.06000, 14.05000,    
     2   14.04000, 14.03000, 14.00000, 13.99000, 13.96000, 13.93000,    
     3   13.90000, 13.85000, 13.84000, 13.80000, 13.79000, 13.75000,    
     4   13.74000, 13.73000, 13.73000, 13.69000, 13.64000, 13.58000,    
     5   13.42000, 13.40000, 13.34000, 13.32000, 13.30000, 13.29000,    
     6   13.25000, 13.21000, 13.18000, 13.13000, 13.11000, 13.04000,    
     7   13.02000, 12.95000, 12.92000, 12.84000, 12.77000, 12.70000,    
     8   12.58000, 12.54000, 12.42000, 12.38000, 12.27000, 12.23000,    
     9   12.22000, 12.20000, 12.14000, 12.05000, 12.03000, 11.96000,    
     &   11.95000, 11.92000, 11.90000, 11.84000, 11.79000, 11.76000,    
     1   11.71000, 11.71000, 11.69000, 11.69000, 11.70000, 11.70000,    
     2   11.71000, 11.71000, 11.67000, 11.61000, 11.58000, 11.50000,    
     3   11.49000, 11.47000, 11.46000, 11.41000, 11.38000, 11.34000,    
     4   11.29000, 11.29000, 11.29000, 11.29000, 11.30000, 11.30000,    
     5   11.26000, 11.23000, 11.26000, 11.31000, 11.32000, 11.35000,    
     6   11.36000, 11.39000, 11.40000, 11.49000, 11.55000, 11.55000,    
     7   11.55000, 11.57000, 11.62000, 11.63000/                        
      DATA (CRSNO2(I),I= 6701, 6800)/                                   
     1   11.66000, 11.67000, 11.70000, 11.72000, 11.77000, 11.88000,    
     2   11.89000, 11.91000, 11.92000, 11.96000, 11.98000, 11.92000,    
     3   11.87000, 11.89000, 11.94000, 11.95000, 11.99000, 12.00000,    
     4   11.99000, 11.98000, 11.98000, 11.98000, 12.00000, 12.06000,    
     5   12.08000, 12.16000, 12.19000, 12.23000, 12.26000, 12.28000,    
     6   12.33000, 12.36000, 12.47000, 12.51000, 12.61000, 12.67000,    
     7   12.71000, 12.77000, 12.79000, 12.85000, 12.86000, 12.87000,    
     8   12.87000, 12.92000, 12.96000, 12.98000, 13.02000, 13.04000,    
     9   13.14000, 13.16000, 13.15000, 13.14000, 13.13000, 13.12000,    
     &   13.14000, 13.21000, 13.23000, 13.25000, 13.25000, 13.25000,    
     1   13.24000, 13.27000, 13.33000, 13.34000, 13.35000, 13.35000,    
     2   13.42000, 13.46000, 13.50000, 13.56000, 13.57000, 13.58000,    
     3   13.58000, 13.60000, 13.61000, 13.65000, 13.69000, 13.68000,    
     4   13.67000, 13.67000, 13.65000, 13.64000, 13.64000, 13.63000,    
     5   13.65000, 13.68000, 13.67000, 13.62000, 13.61000, 13.55000,    
     6   13.51000, 13.46000, 13.38000, 13.37000, 13.36000, 13.35000,    
     7   13.19000, 13.10000, 13.02000, 12.92000/                        
      DATA (CRSNO2(I),I= 6801, 6900)/                                   
     1   12.89000, 12.82000, 12.79000, 12.70000, 12.65000, 12.57000,    
     2   12.49000, 12.47000, 12.44000, 12.43000, 12.34000, 12.31000,    
     3   12.23000, 12.16000, 12.12000, 12.02000, 12.01000, 11.96000,    
     4   11.95000, 11.96000, 11.96000, 11.95000, 11.92000, 11.91000,    
     5   11.91000, 11.91000, 11.89000, 11.88000, 11.85000, 11.78000,    
     6   11.77000, 11.75000, 11.74000, 11.67000, 11.62000, 11.60000,    
     7   11.56000, 11.55000, 11.48000, 11.46000, 11.40000, 11.36000,    
     8   11.31000, 11.23000, 11.22000, 11.21000, 11.20000, 11.16000,    
     9   11.13000, 11.11000, 11.07000, 11.07000, 11.11000, 11.12000,    
     &   11.10000, 11.09000, 11.10000, 11.10000, 11.10000, 11.08000,    
     1   11.07000, 11.07000, 11.08000, 11.08000, 11.08000, 11.09000,    
     2   11.14000, 11.16000, 11.25000, 11.34000, 11.34000, 11.34000,    
     3   11.33000, 11.31000, 11.30000, 11.28000, 11.26000, 11.28000,    
     4   11.34000, 11.35000, 11.38000, 11.39000, 11.39000, 11.39000,    
     5   11.38000, 11.35000, 11.35000, 11.38000, 11.40000, 11.43000,    
     6   11.47000, 11.45000, 11.37000, 11.35000, 11.31000, 11.29000,    
     7   11.35000, 11.45000, 11.49000, 11.65000/                        
      DATA (CRSNO2(I),I= 6901, 7000)/                                   
     1   11.69000, 11.57000, 11.47000, 11.53000, 11.65000, 11.67000,    
     2   11.70000, 11.71000, 11.74000, 11.77000, 11.78000, 11.82000,    
     3   11.81000, 11.75000, 11.72000, 11.81000, 11.93000, 11.92000,    
     4   11.86000, 11.85000, 11.84000, 11.83000, 11.83000, 11.83000,    
     5   11.86000, 11.99000, 12.04000, 12.09000, 12.14000, 12.18000,    
     6   12.28000, 12.30000, 12.32000, 12.33000, 12.35000, 12.37000,    
     7   12.38000, 12.40000, 12.41000, 12.44000, 12.45000, 12.45000,    
     8   12.45000, 12.46000, 12.49000, 12.51000, 12.51000, 12.51000,    
     9   12.49000, 12.44000, 12.42000, 12.29000, 12.22000, 12.26000,    
     &   12.32000, 12.33000, 12.33000, 12.34000, 12.34000, 12.34000,    
     1   12.38000, 12.48000, 12.48000, 12.42000, 12.40000, 12.40000,    
     2   12.41000, 12.39000, 12.32000, 12.31000, 12.30000, 12.29000,    
     3   12.36000, 12.50000, 12.51000, 12.47000, 12.45000, 12.44000,    
     4   12.43000, 12.40000, 12.26000, 12.22000, 12.21000, 12.20000,    
     5   12.17000, 12.11000, 12.08000, 11.93000, 11.86000, 11.87000,    
     6   11.89000, 11.89000, 11.87000, 11.86000, 11.70000, 11.57000,    
     7   11.52000, 11.37000, 11.36000, 11.37000/                        
      DATA (CRSNO2(I),I= 7001, 7100)/                                   
     1   11.37000, 11.39000, 11.41000, 11.40000, 11.30000, 11.28000,    
     2   11.30000, 11.32000, 11.27000, 11.13000, 11.11000, 11.14000,    
     3   11.16000, 11.17000, 11.19000, 11.17000, 11.05000, 11.01000,    
     4   10.98000, 10.94000, 10.95000, 11.00000, 11.01000, 10.89000,    
     5   10.80000, 10.79000, 10.77000, 10.76000, 10.66000, 10.62000,    
     6   10.60000, 10.57000, 10.59000, 10.67000, 10.69000, 10.67000,    
     7   10.65000, 10.61000, 10.46000, 10.44000, 10.55000, 10.63000,    
     8   10.66000, 10.72000, 10.72000, 10.66000, 10.63000, 10.70000,    
     9   10.82000, 10.82000, 10.82000, 10.81000, 10.72000, 10.61000,    
     &   10.64000, 10.76000, 10.79000, 10.81000, 10.82000, 10.79000,    
     1   10.72000, 10.72000, 10.81000, 10.87000, 10.93000, 11.06000,    
     2   11.07000, 11.08000, 11.08000, 11.12000, 11.19000, 11.21000,    
     3   11.34000, 11.37000, 11.43000, 11.50000, 11.54000, 11.69000,    
     4   11.71000, 11.63000, 11.57000, 11.58000, 11.61000, 11.62000,    
     5   11.70000, 11.75000, 11.70000, 11.62000, 11.62000, 11.71000,    
     6   11.75000, 11.85000, 12.01000, 12.00000, 11.86000, 11.82000,    
     7   11.80000, 11.77000, 11.75000, 11.68000/                        
      DATA (CRSNO2(I),I= 7101, 7176)/                                   
     1   11.67000, 11.71000, 11.77000, 11.82000, 12.00000, 12.04000,    
     2   12.05000, 12.05000, 12.04000, 12.02000, 12.01000, 11.99000,    
     3   11.98000, 11.99000, 12.02000, 12.03000, 12.12000, 12.17000,    
     4   12.22000, 12.32000, 12.33000, 12.27000, 12.25000, 12.29000,    
     5   12.36000, 12.38000, 12.50000, 12.55000, 12.52000, 12.47000,    
     6   12.44000, 12.31000, 12.25000, 12.11000, 11.92000, 11.89000,    
     7   11.80000, 11.77000, 11.76000, 11.74000, 11.72000, 11.65000,    
     8   11.63000, 11.59000, 11.56000, 11.54000, 11.48000, 11.46000,    
     9   11.41000, 11.36000, 11.33000, 11.25000, 11.23000, 11.22000,    
     &   11.20000, 11.19000, 11.14000, 11.13000, 11.10000, 11.07000,    
     1   11.08000, 11.11000, 11.11000, 11.10000, 11.10000, 11.10000,    
     2   11.10000, 11.10000, 11.08000, 11.07000, 11.07000, 11.08000,    
     3   11.08000, 11.08000, 11.09000, 11.10000/                        
C                                                                       
      IF (V .LT. VBEG .OR. V .GT. VEND) THEN                            
         CROSS = 0.0                                                    
      ELSE IF (V .EQ. VEND) THEN                                        
C        THIS CHECK PREVENTS N FROM EXCEEDING NMAX IN THE ALGORITHM BELO
         CROSS = CRSNO2(NMAX)                                           
      ELSE                                                              
         XI = (V-VBEG)/VINCR+1.                                         
         N = XI+1.+1.E-6                                                
         XD = XI-N                                                      
         CROSS = CRSNO2(N)+XD*(CRSNO2(N)-CRSNO2(N-1))                   
      ENDIF                                                             
      RETURN                                                            
      END                                                               
      INTEGER FUNCTION NUNIT()                                          
C                                                                       
C     THIS INTEGER FUNCTION DETERMINES AN UNUSED                        
C     FILE UNIT NUMBER BETWEEN 10 AND 99.                               
C                                                                       
C     COMMON BLOCKS                                                     
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH                               
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                           
C                                                                       
C     LOCAL VARIABLES                                                   
      LOGICAL LOPEN                                                     
C                                                                       
C     FIND UNUSED UNIT NUMBER AND RETURN.                               
      DO 10 NUNIT=99,10,-1                                              
          INQUIRE(UNIT=NUNIT,OPENED=LOPEN)                              
          IF(.NOT.LOPEN)RETURN                                          
   10 CONTINUE                                                          
C                                                                       
C     NO FILE UNIT NUMBER AVAILABLE                                     
Calley      WRITE(IPR ,'(/A)')                                          
      IF (IPR .GT. 0) WRITE(IPR ,'(/A)')                                
     1  ' Error in routine NUNIT:  No file unit numbers available?'     
      STOP ' Error in routine NUNIT:  No file unit numbers available?'  
      END                                                               
      SUBROUTINE O2CONT(V,SIGMA,ALPHA,BETA)                             
C                                                                       
C     THIS ROUTINE IS DRIVEN BY FREQUENCY, RETURNING ONLY THE           
C     O2 COEFFICIENTS, INDEPENDENT OF TEMPERATURE.                      
C                                                                       
C  *******************************************************************  
C  *  THESE COMMENTS APPLY TO THE COLUME ARRAYS FOR:                 *  
C  *       PBAR*UBAR(O2)                                             *  
C  *       PBAR*UBAR(O2)*DT                                          *  
C  *   AND PBAR*UBAR(O2)*DT*DT    WHERE:  DT=TBAR-220.               *  
C  *  THAT HAVE BEEN COMPILED IN OTHER PARTS OF THE LOWTRAN CODE     *  
C  *                                                                 *  
C  *  LOWTRAN7 COMPATIBLE:                                           *  
C  *  O2 CONTINUUM SUBROUTINE FOR 1395-1760CM-1                      *  
C  *  MODIFIED BY G.P. ANDERSON, APRIL '88                           *  
C  *                                                                 *  
C  *  THE EXPONENTIAL TEMPERATURE EMPLOYED IN THE FASCOD2 ALGORITHM  *  
C  *  (SEE BELOW) IS NOT READILY SUITABLE FOR LOWTRAN.  THEREFORE    *  
C  *  THE EXPONENTIALS HAVE BEEN LINEARLY EXPANDED, KEEPING ONLY THE *  
C  *  LINEAR AND QUADRATIC TERMS:                                    *  
C  *                                                                 *  
C  *  EXP(A*DT)=1.+ A*DT + (A*DT)**2/2. + ....                       *  
C  *                                                                 *  
C  *     EXP(B*DT*DT)=1.+ B*DT*DT + (B*DT*DT)**2/2. + ....           *  
C  *                                                                 *  
C  *  THE PRODUCT OF THE TWO TERMS IS:                               *  
C  *                                                                 *  
C  *     (1. + A*DT + (A*A/2. + B)*DT*DT )                           *  
C  *                                                                 *  
C  *  THIS EXPANSION ONLY WORKS WELL FOR SMALL VALUES OF X IN EXP(X) *  
C  *                                                                 *  
C  *  SINCE DT = T-220., THE APPROXIMATION IS VERY GOOD UNTIL        *  
C  *  T.GT.260. OR DT.GT.40.   AT T=280, THE MAXIMUM ERRORS ARE STILL*  
C  *  LESS THAN 10% BUT AT T=300, THOSE ERRORS ARE AS LARGE AS 20%   *  
C  *******************************************************************  
C                                                                       
C     THE FOLLOWING COMMENTS ARE EXCERPTED DIRECTLY FROM FASCOD2        
C                                                                       
C      THIS SUBROUTINE CONTAINS THE ROGERS AND WALSHAW                  
C      EQUIVALENT COEFFICIENTS DERIVED FROM THE THEORETICAL             
C      VALUES SUPPLIED BY ROLAND DRAYSON. THESE VALUES USE              
C      THE SAME DATA AS TIMOFEYEV AND AGREE WITH TIMOFEYEV'S RESULTS.   
C      THE DATA ARE IN THE FORM OF STRENGTHS(O2SO) AND TWO              
C      COEFFICIENTS (O2A & O2B),  WHICH ARE USED TO CORRECT FOR         
C      TEMPERATURE. THE DEPENDENCY ON PRESSURE SQUARED                  
C      IS CONTAINED IN THE P*WO2 PART OF THE CONSTANT.                  
C      NOTE THAT SINCE THE COEFFICIENTS ARE FOR AIR, THE                
C      THE STRENGTHS ARE DIVIDED BY THE O2 MIXING RATIO FOR             
C      DRY AIR OF 0.20946 (THIS IS ASSUMED CONSTANT).                   
C      ORIGINAL FORMULATION OF THE COEFFICIENTS WAS BY LARRY GORDLEY.   
C      THIS VERSION WRITTEN BY EARL THOMPSON, JULY 1984.                
C                                                                       
C                                                                       
      COMMON/O2C/ O2DRAY(74),O2C001(74),O2S0(74),O2A(74),O2B(74),       
     X V1O2,V2O2,DVO2,NPTO2                                             
      SIGMA =0.                                                         
      ALPHA =0.                                                         
      BETA  =0.                                                         
      IF(V .LT. 1395) GO TO 30                                          
      IF(V .GT. 1760) GO TO 30                                          
C                                                                       
C                                                                       
      CALL O2INT(V,V1O2,DVO2,NPTO2,C,O2S0,A,O2A,B,O2B)                  
C                                                                       
C                                                                       
C                                                                       
C     OLD 'FASCOD2' TEMPERATURE DEPENDENCE USING BLOCK DATA ARRAYS      
C                                                                       
C     C(J)=O2S0(I)* EXP(O2A(I)*TD+O2B(I)*TD*TD) /(0.20946*VJ)           
C                                                                       
C     NEW COEFFICIENT DEFINITIONS FOR LOWTRAN FORMULATION               
C                                                                       
      ALPHA= A                                                          
      BETA=A**2/2.+B                                                    
      SIGMA=C/0.20946                                                   
C                                                                       
C     NEW 'LOWTRAN7' TEMPERATURE DEPENDENCE                             
C                                                                       
C     THIS WOULD BE THE CODING FOR THE LOWTRAN7 FORMULATION, BUT        
C       BECAUSE THE T-DEPENDENCE IS INCLUDED IN THE AMOUNTS, ONLY       
C       THE COEFFICIENTS (SIGMA, ALPHA & BETA) ARE BEING RETURNED       
C                                                                       
C     C(J)=SIGMA*(1.+ALPHA*TD+BETA*TD*TD)                               
C                                                                       
C     THE COEFFICIENTS FOR O2 HAVE BEEN MULTIPLIED BY A FACTOR          
C     OF 0.78  [RINSLAND ET AL, 1989: JGR 94; 16,303 - 16,322.].        
      O2FAC = 0.78                                                      
      SIGMA=O2FAC*SIGMA                                                 
30    RETURN                                                            
      END                                                               
      SUBROUTINE O2INT(V1C,V1,DV,NPT,C,CARRAY,A,AARRAY,B,BARRAY)        
C                                                                       
C     INTERPOLATION FOR O2 PRESSURE INDUCED CONTINUUM, NECESSARY FOR    
C          LOWTRAN7 FORMULATION  (MODELED AFTER THE LOWTRAN UV-O3 BANDS)
C                                                                       
      DIMENSION CARRAY(74),AARRAY(74),BARRAY(74)                        
      C=0.                                                              
      A=0.                                                              
      B=0.                                                              
      I=(V1C-V1)/DV+1.00001                                             
      IF(I.LT.1  )GO TO 10                                              
      IF(I.GT.NPT)GO TO 10                                              
      C=CARRAY(I)                                                       
      A=AARRAY(I)                                                       
      B=BARRAY(I)                                                       
10    CONTINUE                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE O3CHAP(V,C0,CT1,CT2)                                   
C                                                                       
C     CHAPPUIS AND WULF BAND                                            
C                                                                       
C     BEGINNING AND ENDING FREQUENCIES (CM-1):   9170.0 24565.0         
C     CROSS-SECTIONS IN CM^2 TIMES 1.0E20                               
C     FORMULA FOR CROSS SECTION:  X+Y*DT+Z*DT*DT, DT=T-273.15           
C     THE OUTPUT OF THIS ROUTINE IS C0=X, CT1=Y/C0 AND CT2=Z/C0.        
C     THUS, CROSS-SECTION*1.E20 = C0(1+CT1*DT+CT2*DT*DT)                
C                                                                       
      PARAMETER (NMAX=3080)                                             
      DIMENSION    X(3080), Y(3080), Z(3080)                            
C                                                                       
      DATA VBEG, VEND, VINCR /9170.0, 24565.0, 5.0/                     
      DATA (X(I),I=    1,  100)/                                        
     1 4.276E-05, 4.775E-05, 5.825E-05, 6.908E-05, 7.299E-05, 7.116E-05,
     2 7.388E-05, 7.965E-05, 7.689E-05, 6.900E-05, 7.008E-05, 6.945E-05,
     3 7.083E-05, 7.053E-05, 6.908E-05, 6.923E-05, 6.770E-05, 7.146E-05,
     4 7.749E-05, 8.464E-05, 8.441E-05, 8.754E-05, 8.795E-05, 9.971E-05,
     5 9.632E-05, 9.539E-05, 1.037E-04, 1.085E-04, 1.058E-04, 1.077E-04,
     6 1.121E-04, 1.193E-04, 1.292E-04, 1.364E-04, 1.526E-04, 1.658E-04,
     7 1.808E-04, 1.861E-04, 1.786E-04, 1.804E-04, 1.885E-04, 1.972E-04,
     8 2.218E-04, 2.408E-04, 2.317E-04, 2.098E-04, 1.938E-04, 1.851E-04,
     9 1.896E-04, 1.875E-04, 1.708E-04, 1.710E-04, 1.796E-04, 1.865E-04,
     & 1.943E-04, 1.881E-04, 1.885E-04, 2.136E-04, 2.255E-04, 2.267E-04,
     1 2.234E-04, 2.418E-04, 2.695E-04, 2.710E-04, 2.738E-04, 3.066E-04,
     2 3.269E-04, 3.465E-04, 3.986E-04, 4.410E-04, 4.719E-04, 5.051E-04,
     3 5.211E-04, 5.132E-04, 5.125E-04, 5.159E-04, 5.549E-04, 6.562E-04,
     4 7.168E-04, 6.502E-04, 5.140E-04, 4.161E-04, 3.620E-04, 3.264E-04,
     5 3.004E-04, 2.815E-04, 2.650E-04, 2.527E-04, 2.424E-04, 2.292E-04,
     6 2.155E-04, 2.072E-04, 1.992E-04, 1.943E-04, 1.914E-04, 1.855E-04,
     7 1.813E-04, 1.724E-04, 1.687E-04, 1.676E-04/                      
      DATA (X(I),I=  101,  200)/                                        
     1 1.601E-04, 1.503E-04, 1.518E-04, 1.436E-04, 1.455E-04, 1.448E-04,
     2 1.410E-04, 1.406E-04, 1.425E-04, 1.407E-04, 1.405E-04, 1.436E-04,
     3 1.369E-04, 1.355E-04, 1.331E-04, 1.328E-04, 1.350E-04, 1.394E-04,
     4 1.372E-04, 1.444E-04, 1.490E-04, 1.455E-04, 1.460E-04, 1.523E-04,
     5 1.559E-04, 1.654E-04, 1.766E-04, 1.843E-04, 1.911E-04, 1.881E-04,
     6 1.894E-04, 1.927E-04, 2.043E-04, 2.106E-04, 2.215E-04, 2.268E-04,
     7 2.249E-04, 2.230E-04, 2.302E-04, 2.408E-04, 2.518E-04, 2.625E-04,
     8 2.753E-04, 2.788E-04, 2.701E-04, 2.746E-04, 2.935E-04, 3.173E-04,
     9 3.457E-04, 3.452E-04, 3.329E-04, 3.443E-04, 3.706E-04, 4.079E-04,
     & 4.403E-04, 4.343E-04, 4.172E-04, 4.448E-04, 5.132E-04, 5.635E-04,
     1 5.590E-04, 5.419E-04, 6.007E-04, 6.912E-04, 7.258E-04, 7.146E-04,
     2 7.529E-04, 8.706E-04, 9.465E-04, 9.923E-04, 1.134E-03, 1.286E-03,
     3 1.351E-03, 1.485E-03, 1.709E-03, 1.897E-03, 2.086E-03, 2.186E-03,
     4 2.195E-03, 2.185E-03, 2.199E-03, 2.336E-03, 2.666E-03, 3.076E-03,
     5 3.075E-03, 2.543E-03, 1.920E-03, 1.498E-03, 1.283E-03, 1.165E-03,
     6 1.070E-03, 9.833E-04, 9.018E-04, 8.207E-04, 7.451E-04, 6.811E-04,
     7 6.178E-04, 5.661E-04, 5.199E-04, 4.868E-04/                      
      DATA (X(I),I=  201,  300)/                                        
     1 4.541E-04, 4.291E-04, 4.135E-04, 3.990E-04, 3.878E-04, 3.815E-04,
     2 3.722E-04, 3.691E-04, 3.726E-04, 3.711E-04, 3.744E-04, 3.778E-04,
     3 3.808E-04, 3.826E-04, 3.852E-04, 3.919E-04, 3.975E-04, 3.990E-04,
     4 4.053E-04, 4.176E-04, 4.232E-04, 4.291E-04, 4.414E-04, 4.541E-04,
     5 4.723E-04, 4.887E-04, 5.058E-04, 5.226E-04, 5.501E-04, 5.836E-04,
     6 6.059E-04, 6.238E-04, 6.469E-04, 6.711E-04, 7.046E-04, 7.448E-04,
     7 7.794E-04, 8.054E-04, 8.222E-04, 8.371E-04, 8.538E-04, 8.612E-04,
     8 8.698E-04, 8.914E-04, 9.122E-04, 9.305E-04, 9.562E-04, 9.844E-04,
     9 1.018E-03, 1.053E-03, 1.091E-03, 1.136E-03, 1.187E-03, 1.233E-03,
     & 1.289E-03, 1.336E-03, 1.372E-03, 1.405E-03, 1.435E-03, 1.470E-03,
     1 1.504E-03, 1.517E-03, 1.511E-03, 1.541E-03, 1.619E-03, 1.728E-03,
     2 1.848E-03, 1.955E-03, 2.044E-03, 2.128E-03, 2.254E-03, 2.396E-03,
     3 2.527E-03, 2.660E-03, 2.832E-03, 3.010E-03, 3.182E-03, 3.340E-03,
     4 3.504E-03, 3.673E-03, 3.822E-03, 3.923E-03, 3.997E-03, 4.042E-03,
     5 4.061E-03, 4.035E-03, 3.979E-03, 3.901E-03, 3.785E-03, 3.642E-03,
     6 3.494E-03, 3.339E-03, 3.173E-03, 3.004E-03, 2.849E-03, 2.703E-03,
     7 2.556E-03, 2.432E-03, 2.310E-03, 2.191E-03/                      
      DATA (X(I),I=  301,  400)/                                        
     1 2.076E-03, 1.969E-03, 1.883E-03, 1.818E-03, 1.753E-03, 1.705E-03,
     2 1.672E-03, 1.643E-03, 1.617E-03, 1.616E-03, 1.629E-03, 1.648E-03,
     3 1.662E-03, 1.667E-03, 1.669E-03, 1.664E-03, 1.655E-03, 1.645E-03,
     4 1.643E-03, 1.642E-03, 1.632E-03, 1.629E-03, 1.632E-03, 1.638E-03,
     5 1.644E-03, 1.647E-03, 1.646E-03, 1.642E-03, 1.638E-03, 1.632E-03,
     6 1.628E-03, 1.626E-03, 1.628E-03, 1.635E-03, 1.642E-03, 1.649E-03,
     7 1.653E-03, 1.656E-03, 1.660E-03, 1.669E-03, 1.685E-03, 1.705E-03,
     8 1.730E-03, 1.755E-03, 1.779E-03, 1.804E-03, 1.830E-03, 1.861E-03,
     9 1.896E-03, 1.931E-03, 1.962E-03, 1.991E-03, 2.024E-03, 2.068E-03,
     & 2.131E-03, 2.207E-03, 2.285E-03, 2.357E-03, 2.423E-03, 2.490E-03,
     1 2.564E-03, 2.649E-03, 2.743E-03, 2.842E-03, 2.943E-03, 3.044E-03,
     2 3.146E-03, 3.248E-03, 3.350E-03, 3.452E-03, 3.555E-03, 3.664E-03,
     3 3.785E-03, 3.927E-03, 4.083E-03, 4.250E-03, 4.418E-03, 4.570E-03,
     4 4.708E-03, 4.835E-03, 4.961E-03, 5.088E-03, 5.218E-03, 5.348E-03,
     5 5.471E-03, 5.594E-03, 5.713E-03, 5.828E-03, 5.933E-03, 6.026E-03,
     6 6.100E-03, 6.152E-03, 6.186E-03, 6.193E-03, 6.182E-03, 6.149E-03,
     7 6.093E-03, 6.011E-03, 5.914E-03, 5.799E-03/                      
      DATA (X(I),I=  401,  500)/                                        
     1 5.676E-03, 5.553E-03, 5.438E-03, 5.330E-03, 5.233E-03, 5.151E-03,
     2 5.080E-03, 5.025E-03, 4.987E-03, 4.972E-03, 4.976E-03, 4.991E-03,
     3 5.013E-03, 5.032E-03, 5.043E-03, 5.043E-03, 5.032E-03, 5.010E-03,
     4 4.980E-03, 4.950E-03, 4.913E-03, 4.879E-03, 4.838E-03, 4.786E-03,
     5 4.723E-03, 4.652E-03, 4.578E-03, 4.503E-03, 4.433E-03, 4.366E-03,
     6 4.306E-03, 4.247E-03, 4.191E-03, 4.135E-03, 4.083E-03, 4.035E-03,
     7 3.997E-03, 3.968E-03, 3.945E-03, 3.923E-03, 3.904E-03, 3.886E-03,
     8 3.867E-03, 3.856E-03, 3.848E-03, 3.845E-03, 3.848E-03, 3.860E-03,
     9 3.878E-03, 3.897E-03, 3.915E-03, 3.941E-03, 3.971E-03, 4.008E-03,
     & 4.057E-03, 4.113E-03, 4.176E-03, 4.243E-03, 4.325E-03, 4.418E-03,
     1 4.518E-03, 4.626E-03, 4.723E-03, 4.812E-03, 4.891E-03, 4.972E-03,
     2 5.058E-03, 5.155E-03, 5.263E-03, 5.382E-03, 5.516E-03, 5.657E-03,
     3 5.810E-03, 5.974E-03, 6.145E-03, 6.331E-03, 6.532E-03, 6.752E-03,
     4 6.993E-03, 7.247E-03, 7.507E-03, 7.768E-03, 8.036E-03, 8.304E-03,
     5 8.579E-03, 8.862E-03, 9.148E-03, 9.442E-03, 9.744E-03, 1.006E-02,
     6 1.038E-02, 1.071E-02, 1.104E-02, 1.137E-02, 1.168E-02, 1.195E-02,
     7 1.220E-02, 1.242E-02, 1.264E-02, 1.283E-02/                      
      DATA (X(I),I=  501,  600)/                                        
     1 1.303E-02, 1.322E-02, 1.339E-02, 1.356E-02, 1.371E-02, 1.385E-02,
     2 1.398E-02, 1.408E-02, 1.415E-02, 1.417E-02, 1.415E-02, 1.408E-02,
     3 1.395E-02, 1.376E-02, 1.353E-02, 1.326E-02, 1.295E-02, 1.262E-02,
     4 1.228E-02, 1.194E-02, 1.161E-02, 1.128E-02, 1.097E-02, 1.067E-02,
     5 1.038E-02, 1.011E-02, 9.859E-03, 9.625E-03, 9.409E-03, 9.208E-03,
     6 9.022E-03, 8.843E-03, 8.668E-03, 8.505E-03, 8.348E-03, 8.207E-03,
     7 8.088E-03, 7.987E-03, 7.909E-03, 7.842E-03, 7.782E-03, 7.727E-03,
     8 7.675E-03, 7.619E-03, 7.570E-03, 7.526E-03, 7.488E-03, 7.459E-03,
     9 7.440E-03, 7.429E-03, 7.429E-03, 7.429E-03, 7.440E-03, 7.455E-03,
     & 7.474E-03, 7.500E-03, 7.529E-03, 7.563E-03, 7.593E-03, 7.622E-03,
     1 7.649E-03, 7.675E-03, 7.715E-03, 7.771E-03, 7.846E-03, 7.939E-03,
     2 8.039E-03, 8.147E-03, 8.255E-03, 8.367E-03, 8.482E-03, 8.605E-03,
     3 8.746E-03, 8.903E-03, 9.078E-03, 9.271E-03, 9.472E-03, 9.677E-03,
     4 9.889E-03, 1.011E-02, 1.034E-02, 1.059E-02, 1.085E-02, 1.113E-02,
     5 1.143E-02, 1.174E-02, 1.207E-02, 1.242E-02, 1.277E-02, 1.313E-02,
     6 1.350E-02, 1.388E-02, 1.425E-02, 1.464E-02, 1.503E-02, 1.544E-02,
     7 1.586E-02, 1.628E-02, 1.670E-02, 1.713E-02/                      
      DATA (X(I),I=  601,  700)/                                        
     1 1.755E-02, 1.796E-02, 1.837E-02, 1.875E-02, 1.911E-02, 1.945E-02,
     2 1.975E-02, 2.002E-02, 2.028E-02, 2.050E-02, 2.070E-02, 2.089E-02,
     3 2.104E-02, 2.117E-02, 2.126E-02, 2.132E-02, 2.135E-02, 2.135E-02,
     4 2.130E-02, 2.123E-02, 2.114E-02, 2.101E-02, 2.087E-02, 2.072E-02,
     5 2.053E-02, 2.032E-02, 2.010E-02, 1.986E-02, 1.963E-02, 1.939E-02,
     6 1.915E-02, 1.891E-02, 1.868E-02, 1.845E-02, 1.821E-02, 1.798E-02,
     7 1.773E-02, 1.746E-02, 1.719E-02, 1.692E-02, 1.666E-02, 1.643E-02,
     8 1.621E-02, 1.598E-02, 1.576E-02, 1.558E-02, 1.542E-02, 1.529E-02,
     9 1.519E-02, 1.509E-02, 1.501E-02, 1.493E-02, 1.484E-02, 1.477E-02,
     & 1.473E-02, 1.471E-02, 1.469E-02, 1.468E-02, 1.468E-02, 1.470E-02,
     1 1.473E-02, 1.475E-02, 1.476E-02, 1.477E-02, 1.480E-02, 1.484E-02,
     2 1.489E-02, 1.497E-02, 1.507E-02, 1.520E-02, 1.533E-02, 1.543E-02,
     3 1.551E-02, 1.557E-02, 1.563E-02, 1.569E-02, 1.575E-02, 1.581E-02,
     4 1.591E-02, 1.602E-02, 1.614E-02, 1.625E-02, 1.637E-02, 1.654E-02,
     5 1.676E-02, 1.698E-02, 1.719E-02, 1.740E-02, 1.762E-02, 1.784E-02,
     6 1.805E-02, 1.827E-02, 1.852E-02, 1.878E-02, 1.906E-02, 1.935E-02,
     7 1.962E-02, 1.985E-02, 2.005E-02, 2.024E-02/                      
      DATA (X(I),I=  701,  800)/                                        
     1 2.047E-02, 2.073E-02, 2.106E-02, 2.137E-02, 2.167E-02, 2.194E-02,
     2 2.223E-02, 2.256E-02, 2.287E-02, 2.316E-02, 2.344E-02, 2.373E-02,
     3 2.405E-02, 2.445E-02, 2.490E-02, 2.542E-02, 2.592E-02, 2.640E-02,
     4 2.684E-02, 2.729E-02, 2.778E-02, 2.828E-02, 2.876E-02, 2.914E-02,
     5 2.948E-02, 2.979E-02, 3.010E-02, 3.039E-02, 3.066E-02, 3.091E-02,
     6 3.116E-02, 3.138E-02, 3.153E-02, 3.155E-02, 3.152E-02, 3.146E-02,
     7 3.144E-02, 3.138E-02, 3.126E-02, 3.110E-02, 3.092E-02, 3.073E-02,
     8 3.054E-02, 3.033E-02, 3.008E-02, 2.980E-02, 2.947E-02, 2.910E-02,
     9 2.870E-02, 2.832E-02, 2.795E-02, 2.765E-02, 2.735E-02, 2.706E-02,
     & 2.680E-02, 2.656E-02, 2.637E-02, 2.620E-02, 2.604E-02, 2.587E-02,
     1 2.570E-02, 2.551E-02, 2.533E-02, 2.520E-02, 2.514E-02, 2.513E-02,
     2 2.513E-02, 2.512E-02, 2.509E-02, 2.506E-02, 2.504E-02, 2.501E-02,
     3 2.498E-02, 2.494E-02, 2.493E-02, 2.497E-02, 2.508E-02, 2.522E-02,
     4 2.535E-02, 2.545E-02, 2.550E-02, 2.558E-02, 2.568E-02, 2.578E-02,
     5 2.587E-02, 2.592E-02, 2.598E-02, 2.605E-02, 2.619E-02, 2.631E-02,
     6 2.621E-02, 2.617E-02, 2.629E-02, 2.642E-02, 2.654E-02, 2.669E-02,
     7 2.685E-02, 2.700E-02, 2.716E-02, 2.734E-02/                      
      DATA (X(I),I=  801,  900)/                                        
     1 2.752E-02, 2.772E-02, 2.792E-02, 2.813E-02, 2.834E-02, 2.858E-02,
     2 2.885E-02, 2.913E-02, 2.941E-02, 2.973E-02, 3.005E-02, 3.038E-02,
     3 3.075E-02, 3.117E-02, 3.159E-02, 3.202E-02, 3.246E-02, 3.290E-02,
     4 3.335E-02, 3.384E-02, 3.438E-02, 3.493E-02, 3.547E-02, 3.603E-02,
     5 3.660E-02, 3.718E-02, 3.772E-02, 3.826E-02, 3.879E-02, 3.931E-02,
     6 3.987E-02, 4.042E-02, 4.098E-02, 4.151E-02, 4.199E-02, 4.243E-02,
     7 4.287E-02, 4.316E-02, 4.344E-02, 4.369E-02, 4.392E-02, 4.405E-02,
     8 4.417E-02, 4.429E-02, 4.436E-02, 4.436E-02, 4.438E-02, 4.437E-02,
     9 4.427E-02, 4.416E-02, 4.405E-02, 4.394E-02, 4.383E-02, 4.372E-02,
     & 4.359E-02, 4.344E-02, 4.329E-02, 4.312E-02, 4.299E-02, 4.289E-02,
     1 4.278E-02, 4.269E-02, 4.258E-02, 4.242E-02, 4.227E-02, 4.213E-02,
     2 4.202E-02, 4.194E-02, 4.183E-02, 4.178E-02, 4.179E-02, 4.177E-02,
     3 4.175E-02, 4.174E-02, 4.174E-02, 4.175E-02, 4.177E-02, 4.183E-02,
     4 4.191E-02, 4.199E-02, 4.207E-02, 4.214E-02, 4.219E-02, 4.226E-02,
     5 4.232E-02, 4.239E-02, 4.247E-02, 4.254E-02, 4.261E-02, 4.270E-02,
     6 4.279E-02, 4.287E-02, 4.298E-02, 4.311E-02, 4.323E-02, 4.338E-02,
     7 4.357E-02, 4.375E-02, 4.393E-02, 4.413E-02/                      
      DATA (X(I),I=  901, 1000)/                                        
     1 4.433E-02, 4.454E-02, 4.475E-02, 4.499E-02, 4.525E-02, 4.551E-02,
     2 4.579E-02, 4.613E-02, 4.645E-02, 4.678E-02, 4.712E-02, 4.749E-02,
     3 4.785E-02, 4.820E-02, 4.856E-02, 4.894E-02, 4.928E-02, 4.963E-02,
     4 4.991E-02, 5.016E-02, 5.042E-02, 5.072E-02, 5.109E-02, 5.144E-02,
     5 5.183E-02, 5.218E-02, 5.251E-02, 5.282E-02, 5.315E-02, 5.351E-02,
     6 5.391E-02, 5.430E-02, 5.471E-02, 5.510E-02, 5.548E-02, 5.588E-02,
     7 5.628E-02, 5.673E-02, 5.722E-02, 5.771E-02, 5.821E-02, 5.874E-02,
     8 5.927E-02, 5.980E-02, 6.034E-02, 6.088E-02, 6.144E-02, 6.197E-02,
     9 6.250E-02, 6.303E-02, 6.352E-02, 6.404E-02, 6.452E-02, 6.493E-02,
     & 6.537E-02, 6.578E-02, 6.617E-02, 6.653E-02, 6.688E-02, 6.722E-02,
     1 6.747E-02, 6.768E-02, 6.788E-02, 6.808E-02, 6.827E-02, 6.842E-02,
     2 6.859E-02, 6.875E-02, 6.884E-02, 6.889E-02, 6.896E-02, 6.900E-02,
     3 6.915E-02, 6.927E-02, 6.942E-02, 6.956E-02, 6.972E-02, 6.990E-02,
     4 7.009E-02, 7.024E-02, 7.043E-02, 7.062E-02, 7.081E-02, 7.102E-02,
     5 7.127E-02, 7.151E-02, 7.175E-02, 7.199E-02, 7.225E-02, 7.248E-02,
     6 7.274E-02, 7.300E-02, 7.325E-02, 7.351E-02, 7.375E-02, 7.402E-02,
     7 7.429E-02, 7.458E-02, 7.488E-02, 7.514E-02/                      
      DATA (X(I),I= 1001, 1100)/                                        
     1 7.546E-02, 7.575E-02, 7.605E-02, 7.634E-02, 7.667E-02, 7.698E-02,
     2 7.732E-02, 7.767E-02, 7.803E-02, 7.841E-02, 7.879E-02, 7.916E-02,
     3 7.959E-02, 8.001E-02, 8.042E-02, 8.082E-02, 8.118E-02, 8.152E-02,
     4 8.188E-02, 8.224E-02, 8.270E-02, 8.318E-02, 8.367E-02, 8.415E-02,
     5 8.467E-02, 8.518E-02, 8.569E-02, 8.621E-02, 8.673E-02, 8.725E-02,
     6 8.779E-02, 8.831E-02, 8.887E-02, 8.945E-02, 9.003E-02, 9.060E-02,
     7 9.123E-02, 9.187E-02, 9.254E-02, 9.317E-02, 9.382E-02, 9.444E-02,
     8 9.506E-02, 9.570E-02, 9.634E-02, 9.702E-02, 9.769E-02, 9.838E-02,
     9 9.904E-02, 9.968E-02, 1.003E-01, 1.010E-01, 1.016E-01, 1.022E-01,
     & 1.028E-01, 1.033E-01, 1.039E-01, 1.046E-01, 1.053E-01, 1.060E-01,
     1 1.067E-01, 1.075E-01, 1.082E-01, 1.089E-01, 1.096E-01, 1.103E-01,
     2 1.110E-01, 1.117E-01, 1.125E-01, 1.132E-01, 1.139E-01, 1.147E-01,
     3 1.154E-01, 1.162E-01, 1.169E-01, 1.177E-01, 1.184E-01, 1.191E-01,
     4 1.197E-01, 1.203E-01, 1.209E-01, 1.215E-01, 1.221E-01, 1.227E-01,
     5 1.232E-01, 1.238E-01, 1.244E-01, 1.249E-01, 1.254E-01, 1.259E-01,
     6 1.263E-01, 1.268E-01, 1.273E-01, 1.278E-01, 1.283E-01, 1.288E-01,
     7 1.292E-01, 1.296E-01, 1.300E-01, 1.305E-01/                      
      DATA (X(I),I= 1101, 1200)/                                        
     1 1.309E-01, 1.314E-01, 1.319E-01, 1.324E-01, 1.329E-01, 1.335E-01,
     2 1.340E-01, 1.345E-01, 1.351E-01, 1.356E-01, 1.362E-01, 1.368E-01,
     3 1.374E-01, 1.380E-01, 1.386E-01, 1.392E-01, 1.399E-01, 1.406E-01,
     4 1.413E-01, 1.420E-01, 1.427E-01, 1.434E-01, 1.442E-01, 1.449E-01,
     5 1.457E-01, 1.465E-01, 1.472E-01, 1.479E-01, 1.487E-01, 1.495E-01,
     6 1.502E-01, 1.509E-01, 1.516E-01, 1.523E-01, 1.530E-01, 1.539E-01,
     7 1.547E-01, 1.555E-01, 1.563E-01, 1.571E-01, 1.580E-01, 1.588E-01,
     8 1.596E-01, 1.605E-01, 1.614E-01, 1.623E-01, 1.632E-01, 1.641E-01,
     9 1.649E-01, 1.658E-01, 1.666E-01, 1.675E-01, 1.684E-01, 1.692E-01,
     & 1.701E-01, 1.710E-01, 1.719E-01, 1.728E-01, 1.737E-01, 1.746E-01,
     1 1.756E-01, 1.764E-01, 1.774E-01, 1.783E-01, 1.792E-01, 1.801E-01,
     2 1.810E-01, 1.820E-01, 1.829E-01, 1.838E-01, 1.848E-01, 1.857E-01,
     3 1.866E-01, 1.876E-01, 1.885E-01, 1.893E-01, 1.902E-01, 1.911E-01,
     4 1.920E-01, 1.928E-01, 1.936E-01, 1.945E-01, 1.953E-01, 1.961E-01,
     5 1.969E-01, 1.978E-01, 1.986E-01, 1.994E-01, 2.002E-01, 2.010E-01,
     6 2.018E-01, 2.026E-01, 2.034E-01, 2.041E-01, 2.049E-01, 2.057E-01,
     7 2.065E-01, 2.073E-01, 2.081E-01, 2.089E-01/                      
      DATA (X(I),I= 1201, 1300)/                                        
     1 2.097E-01, 2.105E-01, 2.113E-01, 2.121E-01, 2.129E-01, 2.137E-01,
     2 2.146E-01, 2.154E-01, 2.163E-01, 2.172E-01, 2.180E-01, 2.190E-01,
     3 2.198E-01, 2.207E-01, 2.216E-01, 2.225E-01, 2.234E-01, 2.243E-01,
     4 2.251E-01, 2.260E-01, 2.269E-01, 2.277E-01, 2.285E-01, 2.294E-01,
     5 2.302E-01, 2.311E-01, 2.320E-01, 2.328E-01, 2.337E-01, 2.346E-01,
     6 2.355E-01, 2.364E-01, 2.372E-01, 2.381E-01, 2.390E-01, 2.398E-01,
     7 2.407E-01, 2.416E-01, 2.424E-01, 2.432E-01, 2.440E-01, 2.448E-01,
     8 2.456E-01, 2.464E-01, 2.473E-01, 2.482E-01, 2.491E-01, 2.500E-01,
     9 2.509E-01, 2.517E-01, 2.525E-01, 2.533E-01, 2.541E-01, 2.550E-01,
     & 2.559E-01, 2.568E-01, 2.577E-01, 2.587E-01, 2.597E-01, 2.607E-01,
     1 2.617E-01, 2.626E-01, 2.636E-01, 2.645E-01, 2.654E-01, 2.663E-01,
     2 2.672E-01, 2.682E-01, 2.692E-01, 2.703E-01, 2.713E-01, 2.724E-01,
     3 2.734E-01, 2.744E-01, 2.754E-01, 2.764E-01, 2.774E-01, 2.784E-01,
     4 2.795E-01, 2.806E-01, 2.816E-01, 2.827E-01, 2.838E-01, 2.850E-01,
     5 2.861E-01, 2.872E-01, 2.884E-01, 2.895E-01, 2.907E-01, 2.918E-01,
     6 2.930E-01, 2.942E-01, 2.954E-01, 2.967E-01, 2.980E-01, 2.993E-01,
     7 3.005E-01, 3.017E-01, 3.029E-01, 3.041E-01/                      
      DATA (X(I),I= 1301, 1400)/                                        
     1 3.052E-01, 3.064E-01, 3.076E-01, 3.088E-01, 3.100E-01, 3.112E-01,
     2 3.124E-01, 3.136E-01, 3.149E-01, 3.161E-01, 3.173E-01, 3.185E-01,
     3 3.196E-01, 3.208E-01, 3.219E-01, 3.230E-01, 3.242E-01, 3.253E-01,
     4 3.265E-01, 3.277E-01, 3.289E-01, 3.300E-01, 3.312E-01, 3.323E-01,
     5 3.334E-01, 3.345E-01, 3.356E-01, 3.367E-01, 3.378E-01, 3.389E-01,
     6 3.400E-01, 3.410E-01, 3.421E-01, 3.431E-01, 3.441E-01, 3.452E-01,
     7 3.462E-01, 3.472E-01, 3.482E-01, 3.493E-01, 3.503E-01, 3.513E-01,
     8 3.524E-01, 3.534E-01, 3.545E-01, 3.555E-01, 3.566E-01, 3.577E-01,
     9 3.588E-01, 3.599E-01, 3.611E-01, 3.622E-01, 3.632E-01, 3.643E-01,
     & 3.653E-01, 3.664E-01, 3.674E-01, 3.683E-01, 3.692E-01, 3.702E-01,
     1 3.711E-01, 3.721E-01, 3.732E-01, 3.740E-01, 3.751E-01, 3.762E-01,
     2 3.774E-01, 3.781E-01, 3.792E-01, 3.800E-01, 3.811E-01, 3.818E-01,
     3 3.826E-01, 3.837E-01, 3.844E-01, 3.853E-01, 3.863E-01, 3.870E-01,
     4 3.881E-01, 3.889E-01, 3.898E-01, 3.908E-01, 3.916E-01, 3.928E-01,
     5 3.937E-01, 3.946E-01, 3.957E-01, 3.967E-01, 3.976E-01, 3.983E-01,
     6 3.995E-01, 4.002E-01, 4.013E-01, 4.023E-01, 4.032E-01, 4.042E-01,
     7 4.050E-01, 4.062E-01, 4.073E-01, 4.084E-01/                      
      DATA (X(I),I= 1401, 1500)/                                        
     1 4.095E-01, 4.106E-01, 4.117E-01, 4.130E-01, 4.144E-01, 4.155E-01,
     2 4.165E-01, 4.178E-01, 4.189E-01, 4.200E-01, 4.215E-01, 4.226E-01,
     3 4.241E-01, 4.252E-01, 4.266E-01, 4.280E-01, 4.293E-01, 4.306E-01,
     4 4.321E-01, 4.335E-01, 4.347E-01, 4.362E-01, 4.376E-01, 4.388E-01,
     5 4.403E-01, 4.418E-01, 4.433E-01, 4.450E-01, 4.465E-01, 4.480E-01,
     6 4.495E-01, 4.510E-01, 4.524E-01, 4.540E-01, 4.555E-01, 4.571E-01,
     7 4.585E-01, 4.603E-01, 4.619E-01, 4.634E-01, 4.652E-01, 4.668E-01,
     8 4.683E-01, 4.700E-01, 4.716E-01, 4.734E-01, 4.750E-01, 4.764E-01,
     9 4.782E-01, 4.797E-01, 4.812E-01, 4.830E-01, 4.845E-01, 4.861E-01,
     & 4.875E-01, 4.893E-01, 4.908E-01, 4.920E-01, 4.935E-01, 4.950E-01,
     1 4.964E-01, 4.976E-01, 4.990E-01, 5.003E-01, 5.016E-01, 5.028E-01,
     2 5.043E-01, 5.054E-01, 5.064E-01, 5.073E-01, 5.082E-01, 5.094E-01,
     3 5.104E-01, 5.111E-01, 5.119E-01, 5.126E-01, 5.133E-01, 5.141E-01,
     4 5.146E-01, 5.149E-01, 5.154E-01, 5.159E-01, 5.162E-01, 5.166E-01,
     5 5.167E-01, 5.168E-01, 5.170E-01, 5.171E-01, 5.171E-01, 5.169E-01,
     6 5.166E-01, 5.162E-01, 5.159E-01, 5.155E-01, 5.151E-01, 5.146E-01,
     7 5.139E-01, 5.133E-01, 5.128E-01, 5.120E-01/                      
      DATA (X(I),I= 1501, 1600)/                                        
     1 5.113E-01, 5.103E-01, 5.092E-01, 5.080E-01, 5.070E-01, 5.059E-01,
     2 5.048E-01, 5.036E-01, 5.022E-01, 5.011E-01, 4.997E-01, 4.984E-01,
     3 4.969E-01, 4.954E-01, 4.939E-01, 4.924E-01, 4.909E-01, 4.893E-01,
     4 4.877E-01, 4.863E-01, 4.845E-01, 4.831E-01, 4.814E-01, 4.798E-01,
     5 4.781E-01, 4.766E-01, 4.748E-01, 4.732E-01, 4.718E-01, 4.703E-01,
     6 4.688E-01, 4.673E-01, 4.658E-01, 4.643E-01, 4.630E-01, 4.615E-01,
     7 4.600E-01, 4.586E-01, 4.572E-01, 4.559E-01, 4.548E-01, 4.536E-01,
     8 4.524E-01, 4.512E-01, 4.501E-01, 4.491E-01, 4.483E-01, 4.475E-01,
     9 4.468E-01, 4.459E-01, 4.450E-01, 4.444E-01, 4.438E-01, 4.431E-01,
     & 4.424E-01, 4.416E-01, 4.412E-01, 4.409E-01, 4.405E-01, 4.401E-01,
     1 4.397E-01, 4.394E-01, 4.392E-01, 4.390E-01, 4.389E-01, 4.386E-01,
     2 4.386E-01, 4.384E-01, 4.384E-01, 4.385E-01, 4.385E-01, 4.385E-01,
     3 4.385E-01, 4.387E-01, 4.387E-01, 4.387E-01, 4.387E-01, 4.387E-01,
     4 4.387E-01, 4.390E-01, 4.391E-01, 4.394E-01, 4.398E-01, 4.398E-01,
     5 4.402E-01, 4.406E-01, 4.410E-01, 4.413E-01, 4.417E-01, 4.421E-01,
     6 4.425E-01, 4.428E-01, 4.432E-01, 4.440E-01, 4.443E-01, 4.448E-01,
     7 4.452E-01, 4.459E-01, 4.467E-01, 4.471E-01/                      
      DATA (X(I),I= 1601, 1700)/                                        
     1 4.479E-01, 4.486E-01, 4.491E-01, 4.498E-01, 4.505E-01, 4.512E-01,
     2 4.519E-01, 4.525E-01, 4.532E-01, 4.539E-01, 4.547E-01, 4.554E-01,
     3 4.562E-01, 4.569E-01, 4.577E-01, 4.584E-01, 4.592E-01, 4.599E-01,
     4 4.606E-01, 4.614E-01, 4.621E-01, 4.629E-01, 4.636E-01, 4.640E-01,
     5 4.648E-01, 4.655E-01, 4.662E-01, 4.670E-01, 4.675E-01, 4.682E-01,
     6 4.689E-01, 4.697E-01, 4.701E-01, 4.708E-01, 4.712E-01, 4.718E-01,
     7 4.724E-01, 4.729E-01, 4.735E-01, 4.739E-01, 4.742E-01, 4.745E-01,
     8 4.748E-01, 4.751E-01, 4.753E-01, 4.755E-01, 4.757E-01, 4.757E-01,
     9 4.757E-01, 4.756E-01, 4.756E-01, 4.756E-01, 4.753E-01, 4.752E-01,
     & 4.749E-01, 4.747E-01, 4.744E-01, 4.741E-01, 4.737E-01, 4.734E-01,
     1 4.730E-01, 4.725E-01, 4.721E-01, 4.715E-01, 4.708E-01, 4.701E-01,
     2 4.693E-01, 4.686E-01, 4.681E-01, 4.673E-01, 4.663E-01, 4.657E-01,
     3 4.649E-01, 4.641E-01, 4.632E-01, 4.623E-01, 4.615E-01, 4.606E-01,
     4 4.596E-01, 4.588E-01, 4.579E-01, 4.569E-01, 4.561E-01, 4.551E-01,
     5 4.542E-01, 4.532E-01, 4.524E-01, 4.513E-01, 4.506E-01, 4.498E-01,
     6 4.487E-01, 4.479E-01, 4.472E-01, 4.461E-01, 4.454E-01, 4.443E-01,
     7 4.435E-01, 4.428E-01, 4.418E-01, 4.411E-01/                      
      DATA (X(I),I= 1701, 1800)/                                        
     1 4.400E-01, 4.388E-01, 4.380E-01, 4.368E-01, 4.357E-01, 4.347E-01,
     2 4.338E-01, 4.328E-01, 4.316E-01, 4.305E-01, 4.294E-01, 4.283E-01,
     3 4.272E-01, 4.261E-01, 4.249E-01, 4.235E-01, 4.222E-01, 4.212E-01,
     4 4.201E-01, 4.186E-01, 4.171E-01, 4.159E-01, 4.145E-01, 4.130E-01,
     5 4.115E-01, 4.100E-01, 4.085E-01, 4.070E-01, 4.057E-01, 4.042E-01,
     6 4.028E-01, 4.014E-01, 3.998E-01, 3.982E-01, 3.967E-01, 3.950E-01,
     7 3.935E-01, 3.919E-01, 3.904E-01, 3.892E-01, 3.878E-01, 3.863E-01,
     8 3.848E-01, 3.833E-01, 3.818E-01, 3.803E-01, 3.789E-01, 3.775E-01,
     9 3.761E-01, 3.746E-01, 3.731E-01, 3.718E-01, 3.706E-01, 3.694E-01,
     & 3.681E-01, 3.669E-01, 3.657E-01, 3.646E-01, 3.635E-01, 3.624E-01,
     1 3.613E-01, 3.603E-01, 3.592E-01, 3.581E-01, 3.571E-01, 3.561E-01,
     2 3.550E-01, 3.540E-01, 3.530E-01, 3.520E-01, 3.510E-01, 3.503E-01,
     3 3.495E-01, 3.487E-01, 3.479E-01, 3.472E-01, 3.464E-01, 3.457E-01,
     4 3.450E-01, 3.443E-01, 3.436E-01, 3.429E-01, 3.422E-01, 3.415E-01,
     5 3.409E-01, 3.403E-01, 3.398E-01, 3.392E-01, 3.386E-01, 3.380E-01,
     6 3.375E-01, 3.369E-01, 3.364E-01, 3.358E-01, 3.353E-01, 3.347E-01,
     7 3.342E-01, 3.337E-01, 3.332E-01, 3.327E-01/                      
      DATA (X(I),I= 1801, 1900)/                                        
     1 3.323E-01, 3.318E-01, 3.313E-01, 3.308E-01, 3.304E-01, 3.300E-01,
     2 3.295E-01, 3.291E-01, 3.286E-01, 3.282E-01, 3.278E-01, 3.275E-01,
     3 3.271E-01, 3.267E-01, 3.264E-01, 3.260E-01, 3.256E-01, 3.251E-01,
     4 3.245E-01, 3.240E-01, 3.235E-01, 3.230E-01, 3.224E-01, 3.219E-01,
     5 3.213E-01, 3.207E-01, 3.202E-01, 3.196E-01, 3.190E-01, 3.185E-01,
     6 3.179E-01, 3.174E-01, 3.169E-01, 3.163E-01, 3.158E-01, 3.152E-01,
     7 3.146E-01, 3.139E-01, 3.132E-01, 3.125E-01, 3.117E-01, 3.110E-01,
     8 3.102E-01, 3.095E-01, 3.087E-01, 3.079E-01, 3.071E-01, 3.063E-01,
     9 3.055E-01, 3.048E-01, 3.039E-01, 3.031E-01, 3.022E-01, 3.014E-01,
     & 3.005E-01, 2.996E-01, 2.988E-01, 2.979E-01, 2.970E-01, 2.961E-01,
     1 2.952E-01, 2.944E-01, 2.935E-01, 2.927E-01, 2.920E-01, 2.913E-01,
     2 2.906E-01, 2.900E-01, 2.893E-01, 2.886E-01, 2.880E-01, 2.874E-01,
     3 2.869E-01, 2.863E-01, 2.858E-01, 2.852E-01, 2.847E-01, 2.842E-01,
     4 2.838E-01, 2.834E-01, 2.830E-01, 2.826E-01, 2.822E-01, 2.818E-01,
     5 2.815E-01, 2.813E-01, 2.811E-01, 2.809E-01, 2.807E-01, 2.805E-01,
     6 2.803E-01, 2.802E-01, 2.803E-01, 2.803E-01, 2.803E-01, 2.803E-01,
     7 2.803E-01, 2.804E-01, 2.804E-01, 2.805E-01/                      
      DATA (X(I),I= 1901, 2000)/                                        
     1 2.806E-01, 2.807E-01, 2.808E-01, 2.809E-01, 2.810E-01, 2.810E-01,
     2 2.809E-01, 2.808E-01, 2.808E-01, 2.807E-01, 2.806E-01, 2.805E-01,
     3 2.804E-01, 2.801E-01, 2.799E-01, 2.796E-01, 2.794E-01, 2.791E-01,
     4 2.789E-01, 2.785E-01, 2.780E-01, 2.775E-01, 2.770E-01, 2.765E-01,
     5 2.760E-01, 2.755E-01, 2.749E-01, 2.741E-01, 2.734E-01, 2.726E-01,
     6 2.718E-01, 2.710E-01, 2.703E-01, 2.694E-01, 2.684E-01, 2.674E-01,
     7 2.664E-01, 2.654E-01, 2.644E-01, 2.634E-01, 2.624E-01, 2.612E-01,
     8 2.601E-01, 2.589E-01, 2.578E-01, 2.566E-01, 2.555E-01, 2.543E-01,
     9 2.530E-01, 2.517E-01, 2.503E-01, 2.490E-01, 2.477E-01, 2.463E-01,
     & 2.450E-01, 2.436E-01, 2.423E-01, 2.410E-01, 2.396E-01, 2.383E-01,
     1 2.370E-01, 2.356E-01, 2.342E-01, 2.328E-01, 2.314E-01, 2.299E-01,
     2 2.285E-01, 2.271E-01, 2.257E-01, 2.243E-01, 2.230E-01, 2.218E-01,
     3 2.205E-01, 2.192E-01, 2.179E-01, 2.166E-01, 2.153E-01, 2.140E-01,
     4 2.126E-01, 2.113E-01, 2.100E-01, 2.086E-01, 2.073E-01, 2.060E-01,
     5 2.048E-01, 2.036E-01, 2.025E-01, 2.013E-01, 2.001E-01, 1.989E-01,
     6 1.977E-01, 1.967E-01, 1.957E-01, 1.947E-01, 1.937E-01, 1.927E-01,
     7 1.917E-01, 1.907E-01, 1.898E-01, 1.890E-01/                      
      DATA (X(I),I= 2001, 2100)/                                        
     1 1.883E-01, 1.875E-01, 1.867E-01, 1.859E-01, 1.851E-01, 1.844E-01,
     2 1.836E-01, 1.829E-01, 1.821E-01, 1.813E-01, 1.806E-01, 1.798E-01,
     3 1.791E-01, 1.786E-01, 1.781E-01, 1.776E-01, 1.771E-01, 1.766E-01,
     4 1.761E-01, 1.756E-01, 1.751E-01, 1.747E-01, 1.743E-01, 1.739E-01,
     5 1.735E-01, 1.731E-01, 1.726E-01, 1.722E-01, 1.718E-01, 1.714E-01,
     6 1.710E-01, 1.706E-01, 1.703E-01, 1.698E-01, 1.695E-01, 1.691E-01,
     7 1.686E-01, 1.682E-01, 1.677E-01, 1.673E-01, 1.668E-01, 1.664E-01,
     8 1.660E-01, 1.655E-01, 1.650E-01, 1.646E-01, 1.642E-01, 1.637E-01,
     9 1.633E-01, 1.628E-01, 1.624E-01, 1.619E-01, 1.615E-01, 1.611E-01,
     & 1.607E-01, 1.602E-01, 1.598E-01, 1.593E-01, 1.588E-01, 1.583E-01,
     1 1.578E-01, 1.574E-01, 1.569E-01, 1.564E-01, 1.560E-01, 1.555E-01,
     2 1.551E-01, 1.548E-01, 1.544E-01, 1.540E-01, 1.536E-01, 1.532E-01,
     3 1.528E-01, 1.525E-01, 1.523E-01, 1.520E-01, 1.518E-01, 1.516E-01,
     4 1.514E-01, 1.511E-01, 1.510E-01, 1.511E-01, 1.513E-01, 1.514E-01,
     5 1.516E-01, 1.518E-01, 1.519E-01, 1.521E-01, 1.523E-01, 1.526E-01,
     6 1.528E-01, 1.531E-01, 1.534E-01, 1.537E-01, 1.540E-01, 1.543E-01,
     7 1.547E-01, 1.551E-01, 1.555E-01, 1.560E-01/                      
      DATA (X(I),I= 2101, 2200)/                                        
     1 1.564E-01, 1.568E-01, 1.572E-01, 1.575E-01, 1.579E-01, 1.581E-01,
     2 1.584E-01, 1.586E-01, 1.589E-01, 1.592E-01, 1.594E-01, 1.596E-01,
     3 1.598E-01, 1.599E-01, 1.600E-01, 1.601E-01, 1.602E-01, 1.603E-01,
     4 1.604E-01, 1.604E-01, 1.602E-01, 1.600E-01, 1.598E-01, 1.596E-01,
     5 1.594E-01, 1.592E-01, 1.590E-01, 1.585E-01, 1.580E-01, 1.574E-01,
     6 1.568E-01, 1.562E-01, 1.555E-01, 1.549E-01, 1.543E-01, 1.535E-01,
     7 1.527E-01, 1.518E-01, 1.510E-01, 1.501E-01, 1.493E-01, 1.484E-01,
     8 1.475E-01, 1.464E-01, 1.453E-01, 1.442E-01, 1.431E-01, 1.420E-01,
     9 1.409E-01, 1.398E-01, 1.386E-01, 1.374E-01, 1.362E-01, 1.350E-01,
     & 1.338E-01, 1.326E-01, 1.314E-01, 1.302E-01, 1.290E-01, 1.278E-01,
     1 1.265E-01, 1.253E-01, 1.241E-01, 1.229E-01, 1.217E-01, 1.204E-01,
     2 1.192E-01, 1.180E-01, 1.169E-01, 1.157E-01, 1.145E-01, 1.133E-01,
     3 1.122E-01, 1.110E-01, 1.099E-01, 1.089E-01, 1.079E-01, 1.069E-01,
     4 1.060E-01, 1.050E-01, 1.040E-01, 1.031E-01, 1.021E-01, 1.013E-01,
     5 1.005E-01, 9.973E-02, 9.897E-02, 9.820E-02, 9.743E-02, 9.664E-02,
     6 9.588E-02, 9.524E-02, 9.462E-02, 9.400E-02, 9.339E-02, 9.279E-02,
     7 9.217E-02, 9.158E-02, 9.098E-02, 9.049E-02/                      
      DATA (X(I),I= 2201, 2300)/                                        
     1 9.002E-02, 8.958E-02, 8.913E-02, 8.869E-02, 8.827E-02, 8.783E-02,
     2 8.742E-02, 8.712E-02, 8.690E-02, 8.670E-02, 8.648E-02, 8.629E-02,
     3 8.607E-02, 8.588E-02, 8.568E-02, 8.547E-02, 8.525E-02, 8.503E-02,
     4 8.482E-02, 8.462E-02, 8.440E-02, 8.418E-02, 8.397E-02, 8.379E-02,
     5 8.369E-02, 8.359E-02, 8.349E-02, 8.341E-02, 8.332E-02, 8.322E-02,
     6 8.316E-02, 8.305E-02, 8.288E-02, 8.269E-02, 8.251E-02, 8.232E-02,
     7 8.214E-02, 8.195E-02, 8.178E-02, 8.158E-02, 8.133E-02, 8.108E-02,
     8 8.083E-02, 8.057E-02, 8.031E-02, 8.003E-02, 7.976E-02, 7.949E-02,
     9 7.917E-02, 7.874E-02, 7.830E-02, 7.789E-02, 7.744E-02, 7.704E-02,
     & 7.662E-02, 7.620E-02, 7.579E-02, 7.549E-02, 7.519E-02, 7.490E-02,
     1 7.460E-02, 7.432E-02, 7.404E-02, 7.377E-02, 7.347E-02, 7.333E-02,
     2 7.329E-02, 7.323E-02, 7.318E-02, 7.315E-02, 7.310E-02, 7.307E-02,
     3 7.303E-02, 7.304E-02, 7.320E-02, 7.336E-02, 7.351E-02, 7.369E-02,
     4 7.386E-02, 7.402E-02, 7.417E-02, 7.435E-02, 7.458E-02, 7.481E-02,
     5 7.505E-02, 7.529E-02, 7.556E-02, 7.582E-02, 7.607E-02, 7.634E-02,
     6 7.661E-02, 7.695E-02, 7.728E-02, 7.763E-02, 7.797E-02, 7.830E-02,
     7 7.864E-02, 7.895E-02, 7.929E-02, 7.952E-02/                      
      DATA (X(I),I= 2301, 2400)/                                        
     1 7.975E-02, 7.996E-02, 8.018E-02, 8.039E-02, 8.061E-02, 8.081E-02,
     2 8.102E-02, 8.115E-02, 8.105E-02, 8.096E-02, 8.086E-02, 8.074E-02,
     3 8.062E-02, 8.048E-02, 8.033E-02, 8.019E-02, 7.988E-02, 7.946E-02,
     4 7.907E-02, 7.866E-02, 7.824E-02, 7.784E-02, 7.743E-02, 7.702E-02,
     5 7.658E-02, 7.607E-02, 7.552E-02, 7.497E-02, 7.442E-02, 7.386E-02,
     6 7.328E-02, 7.271E-02, 7.214E-02, 7.149E-02, 7.072E-02, 6.995E-02,
     7 6.917E-02, 6.840E-02, 6.762E-02, 6.684E-02, 6.605E-02, 6.527E-02,
     8 6.453E-02, 6.382E-02, 6.311E-02, 6.240E-02, 6.169E-02, 6.099E-02,
     9 6.027E-02, 5.956E-02, 5.886E-02, 5.817E-02, 5.747E-02, 5.676E-02,
     & 5.607E-02, 5.537E-02, 5.469E-02, 5.400E-02, 5.331E-02, 5.265E-02,
     1 5.205E-02, 5.146E-02, 5.088E-02, 5.028E-02, 4.970E-02, 4.912E-02,
     2 4.853E-02, 4.794E-02, 4.738E-02, 4.685E-02, 4.634E-02, 4.583E-02,
     3 4.532E-02, 4.480E-02, 4.431E-02, 4.380E-02, 4.331E-02, 4.291E-02,
     4 4.260E-02, 4.230E-02, 4.199E-02, 4.168E-02, 4.137E-02, 4.107E-02,
     5 4.078E-02, 4.047E-02, 4.029E-02, 4.016E-02, 4.004E-02, 3.991E-02,
     6 3.980E-02, 3.970E-02, 3.959E-02, 3.949E-02, 3.937E-02, 3.934E-02,
     7 3.933E-02, 3.933E-02, 3.934E-02, 3.935E-02/                      
      DATA (X(I),I= 2401, 2500)/                                        
     1 3.935E-02, 3.936E-02, 3.936E-02, 3.936E-02, 3.931E-02, 3.925E-02,
     2 3.918E-02, 3.912E-02, 3.905E-02, 3.897E-02, 3.889E-02, 3.881E-02,
     3 3.874E-02, 3.866E-02, 3.855E-02, 3.846E-02, 3.837E-02, 3.826E-02,
     4 3.818E-02, 3.807E-02, 3.795E-02, 3.786E-02, 3.769E-02, 3.748E-02,
     5 3.727E-02, 3.706E-02, 3.686E-02, 3.664E-02, 3.643E-02, 3.622E-02,
     6 3.601E-02, 3.581E-02, 3.561E-02, 3.542E-02, 3.522E-02, 3.503E-02,
     7 3.484E-02, 3.465E-02, 3.446E-02, 3.427E-02, 3.407E-02, 3.386E-02,
     8 3.364E-02, 3.343E-02, 3.322E-02, 3.301E-02, 3.280E-02, 3.259E-02,
     9 3.238E-02, 3.221E-02, 3.209E-02, 3.198E-02, 3.186E-02, 3.175E-02,
     & 3.164E-02, 3.153E-02, 3.143E-02, 3.132E-02, 3.126E-02, 3.136E-02,
     1 3.148E-02, 3.159E-02, 3.170E-02, 3.182E-02, 3.194E-02, 3.206E-02,
     2 3.219E-02, 3.232E-02, 3.253E-02, 3.275E-02, 3.298E-02, 3.320E-02,
     3 3.343E-02, 3.366E-02, 3.389E-02, 3.412E-02, 3.435E-02, 3.455E-02,
     4 3.475E-02, 3.495E-02, 3.515E-02, 3.535E-02, 3.555E-02, 3.573E-02,
     5 3.593E-02, 3.612E-02, 3.625E-02, 3.628E-02, 3.631E-02, 3.634E-02,
     6 3.637E-02, 3.639E-02, 3.641E-02, 3.643E-02, 3.646E-02, 3.646E-02,
     7 3.636E-02, 3.623E-02, 3.611E-02, 3.599E-02/                      
      DATA (X(I),I= 2501, 2600)/                                        
     1 3.586E-02, 3.572E-02, 3.559E-02, 3.545E-02, 3.531E-02, 3.509E-02,
     2 3.481E-02, 3.453E-02, 3.425E-02, 3.398E-02, 3.369E-02, 3.341E-02,
     3 3.312E-02, 3.284E-02, 3.254E-02, 3.217E-02, 3.180E-02, 3.143E-02,
     4 3.106E-02, 3.069E-02, 3.031E-02, 2.994E-02, 2.956E-02, 2.919E-02,
     5 2.882E-02, 2.845E-02, 2.808E-02, 2.771E-02, 2.734E-02, 2.696E-02,
     6 2.660E-02, 2.622E-02, 2.585E-02, 2.549E-02, 2.512E-02, 2.476E-02,
     7 2.440E-02, 2.404E-02, 2.368E-02, 2.332E-02, 2.297E-02, 2.261E-02,
     8 2.225E-02, 2.193E-02, 2.164E-02, 2.135E-02, 2.106E-02, 2.076E-02,
     9 2.048E-02, 2.019E-02, 1.990E-02, 1.962E-02, 1.935E-02, 1.916E-02,
     & 1.898E-02, 1.881E-02, 1.863E-02, 1.846E-02, 1.828E-02, 1.811E-02,
     1 1.794E-02, 1.777E-02, 1.764E-02, 1.757E-02, 1.749E-02, 1.742E-02,
     2 1.735E-02, 1.728E-02, 1.721E-02, 1.714E-02, 1.708E-02, 1.701E-02,
     3 1.699E-02, 1.699E-02, 1.699E-02, 1.699E-02, 1.699E-02, 1.699E-02,
     4 1.699E-02, 1.699E-02, 1.699E-02, 1.699E-02, 1.700E-02, 1.702E-02,
     5 1.703E-02, 1.704E-02, 1.706E-02, 1.707E-02, 1.708E-02, 1.709E-02,
     6 1.710E-02, 1.710E-02, 1.706E-02, 1.701E-02, 1.696E-02, 1.692E-02,
     7 1.687E-02, 1.683E-02, 1.678E-02, 1.673E-02/                      
      DATA (X(I),I= 2601, 2700)/                                        
     1 1.668E-02, 1.661E-02, 1.651E-02, 1.642E-02, 1.632E-02, 1.622E-02,
     2 1.612E-02, 1.602E-02, 1.592E-02, 1.582E-02, 1.572E-02, 1.560E-02,
     3 1.545E-02, 1.531E-02, 1.517E-02, 1.503E-02, 1.489E-02, 1.474E-02,
     4 1.460E-02, 1.446E-02, 1.432E-02, 1.420E-02, 1.408E-02, 1.397E-02,
     5 1.386E-02, 1.375E-02, 1.363E-02, 1.352E-02, 1.341E-02, 1.329E-02,
     6 1.318E-02, 1.313E-02, 1.310E-02, 1.308E-02, 1.305E-02, 1.303E-02,
     7 1.300E-02, 1.298E-02, 1.295E-02, 1.292E-02, 1.290E-02, 1.293E-02,
     8 1.297E-02, 1.302E-02, 1.307E-02, 1.311E-02, 1.316E-02, 1.320E-02,
     9 1.325E-02, 1.330E-02, 1.334E-02, 1.341E-02, 1.349E-02, 1.357E-02,
     & 1.366E-02, 1.374E-02, 1.382E-02, 1.390E-02, 1.398E-02, 1.406E-02,
     1 1.414E-02, 1.421E-02, 1.427E-02, 1.433E-02, 1.438E-02, 1.444E-02,
     2 1.450E-02, 1.456E-02, 1.462E-02, 1.467E-02, 1.473E-02, 1.475E-02,
     3 1.474E-02, 1.473E-02, 1.472E-02, 1.471E-02, 1.470E-02, 1.468E-02,
     4 1.467E-02, 1.466E-02, 1.465E-02, 1.461E-02, 1.452E-02, 1.442E-02,
     5 1.433E-02, 1.423E-02, 1.414E-02, 1.405E-02, 1.395E-02, 1.386E-02,
     6 1.377E-02, 1.367E-02, 1.356E-02, 1.344E-02, 1.333E-02, 1.321E-02,
     7 1.310E-02, 1.298E-02, 1.287E-02, 1.275E-02/                      
      DATA (X(I),I= 2701, 2800)/                                        
     1 1.264E-02, 1.252E-02, 1.236E-02, 1.220E-02, 1.204E-02, 1.187E-02,
     2 1.171E-02, 1.155E-02, 1.138E-02, 1.122E-02, 1.106E-02, 1.089E-02,
     3 1.072E-02, 1.055E-02, 1.038E-02, 1.021E-02, 1.004E-02, 9.872E-03,
     4 9.701E-03, 9.531E-03, 9.361E-03, 9.190E-03, 9.029E-03, 8.896E-03,
     5 8.763E-03, 8.634E-03, 8.503E-03, 8.370E-03, 8.240E-03, 8.108E-03,
     6 7.977E-03, 7.847E-03, 7.717E-03, 7.622E-03, 7.540E-03, 7.457E-03,
     7 7.373E-03, 7.291E-03, 7.209E-03, 7.126E-03, 7.041E-03, 6.961E-03,
     8 6.878E-03, 6.813E-03, 6.782E-03, 6.751E-03, 6.721E-03, 6.690E-03,
     9 6.658E-03, 6.628E-03, 6.599E-03, 6.567E-03, 6.536E-03, 6.508E-03,
     & 6.499E-03, 6.495E-03, 6.493E-03, 6.490E-03, 6.488E-03, 6.484E-03,
     1 6.480E-03, 6.478E-03, 6.474E-03, 6.470E-03, 6.471E-03, 6.473E-03,
     2 6.476E-03, 6.480E-03, 6.482E-03, 6.486E-03, 6.489E-03, 6.493E-03,
     3 6.496E-03, 6.499E-03, 6.501E-03, 6.488E-03, 6.465E-03, 6.444E-03,
     4 6.422E-03, 6.401E-03, 6.381E-03, 6.359E-03, 6.337E-03, 6.316E-03,
     5 6.294E-03, 6.266E-03, 6.203E-03, 6.135E-03, 6.067E-03, 6.002E-03,
     6 5.932E-03, 5.867E-03, 5.797E-03, 5.732E-03, 5.664E-03, 5.596E-03,
     7 5.528E-03, 5.457E-03, 5.388E-03, 5.318E-03/                      
      DATA (X(I),I= 2801, 2900)/                                        
     1 5.248E-03, 5.177E-03, 5.107E-03, 5.036E-03, 4.966E-03, 4.895E-03,
     2 4.825E-03, 4.781E-03, 4.755E-03, 4.729E-03, 4.703E-03, 4.675E-03,
     3 4.648E-03, 4.622E-03, 4.595E-03, 4.569E-03, 4.542E-03, 4.516E-03,
     4 4.514E-03, 4.517E-03, 4.520E-03, 4.523E-03, 4.527E-03, 4.530E-03,
     5 4.533E-03, 4.539E-03, 4.541E-03, 4.545E-03, 4.550E-03, 4.568E-03,
     6 4.588E-03, 4.609E-03, 4.628E-03, 4.649E-03, 4.669E-03, 4.689E-03,
     7 4.710E-03, 4.731E-03, 4.750E-03, 4.771E-03, 4.796E-03, 4.822E-03,
     8 4.847E-03, 4.869E-03, 4.896E-03, 4.921E-03, 4.945E-03, 4.970E-03,
     9 4.995E-03, 5.020E-03, 5.038E-03, 5.040E-03, 5.038E-03, 5.037E-03,
     & 5.036E-03, 5.036E-03, 5.034E-03, 5.034E-03, 5.031E-03, 5.031E-03,
     1 5.031E-03, 5.019E-03, 4.979E-03, 4.934E-03, 4.892E-03, 4.848E-03,
     2 4.805E-03, 4.763E-03, 4.718E-03, 4.676E-03, 4.632E-03, 4.590E-03,
     3 4.541E-03, 4.475E-03, 4.405E-03, 4.336E-03, 4.268E-03, 4.198E-03,
     4 4.130E-03, 4.060E-03, 3.990E-03, 3.922E-03, 3.852E-03, 3.782E-03,
     5 3.715E-03, 3.646E-03, 3.577E-03, 3.508E-03, 3.439E-03, 3.370E-03,
     6 3.301E-03, 3.232E-03, 3.163E-03, 3.094E-03, 3.026E-03, 2.971E-03,
     7 2.919E-03, 2.868E-03, 2.816E-03, 2.764E-03/                      
      DATA (X(I),I= 2901, 3000)/                                        
     1 2.712E-03, 2.661E-03, 2.609E-03, 2.557E-03, 2.505E-03, 2.454E-03,
     2 2.416E-03, 2.386E-03, 2.356E-03, 2.326E-03, 2.297E-03, 2.267E-03,
     3 2.237E-03, 2.207E-03, 2.177E-03, 2.148E-03, 2.118E-03, 2.096E-03,
     4 2.087E-03, 2.078E-03, 2.070E-03, 2.061E-03, 2.052E-03, 2.043E-03,
     5 2.034E-03, 2.025E-03, 2.016E-03, 2.007E-03, 2.000E-03, 2.000E-03,
     6 2.001E-03, 2.002E-03, 2.003E-03, 2.004E-03, 2.005E-03, 2.006E-03,
     7 2.007E-03, 2.007E-03, 2.008E-03, 2.009E-03, 2.008E-03, 2.006E-03,
     8 2.003E-03, 2.001E-03, 1.999E-03, 1.997E-03, 1.994E-03, 1.992E-03,
     9 1.990E-03, 1.988E-03, 1.985E-03, 1.980E-03, 1.968E-03, 1.956E-03,
     & 1.944E-03, 1.932E-03, 1.919E-03, 1.907E-03, 1.895E-03, 1.883E-03,
     1 1.871E-03, 1.859E-03, 1.846E-03, 1.827E-03, 1.805E-03, 1.783E-03,
     2 1.761E-03, 1.740E-03, 1.718E-03, 1.696E-03, 1.674E-03, 1.652E-03,
     3 1.631E-03, 1.609E-03, 1.585E-03, 1.557E-03, 1.529E-03, 1.500E-03,
     4 1.472E-03, 1.444E-03, 1.416E-03, 1.388E-03, 1.359E-03, 1.331E-03,
     5 1.303E-03, 1.275E-03, 1.251E-03, 1.228E-03, 1.206E-03, 1.183E-03,
     6 1.161E-03, 1.139E-03, 1.116E-03, 1.094E-03, 1.072E-03, 1.049E-03,
     7 1.027E-03, 1.007E-03, 1.003E-03, 9.991E-04/                      
      DATA (X(I),I= 3001, 3080)/                                        
     1 9.959E-04, 9.926E-04, 9.891E-04, 9.857E-04, 9.826E-04, 9.790E-04,
     2 9.758E-04, 9.725E-04, 9.692E-04, 9.720E-04, 9.842E-04, 9.967E-04,
     3 1.009E-03, 1.022E-03, 1.034E-03, 1.047E-03, 1.059E-03, 1.071E-03,
     4 1.084E-03, 1.096E-03, 1.109E-03, 1.118E-03, 1.126E-03, 1.133E-03,
     5 1.141E-03, 1.148E-03, 1.156E-03, 1.163E-03, 1.171E-03, 1.178E-03,
     6 1.186E-03, 1.193E-03, 1.200E-03, 1.194E-03, 1.185E-03, 1.176E-03,
     7 1.166E-03, 1.157E-03, 1.148E-03, 1.138E-03, 1.129E-03, 1.120E-03,
     8 1.110E-03, 1.101E-03, 1.091E-03, 1.076E-03, 1.060E-03, 1.044E-03,
     9 1.028E-03, 1.012E-03, 9.955E-04, 9.794E-04, 9.632E-04, 9.473E-04,
     & 9.310E-04, 9.151E-04, 8.982E-04, 8.770E-04, 8.556E-04, 8.339E-04,
     1 8.121E-04, 7.907E-04, 7.689E-04, 7.471E-04, 7.255E-04, 7.038E-04,
     2 6.822E-04, 6.606E-04, 6.376E-04, 6.083E-04, 5.783E-04, 5.478E-04,
     3 5.177E-04, 4.875E-04, 4.574E-04, 4.272E-04, 3.969E-04, 3.668E-04,
     4 3.365E-04, 3.063E-04/                                            
C                                                                       
      DATA (Y(I),I=    1,  100)/                                        
     1 7.656E-13, 2.726E-13, 3.310E-14, 4.764E-13,-1.707E-13,-3.745E-13,
     2-1.019E-13, 3.745E-13, 2.038E-13, 4.764E-13, 4.076E-13,-3.310E-14,
     3 6.471E-13, 3.745E-13, 4.764E-13, 8.152E-13, 6.880E-14, 5.783E-13,
     4 3.745E-13,-1.157E-12, 3.745E-13, 3.414E-13, 1.707E-13, 5.452E-13,
     5-1.707E-13, 1.294E-12,-2.700E-13,-2.038E-13, 8.152E-13, 4.076E-13,
     6 5.452E-13, 1.906E-12,-4.076E-13, 8.152E-13,  .000E+00,-1.972E-12,
     7 2.181E-12, 1.906E-12, 6.620E-14, 1.564E-12,  .000E+00, 1.157E-12,
     8-4.076E-13, 2.038E-12,-1.223E-12,  .000E+00, 2.247E-12, 1.498E-12,
     9 1.839E-12, 6.828E-13, 6.828E-13, 1.498E-12, 4.076E-13, 4.738E-13,
     & 1.498E-12, 4.076E-13, 8.152E-13, 6.828E-13,  .000E+00,-6.828E-13,
     1 1.906E-12, 1.498E-12, 1.906E-12,-8.152E-13, 1.773E-12, 1.498E-12,
     2 5.442E-12, 1.630E-12, 4.076E-12, 1.895E-12, 1.895E-12, 1.101E-12,
     3-1.366E-12,  .000E+00, 1.916E-12, 7.072E-12,-2.181E-12,-4.097E-12,
     4 3.526E-12,-5.992E-12, 3.261E-12, 4.362E-12, 5.442E-12, 1.366E-12,
     5  .000E+00,-1.324E-13, 2.313E-12, 1.223E-12,-4.076E-13, 2.181E-12,
     6  .000E+00, 1.223E-12, 2.038E-12, 1.498E-12, 4.076E-13, 3.414E-13,
     7-4.076E-13, 1.839E-12, 2.313E-12,-1.324E-13/                      
      DATA (Y(I),I=  101,  200)/                                        
     1 1.564E-12, 8.152E-13, 4.738E-13, 1.906E-12, 1.498E-12,-6.620E-14,
     2 8.152E-13, 1.702E-12, 4.076E-13,-8.866E-13, 7.490E-13, 2.038E-13,
     3 9.528E-13,-4.076E-13, 8.152E-13,-2.038E-13, 2.588E-12, 6.114E-13,
     4  .000E+00,  .000E+00, 1.630E-12,-7.490E-13, 2.313E-12,-6.828E-13,
     5 3.414E-13, 6.166E-13, 7.490E-13, 1.090E-12,-4.076E-13, 3.128E-12,
     6  .000E+00, 2.655E-12, 2.752E-13, 8.152E-13, 2.446E-12, 1.498E-12,
     7 2.313E-12, 4.351E-12, 2.588E-12, 2.313E-12,-4.076E-13,-9.476E-13,
     8 9.580E-13, 2.752E-13, 1.223E-12, 1.630E-12, 6.257E-12, 3.944E-12,
     9 2.446E-12,  .000E+00, 2.313E-12, 8.152E-13, 5.442E-12, 5.177E-12,
     & 3.811E-12, 2.648E-13, 8.152E-13, 6.807E-12,  .000E+00, 3.546E-12,
     1 2.996E-12, 6.257E-12,  .000E+00,-4.626E-12,  .000E+00, 2.648E-13,
     2 4.362E-12, 6.522E-12, 3.261E-12,-9.783E-12, 9.253E-12, 1.198E-11,
     3 9.253E-12,-9.253E-12, 3.261E-12,-8.723E-12,-1.084E-11, 2.071E-11,
     4 2.503E-11, 1.419E-11,-8.723E-12,-9.783E-12, 1.957E-11, 1.957E-11,
     5 1.198E-11, 1.198E-11, 9.783E-12,-5.463E-12, 5.992E-12, 1.088E-11,
     6 8.723E-12, 9.253E-12,-1.630E-12, 5.463E-12, 5.992E-12, 6.257E-12,
     7 1.101E-12, 1.366E-12, 5.992E-12, 8.152E-13/                      
      DATA (Y(I),I=  201,  300)/                                        
     1 4.076E-12, 4.076E-12,-1.630E-12, 7.072E-12, 5.177E-12, 2.313E-12,
     2 3.811E-12,-1.630E-12, 2.996E-12, 7.072E-12,-1.366E-12, 3.393E-12,
     3 1.498E-12, 2.313E-12,-6.828E-13, 2.996E-12, 1.366E-12, 7.072E-12,
     4 1.366E-12, 2.181E-12,-2.181E-12, 4.076E-12,  .000E+00, 4.076E-12,
     5-8.152E-13,-1.630E-12, 2.181E-12, 3.811E-12, 2.446E-12, 2.731E-12,
     6 2.996E-12, 4.626E-12, 7.623E-12,-1.895E-12, 2.996E-12,-2.648E-13,
     7-1.630E-12, 3.832E-12, 5.992E-12, 7.623E-12, 7.051E-12,  .000E+00,
     8 8.723E-12, 2.731E-12, 2.160E-12, 9.253E-12, 1.688E-11, 1.361E-11,
     9 5.713E-13, 1.577E-11, 1.851E-11,-1.630E-12, 1.361E-11,  .000E+00,
     & 7.051E-12, 1.525E-11, 5.992E-12, 6.522E-12,-8.723E-12, 1.059E-12,
     1 3.261E-12,-1.198E-11, 1.357E-11, 1.904E-11, 5.463E-12, 1.304E-11,
     2-5.463E-12,-6.522E-12, 3.261E-12,-1.059E-12, 1.198E-11, 4.320E-12,
     3 1.304E-11, 6.522E-12,-6.522E-12, 6.522E-12, 4.353E-11,-2.118E-12,
     4 3.049E-11, 2.609E-11,  .000E+00, 8.807E-12, 4.353E-11, 5.446E-11,
     5-4.403E-12,-3.049E-11, 6.522E-12,-8.640E-12, 5.217E-11,-4.403E-12,
     6 1.957E-11,  .000E+00, 1.851E-11, 3.913E-11,-5.463E-12,-1.851E-11,
     7 6.522E-12, 6.522E-12,-6.522E-12, 4.403E-12/                      
      DATA (Y(I),I=  301,  400)/                                        
     1  .000E+00, 2.829E-11, 1.304E-11, 7.581E-12,-1.304E-11, 1.851E-11,
     2 5.463E-12, 1.198E-11,-7.581E-12, 2.177E-11, 1.093E-11, 1.851E-11,
     3 1.304E-11,-2.202E-12,  .000E+00, 1.957E-11,-6.522E-12, 1.304E-11,
     4 2.071E-11, 1.304E-11, 6.522E-12, 2.503E-11,-6.522E-12, 1.851E-11,
     5 1.851E-11, 6.522E-12, 8.723E-12, 1.525E-11, 8.723E-12, 6.522E-12,
     6-8.723E-12, 1.525E-11, 1.851E-11, 1.304E-11, 1.525E-11, 1.304E-11,
     7 9.783E-12, 6.522E-12, 2.503E-11,  .000E+00,-5.463E-12,-1.059E-12,
     8 1.525E-11, 5.463E-12, 2.829E-11,-3.261E-12, 1.525E-11,-5.463E-12,
     9-3.261E-12, 8.723E-12, 1.198E-11, 9.783E-12, 7.664E-12, 5.463E-12,
     & 3.049E-11, 2.283E-11, 8.723E-12, 2.202E-12, 5.463E-12,-6.522E-12,
     1 3.049E-11, 6.522E-12, 2.503E-11, 3.489E-11, 2.943E-11,-1.059E-12,
     2 5.992E-11, 3.261E-11, 1.957E-11,-1.304E-11, 2.609E-11, 6.098E-11,
     3 5.217E-11,-1.516E-11, 2.397E-11, 4.403E-12, 3.049E-11,-4.403E-12,
     4 4.353E-11, 2.609E-11,-2.185E-11, 1.093E-11, 2.609E-11, 2.609E-11,
     5 7.191E-11,-4.237E-12, 3.701E-11,-1.516E-11, 8.707E-11, 4.794E-11,
     6 6.098E-11, 3.913E-11, 7.402E-11, 1.516E-11,-3.701E-11, 5.006E-11,
     7-3.278E-11, 1.093E-11,-2.118E-12,-2.397E-11/                      
      DATA (Y(I),I=  401,  500)/                                        
     1 3.701E-11, 8.807E-12,-2.821E-11, 3.489E-11,-8.807E-12,-1.516E-11,
     2-3.489E-11, 1.516E-11,-2.118E-12, 2.397E-11,-1.304E-11, 2.609E-11,
     3-2.118E-12, 1.304E-11, 3.489E-11, 3.489E-11, 1.304E-11, 3.489E-11,
     4-1.304E-11, 3.278E-11, 1.093E-11, 1.093E-11, 1.304E-11, 2.118E-12,
     5 3.489E-11, 1.304E-11, 4.403E-12, 2.168E-11, 5.446E-11, 2.397E-11,
     6 1.304E-11, 5.658E-11, 1.093E-11, 3.489E-11, 2.397E-11,-3.049E-11,
     7 4.353E-11, 2.397E-11, 3.489E-11, 8.807E-12, 1.093E-11, 1.093E-11,
     8 4.353E-11, 2.397E-11, 6.522E-12, 5.446E-11, 6.522E-12, 1.093E-11,
     9 4.353E-11, 3.278E-11, 3.049E-11, 6.522E-12, 2.609E-11, 4.142E-11,
     & 4.353E-11, 6.522E-12, 5.006E-11, 3.701E-11,  .000E+00, 3.049E-11,
     1 2.185E-11, 1.093E-11, 3.489E-11, 2.837E-11, 2.821E-11, 2.397E-11,
     2 2.821E-11, 5.886E-11,-3.701E-11, 5.006E-11, 1.304E-11,-2.397E-11,
     3-1.304E-11, 4.794E-11,-2.118E-12, 8.807E-12,  .000E+00,-1.304E-11,
     4-2.185E-11,-2.609E-11, 7.402E-11, 3.066E-11,  .000E+00, 2.609E-11,
     5 6.098E-11, 8.283E-11, 6.522E-11, 7.402E-11, 4.794E-11, 7.402E-11,
     6 9.587E-11, 1.220E-10, 1.480E-10,  .000E+00,-9.587E-11,-2.185E-11,
     7 1.220E-10, 1.523E-10, 9.587E-11, 2.609E-11/                      
      DATA (Y(I),I=  501,  600)/                                        
     1 1.480E-10, 4.370E-11, 7.826E-11, 3.456E-11, 7.826E-11,-4.370E-11,
     2 1.135E-10, 4.370E-11, 2.524E-10,-8.473E-12, 8.473E-12, 4.370E-11,
     3-2.609E-11,-5.217E-11, 1.043E-10, 4.370E-11, 1.761E-11,  .000E+00,
     4 6.979E-11,-2.185E-11, 9.587E-11, 4.237E-12, 1.177E-10, 9.587E-11,
     5 9.587E-11, 4.794E-11,-1.761E-11, 5.674E-11, 3.066E-11, 9.164E-11,
     6-6.098E-11,-2.609E-11,-2.609E-11, 1.001E-10,-2.609E-11,-1.001E-10,
     7-6.522E-11,-3.913E-11,-1.728E-11, 6.098E-11,-7.859E-11, 1.043E-10,
     8 1.304E-11, 1.304E-11, 1.043E-10, 2.185E-11, 4.337E-11,-6.522E-11,
     9 8.283E-11, 4.237E-12, 4.237E-12, 4.237E-12, 8.283E-11, 5.674E-11,
     &-3.032E-11,  .000E+00, 4.337E-11, 7.402E-11, 1.761E-11, 6.098E-11,
     1 1.304E-11, 1.304E-11, 1.089E-10, 2.185E-11, 1.761E-11, 6.522E-11,
     2 9.587E-11, 8.807E-12, 1.001E-10, 9.587E-11,-1.728E-11, 1.089E-10,
     3 9.587E-11, 1.304E-11,-3.032E-11, 2.609E-11, 1.220E-10, 2.609E-11,
     4 2.185E-11, 5.217E-11,-4.237E-12, 2.185E-11,-2.609E-11, 6.979E-11,
     5 2.185E-11,-1.001E-10, 1.043E-10,-2.185E-11, 1.917E-10, 6.131E-11,
     6-2.609E-11,-9.587E-11, 2.609E-11, 2.609E-11, 1.220E-10, 4.370E-11,
     7 9.140E-12, 1.043E-10, 2.002E-10,-8.473E-12/                      
      DATA (Y(I),I=  601,  700)/                                        
     1 1.741E-10, 1.220E-10, 2.002E-10,-4.370E-11, 1.917E-10,-8.473E-12,
     2  .000E+00, 2.002E-10,-6.065E-11, 1.565E-10, 1.565E-10,-8.473E-12,
     3 1.396E-10, 6.065E-11, 8.740E-11, 6.065E-11, 2.439E-10,  .000E+00,
     4 8.740E-11,-8.473E-12, 8.740E-11, 4.370E-11, 1.043E-10, 1.043E-10,
     5 1.043E-10,-1.396E-10, 6.065E-11, 9.587E-11, 9.587E-11, 1.565E-10,
     6 8.473E-12, 1.761E-11, 2.439E-10, 1.657E-10, 1.043E-10, 1.043E-10,
     7 3.574E-10, 9.587E-11, 2.002E-10, 9.587E-11,  .000E+00, 4.370E-11,
     8-2.609E-11, 1.480E-10, 2.700E-10, 1.396E-10, 9.587E-11, 1.826E-10,
     9 3.523E-11,-1.761E-11, 1.565E-10, 9.587E-11,-2.609E-11, 1.826E-10,
     & 1.220E-10, 4.370E-11, 8.473E-12, 1.135E-10, 1.761E-11, 5.217E-11,
     1 1.220E-10,-2.609E-11, 1.304E-10, 1.826E-10,-8.473E-12,-2.609E-11,
     2 1.304E-10,  .000E+00, 4.370E-11,-5.217E-11, 1.657E-10,-1.220E-10,
     3-5.217E-11, 1.761E-11, 7.826E-11, 2.609E-11, 4.370E-11, 9.587E-11,
     4 2.785E-10, 1.396E-10, 7.826E-11, 1.043E-10, 1.480E-10, 1.565E-10,
     5 1.128E-10,  .000E+00, 2.002E-10,  .000E+00,-1.761E-11, 9.587E-11,
     6  .000E+00, 2.002E-10,-1.761E-11, 1.135E-10,-1.220E-10,-1.480E-10,
     7-5.217E-11,-8.473E-12,-8.473E-12, 8.740E-11/                      
      DATA (Y(I),I=  701,  800)/                                        
     1 2.002E-10, 5.217E-11,-1.396E-10, 1.565E-10,-1.396E-10,-1.311E-10,
     2 1.917E-10, 1.917E-10, 8.473E-12, 3.523E-11, 1.043E-10, 3.483E-10,
     3 9.587E-11, 2.876E-10, 5.217E-11, 2.961E-10, 4.004E-10,-6.912E-11,
     4 2.961E-10, 1.396E-10, 3.523E-11,  .000E+00, 1.043E-10, 3.483E-10,
     5 1.396E-10, 3.130E-10, 1.213E-10,-1.695E-11, 4.357E-10, 3.835E-10,
     6 3.835E-10, 5.217E-11, 1.043E-10,-1.695E-11, 5.400E-10, 1.043E-10,
     7 1.695E-11, 5.217E-11, 1.396E-10, 1.396E-10,-5.231E-10,-2.791E-10,
     8 5.217E-11, 2.439E-10, 1.695E-11, 7.045E-11, 3.483E-10, 1.213E-10,
     9-8.740E-11, 3.523E-11, 2.270E-10,  .000E+00,-3.523E-11, 8.740E-11,
     & 1.565E-10, 2.439E-10, 8.740E-11,-6.912E-11, 7.045E-11,-2.609E-10,
     1-3.523E-11, 3.523E-11, 9.587E-11, 9.587E-11, 1.565E-10, 7.893E-11,
     2 7.893E-11, 9.587E-11, 1.396E-10, 1.917E-10, 1.565E-10, 2.087E-10,
     3 2.354E-10, 2.002E-10,  .000E+00, 2.087E-10, 2.961E-10, 9.587E-11,
     4 2.524E-10, 1.043E-10, 6.912E-11, 3.835E-10,-5.217E-11,-3.523E-11,
     5-2.609E-10, 1.565E-10,-1.213E-10, 2.961E-10, 4.526E-10, 2.754E-06,
     6 1.907E-05, 3.104E-05, 3.136E-05, 3.152E-05, 3.186E-05, 3.213E-05,
     7 3.229E-05, 3.206E-05, 3.156E-05, 3.063E-05/                      
      DATA (Y(I),I=  801,  900)/                                        
     1 3.098E-05, 3.197E-05, 3.271E-05, 3.315E-05, 3.262E-05, 3.201E-05,
     2 3.129E-05, 3.148E-05, 3.206E-05, 3.175E-05, 3.148E-05, 3.167E-05,
     3 3.159E-05, 3.120E-05, 3.117E-05, 3.109E-05, 3.041E-05, 2.995E-05,
     4 3.011E-05, 3.004E-05, 2.972E-05, 2.933E-05, 2.887E-05, 2.801E-05,
     5 2.731E-05, 2.735E-05, 2.656E-05, 2.712E-05, 2.576E-05, 2.565E-05,
     6 2.449E-05, 2.450E-05, 2.454E-05, 2.414E-05, 2.488E-05, 2.413E-05,
     7 2.297E-05, 2.298E-05, 2.335E-05, 2.259E-05, 2.142E-05, 2.257E-05,
     8 2.259E-05, 2.220E-05, 2.259E-05, 2.336E-05, 2.299E-05, 2.262E-05,
     9 2.298E-05, 2.298E-05, 2.298E-05, 2.337E-05, 2.414E-05, 2.491E-05,
     & 2.570E-05, 2.492E-05, 2.531E-05, 2.567E-05, 2.647E-05, 2.839E-05,
     1 2.916E-05, 2.917E-05, 2.916E-05, 2.956E-05, 3.033E-05, 3.110E-05,
     2 3.108E-05, 3.071E-05, 3.226E-05, 3.303E-05, 3.302E-05, 3.417E-05,
     3 3.419E-05, 3.458E-05, 3.458E-05, 3.457E-05, 3.613E-05, 3.769E-05,
     4 3.768E-05, 3.845E-05, 3.843E-05, 3.882E-05, 3.920E-05, 3.959E-05,
     5 3.998E-05, 4.037E-05, 4.036E-05, 4.074E-05, 4.074E-05, 4.036E-05,
     6 4.115E-05, 4.192E-05, 4.192E-05, 4.269E-05, 4.270E-05, 4.346E-05,
     7 4.346E-05, 4.346E-05, 4.463E-05, 4.423E-05/                      
      DATA (Y(I),I=  901, 1000)/                                        
     1 4.502E-05, 4.539E-05, 4.501E-05, 4.465E-05, 4.388E-05, 4.503E-05,
     2 4.578E-05, 4.617E-05, 4.657E-05, 4.657E-05, 4.617E-05, 4.657E-05,
     3 4.655E-05, 4.695E-05, 4.808E-05, 4.807E-05, 4.768E-05, 4.771E-05,
     4 4.807E-05, 4.808E-05, 4.808E-05, 4.731E-05, 4.731E-05, 4.772E-05,
     5 4.808E-05, 4.846E-05, 4.769E-05, 4.807E-05, 4.846E-05, 4.847E-05,
     6 4.845E-05, 4.885E-05, 4.886E-05, 4.848E-05, 4.810E-05, 4.848E-05,
     7 4.769E-05, 4.773E-05, 4.656E-05, 4.690E-05, 4.770E-05, 4.730E-05,
     8 4.690E-05, 4.728E-05, 4.687E-05, 4.728E-05, 4.649E-05, 4.730E-05,
     9 4.690E-05, 4.766E-05, 4.804E-05, 4.727E-05, 4.649E-05, 4.727E-05,
     & 4.647E-05, 4.723E-05, 4.760E-05, 4.800E-05, 4.836E-05, 4.762E-05,
     1 4.760E-05, 4.834E-05, 4.837E-05, 4.796E-05, 4.796E-05, 4.796E-05,
     2 4.876E-05, 4.955E-05, 5.030E-05, 5.067E-05, 5.106E-05, 5.183E-05,
     3 5.104E-05, 5.185E-05, 5.224E-05, 5.340E-05, 5.301E-05, 5.340E-05,
     4 5.456E-05, 5.532E-05, 5.532E-05, 5.531E-05, 5.608E-05, 5.762E-05,
     5 5.799E-05, 5.877E-05, 5.837E-05, 5.839E-05, 5.878E-05, 5.916E-05,
     6 6.032E-05, 6.109E-05, 6.226E-05, 6.342E-05, 6.305E-05, 6.305E-05,
     7 6.265E-05, 6.226E-05, 6.298E-05, 6.452E-05/                      
      DATA (Y(I),I= 1001, 1100)/                                        
     1 6.531E-05, 6.572E-05, 6.572E-05, 6.614E-05, 6.611E-05, 6.574E-05,
     2 6.690E-05, 6.648E-05, 6.688E-05, 6.688E-05, 6.764E-05, 6.841E-05,
     3 6.843E-05, 6.918E-05, 6.919E-05, 6.959E-05, 6.955E-05, 6.993E-05,
     4 6.990E-05, 7.031E-05, 6.914E-05, 6.835E-05, 6.912E-05, 7.105E-05,
     5 7.222E-05, 7.261E-05, 7.258E-05, 7.258E-05, 7.258E-05, 7.260E-05,
     6 7.179E-05, 7.257E-05, 7.180E-05, 7.142E-05, 7.181E-05, 7.217E-05,
     7 7.256E-05, 7.217E-05, 7.217E-05, 7.219E-05, 7.256E-05, 7.180E-05,
     8 7.178E-05, 7.255E-05, 7.216E-05, 7.175E-05, 7.175E-05, 7.137E-05,
     9 7.177E-05, 7.214E-05, 7.175E-05, 7.134E-05, 7.094E-05, 7.014E-05,
     & 7.014E-05, 7.016E-05, 7.013E-05, 6.937E-05, 6.938E-05, 6.900E-05,
     1 6.863E-05, 6.860E-05, 6.859E-05, 6.741E-05, 6.700E-05, 6.700E-05,
     2 6.740E-05, 6.742E-05, 6.704E-05, 6.665E-05, 6.549E-05, 6.432E-05,
     3 6.427E-05, 6.463E-05, 6.581E-05, 6.662E-05, 6.625E-05, 6.552E-05,
     4 6.473E-05, 6.473E-05, 6.471E-05, 6.469E-05, 6.391E-05, 6.433E-05,
     5 6.475E-05, 6.513E-05, 6.554E-05, 6.552E-05, 6.592E-05, 6.552E-05,
     6 6.553E-05, 6.476E-05, 6.440E-05, 6.483E-05, 6.443E-05, 6.443E-05,
     7 6.522E-05, 6.522E-05, 6.599E-05, 6.599E-05/                      
      DATA (Y(I),I= 1101, 1200)/                                        
     1 6.560E-05, 6.520E-05, 6.521E-05, 6.558E-05, 6.556E-05, 6.557E-05,
     2 6.596E-05, 6.596E-05, 6.596E-05, 6.634E-05, 6.595E-05, 6.555E-05,
     3 6.555E-05, 6.594E-05, 6.515E-05, 6.553E-05, 6.590E-05, 6.551E-05,
     4 6.474E-05, 6.549E-05, 6.589E-05, 6.628E-05, 6.709E-05, 6.672E-05,
     5 6.634E-05, 6.555E-05, 6.478E-05, 6.475E-05, 6.395E-05, 6.472E-05,
     6 6.472E-05, 6.510E-05, 6.509E-05, 6.508E-05, 6.511E-05, 6.434E-05,
     7 6.357E-05, 6.356E-05, 6.356E-05, 6.278E-05, 6.239E-05, 6.161E-05,
     8 6.199E-05, 6.163E-05, 6.161E-05, 6.161E-05, 6.085E-05, 5.931E-05,
     9 5.888E-05, 5.888E-05, 5.846E-05, 5.805E-05, 5.809E-05, 5.890E-05,
     & 5.892E-05, 5.896E-05, 5.823E-05, 5.746E-05, 5.709E-05, 5.708E-05,
     1 5.707E-05, 5.668E-05, 5.709E-05, 5.666E-05, 5.627E-05, 5.628E-05,
     2 5.552E-05, 5.550E-05, 5.552E-05, 5.588E-05, 5.627E-05, 5.588E-05,
     3 5.627E-05, 5.591E-05, 5.477E-05, 5.515E-05, 5.517E-05, 5.558E-05,
     4 5.599E-05, 5.591E-05, 5.668E-05, 5.507E-05, 5.429E-05, 5.311E-05,
     5 5.279E-05, 5.281E-05, 5.402E-05, 5.406E-05, 5.485E-05, 5.562E-05,
     6 5.562E-05, 5.481E-05, 5.484E-05, 5.483E-05, 5.443E-05, 5.404E-05,
     7 5.365E-05, 5.442E-05, 5.444E-05, 5.521E-05/                      
      DATA (Y(I),I= 1201, 1300)/                                        
     1 5.481E-05, 5.443E-05, 5.363E-05, 5.286E-05, 5.283E-05, 5.358E-05,
     2 5.356E-05, 5.317E-05, 5.240E-05, 5.279E-05, 5.240E-05, 5.241E-05,
     3 5.321E-05, 5.322E-05, 5.327E-05, 5.329E-05, 5.331E-05, 5.329E-05,
     4 5.290E-05, 5.251E-05, 5.213E-05, 5.135E-05, 5.057E-05, 5.056E-05,
     5 5.056E-05, 5.094E-05, 5.133E-05, 5.133E-05, 5.132E-05, 5.133E-05,
     6 5.054E-05, 4.934E-05, 4.815E-05, 4.733E-05, 4.735E-05, 4.777E-05,
     7 4.819E-05, 4.784E-05, 4.825E-05, 4.790E-05, 4.830E-05, 4.793E-05,
     8 4.873E-05, 4.874E-05, 4.790E-05, 4.709E-05, 4.627E-05, 4.467E-05,
     9 4.427E-05, 4.469E-05, 4.434E-05, 4.431E-05, 4.473E-05, 4.477E-05,
     & 4.365E-05, 4.369E-05, 4.527E-05, 4.528E-05, 4.603E-05, 4.641E-05,
     1 4.520E-05, 4.480E-05, 4.363E-05, 4.404E-05, 4.444E-05, 4.408E-05,
     2 4.448E-05, 4.452E-05, 4.336E-05, 4.184E-05, 4.223E-05, 4.263E-05,
     3 4.301E-05, 4.262E-05, 4.299E-05, 4.143E-05, 4.105E-05, 3.989E-05,
     4 3.995E-05, 3.919E-05, 3.999E-05, 4.118E-05, 4.039E-05, 3.997E-05,
     5 3.880E-05, 3.762E-05, 3.645E-05, 3.493E-05, 3.337E-05, 3.222E-05,
     6 3.296E-05, 3.412E-05, 3.255E-05, 3.257E-05, 3.103E-05, 3.029E-05,
     7 2.876E-05, 2.878E-05, 2.800E-05, 2.883E-05/                      
      DATA (Y(I),I= 1301, 1400)/                                        
     1 2.881E-05, 2.806E-05, 2.729E-05, 2.650E-05, 2.574E-05, 2.380E-05,
     2 2.262E-05, 2.108E-05, 2.031E-05, 1.842E-05, 1.765E-05, 1.648E-05,
     3 1.646E-05, 1.685E-05, 1.529E-05, 1.451E-05, 1.258E-05, 1.104E-05,
     4 9.506E-06, 9.546E-06, 8.010E-06, 6.431E-06, 4.851E-06, 4.067E-06,
     5 2.472E-06, 8.919E-07,-2.698E-07,-2.356E-07,-6.024E-07,-1.335E-06,
     6-2.450E-06,-3.996E-06,-5.582E-06,-6.779E-06,-7.956E-06,-9.542E-06,
     7-1.072E-05,-1.150E-05,-1.227E-05,-1.305E-05,-1.382E-05,-1.500E-05,
     8-1.580E-05,-1.738E-05,-1.779E-05,-1.823E-05,-1.900E-05,-2.050E-05,
     9-2.086E-05,-2.159E-05,-2.191E-05,-2.268E-05,-2.308E-05,-2.276E-05,
     &-2.393E-05,-2.551E-05,-2.669E-05,-2.709E-05,-2.632E-05,-2.709E-05,
     1-2.709E-05,-2.749E-05,-3.016E-05,-2.709E-05,-2.709E-05,-2.709E-05,
     2-2.708E-05,-2.709E-05,-2.709E-05,-2.709E-05,-2.709E-05,-2.709E-05,
     3-2.709E-05,-2.709E-05,-2.709E-05,-3.113E-05,-2.709E-05,-2.709E-05,
     4-3.477E-05,-2.709E-05,-2.685E-05,-3.453E-05,-2.684E-05,-2.685E-05,
     5-3.065E-05,-2.684E-05,-2.684E-05,-3.065E-05,-2.685E-05,-2.685E-05,
     6-2.685E-05,-2.684E-05,-2.684E-05,-3.065E-05,-2.685E-05,-3.453E-05,
     7-2.685E-05,-2.685E-05,-2.684E-05,-2.685E-05/                      
      DATA (Y(I),I= 1401, 1500)/                                        
     1-2.684E-05,-2.684E-05,-2.685E-05,-3.086E-05,-3.466E-05,-3.467E-05,
     2-3.453E-05,-3.854E-05,-3.854E-05,-3.072E-05,-3.854E-05,-3.840E-05,
     3-3.854E-05,-3.840E-05,-3.452E-05,-4.221E-05,-3.840E-05,-4.221E-05,
     4-4.221E-05,-3.833E-05,-4.220E-05,-4.221E-05,-3.833E-05,-4.221E-05,
     5-4.220E-05,-4.221E-05,-4.221E-05,-3.833E-05,-3.833E-05,-3.833E-05,
     6-3.834E-05,-4.601E-05,-4.601E-05,-3.833E-05,-3.833E-05,-4.221E-05,
     7-4.221E-05,-4.601E-05,-4.221E-05,-4.221E-05,-4.221E-05,-4.626E-05,
     8-4.625E-05,-4.650E-05,-5.054E-05,-4.650E-05,-5.054E-05,-5.040E-05,
     9-4.650E-05,-5.041E-05,-5.027E-05,-4.637E-05,-4.636E-05,-5.041E-05,
     &-5.026E-05,-5.405E-05,-5.404E-05,-5.027E-05,-5.041E-05,-5.041E-05,
     1-4.637E-05,-5.027E-05,-5.027E-05,-5.432E-05,-5.028E-05,-5.419E-05,
     2-6.200E-05,-5.418E-05,-6.224E-05,-5.418E-05,-5.443E-05,-5.442E-05,
     3-6.248E-05,-6.248E-05,-5.480E-05,-5.480E-05,-6.249E-05,-6.248E-05,
     4-5.443E-05,-5.442E-05,-5.834E-05,-6.235E-05,-6.222E-05,-6.221E-05,
     5-5.429E-05,-5.819E-05,-5.452E-05,-5.429E-05,-5.429E-05,-6.220E-05,
     6-5.453E-05,-5.453E-05,-5.452E-05,-5.453E-05,-5.453E-05,-6.246E-05,
     7-5.477E-05,-5.845E-05,-5.477E-05,-5.477E-05/                      
      DATA (Y(I),I= 1501, 1600)/                                        
     1-5.478E-05,-5.453E-05,-4.671E-05,-4.672E-05,-4.633E-05,-4.633E-05,
     2-4.647E-05,-4.671E-05,-4.633E-05,-4.647E-05,-4.269E-05,-4.672E-05,
     3-4.671E-05,-4.671E-05,-4.671E-05,-4.671E-05,-4.671E-05,-4.695E-05,
     4-4.291E-05,-4.304E-05,-4.266E-05,-4.280E-05,-3.899E-05,-3.512E-05,
     5-3.875E-05,-3.488E-05,-3.107E-05,-2.720E-05,-2.720E-05,-2.719E-05,
     6-2.720E-05,-2.719E-05,-2.720E-05,-2.719E-05,-3.121E-05,-3.120E-05,
     7-3.121E-05,-2.353E-05,-2.755E-05,-1.961E-05,-2.730E-05,-2.730E-05,
     8-2.328E-05,-1.156E-05,-1.169E-05,-1.561E-05,-1.170E-05,-1.938E-05,
     9-1.951E-05,-1.975E-05,-1.574E-05,-1.975E-05,-1.951E-05,-1.951E-05,
     &-1.183E-05,-1.183E-05,-7.924E-06,-7.916E-06,-7.921E-06,-7.921E-06,
     1-7.924E-06,-7.925E-06,-1.194E-05,-7.919E-06,-1.169E-05,-7.920E-06,
     2-4.014E-06,-1.193E-05,-8.024E-06,-7.778E-06,-7.778E-06,-7.778E-06,
     3-7.778E-06,-7.540E-06,-1.145E-05,-1.145E-05,-1.145E-05,-3.770E-06,
     4-3.770E-06,-7.538E-06,-3.765E-06,-1.145E-05,-7.543E-06,-3.772E-06,
     5-3.772E-06,-3.768E-06,-3.769E-06,-3.769E-06,-3.769E-06,-3.767E-06,
     6-3.766E-06,-3.769E-06,-3.772E-06,-1.159E-05,-1.145E-05,-7.817E-06,
     7-7.815E-06,-7.816E-06,-1.563E-05,-7.577E-06/                      
      DATA (Y(I),I= 1601, 1700)/                                        
     1-7.570E-06,-1.525E-05,-7.328E-06,-7.572E-06,-7.574E-06,-1.525E-05,
     2-1.120E-05,-1.145E-05,-1.145E-05,-1.145E-05,-1.145E-05,-1.913E-05,
     3-1.145E-05,-1.145E-05,-1.145E-05,-1.145E-05,-1.145E-05,-1.145E-05,
     4-1.145E-05,-2.304E-05,-2.304E-05,-2.304E-05,-2.304E-05,-1.536E-05,
     5-1.536E-05,-1.536E-05,-2.304E-05,-2.304E-05,-1.924E-05,-1.923E-05,
     6-2.692E-05,-2.692E-05,-1.924E-05,-2.691E-05,-1.923E-05,-2.716E-05,
     7-2.328E-05,-2.716E-05,-3.096E-05,-3.096E-05,-3.096E-05,-3.120E-05,
     8-3.120E-05,-3.107E-05,-2.301E-05,-3.107E-05,-2.315E-05,-2.315E-05,
     9-2.315E-05,-2.301E-05,-2.301E-05,-3.069E-05,-2.301E-05,-3.069E-05,
     &-2.301E-05,-3.093E-05,-3.055E-05,-3.056E-05,-2.287E-05,-2.301E-05,
     1-3.069E-05,-3.093E-05,-3.093E-05,-3.069E-05,-2.301E-05,-2.301E-05,
     2-2.301E-05,-2.301E-05,-3.107E-05,-3.106E-05,-2.301E-05,-2.314E-05,
     3-3.083E-05,-3.083E-05,-3.107E-05,-2.706E-05,-3.083E-05,-2.681E-05,
     4-2.301E-05,-2.682E-05,-2.706E-05,-1.913E-05,-2.682E-05,-1.914E-05,
     5-2.277E-05,-1.913E-05,-1.522E-05,-1.509E-05,-1.522E-05,-2.290E-05,
     6-1.509E-05,-2.290E-05,-2.290E-05,-1.522E-05,-1.522E-05,-1.910E-05,
     7-1.522E-05,-1.522E-05,-1.155E-05,-1.155E-05/                      
      DATA (Y(I),I= 1701, 1800)/                                        
     1-1.156E-05,-1.142E-05,-7.541E-06,-7.536E-06,-7.544E-06,-1.142E-05,
     2-1.522E-05,-7.542E-06,-7.538E-06,-7.539E-06,-7.541E-06,-7.541E-06,
     3-7.545E-06,-7.538E-06,-3.636E-06, 1.426E-07,-3.494E-06,-3.633E-06,
     4-3.630E-06,-3.631E-06,-3.634E-06, 4.149E-07,-3.629E-06,-3.629E-06,
     5-3.633E-06,-3.632E-06,-3.634E-06,-3.628E-06,-3.385E-06, 4.292E-06,
     6 2.437E-07, 2.431E-07, 4.155E-06,-3.766E-06,-3.771E-06, 2.430E-07,
     7 2.438E-07, 3.915E-06, 3.909E-06, 7.824E-06, 3.913E-06, 3.911E-06,
     8 3.913E-06, 3.909E-06, 3.910E-06, 3.910E-06, 3.914E-06, 4.150E-06,
     9 1.184E-05, 1.184E-05, 1.183E-05, 1.108E-05, 1.031E-05, 9.561E-06,
     & 9.950E-06, 1.227E-05, 1.420E-05, 1.534E-05, 1.572E-05, 1.571E-05,
     1 1.492E-05, 1.490E-05, 1.445E-05, 1.442E-05, 1.525E-05, 1.487E-05,
     2 1.452E-05, 1.604E-05, 1.840E-05, 2.070E-05, 2.146E-05, 2.144E-05,
     3 2.105E-05, 2.104E-05, 2.101E-05, 2.100E-05, 2.175E-05, 2.095E-05,
     4 2.097E-05, 1.981E-05, 1.982E-05, 2.058E-05, 2.095E-05, 2.098E-05,
     5 1.979E-05, 1.860E-05, 1.782E-05, 1.934E-05, 1.972E-05, 2.083E-05,
     6 2.201E-05, 2.281E-05, 2.476E-05, 2.480E-05, 2.480E-05, 2.407E-05,
     7 2.371E-05, 2.295E-05, 2.218E-05, 2.141E-05/                      
      DATA (Y(I),I= 1801, 1900)/                                        
     1 2.218E-05, 2.294E-05, 2.371E-05, 2.369E-05, 2.328E-05, 2.287E-05,
     2 2.169E-05, 2.128E-05, 2.126E-05, 2.004E-05, 2.004E-05, 2.085E-05,
     3 2.045E-05, 2.045E-05, 2.006E-05, 2.085E-05, 2.082E-05, 2.121E-05,
     4 2.198E-05, 2.275E-05, 2.238E-05, 2.083E-05, 2.046E-05, 1.928E-05,
     5 1.893E-05, 1.815E-05, 1.815E-05, 1.812E-05, 1.929E-05, 2.046E-05,
     6 2.087E-05, 2.244E-05, 2.283E-05, 2.322E-05, 2.327E-05, 2.291E-05,
     7 2.329E-05, 2.482E-05, 2.558E-05, 2.593E-05, 2.514E-05, 2.436E-05,
     8 2.279E-05, 2.282E-05, 2.363E-05, 2.441E-05, 2.524E-05, 2.599E-05,
     9 2.759E-05, 2.874E-05, 2.954E-05, 3.028E-05, 3.064E-05, 3.063E-05,
     & 3.021E-05, 2.866E-05, 2.788E-05, 2.788E-05, 2.749E-05, 2.711E-05,
     1 2.866E-05, 3.016E-05, 3.250E-05, 3.323E-05, 3.366E-05, 3.328E-05,
     2 3.367E-05, 3.366E-05, 3.483E-05, 3.521E-05, 3.599E-05, 3.603E-05,
     3 3.606E-05, 3.685E-05, 3.764E-05, 3.960E-05, 4.076E-05, 4.079E-05,
     4 4.041E-05, 3.926E-05, 3.848E-05, 4.004E-05, 4.161E-05, 4.350E-05,
     5 4.426E-05, 4.386E-05, 4.305E-05, 4.344E-05, 4.457E-05, 4.570E-05,
     6 4.685E-05, 4.567E-05, 4.450E-05, 4.337E-05, 4.297E-05, 4.414E-05,
     7 4.527E-05, 4.644E-05, 4.721E-05, 4.798E-05/                      
      DATA (Y(I),I= 1901, 2000)/                                        
     1 4.873E-05, 4.952E-05, 4.797E-05, 4.798E-05, 4.681E-05, 4.721E-05,
     2 4.760E-05, 4.724E-05, 4.802E-05, 4.805E-05, 4.766E-05, 4.690E-05,
     3 4.727E-05, 4.800E-05, 4.911E-05, 4.947E-05, 4.636E-05, 4.401E-05,
     4 4.164E-05, 4.089E-05, 4.167E-05, 4.245E-05, 4.248E-05, 4.136E-05,
     5 3.944E-05, 3.832E-05, 3.753E-05, 3.867E-05, 3.982E-05, 4.022E-05,
     6 3.829E-05, 3.714E-05, 3.481E-05, 3.365E-05, 3.438E-05, 3.478E-05,
     7 3.474E-05, 3.395E-05, 3.277E-05, 3.085E-05, 2.966E-05, 3.045E-05,
     8 3.044E-05, 3.123E-05, 3.042E-05, 2.965E-05, 2.969E-05, 2.966E-05,
     9 3.082E-05, 3.273E-05, 3.388E-05, 3.310E-05, 3.195E-05, 3.196E-05,
     & 3.080E-05, 3.004E-05, 3.004E-05, 2.927E-05, 2.927E-05, 3.044E-05,
     1 3.081E-05, 3.198E-05, 3.197E-05, 3.237E-05, 3.200E-05, 3.236E-05,
     2 3.277E-05, 3.239E-05, 3.238E-05, 3.276E-05, 3.199E-05, 3.161E-05,
     3 3.200E-05, 3.199E-05, 3.236E-05, 3.352E-05, 3.351E-05, 3.429E-05,
     4 3.388E-05, 3.350E-05, 3.426E-05, 3.541E-05, 3.618E-05, 3.697E-05,
     5 3.697E-05, 3.696E-05, 3.737E-05, 3.737E-05, 3.736E-05, 3.854E-05,
     6 3.893E-05, 3.738E-05, 3.624E-05, 3.395E-05, 3.318E-05, 3.550E-05,
     7 3.819E-05, 4.092E-05, 4.204E-05, 4.245E-05/                      
      DATA (Y(I),I= 2001, 2100)/                                        
     1 4.284E-05, 4.325E-05, 4.324E-05, 4.363E-05, 4.403E-05, 4.442E-05,
     2 4.365E-05, 4.284E-05, 4.246E-05, 4.244E-05, 4.360E-05, 4.552E-05,
     3 4.629E-05, 4.548E-05, 4.431E-05, 4.316E-05, 4.238E-05, 4.353E-05,
     4 4.428E-05, 4.504E-05, 4.581E-05, 4.621E-05, 4.543E-05, 4.583E-05,
     5 4.620E-05, 4.659E-05, 4.622E-05, 4.661E-05, 4.621E-05, 4.583E-05,
     6 4.583E-05, 4.503E-05, 4.582E-05, 4.541E-05, 4.578E-05, 4.577E-05,
     7 4.655E-05, 4.691E-05, 4.769E-05, 4.693E-05, 4.693E-05, 4.539E-05,
     8 4.462E-05, 4.462E-05, 4.425E-05, 4.351E-05, 4.391E-05, 4.468E-05,
     9 4.588E-05, 4.741E-05, 4.818E-05, 5.011E-05, 5.046E-05, 5.198E-05,
     & 5.124E-05, 5.086E-05, 4.931E-05, 4.776E-05, 4.700E-05, 4.623E-05,
     1 4.469E-05, 4.472E-05, 4.625E-05, 4.856E-05, 5.087E-05, 5.239E-05,
     2 5.318E-05, 5.474E-05, 5.547E-05, 5.626E-05, 5.706E-05, 5.668E-05,
     3 5.704E-05, 5.629E-05, 5.361E-05, 5.208E-05, 5.017E-05, 5.209E-05,
     4 5.554E-05, 5.864E-05, 6.132E-05, 6.251E-05, 6.253E-05, 6.293E-05,
     5 6.371E-05, 6.489E-05, 6.606E-05, 6.608E-05, 6.644E-05, 6.453E-05,
     6 6.336E-05, 6.178E-05, 6.177E-05, 6.327E-05, 6.557E-05, 6.711E-05,
     7 6.864E-05, 6.901E-05, 6.937E-05, 6.975E-05/                      
      DATA (Y(I),I= 2101, 2200)/                                        
     1 6.821E-05, 6.704E-05, 6.554E-05, 6.438E-05, 6.398E-05, 6.318E-05,
     2 6.319E-05, 6.280E-05, 6.048E-05, 5.933E-05, 5.817E-05, 5.660E-05,
     3 5.620E-05, 5.619E-05, 5.616E-05, 5.501E-05, 5.226E-05, 4.917E-05,
     4 4.647E-05, 4.528E-05, 4.565E-05, 4.602E-05, 4.641E-05, 4.524E-05,
     5 4.213E-05, 3.943E-05, 3.713E-05, 3.711E-05, 3.866E-05, 3.982E-05,
     6 4.137E-05, 3.944E-05, 3.674E-05, 3.368E-05, 3.139E-05, 3.100E-05,
     7 3.139E-05, 3.212E-05, 3.251E-05, 3.135E-05, 2.904E-05, 2.633E-05,
     8 2.441E-05, 2.478E-05, 2.480E-05, 2.557E-05, 2.594E-05, 2.477E-05,
     9 2.404E-05, 2.404E-05, 2.325E-05, 2.365E-05, 2.286E-05, 2.365E-05,
     & 2.442E-05, 2.404E-05, 2.406E-05, 2.401E-05, 2.403E-05, 2.480E-05,
     1 2.480E-05, 2.598E-05, 2.675E-05, 2.675E-05, 2.793E-05, 2.793E-05,
     2 2.793E-05, 2.796E-05, 2.758E-05, 2.761E-05, 2.721E-05, 2.875E-05,
     3 2.991E-05, 3.147E-05, 3.301E-05, 3.266E-05, 3.187E-05, 3.148E-05,
     4 3.110E-05, 3.261E-05, 3.417E-05, 3.532E-05, 3.686E-05, 3.684E-05,
     5 3.606E-05, 3.568E-05, 3.493E-05, 3.645E-05, 3.797E-05, 4.030E-05,
     6 4.144E-05, 4.221E-05, 4.181E-05, 4.184E-05, 4.142E-05, 4.181E-05,
     7 4.257E-05, 4.372E-05, 4.412E-05, 4.334E-05/                      
      DATA (Y(I),I= 2201, 2300)/                                        
     1 4.220E-05, 4.146E-05, 3.991E-05, 4.067E-05, 4.223E-05, 4.377E-05,
     2 4.608E-05, 4.609E-05, 4.608E-05, 4.571E-05, 4.569E-05, 4.532E-05,
     3 4.608E-05, 4.648E-05, 4.684E-05, 4.764E-05, 4.725E-05, 4.803E-05,
     4 4.805E-05, 4.726E-05, 4.806E-05, 4.806E-05, 4.810E-05, 4.770E-05,
     5 4.731E-05, 4.617E-05, 4.577E-05, 4.424E-05, 4.464E-05, 4.502E-05,
     6 4.577E-05, 4.538E-05, 4.619E-05, 4.696E-05, 4.696E-05, 4.696E-05,
     7 4.655E-05, 4.657E-05, 4.540E-05, 4.537E-05, 4.618E-05, 4.770E-05,
     8 4.847E-05, 5.041E-05, 5.041E-05, 4.928E-05, 4.773E-05, 4.619E-05,
     9 4.502E-05, 4.582E-05, 4.658E-05, 4.581E-05, 4.658E-05, 4.734E-05,
     & 4.813E-05, 4.809E-05, 4.927E-05, 4.848E-05, 4.814E-05, 4.813E-05,
     1 4.736E-05, 4.931E-05, 4.968E-05, 5.124E-05, 5.317E-05, 5.242E-05,
     2 5.087E-05, 5.013E-05, 4.899E-05, 4.819E-05, 5.129E-05, 5.321E-05,
     3 5.514E-05, 5.667E-05, 5.666E-05, 5.669E-05, 5.745E-05, 5.708E-05,
     4 5.744E-05, 5.746E-05, 5.823E-05, 5.862E-05, 5.745E-05, 5.706E-05,
     5 5.593E-05, 5.513E-05, 5.512E-05, 5.512E-05, 5.586E-05, 5.663E-05,
     6 5.701E-05, 5.662E-05, 5.619E-05, 5.657E-05, 5.618E-05, 5.502E-05,
     7 5.385E-05, 5.307E-05, 5.191E-05, 5.113E-05/                      
      DATA (Y(I),I= 2301, 2400)/                                        
     1 5.074E-05, 5.033E-05, 5.036E-05, 4.994E-05, 4.801E-05, 4.723E-05,
     2 4.609E-05, 4.531E-05, 4.724E-05, 4.992E-05, 5.185E-05, 5.298E-05,
     3 5.028E-05, 4.607E-05, 4.225E-05, 3.800E-05, 3.608E-05, 3.610E-05,
     4 3.454E-05, 3.455E-05, 3.339E-05, 3.302E-05, 3.263E-05, 3.264E-05,
     5 3.186E-05, 3.262E-05, 3.417E-05, 3.493E-05, 3.647E-05, 3.530E-05,
     6 3.375E-05, 3.221E-05, 3.068E-05, 3.031E-05, 2.992E-05, 3.029E-05,
     7 3.029E-05, 3.108E-05, 3.108E-05, 3.031E-05, 3.031E-05, 3.031E-05,
     8 3.031E-05, 3.031E-05, 3.070E-05, 2.994E-05, 3.111E-05, 3.109E-05,
     9 3.184E-05, 3.300E-05, 3.377E-05, 3.379E-05, 3.378E-05, 3.378E-05,
     & 3.380E-05, 3.456E-05, 3.535E-05, 3.572E-05, 3.651E-05, 3.650E-05,
     1 3.766E-05, 3.766E-05, 3.843E-05, 3.959E-05, 3.961E-05, 4.037E-05,
     2 4.039E-05, 4.038E-05, 4.077E-05, 3.923E-05, 3.806E-05, 3.654E-05,
     3 3.537E-05, 3.690E-05, 3.804E-05, 3.956E-05, 4.189E-05, 4.264E-05,
     4 4.228E-05, 4.150E-05, 4.113E-05, 4.152E-05, 4.189E-05, 4.189E-05,
     5 4.265E-05, 4.304E-05, 4.227E-05, 4.189E-05, 4.035E-05, 3.921E-05,
     6 3.844E-05, 3.920E-05, 3.996E-05, 4.072E-05, 4.265E-05, 4.265E-05,
     7 4.265E-05, 4.189E-05, 4.148E-05, 4.151E-05/                      
      DATA (Y(I),I= 2401, 2500)/                                        
     1 4.151E-05, 4.188E-05, 4.188E-05, 4.188E-05, 4.306E-05, 4.226E-05,
     2 4.304E-05, 4.385E-05, 4.357E-05, 4.342E-05, 4.250E-05, 4.239E-05,
     3 4.224E-05, 4.160E-05, 4.217E-05, 4.281E-05, 4.298E-05, 4.359E-05,
     4 4.302E-05, 4.287E-05, 4.195E-05, 4.139E-05, 4.195E-05, 4.233E-05,
     5 4.270E-05, 4.229E-05, 4.268E-05, 4.234E-05, 4.191E-05, 4.138E-05,
     6 4.084E-05, 4.065E-05, 4.062E-05, 4.052E-05, 4.045E-05, 4.053E-05,
     7 4.100E-05, 4.151E-05, 4.206E-05, 4.260E-05, 4.292E-05, 4.304E-05,
     8 4.320E-05, 4.333E-05, 4.345E-05, 4.377E-05, 4.404E-05, 4.432E-05,
     9 4.460E-05, 4.453E-05, 4.380E-05, 4.316E-05, 4.239E-05, 4.170E-05,
     & 4.214E-05, 4.302E-05, 4.387E-05, 4.472E-05, 4.523E-05, 4.454E-05,
     1 4.369E-05, 4.300E-05, 4.215E-05, 4.239E-05, 4.346E-05, 4.450E-05,
     2 4.554E-05, 4.650E-05, 4.638E-05, 4.595E-05, 4.568E-05, 4.529E-05,
     3 4.501E-05, 4.520E-05, 4.527E-05, 4.534E-05, 4.541E-05, 4.559E-05,
     4 4.584E-05, 4.613E-05, 4.626E-05, 4.628E-05, 4.530E-05, 4.413E-05,
     5 4.292E-05, 4.171E-05, 4.101E-05, 4.133E-05, 4.153E-05, 4.180E-05,
     6 4.208E-05, 4.158E-05, 4.078E-05, 4.003E-05, 3.923E-05, 3.854E-05,
     7 3.888E-05, 3.936E-05, 3.993E-05, 4.038E-05/                      
      DATA (Y(I),I= 2501, 2600)/                                        
     1 4.018E-05, 3.852E-05, 3.686E-05, 3.515E-05, 3.349E-05, 3.280E-05,
     2 3.284E-05, 3.285E-05, 3.277E-05, 3.273E-05, 3.205E-05, 3.128E-05,
     3 3.044E-05, 2.968E-05, 2.902E-05, 2.895E-05, 2.891E-05, 2.895E-05,
     4 2.895E-05, 2.876E-05, 2.837E-05, 2.803E-05, 2.760E-05, 2.726E-05,
     5 2.707E-05, 2.707E-05, 2.700E-05, 2.700E-05, 2.689E-05, 2.685E-05,
     6 2.681E-05, 2.674E-05, 2.667E-05, 2.651E-05, 2.628E-05, 2.602E-05,
     7 2.575E-05, 2.552E-05, 2.544E-05, 2.567E-05, 2.591E-05, 2.614E-05,
     8 2.633E-05, 2.610E-05, 2.557E-05, 2.511E-05, 2.457E-05, 2.416E-05,
     9 2.450E-05, 2.512E-05, 2.578E-05, 2.635E-05, 2.678E-05, 2.655E-05,
     & 2.628E-05, 2.594E-05, 2.563E-05, 2.548E-05, 2.606E-05, 2.667E-05,
     1 2.725E-05, 2.779E-05, 2.802E-05, 2.768E-05, 2.737E-05, 2.699E-05,
     2 2.661E-05, 2.681E-05, 2.746E-05, 2.816E-05, 2.877E-05, 2.939E-05,
     3 2.951E-05, 2.935E-05, 2.924E-05, 2.913E-05, 2.897E-05, 2.916E-05,
     4 2.936E-05, 2.951E-05, 2.978E-05, 2.990E-05, 2.997E-05, 3.001E-05,
     5 3.004E-05, 3.004E-05, 3.000E-05, 2.981E-05, 2.957E-05, 2.938E-05,
     6 2.918E-05, 2.903E-05, 2.918E-05, 2.930E-05, 2.937E-05, 2.948E-05,
     7 2.944E-05, 2.898E-05, 2.848E-05, 2.806E-05/                      
      DATA (Y(I),I= 2601, 2700)/                                        
     1 2.756E-05, 2.733E-05, 2.744E-05, 2.751E-05, 2.763E-05, 2.767E-05,
     2 2.751E-05, 2.716E-05, 2.682E-05, 2.635E-05, 2.605E-05, 2.585E-05,
     3 2.581E-05, 2.578E-05, 2.570E-05, 2.574E-05, 2.566E-05, 2.554E-05,
     4 2.551E-05, 2.543E-05, 2.535E-05, 2.535E-05, 2.544E-05, 2.548E-05,
     5 2.560E-05, 2.564E-05, 2.569E-05, 2.585E-05, 2.589E-05, 2.597E-05,
     6 2.601E-05, 2.617E-05, 2.641E-05, 2.656E-05, 2.671E-05, 2.695E-05,
     7 2.710E-05, 2.730E-05, 2.746E-05, 2.769E-05, 2.785E-05, 2.800E-05,
     8 2.812E-05, 2.831E-05, 2.842E-05, 2.858E-05, 2.878E-05, 2.889E-05,
     9 2.908E-05, 2.920E-05, 2.939E-05, 2.935E-05, 2.935E-05, 2.931E-05,
     & 2.923E-05, 2.927E-05, 2.919E-05, 2.915E-05, 2.915E-05, 2.911E-05,
     1 2.903E-05, 2.895E-05, 2.864E-05, 2.837E-05, 2.814E-05, 2.790E-05,
     2 2.763E-05, 2.740E-05, 2.716E-05, 2.693E-05, 2.666E-05, 2.639E-05,
     3 2.612E-05, 2.584E-05, 2.550E-05, 2.526E-05, 2.499E-05, 2.464E-05,
     4 2.437E-05, 2.414E-05, 2.391E-05, 2.360E-05, 2.336E-05, 2.313E-05,
     5 2.293E-05, 2.266E-05, 2.247E-05, 2.227E-05, 2.196E-05, 2.177E-05,
     6 2.157E-05, 2.130E-05, 2.118E-05, 2.107E-05, 2.095E-05, 2.075E-05,
     7 2.063E-05, 2.044E-05, 2.036E-05, 2.017E-05/                      
      DATA (Y(I),I= 2701, 2800)/                                        
     1 2.005E-05, 1.994E-05, 1.982E-05, 1.971E-05, 1.959E-05, 1.944E-05,
     2 1.933E-05, 1.925E-05, 1.906E-05, 1.898E-05, 1.887E-05, 1.876E-05,
     3 1.864E-05, 1.856E-05, 1.849E-05, 1.830E-05, 1.827E-05, 1.815E-05,
     4 1.807E-05, 1.800E-05, 1.788E-05, 1.778E-05, 1.770E-05, 1.766E-05,
     5 1.762E-05, 1.755E-05, 1.755E-05, 1.751E-05, 1.740E-05, 1.736E-05,
     6 1.736E-05, 1.728E-05, 1.725E-05, 1.721E-05, 1.717E-05, 1.712E-05,
     7 1.712E-05, 1.709E-05, 1.704E-05, 1.693E-05, 1.693E-05, 1.685E-05,
     8 1.685E-05, 1.680E-05, 1.680E-05, 1.672E-05, 1.672E-05, 1.672E-05,
     9 1.672E-05, 1.668E-05, 1.660E-05, 1.659E-05, 1.659E-05, 1.651E-05,
     & 1.655E-05, 1.655E-05, 1.655E-05, 1.651E-05, 1.647E-05, 1.647E-05,
     1 1.647E-05, 1.643E-05, 1.643E-05, 1.636E-05, 1.636E-05, 1.640E-05,
     2 1.640E-05, 1.636E-05, 1.640E-05, 1.640E-05, 1.640E-05, 1.637E-05,
     3 1.637E-05, 1.641E-05, 1.637E-05, 1.641E-05, 1.638E-05, 1.626E-05,
     4 1.622E-05, 1.619E-05, 1.611E-05, 1.611E-05, 1.607E-05, 1.604E-05,
     5 1.600E-05, 1.596E-05, 1.589E-05, 1.573E-05, 1.562E-05, 1.550E-05,
     6 1.538E-05, 1.531E-05, 1.519E-05, 1.499E-05, 1.496E-05, 1.480E-05,
     7 1.469E-05, 1.461E-05, 1.445E-05, 1.437E-05/                      
      DATA (Y(I),I= 2801, 2900)/                                        
     1 1.422E-05, 1.418E-05, 1.403E-05, 1.399E-05, 1.383E-05, 1.375E-05,
     2 1.360E-05, 1.356E-05, 1.356E-05, 1.360E-05, 1.360E-05, 1.364E-05,
     3 1.360E-05, 1.360E-05, 1.360E-05, 1.360E-05, 1.356E-05, 1.364E-05,
     4 1.364E-05, 1.368E-05, 1.380E-05, 1.384E-05, 1.388E-05, 1.392E-05,
     5 1.403E-05, 1.403E-05, 1.411E-05, 1.411E-05, 1.419E-05, 1.423E-05,
     6 1.431E-05, 1.427E-05, 1.435E-05, 1.439E-05, 1.439E-05, 1.443E-05,
     7 1.451E-05, 1.454E-05, 1.454E-05, 1.458E-05, 1.458E-05, 1.450E-05,
     8 1.450E-05, 1.446E-05, 1.446E-05, 1.446E-05, 1.438E-05, 1.442E-05,
     9 1.441E-05, 1.433E-05, 1.429E-05, 1.422E-05, 1.418E-05, 1.406E-05,
     & 1.398E-05, 1.387E-05, 1.379E-05, 1.367E-05, 1.360E-05, 1.352E-05,
     1 1.340E-05, 1.329E-05, 1.313E-05, 1.310E-05, 1.290E-05, 1.275E-05,
     2 1.263E-05, 1.248E-05, 1.233E-05, 1.225E-05, 1.210E-05, 1.198E-05,
     3 1.187E-05, 1.171E-05, 1.156E-05, 1.144E-05, 1.133E-05, 1.118E-05,
     4 1.106E-05, 1.098E-05, 1.081E-05, 1.073E-05, 1.055E-05, 1.046E-05,
     5 1.035E-05, 1.025E-05, 1.013E-05, 1.003E-05, 9.912E-06, 9.800E-06,
     6 9.691E-06, 9.582E-06, 9.470E-06, 9.362E-06, 9.253E-06, 9.175E-06,
     7 9.097E-06, 9.027E-06, 8.950E-06, 8.883E-06/                      
      DATA (Y(I),I= 2901, 3000)/                                        
     1 8.802E-06, 8.732E-06, 8.658E-06, 8.588E-06, 8.510E-06, 8.440E-06,
     2 8.385E-06, 8.342E-06, 8.307E-06, 8.267E-06, 8.228E-06, 8.189E-06,
     3 8.149E-06, 8.106E-06, 8.063E-06, 8.024E-06, 7.984E-06, 7.957E-06,
     4 7.949E-06, 7.944E-06, 7.928E-06, 7.920E-06, 7.908E-06, 7.907E-06,
     5 7.895E-06, 7.883E-06, 7.874E-06, 7.870E-06, 7.854E-06, 7.858E-06,
     6 7.853E-06, 7.850E-06, 7.853E-06, 7.849E-06, 7.853E-06, 7.849E-06,
     7 7.845E-06, 7.852E-06, 7.848E-06, 7.844E-06, 7.836E-06, 7.825E-06,
     8 7.810E-06, 7.798E-06, 7.787E-06, 7.776E-06, 7.753E-06, 7.741E-06,
     9 7.726E-06, 7.715E-06, 7.703E-06, 7.684E-06, 7.642E-06, 7.604E-06,
     & 7.565E-06, 7.527E-06, 7.492E-06, 7.454E-06, 7.416E-06, 7.370E-06,
     1 7.332E-06, 7.297E-06, 7.251E-06, 7.197E-06, 7.132E-06, 7.070E-06,
     2 7.005E-06, 6.935E-06, 6.870E-06, 6.805E-06, 6.743E-06, 6.674E-06,
     3 6.608E-06, 6.543E-06, 6.481E-06, 6.393E-06, 6.312E-06, 6.223E-06,
     4 6.143E-06, 6.058E-06, 5.977E-06, 5.897E-06, 5.816E-06, 5.723E-06,
     5 5.643E-06, 5.558E-06, 5.493E-06, 5.420E-06, 5.358E-06, 5.285E-06,
     6 5.212E-06, 5.150E-06, 5.073E-06, 5.004E-06, 4.939E-06, 4.866E-06,
     7 4.804E-06, 4.743E-06, 4.731E-06, 4.727E-06/                      
      DATA (Y(I),I= 3001, 3080)/                                        
     1 4.723E-06, 4.719E-06, 4.715E-06, 4.707E-06, 4.699E-06, 4.699E-06,
     2 4.695E-06, 4.691E-06, 4.680E-06, 4.695E-06, 4.745E-06, 4.798E-06,
     3 4.844E-06, 4.890E-06, 4.944E-06, 4.986E-06, 5.040E-06, 5.086E-06,
     4 5.136E-06, 5.189E-06, 5.236E-06, 5.262E-06, 5.270E-06, 5.289E-06,
     5 5.297E-06, 5.305E-06, 5.324E-06, 5.332E-06, 5.347E-06, 5.355E-06,
     6 5.370E-06, 5.381E-06, 5.389E-06, 5.347E-06, 5.297E-06, 5.231E-06,
     7 5.181E-06, 5.127E-06, 5.065E-06, 5.011E-06, 4.950E-06, 4.896E-06,
     8 4.838E-06, 4.780E-06, 4.726E-06, 4.661E-06, 4.595E-06, 4.525E-06,
     9 4.456E-06, 4.390E-06, 4.328E-06, 4.255E-06, 4.193E-06, 4.127E-06,
     & 4.058E-06, 3.988E-06, 3.926E-06, 3.849E-06, 3.760E-06, 3.679E-06,
     1 3.598E-06, 3.520E-06, 3.439E-06, 3.357E-06, 3.272E-06, 3.191E-06,
     2 3.118E-06, 3.033E-06, 2.944E-06, 2.824E-06, 2.693E-06, 2.561E-06,
     3 2.434E-06, 2.306E-06, 2.179E-06, 2.043E-06, 1.917E-06, 1.790E-06,
     4 1.663E-06, 1.533E-06/                                            
C                                                                       
      DATA (Z(I),I=    1,  100)/                                        
     1 6.369E-15,  .000E+00,  .000E+00, 1.274E-14,-1.274E-14, 6.369E-15,
     2-6.369E-15, 1.274E-14,  .000E+00, 1.274E-14,  .000E+00, 6.369E-15,
     3 1.274E-14, 1.274E-14, 1.274E-14, 1.911E-14, 1.274E-14, 1.911E-14,
     4 2.548E-14,-1.274E-14, 2.548E-14, 1.274E-14, 1.274E-14,-1.274E-14,
     5  .000E+00, 2.548E-14, 1.274E-14, 1.274E-14, 5.095E-14,-1.274E-14,
     6-1.274E-14, 5.095E-14,-1.274E-14, 2.548E-14,-2.548E-14,  .000E+00,
     7 5.095E-14, 2.548E-14,  .000E+00, 2.548E-14, 2.548E-14, 2.548E-14,
     8-2.548E-14, 2.548E-14,-2.548E-14, 2.548E-14, 2.548E-14, 2.548E-14,
     9  .000E+00, 5.095E-14, 2.548E-14, 2.548E-14,  .000E+00, 7.643E-14,
     & 5.095E-14, 2.548E-14,  .000E+00,-2.548E-14, 2.548E-14,  .000E+00,
     1 7.643E-14,  .000E+00, 7.643E-14,-7.643E-14, 1.019E-13, 1.019E-13,
     2 1.019E-13,  .000E+00, 1.019E-13, 5.095E-14, 1.019E-13, 1.019E-13,
     3 5.095E-14, 1.529E-13, 1.529E-13, 1.529E-13,-5.095E-14,-1.019E-13,
     4-1.019E-13,  .000E+00, 1.529E-13, 1.019E-13, 5.095E-14,-5.095E-14,
     5  .000E+00, 2.548E-14, 2.548E-14, 2.548E-14, 2.548E-14, 7.643E-14,
     6  .000E+00,  .000E+00, 2.548E-14, 5.095E-14,  .000E+00, 5.095E-14,
     7-2.548E-14, 7.643E-14, 2.548E-14,  .000E+00/                      
      DATA (Z(I),I=  101,  200)/                                        
     1 2.548E-14, 5.095E-14, 2.548E-14, 7.643E-14, 3.821E-14, 3.821E-14,
     2 3.821E-14, 6.369E-14,  .000E+00,-3.821E-14, 1.274E-14, 1.274E-14,
     3 2.548E-14,-3.821E-14, 1.274E-14, 3.821E-14, 6.369E-14, 3.821E-14,
     4  .000E+00, 1.274E-14, 2.548E-14,-1.274E-14, 5.095E-14, 2.548E-14,
     5 5.095E-14, 5.095E-14, 5.095E-14, 7.643E-14,  .000E+00, 7.643E-14,
     6 2.548E-14, 7.643E-14,  .000E+00,  .000E+00, 7.643E-14,  .000E+00,
     7 5.095E-14, 2.548E-14, 5.095E-14, 7.643E-14,-2.548E-14,  .000E+00,
     8 2.548E-14, 2.548E-14,  .000E+00,  .000E+00, 1.529E-13, 1.019E-13,
     9  .000E+00,  .000E+00, 1.019E-13, 5.095E-14, 5.095E-14, 1.529E-13,
     & 1.529E-13,  .000E+00, 1.019E-13, 1.529E-13, 1.529E-13, 1.019E-13,
     1 5.095E-14, 1.019E-13,  .000E+00,-1.019E-13, 1.019E-13, 1.019E-13,
     2 1.019E-13, 1.019E-13, 4.076E-13,-1.019E-13, 2.038E-13, 2.038E-13,
     3 2.038E-13, 2.038E-13,  .000E+00,-2.038E-13, 2.038E-13, 8.152E-13,
     4 1.427E-12, 8.152E-13,  .000E+00,-4.076E-13, 4.076E-13,  .000E+00,
     5 1.630E-12, 4.076E-13, 2.038E-13, 6.114E-13, 4.076E-13, 2.038E-13,
     6 3.057E-13, 2.038E-13,  .000E+00, 1.019E-13, 3.057E-13, 2.038E-13,
     7 2.038E-13, 5.095E-14, 1.019E-13, 1.019E-13/                      
      DATA (Z(I),I=  201,  300)/                                        
     1  .000E+00, 1.529E-13, 5.095E-14, 2.038E-13, 1.529E-13, 5.095E-14,
     2 5.095E-14, 5.095E-14, 1.529E-13, 1.529E-13, 1.529E-13, 5.095E-14,
     3 5.095E-14, 5.095E-14,  .000E+00, 5.095E-14, 1.019E-13, 2.038E-13,
     4 5.095E-14, 1.019E-13,  .000E+00, 1.529E-13, 5.095E-14,  .000E+00,
     5  .000E+00, 5.095E-14, 1.529E-13, 1.019E-13, 1.019E-13, 2.038E-13,
     6 2.038E-13, 2.038E-13, 2.038E-13, 1.019E-13, 2.038E-13, 2.038E-13,
     7  .000E+00, 2.038E-13,-1.019E-13, 3.057E-13, 1.019E-13, 1.019E-13,
     8 3.057E-13, 3.057E-13,-1.019E-13, 1.019E-13, 4.076E-13, 5.095E-13,
     9 2.038E-13, 5.095E-13, 4.076E-13,-2.038E-13, 3.057E-13,-2.038E-13,
     &-2.038E-13, 2.038E-13, 4.076E-13, 4.076E-13,  .000E+00,-4.076E-13,
     1 2.038E-13,-4.076E-13, 2.038E-13, 2.038E-13,  .000E+00,  .000E+00,
     2-2.038E-13, 2.038E-13, 4.076E-13, 4.076E-13, 2.038E-13,  .000E+00,
     3 8.152E-13, 4.076E-13,  .000E+00, 4.076E-13, 1.630E-12, 8.152E-13,
     4 8.152E-13, 1.223E-12, 8.152E-13, 8.152E-13, 4.076E-13, 1.630E-12,
     5 4.076E-13,-8.152E-13, 4.076E-13, 8.152E-13, 1.630E-12, 4.076E-13,
     6  .000E+00,  .000E+00, 8.152E-13, 4.076E-13,  .000E+00,-4.076E-13,
     7 4.076E-13, 4.076E-13, 4.076E-13, 6.114E-13/                      
      DATA (Z(I),I=  301,  400)/                                        
     1 2.038E-13, 6.114E-13, 4.076E-13, 2.038E-13,  .000E+00, 6.114E-13,
     2 2.038E-13,-2.038E-13, 2.038E-13, 6.114E-13, 6.114E-13, 2.038E-13,
     3 4.076E-13, 4.076E-13,  .000E+00, 8.152E-13,  .000E+00, 4.076E-13,
     4 6.114E-13, 2.038E-13, 2.038E-13, 6.114E-13,  .000E+00,  .000E+00,
     5 2.038E-13, 4.076E-13, 2.038E-13, 2.038E-13,  .000E+00, 2.038E-13,
     6  .000E+00, 4.076E-13, 6.114E-13,  .000E+00, 2.038E-13, 2.038E-13,
     7 2.038E-13, 2.038E-13, 8.152E-13,  .000E+00,-2.038E-13, 6.114E-13,
     8 6.114E-13, 2.038E-13, 6.114E-13,  .000E+00, 6.114E-13,  .000E+00,
     9-2.038E-13, 8.152E-13, 4.076E-13,  .000E+00, 6.114E-13, 2.038E-13,
     & 4.076E-13, 6.114E-13, 6.114E-13,  .000E+00, 4.076E-13,  .000E+00,
     1  .000E+00, 4.076E-13, 4.076E-13, 1.630E-12, 8.152E-13, 8.152E-13,
     2 4.076E-13, 8.152E-13, 8.152E-13, 4.076E-13, 1.223E-12, 1.630E-12,
     3 1.630E-12, 4.076E-13,  .000E+00, 1.630E-12,-4.076E-13,-4.076E-13,
     4 2.038E-12,  .000E+00,  .000E+00, 8.152E-13,  .000E+00, 8.152E-13,
     5 1.630E-12, 8.152E-13,  .000E+00,-8.152E-13, 8.152E-13, 8.152E-13,
     6 2.446E-12,  .000E+00, 8.152E-13, 8.152E-13, 8.152E-13, 1.630E-12,
     7-8.152E-13, 2.446E-12, 8.152E-13,-8.152E-13/                      
      DATA (Z(I),I=  401,  500)/                                        
     1 1.630E-12, 8.152E-13, 8.152E-13, 1.630E-12,  .000E+00, 8.152E-13,
     2  .000E+00,  .000E+00, 8.152E-13, 8.152E-13,  .000E+00, 1.630E-12,
     3 8.152E-13,  .000E+00, 8.152E-13, 8.152E-13,  .000E+00, 8.152E-13,
     4  .000E+00, 8.152E-13,  .000E+00, 1.630E-12, 8.152E-13, 8.152E-13,
     5 8.152E-13, 8.152E-13, 8.152E-13, 4.076E-13, 1.223E-12, 1.223E-12,
     6-4.076E-13, 1.223E-12, 1.630E-12, 2.038E-12,  .000E+00,-8.152E-13,
     7 4.076E-13,  .000E+00, 1.630E-12, 8.152E-13, 8.152E-13,  .000E+00,
     8 4.076E-13,-8.152E-13, 4.076E-13, 1.223E-12, 4.076E-13, 4.076E-13,
     9 1.630E-12, 1.223E-12,  .000E+00,  .000E+00, 4.076E-13, 8.152E-13,
     & 1.630E-12, 1.223E-12, 4.076E-13, 8.152E-13,  .000E+00,-4.076E-13,
     1 1.223E-12,-4.076E-13, 8.152E-13, 1.630E-12,  .000E+00, 8.152E-13,
     2  .000E+00, 1.630E-12,-8.152E-13, 8.152E-13,  .000E+00, 1.630E-12,
     3 8.152E-13, 8.152E-13,  .000E+00, 1.630E-12,  .000E+00,  .000E+00,
     4 8.152E-13, 8.152E-13, 1.630E-12, 1.630E-12,  .000E+00, 1.630E-12,
     5 8.152E-13, 3.261E-12, 8.152E-13, 2.446E-12, 3.261E-12, 3.261E-12,
     6 1.630E-12,  .000E+00, 3.261E-12,-1.630E-12,-1.630E-12,-1.630E-12,
     7 4.891E-12, 1.630E-12, 1.630E-12, 3.261E-12/                      
      DATA (Z(I),I=  501,  600)/                                        
     1 4.891E-12, 1.630E-12, 4.891E-12,  .000E+00,  .000E+00,-3.261E-12,
     2 4.891E-12, 3.261E-12, 4.891E-12,-1.630E-12,  .000E+00, 3.261E-12,
     3 1.630E-12,-3.261E-12, 1.630E-12, 3.261E-12,-3.261E-12, 4.891E-12,
     4 3.261E-12,  .000E+00, 3.261E-12,-1.630E-12, 1.630E-12, 1.630E-12,
     5 1.630E-12, 1.630E-12,-1.630E-12, 3.261E-12, 1.630E-12, 1.630E-12,
     6-8.152E-13, 1.630E-12,  .000E+00, 2.446E-12,  .000E+00,-8.152E-13,
     7-8.152E-13,-8.152E-13,-8.152E-13, 3.261E-12,  .000E+00, 3.261E-12,
     8  .000E+00, 8.152E-13, 3.261E-12, 1.630E-12,  .000E+00,  .000E+00,
     9 3.261E-12,  .000E+00,  .000E+00,  .000E+00, 3.261E-12, 8.152E-13,
     &-1.630E-12,  .000E+00, 1.630E-12, 8.152E-13, 4.076E-12, 8.152E-13,
     1  .000E+00,  .000E+00, 3.261E-12,  .000E+00, 1.630E-12, 3.261E-12,
     2 4.076E-12, 8.152E-13, 4.076E-12, 2.446E-12,-1.630E-12, 3.261E-12,
     3 2.446E-12,-8.152E-13,  .000E+00, 1.630E-12, 2.446E-12, 1.630E-12,
     4 1.630E-12, 3.261E-12, 3.261E-12,  .000E+00,-1.630E-12, 1.630E-12,
     5 1.630E-12,  .000E+00,-1.630E-12, 1.630E-12, 6.522E-12, 3.261E-12,
     6  .000E+00,  .000E+00, 1.630E-12,-1.630E-12, 6.522E-12, 1.630E-12,
     7 1.630E-12,-1.630E-12, 1.630E-12,  .000E+00/                      
      DATA (Z(I),I=  601,  700)/                                        
     1 1.630E-12, 3.261E-12, 6.522E-12, 3.261E-12, 4.891E-12, 3.261E-12,
     2 3.261E-12, 3.261E-12, 3.261E-12, 3.261E-12, 3.261E-12,  .000E+00,
     3 6.522E-12,-3.261E-12, 3.261E-12,  .000E+00, 3.261E-12,-3.261E-12,
     4 3.261E-12, 6.522E-12,  .000E+00, 3.261E-12,  .000E+00, 6.522E-12,
     5  .000E+00,  .000E+00,  .000E+00, 3.261E-12, 6.522E-12,  .000E+00,
     6 3.261E-12,  .000E+00, 6.522E-12, 6.522E-12, 4.891E-12, 3.261E-12,
     7 8.152E-12, 4.891E-12, 3.261E-12, 4.891E-12, 1.630E-12,  .000E+00,
     8  .000E+00, 4.891E-12, 6.522E-12, 1.630E-12,-3.261E-12, 4.891E-12,
     9 8.152E-12, 3.261E-12, 1.630E-12, 1.630E-12,-1.630E-12, 3.261E-12,
     & 1.630E-12,-3.261E-12, 4.891E-12, 1.630E-12, 4.891E-12, 1.630E-12,
     1 1.630E-12,  .000E+00, 4.891E-12, 3.261E-12, 1.630E-12,-1.630E-12,
     2 3.261E-12, 3.261E-12, 1.630E-12, 1.630E-12, 4.891E-12,-1.630E-12,
     3-3.261E-12,  .000E+00, 1.630E-12, 3.261E-12, 1.630E-12, 1.630E-12,
     4 4.891E-12, 6.522E-12, 1.630E-12,  .000E+00, 4.891E-12, 4.891E-12,
     5 1.630E-12, 1.630E-12, 3.261E-12, 1.630E-12, 1.630E-12,-1.630E-12,
     6 1.630E-12, 4.891E-12,  .000E+00,  .000E+00, 1.630E-12,-6.522E-12,
     7 3.261E-12, 3.261E-12, 3.261E-12, 3.261E-12/                      
      DATA (Z(I),I=  701,  800)/                                        
     1 3.261E-12,  .000E+00, 3.261E-12, 3.261E-12,-3.261E-12,-3.261E-12,
     2 3.261E-12, 6.522E-12, 3.261E-12,-3.261E-12, 3.261E-12, 3.261E-12,
     3 6.522E-12, 3.261E-12,-3.261E-12, 9.783E-12, 3.261E-12, 3.261E-12,
     4 3.261E-12, 6.522E-12,  .000E+00,  .000E+00, 9.783E-12, 3.261E-12,
     5 6.522E-12, 9.783E-12, 6.522E-12,  .000E+00, 6.522E-12,  .000E+00,
     6 9.783E-12, 6.522E-12, 6.522E-12,-3.261E-12, 1.304E-11,  .000E+00,
     7-3.261E-12, 6.522E-12,  .000E+00,  .000E+00,-3.261E-12,-6.522E-12,
     8 3.261E-12, 6.522E-12,-3.261E-12, 6.522E-12, 9.783E-12, 6.522E-12,
     9  .000E+00,-6.522E-12, 9.783E-12, 6.522E-12, 3.261E-12, 3.261E-12,
     & 6.522E-12, 3.261E-12, 3.261E-12,  .000E+00, 9.783E-12,-3.261E-12,
     1 3.261E-12,  .000E+00, 6.522E-12, 6.522E-12, 3.261E-12,  .000E+00,
     2  .000E+00, 3.261E-12, 6.522E-12, 3.261E-12,  .000E+00, 3.261E-12,
     3 6.522E-12, 6.522E-12,  .000E+00,  .000E+00, 3.261E-12,-3.261E-12,
     4 9.783E-12, 3.261E-12, 3.261E-12, 6.522E-12, 3.261E-12,-3.261E-12,
     5  .000E+00, 3.261E-12,-3.261E-12, 9.783E-12, 1.304E-11,-3.003E-08,
     6-2.136E-07,-3.476E-07,-3.507E-07,-3.498E-07,-3.441E-07,-3.405E-07,
     7-3.384E-07,-3.439E-07,-3.538E-07,-3.699E-07/                      
      DATA (Z(I),I=  801,  900)/                                        
     1-3.651E-07,-3.462E-07,-3.292E-07,-3.177E-07,-3.239E-07,-3.321E-07,
     2-3.447E-07,-3.404E-07,-3.284E-07,-3.301E-07,-3.295E-07,-3.214E-07,
     3-3.194E-07,-3.230E-07,-3.202E-07,-3.182E-07,-3.245E-07,-3.272E-07,
     4-3.181E-07,-3.133E-07,-3.115E-07,-3.134E-07,-3.144E-07,-3.226E-07,
     5-3.292E-07,-3.239E-07,-3.248E-07,-3.088E-07,-3.269E-07,-3.166E-07,
     6-3.283E-07,-3.143E-07,-3.064E-07,-3.140E-07,-2.938E-07,-2.938E-07,
     7-3.014E-07,-2.873E-07,-2.809E-07,-2.809E-07,-3.092E-07,-2.748E-07,
     8-2.809E-07,-2.744E-07,-2.809E-07,-2.669E-07,-2.666E-07,-2.870E-07,
     9-2.806E-07,-2.806E-07,-2.806E-07,-2.870E-07,-2.730E-07,-2.590E-07,
     &-2.512E-07,-2.792E-07,-2.856E-07,-2.860E-07,-2.781E-07,-2.565E-07,
     1-2.425E-07,-2.626E-07,-2.767E-07,-2.624E-07,-2.484E-07,-2.343E-07,
     2-2.484E-07,-2.689E-07,-2.268E-07,-2.329E-07,-2.470E-07,-2.193E-07,
     3-2.254E-07,-2.318E-07,-2.318E-07,-2.459E-07,-2.240E-07,-2.021E-07,
     4-2.161E-07,-2.021E-07,-2.162E-07,-2.226E-07,-2.022E-07,-2.086E-07,
     5-2.083E-07,-2.148E-07,-2.288E-07,-2.285E-07,-2.286E-07,-2.288E-07,
     6-2.209E-07,-2.069E-07,-2.069E-07,-2.131E-07,-2.131E-07,-1.991E-07,
     7-1.991E-07,-1.991E-07,-1.707E-07,-1.851E-07/                      
      DATA (Z(I),I=  901, 1000)/                                        
     1-1.772E-07,-1.775E-07,-1.912E-07,-1.976E-07,-2.117E-07,-1.974E-07,
     2-1.772E-07,-1.837E-07,-1.693E-07,-1.693E-07,-1.769E-07,-1.693E-07,
     3-1.632E-07,-1.489E-07,-1.352E-07,-1.492E-07,-1.495E-07,-1.556E-07,
     4-1.492E-07,-1.352E-07,-1.352E-07,-1.492E-07,-1.492E-07,-1.349E-07,
     5-1.285E-07,-1.147E-07,-1.287E-07,-1.150E-07,-1.147E-07,-1.007E-07,
     6-9.455E-08,-8.022E-08,-6.618E-08,-7.990E-08,-8.016E-08,-7.992E-08,
     7-8.779E-08,-7.986E-08,-1.015E-07,-9.567E-08,-7.373E-08,-8.135E-08,
     8-9.567E-08,-7.520E-08,-8.955E-08,-7.521E-08,-1.033E-07,-8.133E-08,
     9-8.895E-08,-7.493E-08,-5.446E-08,-6.850E-08,-9.655E-08,-6.846E-08,
     &-9.040E-08,-7.640E-08,-7.669E-08,-6.239E-08,-5.600E-08,-7.612E-08,
     1-6.998E-08,-4.985E-08,-5.597E-08,-7.032E-08,-7.032E-08,-7.031E-08,
     2-6.243E-08,-5.453E-08,-5.458E-08,-4.817E-08,-5.461E-08,-4.059E-08,
     3-6.867E-08,-4.671E-08,-5.316E-08,-3.889E-08,-3.915E-08,-3.888E-08,
     4-3.131E-08,-1.732E-08,-1.729E-08,-3.134E-08,-1.735E-08,-9.496E-09,
     5-9.835E-09,-1.596E-08,-3.031E-08,-3.644E-08,-4.288E-08,-2.243E-08,
     6-1.488E-08,-8.478E-10, 2.750E-08, 3.508E-08, 3.537E-08, 3.540E-08,
     7 2.780E-08,-6.711E-09,-6.391E-10, 2.739E-08/                      
      DATA (Z(I),I= 1001, 1100)/                                        
     1 3.530E-08, 4.290E-08, 4.289E-08, 5.107E-08, 4.316E-08, 4.345E-08,
     2 5.102E-08, 2.937E-08, 3.696E-08, 3.699E-08, 3.695E-08, 5.099E-08,
     3 4.486E-08, 4.480E-08, 4.479E-08, 5.240E-08, 4.448E-08, 6.496E-08,
     4 7.107E-08, 8.540E-08, 5.706E-08, 2.900E-08, 4.300E-08, 7.128E-08,
     5 9.295E-08, 9.322E-08, 9.936E-08, 9.935E-08, 9.934E-08, 1.134E-07,
     6 9.146E-08, 1.195E-07, 1.055E-07, 9.177E-08, 9.207E-08, 9.848E-08,
     7 9.876E-08, 9.846E-08, 9.846E-08, 1.125E-07, 1.122E-07, 1.122E-07,
     8 1.183E-07, 1.324E-07, 1.321E-07, 1.245E-07, 1.245E-07, 1.108E-07,
     9 1.251E-07, 1.315E-07, 1.380E-07, 1.303E-07, 1.227E-07, 1.148E-07,
     & 1.148E-07, 1.289E-07, 1.350E-07, 1.210E-07, 1.351E-07, 1.556E-07,
     1 1.559E-07, 1.479E-07, 1.681E-07, 1.465E-07, 1.591E-07, 1.591E-07,
     2 1.667E-07, 1.808E-07, 1.670E-07, 1.667E-07, 1.592E-07, 1.376E-07,
     3 1.498E-07, 1.562E-07, 1.986E-07, 2.206E-07, 2.209E-07, 2.147E-07,
     4 2.069E-07, 2.069E-07, 2.130E-07, 1.990E-07, 2.051E-07, 2.268E-07,
     5 2.552E-07, 2.689E-07, 2.973E-07, 3.034E-07, 3.177E-07, 3.101E-07,
     6 3.242E-07, 3.102E-07, 3.038E-07, 3.053E-07, 2.909E-07, 2.909E-07,
     7 2.988E-07, 2.988E-07, 3.128E-07, 3.128E-07/                      
      DATA (Z(I),I= 1101, 1200)/                                        
     1 3.193E-07, 3.257E-07, 3.257E-07, 3.461E-07, 3.321E-07, 3.321E-07,
     2 3.257E-07, 3.256E-07, 3.257E-07, 3.394E-07, 3.391E-07, 3.248E-07,
     3 3.248E-07, 3.251E-07, 3.172E-07, 3.175E-07, 3.239E-07, 3.236E-07,
     4 3.028E-07, 3.229E-07, 3.306E-07, 3.309E-07, 3.528E-07, 3.531E-07,
     5 3.394E-07, 3.315E-07, 3.175E-07, 3.236E-07, 3.017E-07, 3.157E-07,
     6 3.157E-07, 3.295E-07, 3.154E-07, 3.154E-07, 3.093E-07, 2.952E-07,
     7 2.812E-07, 2.671E-07, 2.672E-07, 2.734E-07, 2.731E-07, 2.792E-07,
     8 2.997E-07, 2.933E-07, 2.792E-07, 2.792E-07, 2.653E-07, 2.372E-07,
     9 2.289E-07, 2.290E-07, 2.276E-07, 2.132E-07, 2.211E-07, 2.431E-07,
     & 2.369E-07, 2.448E-07, 2.388E-07, 2.247E-07, 2.043E-07, 2.043E-07,
     1 1.903E-07, 1.967E-07, 2.251E-07, 2.235E-07, 2.300E-07, 2.301E-07,
     2 2.234E-07, 2.295E-07, 2.368E-07, 2.365E-07, 2.368E-07, 2.089E-07,
     3 2.093E-07, 1.894E-07, 1.757E-07, 1.895E-07, 2.035E-07, 2.319E-07,
     4 2.394E-07, 2.236E-07, 2.376E-07, 1.937E-07, 1.658E-07, 1.374E-07,
     5 1.456E-07, 1.395E-07, 1.690E-07, 1.769E-07, 1.849E-07, 1.988E-07,
     6 1.988E-07, 1.769E-07, 1.708E-07, 1.976E-07, 2.042E-07, 2.105E-07,
     7 2.171E-07, 2.310E-07, 2.249E-07, 2.389E-07/                      
      DATA (Z(I),I= 1201, 1300)/                                        
     1 2.246E-07, 2.109E-07, 1.822E-07, 1.682E-07, 1.536E-07, 1.467E-07,
     2 1.529E-07, 1.593E-07, 1.521E-07, 1.866E-07, 1.930E-07, 1.729E-07,
     3 1.947E-07, 1.745E-07, 1.623E-07, 1.562E-07, 1.636E-07, 1.629E-07,
     4 1.626E-07, 1.623E-07, 1.688E-07, 1.750E-07, 1.676E-07, 1.878E-07,
     5 1.946E-07, 2.151E-07, 2.086E-07, 2.086E-07, 1.946E-07, 2.087E-07,
     6 2.007E-07, 1.784E-07, 1.630E-07, 1.613E-07, 1.551E-07, 1.425E-07,
     7 1.507E-07, 1.242E-07, 1.184E-07, 1.259E-07, 1.605E-07, 1.540E-07,
     8 1.962E-07, 2.102E-07, 1.804E-07, 1.585E-07, 1.225E-07, 9.271E-08,
     9 7.834E-08, 1.067E-07, 1.144E-07, 1.205E-07, 1.489E-07, 1.568E-07,
     & 1.162E-07, 1.039E-07, 1.399E-07, 1.196E-07, 1.263E-07, 1.267E-07,
     1 9.704E-08, 8.956E-08, 6.793E-08, 9.629E-08, 1.241E-07, 1.383E-07,
     2 1.662E-07, 1.742E-07, 1.256E-07, 7.070E-08, 6.420E-08, 3.083E-08,
     3 5.131E-08, 5.781E-08, 7.816E-08, 6.300E-08, 8.356E-08, 7.602E-08,
     4 9.796E-08, 9.801E-08, 1.402E-07, 1.758E-07, 1.478E-07, 1.261E-07,
     5 6.339E-08, 2.789E-08,-2.071E-08,-2.791E-08,-4.312E-08,-3.657E-08,
     6-9.756E-09, 3.890E-08, 2.843E-09,-3.339E-09,-3.133E-08,-5.142E-08,
     7-7.951E-08,-5.144E-08,-4.518E-08,-9.156E-09/                      
      DATA (Z(I),I= 1301, 1400)/                                        
     1 1.096E-08, 1.085E-08, 3.110E-08, 5.755E-08, 7.769E-08, 6.960E-08,
     2 6.819E-08, 4.017E-08, 2.609E-08,-8.452E-09,-2.233E-08,-4.403E-08,
     3-1.706E-08, 1.748E-08, 2.296E-09, 1.513E-08,-6.365E-09,-3.449E-08,
     4-6.250E-08,-5.452E-08,-8.259E-08,-1.186E-07,-1.342E-07,-1.281E-07,
     5-1.579E-07,-1.736E-07,-1.812E-07,-1.666E-07,-1.662E-07,-1.655E-07,
     6-1.787E-07,-1.864E-07,-2.023E-07,-2.179E-07,-2.260E-07,-2.417E-07,
     7-2.499E-07,-2.504E-07,-2.510E-07,-2.516E-07,-2.657E-07,-2.738E-07,
     8-2.889E-07,-3.182E-07,-3.259E-07,-3.346E-07,-3.486E-07,-3.754E-07,
     9-3.819E-07,-3.947E-07,-3.998E-07,-4.139E-07,-4.214E-07,-4.162E-07,
     &-4.378E-07,-4.672E-07,-4.888E-07,-4.964E-07,-4.825E-07,-4.964E-07,
     1-4.964E-07,-5.040E-07,-5.524E-07,-4.964E-07,-4.963E-07,-4.963E-07,
     2-4.963E-07,-4.963E-07,-4.964E-07,-4.963E-07,-4.964E-07,-4.963E-07,
     3-4.963E-07,-4.963E-07,-4.963E-07,-5.724E-07,-4.964E-07,-4.963E-07,
     4-6.365E-07,-4.963E-07,-5.577E-07,-6.978E-07,-5.575E-07,-5.576E-07,
     5-6.950E-07,-5.577E-07,-5.576E-07,-6.951E-07,-5.577E-07,-5.577E-07,
     6-5.577E-07,-5.576E-07,-5.576E-07,-6.950E-07,-5.577E-07,-6.978E-07,
     7-5.576E-07,-5.577E-07,-5.576E-07,-5.577E-07/                      
      DATA (Z(I),I= 1401, 1500)/                                        
     1-5.576E-07,-5.577E-07,-5.576E-07,-7.010E-07,-8.381E-07,-8.383E-07,
     2-6.977E-07,-8.411E-07,-8.411E-07,-5.604E-07,-8.411E-07,-7.005E-07,
     3-8.410E-07,-7.006E-07,-6.978E-07,-8.379E-07,-7.006E-07,-8.381E-07,
     4-8.378E-07,-8.349E-07,-8.380E-07,-8.380E-07,-8.351E-07,-8.379E-07,
     5-8.379E-07,-8.380E-07,-8.379E-07,-8.350E-07,-8.350E-07,-8.350E-07,
     6-8.351E-07,-9.751E-07,-9.751E-07,-8.350E-07,-8.351E-07,-8.380E-07,
     7-8.379E-07,-9.751E-07,-8.377E-07,-8.379E-07,-8.379E-07,-9.140E-07,
     8-9.139E-07,-8.527E-07,-9.286E-07,-8.526E-07,-9.286E-07,-7.881E-07,
     9-8.526E-07,-7.882E-07,-6.477E-07,-7.122E-07,-7.121E-07,-7.883E-07,
     &-6.475E-07,-8.524E-07,-8.522E-07,-6.478E-07,-7.881E-07,-7.883E-07,
     1-7.124E-07,-6.475E-07,-6.476E-07,-7.238E-07,-6.478E-07,-5.834E-07,
     2-8.637E-07,-5.832E-07,-8.025E-07,-5.832E-07,-5.219E-07,-5.218E-07,
     3-7.412E-07,-7.413E-07,-6.010E-07,-6.011E-07,-7.413E-07,-7.410E-07,
     4-5.221E-07,-5.219E-07,-4.576E-07,-6.007E-07,-4.604E-07,-4.603E-07,
     5-3.814E-07,-3.169E-07,-3.199E-07,-3.813E-07,-3.813E-07,-4.601E-07,
     6-3.201E-07,-3.203E-07,-3.201E-07,-3.200E-07,-3.202E-07,-3.991E-07,
     7-2.587E-07,-2.560E-07,-2.589E-07,-2.587E-07/                      
      DATA (Z(I),I= 1501, 1600)/                                        
     1-2.591E-07,-3.202E-07,-3.950E-08,-3.960E-08, 3.970E-08, 3.965E-08,
     2-1.009E-07,-3.950E-08, 3.965E-08,-1.009E-07, 1.038E-07,-3.955E-08,
     3-3.950E-08,-3.955E-08,-3.960E-08,-3.950E-08,-3.955E-08, 2.176E-08,
     4 9.783E-08,-4.263E-08, 3.668E-08,-1.039E-07, 3.329E-08, 3.605E-08,
     5-2.791E-08,-2.515E-08, 1.121E-07, 1.149E-07, 1.150E-07, 1.150E-07,
     6 1.148E-07, 1.150E-07, 1.149E-07, 1.150E-07,-2.838E-08,-2.823E-08,
     7-2.833E-08, 1.118E-07,-3.157E-08, 4.727E-08,-9.266E-08,-9.276E-08,
     8 5.061E-08, 2.666E-07, 1.263E-07, 1.906E-07, 1.262E-07,-1.403E-08,
     9-1.544E-07,-9.308E-08, 5.024E-08,-9.318E-08,-1.543E-07,-1.545E-07,
     &-1.435E-08,-1.440E-08,-7.873E-08,-7.863E-08,-7.878E-08,-7.883E-08,
     1-7.878E-08,-7.878E-08,-2.221E-07,-7.873E-08,-2.833E-07,-7.878E-08,
     2-1.432E-07,-2.220E-07,-2.865E-07,-3.478E-07,-3.478E-07,-3.478E-07,
     3-3.478E-07,-4.091E-07,-3.448E-07,-3.448E-07,-3.448E-07,-2.046E-07,
     4-2.046E-07,-4.090E-07,-2.044E-07,-3.446E-07,-4.092E-07,-2.045E-07,
     5-2.046E-07,-2.045E-07,-2.046E-07,-2.046E-07,-2.044E-07,-2.047E-07,
     6-2.045E-07,-2.046E-07,-2.046E-07,-4.852E-07,-3.446E-07,-2.806E-07,
     7-2.806E-07,-2.805E-07,-5.611E-07,-3.418E-07/                      
      DATA (Z(I),I= 1601, 1700)/                                        
     1-3.416E-07,-4.820E-07,-4.031E-07,-3.418E-07,-3.418E-07,-4.819E-07,
     2-4.059E-07,-3.447E-07,-3.447E-07,-3.447E-07,-3.447E-07,-4.848E-07,
     3-3.447E-07,-3.446E-07,-3.448E-07,-3.447E-07,-3.446E-07,-3.447E-07,
     4-3.447E-07,-4.202E-07,-4.203E-07,-4.205E-07,-4.204E-07,-2.801E-07,
     5-2.802E-07,-2.801E-07,-4.203E-07,-4.203E-07,-2.830E-07,-2.830E-07,
     6-4.230E-07,-4.233E-07,-2.831E-07,-4.230E-07,-2.829E-07,-3.619E-07,
     7-3.590E-07,-3.618E-07,-4.992E-07,-4.991E-07,-4.992E-07,-4.378E-07,
     8-4.378E-07,-2.973E-07,-7.816E-08,-2.974E-07,-2.186E-07,-2.186E-07,
     9-2.186E-07,-7.800E-08,-7.800E-08,-2.181E-07,-7.816E-08,-2.182E-07,
     &-7.810E-08,-1.568E-07,-7.758E-08,-7.774E-08, 6.250E-08,-7.810E-08,
     1-2.183E-07,-1.568E-07,-1.569E-07,-2.179E-07,-7.810E-08,-7.800E-08,
     2-7.795E-08,-7.800E-08,-2.973E-07,-2.973E-07,-7.805E-08,-2.185E-07,
     3-3.586E-07,-3.588E-07,-2.973E-07,-1.541E-07,-3.586E-07,-2.152E-07,
     4-7.805E-08,-2.154E-07,-1.541E-07,-7.518E-08,-2.154E-07,-7.523E-08,
     5-1.393E-07,-7.518E-08,-1.396E-07, 7.826E-10,-1.396E-07,-2.798E-07,
     6 9.391E-10,-2.798E-07,-2.799E-07,-1.396E-07,-1.396E-07,-1.425E-07,
     7-1.397E-07,-1.397E-07,-1.430E-07,-1.427E-07/                      
      DATA (Z(I),I= 1701, 1800)/                                        
     1-1.430E-07,-2.609E-09, 4.174E-10, 5.217E-10, 3.652E-10,-2.348E-09,
     2-1.397E-07, 3.652E-10, 5.739E-10, 4.696E-10, 4.696E-10, 4.696E-10,
     3 2.609E-10, 4.696E-10,-6.407E-08, 1.406E-07, 7.654E-08,-6.402E-08,
     4-6.402E-08,-6.412E-08,-6.402E-08, 1.205E-08,-6.396E-08,-6.407E-08,
     5-6.402E-08,-6.407E-08,-6.402E-08,-6.402E-08,-1.252E-07, 1.487E-08,
     6-6.130E-08,-6.130E-08,-1.256E-07,-2.046E-07,-2.045E-07,-6.130E-08,
     7-6.130E-08,-6.438E-08,-6.449E-08,-1.288E-07,-6.438E-08,-6.449E-08,
     8-6.449E-08,-6.443E-08,-6.443E-08,-6.438E-08,-6.438E-08,-1.258E-07,
     9 1.435E-08, 1.440E-08, 1.440E-08,-2.645E-08,-4.043E-08,-8.129E-08,
     &-8.791E-08,-7.268E-08,-5.113E-08,-5.770E-08,-7.821E-08,-9.219E-08,
     1-1.203E-07,-1.483E-07,-1.639E-07,-1.921E-07,-1.559E-07,-1.422E-07,
     2-1.278E-07,-7.962E-08,-1.560E-08, 4.664E-08, 6.057E-08, 4.649E-08,
     3 1.883E-08, 4.696E-09,-2.332E-08,-3.751E-08,-3.751E-08,-5.937E-08,
     4-6.553E-08,-7.983E-08,-7.983E-08,-6.584E-08,-5.932E-08,-6.548E-08,
     5-1.079E-07,-1.436E-07,-1.717E-07,-1.576E-07,-1.782E-07,-1.719E-07,
     6-1.502E-07,-1.489E-07,-9.939E-08,-9.814E-08,-9.819E-08,-1.110E-07,
     7-1.174E-07,-1.313E-07,-1.454E-07,-1.594E-07/                      
      DATA (Z(I),I= 1801, 1900)/                                        
     1-1.454E-07,-1.314E-07,-1.173E-07,-1.044E-07,-1.121E-07,-1.198E-07,
     2-1.554E-07,-1.630E-07,-1.502E-07,-1.798E-07,-1.797E-07,-1.578E-07,
     3-1.653E-07,-1.654E-07,-1.657E-07,-1.578E-07,-1.517E-07,-1.514E-07,
     4-1.374E-07,-1.233E-07,-1.297E-07,-1.516E-07,-1.513E-07,-1.798E-07,
     5-1.793E-07,-1.933E-07,-1.934E-07,-2.013E-07,-1.796E-07,-1.513E-07,
     6-1.437E-07,-1.145E-07,-1.007E-07,-9.318E-08,-9.198E-08,-9.835E-08,
     7-1.049E-07,-9.078E-08,-9.083E-08,-9.845E-08,-1.266E-07,-1.545E-07,
     8-2.108E-07,-2.169E-07,-1.949E-07,-2.011E-07,-1.853E-07,-1.853E-07,
     9-1.555E-07,-1.413E-07,-1.333E-07,-1.474E-07,-1.478E-07,-1.619E-07,
     &-1.834E-07,-2.255E-07,-2.536E-07,-2.536E-07,-2.472E-07,-2.677E-07,
     1-2.255E-07,-2.055E-07,-1.555E-07,-1.495E-07,-1.480E-07,-1.684E-07,
     2-1.748E-07,-1.955E-07,-1.880E-07,-1.945E-07,-2.007E-07,-1.926E-07,
     3-1.989E-07,-1.910E-07,-1.831E-07,-1.469E-07,-1.393E-07,-1.454E-07,
     4-1.658E-07,-2.003E-07,-2.352E-07,-2.133E-07,-1.981E-07,-1.844E-07,
     5-1.705E-07,-1.780E-07,-1.932E-07,-1.930E-07,-1.724E-07,-1.521E-07,
     6-1.176E-07,-1.393E-07,-1.676E-07,-1.812E-07,-1.955E-07,-1.672E-07,
     7-1.536E-07,-1.252E-07,-1.113E-07,-9.715E-08/                      
      DATA (Z(I),I= 1901, 2000)/                                        
     1-9.725E-08,-6.918E-08,-1.112E-07,-9.720E-08,-1.256E-07,-1.111E-07,
     2-8.343E-08,-8.309E-08,-5.502E-08,-2.687E-08,-2.721E-08,-2.723E-08,
     3-2.079E-08,-1.463E-08, 5.113E-09, 1.158E-08,-5.241E-08,-1.165E-07,
     4-1.602E-07,-1.805E-07,-1.456E-07,-1.176E-07,-1.169E-07,-1.166E-07,
     5-1.583E-07,-1.580E-07,-1.658E-07,-1.382E-07,-1.103E-07,-8.259E-08,
     6-1.109E-07,-1.252E-07,-1.611E-07,-1.754E-07,-1.626E-07,-1.483E-07,
     7-1.561E-07,-1.574E-07,-1.790E-07,-2.005E-07,-2.363E-07,-2.081E-07,
     8-2.082E-07,-1.801E-07,-2.020E-07,-2.160E-07,-2.082E-07,-2.020E-07,
     9-1.741E-07,-1.325E-07,-1.047E-07,-9.861E-08,-1.127E-07,-9.884E-08,
     &-1.131E-07,-1.270E-07,-1.406E-07,-1.546E-07,-1.478E-07,-1.194E-07,
     1-1.333E-07,-1.050E-07,-1.190E-07,-1.114E-07,-1.319E-07,-1.321E-07,
     2-1.246E-07,-1.450E-07,-1.590E-07,-1.656E-07,-1.935E-07,-2.140E-07,
     3-2.205E-07,-2.345E-07,-2.550E-07,-2.475E-07,-2.615E-07,-2.335E-07,
     4-2.411E-07,-2.414E-07,-2.273E-07,-1.928E-07,-1.788E-07,-1.709E-07,
     5-1.709E-07,-1.850E-07,-1.909E-07,-1.908E-07,-2.049E-07,-1.967E-07,
     6-2.032E-07,-2.452E-07,-2.589E-07,-3.211E-07,-3.352E-07,-3.133E-07,
     7-2.710E-07,-2.275E-07,-2.278E-07,-2.203E-07/                      
      DATA (Z(I),I= 2001, 2100)/                                        
     1-2.267E-07,-2.392E-07,-2.600E-07,-2.665E-07,-2.729E-07,-2.793E-07,
     2-2.934E-07,-3.153E-07,-3.291E-07,-3.229E-07,-3.153E-07,-2.871E-07,
     3-2.730E-07,-2.950E-07,-3.166E-07,-3.510E-07,-3.791E-07,-3.446E-07,
     4-3.446E-07,-3.447E-07,-3.307E-07,-3.231E-07,-3.512E-07,-3.436E-07,
     5-3.439E-07,-3.503E-07,-3.500E-07,-3.565E-07,-3.708E-07,-3.845E-07,
     6-3.845E-07,-4.065E-07,-3.986E-07,-4.061E-07,-4.065E-07,-4.205E-07,
     7-3.925E-07,-3.861E-07,-3.580E-07,-3.720E-07,-3.720E-07,-4.001E-07,
     8-4.141E-07,-4.140E-07,-4.138E-07,-4.338E-07,-4.263E-07,-4.123E-07,
     9-3.900E-07,-3.620E-07,-3.480E-07,-3.265E-07,-3.408E-07,-3.268E-07,
     &-3.470E-07,-3.674E-07,-4.095E-07,-4.515E-07,-4.723E-07,-4.863E-07,
     1-5.143E-07,-5.205E-07,-4.925E-07,-4.571E-07,-4.151E-07,-4.011E-07,
     2-3.932E-07,-3.713E-07,-3.652E-07,-3.574E-07,-3.495E-07,-3.632E-07,
     3-3.635E-07,-3.977E-07,-4.602E-07,-5.084E-07,-5.569E-07,-5.286E-07,
     4-4.930E-07,-4.431E-07,-4.216E-07,-4.061E-07,-4.262E-07,-4.187E-07,
     5-4.248E-07,-4.234E-07,-4.018E-07,-4.219E-07,-4.223E-07,-4.640E-07,
     6-4.924E-07,-5.283E-07,-5.424E-07,-5.223E-07,-4.802E-07,-4.522E-07,
     7-4.241E-07,-4.178E-07,-4.181E-07,-3.976E-07/                      
      DATA (Z(I),I= 2101, 2200)/                                        
     1-4.256E-07,-4.472E-07,-4.674E-07,-4.750E-07,-4.825E-07,-4.702E-07,
     2-4.562E-07,-4.498E-07,-4.716E-07,-4.792E-07,-4.867E-07,-4.884E-07,
     3-4.820E-07,-4.618E-07,-4.355E-07,-4.290E-07,-4.664E-07,-5.023E-07,
     4-5.177E-07,-5.191E-07,-4.852E-07,-4.446E-07,-4.101E-07,-3.975E-07,
     5-4.272E-07,-4.426E-07,-4.505E-07,-4.235E-07,-3.815E-07,-3.330E-07,
     6-2.910E-07,-3.124E-07,-3.279E-07,-3.699E-07,-3.978E-07,-3.914E-07,
     7-3.569E-07,-3.166E-07,-2.821E-07,-2.896E-07,-3.115E-07,-3.269E-07,
     8-3.485E-07,-3.280E-07,-3.140E-07,-2.999E-07,-2.863E-07,-3.079E-07,
     9-3.139E-07,-3.139E-07,-3.218E-07,-3.075E-07,-3.496E-07,-3.417E-07,
     &-3.277E-07,-3.415E-07,-3.476E-07,-3.695E-07,-3.757E-07,-3.617E-07,
     1-3.617E-07,-3.603E-07,-3.463E-07,-3.463E-07,-3.448E-07,-3.448E-07,
     2-3.448E-07,-3.509E-07,-3.714E-07,-3.775E-07,-3.918E-07,-3.840E-07,
     3-3.764E-07,-3.545E-07,-3.265E-07,-3.531E-07,-3.812E-07,-4.156E-07,
     4-4.361E-07,-4.362E-07,-4.143E-07,-4.208E-07,-3.928E-07,-4.068E-07,
     5-4.349E-07,-4.553E-07,-4.895E-07,-4.755E-07,-4.616E-07,-4.256E-07,
     6-4.119E-07,-4.181E-07,-4.325E-07,-4.386E-07,-4.670E-07,-4.734E-07,
     7-4.734E-07,-4.659E-07,-4.723E-07,-5.004E-07/                      
      DATA (Z(I),I= 2201, 2300)/                                        
     1-5.141E-07,-5.342E-07,-5.763E-07,-5.623E-07,-5.404E-07,-5.124E-07,
     2-4.905E-07,-4.905E-07,-4.905E-07,-5.109E-07,-5.250E-07,-5.455E-07,
     3-5.315E-07,-5.379E-07,-5.382E-07,-5.303E-07,-5.239E-07,-4.958E-07,
     4-5.020E-07,-5.098E-07,-4.879E-07,-4.879E-07,-4.800E-07,-4.876E-07,
     5-4.879E-07,-5.016E-07,-5.159E-07,-5.439E-07,-5.296E-07,-5.158E-07,
     6-5.159E-07,-5.094E-07,-4.875E-07,-4.735E-07,-4.735E-07,-4.735E-07,
     7-4.811E-07,-4.671E-07,-4.954E-07,-4.893E-07,-4.673E-07,-4.534E-07,
     8-4.394E-07,-4.037E-07,-4.037E-07,-4.241E-07,-4.662E-07,-4.942E-07,
     9-5.226E-07,-5.147E-07,-5.007E-07,-5.147E-07,-5.007E-07,-5.007E-07,
     &-4.928E-07,-5.008E-07,-4.791E-07,-5.072E-07,-5.198E-07,-5.338E-07,
     1-5.478E-07,-5.324E-07,-5.327E-07,-5.108E-07,-4.892E-07,-5.093E-07,
     2-5.514E-07,-5.715E-07,-6.060E-07,-6.481E-07,-5.982E-07,-5.766E-07,
     3-5.483E-07,-5.203E-07,-5.344E-07,-5.405E-07,-5.265E-07,-5.469E-07,
     4-5.405E-07,-5.466E-07,-5.326E-07,-5.324E-07,-5.607E-07,-5.542E-07,
     5-5.747E-07,-5.826E-07,-5.966E-07,-5.966E-07,-5.765E-07,-5.625E-07,
     6-5.487E-07,-5.423E-07,-5.438E-07,-5.300E-07,-5.236E-07,-5.311E-07,
     7-5.527E-07,-5.466E-07,-5.541E-07,-5.480E-07/                      
      DATA (Z(I),I= 2301, 2400)/                                        
     1-5.415E-07,-5.289E-07,-5.009E-07,-4.883E-07,-5.099E-07,-5.037E-07,
     2-4.973E-07,-4.911E-07,-4.286E-07,-3.660E-07,-3.035E-07,-2.489E-07,
     3-2.844E-07,-3.340E-07,-3.760E-07,-4.335E-07,-4.410E-07,-4.269E-07,
     4-4.488E-07,-4.348E-07,-4.423E-07,-4.286E-07,-4.221E-07,-4.081E-07,
     5-4.019E-07,-4.019E-07,-3.599E-07,-3.459E-07,-3.179E-07,-3.395E-07,
     6-3.473E-07,-3.754E-07,-4.034E-07,-4.031E-07,-4.033E-07,-3.969E-07,
     7-3.969E-07,-3.890E-07,-3.891E-07,-4.031E-07,-4.031E-07,-4.031E-07,
     8-4.031E-07,-4.031E-07,-4.095E-07,-4.235E-07,-4.019E-07,-4.160E-07,
     9-3.958E-07,-3.882E-07,-3.742E-07,-3.804E-07,-3.944E-07,-4.011E-07,
     &-4.073E-07,-4.073E-07,-3.994E-07,-3.997E-07,-3.919E-07,-4.059E-07,
     1-3.983E-07,-3.983E-07,-4.045E-07,-3.902E-07,-3.963E-07,-3.963E-07,
     2-4.025E-07,-4.165E-07,-4.230E-07,-4.510E-07,-4.793E-07,-5.276E-07,
     3-5.492E-07,-5.212E-07,-5.074E-07,-4.935E-07,-4.576E-07,-4.576E-07,
     4-4.640E-07,-4.921E-07,-4.985E-07,-4.982E-07,-4.985E-07,-4.985E-07,
     5-4.944E-07,-4.952E-07,-5.176E-07,-5.243E-07,-5.594E-07,-5.868E-07,
     6-6.078E-07,-6.009E-07,-5.939E-07,-5.869E-07,-5.502E-07,-5.515E-07,
     7-5.487E-07,-5.599E-07,-5.661E-07,-5.695E-07/                      
      DATA (Z(I),I= 2401, 2500)/                                        
     1-5.667E-07,-5.574E-07,-5.560E-07,-5.532E-07,-5.221E-07,-5.314E-07,
     2-5.061E-07,-4.870E-07,-4.811E-07,-4.715E-07,-4.773E-07,-4.683E-07,
     3-4.601E-07,-4.733E-07,-4.546E-07,-4.414E-07,-4.385E-07,-4.191E-07,
     4-4.363E-07,-4.309E-07,-4.395E-07,-4.499E-07,-4.353E-07,-4.183E-07,
     5-4.019E-07,-4.052E-07,-3.913E-07,-3.900E-07,-3.902E-07,-3.931E-07,
     6-3.953E-07,-3.960E-07,-3.944E-07,-3.943E-07,-3.948E-07,-3.911E-07,
     7-3.817E-07,-3.704E-07,-3.583E-07,-3.475E-07,-3.403E-07,-3.394E-07,
     8-3.356E-07,-3.333E-07,-3.309E-07,-3.257E-07,-3.206E-07,-3.148E-07,
     9-3.096E-07,-3.108E-07,-3.247E-07,-3.364E-07,-3.517E-07,-3.635E-07,
     &-3.555E-07,-3.400E-07,-3.238E-07,-3.082E-07,-3.003E-07,-3.170E-07,
     1-3.359E-07,-3.518E-07,-3.707E-07,-3.698E-07,-3.543E-07,-3.388E-07,
     2-3.232E-07,-3.092E-07,-3.154E-07,-3.275E-07,-3.359E-07,-3.486E-07,
     3-3.578E-07,-3.578E-07,-3.607E-07,-3.643E-07,-3.672E-07,-3.668E-07,
     4-3.645E-07,-3.628E-07,-3.626E-07,-3.652E-07,-3.859E-07,-4.088E-07,
     5-4.338E-07,-4.595E-07,-4.744E-07,-4.748E-07,-4.758E-07,-4.761E-07,
     6-4.772E-07,-4.909E-07,-5.102E-07,-5.308E-07,-5.501E-07,-5.653E-07,
     7-5.538E-07,-5.375E-07,-5.190E-07,-5.028E-07/                      
      DATA (Z(I),I= 2501, 2600)/                                        
     1-4.997E-07,-5.220E-07,-5.441E-07,-5.685E-07,-5.907E-07,-5.939E-07,
     2-5.815E-07,-5.711E-07,-5.615E-07,-5.499E-07,-5.515E-07,-5.545E-07,
     3-5.589E-07,-5.625E-07,-5.621E-07,-5.540E-07,-5.438E-07,-5.328E-07,
     4-5.212E-07,-5.144E-07,-5.105E-07,-5.065E-07,-5.034E-07,-4.994E-07,
     5-4.926E-07,-4.837E-07,-4.761E-07,-4.672E-07,-4.611E-07,-4.521E-07,
     6-4.445E-07,-4.370E-07,-4.294E-07,-4.233E-07,-4.186E-07,-4.159E-07,
     7-4.126E-07,-4.093E-07,-4.018E-07,-3.901E-07,-3.776E-07,-3.659E-07,
     8-3.542E-07,-3.515E-07,-3.558E-07,-3.600E-07,-3.643E-07,-3.651E-07,
     9-3.546E-07,-3.379E-07,-3.204E-07,-3.058E-07,-2.933E-07,-2.947E-07,
     &-2.975E-07,-3.010E-07,-3.052E-07,-3.066E-07,-2.933E-07,-2.793E-07,
     1-2.667E-07,-2.563E-07,-2.499E-07,-2.561E-07,-2.603E-07,-2.686E-07,
     2-2.762E-07,-2.712E-07,-2.599E-07,-2.459E-07,-2.360E-07,-2.240E-07,
     3-2.218E-07,-2.260E-07,-2.294E-07,-2.328E-07,-2.370E-07,-2.342E-07,
     4-2.306E-07,-2.292E-07,-2.250E-07,-2.243E-07,-2.236E-07,-2.216E-07,
     5-2.216E-07,-2.210E-07,-2.225E-07,-2.246E-07,-2.290E-07,-2.318E-07,
     6-2.354E-07,-2.376E-07,-2.313E-07,-2.245E-07,-2.198E-07,-2.129E-07,
     7-2.102E-07,-2.160E-07,-2.210E-07,-2.253E-07/                      
      DATA (Z(I),I= 2601, 2700)/                                        
     1-2.297E-07,-2.306E-07,-2.237E-07,-2.176E-07,-2.121E-07,-2.066E-07,
     2-2.062E-07,-2.077E-07,-2.092E-07,-2.143E-07,-2.144E-07,-2.140E-07,
     3-2.119E-07,-2.085E-07,-2.058E-07,-2.010E-07,-1.997E-07,-1.970E-07,
     4-1.936E-07,-1.915E-07,-1.896E-07,-1.874E-07,-1.838E-07,-1.816E-07,
     5-1.794E-07,-1.778E-07,-1.750E-07,-1.706E-07,-1.698E-07,-1.662E-07,
     6-1.648E-07,-1.632E-07,-1.602E-07,-1.580E-07,-1.586E-07,-1.557E-07,
     7-1.549E-07,-1.527E-07,-1.525E-07,-1.489E-07,-1.487E-07,-1.479E-07,
     8-1.486E-07,-1.484E-07,-1.491E-07,-1.489E-07,-1.488E-07,-1.494E-07,
     9-1.493E-07,-1.485E-07,-1.484E-07,-1.518E-07,-1.526E-07,-1.547E-07,
     &-1.569E-07,-1.575E-07,-1.611E-07,-1.632E-07,-1.640E-07,-1.654E-07,
     1-1.682E-07,-1.696E-07,-1.740E-07,-1.783E-07,-1.811E-07,-1.855E-07,
     2-1.885E-07,-1.927E-07,-1.956E-07,-1.992E-07,-2.028E-07,-2.051E-07,
     3-2.067E-07,-2.069E-07,-2.099E-07,-2.094E-07,-2.109E-07,-2.126E-07,
     4-2.141E-07,-2.136E-07,-2.131E-07,-2.140E-07,-2.135E-07,-2.124E-07,
     5-2.105E-07,-2.093E-07,-2.081E-07,-2.055E-07,-2.058E-07,-2.039E-07,
     6-2.028E-07,-2.023E-07,-1.996E-07,-1.984E-07,-1.951E-07,-1.959E-07,
     7-1.940E-07,-1.928E-07,-1.901E-07,-1.889E-07/                      
      DATA (Z(I),I= 2701, 2800)/                                        
     1-1.870E-07,-1.843E-07,-1.823E-07,-1.782E-07,-1.755E-07,-1.728E-07,
     2-1.702E-07,-1.647E-07,-1.634E-07,-1.593E-07,-1.566E-07,-1.518E-07,
     3-1.491E-07,-1.464E-07,-1.436E-07,-1.423E-07,-1.381E-07,-1.368E-07,
     4-1.334E-07,-1.299E-07,-1.287E-07,-1.258E-07,-1.232E-07,-1.203E-07,
     5-1.163E-07,-1.157E-07,-1.129E-07,-1.088E-07,-1.081E-07,-1.047E-07,
     6-1.019E-07,-1.006E-07,-9.780E-08,-9.514E-08,-9.455E-08,-9.330E-08,
     7-9.128E-08,-8.923E-08,-8.864E-08,-8.879E-08,-8.536E-08,-8.615E-08,
     8-8.414E-08,-8.288E-08,-8.226E-08,-8.305E-08,-8.305E-08,-8.244E-08,
     9-8.183E-08,-8.198E-08,-8.478E-08,-8.417E-08,-8.356E-08,-8.435E-08,
     &-8.370E-08,-8.370E-08,-8.432E-08,-8.575E-08,-8.651E-08,-8.651E-08,
     1-8.510E-08,-8.648E-08,-8.648E-08,-8.788E-08,-8.928E-08,-8.785E-08,
     2-8.645E-08,-8.770E-08,-8.627E-08,-8.627E-08,-8.627E-08,-8.685E-08,
     3-8.685E-08,-8.609E-08,-8.606E-08,-8.462E-08,-8.257E-08,-8.394E-08,
     4-8.330E-08,-8.186E-08,-8.265E-08,-8.186E-08,-8.122E-08,-7.978E-08,
     5-7.913E-08,-7.910E-08,-7.641E-08,-7.517E-08,-7.453E-08,-7.326E-08,
     6-7.060E-08,-6.998E-08,-6.732E-08,-6.886E-08,-6.541E-08,-6.417E-08,
     7-6.353E-08,-6.230E-08,-6.308E-08,-6.246E-08/                      
      DATA (Z(I),I= 2801, 2900)/                                        
     1-6.325E-08,-6.126E-08,-6.205E-08,-6.000E-08,-6.078E-08,-5.815E-08,
     2-5.893E-08,-5.896E-08,-5.896E-08,-5.960E-08,-5.960E-08,-5.823E-08,
     3-6.027E-08,-6.013E-08,-6.048E-08,-6.090E-08,-6.196E-08,-6.042E-08,
     4-6.145E-08,-6.167E-08,-5.982E-08,-6.005E-08,-6.021E-08,-6.029E-08,
     5-5.844E-08,-6.004E-08,-5.883E-08,-5.981E-08,-5.916E-08,-5.857E-08,
     6-5.779E-08,-5.930E-08,-5.790E-08,-5.801E-08,-5.863E-08,-5.798E-08,
     7-5.719E-08,-5.717E-08,-5.717E-08,-5.714E-08,-5.653E-08,-5.933E-08,
     8-5.872E-08,-5.808E-08,-5.948E-08,-5.887E-08,-5.965E-08,-5.963E-08,
     9-5.901E-08,-6.121E-08,-6.056E-08,-6.135E-08,-5.991E-08,-6.146E-08,
     &-6.146E-08,-6.222E-08,-6.300E-08,-6.376E-08,-6.315E-08,-6.455E-08,
     1-6.530E-08,-6.465E-08,-6.544E-08,-6.339E-08,-6.414E-08,-6.493E-08,
     2-6.367E-08,-6.506E-08,-6.377E-08,-6.377E-08,-6.315E-08,-6.390E-08,
     3-6.283E-08,-6.306E-08,-6.258E-08,-6.160E-08,-6.109E-08,-6.061E-08,
     4-6.010E-08,-5.830E-08,-5.820E-08,-5.667E-08,-5.671E-08,-5.521E-08,
     5-5.468E-08,-5.347E-08,-5.241E-08,-5.126E-08,-5.032E-08,-4.923E-08,
     6-4.822E-08,-4.715E-08,-4.619E-08,-4.512E-08,-4.411E-08,-4.294E-08,
     7-4.198E-08,-4.082E-08,-3.972E-08,-3.848E-08/                      
      DATA (Z(I),I= 2901, 3000)/                                        
     1-3.765E-08,-3.656E-08,-3.531E-08,-3.421E-08,-3.319E-08,-3.209E-08,
     2-3.131E-08,-3.082E-08,-3.010E-08,-2.947E-08,-2.890E-08,-2.833E-08,
     3-2.776E-08,-2.718E-08,-2.669E-08,-2.626E-08,-2.569E-08,-2.517E-08,
     4-2.505E-08,-2.494E-08,-2.504E-08,-2.485E-08,-2.481E-08,-2.454E-08,
     5-2.444E-08,-2.453E-08,-2.435E-08,-2.416E-08,-2.425E-08,-2.419E-08,
     6-2.441E-08,-2.454E-08,-2.448E-08,-2.470E-08,-2.463E-08,-2.491E-08,
     7-2.499E-08,-2.485E-08,-2.506E-08,-2.514E-08,-2.521E-08,-2.494E-08,
     8-2.501E-08,-2.488E-08,-2.488E-08,-2.460E-08,-2.475E-08,-2.468E-08,
     9-2.470E-08,-2.462E-08,-2.442E-08,-2.429E-08,-2.417E-08,-2.398E-08,
     &-2.373E-08,-2.353E-08,-2.314E-08,-2.295E-08,-2.276E-08,-2.264E-08,
     1-2.245E-08,-2.212E-08,-2.200E-08,-2.163E-08,-2.146E-08,-2.114E-08,
     2-2.091E-08,-2.081E-08,-2.064E-08,-2.047E-08,-2.009E-08,-1.999E-08,
     3-1.982E-08,-1.959E-08,-1.907E-08,-1.885E-08,-1.841E-08,-1.804E-08,
     4-1.760E-08,-1.724E-08,-1.674E-08,-1.630E-08,-1.579E-08,-1.564E-08,
     5-1.513E-08,-1.483E-08,-1.431E-08,-1.401E-08,-1.350E-08,-1.320E-08,
     6-1.289E-08,-1.238E-08,-1.228E-08,-1.190E-08,-1.146E-08,-1.116E-08,
     7-1.064E-08,-1.033E-08,-1.040E-08,-1.028E-08/                      
      DATA (Z(I),I= 3001, 3080)/                                        
     1-1.042E-08,-1.036E-08,-1.023E-08,-1.037E-08,-1.045E-08,-1.025E-08,
     2-1.033E-08,-1.026E-08,-1.040E-08,-1.054E-08,-1.080E-08,-1.111E-08,
     3-1.150E-08,-1.190E-08,-1.207E-08,-1.260E-08,-1.272E-08,-1.317E-08,
     4-1.342E-08,-1.368E-08,-1.399E-08,-1.426E-08,-1.466E-08,-1.493E-08,
     5-1.533E-08,-1.568E-08,-1.586E-08,-1.621E-08,-1.654E-08,-1.688E-08,
     6-1.714E-08,-1.741E-08,-1.775E-08,-1.805E-08,-1.794E-08,-1.819E-08,
     7-1.814E-08,-1.810E-08,-1.848E-08,-1.844E-08,-1.868E-08,-1.864E-08,
     8-1.874E-08,-1.885E-08,-1.887E-08,-1.864E-08,-1.835E-08,-1.819E-08,
     9-1.789E-08,-1.760E-08,-1.722E-08,-1.706E-08,-1.663E-08,-1.639E-08,
     &-1.610E-08,-1.580E-08,-1.536E-08,-1.480E-08,-1.459E-08,-1.403E-08,
     1-1.346E-08,-1.304E-08,-1.248E-08,-1.199E-08,-1.157E-08,-1.115E-08,
     2-1.045E-08,-1.002E-08,-9.538E-09,-8.929E-09,-8.535E-09,-8.001E-09,
     3-7.532E-09,-6.920E-09,-6.422E-09,-6.094E-09,-5.472E-09,-4.954E-09,
     4-4.367E-09,-3.874E-09/                                            
C                                                                       
      IF (V .LT. VBEG .OR. V .GT. VEND) THEN                            
         C0=0.0                                                         
         CT1=0.0                                                        
         CT2=0.0                                                        
         RETURN                                                         
      ELSE IF (V .EQ. VEND) THEN                                        
C        THIS CHECK PREVENTS N FROM EXCEEDING NMAX IN THE ALGORITHM BELO
         C0=X(NMAX)                                                     
         CT1=Y(NMAX)                                                    
         CT2=Z(NMAX)                                                    
      ELSE                                                              
         XI = (V-VBEG)/VINCR+1.                                         
         N = XI+1.+1.E-6                                                
         XD = XI-N                                                      
         C0 = X(N)+XD*(X(N)-X(N-1))                                     
         CT1 = Y(N)+XD*(Y(N)-Y(N-1))                                    
         CT2 = Z(N)+XD*(Z(N)-Z(N-1))                                    
      ENDIF                                                             
      CT1=CT1/C0                                                        
      CT2=CT2/C0                                                        
      RETURN                                                            
      END                                                               
      SUBROUTINE O3HHT0(V,C)                                            
      COMMON /O3HH0/ V1S,V2S,DVS,NPTS,S(2687)                           
C                                                                       
      CALL O3INT(V ,V1S,DVS,NPTS,S,C)                                   
      RETURN                                                            
      END                                                               
      SUBROUTINE O3HHT1(V,C)                                            
C     SUBROUTINE O3HHT1(V1C,V2C,DVC,NPTC,C)                             
      COMMON /O3HH1/ V1S,V2S,DVS,NPTS,S(2687)                           
C                                                                       
      CALL O3INT(V ,V1S,DVS,NPTS,S,C)                                   
C                                                                       
      RETURN                                                            
      END                                                               
      SUBROUTINE O3HHT2(V,C)                                            
      COMMON /O3HH2/ V1S,V2S,DVS,NPTS,S(2687)                           
C                                                                       
      CALL O3INT(V ,V1S,DVS,NPTS,S,C)                                   
C                                                                       
      RETURN                                                            
      END                                                               
      SUBROUTINE O3INT(V1C,V1,DV,NPT,CONTI,CONTO)                       
C                                                                       
C     INTERPOLATION  FOR  O3 CONTINUUM WITH LOWTRAN                     
C                                                                       
      DIMENSION CONTI(2687)                                             
      CONTO=0.                                                          
      I=(V1C-V1)/DV+1.00001                                             
      IF(I.LT.1  )GO TO 10                                              
      IF(I.GT.NPT)GO TO 10                                              
      CONTO=CONTI(I)                                                    
10    CONTINUE                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE O3UV(V,C)                                              
      COMMON /O3UVF/ V1 ,V2 ,DV ,NPT ,S(133)                            
C                                                                       
C     INTERPOLATION  FOR  O3 CONTINUUM WITH LOWTRAN                     
C                                                                       
      C    =0.                                                          
      I=(V  -V1)/DV+1.00001                                             
      IF(I.LT.1   )GO TO 10                                             
      IF(I.GT.NPT )GO TO 10                                             
      VR = (I-1)*DV + V1                                                
      IF(VR. LE. (V+.1) .AND .VR.GE. (V-.1)) GO TO 5                    
      IF(I .EQ. NPT ) I=NPT-1                                           
      AM = (S(I+1) -S(I))/DV                                            
      C0 = S(I) - AM * VR                                               
      C  = AM * V + C0                                                  
      GO TO 10                                                          
5     C    =    S(I)                                                    
10    CONTINUE                                                          
C                                                                       
      RETURN                                                            
      END                                                               
      BLOCK DATA O3UVFD                                                 
C>    BLOCK DATA                                                        
      COMMON /O3UVF / V1O1,V2O1,DVO1,NPT1,C02281(80),C02361(53)         
C                                                                       
C        OZONE UV  VISIBLE ABSORPTION COEFFICIENTS                      
C                     (CM-ATM)-1                                        
C     DATA DERIVED FROM MOLINA & MOLINA, JGR,91,14501-14508,1986.       
C     VALUES BETWEEN 245 AND 185NM (40800 AND 54054CM-1) USED AS        
C     DIRECT AVERAGE WITH NO TEMPERATURE DEPENDENCE.                    
C                                                                       
C     O3 LOCATION  1    V =  40800  CM-1                                
C     O3 LOCATION  133  V =  54054  CM-1                                
C        DV = 100  CM-1                                                 
C                                                                       
      DATA V1O1,V2O1,DVO1,NPT1/ 40800.,54000.,100.,133/                 
      DATA C02281/                                                      
     C 9.91204E+02, 9.76325E+02, 9.72050E+02, 9.51049E+02, 9.23530E+02, 
     C 9.02306E+02, 8.90510E+02, 8.60115E+02, 8.39094E+02, 8.27926E+02, 
     C 7.95525E+02, 7.73583E+02, 7.55018E+02, 7.31076E+02, 7.10415E+02, 
     C 6.87747E+02, 6.66639E+02, 6.39484E+02, 6.27101E+02, 6.01019E+02, 
     C 5.77594E+02, 5.60403E+02, 5.40837E+02, 5.21289E+02, 4.99329E+02, 
     C 4.81742E+02, 4.61608E+02, 4.45707E+02, 4.28261E+02, 4.09672E+02, 
     C 3.93701E+02, 3.77835E+02, 3.61440E+02, 3.45194E+02, 3.30219E+02, 
     C 3.15347E+02, 3.01164E+02, 2.87788E+02, 2.74224E+02, 2.61339E+02, 
     C 2.48868E+02, 2.36872E+02, 2.25747E+02, 2.14782E+02, 2.03997E+02, 
     C 1.94281E+02, 1.84525E+02, 1.75275E+02, 1.67151E+02, 1.58813E+02, 
     C 1.50725E+02, 1.43019E+02, 1.35825E+02, 1.28878E+02, 1.22084E+02, 
     C 1.15515E+02, 1.09465E+02, 1.03841E+02, 9.83780E+01, 9.31932E+01, 
     C 8.83466E+01, 8.38631E+01, 7.96631E+01, 7.54331E+01, 7.13805E+01, 
     C 6.78474E+01, 6.44340E+01, 6.13104E+01, 5.81777E+01, 5.53766E+01, 
     C 5.27036E+01, 5.03555E+01, 4.82633E+01, 4.61483E+01, 4.42014E+01, 
     C 4.23517E+01, 4.07774E+01, 3.93060E+01, 3.80135E+01, 3.66348E+01/ 
      DATA C02361/                                                      
     C 3.53665E+01, 3.47884E+01, 3.39690E+01, 3.34288E+01, 3.29135E+01, 
     C 3.23104E+01, 3.18875E+01, 3.16800E+01, 3.15925E+01, 3.12932E+01, 
     C 3.12956E+01, 3.15522E+01, 3.14950E+01, 3.15924E+01, 3.19059E+01, 
     C 3.23109E+01, 3.27873E+01, 3.33788E+01, 3.39804E+01, 3.44925E+01, 
     C 3.50502E+01, 3.55853E+01, 3.59416E+01, 3.68933E+01, 3.78284E+01, 
     C 3.86413E+01, 3.98049E+01, 4.04700E+01, 4.12958E+01, 4.23482E+01, 
     C 4.31203E+01, 4.41885E+01, 4.52651E+01, 4.61492E+01, 4.70493E+01, 
     C 4.80497E+01, 4.90242E+01, 4.99652E+01, 5.10316E+01, 5.21510E+01, 
     C 5.32130E+01, 5.43073E+01, 5.56207E+01, 5.61756E+01, 5.66799E+01, 
     C 5.85545E+01, 5.92409E+01, 5.96168E+01, 6.12497E+01, 6.20231E+01, 
     C 6.24621E+01, 6.34160E+01, 6.43622E+01/                           
      END                                                               
      FUNCTION   PF(NN,I,J)                                             
C     CALL THE APPROPRIATE PHASE FUNCTION                               
      COMMON/MNMPHS/ MNUM(27,26),PHSFNC(34,70)                          
      M=MNUM(I,NN)                                                      
      PF=PHSFNC(J,M)                                                    
      RETURN                                                            
      END                                                               
      REAL FUNCTION PHASEF(V,ALT,SANGLE,RH)                             
      INCLUDE 'PARAM.LST'                                               
C                                                                       
C     THIS ROUTINE IS A BIT DIFFERENT FROM AND REPLACES                 
C     THE OLD PHASEF                                                    
C                                                                       
C     RETURNS THE AEROSOL PHASE FUNCTION FROM THE STORED DATA BASE      
C                                                                       
C     THE TRUTH TABLE MNUM(27,26) STORED IN COMMON/MNMPHS/              
C     IN SUBROUTINE PHSDTA IS QUERIED TO DETERMINE THE PROPER PHASE     
C     FUNCTION NEEDED.                                                  
C     THE 27 POSITIONS REPRESENT THE 27 SPECIFIC FREQUENCIES SHOWN IN   
C     DATA STATEMENT WAVE  .2-40 MICRONS.                               
C     THE NUMBERS STORED IN THESE 27 POSITIONS REPRESENT THE CORRECT    
C     PHASE FUNCTIONS CHOSEN FROM THE DATA STATEMENT PHSFNC'S 1-70      
C     POSSIBLE CHOICES.                                                 
C     THE 26 DATA STATEMENTS EACH HAVING 27 FREQUENCIES REPRESENT THE   
C     FOLLOWING 26 MODELS;                                              
C      1=RURAL     0%RH   2=RURAL    70%RH   3=RURAL    80%RH           
C      4=RURAL    99%RH   5=MARITIME  0%RH   6=MARITIME 70%RH           
C      7=MARITIME 80%RH   8=MARITIME 99%RH   9=URBAN     0%RH           
C     10=URBAN    70%RH  11=URBAN    80%RH  12=URBAN    99%RH           
C     13=OCEANIC   0%RH  14=OCEANIC  70%RH  15=OCEANIC  80%RH           
C     16=OCEANIC  99%RH  17=TROPOSPH  0%RH  18=TROPOSPH 70%RH           
C     19=TROPOSPH 80%RH  20=TROPOSPH 99%RH  21=STRATOSPHERIC            
C     22=AGED VOLCANIC   23=FRESH VOLCANIC  24=RADIATION FOG            
C     25=ADVECTIVE FOG   26=METEORIC DUST                               
C                                                                       
C     IN THE PRESENT VERSION THE 4 OCEANIC MODELS 13-16                 
C     ARE NOT UTILIZED.                                                 
      INTEGER IKMAX,ML,ISSGEO,IMULT                                     
      COMMON/CNTRL/IKMAX,ML,ISSGEO,IMULT                                
C                                                                       
C     FILE UNIT NUMBERS                                                 
C       IRD      MODTRAN INPUT FILE, tape5, UNIT NUMBER (1).            
C       IPR      MODTRAN STANDARD OUTPUT FILE, tape6, UNIT NUMBER (2).  
C       IPU      MODTRAN SPECTRAL DATA FILE, tape7, UNIT NUMBER (7).    
C       NPR      PRINTOUT LEVEL SWITCH (1=small,0=normal,-1=large).     
C       IPR1     MODTRAN FLUX OUTPUT FILE, tape8, UNIT NUMBER (8).      
C       ISCRCH   MULTIPLE SCATTERING SCRATCH FILE UNIT NUMBER (10).     
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH                               
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                           
C                                                                       
C       PI       THE CONSTANT PI                                        
C       DEG      NUMBER OF DEGREES IN ONE RADIAN.                       
C       BIGNUM   MAXIMUM SINGLE PRECISION NUMBER.                       
C       BIGEXP   MAXIMUM EXPONENTIAL ARGUMENT WITHOUT OVERFLOW.         
      REAL PI,DEG,BIGNUM,BIGEXP                                         
      COMMON/CNSTNS/PI,DEG,BIGNUM,BIGEXP                                
      COMMON/CARD2/IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,VIS,WSS,WHH,     
     1  RAINRT                                                          
      COMMON/CARD2D/IREG(4),ALTB(4),IREGC(4)                            
      REAL EXTV,ABSV,ASYV                                               
      COMMON/AER/EXTV(NAER),ABSV(NAER),ASYV(NAER)                       
      DIMENSION  RHPTS(4),WAVE(27),ANG(34)                              
      DATA ANG/0.,2.,4.,6.,8.,10.,12.,16.,20.,24.,28.,32.,36.,40.,      
     1  50.,60.,70.,80.,90.,100.,110.,120.,125.,130.,135.,140.,145.,    
     2  150.,155.,160.,165.,170.,175.,180./                             
      DATA WAVE/.2,.3,.55,.6943,1.06,1.536,2.0,2.5,2.7,3.,3.2,3.39,5.,  
     1  6.,7.2,7.9,8.7,9.2,10.0,10.59,12.5,15.0,17.2,18.5,21.3,30.,40./ 
      DATA RHPTS /0.,70.,80.,99./                                       
      PHASEF=0.                                                         
      ALAM=1.E4/(V+1.E-5)                                               
      IF(SANGLE.LT.0. .OR. SANGLE.GT.180.)GOTO900                       
      IF(ALAM.GT.WAVE(27))THEN                                          
          COSANG=COS(SANGLE/DEG)                                        
          PHASEF=HENGNS(ASYV(1),COSANG)                                 
          RETURN                                                        
      ENDIF                                                             
C                                                                       
C     DETERMINE THE AEROSOL MODEL NUMBER                                
      IF(ALT.GT.ALTB(1))GOTO95                                          
      IF(IHAZE.EQ.0)GOTO400                                             
      IF(IHAZE .EQ.10) THEN                                             
           COSANG=COS(SANGLE/DEG)                                       
           PHASEF=HENGNS(ASYV(1),COSANG)                                
           RETURN                                                       
      ENDIF                                                             
C                                                                       
C     CHECK IF CLOUD,RAIN OR DESERT MODEL IS REQUESTED                  
      IF(IHAZE.EQ.7)THEN                                                
           COSANG=COS(SANGLE/DEG)                                       
           PHASEF=HENGNS(ASYV(1),COSANG)                                
           RETURN                                                       
      ENDIF                                                             
      IF(IHAZE.GE.8)GOTO90                                              
C                                                                       
C     0-2KM BOUNDARY LAYER MODELS, RH DEPENDENT                         
      DO 50 I1=1,4                                                      
          I=I1                                                          
          IF(RHPTS(I).EQ.RH) GOTO70                                     
          IF(RHPTS(I).GT.RH) GOTO60                                     
50    CONTINUE                                                          
60    IRHLO=I-1                                                         
      IRHHI=I                                                           
      GOTO80                                                            
70    IRHLO=I                                                           
      IRHHI=I                                                           
80    CONTINUE                                                          
C                                                                       
C     RURAL MODEL                                                       
      IF(IHAZE.EQ.1 .OR. IHAZE.EQ.2)NN0=0                               
C                                                                       
C     MARITIME MODEL                                                    
      IF(IHAZE.EQ.3 .OR. IHAZE.EQ.4)NN0=4                               
C                                                                       
C     URBAN MODEL                                                       
      IF(IHAZE.EQ.5)NN0=8                                               
C                                                                       
C     TROPOSPHERIC MODEL                                                
      IF(IHAZE.EQ.6)NN0=16                                              
      NN=NN0+IRHLO                                                      
      GOTO130                                                           
C     0-2KM FOG MODELS, NO RH DEPENDENCE                                
90    IF(IHAZE.EQ.8)NN=24                                               
      IF(IHAZE.EQ.9)NN=25                                               
      GOTO130                                                           
95    IF(ALT.GT.ALTB(2)) GOTO110                                        
C     2-10KM TROPOSPHERIC MODEL                                         
      IF(IHAZE.EQ.7)THEN                                                
           COSANG=COS(SANGLE/DEG)                                       
           PHASEF=HENGNS(ASYV(2),COSANG)                                
              RETURN                                                    
        ENDIF                                                           
      NN=18                                                             
      GOTO130                                                           
110   IF(ALT.GT.ALTB(3)) GOTO120                                        
C     10-30KM STRATOSPHERIC MODELS                                      
C     BACKGROUND MODEL                                                  
      IF(IVULCN.EQ.0.OR.IVULCN.EQ.1) NN=21                              
C     AGED VOLCANIC MODEL                                               
      IF(IVULCN.EQ.2.OR.IVULCN.EQ.4) NN=22                              
C     FRESH VOLCANIC                                                    
      IF(IVULCN.EQ.3.OR.IVULCN.EQ.5 .OR.IVULCN.EQ.8) NN=23              
C     BACKGROUND STRATO                                                 
      IF(IVULCN.EQ.6.OR.IVULCN.EQ.7) NN=21                              
      GOTO130                                                           
C     30-100KM METEORIC MODEL                                           
120   NN=26                                                             
130   IRH=0                                                             
C                                                                       
C     DETERMINE THE BOUNDING ANGLE INDICES                              
140   DO 210 I1=1,ML                                                    
      I=I1                                                              
      IF(ANG(I).EQ.SANGLE) GOTO230                                      
      IF(ANG(I).GT.SANGLE) GOTO220                                      
210   CONTINUE                                                          
220   IANG1=I-1                                                         
      IANG2=I                                                           
      GOTO240                                                           
230   IANG1=I                                                           
      IANG2=I                                                           
240   CONTINUE                                                          
C                                                                       
C     DETERMINE THE BOUNDING WAVELENGTH INDICES                         
      DO 250 I1=1,27                                                    
      I=I1                                                              
      IF(WAVE(I).EQ.ALAM) GOTO270                                       
      IF(WAVE(I).GT.ALAM) GOTO260                                       
250   CONTINUE                                                          
260   IWAV1=I-1                                                         
      IWAV2=I                                                           
      IF(IWAV1.LT.1) THEN                                               
          IWAV1=1                                                       
      ENDIF                                                             
      GOTO280                                                           
270   IWAV1=I                                                           
      IWAV2=I                                                           
280   CONTINUE                                                          
C                                                                       
C     FUNCTION PF CHOOSES DESIRED PHASE FUNCTION FROM LOOK UP TABLE     
C     MNUM(IWAV,NN)  WHERE IWAV IS FREQ. AND NN IS MODEL NO.            
C                                                                       
C     WAVELENGTH INTERPOLATION ONLY USES PF11 AND PF21                  
C     ANGLE INTERPOLATION ONLY USES PF11 AND PF12                       
C     WAVELENGTH AND ANGLE INTERPOLATION USES PF11,PF21 AND PF12,PF22.  
C                                                                       
      PF11=PF(NN,IWAV1,IANG1)                                           
      PF21=PF(NN,IWAV2,IANG1)                                           
      PF12=PF(NN,IWAV1,IANG2)                                           
      PF22=PF(NN,IWAV2,IANG2)                                           
C     INTERPOLATE IN WAVELENGTH THEN ANGLE                              
      IF(IWAV1.EQ.IWAV2) GOTO310                                        
      IF(IANG1.EQ.IANG2) GOTO290                                        
C     BOTH INTERPOLATIONS ARE NECESSARY                                 
      CALL INTERP(2,ALAM,WAVE(IWAV1),WAVE(IWAV2),YANG1,                 
     1PF11,PF21)                                                        
      CALL INTERP(2,ALAM,WAVE(IWAV1),WAVE(IWAV2),YANG2,                 
     1PF12,PF22)                                                        
      CALL INTERP(2,SANGLE,ANG(IANG1),ANG(IANG2),Y,YANG1,YANG2)         
      GOTO330                                                           
C     ONLY WAVELENGTH INTERPOLATION IS NECESSARY                        
290   CALL INTERP(2,ALAM,WAVE(IWAV1),WAVE(IWAV2),Y,PF11,                
     1PF21)                                                             
      GOTO330                                                           
310   IF(IANG1.EQ.IANG2) GOTO320                                        
C     ONLY ANGLE INTERPOLATION IS NECESSARY                             
      CALL INTERP(2,SANGLE,ANG(IANG1),ANG(IANG2),Y,PF11,PF12)           
      GOTO330                                                           
C     NO INTERPOLATION IS NECESSARY                                     
320   Y=PF(NN,IWAV1,IANG1)                                              
330   CONTINUE                                                          
      PHASEF=Y                                                          
C                                                                       
C     HUMIDITY DEPENDENCE                                               
      IF(ALT.GT.ALTB(1).OR.NN.GE.17.OR.IRHLO.EQ.IRHHI) GOTO400          
      IF(IRH.EQ.1) GOTO340                                              
      NN=NN0+IRHHI                                                      
      PHFA1=PHASEF                                                      
      IRH=1                                                             
      GOTO280                                                           
340   CONTINUE                                                          
      PHFA2=PHASEF                                                      
      CALL INTERP(1,RH,RHPTS(IRHLO),RHPTS(IRHHI),PHFA,PHFA1,PHFA2)      
      PHASEF=PHFA                                                       
400   CONTINUE                                                          
      RETURN                                                            
Calley  900 WRITE(IPR,901) SANGLE                                       
  900 CONTINUE                                                          
      IF (IPR .GT. 0) WRITE(IPR,901) SANGLE                             
  901 FORMAT('0FROM PHASEF- SCATTERING ANGLE IS OUT OF RANGE, '         
     1    ,'ANGLE = ',E12.5)                                            
      STOP                                                              
      END                                                               
      BLOCK DATA PHSDTA                                                 
C>    BLOCK DATA                                                        
CCC                                                                     
CCC   ROUTINE TO STORE TABLE TO CALL UP PROPER PHASE FUNCTION           
CCC   AND 70 AVERAGE PHASE FUNCTIONS                                    
CCC                                                                     
C     COMMON/MNMPHS/ MNUM(27,26),PHSFNC(34,70)                          
      COMMON/MNMPHS/MUM1(27),MUM2(27),MUM3(27),MUM4(27),MUM5(27),       
     1MUM6(27),MUM7(27),MUM8(27),MUM9(27),MUM10(27),MUM11(27),MUM12(27),
     2MUM13(27),MUM14(27),MUM15(27),MUM16(27),MUM17(27),MUM18(27),      
     3MUM19(27),MUM20(27),MUM21(27),MUM22(27),MUM23(27),MUM24(27),      
     4MUM25(27),MUM26(27),PHSF1(34),PHSF2(34),PHSF3(34),PHSF4(34),      
     5PHSF5(34),PHSF6(34),PHSF7(34),PHSF8(34),PHSF9(34),                
     6PHSF10(34),PHSF11(34),PHSF12(34),PHSF13(34),PHSF14(34),PHSF15(34),
     7PHSF16(34),PHSF17(34),PHSF18(34),PHSF19(34),PHSF20(34),PHSF21(34),
     8PHSF22(34),PHSF23(34),PHSF24(34),PHSF25(34),PHSF26(34),PHSF27(34),
     9PHSF28(34),PHSF29(34),PHSF30(34),PHSF31(34),PHSF32(34),PHSF33(34),
     9PHSF34(34),PHSF35(34),PHSF36(34),PHSF37(34),PHSF38(34),PHSF39(34),
     1PHSF40(34),PHSF41(34),PHSF42(34),PHSF43(34),PHSF44(34),PHSF45(34),
     2PHSF46(34),PHSF47(34),PHSF48(34),PHSF49(34),PHSF50(34),PHSF51(34),
     3PHSF52(34),PHSF53(34),PHSF54(34),PHSF55(34),PHSF56(34),PHSF57(34),
     4PHSF58(34),PHSF59(34),PHSF60(34),PHSF61(34),PHSF62(34),PHSF63(34),
     5PHSF64(34),PHSF65(34),PHSF66(34),PHSF67(34),PHSF68(34),PHSF69(34),
     6PHSF70(34)                                                        
      DATA MUM1/ 3, 5, 4, 4, 4, 6, 8,22,21,22,26,26,                    
     C26,27,29, 1,34,34,34,34,33,33,36,36,36,36,23/                     
      DATA MUM2/ 3, 5, 4, 4, 4, 6, 8,22,21,21,22,26,                    
     C26,27,29, 1,34,33,33,33,46,46,34,34,36,36,23/                     
      DATA MUM3/ 3, 5, 5, 5,19, 6, 8,21, 7,21,22, 8,                    
     C26, 1,27, 1,46,46,46,29,29,46,34,34,34,36,23/                     
      DATA MUM4/58,58,62,62,62,63,63,63,60,64,64,64,                    
     C21,70,65,65,65,65,66,66,65,27,29,29,46,33,34/                     
      DATA MUM5/59,11,11,11,20,20,20,28,28,16,16,16,                    
     C16,37,37,37,32,36,32,32,32,36,23,23,23,38,25/                     
      DATA MUM6/ 9,59,11,13,13,26,26,26,27,29,46,28,                    
     C28,29,28,28,37,37,37,37,34,36,36,36,23,23,38/                     
      DATA MUM7/ 9, 9,14,14,14,15,15,15,66,65,27,26,                    
     C29,27,29,29,29,29,29,29,46,34,36,36,36,23,23/                     
      DATA MUM8/57,57,69,69,69,68,68,68,61,70,60,21,                    
     C 7,66, 1, 1, 1, 1,66,66, 1,29,46,46,33,34,36/                     
      DATA MUM9/ 2,18,18,19,19, 6,22,22,22,22,22,22,                    
     C29,29,46,29,34,34,34,34,34,34,36,36,36,23,23/                     
      DATA MUM10/ 2, 3,18,18,19, 6,22,22,21,22,22,22,                   
     C27,27,29,27,33,33,46,46,46,33,34,34,36,36,23/                     
      DATA MUM11/ 2, 3,18,18,19, 6,22,21, 7,22,22,22,                   
     C27,27,27,27,46,29,29,29,29,46,33,34,34,36,36/                     
      DATA MUM12/58,58,62,62,62,62,63,63,60,64,64,64,                   
     C21,60, 7,65,65,65,66,67,65, 7,27,27,29,46,33/                     
      DATA MUM13/10,59,11,11,13,20,20,28,28,16,16,16,                   
     C16,37,37,37,32,36,32,32,32,36,23,23,23,38,25/                     
      DATA MUM14/10,10,14,14,13,13,26,26,27,29,29,28,                   
     C28,29,28,28,37,37,37,37,33,32,36,36,23,23,38/                     
      DATA MUM15/10,69,14,14,14,15,15, 7,66,65,27,26,                   
     C29, 1,29,29,29,29,29,29,46,34,36,36,36,23,23/                     
      DATA MUM16/47,57,69,69,69,68,68,68,61,70,60,21,                   
     C 7,66, 1, 1, 1, 1,66,66, 1,29,46,46,33,34,36/                     
      DATA MUM17/29,16,32,32,36,36,23,23,23,38,38,38,                   
     C25,25,25,25,25,25,25,25,35,35,35,35,35,40,39/                     
      DATA MUM18/29,16,32,32,32,36,23,23,23,38,38,38,                   
     C38,25,25,25,25,25,25,25,35,35,35,35,35,40,39/                     
      DATA MUM19/29,28,37,37,32,36,36,23,23,23,23,23,                   
     C38,25,25,25,25,25,25,25,35,35,35,35,35,40,40/                     
      DATA MUM20/15,26,28,28,37,37,32,32,32,23,23,23,                   
     C23,38,38,38,38,25,25,25,25,35,35,35,35,35,40/                     
      DATA MUM21/20,20,37,37,24,23,38,25,25,35,35,35,                   
     C40,40,39,39,39,39,39,39,39,39,39,39,39,39,39/                     
      DATA MUM22/ 7,20,16,37,32,32,24,23,23,23,38,38,                   
     C25,25,35,35,35,25,35,35,40,40,40,40,40,39,39/                     
      DATA MUM23/17,51,13,13,20,20,28,28,37,37,37,37,                   
     C32,32,24,24,23,23,38,38,38,38,38,38,38,25,35/                     
      DATA MUM24/47,30,55,55,55,13,15,12,42,12, 1,26,                   
     C44,52,44,44,45,45,45,45,24,23,38,38,38,25,35/                     
      DATA MUM25/48,53,31,31,31,41,41,41,49,17,17,17,                   
     C56,50,43,43,67,61,42,54,42,12,12,12,12, 1,44/                     
      DATA MUM26/59,59,11,11,20,20,28,28,46,46,46,46,                   
     C33,33,34,34,34,34,36,36,36,36,23,23,23,38,38/                     
      DATA PHSF1/                                                       
     C     4.81387,     4.26047,     3.42600,     2.74953,     2.21493, 
     C     1.78847,     1.44553,      .94765,      .62704,      .42183, 
     C      .28987,      .20375,      .14632,      .10720,      .05307, 
     C      .02882,      .01703,      .01093,      .00764,      .00582, 
     C      .00482,      .00431,      .00418,      .00411,      .00409, 
     C      .00412,      .00419,      .00428,      .00436,      .00442, 
     C      .00443,      .00433,      .00421,      .00435/              
      DATA PHSF2/                                                       
     C   100.88000,     4.36700,     2.73667,     2.10567,     1.68067, 
     C     1.36333,     1.11900,      .77513,      .55317,      .40393, 
     C      .30047,      .22690,      .17367,      .13437,      .07407, 
     C      .04350,      .02714,      .01795,      .01266,      .00958, 
     C      .00780,      .00683,      .00656,      .00639,      .00633, 
     C      .00636,      .00649,      .00669,      .00682,      .00671, 
     C      .00626,      .00582,      .00606,      .00646/              
      DATA PHSF3/                                                       
     C    75.07600,     3.77580,     2.33100,     1.82620,     1.49120, 
     C     1.23720,     1.03680,      .74470,      .54766,      .41000, 
     C      .31120,      .23880,      .18506,      .14476,      .08148, 
     C      .04851,      .03047,      .02022,      .01431,      .01086, 
     C      .00886,      .00785,      .00763,      .00756,      .00762, 
     C      .00780,      .00809,      .00843,      .00868,      .00861, 
     C      .00813,      .00790,      .00871,      .00948/              
      DATA PHSF4/                                                       
     C    14.11167,     3.29400,     1.58300,     1.07677,      .85635, 
     C      .73207,      .64758,      .52827,      .43880,      .36565, 
     C      .30452,      .25337,      .21070,      .17523,      .11108, 
     C      .07169,      .04755,      .03283,      .02388,      .01855, 
     C      .01557,      .01420,      .01396,      .01397,      .01424, 
     C      .01473,      .01545,      .01641,      .01758,      .01894, 
     C      .01999,      .02139,      .02376,      .02512/              
      DATA PHSF5/                                                       
     C    31.33400,     3.01260,     1.63600,     1.27260,     1.08020, 
     C      .94204,      .83026,      .65326,      .51696,      .40994, 
     C      .32558,      .25926,      .20702,      .16590,      .09733, 
     C      .05921,      .03764,      .02534,      .01809,      .01382, 
     C      .01155,      .01059,      .01051,      .01070,      .01115, 
     C      .01192,      .01303,      .01447,      .01610,      .01727, 
     C      .01780,      .01838,      .02091,      .02258/              
      DATA PHSF6/                                                       
     C    13.63333,     5.76067,     2.86717,     1.73500,     1.19267, 
     C      .89500,      .71377,      .50818,      .39290,      .31612, 
     C      .25947,      .21512,      .17950,      .15035,      .09782, 
     C      .06489,      .04418,      .03126,      .02336,      .01872, 
     C      .01625,      .01521,      .01510,      .01520,      .01550, 
     C      .01600,      .01670,      .01758,      .01860,      .01958, 
     C      .02003,      .01962,      .01969,      .02072/              
      DATA PHSF7/                                                       
     C    10.69213,     7.32563,     4.66850,     3.15175,     2.23700, 
     C     1.65050,     1.25550,      .77671,      .51168,      .35194, 
     C      .24998,      .18219,      .13565,      .10291,      .05530, 
     C      .03232,      .02036,      .01381,      .01015,      .00813, 
     C      .00711,      .00672,      .00671,      .00680,      .00698, 
     C      .00723,      .00753,      .00783,      .00813,      .00841, 
     C      .00864,      .00843,      .00793,      .00865/              
      DATA PHSF8/                                                       
     C    10.29225,     5.75700,     3.34100,     2.19450,     1.56850, 
     C     1.18950,      .94123,      .64033,      .46530,      .35098, 
     C      .27068,      .21203,      .16803,      .13445,      .07989, 
     C      .04975,      .03251,      .02247,      .01667,      .01344, 
     C      .01188,      .01148,      .01166,      .01210,      .01285, 
     C      .01392,      .01522,      .01656,      .01776,      .01897, 
     C      .02003,      .01932,      .01776,      .02043/              
      DATA PHSF9/                                                       
     C   232.30000,    13.73667,     3.92300,     1.97167,     1.29767, 
     C      .97050,      .77753,      .55393,      .41583,      .31763, 
     C      .24957,      .19523,      .15503,      .12260,      .06875, 
     C      .04015,      .02414,      .01485,      .01040,      .00803, 
     C      .00674,      .00569,      .00549,      .00550,      .00615, 
     C      .00775,      .01205,      .01820,      .02141,      .02076, 
     C      .02123,      .02409,      .03397,      .05439/              
      DATA PHSF10/                                                      
     C   286.85000,    20.19500,     5.34175,     2.25050,     1.24273, 
     C      .81960,      .60855,      .40505,      .30698,      .24148, 
     C      .19903,      .16210,      .13158,      .10705,      .06313, 
     C      .03807,      .02275,      .01373,      .00983,      .00704, 
     C      .00512,      .00400,      .00412,      .00401,      .00456, 
     C      .00580,      .00954,      .01947,      .03101,      .03784, 
     C      .04018,      .04524,      .06312,      .08295/              
      DATA PHSF11/                                                      
     C    15.36571,     6.08614,     3.15543,     1.98500,     1.39671, 
     C     1.05749,      .84297,      .58904,      .44120,      .34216, 
     C      .27140,      .21837,      .17669,      .14371,      .08723, 
     C      .05498,      .03568,      .02444,      .01753,      .01339, 
     C      .01087,      .00986,      .00983,      .01019,      .01094, 
     C      .01243,      .01473,      .01871,      .02423,      .03204, 
     C      .03592,      .03792,      .04492,      .05004/              
      DATA PHSF12/                                                      
     C     5.64100,     5.44440,     4.90680,     4.15680,     3.34180, 
     C     2.57840,     1.93040,     1.03104,      .54702,      .30330, 
     C      .18026,      .11514,      .07816,      .05557,      .02729, 
     C      .01547,      .00986,      .00697,      .00542,      .00457, 
     C      .00413,      .00392,      .00387,      .00385,      .00385, 
     C      .00385,      .00385,      .00386,      .00391,      .00401, 
     C      .00400,      .00368,      .00352,      .00365/              
      DATA PHSF13/                                                      
     C     8.90311,     6.06467,     3.93056,     2.63178,     1.82878, 
     C     1.32733,     1.00856,      .65342,      .46637,      .34863, 
     C      .26662,      .20709,      .16222,      .12811,      .07347, 
     C      .04425,      .02794,      .01867,      .01336,      .01033, 
     C      .00874,      .00818,      .00837,      .00894,      .01001, 
     C      .01171,      .01423,      .01759,      .02129,      .02494, 
     C      .02767,      .02690,      .02658,      .03550/              
      DATA PHSF14/                                                      
     C    41.20875,    11.84363,     5.00750,     2.73850,     1.74425, 
     C     1.23475,      .93516,      .60986,      .43641,      .32733, 
     C      .24819,      .19145,      .14831,      .11555,      .06356, 
     C      .03649,      .02176,      .01390,      .00974,      .00759, 
     C      .00657,      .00643,      .00671,      .00741,      .00906, 
     C      .01210,      .01618,      .01839,      .01979,      .02104, 
     C      .02356,      .02652,      .02694,      .04004/              
      DATA PHSF15/                                                      
     C     7.98100,     5.58389,     3.81067,     2.75011,     2.05900, 
     C     1.58178,     1.24011,      .80424,      .55144,      .39021, 
     C      .28203,      .20701,      .15369,      .11570,      .05985, 
     C      .03329,      .01999,      .01295,      .00920,      .00726, 
     C      .00645,      .00646,      .00683,      .00743,      .00833, 
     C      .00942,      .01038,      .01112,      .01187,      .01290, 
     C      .01451,      .01415,      .01176,      .01646/              
      DATA PHSF16/                                                      
     C     1.52473,     1.44645,     1.30800,     1.16736,     1.03716, 
     C      .92088,      .81802,      .64725,      .51405,      .40964, 
     C      .32742,      .26255,      .21129,      .17075,      .10236, 
     C      .06361,      .04130,      .02819,      .02041,      .01583, 
     C      .01330,      .01222,      .01213,      .01235,      .01288, 
     C      .01373,      .01491,      .01635,      .01784,      .01906, 
     C      .02003,      .02225,      .02715,      .03082/              
      DATA PHSF17/                                                      
     C   143.02500,    55.03750,    11.00250,     3.10675,     1.29675, 
     C      .67675,      .40423,      .18580,      .10582,      .06884, 
     C      .04883,      .03665,      .02858,      .02291,      .01418, 
     C      .00942,      .00664,      .00497,      .00397,      .00337, 
     C      .00302,      .00283,      .00277,      .00273,      .00272, 
     C      .00275,      .00283,      .00298,      .00314,      .00324, 
     C      .00332,      .00347,      .00373,      .00359/              
      DATA PHSF18/                                                      
     C    26.74167,     3.70000,     1.73800,     1.24150,     1.02157, 
     C      .88398,      .78022,      .62040,      .49727,      .39937, 
     C      .32113,      .25863,      .20880,      .16910,      .10153, 
     C      .06289,      .04050,      .02733,      .01952,      .01491, 
     C      .01225,      .01083,      .01046,      .01025,      .01017, 
     C      .01020,      .01030,      .01043,      .01053,      .01059, 
     C      .01061,      .01071,      .01107,      .01136/              
      DATA PHSF19/                                                      
     C    16.76800,     4.67840,     2.10000,     1.29420,      .94964, 
     C      .76794,      .65496,      .51386,      .41986,      .34756, 
     C      .28896,      .24060,      .20054,      .16730,      .10712, 
     C      .06978,      .04668,      .03245,      .02379,      .01863, 
     C      .01572,      .01429,      .01397,      .01384,      .01389, 
     C      .01407,      .01438,      .01481,      .01529,      .01572, 
     C      .01603,      .01613,      .01637,      .01668/              
      DATA PHSF20/                                                      
     C     3.35750,     2.77033,     2.20467,     1.77208,     1.43950, 
     C     1.18167,      .98083,      .69731,      .51368,      .38864, 
     C      .29989,      .23472,      .18552,      .14785,      .08680, 
     C      .05339,      .03443,      .02340,      .01689,      .01308, 
     C      .01097,      .01015,      .01022,      .01062,      .01145, 
     C      .01289,      .01512,      .01829,      .02228,      .02580, 
     C      .02615,      .02523,      .02990,      .03617/              
      DATA PHSF21/                                                      
     C    13.35245,     7.86691,     4.51555,     2.89018,     1.99645, 
     C     1.45664,     1.10655,      .69522,      .47093,      .33483, 
     C      .24620,      .18557,      .14266,      .11148,      .06369, 
     C      .03890,      .02523,      .01742,      .01294,      .01044, 
     C      .00921,      .00881,      .00886,      .00906,      .00940, 
     C      .00985,      .01039,      .01098,      .01163,      .01232, 
     C      .01277,      .01220,      .01131,      .01247/              
      DATA PHSF22/                                                      
     C     9.49578,     6.01133,     3.71372,     2.49106,     1.77633, 
     C     1.32572,     1.02483,      .66094,      .45784,      .33285, 
     C      .25044,      .19334,      .15224,      .12179,      .07358, 
     C      .04717,      .03185,      .02271,      .01730,      .01421, 
     C      .01264,      .01208,      .01207,      .01220,      .01245, 
     C      .01280,      .01321,      .01365,      .01405,      .01436, 
     C      .01447,      .01422,      .01407,      .01456/              
      DATA PHSF23/                                                      
     C      .45555,      .45332,      .44686,      .43683,      .42405, 
     C      .40929,      .39319,      .35887,      .32388,      .28985, 
     C      .25771,      .22804,      .20101,      .17671,      .12722, 
     C      .09162,      .06691,      .05037,      .03979,      .03345, 
     C      .03009,      .02875,      .02860,      .02871,      .02902, 
     C      .02946,      .03000,      .03059,      .03120,      .03179, 
     C      .03232,      .03276,      .03305,      .03315/              
      DATA PHSF24/                                                      
     C      .51072,      .50922,      .50476,      .49744,      .48752, 
     C      .47514,      .46072,      .42698,      .38890,      .34888, 
     C      .30902,      .27072,      .23504,      .20254,      .13652, 
     C      .09070,      .06070,      .04186,      .03042,      .02372, 
     C      .02000,      .01816,      .01773,      .01753,      .01753, 
     C      .01767,      .01792,      .01826,      .01866,      .01907, 
     C      .01948,      .01984,      .02009,      .02019/              
      DATA PHSF25/                                                      
     C      .21327,      .21298,      .21208,      .21060,      .20856, 
     C      .20606,      .20305,      .19588,      .18741,      .17798, 
     C      .16793,      .15754,      .14702,      .13659,      .11191, 
     C      .09060,      .07368,      .06147,      .05381,      .05020, 
     C      .04990,      .05207,      .05380,      .05581,      .05801, 
     C      .06028,      .06253,      .06468,      .06664,      .06834, 
     C      .06973,      .07077,      .07140,      .07161/              
      DATA PHSF26/                                                      
     C     4.10720,     3.38127,     2.61113,     2.06147,     1.66320, 
     C     1.36400,     1.13140,      .79725,      .57362,      .41947, 
     C      .31103,      .23368,      .17766,      .13659,      .07413, 
     C      .04288,      .02647,      .01753,      .01255,      .00978, 
     C      .00837,      .00791,      .00800,      .00831,      .00888, 
     C      .00974,      .01087,      .01219,      .01347,      .01448, 
     C      .01468,      .01320,      .01237,      .01467/              
      DATA PHSF27/                                                      
     C     4.37885,     3.78265,     2.97685,     2.33720,     1.85900, 
     C     1.49815,     1.22035,      .83140,      .58200,      .41624, 
     C      .30308,      .22426,      .16839,      .12816,      .06844, 
     C      .03932,      .02424,      .01607,      .01151,      .00894, 
     C      .00753,      .00684,      .00668,      .00661,      .00661, 
     C      .00668,      .00679,      .00692,      .00706,      .00715, 
     C      .00715,      .00705,      .00703,      .00721/              
      DATA PHSF28/                                                      
     C     1.99262,     1.84586,     1.62814,     1.42586,     1.24733, 
     C     1.09157,      .95572,      .73435,      .56567,      .43699, 
     C      .33874,      .26371,      .20635,      .16235,      .09181, 
     C      .05440,      .03397,      .02253,      .01601,      .01230, 
     C      .01031,      .00946,      .00938,      .00951,      .00985, 
     C      .01043,      .01123,      .01222,      .01328,      .01405, 
     C      .01405,      .01340,      .01391,      .01521/              
      DATA PHSF29/                                                      
     C     2.72707,     2.52017,     2.15725,     1.81463,     1.52555, 
     C     1.28665,     1.08932,      .78963,      .58023,      .43161, 
     C      .32473,      .24695,      .18977,      .14727,      .08150, 
     C      .04783,      .02980,      .01981,      .01414,      .01091, 
     C      .00911,      .00819,      .00796,      .00784,      .00781, 
     C      .00787,      .00798,      .00812,      .00825,      .00831, 
     C      .00830,      .00829,      .00847,      .00868/              
      DATA PHSF30/                                                      
     C   183.60000,    32.48000,     3.18400,     1.30100,      .85020, 
     C      .63540,      .54470,      .41140,      .33110,      .26080, 
     C      .20850,      .16570,      .12700,      .09546,      .04755, 
     C      .02460,      .01160,      .00650,      .00370,      .00264, 
     C      .00234,      .00355,      .00326,      .00308,      .00528, 
     C      .01403,      .02285,      .01565,      .01398,      .01362, 
     C      .01240,      .01544,      .02607,      .04655/              
      DATA PHSF31/                                                      
     C  1565.50000,     9.96867,     1.73233,      .92547,      .70240, 
     C      .59477,      .52513,      .42173,      .33793,      .26700, 
     C      .20973,      .16157,      .11973,      .09043,      .04400, 
     C      .01947,      .00793,      .00346,      .00177,      .00138, 
     C      .00166,      .00254,      .00438,      .00358,      .00653, 
     C      .02986,      .01362,      .01200,      .00992,      .00867, 
     C      .00765,      .00818,      .00986,      .05756/              
      DATA PHSF32/                                                      
     C      .79503,      .78714,      .76605,      .73601,      .70017, 
     C      .66092,      .61994,      .53736,      .45896,      .38796, 
     C      .32563,      .27208,      .22676,      .18879,      .11979, 
     C      .07727,      .05125,      .03541,      .02586,      .02025, 
     C      .01717,      .01576,      .01552,      .01551,      .01571, 
     C      .01607,      .01656,      .01710,      .01764,      .01814, 
     C      .01872,      .01965,      .02093,      .02164/              
      DATA PHSF33/                                                      
     C     1.56125,     1.49306,     1.34900,     1.19444,     1.05048, 
     C      .92302,      .81176,      .63177,      .49621,      .39304, 
     C      .31378,      .25238,      .20435,      .16659,      .10271, 
     C      .06594,      .04424,      .03123,      .02338,      .01868, 
     C      .01592,      .01439,      .01392,      .01360,      .01339, 
     C      .01325,      .01315,      .01310,      .01308,      .01314, 
     C      .01330,      .01355,      .01381,      .01392/              
      DATA PHSF34/                                                      
     C     1.22457,     1.18085,     1.08610,      .98058,      .87944, 
     C      .78708,      .70433,      .56565,      .45677,      .37107, 
     C      .30321,      .24916,      .20585,      .17099,      .11000, 
     C      .07323,      .05066,      .03666,      .02794,      .02253, 
     C      .01924,      .01727,      .01663,      .01614,      .01577, 
     C      .01550,      .01532,      .01522,      .01523,      .01536, 
     C      .01562,      .01596,      .01627,      .01640/              
      DATA PHSF35/                                                      
     C      .15944,      .15931,      .15893,      .15825,      .15734, 
     C      .15620,      .15479,      .15131,      .14701,      .14199, 
     C      .13638,      .13030,      .12389,      .11727,      .10065, 
     C      .08527,      .07250,      .06322,      .05782,      .05621, 
     C      .05792,      .06222,      .06505,      .06817,      .07146, 
     C      .07479,      .07805,      .08112,      .08390,      .08631, 
     C      .08826,      .08970,      .09058,      .09088/              
      DATA PHSF36/                                                      
     C      .72999,      .72086,      .69632,      .66227,      .62369, 
     C      .58366,      .54390,      .46850,      .40091,      .34178, 
     C      .29081,      .24724,      .21025,      .17893,      .12047, 
     C      .08253,      .05810,      .04253,      .03278,      .02688, 
     C      .02352,      .02183,      .02142,      .02122,      .02118, 
     C      .02127,      .02146,      .02171,      .02202,      .02235, 
     C      .02273,      .02314,      .02351,      .02367/              
      DATA PHSF37/                                                      
     C     1.15457,     1.13481,     1.08637,     1.02208,      .95035, 
     C      .87581,      .80158,      .66139,      .53812,      .43402, 
     C      .34834,      .27905,      .22360,      .17950,      .10538, 
     C      .06398,      .04056,      .02712,      .01935,      .01490, 
     C      .01250,      .01143,      .01126,      .01130,      .01153, 
     C      .01191,      .01242,      .01301,      .01357,      .01399, 
     C      .01422,      .01450,      .01526,      .01585/              
      DATA PHSF38/                                                      
     C      .31056,      .30982,      .30766,      .30415,      .29944, 
     C      .29365,      .28698,      .27149,      .25411,      .23575, 
     C      .21708,      .19865,      .18081,      .16385,      .12623, 
     C      .09621,      .07365,      .05766,      .04714,      .04092, 
     C      .03792,      .03722,      .03748,      .03804,      .03881, 
     C      .03972,      .04071,      .04172,      .04270,      .04358, 
     C      .04433,      .04490,      .04526,      .04539/              
      DATA PHSF39/                                                      
     C      .12377,      .12369,      .12346,      .12308,      .12254, 
     C      .12185,      .12102,      .11893,      .11632,      .11324, 
     C      .10974,      .10592,      .10181,      .09752,      .08650, 
     C      .07613,      .06762,      .06192,      .05964,      .06097, 
     C      .06565,      .07304,      .07747,      .08219,      .08708, 
     C      .09196,      .09670,      .10114,      .10516,      .10862, 
     C      .11144,      .11349,      .11477,      .11519/              
      DATA PHSF40/                                                      
     C      .13400,      .13391,      .13367,      .13321,      .13259, 
     C      .13180,      .13085,      .12842,      .12541,      .12185, 
     C      .11785,      .11344,      .10872,      .10383,      .09125, 
     C      .07940,      .06955,      .06267,      .05932,      .05961, 
     C      .06323,      .06951,      .07336,      .07751,      .08181, 
     C      .08613,      .09032,      .09426,      .09782,      .10091, 
     C      .10339,      .10522,      .10634,      .10673/              
      DATA PHSF41/                                                      
     C   227.93333,    32.03000,     4.13167,     1.54367,      .95123, 
     C      .71613,      .58840,      .43330,      .33043,      .25093, 
     C      .18920,      .14303,      .10800,      .08045,      .03915, 
     C      .01854,      .00866,      .00431,      .00239,      .00168, 
     C      .00157,      .00266,      .00434,      .00724,      .01132, 
     C      .01476,      .00983,      .00835,      .00785,      .00711, 
     C      .00717,      .00803,      .01265,      .02951/              
      DATA PHSF42/                                                      
     C    10.12167,     9.39467,     7.61833,     5.59200,     3.87533, 
     C     2.62733,     1.78200,      .85247,      .43620,      .23983, 
     C      .14187,      .08952,      .05950,      .04115,      .01854, 
     C      .00956,      .00552,      .00354,      .00251,      .00195, 
     C      .00163,      .00145,      .00139,      .00134,      .00129, 
     C      .00125,      .00122,      .00120,      .00120,      .00120, 
     C      .00120,      .00115,      .00105,      .00106/              
      DATA PHSF43/                                                      
     C    23.70500,    19.81000,    12.14500,     6.16400,     2.96850, 
     C     1.51300,      .86515,      .39850,      .24525,      .17225, 
     C      .12825,      .09809,      .07598,      .05932,      .03272, 
     C      .01871,      .01120,      .00710,      .00485,      .00363, 
     C      .00303,      .00286,      .00290,      .00302,      .00318, 
     C      .00334,      .00345,      .00349,      .00354,      .00388, 
     C      .00510,      .00600,      .00344,      .00472/              
      DATA PHSF44/                                                      
     C     1.13310,     1.12586,     1.10518,     1.07182,     1.02708, 
     C      .97348,      .91266,      .77952,      .64406,      .51826, 
     C      .40884,      .31800,      .24506,      .18784,      .09626, 
     C      .05060,      .02818,      .01701,      .01126,      .00818, 
     C      .00651,      .00563,      .00539,      .00526,      .00522, 
     C      .00525,      .00536,      .00551,      .00571,      .00595, 
     C      .00624,      .00656,      .00681,      .00692/              
      DATA PHSF45/                                                      
     C      .61443,      .61273,      .60783,      .59967,      .58847, 
     C      .57447,      .55783,      .51803,      .47153,      .42127, 
     C      .36970,      .31913,      .27140,      .22780,      .14030, 
     C      .08293,      .04868,      .02942,      .01892,      .01327, 
     C      .01027,      .00875,      .00834,      .00811,      .00800, 
     C      .00801,      .00810,      .00824,      .00842,      .00861, 
     C      .00879,      .00893,      .00903,      .00906/              
      DATA PHSF46/                                                      
     C     2.06615,     1.93640,     1.69345,     1.45610,     1.24945, 
     C     1.07421,      .92677,      .69739,      .53175,      .41021, 
     C      .31969,      .25144,      .19943,      .15944,      .09421, 
     C      .05837,      .03804,      .02624,      .01931,      .01523, 
     C      .01288,      .01160,      .01123,      .01099,      .01084, 
     C      .01077,      .01073,      .01072,      .01070,      .01068, 
     C      .01069,      .01078,      .01095,      .01105/              
      DATA PHSF47/                                                      
     C  1888.10000,    16.32500,     2.35900,     1.00950,      .67300, 
     C      .53970,      .46415,      .37245,      .30310,      .24865, 
     C      .20715,      .15820,      .13160,      .10710,      .05669, 
     C      .02778,      .01325,      .00679,      .00344,      .00306, 
     C      .00420,      .00189,      .00154,      .00137,      .00145, 
     C      .00265,      .01227,      .03321,      .02025,      .01971, 
     C      .01869,      .02153,      .03166,      .09376/              
      DATA PHSF48/                                                      
     C 18500.00000,     2.83400,      .85070,      .58200,      .49050, 
     C      .44240,      .40380,      .35560,      .31400,      .25730, 
     C      .19510,      .17010,      .12770,      .10750,      .05190, 
     C      .02554,      .01105,      .00365,      .00203,      .00200, 
     C      .00370,      .00118,      .00112,      .00112,      .00113, 
     C      .00113,      .00549,      .02603,      .02019,      .01751, 
     C      .01439,      .01308,      .01407,      .10720/              
      DATA PHSF49/                                                      
     C   190.90000,    60.01000,     8.56500,     2.26600,      .98870, 
     C      .55520,      .36100,      .19580,      .12640,      .08822, 
     C      .06382,      .04693,      .03478,      .02590,      .01264, 
     C      .00642,      .00348,      .00208,      .00143,      .00120, 
     C      .00124,      .00131,      .00123,      .00108,      .00097, 
     C      .00092,      .00090,      .00089,      .00091,      .00096, 
     C      .00107,      .00136,      .00251,      .00246/              
      DATA PHSF50/                                                      
     C    44.01000,    33.47000,    16.38000,     6.54600,     2.66800, 
     C     1.24800,      .68020,      .27930,      .14670,      .08818, 
     C      .05760,      .03977,      .02856,      .02111,      .01087, 
     C      .00620,      .00387,      .00265,      .00198,      .00161, 
     C      .00141,      .00129,      .00125,      .00122,      .00120, 
     C      .00119,      .00118,      .00117,      .00117,      .00117, 
     C      .00118,      .00118,      .00113,      .00113/              
      DATA PHSF51/                                                      
     C    45.72000,    22.68000,     8.45200,     3.68600,     1.89400, 
     C     1.11400,      .72990,      .39640,      .26220,      .19430, 
     C      .15350,      .12410,      .10220,      .08533,      .05455, 
     C      .03546,      .02333,      .01580,      .01103,      .00801, 
     C      .00615,      .00530,      .00517,      .00509,      .00547, 
     C      .00614,      .00763,      .01038,      .01534,      .02235, 
     C      .02692,      .02902,      .03071,      .03320/              
      DATA PHSF52/                                                      
     C     1.35800,     1.34900,     1.32400,     1.28300,     1.22900, 
     C     1.16200,     1.08700,      .91840,      .74460,      .58190, 
     C      .44060,      .32530,      .23580,      .16900,      .07319, 
     C      .03392,      .01766,      .01037,      .00676,      .00484, 
     C      .00377,      .00317,      .00298,      .00284,      .00274, 
     C      .00269,      .00267,      .00268,      .00274,      .00283, 
     C      .00294,      .00306,      .00314,      .00317/              
      DATA PHSF53/                                                      
     C  8232.00000,     3.82700,      .95120,      .65890,      .52640, 
     C      .49710,      .52530,      .38980,      .33700,      .25360, 
     C      .21110,      .16430,      .12260,      .09209,      .04939, 
     C      .01954,      .00754,      .00272,      .00161,      .00134, 
     C      .00166,      .00334,      .00383,      .00124,      .00127, 
     C      .01906,      .01831,      .01420,      .01077,      .00904, 
     C      .00782,      .00667,      .00690,      .04228/              
      DATA PHSF54/                                                      
     C    13.90000,    12.72000,     9.87700,     6.74400,     4.24600, 
     C     2.58600,     1.58500,      .66190,      .32580,      .18150, 
     C      .10950,      .06977,      .04630,      .03174,      .01380, 
     C      .00682,      .00376,      .00228,      .00153,      .00111, 
     C      .00088,      .00073,      .00068,      .00064,      .00061, 
     C      .00059,      .00057,      .00056,      .00055,      .00055, 
     C      .00056,      .00054,      .00050,      .00050/              
      DATA PHSF55/                                                      
     C    36.42000,    23.44333,     8.52800,     3.11067,     1.49100, 
     C      .91783,      .67607,      .46263,      .34257,      .26417, 
     C      .20367,      .15540,      .12417,      .09463,      .05233, 
     C      .02803,      .01629,      .00958,      .00583,      .00472, 
     C      .00438,      .00458,      .00534,      .00777,      .01141, 
     C      .01545,      .01958,      .01880,      .01607,      .01696, 
     C      .01907,      .03025,      .03881,      .05215/              
      DATA PHSF56/                                                      
     C    46.49000,    31.63000,    12.30000,     4.19500,     1.72400, 
     C      .91960,      .59580,      .34070,      .23500,      .17450, 
     C      .13450,      .10490,      .08291,      .06559,      .03717, 
     C      .02135,      .01252,      .00762,      .00490,      .00346, 
     C      .00283,      .00278,      .00305,      .00366,      .00464, 
     C      .00584,      .00670,      .00683,      .00640,      .00651, 
     C      .00846,      .01345,      .01103,      .01440/              
      DATA PHSF57/                                                      
     C  1698.00000,    15.47000,     3.11967,     1.46900,      .97483, 
     C      .76003,      .62317,      .46853,      .36270,      .28193, 
     C      .22163,      .17287,      .13357,      .10470,      .05409, 
     C      .02799,      .01396,      .00794,      .00479,      .00390, 
     C      .00409,      .00407,      .00363,      .00324,      .00464, 
     C      .01060,      .01826,      .01957,      .01599,      .01547, 
     C      .01597,      .01678,      .02321,      .05917/              
      DATA PHSF58/                                                      
     C   525.35000,     5.54850,     3.39200,     2.40225,     1.79275, 
     C     1.38725,     1.10400,      .74203,      .52213,      .37803, 
     C      .27970,      .20945,      .15915,      .12258,      .06615, 
     C      .03783,      .02289,      .01510,      .01074,      .00837, 
     C      .00717,      .00653,      .00661,      .00699,      .00781, 
     C      .00922,      .01127,      .01364,      .01588,      .01743, 
     C      .01838,      .01583,      .01491,      .02015/              
      DATA PHSF59/                                                      
     C    56.57000,    10.86983,     4.30450,     2.32817,     1.48817, 
     C     1.05608,      .80615,      .53590,      .39175,      .30123, 
     C      .23833,      .19167,      .15528,      .12653,      .07717, 
     C      .04870,      .03126,      .02128,      .01493,      .01091, 
     C      .00856,      .00765,      .00767,      .00787,      .00840, 
     C      .00973,      .01199,      .01623,      .02446,      .03802, 
     C      .04421,      .04801,      .05991,      .06067/              
      DATA PHSF60/                                                      
     C    37.27000,    14.69200,     6.78420,     3.81000,     2.39800, 
     C     1.62640,     1.16200,      .66076,      .41350,      .27594, 
     C      .19292,      .13976,      .10406,      .07926,      .04328, 
     C      .02568,      .01635,      .01116,      .00822,      .00657, 
     C      .00569,      .00527,      .00516,      .00510,      .00508, 
     C      .00511,      .00518,      .00528,      .00537,      .00537, 
     C      .00527,      .00528,      .00536,      .00549/              
      DATA PHSF61/                                                      
     C    24.80333,    14.28000,     8.35167,     5.06833,     3.14833, 
     C     2.03700,     1.38367,      .72373,      .42163,      .26167, 
     C      .16947,      .11343,      .07807,      .05503,      .02512, 
     C      .01283,      .00726,      .00455,      .00317,      .00247, 
     C      .00214,      .00196,      .00187,      .00177,      .00168, 
     C      .00159,      .00153,      .00150,      .00151,      .00161, 
     C      .00185,      .00209,      .00168,      .00168/              
      DATA PHSF62/                                                      
     C   101.15286,     5.39657,     2.28843,     1.62671,     1.32757, 
     C     1.13054,      .97696,      .73870,      .56023,      .42529, 
     C      .32319,      .24639,      .18874,      .14550,      .07827, 
     C      .04428,      .02652,      .01699,      .01182,      .00901, 
     C      .00763,      .00715,      .00718,      .00742,      .00797, 
     C      .00901,      .01007,      .01036,      .01076,      .01129, 
     C      .01176,      .01204,      .01243,      .01444/              
      DATA PHSF63/                                                      
     C    48.02600,    10.67620,     3.98180,     2.14360,     1.42080, 
     C     1.06302,      .85178,      .60524,      .45450,      .34880, 
     C      .26996,      .21070,      .16526,      .13048,      .07415, 
     C      .04380,      .02714,      .01784,      .01271,      .00998, 
     C      .00877,      .00871,      .00917,      .00990,      .01086, 
     C      .01174,      .01200,      .01185,      .01202,      .01250, 
     C      .01377,      .01588,      .01523,      .01909/              
      DATA PHSF64/                                                      
     C    34.21833,    12.06500,     4.94933,     2.57983,     1.56550, 
     C     1.05695,      .77238,      .48407,      .34568,      .26490, 
     C      .21097,      .17168,      .14155,      .11773,      .07609, 
     C      .05056,      .03467,      .02483,      .01884,      .01536, 
     C      .01352,      .01276,      .01267,      .01273,      .01293, 
     C      .01326,      .01371,      .01427,      .01491,      .01553, 
     C      .01582,      .01535,      .01512,      .01573/              
      DATA PHSF65/                                                      
     C     8.59757,     6.79429,     4.60071,     3.23457,     2.36214, 
     C     1.77586,     1.36529,      .84849,      .55343,      .37399, 
     C      .25995,      .18501,      .13442,      .09951,      .05039, 
     C      .02794,      .01684,      .01103,      .00787,      .00614, 
     C      .00521,      .00476,      .00465,      .00460,      .00460, 
     C      .00464,      .00470,      .00479,      .00490,      .00502, 
     C      .00509,      .00498,      .00479,      .00491/              
      DATA PHSF66/                                                      
     C     7.73378,     6.31989,     4.61211,     3.41189,     2.56922, 
     C     1.96389,     1.51900,      .93560,      .59521,      .38946, 
     C      .26146,      .17967,      .12618,      .09038,      .04241, 
     C      .02194,      .01241,      .00766,      .00519,      .00386, 
     C      .00314,      .00278,      .00267,      .00259,      .00254, 
     C      .00251,      .00251,      .00252,      .00256,      .00261, 
     C      .00268,      .00274,      .00268,      .00273/              
      DATA PHSF67/                                                      
     C    13.24333,    11.06100,     7.42300,     4.70567,     2.98533, 
     C     1.97200,     1.37267,      .75370,      .45857,      .29573, 
     C      .19823,      .13693,      .09689,      .07004,      .03369, 
     C      .01789,      .01040,      .00660,      .00460,      .00353, 
     C      .00298,      .00273,      .00268,      .00266,      .00265, 
     C      .00265,      .00265,      .00266,      .00270,      .00282, 
     C      .00308,      .00319,      .00262,      .00275/              
      DATA PHSF68/                                                      
     C    37.10000,    12.65667,     5.63100,     3.16800,     2.05233, 
     C     1.45750,     1.09982,      .69772,      .47462,      .33515, 
     C      .24170,      .17635,      .13072,      .09747,      .04922, 
     C      .02644,      .01502,      .00935,      .00640,      .00503, 
     C      .00468,      .00549,      .00635,      .00767,      .00953, 
     C      .01124,      .01140,      .01090,      .01055,      .01125, 
     C      .01355,      .01701,      .01486,      .02554/              
      DATA PHSF69/                                                      
     C   256.51429,    19.73571,     5.24714,     2.30771,     1.36100, 
     C      .94431,      .72756,      .50319,      .37583,      .28504, 
     C      .22174,      .17010,      .13151,      .10155,      .05367, 
     C      .02848,      .01561,      .00902,      .00592,      .00443, 
     C      .00434,      .00493,      .00535,      .00629,      .00897, 
     C      .01636,      .01849,      .01647,      .01539,      .01496, 
     C      .01673,      .02178,      .02754,      .05075/              
      DATA PHSF70/                                                      
     C    27.44667,    14.67667,     7.63033,     4.46200,     2.82633, 
     C     1.89500,     1.32600,      .71323,      .41983,      .26377, 
     C      .17420,      .11977,      .08514,      .06224,      .03144, 
     C      .01785,      .01118,      .00766,      .00573,      .00466, 
     C      .00407,      .00377,      .00368,      .00363,      .00360, 
     C      .00359,      .00360,      .00361,      .00363,      .00365, 
     C      .00366,      .00367,      .00367,      .00369/              
      END                                                               
      REAL*8 FUNCTION  PLKAVG ( WNUMLO, WNUMHI, T )                     
                                                                        
C        COMPUTES PLANCK FUNCTION INTEGRATED BETWEEN TWO WAVENUMBERS    
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
                                                                        
C  NOTE ** CHANGE 'R1MACH' TO 'D1MACH' TO RUN IN DOUBLE PRECISION       
                                                                        
C  I N P U T :  WNUMLO : LOWER WAVENUMBER ( INV CM ) OF SPECTRAL        
C                           INTERVAL                                    
C               WNUMHI : UPPER WAVENUMBER                               
C               T      : TEMPERATURE (K)                                
                                                                        
C  O U T P U T :  PLKAVG : INTEGRATED PLANCK FUNCTION ( WATTS/SQ M )    
C                           = INTEGRAL (WNUMLO TO WNUMHI) OF            
C                              2H C**2  NU**3 / ( EXP(HC NU/KT) - 1)    
C                              (WHERE H=PLANCKS CONSTANT, C=SPEED OF    
C                              LIGHT, NU=WAVENUMBER, T=TEMPERATURE,     
C                              AND K = BOLTZMANN CONSTANT)              
                                                                        
C  REFERENCE : SPECIFICATIONS OF THE PHYSICAL WORLD: NEW VALUE          
C                 OF THE FUNDAMENTAL CONSTANTS, DIMENSIONS/N.B.S.,      
C                 JAN. 1974                                             
                                                                        
C  METHOD :  FOR  -WNUMLO-  CLOSE TO  -WNUMHI-, A SIMPSON-RULE          
C            QUADRATURE IS DONE TO AVOID ILL-CONDITIONING; OTHERWISE    
                                                                        
C            (1)  FOR 'WNUMLO' OR 'WNUMHI' SMALL,                       
C                 INTEGRAL(0 TO WNUMLO/HI) IS CALCULATED BY EXPANDING   
C                 THE INTEGRAND IN A POWER SERIES AND INTEGRATING       
C                 TERM BY TERM;                                         
                                                                        
C            (2)  OTHERWISE, INTEGRAL(WNUMLO/HI TO INFINITY) IS         
C                 CALCULATED BY EXPANDING THE DENOMINATOR OF THE        
C                 INTEGRAND IN POWERS OF THE EXPONENTIAL AND            
C                 INTEGRATING TERM BY TERM.                             
                                                                        
C  ACCURACY :  AT LEAST 6 SIGNIFICANT DIGITS, ASSUMING THE              
C              PHYSICAL CONSTANTS ARE INFINITELY ACCURATE               
                                                                        
C  ERRORS WHICH ARE NOT TRAPPED:                                        
                                                                        
C      * POWER OR EXPONENTIAL SERIES MAY UNDERFLOW, GIVING NO           
C        SIGNIFICANT DIGITS.  THIS MAY OR MAY NOT BE OF CONCERN,        
C        DEPENDING ON THE APPLICATION.                                  
                                                                        
C      * SIMPSON-RULE SPECIAL CASE IS SKIPPED WHEN DENOMINATOR OF       
C        INTEGRAND WILL CAUSE OVERFLOW.  IN THAT CASE THE NORMAL        
C        PROCEDURE IS USED, WHICH MAY BE INACCURATE IF THE              
C        WAVENUMBER LIMITS (WNUMLO, WNUMHI) ARE CLOSE TOGETHER.         
C ----------------------------------------------------------------------
C                                   *** ARGUMENTS                       
      REAL*8     T, WNUMLO, WNUMHI                                      
C                                   *** LOCAL VARIABLES                 
                                                                        
C        A1,2,... :  POWER SERIES COEFFICIENTS                          
C        C2       :  H * C / K, IN UNITS CM*K (H = PLANCKS CONSTANT,    
C                      C = SPEED OF LIGHT, K = BOLTZMANN CONSTANT)      
C        D(I)     :  EXPONENTIAL SERIES EXPANSION OF INTEGRAL OF        
C                       PLANCK FUNCTION FROM WNUMLO (I=1) OR WNUMHI     
C                       (I=2) TO INFINITY                               
C        EPSIL    :  SMALLEST NUMBER SUCH THAT 1+EPSIL .GT. 1 ON        
C                       COMPUTER                                        
C        EX       :  EXP( - V(I) )                                      
C        EXM      :  EX**M                                              
C        MMAX     :  NO. OF TERMS TO TAKE IN EXPONENTIAL SERIES         
C        MV       :  MULTIPLES OF 'V(I)'                                
C        P(I)     :  POWER SERIES EXPANSION OF INTEGRAL OF              
C                       PLANCK FUNCTION FROM ZERO TO WNUMLO (I=1) OR    
C                       WNUMHI (I=2)                                    
C        PI       :  3.14159...                                         
C        SIGMA    :  STEFAN-BOLTZMANN CONSTANT (W/M**2/K**4)            
C        SIGDPI   :  SIGMA / PI                                         
C        SMALLV   :  NUMBER OF TIMES THE POWER SERIES IS USED (0,1,2)   
C        V(I)     :  C2 * (WNUMLO(I=1) OR WNUMHI(I=2)) / TEMPERATURE    
C        VCUT     :  POWER-SERIES CUTOFF POINT                          
C        VCP      :  EXPONENTIAL SERIES CUTOFF POINTS                   
C        VMAX     :  LARGEST ALLOWABLE ARGUMENT OF 'EXP' FUNCTION       
                                                                        
      PARAMETER  ( A1 = 1./3., A2 = -1./8., A3 = 1./60., A4 = -1./5040.,
     $             A5 = 1./272160., A6 = -1./13305600. )                
      INTEGER  SMALLV                                                   
      REAL*8     C2, CONC, D(2), EPSIL, EX, MV, P(2), SIGMA, SIGDPI,    
     $         V(2), VCUT, VCP(7), VSQ                                  
      DOUBLE PRECISION   D1MACH                                         
      SAVE     PI, CONC, VMAX, EPSIL, SIGDPI                            
      DATA     C2 / 1.438786 /,  SIGMA / 5.67032E-8 /,                  
     $         VCUT / 1.5 /, VCP / 10.25, 5.7, 3.9, 2.9, 2.3, 1.9, 0.0 /
      DATA     PI / 0.0 /                                               
      F(X) = X**3 / ( DEXP(X) - 1 )                                     
                                                                        
                                                                        
      IF ( PI.EQ.0.0 )  THEN                                            
         PI = 2. * DASIN( 1.0D0 )                                       
         VMAX = DLOG( D1MACH(2) )                                       
         EPSIL = D1MACH(3)                                              
         SIGDPI = SIGMA / PI                                            
         CONC = 15. / PI**4                                             
      END IF                                                            
                                                                        
      IF( T.LT.0.0 .OR. WNUMHI.LE.WNUMLO .OR. WNUMLO.LT.0. )            
     $    CALL ERRMSG( 'PLKAVG--TEMPERATURE OR WAVENUMS. WRONG', .TRUE.)
                                                                        
      IF ( T.LT.1.E-4 )  THEN                                           
         PLKAVG = 0.0                                                   
         RETURN                                                         
      ENDIF                                                             
                                                                        
      V(1) = C2 * WNUMLO / T                                            
      V(2) = C2 * WNUMHI / T                                            
      IF ( V(1).GT.EPSIL .AND. V(2).LT.VMAX .AND.                       
     $     (WNUMHI-WNUMLO)/WNUMHI .LT. 1.E-2 )  THEN                    
                                                                        
C                          ** WAVENUMBERS ARE VERY CLOSE.  GET INTEGRAL 
C                          ** BY ITERATING SIMPSON RULE TO CONVERGENCE. 
         HH = V(2) - V(1)                                               
         OLDVAL = 0.0                                                   
         VAL0 = F( V(1) ) + F( V(2) )                                   
                                                                        
         DO  2  N = 1, 10                                               
            DEL = HH / (2*N)                                            
            VAL = VAL0                                                  
            DO  1  K = 1, 2*N-1                                         
               VAL = VAL + 2*(1+MOD(K,2)) * F( V(1) + K*DEL )           
    1       CONTINUE                                                    
            VAL = DEL/3. * VAL                                          
            IF ( DABS( (VAL-OLDVAL)/VAL ) .LE. 1.E-6 )  GO TO 3         
            OLDVAL = VAL                                                
    2    CONTINUE                                                       
         CALL ERRMSG( 'PLKAVG--SIMPSON RULE DIDNT CONVERGE', .FALSE. )  
                                                                        
    3    PLKAVG = SIGDPI * T**4 * CONC * VAL                            
         RETURN                                                         
      END IF                                                            
                                                                        
      SMALLV = 0                                                        
      DO  50  I = 1, 2                                                  
                                                                        
         IF( V(I).LT.VCUT )  THEN                                       
C                                   ** USE POWER SERIES                 
            SMALLV = SMALLV + 1                                         
            VSQ = V(I)**2                                               
            P(I) =  CONC * VSQ * V(I) * ( A1 + V(I) * ( A2 + V(I) *     
     $                ( A3 + VSQ * ( A4 + VSQ * ( A5 + VSQ*A6 ) ) ) ) ) 
         ELSE                                                           
C                    ** USE EXPONENTIAL SERIES                          
            MMAX = 0                                                    
C                                ** FIND UPPER LIMIT OF SERIES          
   20       MMAX = MMAX + 1                                             
               IF ( V(I).LT.VCP( MMAX ) )  GO TO 20                     
                                                                        
            EX = DEXP( - V(I) )                                         
            EXM = 1.0                                                   
            D(I) = 0.0                                                  
                                                                        
            DO  30  M = 1, MMAX                                         
               MV = M * V(I)                                            
               EXM = EX * EXM                                           
               D(I) = D(I) +                                            
     $                EXM * ( 6. + MV*( 6. + MV*( 3. + MV ) ) ) / M**4  
   30       CONTINUE                                                    
                                                                        
            D(I) = CONC * D(I)                                          
         END IF                                                         
                                                                        
   50 CONTINUE                                                          
                                                                        
      IF ( SMALLV .EQ. 2 ) THEN                                         
C                                    ** WNUMLO AND WNUMHI BOTH SMALL    
         PLKAVG = P(2) - P(1)                                           
                                                                        
      ELSE IF ( SMALLV .EQ. 1 ) THEN                                    
C                                    ** WNUMLO SMALL, WNUMHI LARGE      
         PLKAVG = 1. - P(1) - D(2)                                      
                                                                        
      ELSE                                                              
C                                    ** WNUMLO AND WNUMHI BOTH LARGE    
         PLKAVG = D(1) - D(2)                                           
                                                                        
      END IF                                                            
                                                                        
      PLKAVG = SIGDPI * T**4 * PLKAVG                                   
      IF( PLKAVG.EQ.0.0 )                                               
     $    CALL ERRMSG( 'PLKAVG--RETURNS ZERO; POSSIBLE UNDERFLOW',      
     $                 .FALSE. )                                        
                                                                        
      RETURN                                                            
      END                                                               
      SUBROUTINE  PRALTR( UMU, NUMU, ALBMED, TRNMED )                   
                                                                        
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
C        PRINT PLANAR ALBEDO AND TRANSMISSIVITY OF MEDIUM               
C        AS A FUNCTION OF INCIDENT BEAM ANGLE                           
C                                                                       
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                          
                                                                        
      REAL*8     UMU(*), ALBMED(*), TRNMED(*)                           
                                                                        
                                                                        
Calley      WRITE( *,110 )                                              
      IF (IPR .GT. 0) WRITE( IPR, 110 )                                 
      DO 20  IU = 1, NUMU                                               
         ANGL = 180.0/3.14159265 * DACOS( UMU(IU) )                     
Calley         WRITE(*,111)  ANGL, UMU(IU), ALBMED(IU), TRNMED(IU)      
         IF (IPR.GT.0) WRITE(IPR,111)ANGL,UMU(IU),ALBMED(IU),TRNMED(IU) 
 20   CONTINUE                                                          
                                                                        
      RETURN                                                            
                                                                        
110   FORMAT( ///, ' *******  FLUX ALBEDO AND/OR TRANSMISSIVITY OF ',   
     $ 'ENTIRE MEDIUM  ********', //,                                   
     $ ' BEAM ZEN ANG  dcos(BEAM ZEN ANG)      ALBEDO   TRANSMISSIVITY')
111   FORMAT( 0P,F13.4, F20.6, F12.5, 1P,E17.4 )                        
      END                                                               
      SUBROUTINE  PRAVIN( UMU, NUMU, MAXUMU, UTAU, NTAU, U0U )          
                                                                        
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
C        PRINT AZIMUTHALLY AVERAGED INTENSITIES AT USER ANGLES          
C                                                                       
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                          
                                                                        
      REAL*8     UMU(*), UTAU(*), U0U( MAXUMU,* )                       
                                                                        
                                                                        
Calley      WRITE ( *, '(//,A)' )                                       
      IF (IPR .GT. 0) WRITE ( IPR , '(//,A)' )                          
     $         ' *********  AZIMUTHALLY AVERAGED INTENSITIES '          
     $       // '(USER POLAR ANGLES)  *********'                        
      LENFMT = 8                                                        
      NPASS = 1 + NUMU / LENFMT                                         
      IF ( MOD(NUMU,LENFMT) .EQ. 0 )  NPASS = NPASS - 1                 
      DO 10  NP = 1, NPASS                                              
         IUMIN = 1 + LENFMT * (NP-1)                                    
         IUMAX = MIN0( LENFMT*NP, NUMU )                                
Calley         WRITE ( *,101 )  ( UMU(IU), IU = IUMIN, IUMAX )          
         IF (IPR .GT. 0) WRITE (IPR,101)  (UMU(IU), IU=IUMIN,IUMAX)     
         DO 10  LU = 1, NTAU                                            
Calley            WRITE( *,102 ) UTAU(LU),( U0U(IU,LU), IU=IUMIN,IUMAX) 
            IF (IPR .GT. 0) WRITE(IPR,102) UTAU(LU),(U0U(IU,LU),        
     +                                               IU=IUMIN,IUMAX)    
 10   CONTINUE                                                          
                                                                        
      RETURN                                                            
                                                                        
101   FORMAT( /, 3X,'OPTICAL   POLAR ANGLE COSINES',                    
     $        /, 3X,'  DEPTH', 8F14.5 )                                 
102   FORMAT( 0P,F10.4, 1P,8E14.4 )                                     
      END                                                               
      BLOCK DATA PRFDTA                                                 
C>    BLOCK DATA                                                        
C                                                                       
C        AEROSOL PROFILE DATA                                           
C                                                                       
CCC         0-2KM                                                       
CCC           HZ2K=5 VIS PROFILES- 50KM,23KM,10KM,5KM,2KM               
CCC         >2-10KM                                                     
CCC           FAWI50=FALL/WINTER   50KM VIS                             
CCC           FAWI23=FALL/WINTER    23KM VIS                            
CCC           SPSU50=SPRING/SUMMER  50KM VIS                            
CCC           SPSU23=SPRING/SUMMER  23KM VIS                            
CCC         >10-30KM                                                    
CCC           BASTFW=BACKGROUND STRATOSPHERIC   FALL/WINTER             
CCC           VUMOFW=MODERATE VOLCANIC          FALL/WINTER             
CCC           HIVUFW=HIGH VOLCANIC              FALL/WINTER             
CCC           EXVUFW=EXTREME VOLCANIC           FALL/WINTER             
CCC           BASTSS,VUMOSS,HIVUSS,EXVUSS=      SPRING/SUMMER           
CCC         >30-100KM                                                   
CCC           UPNATM=NORMAL UPPER ATMOSPHERIC                           
CCC           VUTONO=TRANSITION FROM VOLCANIC TO NORMAL                 
CCC           VUTOEX=TRANSITION FROM VOLCANIC TO EXTREME                
CCC           EXUPAT=EXTREME UPPER ATMOSPHERIC                          
      COMMON/PRFD  /ZHT(34),HZ2K(34,5),FAWI50(34),FAWI23(34),SPSU50(34),
     1SPSU23(34),BASTFW(34),VUMOFW(34),HIVUFW(34),EXVUFW(34),BASTSS(34),
     2VUMOSS(34),HIVUSS(34),EXVUSS(34),UPNATM(34),VUTONO(34),           
     3VUTOEX(34),EXUPAT(34)                                             
      DATA ZHT/                                                         
     *    0.,    1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,   
     *    9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   17.,   
     *   18.,   19.,   20.,   21.,   22.,   23.,   24.,   25.,   30.,   
     *   35.,   40.,   45.,   50.,   70.,  100.,99999./                 
       DATA HZ2K(1,1),HZ2K(1,2),HZ2K(1,3),HZ2K(1,4),HZ2K(1,5)/          
     1 6.62E-02, 1.58E-01, 3.79E-01, 7.70E-01, 1.94E+00/                
       DATA HZ2K(2,1),HZ2K(2,2),HZ2K(2,3),HZ2K(2,4),HZ2K(2,5)/          
     1 4.15E-02, 9.91E-02, 3.79E-01, 7.70E-01, 1.94E+00/                
       DATA HZ2K(3,1),HZ2K(3,2),HZ2K(3,3),HZ2K(3,4),HZ2K(3,5)/          
     1 2.60E-02, 6.21E-02, 6.21E-02, 6.21E-02, 6.21E-02/                
      DATA FAWI50  /3*0.,                                               
     1 1.14E-02, 6.43E-03, 4.85E-03, 3.54E-03, 2.31E-03, 1.41E-03,      
     2 9.80E-04,7.87E-04,23*0./                                         
      DATA FAWI23              /3*0.,                                   
     1 2.72E-02, 1.20E-02, 4.85E-03, 3.54E-03, 2.31E-03, 1.41E-03,      
     2 9.80E-04,7.87E-04,23*0./                                         
      DATA  SPSU50              / 3*0.,                                 
     1 1.46E-02, 1.02E-02, 9.31E-03, 7.71E-03, 6.23E-03, 3.37E-03,      
     2 1.82E-03  ,1.14E-03,23*0./                                       
      DATA  SPSU23              / 3*0.,                                 
     1 3.46E-02, 1.85E-02, 9.31E-03, 7.71E-03, 6.23E-03, 3.37E-03,      
     2 1.82E-03  ,1.14E-03,23*0./                                       
      DATA BASTFW       /11*0.,                                         
     1           7.14E-04, 6.64E-04, 6.23E-04, 6.45E-04, 6.43E-04,      
     2 6.41E-04, 6.00E-04, 5.62E-04, 4.91E-04, 4.23E-04, 3.52E-04,      
     3 2.95E-04, 2.42E-04, 1.90E-04, 1.50E-04, 3.32E-05 ,7*0./          
      DATA    VUMOFW       /11*0.,                                      
     1           1.79E-03, 2.21E-03, 2.75E-03, 2.89E-03, 2.92E-03,      
     2 2.73E-03, 2.46E-03, 2.10E-03, 1.71E-03, 1.35E-03, 1.09E-03,      
     3 8.60E-04, 6.60E-04, 5.15E-04, 4.09E-04, 7.60E-05 ,7*0./          
      DATA    HIVUFW       /11*0.,                                      
     1           2.31E-03, 3.25E-03, 4.52E-03, 6.40E-03, 7.81E-03,      
     2 9.42E-03, 1.07E-02, 1.10E-02, 8.60E-03, 5.10E-03, 2.70E-03,      
     3 1.46E-03, 8.90E-04, 5.80E-04, 4.09E-04, 7.60E-05 ,7*0./          
      DATA    EXVUFW       /11*0.,                                      
     1           2.31E-03, 3.25E-03, 4.52E-03, 6.40E-03, 1.01E-02,      
     2 2.35E-02, 6.10E-02, 1.00E-01, 4.00E-02, 9.15E-03, 3.13E-03,      
     3 1.46E-03, 8.90E-04, 5.80E-04, 4.09E-04, 7.60E-05 ,7*0./          
      DATA    BASTSS       /11*0.,                                      
     1           7.99E-04, 6.41E-04, 5.17E-04, 4.42E-04, 3.95E-04,      
     2 3.82E-04, 4.25E-04, 5.20E-04, 5.81E-04, 5.89E-04, 5.02E-04,      
     3 4.20E-04, 3.00E-04, 1.98E-04, 1.31E-04, 3.32E-05 ,7*0./          
      DATA    VUMOSS       /11*0.,                                      
     1           2.12E-03, 2.45E-03, 2.80E-03, 2.89E-03, 2.92E-03,      
     2 2.73E-03, 2.46E-03, 2.10E-03, 1.71E-03, 1.35E-03, 1.09E-03,      
     3 8.60E-04, 6.60E-04, 5.15E-04, 4.09E-04, 7.60E-05 ,7*0./          
      DATA    HIVUSS       /11*0.,                                      
     1           2.12E-03, 2.45E-03, 2.80E-03, 3.60E-03, 5.23E-03,      
     2 8.11E-03, 1.20E-02, 1.52E-02, 1.53E-02, 1.17E-02, 7.09E-03,      
     3 4.50E-03, 2.40E-03, 1.28E-03, 7.76E-04, 7.60E-05 ,7*0./          
      DATA    EXVUSS       /11*0.,                                      
     1           2.12E-03, 2.45E-03, 2.80E-03, 3.60E-03, 5.23E-03,      
     2 8.11E-03, 1.27E-02, 2.32E-02, 4.85E-02, 1.00E-01, 5.50E-02,      
     3 6.10E-03, 2.40E-03, 1.28E-03, 7.76E-04, 7.60E-05 ,7*0./          
      DATA UPNATM       /26*0.,                                         
     1 3.32E-05, 1.64E-05, 7.99E-06, 4.01E-06, 2.10E-06, 1.60E-07,      
     2 9.31E-10, 0.      /                                              
      DATA VUTONO       /26*0.,                                         
     1 7.60E-05, 2.45E-05, 7.99E-06, 4.01E-06, 2.10E-06, 1.60E-07,      
     2 9.31E-10, 0.      /                                              
      DATA VUTOEX       /26*0.,                                         
     1 7.60E-05, 7.20E-05, 6.95E-05, 6.60E-05, 5.04E-05, 1.03E-05,      
     2 4.50E-07, 0.      /                                              
      DATA EXUPAT       /26*0.,                                         
     1 3.32E-05, 4.25E-05, 5.59E-05, 6.60E-05, 5.04E-05, 1.03E-05,      
     2 4.50E-07, 0.      /                                              
      END                                                               
      SUBROUTINE  PRTINP( NLYR, DTAUC, SSALB, PMOM, TEMPER, WVNMLO,     
     $                    WVNMHI, NTAU, UTAU, NSTR, NUMU, UMU,          
     $                    NPHI, PHI, IBCND, FBEAM, UMU0, PHI0,          
     $                    FISOT, LAMBER, ALBEDO, HL, BTEMP, TTEMP,      
     $                    TEMIS, DELTAM, PLANK, ONLYFL, ACCUR,          
     $                    FLYR, LYRCUT, OPRIM, TAUC, TAUCPR,            
     $                    MAXCMU, PRTMOM )                              
                                                                        
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
C        PRINT VALUES OF INPUT VARIABLES                                
                                                                        
      LOGICAL  DELTAM, LAMBER, LYRCUT, PLANK, ONLYFL, PRTMOM            
      REAL*8     UMU(*), FLYR(*), DTAUC(*), OPRIM(*), PHI(*),           
     $         PMOM( 0:MAXCMU,* ), SSALB(*), UTAU(*), TAUC( 0:* ),      
     $         TAUCPR( 0:* ), TEMPER( 0:* ), HL( 0:MAXCMU )             
                                                                        
C                                                                       
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                          
                                                                        
Calley      WRITE( *,1010 )  NSTR, NLYR                                 
      WRITE( IPR,1010 )  NSTR, NLYR                                     
CalleyIF ( IBCND.NE.1 ) WRITE( *,1030 )  NTAU, (UTAU(LU), LU = 1, NTAU) 
      IF ( IBCND.NE.1 ) WRITE(IPR,1030)  NTAU, (UTAU(LU), LU = 1, NTAU) 
      IF ( .NOT.ONLYFL )                                                
     $      WRITE( IPR,1040 )  NUMU, ( UMU(IU), IU = 1, NUMU )          
Calley     $      WRITE( *,1040 )  NUMU, ( UMU(IU), IU = 1, NUMU )      
      IF ( .NOT.ONLYFL .AND. IBCND.NE.1 )                               
     $      WRITE( IPR,1050 )  NPHI, ( PHI(J), J = 1, NPHI )            
Calley     $      WRITE( *,1050 )  NPHI, ( PHI(J), J = 1, NPHI )        
Calley      IF ( .NOT.PLANK .OR. IBCND.EQ.1 )  WRITE( *,1100 )          
      IF ( .NOT.PLANK .OR. IBCND.EQ.1 )  WRITE( IPR,1100 )              
Calley      WRITE( *,1055 )  IBCND                                      
      WRITE( IPR,1055 )  IBCND                                          
      IF ( IBCND.EQ.0 )  THEN                                           
Calley         WRITE( *,1060 ) FBEAM, UMU0, PHI0, FISOT                 
         WRITE( IPR,1060 ) FBEAM, UMU0, PHI0, FISOT                     
Calley         IF ( LAMBER )   WRITE( *,1080 ) ALBEDO                   
         IF ( LAMBER )   WRITE( IPR,1080 ) ALBEDO                       
Calley         IF (.NOT.LAMBER)  WRITE( *,1090 ) ( HL(K), K = 0, NSTR ) 
         IF ( .NOT.LAMBER )  WRITE( IPR,1090 ) ( HL(K), K = 0, NSTR )   
Calley         IF ( PLANK )  WRITE( *,1110 ) WVNMLO, WVNMHI, BTEMP,     
         IF ( PLANK )  WRITE( IPR,1110 ) WVNMLO, WVNMHI, BTEMP,         
     $                                 TTEMP, TEMIS                     
      ELSE IF ( IBCND.EQ.1 )  THEN                                      
Calley         WRITE( *,1070 )                                          
         WRITE( IPR,1070 )                                              
Calley         WRITE( *,1080 ) ALBEDO                                   
         WRITE( IPR,1080 ) ALBEDO                                       
      ENDIF                                                             
Calley      IF ( DELTAM )      WRITE( *,1120 )                          
      IF ( DELTAM )      WRITE( IPR,1120 )                              
Calley      IF ( .NOT.DELTAM ) WRITE( *,1130 )                          
      IF ( .NOT.DELTAM ) WRITE( IPR,1130 )                              
      IF ( IBCND.EQ.1 )  THEN                                           
Calley         WRITE( *,1135 )                                          
         WRITE( IPR,1135 )                                              
      ELSE IF ( ONLYFL )  THEN                                          
Calley         WRITE( *,1140 )                                          
         WRITE( IPR,1140 )                                              
      ELSE                                                              
Calley         WRITE( *,1150 )                                          
         WRITE( IPR,1150 )                                              
      ENDIF                                                             
Calley      WRITE( *,1160 )  ACCUR                                      
      WRITE( IPR,1160 )  ACCUR                                          
Calley      IF ( LYRCUT )  WRITE( *,1170 )                              
      IF ( LYRCUT )  WRITE( IPR,1170 )                                  
Calley      IF ( PLANK )  WRITE ( *,1190 )                              
      IF ( PLANK )  WRITE ( IPR,1190 )                                  
Calley      IF ( .NOT.PLANK )  WRITE ( *,1191 )                         
      IF ( .NOT.PLANK )  WRITE ( IPR,1191 )                             
      YESSCT = 0.0                                                      
      DO 10 LC = 1, NLYR                                                
         YESSCT = YESSCT + SSALB(LC)                                    
         IF( PLANK )                                                    
     $       WRITE( IPR,1200 )  LC, DTAUC(LC), TAUC(LC), SSALB(LC),     
     $                    FLYR(LC), TAUCPR(LC)-TAUCPR(LC-1), TAUCPR(LC),
     $                    OPRIM(LC), PMOM(1,LC), TEMPER(LC-1)           
Calley     $       WRITE( *,1200 )  LC, DTAUC(LC), TAUC(LC), SSALB(LC), 
Calley     $              FLYR(LC), TAUCPR(LC)-TAUCPR(LC-1), TAUCPR(LC),
Calley     $                    OPRIM(LC), PMOM(1,LC), TEMPER(LC-1)     
         IF( .NOT.PLANK )                                               
     $       WRITE( IPR,1200 )  LC, DTAUC(LC), TAUC(LC), SSALB(LC),     
     $                    FLYR(LC), TAUCPR(LC)-TAUCPR(LC-1), TAUCPR(LC),
     $                    OPRIM(LC), PMOM(1,LC)                         
Calley     $       WRITE( *,1200 )  LC, DTAUC(LC), TAUC(LC), SSALB(LC), 
Calley     $              FLYR(LC), TAUCPR(LC)-TAUCPR(LC-1), TAUCPR(LC),
Calley     $                    OPRIM(LC), PMOM(1,LC)                   
 10   CONTINUE                                                          
Calley      IF( PLANK )  WRITE( *,1210 ) TEMPER(NLYR)                   
      IF( PLANK )  WRITE( IPR,1210 ) TEMPER(NLYR)                       
                                                                        
      IF( PRTMOM .AND. YESSCT.GT.0.0 )  THEN                            
         WRITE( IPR, '(/,A)' )  ' LAYER   PHASE FUNCTION MOMENTS'       
Calley         WRITE( *, '(/,A)' )  ' LAYER   PHASE FUNCTION MOMENTS'   
         DO 20 LC = 1, NLYR                                             
            IF( SSALB(LC).GT.0.0 )                                      
     $          WRITE( IPR,1300 )  LC, ( PMOM(K,LC), K = 0, NSTR )      
Calley     $          WRITE( *,1300 )  LC, ( PMOM(K,LC), K = 0, NSTR )  
 20      CONTINUE                                                       
      ENDIF                                                             
                                                                        
      RETURN                                                            
                                                                        
1010  FORMAT ( /, ' NO. STREAMS =', I4,                                 
     $  '     NO. COMPUTATIONAL LAYERS =', I4 )                         
1030  FORMAT( I4,' USER OPTICAL DEPTHS :',10F10.4, /, (26X,10F10.4) )   
1040  FORMAT( I4,' USER POLAR ANGLE COSINES :',10F9.5,/,(31X,10F9.5) )  
1050  FORMAT( I4,' USER AZIMUTHAL ANGLES :', 10F9.2, /, (28X,10F9.2) )  
1055  FORMAT( ' BOUNDARY CONDITION FLAG: IBCND =', I2 )                 
1060  FORMAT( '    INCIDENT BEAM WITH INTENSITY =', 1P,E11.3, ' AND',   
     $ ' POLAR ANGLE COSINE = ', 0P,F8.5,'  AND AZIMUTH ANGLE =', F7.2, 
     $ /,'    PLUS ISOTROPIC INCIDENT INTENSITY =', 1P,E11.3 )          
1070  FORMAT( '    ISOTROPIC ILLUMINATION FROM TOP AND BOTTOM' )        
1080  FORMAT( '    BOTTOM ALBEDO (LAMBERTIAN) =', 0P,F8.4 )             
1090  FORMAT( '    LEGENDRE COEFFS OF BOTTOM BIDIRECTIONAL',            
     $ ' REFLECTIVITY :', /, (10X,10F9.5) )                             
1100  FORMAT( ' NO THERMAL EMISSION' )                                  
1110  FORMAT( '    THERMAL EMISSION IN WAVENUMBER INTERVAL :', 2F14.4,/,
     $   '    BOTTOM TEMPERATURE =', F10.2, '     TOP TEMPERATURE =',   
     $   F10.2,'    TOP EMISSIVITY =', F8.4 )                           
1120  FORMAT( ' USES DELTA-M METHOD' )                                  
1130  FORMAT( ' DOES NOT USE DELTA-M METHOD' )                          
1135  FORMAT( ' CALCULATE ALBEDO AND TRANSMISSIVITY OF MEDIUM',         
     $   ' VS. INCIDENT BEAM ANGLE' )                                   
1140  FORMAT( ' CALCULATE FLUXES AND AZIM-AVERAGED INTENSITIES ONLY' )  
1150  FORMAT( ' CALCULATE FLUXES AND INTENSITIES' )                     
1160  FORMAT( ' RELATIVE CONVERGENCE CRITERION FOR AZIMUTH SERIES =',   
     $   1P,E11.2 )                                                     
1170  FORMAT( ' SETS RADIATION = 0 BELOW ABSORPTION OPTICAL DEPTH 10' ) 
1190  FORMAT( /, 37X, '<------------- DELTA-M --------------->', /,     
     $'                   TOTAL    SINGLE                           ',  
     $               'TOTAL    SINGLE', /,                              
     $'       OPTICAL   OPTICAL   SCATTER   TRUNCATED   ',              
     $   'OPTICAL   OPTICAL   SCATTER    ASYMM', /,                     
     $'         DEPTH     DEPTH    ALBEDO    FRACTION     ',            
     $     'DEPTH     DEPTH    ALBEDO   FACTOR   TEMPERATURE' )         
1191  FORMAT( /, 37X, '<------------- DELTA-M --------------->', /,     
     $'                   TOTAL    SINGLE                           ',  
     $               'TOTAL    SINGLE', /,                              
     $'       OPTICAL   OPTICAL   SCATTER   TRUNCATED   ',              
     $   'OPTICAL   OPTICAL   SCATTER    ASYMM', /,                     
     $'         DEPTH     DEPTH    ALBEDO    FRACTION     ',            
     $     'DEPTH     DEPTH    ALBEDO   FACTOR' )                       
1200  FORMAT( I4, 2F10.4, F10.5, F12.5, 2F10.4, F10.5, F9.4,F14.3 )     
1210  FORMAT( 85X, F14.3 )                                              
1300  FORMAT( I6, 10F11.6, /, (6X,10F11.6) )                            
                                                                        
      END                                                               
      SUBROUTINE  PRTINT( UU, UTAU, NTAU, UMU, NUMU, PHI, NPHI,         
     $                    MAXULV, MAXUMU )                              
                                                                        
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
C         PRINTS THE INTENSITY AT USER POLAR AND AZIMUTHAL ANGLES       
                                                                        
C     ALL ARGUMENTS ARE DISORT INPUT OR OUTPUT VARIABLES                
                                                                        
C+---------------------------------------------------------------------+
      REAL*8   PHI(*), UMU(*), UTAU(*), UU( MAXUMU, MAXULV, * )         
                                                                        
C                                                                       
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                          
                                                                        
Calley      WRITE ( *, '(//,A)' )                                       
      WRITE ( IPR, '(//,A)' )                                           
     $         ' *********  I N T E N S I T I E S  *********'           
      LENFMT = 10                                                       
      NPASS = 1 + NPHI / LENFMT                                         
      IF ( MOD(NPHI,LENFMT) .EQ. 0 )  NPASS = NPASS - 1                 
      DO 10  LU = 1, NTAU                                               
         DO 10  NP = 1, NPASS                                           
            JMIN = 1 + LENFMT * (NP-1)                                  
            JMAX = MIN0( LENFMT*NP, NPHI )                              
Calley            WRITE( *,101 )  ( PHI(J), J = JMIN, JMAX )            
            WRITE( IPR,101 )  ( PHI(J), J = JMIN, JMAX )                
            DO 10  IU = 1, NUMU                                         
Calley               IF( IU.EQ.1 )  WRITE( *,102 )  UTAU(LU), UMU(IU),  
               IF( IU.EQ.1 )  WRITE( IPR,102 )  UTAU(LU), UMU(IU),      
     $           ( UU( IU,LU,J ), J = JMIN, JMAX )                      
Calley               IF( IU.GT.1 )  WRITE( *,103 )  UMU(IU),            
               IF( IU.GT.1 )  WRITE( IPR,103 )  UMU(IU),                
     $           ( UU( IU,LU,J ), J = JMIN, JMAX )                      
10    CONTINUE                                                          
                                                                        
      RETURN                                                            
                                                                        
101   FORMAT( /, 3X,'          POLAR   AZIMUTH ANGLES (DEGREES)',       
     $        /, 3X,'OPTICAL   ANGLE',                                  
     $        /, 3X,' DEPTH   COSINE', 10F11.2 )                        
102   FORMAT( F10.4, F8.4, 1P,10E11.3 )                                 
103   FORMAT( 10X,   F8.4, 1P,10E11.3 )                                 
      END                                                               
      FUNCTION PSI(PSIO,DELO,BETA,IARB,IARBO)                           
C                                                                       
C     FUNCTION PSI RETURNS THE VALUE OF SOLAR AZIMUTH RELATIVE TO       
C     THE LINE OF SIGHT, AT THE CURRENT SCATTERING LOCATION             
C                                                                       
C       PI       THE CONSTANT PI                                        
C       DEG      NUMBER OF DEGREES IN ONE RADIAN.                       
C       BIGNUM   MAXIMUM SINGLE PRECISION NUMBER.                       
C       BIGEXP   MAXIMUM EXPONENTIAL ARGUMENT WITHOUT OVERFLOW.         
      REAL PI,DEG,BIGNUM,BIGEXP                                         
      COMMON/CNSTNS/PI,DEG,BIGNUM,BIGEXP                                
      DATA  EPSILN/1.0E-5/                                              
      PSI=PSIO                                                          
      DELOR=DELO/DEG                                                    
      BETAR=BETA/DEG                                                    
      IF(IARBO.EQ.0) GO TO 5                                            
C     SPECIAL CASES WHEN PSIO IS ARBITRARY                              
      IARB=IARBO                                                        
      PSI = 0.                                                          
      IF(IARBO.EQ.1.OR.IARBO.EQ.3) RETURN                               
      IF(BETA.LE.EPSILN) RETURN                                         
C     PSI=180.0 (MOVED OUT FROM UNDER THE SUN)                          
      IARB=0                                                            
      PSI=180.0                                                         
      RETURN                                                            
5     CONTINUE                                                          
C     GENERAL CASE                                                      
      PSIOR=PSIO/DEG                                                    
      IARB=0                                                            
      ANUMER=SIN(DELOR)*SIN(PSIOR)                                      
      DENOM=COS(BETAR)*SIN(DELOR)*COS(PSIOR)-SIN(BETAR)*COS(DELOR)      
C     SPECIAL CASES                                                     
C     NUMERATOR GOES TO ZERO IN THE FOLLOWING 3 CASES                   
C 1)  DELO=0.0                                                          
      IF(DELO.GT.EPSILN) GO TO 20                                       
      IF(BETA.GT.EPSILN) GO TO 10                                       
      IARB=2                                                            
      RETURN                                                            
10    PSI=180.0                                                         
      RETURN                                                            
C 2)  PSIO=0.0                                                          
20    IF(ABS(PSIO).GT.EPSILN) GO TO 40                                  
      IF(ABS(BETA-DELO).GE.EPSILN) GO TO 30                             
C     SCATTERING POINT IS DIRECTLY UNDER THE SUN                        
      IARB=2                                                            
      RETURN                                                            
30    IF(BETA.LT.DELO) PSI=0.0                                          
      IF(BETA.GT.DELO) PSI=180.0                                        
      RETURN                                                            
C 3)  PSIO=180.0                                                        
40    IF(ABS(PSIO).LT.(180.0-EPSILN)) GO TO 60                          
      PSI=180.0                                                         
      RETURN                                                            
60    CONTINUE                                                          
C     DENOMINATOR CAN GO TO ZERO FOR THE FOLLOWING 2 CASES              
C 1)  BETA=DELO AND PSIO=0.0                                            
C     THIS CASE WAS HANDLED EARLIER                                     
C 2)  GENERAL CASE                                                      
      IF(ABS(DENOM).GT.EPSILN) GO TO 80                                 
      IF(PSIO.LT.0.0) PSI=-90.0                                         
      IF(PSIO.GT.0.0) PSI=90.0                                          
      RETURN                                                            
80    CONTINUE                                                          
      PSI=DEG*ATAN(ANUMER/DENOM)                                        
C     NOTE ATAN RETURNS ARGUMENTS BETWEEN -90 AND 90, PSI               
C     AND PSIO SHOULD BE OF THE SAME SIGN.                              
      IF(PSIO.GT.0.0.AND.PSI.LT.0.0) PSI=PSI+180.                       
      IF(PSIO.LT.0.0.AND.PSI.GT.0.0) PSI=PSI-180.                       
      RETURN                                                            
      END                                                               
      SUBROUTINE PSIECA(OLAT,OLONG,SLAT,SLONG,PSI,ECA)                  
C                                                                       
C     THIS ROUTINE CALCULATES THE EARTH CENTER ANGLE AND THE PATH       
C     AZIMUTH FROM AN OBSERVER TO A SOURCE POINT GIVEN LATITUDE AND     
C     LONGITUDE INFORMATION.                                            
C                                                                       
C     DECLARE INPUTS                                                    
C       OLAT   OBSERVER LATITUDE [DEG NORTH, -90 TO 90]                 
C       OLONG  OBSERVER LONGITUDE [DEG WEST, 0 TO 360]                  
C       SLAT   SOURCE POINT LATITUDE [DEG NORTH, -90 TO 90]             
C       SLONG  SOURCE POINT LONGITUDE [DEG WEST, 0 TO 360]              
      REAL OLAT,OLONG,SLAT,SLONG                                        
C                                                                       
C     DECLARE OUTPUTS                                                   
C       PSI    PATH AZIMUTH AT OBSERVER [DEG EAST OF NORTH, -180 TO 180]
C       ECA    EARTH CENTER ANGLE [DEG, 0 TO 180]                       
      REAL PSI,ECA                                                      
C                                                                       
C     NOTE:  OLONG AND PSI ARE NOT WELL DEFINED AT THE NORTH (OLAT=90)  
C            AND SOUTH (OLAT=-90) POLES.  THIS ROUTINE RETURNS THE      
C            VALUE OF PATH AZIMUTH OBTAINED IN THE LIMIT AS |OLAT|      
C            APPROACHES 90 FROM BELOW.                                  
C                                                                       
C     DECLARE LOCAL VARIABLES                                           
      REAL DEG,SOLAT,COLAT,SSLAT,CSLAT,DLONG,SDLONG,CDLONG,COSECA,X,Y   
C                                                                       
C     LIST DATA                                                         
      DATA DEG/57.2957795/                                              
C                                                                       
C     TREAT SAME LONGITUDE AS SPECIAL CASE                              
      IF(OLONG.EQ.SLONG)THEN                                            
          IF(OLAT.LE.SLAT)THEN                                          
              ECA=SLAT-OLAT                                             
              PSI=0.                                                    
          ELSE                                                          
              ECA=OLAT-SLAT                                             
              PSI=180.                                                  
          ENDIF                                                         
          RETURN                                                        
      ENDIF                                                             
      SOLAT=SIN(OLAT/DEG)                                               
      COLAT=COS(OLAT/DEG)                                               
      SSLAT=SIN(SLAT/DEG)                                               
      CSLAT=COS(SLAT/DEG)                                               
      DLONG=(OLONG-SLONG)/DEG                                           
      SDLONG=SIN(DLONG)                                                 
      CDLONG=COS(DLONG)                                                 
      COSECA=COLAT*CSLAT*CDLONG+SOLAT*SSLAT                             
      IF(COSECA.GE.1.)THEN                                              
          ECA=0.                                                        
      ELSEIF(COSECA.GT.-1.)THEN                                         
          ECA=DEG*ACOS(COSECA)                                          
      ELSE                                                              
          ECA=180.                                                      
      ENDIF                                                             
      X=COLAT*SSLAT-SOLAT*CSLAT*CDLONG                                  
      Y=CSLAT*SDLONG                                                    
      IF(X.EQ.0.)THEN                                                   
          PSI=90.                                                       
          IF(Y.LT.0.)PSI=-90.                                           
      ELSE                                                              
          PSI=DEG*ATAN(Y/X)                                             
          IF(X.LT.0)PSI=PSI+180.                                        
          IF(PSI.GT.180.)PSI=PSI-360.                                   
      ENDIF                                                             
      RETURN                                                            
      END                                                               
      INTEGER FUNCTION PSLCT(ANGLE,RANGE,BETA)                          
C                                                                       
C     THIS ROUTINE RETURNS THE AN INTEGER VALUE INDICATING THE TYPE     
C     OF SLANT (ITYPE=2) PATH.  THE FOLLOWING VALUES ARE RETURNED:      
C          PSLCT = 21 FOR CASE 2A (H1,H2,ANGLE)                         
C          PSLCT = 22 FOR CASE 2B (H1,ANGLE,RANGE)                      
C          PSLCT = 23 FOR CASE 2C (H1,H2,RANGE)                         
C          PSLCT = 24 FOR CASE 2D (H1,H2,BETA)                          
C                                                                       
C     H1     H2     ANGLE     RANGE      BETA        CASE  PSLCT        
C--------------------------------------------     ----------------      
C     X      X      X                                 2A     21         
C                                                                       
C     X             X         X                       2B     22         
C                                                                       
C     X      X                X                       2C     23         
C                                                                       
C     X      X                           X            2D     24         
C                                                                       
C     DECLARE INPUTS                                                    
      REAL ANGLE,RANGE,BETA                                             
      IF(BETA.GT.0.)THEN                                                
C                                                                       
C         BETA > 0 IMPLIES CASE 2D (H1,H2,BETA)                         
          PSLCT=24                                                      
      ELSEIF(RANGE.GT.0.)THEN                                           
C                                                                       
C         RANGE > 0 AND BETA = 0 IMPLIES CASE 2B OR 2C.                 
          IF(ANGLE.EQ.0.)THEN                                           
C                                                                       
C             RANGE > 0, BETA = 0 AND ANGLE = 0 IMPLIES CASE 2C         
              PSLCT=23                                                  
          ELSE                                                          
C                                                                       
C             RANGE > 0, BETA = 0 AND ANGLE NON-ZERO IMPLIES CASE 2B    
              PSLCT=22                                                  
          ENDIF                                                         
      ELSE                                                              
C                                                                       
C         RANGE =0 AND BETA = 0 IMPLIES CASE 2A                         
          PSLCT=21                                                      
      ENDIF                                                             
      RETURN                                                            
      END                                                               
      SUBROUTINE  QGAUSN( M, GMU, GWT )                                 
                                                                        
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
C       COMPUTE WEIGHTS AND ABSCISSAE FOR ORDINARY GAUSSIAN QUADRATURE  
C       (NO WEIGHT FUNCTION INSIDE INTEGRAL) ON THE INTERVAL (0,1)      
                                                                        
C   INPUT :    M                     ORDER OF QUADRATURE RULE           
                                                                        
C   OUTPUT :  GMU(I)  I = 1 TO M,    ARRAY OF ABSCISSAE                 
C             GWT(I)  I = 1 TO M,    ARRAY OF WEIGHTS                   
                                                                        
C   REFERENCE:  DAVIS, P.J. AND P. RABINOWITZ, METHODS OF NUMERICAL     
C                   INTEGRATION, ACADEMIC PRESS, NEW YORK, PP. 87, 1975.
                                                                        
C   METHOD:  COMPUTE THE ABSCISSAE AS ROOTS OF THE LEGENDRE             
C            POLYNOMIAL P-SUB-M USING A CUBICALLY CONVERGENT            
C            REFINEMENT OF NEWTON'S METHOD.  COMPUTE THE                
C            WEIGHTS FROM EQ. 2.7.3.8 OF DAVIS/RABINOWITZ.  NOTE        
C            THAT NEWTON'S METHOD CAN VERY EASILY DIVERGE; ONLY A       
C            VERY GOOD INITIAL GUESS CAN GUARANTEE CONVERGENCE.         
C            THE INITIAL GUESS USED HERE HAS NEVER LED TO DIVERGENCE    
C            EVEN FOR M UP TO 1000.                                     
                                                                        
C   ACCURACY:  AT LEAST 13 SIGNIFICANT DIGITS                           
                                                                        
C   INTERNAL VARIABLES:                                                 
                                                                        
C    ITER      : NUMBER OF NEWTON METHOD ITERATIONS                     
C    MAXIT     : MAXIMUM ALLOWED ITERATIONS OF NEWTON METHOD            
C    PM2,PM1,P : 3 SUCCESSIVE LEGENDRE POLYNOMIALS                      
C    PPR       : DERIVATIVE OF LEGENDRE POLYNOMIAL                      
C    P2PRI     : 2ND DERIVATIVE OF LEGENDRE POLYNOMIAL                  
C    TOL       : CONVERGENCE CRITERION FOR LEGENDRE POLY ROOT ITERATION 
C    X,XI      : SUCCESSIVE ITERATES IN CUBICALLY-CONVERGENT VERSION    
C                OF NEWTONS METHOD (SEEKING ROOTS OF LEGENDRE POLY.)    
C+---------------------------------------------------------------------+
      REAL*8     CONA, GMU(*), GWT(*), PI, T                            
      INTEGER  ITER, LIM, M, MAXIT, NP1                                 
      DOUBLE   PRECISION  D1MACH                                        
      DOUBLE   PRECISION  EN, NNP1, ONE, P, PM1, PM2, PPR, P2PRI, PROD, 
     $                    TMP, TOL, TWO, X, XI                          
      SAVE     PI, TOL                                                  
      DATA     PI / 0.0 /,  MAXIT / 1000 /,  ONE / 1.D0 /,  TWO / 2.D0 /
                                                                        
                                                                        
      IF ( PI.EQ.0.0 )  THEN                                            
         PI = 2. * DASIN(1.0D0)                                         
         TOL = 10. * D1MACH(3)                                          
      END IF                                                            
                                                                        
      IF ( M.LT.1 )  CALL ERRMSG( 'QGAUSN--Bad value of M', .TRUE. )    
      IF ( M.EQ.1 )  THEN                                               
         GMU( 1 ) = 0.5                                                 
         GWT( 1 ) = 1.0                                                 
         RETURN                                                         
      END IF                                                            
                                                                        
      EN   = M                                                          
      NP1  = M + 1                                                      
      NNP1 = M * NP1                                                    
      CONA = DBLE( M-1 ) / ( 8 * M**3 )                                 
                                                                        
      LIM  = M / 2                                                      
      DO 30  K = 1, LIM                                                 
C                                        ** INITIAL GUESS FOR K-TH ROOT 
C                                        ** OF LEGENDRE POLYNOMIAL, FROM
C                                        ** DAVIS/RABINOWITZ (2.7.3.3A) 
         T = ( 4*K - 1 ) * PI / ( 4*M + 2 )                             
         X = DCOS ( T + CONA / DTAN( T ) )                              
         ITER = 0                                                       
C                                        ** UPWARD RECURRENCE FOR       
C                                        ** LEGENDRE POLYNOMIALS        
   10    ITER = ITER + 1                                                
         PM2 = ONE                                                      
         PM1 = X                                                        
         DO 20 NN = 2, M                                                
            P   = ( ( 2*NN - 1 ) * X * PM1 - ( NN-1 ) * PM2 ) / NN      
            PM2 = PM1                                                   
            PM1 = P                                                     
   20    CONTINUE                                                       
C                                              ** NEWTON METHOD         
         TMP   = ONE / ( ONE - X**2 )                                   
         PPR   = EN * ( PM2 - X * P ) * TMP                             
         P2PRI = ( TWO * X * PPR - NNP1 * P ) * TMP                     
         XI    = X - ( P / PPR ) * ( ONE +                              
     $               ( P / PPR ) * P2PRI / ( TWO * PPR ) )              
                                                                        
C                                              ** CHECK FOR CONVERGENCE 
         IF ( DABS(XI-X) .GT. TOL ) THEN                                
            IF( ITER.GT.MAXIT )                                         
     $          CALL ERRMSG( 'QGAUSN--MAX ITERATION COUNT', .TRUE. )    
            X = XI                                                      
            GO TO 10                                                    
         END IF                                                         
C                             ** ITERATION FINISHED--CALCULATE WEIGHTS, 
C                             ** ABSCISSAE FOR (-1,1)                   
         GMU( K ) = - X                                                 
         GWT( K ) = TWO / ( TMP * ( EN * PM2 )**2 )                     
         GMU( NP1 - K ) = - GMU( K )                                    
         GWT( NP1 - K ) =   GWT( K )                                    
  30  CONTINUE                                                          
C                                    ** SET MIDDLE ABSCISSA AND WEIGHT  
C                                    ** FOR RULES OF ODD ORDER          
      IF ( MOD( M,2 ) .NE. 0 )  THEN                                    
         GMU( LIM + 1 ) = 0.0                                           
         PROD = ONE                                                     
         DO 40 K = 3, M, 2                                              
            PROD = PROD * K / ( K-1 )                                   
  40     CONTINUE                                                       
         GWT( LIM + 1 ) = TWO / PROD**2                                 
      END IF                                                            
C                                        ** CONVERT FROM (-1,1) TO (0,1)
      DO 50  K = 1, M                                                   
         GMU( K ) = 0.5 * GMU( K ) + 0.5                                
         GWT( K ) = 0.5 * GWT( K )                                      
  50  CONTINUE                                                          
                                                                        
      RETURN                                                            
      END                                                               
      SUBROUTINE RAIN(V,EXT,ABT,SCT,ASYMR)                              
      INTEGER PHASE,DIST                                                
      INCLUDE 'PARAM.LST'                                               
      INTEGER KPOINT                                                    
      REAL WAVLEN,EXTC,ABSC,ASYM,AWCCON,TX,W,RELHUM,PATM,TBBY,WPATH     
      COMMON/BASE/WAVLEN(MXWVLN),EXTC(NAER,MXWVLN),ABSC(NAER,MXWVLN),   
     1  ASYM(NAER,MXWVLN),AWCCON(NAER),KPOINT(NSPC),TX(KMAX),W(KMAX),   
     2  RELHUM(LAYDIM),PATM(LAYTHR),TBBY(LAYTHR),WPATH(LAYTHR,KMAX)     
C                                                                       
C       PI       THE CONSTANT PI                                        
C       DEG      NUMBER OF DEGREES IN ONE RADIAN.                       
C       BIGNUM   MAXIMUM SINGLE PRECISION NUMBER.                       
C       BIGEXP   MAXIMUM EXPONENTIAL ARGUMENT WITHOUT OVERFLOW.         
      REAL PI,DEG,BIGNUM,BIGEXP                                         
      COMMON/CNSTNS/PI,DEG,BIGNUM,BIGEXP                                
      COMMON/CARD2/IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,VIS,WSS,WHH,     
     1  RAINRT                                                          
      TMPRN=W(61)/W(3)                                                  
      VTEMP=1.438786*V                                                  
      IF(VTEMP.GE.TMPRN*BIGEXP)THEN                                     
          RFD=V                                                         
      ELSE                                                              
          STORE=EXP(-VTEMP/TMPRN)                                       
          RFD=V*(1.-STORE)/(1.+STORE)                                   
      ENDIF                                                             
      RAINAV=(W(3)/W(62))**(1./.63)                                     
      IF(V.LT.250.)THEN                                                 
          PHASE=1                                                       
          IF(ICLD.GT.11)PHASE=2                                         
          DIST=1                                                        
C                                                                       
C         CALL SCATTERING ROUTINE TO OBTAIN ASYMMETRY                   
C         FACTOR AND RATIO OF ABSORPTION TO EXTINCTION DUE              
C         TO RAIN WITHIN RANGE OF 19 TO 231 GHZ.                        
C         EXTRAPOLATE ABOVE AND BELOW THAT FREQ RANGE                   
          CALL RNSCAT(V,RAINAV,TMPRN,PHASE,DIST,CSSA,ASYMR)             
      ELSE                                                              
          CSSA=.5                                                       
          ASYMR=.85                                                     
      ENDIF                                                             
      RNEXPH=TNRAIN(RAINAV,V,TMPRN,RFD)*W(62)                           
      EXT=RNEXPH                                                        
      ABT=RNEXPH*CSSA                                                   
      SCT=RNEXPH*(1.-CSSA)                                              
      RETURN                                                            
      END                                                               
      FUNCTION RANDOM(I)                                                
      DOUBLE PRECISION DRND,Z                                           
      DATA DRND/0.574914365D0/                                          
      DRND=97301.D0*DRND                                                
      K=DRND                                                            
      Z=K                                                               
      DRND=DRND-Z                                                       
      RANDOM=DRND                                                       
      RETURN                                                            
      END                                                               
      FUNCTION   RANFUN(IDUM)                                           
      RANFUN=RANDOM(IDUM)                                               
      RETURN                                                            
      END                                                               
      SUBROUTINE RANSET(I)                                              
      COMMON/RST/II                                                     
CSSI  RANET=RAN(I)                                                      
      RANET=RANDOM(I)                                                   
      II=RANET                                                          
      RETURN                                                            
      END                                                               
CC    FUNCTION   RAYSCT(V)                                              
C     RADIATION FLD OUT                                                 
C **  MOLECULAR SCATTERING                                              
CC    RAYSCT=0.                                                         
CC    IF(V.LE.3000.) RETURN                                             
CC    RAYSCT=V**3/(9.26799E+18-1.07123E+09*V**2)                        
C     V**4 FOR RADIATION FLD IN                                         
CC    RETURN                                                            
CC    END                                                               
      REAL*8 FUNCTION  RATIO( A, B )                                    
C             INSERT FOR DOUBLE PRECISION MODIFICATION - NORTH          
                IMPLICIT DOUBLE PRECISION ( A-H, O-Z)                   
C        CALCULATE RATIO  A/B  WITH OVER- AND UNDER-FLOW PROTECTION     
                                                                        
         IF ( DABS(A).LT.1.0E-8 .AND. DABS(B).LT.1.0E-8 )  THEN         
            RATIO = 1.0                                                 
         ELSE IF ( B.EQ.0.0 )  THEN                                     
            RATIO = 1.E+20                                              
         ELSE                                                           
            RATIO = A / B                                               
         END IF                                                         
                                                                        
      RETURN                                                            
      END                                                               
Calley      SUBROUTINE RDEXA                                            
      SUBROUTINE RDEXA(IREGX,AWCCONX,TITLE2DX,VXX,EXTCX,ABSCX,ASYMX)    
C                                                                       
C     READ IN USER DEFINED EXTINCTION ABSORPTION COEFFICIENTS AND       
C     ASYMMETRY PARAMETERS                                              
C                                                                       
      INCLUDE 'PARAM.LST'                                               
C                                                                       
      REAL AWCCONX(4),VXX(NWAVLN),EXTCX(NAER,NWAVLN)                    
      REAL ABSCX(NAER,NWAVLN),ASYMX(NAER,NWAVLN)                        
      INTEGER IREGX(4)                                                  
      CHARACTER*4 TITLE2DX(18,4)                                        
C                                                                       
      INTEGER KPOINT                                                    
      REAL WAVLEN,EXTC,ABSC,ASYM,AWCCON,TX,W,RELHUM,PATM,TBBY,WPATH     
      COMMON/BASE/WAVLEN(MXWVLN),EXTC(NAER,MXWVLN),ABSC(NAER,MXWVLN),   
     1  ASYM(NAER,MXWVLN),AWCCON(NAER),KPOINT(NSPC),TX(KMAX),W(KMAX),   
     2  RELHUM(LAYDIM),PATM(LAYTHR),TBBY(LAYTHR),WPATH(LAYTHR,KMAX)     
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                          
      COMMON /CARD2D/ IREG(4),ALTB(4),IREGC(4)                          
      CHARACTER*4 TITLE(18)                                             
      REAL VX(NWAVLN)                                                   
C                                                                       
Calley      READ (IRD,1200) (IREG(IK),IK=1,4)                           
1200  FORMAT(4I5)                                                       
      DO IK=1,4                                                         
          IREG(IK) = IREGX(IK)                                          
      END DO                                                            
Calley      WRITE(IPR,1210) (IREG(IK),IK=1,4)                           
      IF (IPR .GT. 0) WRITE(IPR,1210) (IREG(IK),IK=1,4)                 
1210  FORMAT('0 CARD 2D *****',4I5)                                     
C                                                                       
      DO 1300 IHC = 1,4                                                 
C                                                                       
      IF(IREG(IHC) .EQ. 0) GO TO 1300                                   
Calley      READ(IRD,1220) AWCCON(IHC),TITLE                            
1220  FORMAT(E10.3,18A4)                                                
      AWCCON(IHC) = AWCCONX(IHC)                                        
      DO IK=1,18                                                        
          TITLE(IK) = TITLE2DX(IK,IHC)                                  
      END DO                                                            
Calley      WRITE(IPR,1230) AWCCON(IHC),TITLE                           
      IF (IPR .GT. 0) WRITE(IPR,1230) AWCCON(IHC),TITLE                 
1230  FORMAT('0 CARD 2D1 **** EQUIVALENT WATER = ',1PE10.3,18A4)        
Calley      WRITE(IPR,1250)                                             
      IF (IPR .GT. 0) WRITE(IPR,1250)                                   
1250  FORMAT('0 CARD 2D2 ****')                                         
C                                                                       
Calley      READ(IRD,'((3(F6.2,2F7.5,F6.4)))')                          
Calley     1  (VX(I),EXTC(IHC,I),ABSC(IHC,I),ASYM(IHC,I),I=1,NWAVLN)    
      DO I=1,NWAVLN                                                     
          VX(I) = VXX(I)                                                
          EXTC(IHC,I) = EXTCX(IHC,I)                                    
          ABSC(IHC,I) = ABSCX(IHC,I)                                    
          ASYM(IHC,I) = ASYMX(IHC,I)                                    
      END DO                                                            
Calley      WRITE(IPR,'((2X,3(F6.2,2F7.5,F6.4)))')                      
      IF (IPR .GT. 0) WRITE(IPR,'((2X,3(F6.2,2F7.5,F6.4)))')            
     1  (VX(I),EXTC(IHC,I),ABSC(IHC,I),ASYM(IHC,I),I=1,NWAVLN)          
1300  CONTINUE                                                          
      RETURN                                                            
      END                                                               
Calley      SUBROUTINE RDNSM                                            
      SUBROUTINE RDNSM(ZMDLIN,PIN,TIN,WMOLIN,XMOLIN,JCHARIN,JCHARXIN,   
     +                 AHAZEX,EQLWCZX,RRATZX,IHA1X,ICLD1X,IVUL1X,       
     +                 ISEA1X,ICHR1X)                                   
C                                                                       
      INCLUDE 'PARAM.LST'                                               
      REAL ZMDLIN(LAYDIM),PIN(LAYDIM),TIN(LAYDIM),WMOLIN(12,LAYDIM)     
      REAL XMOLIN(NSPECX,LAYDIM),AHAZEX(LAYDIM),EQLWCZX(LAYDIM)         
      REAL RRATZX(LAYDIM)                                               
      INTEGER IHA1X(LAYDIM),ICLD1X(LAYDIM),IVUL1X(LAYDIM)               
      INTEGER ISEA1X(LAYDIM),ICHR1X(LAYDIM)                             
      CHARACTER*1 JCHARIN(15,LAYDIM),JCHARXIN(LAYDIM)                   
C                                                                       
C                                                                       
C     THIS SUBROUTINE READS MODEL 7 DATA WHEN ISVA EQ 1                 
C                                                                       
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                          
      COMMON /CARD1/ MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB  
     1  ,MODTRN                                                         
      LOGICAL MODTRN                                                    
      COMMON /CARD1A/ M4,M5,M6,MDEF,IRD1,IRD2                           
      COMMON /CARD1B/ JUNIT(15),WMOL(12),WAIR1,JLOW                     
      COMMON /CARD2/ IHAZE,ISEASN,IVULCN,ICSTL,ICIR,IVSA,VIS,WSS,WHH,   
     1    RAINRT                                                        
      INTEGER IKMAX,ML,ISSGEO,IMULT                                     
      COMMON/CNTRL/IKMAX,ML,ISSGEO,IMULT                                
      COMMON /NSINP/ ZMDL(40),P(40),T(40),WMDL(40,13)                   
      CHARACTER*1 JCHAR                                                 
      DIMENSION  JCHAR(15)                                              
      IF(ML. GT. 24) THEN                                               
Calley         WRITE(IPR,900) ML                                        
         IF (IPR .GT. 0) WRITE(IPR,900) ML                              
900      FORMAT('  ML = ',I5,'  GT 24 ML RESET TO 24')                  
         ML = 24                                                        
      ENDIF                                                             
      JLOW = 1                                                          
      DO 200   K=1,ML                                                   
      DO 10 KM = 1,15                                                   
      JCHAR(KM) = ' '                                                   
      IF(KM. GT. 12) GO TO 10                                           
      WMOL(KM) = 0.                                                     
10    CONTINUE                                                          
      IRD0 = 1                                                          
      ICONV = 1                                                         
      IF((MODEL .GT. 0.) .AND. (MODEL .LT. 7)) IRD0 = 0                 
      IF((IRD0  .EQ. 1)  .AND. (IVSA.EQ.1)   ) THEN                     
           IRD0 = 0                                                     
           ICONV =0                                                     
      ENDIF                                                             
C                                                                       
C        PARAMETERS - JCHAR = INPUT KEY (SEE BELOW)                     
C                                                                       
C                                                                       
C     ***  ROUTINE ALSO ACCEPTS VARIABLE UNITS ON PRESS AND TEMP        
C                                                                       
C          SEE INPUT KEY BELOW                                          
C                                                                       
C                                                                       
C                                                                       
C     FOR MOLECULAR SPECIES ONLY                                        
C                                                                       
C       JCHAR   JUNIT                                                   
C                                                                       
C     " ",A      10    VOLUME MIXING RATIO (PPMV)                       
C         B      11    NUMBER DENSITY (CM-3)                            
C         C      12    MASS MIXING RATIO (GM(K)/KG(AIR))                
C         D      13    MASS DENSITY (GM M-3)                            
C         E      14    PARTIAL PRESSURE (MB)                            
C         F      15    DEW POINT TEMP (TD IN T(K)) - H2O ONLY           
C         G      16     "    "     "  (TD IN T(C)) - H2O ONLY           
C         H      17    RELATIVE HUMIDITY (RH IN PERCENT) - H2O ONLY     
C         I      18    AVAILABLE FOR USER DEFINITION                    
C        1-6    1-6    DEFAULT TO SPECIFIED MODEL ATMOSPHERE            
C                                                                       
C     ****************************************************************  
C     ****************************************************************  
C                                                                       
C     ***** OTHER 'JCHAR' SPECIFICATIONS -                              
C                                                                       
C       JCHAR   JUNIT                                                   
C                                                                       
C      " ",A     10    PRESSURE IN (MB)                                 
C          B     11       "     "  (ATM)                                
C          C     12       "     "  (TORR)                               
C         1-6   1-6    DEFAULT TO SPECIFIED MODEL ATMOSPHERE            
C                                                                       
C      " ",A     10    AMBIENT TEMPERATURE IN DEG(K)                    
C          B     11       "         "       "  " (C)                    
C          C     12       "         "       "  " (F)                    
C         1-6   1-6    DEFAULT TO SPECIFIED MODEL ATMOSPHERE            
C                                                                       
C     ***** DEFINITION OF "DEFAULT" CHOICES FOR PROFILE SELECTION ***** 
C                                                                       
C      FOR THE USER WHO WISHES TO ENTER ONLY SELECTED ORIGINAL          
C      VERTICAL PROFILES AND WANTS STANDARD ATMOSPHERE SPECIFICATIONS   
C      FOR THE OTHERS, THE FOLLOWING OPTION IS AVAILABLE                
C                                                                       
C     *** JCHAR(P,T OR K) MUST = 1-6 (AS ABOVE)                         
C                                                                       
C      FOR MOLECULES 8-35, ONLY US STD PROFILES ARE AVIALABLE           
C      THEREFORE, WHEN  'JCHAR(K) = 1-5', JCHAR(K) WILL BE RESET TO 6   
C                                                                       
C                                                                       
Calley      READ(IRD,80)ZMDL(K),P(K),T(K),WMOL(1),WMOL(2),WMOL(3),      
Calley     X (JCHAR(KM),KM=1,15)                                        
           ZMDL(K) = ZMDLIN(K)                                          
           P(K) = PIN(K)                                                
           T(K) = TIN(K)                                                
           WMOL(1) = WMOLIN(1,K)                                        
           WMOL(2) = WMOLIN(2,K)                                        
           WMOL(3) = WMOLIN(3,K)                                        
           DO KM=1,15                                                   
               JCHAR(KM) =JCHARIN(KM,K)                                 
           END DO                                                       
80    FORMAT ( F10.3,5E10.3,15A1)                                       
Calley       WRITE(IPR,81)ZMDL(K),P(K),T(K),WMOL(1),WMOL(2),WMOL(3),    
Calley     X (JCHAR(KM),KM=1,15)                                        
       IF (IPR .GT. 0) WRITE(IPR,81)ZMDL(K),P(K),T(K),WMOL(1),WMOL(2),  
     +                              WMOL(3),(JCHAR(KM),KM=1,15)         
81    FORMAT ( F10.3,1P5E10.3,10X,15A1)                                 
      IF(ZMDL(K) .LE. 2.0)JLOW = K                                      
      IF(IRD1 .EQ. 1) THEN                                              
Calley           READ(IRD,83)(WMOL(KM),KM=4,12)                         
         DO KM=4,12                                                     
             WMOL(KM) = WMOLIN(KM,K)                                    
         END DO                                                         
83         FORMAT(8E10.3)                                               
Calley           WRITE(IPR,84)(WMOL(KM),KM=4,12)                        
           IF (IPR .GT. 0) WRITE(IPR,84)(WMOL(KM),KM=4,12)              
84         FORMAT(1P8E10.3)                                             
      ENDIF                                                             
C                                                                       
C                                                                       
C     AHAZE =  AEROSOL VISIBLE EXTINCTION COFF (KM-1)                   
C     AT A WAVELENGTH OF 0.55 MICROMETERS                               
C                                                                       
C     EQLWCZ=LIQUID WATER CONTENT (PPMV) AT ALT Z                       
C            FOR AEROSOL, CLOUD OR FOG MODELS                           
C                                                                       
C     RRATZ=RAIN RATE (MM/HR) AT ALT Z                                  
C                                                                       
C     IHA1 AEROSOL MODEL USED FOR SPECTRAL DEPENDENCE OF EXTINCTION     
C                                                                       
C     IVUL1 STRATOSPHERIC AEROSOL MODEL USED FOR SPECTRAL DEPENDENCE    
C     OF EXT AT Z                                                       
C                                                                       
C     ICLD1 CLOUD MODEL USED FOR SPECTRAL DEPENDENCE OF EXT AT Z        
C                                                                       
C     ONLY ONE OF IHA1,ICLD1  OR IVUL1 IS ALLOWED                       
C     IHA1 NE 0 OTHERS IGNORED                                          
C     IHA1 EQ 0 AND ICLD1 NE 0 USE ICLD1                                
C                                                                       
C     IF AHAZE AND EQLWCZ ARE BOUTH ZERO                                
C        DEFAULT PROFILE ARE LOADED FROM IHA1,ICLD1,IVUL1               
C     ISEA1 = AEROSOL SEASON CONTROL FOR ALTITUDE Z                     
C                                                                       
      IF(IRD2 .EQ. 1) THEN                                              
Calley           READ(IRD,82) AHAZE,EQLWCZ,RRATZ,IHA1,ICLD1,IVUL1,ISEA1 
           AHAZE = AHAZEX(K)                                            
           EQLWCZ = EQLWCZX(K)                                          
           RRATZ = RRATZX(K)                                            
           IHA1 = IHA1X(K)                                              
           ICLD1 = ICLD1X(K)                                            
           IVUL1 = IVUL1X(K)                                            
           ISEA1 = ISEA1X(K)                                            
Calley          WRITE(IPR,82) AHAZE,EQLWCZ,RRATZ,IHA1,ICLD1,IVUL1,ISEA1 
           IF (IPR .GT. 0) WRITE(IPR,82) AHAZE,EQLWCZ,RRATZ,IHA1,ICLD1, 
     +                                   IVUL1,ISEA1                    
82         FORMAT(10X,3F10.3,4I5)                                       
      ENDIF                                                             
      DO 12 KM = 1,15                                                   
12    JUNIT(KM) = JOU(JCHAR(KM))                                        
      IF(M1 .NE. 0) JUNIT(1) = M1                                       
      IF(M1 .NE. 0) JUNIT(2) = M1                                       
      CALL CHECK(P(K),JUNIT(1),1)                                       
      CALL CHECK(T(K),JUNIT(2),2)                                       
      CALL DEFALT(ZMDL(K),P(K),T(K))                                    
      CALL CONVRT (P(K),T(K) )                                          
      DO 20 KM = 1,12                                                   
20    WMDL(K,KM) = WMOL(KM)                                             
      WMDL(K,13) = WAIR1                                                
200   CONTINUE                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE RDSUN(FWHM,SUNFIL)                                     
C                                                                       
C     THIS ROUTINE READS IN THE "SUNFIL" SOLAR IRRADIANCE FILE AND      
C     PASSES A TRIANGULAR SLIT OVER IT WITH FWHM EQUAL TO |FWHM|.       
C     THE RESULTING DATA IS STORED IN ARRAY SUN OF /SOLAR1/.            
C                                                                       
C     DECLARE ARGUMENTS                                                 
C       FWHM     FULL-WIDTH-AT-HALF-MAXIMUM USED IN TRIANGULAR SLIT     
C                FUNCTION [IF NEGATIVE, ABS(FWHM) IS USED IN THE        
C                SLIT FUNCTION AND THE DATA IS OUTPUT TO A FILE].       
C       SUNFIL   INPUT DATA FILE NAME.                                  
      INTEGER FWHM                                                      
      CHARACTER*(*) SUNFIL                                              
C                                                                       
C     DECLARE PARAMETERS.                                               
      INTEGER MAXSUN                                                    
      PARAMETER(MAXSUN=50000)                                           
C                                                                       
C     LIST COMMON BLOCKS.                                               
C                                                                       
C     FILE UNIT NUMBERS                                                 
C       IRD      MODTRAN INPUT FILE, tape5, UNIT NUMBER (1).            
C       IPR      MODTRAN STANDARD OUTPUT FILE, tape6, UNIT NUMBER (2).  
C       IPU      MODTRAN SPECTRAL DATA FILE, tape7, UNIT NUMBER (7).    
C       NPR      PRINTOUT LEVEL SWITCH (1=small,0=normal,-1=large).     
C       IPR1     MODTRAN FLUX OUTPUT FILE, tape8, UNIT NUMBER (8).      
C       ISCRCH   MULTIPLE SCATTERING SCRATCH FILE UNIT NUMBER (10).     
C       ITB      MOLECULAR BAND MODEL PARAMETER FILE UNIT NUMBER (9).   
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                           
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                       
      REAL SUN                                                          
      COMMON/SOLAR1/SUN(0:MAXSUN)                                       
C                                                                       
C     DECLARE FUNCTIONS.                                                
      INTEGER NUNIT                                                     
C                                                                       
C     DECLARE LOCAL VARIABLES.                                          
      INTEGER NSUN,IVLO,IVHI,IV,IRES,IRES2,IRESM1,IVOFF,I,J,IVOLD,LINE  
      LOGICAL LEXIST,LOPEN                                              
      CHARACTER*11 SUNDAT                                               
      REAL SUNIV,SUM                                                    
C                                                                       
C     DECLARE DATA.                                                     
C       A        COEFFICIENT FOR LOW FREQUENCY POWER LAW APPROXIMATION. 
C       B        EXPONENT FOR LOW FREQUENCY POWER LAW APPROXIMATION.    
C       LBLKDT   LOGICAL FLAG, TRUE TO CREATE sunbd.f FILE.             
      REAL A,B                                                          
      LOGICAL LBLKDT                                                    
      DATA A,B/3.50187E-13,1.93281/,LBLKDT/.FALSE./                     
C                                                                       
C     OPEN INPUT DATA FILE.                                             
      INQUIRE(FILE=SUNFIL,EXIST=LEXIST,OPENED=LOPEN,NUMBER=NSUN)        
      IF(.NOT.LEXIST)THEN                                               
Calley          WRITE(IPR,'(/3A)')                                      
          IF (IPR .GT. 0) WRITE(IPR,'(/3A)')                            
     1      ' ERROR in RDSUN:  File ',SUNFIL,' was not found.'          
          STOP ' ERROR in RDSUN:  Solar irradiance file was not found.' 
      ENDIF                                                             
      IF(LOPEN)THEN                                                     
          REWIND(NSUN)                                                  
      ELSE                                                              
          NSUN=NUNIT()                                                  
          OPEN(NSUN,FILE=SUNFIL,STATUS='OLD')                           
      ENDIF                                                             
C                                                                       
C     READ FIRST LINE OF SOLAR DATA                                     
C       IVLO     INITIAL FREQUENCY [CM-1]                               
C       SUN      SOLAR IRRADIANCE AT IVLO [W CM-2 / CM-1]               
      READ(NSUN,'(//I7,F13.3)',ERR=100)IVLO,SUNIV                       
      IF(IVLO.LT.1 .OR. IVLO.GT.MAXSUN)GOTO100                          
      IVHI=IVLO                                                         
      SUN(IVHI)=SUNIV                                                   
C                                                                       
C     READ REMAINING SOLAR DATA (1 CM-1 INCREMENTS).                    
   10 CONTINUE                                                          
      READ(NSUN,'(I7,F13.3)',END=20,ERR=100)IV,SUNIV                    
      IF(IV.NE.IVHI+1)GOTO100                                           
      IVHI=IV                                                           
      SUN(IVHI)=SUNIV                                                   
      IF(IVHI.LT.MAXSUN)GOTO10                                          
   20 CONTINUE                                                          
      CLOSE(NSUN)                                                       
C                                                                       
C     PASS TRIANGULAR SLIT FUNCTION OVER DATA.                          
      IRES=ABS(FWHM)                                                    
      IF(IRES.GT.1)THEN                                                 
          IRES2=IRES*IRES                                               
          IRESM1=IRES-1                                                 
          DO 40 IV=IVLO+IRESM1,IVHI-IRESM1                              
              SUM=IRES*SUN(IV)                                          
              DO 30 IVOFF=1,IRESM1                                      
                  SUM=SUM+(IRES-IVOFF)*(SUN(IV+IVOFF)+SUN(IV-IVOFF))    
   30         CONTINUE                                                  
C                                                                       
C             STORE DATA OFFSET BY IRESM1 CM-1 TO                       
C             AVOID OVERWRITING REQUIRED DATA.                          
              SUN(IV-IRESM1)=SUM/IRES2                                  
   40     CONTINUE                                                      
      ELSE                                                              
          IRESM1=0                                                      
      ENDIF                                                             
C                                                                       
C     MOVE DATA TO PROPER LOCATION (FREQUENCY).                         
      DO 50 IV=IVHI-IRESM1,IVLO+IRESM1,-1                               
          SUN(IV)=SUN(IV-IRESM1)                                        
   50 CONTINUE                                                          
C                                                                       
C     DEFINE LOW FREQUENCY DATA [W CM-2 / CM-1] USING                   
C     POWER LAW APPROXIMATION.                                          
      SUN(0)=0.                                                         
      DO 60 IV=1,IVLO+IRESM1-1                                          
          SUN(IV)=A*FLOAT(IV)**B                                        
   60 CONTINUE                                                          
C                                                                       
C     INSERT A CONSTANT VALUE AT HIGH FREQUENCIES.                      
      DO 70 IV=IVHI-IRESM1+1,MAXSUN                                     
          SUN(IV)=SUN(IVHI-IRESM1)                                      
   70 CONTINUE                                                          
C                                                                       
C     THE FOLLOWING CODING WAS USED TO CREATE THE BLOCK DATA SUNBD.     
C     THE LOGICAL FLAG LBLKDT IS HARD-WIRED TO FALSE, BUT THE CODING IS 
C     LEFT HERE TO AIDE IN INCORPORATION OF NEW SOLAR IRRADIANCE DATA.  
      IF(LBLKDT)THEN                                                    
C                                                                       
C         OPEN sunbd.f FILE.                                            
          OPEN(NSUN,FILE='sunbd.f',STATUS='unknown')                    
          CLOSE(NSUN,STATUS='delete')                                   
          OPEN(NSUN,FILE='sunbd.f',STATUS='new')                        
C                                                                       
C         WRITE HEADER.                                                 
          WRITE(NSUN,'((A))')                                           
     1      '      BLOCK DATA SUNBD',                                   
     2      'C',                                                        
     3      'C     SOLAR IRRADIANCES [W CM-2 / CM-1] TABULATED EACH',   
     4      'C     WAVENUMBER FROM 0 TO 50,000 CM-1 AT 5 CM-1 SPECTRAL',
     5      'C     RESOLUTION (FWHM TRIANGULAR SLIT).  THIS DATA IS',   
     6      'C     DERIVED FROM THE 1 CM-1 TABULATION (FILE SUN2) OF',  
     7      'C     KURUCZ HIGH SPECTRAL RESOLUTION CALCULATIONS.',      
     8      '      INTEGER MAXSUN',                                     
     9      '      PARAMETER(MAXSUN=50000)',                            
     &      '      REAL SUN',                                           
     1      '      COMMON/SOLAR1/SUN(0:MAXSUN)',                        
     2      '      INTEGER I'                                           
C                                                                       
C         WRITE 0 TO 100 CM-1 DATA.                                     
          WRITE(NSUN,'(A,2(/A),25X,1PE10.3,A)')                         
     1      'C','C         0 TO   100 CM-1 DATA.',                      
     2      '      DATA (SUN(I),I=     0,   100)/',SUN(0),','           
          WRITE(NSUN,'((9(I6,6(1PE10.3,A),/),A,6(1PE10.3,A)))')         
     1      (J,      (SUN(I),',',I=6*J-5,6*J),J=1,9),                   
     2      '     &',(SUN(I),',',I=55   ,60 ),                          
     3      (J-10,   (SUN(I),',',I=6*J-5,6*J),J=11,16),                 
     4       J-10,   (SUN(I),',',I=97,99),SUN(100),'/'                  
C                                                                       
C         WRITE 101 TO 100*INT(MAXSUM/100) CM-1 DATA.                   
          IVOLD=100                                                     
          DO 80 IV=200,MAXSUN,100                                       
              WRITE(NSUN,'(A,2(/A,2(I6,A)))')                           
     1          'C','C    ',IVOLD+1,' TO',IV,' CM-1 DATA.',             
     2          '      DATA (SUN(I),I=',IVOLD+1,',',IV,')/'             
              WRITE(NSUN,'((9(I6,6(1PE10.3,A),/),A,6(1PE10.3,A)))')     
     1          (J      ,(SUN(IVOLD+I),',',I=6*J-5,6*J),J=1,9),         
     2          '     &',(SUN(IVOLD+I),',',I=55,60),                    
     3          (J-10   ,(SUN(IVOLD+I),',',I=6*J-5,6*J),J=11,16),       
     4           J-10   ,(SUN(IVOLD+I),',',I=97,99),SUN(IV),'/'         
              IVOLD=IV                                                  
   80     CONTINUE                                                      
C                                                                       
C         WRITE REMAINING CM-1 DATA.                                    
          IF(IVOLD.LT.MAXSUN)THEN                                       
              WRITE(NSUN,'(A,2(/A,2(I6,A)))')                           
     1          'C','C    ',IVOLD+1,' TO',MAXSUN,' CM-1 DATA.',         
     2          '      DATA (SUN(I),I=',IVOLD+1,',',MAXSUN,')/'         
              LINE=1                                                    
   90         CONTINUE                                                  
              IF(IVOLD+6.LT.MAXSUN)THEN                                 
                  IF(LINE.LT.10)THEN                                    
                      WRITE(NSUN,'(I6,6(1PE10.3,A))')LINE,              
     1                  (SUN(IVOLD+I),',',I=1,6)                        
                      LINE=LINE+1                                       
                  ELSE                                                  
                      WRITE(NSUN,'(A,6(1PE10.3,A))')'     &',           
     1                  (SUN(IVOLD+I),',',I=1,6)                        
                      LINE=1                                            
                  ENDIF                                                 
                  IVOLD=IVOLD+6                                         
                  GOTO90                                                
              ENDIF                                                     
              IF(LINE.LT.10)THEN                                        
                  WRITE(NSUN,'(I6,6(1PE10.3,A))')LINE,                  
     1              (SUN(I),',',I=IVOLD+1,MAXSUN-1),SUN(MAXSUN),'/'     
              ELSE                                                      
                  WRITE(NSUN,'(A,6(1PE10.3,A))')'     &',               
     1              (SUN(I),',',I=IVOLD+1,MAXSUN-1),SUN(MAXSUN),'/'     
              ENDIF                                                     
          ENDIF                                                         
          WRITE(NSUN,'(A)')'      END'                                  
          CLOSE(NSUN)                                                   
      ENDIF                                                             
C                                                                       
C     RETURN UNLESS FWHM IS NEGATIVE                                    
      IF(FWHM.GE.0)RETURN                                               
C                                                                       
C     OPEN OUTPUT DATA FILE.                                            
      SUNDAT='sun0000.dat'                                              
      IF(IRES.LT.10)THEN                                                
          WRITE(SUNDAT(7:7),'(I1)')IRES                                 
      ELSEIF(IRES.LT.100)THEN                                           
          WRITE(SUNDAT(6:7),'(I2)')IRES                                 
      ELSEIF(IRES.LT.1000)THEN                                          
          WRITE(SUNDAT(5:7),'(I3)')IRES                                 
      ELSE                                                              
          WRITE(SUNDAT(4:7),'(I4)')IRES                                 
      ENDIF                                                             
      OPEN(NSUN,FILE=SUNDAT,STATUS='UNKNOWN')                           
      CLOSE(NSUN,STATUS='DELETE')                                       
      OPEN(NSUN,FILE=SUNDAT,STATUS='NEW')                               
C                                                                       
C     WRITE DATA TO SUNDAT IN ORIGINAL UNITS [W CM-2 / CM-1].           
      WRITE(NSUN,'(A,/A,/(I7,1PE13.3))')                                
     1  '  FREQ   SOLAR IRRADIANCE',                                    
     2  ' (CM-1)  (W CM-2 / CM-1)',(IV,SUN(IV),IV=1,MAXSUN)             
C                                                                       
C     RETURN TO DRIVER.                                                 
      RETURN                                                            
C                                                                       
C     WRITE OUT ERROR MESSAGE AND STOP.                                 
  100 CONTINUE                                                          
Calley      WRITE(IPR,'(/3A)')                                          
      IF (IPR .GT. 0) WRITE(IPR,'(/3A)')                                
     1  ' ERROR in RDSUN:  Problem reading/using file ',SUNFIL,' data.' 
      STOP                                                              
     1  'ERROR in RDSUN:  Problem reading/using solar irradiance data.' 
      END                                                               
      SUBROUTINE REDUCE(H1,H2,ANGLE,PHI)                                
C                                                                       
C     ZMAX IS THE HIGHEST LEVEL IN THE ATMOSPHERIC PROFILE STORED IN    
C     COMMON /MODEL/.  IF H1 AND/OR H2 ARE GREATER THAN ZMAX, THIS      
C     SUBROUTINE REDUCES THEM TO ZMAX AND RESETS ANGLE AND/OR PHI       
C     AS NECESSARY.  THIS REDUCTION IS NECESSARY, FOR EXAMPLE, FOR      
C     SATELLITE ALTITUDES, BECAUSE (1) THE DENSITY PROFILES ARE POORLY  
C     DEFINED ABOVE ZMAX AND (2) THE CALCULATION TIME FOR PATHS ABOVE   
C     ZMAX CAN BE EXCESSIVE (E.G. FOR GEOSYNCHRONOUS ALTITUDES).        
C                                                                       
C     DECLARE INPUTS                                                    
      DOUBLE PRECISION H1,H2,ANGLE,PHI                                  
C                                                                       
C     LIST COMMONS                                                      
C                                                                       
C     FILE UNIT NUMBERS                                                 
C       IRD      MODTRAN INPUT FILE, tape5, UNIT NUMBER (1).            
C       IPR      MODTRAN STANDARD OUTPUT FILE, tape6, UNIT NUMBER (2).  
C       IPU      MODTRAN SPECTRAL DATA FILE, tape7, UNIT NUMBER (7).    
C       NPR      PRINTOUT LEVEL SWITCH (1=small,0=normal,-1=large).     
C       IPR1     MODTRAN FLUX OUTPUT FILE, tape8, UNIT NUMBER (8).      
C       ISCRCH   MULTIPLE SCATTERING SCRATCH FILE UNIT NUMBER (10).     
C       ITB      MOLECULAR BAND MODEL PARAMETER FILE UNIT NUMBER (9).   
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                           
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                       
      REAL RE,ZMAX                                                      
      INTEGER IPATH                                                     
      COMMON/PARMTR/RE,ZMAX,IPATH                                       
C                                                                       
C     DECLARE FUNCTIONS                                                 
      DOUBLE PRECISION DPANDX                                           
C                                                                       
C     DECLARE LOCAL VARIABLES                                           
      DOUBLE PRECISION CPATH,CZMAX,ANGMAX,SH,GAMMA,DPZMAX,DPRE          
C                                                                       
C     LIST DATA:                                                        
      DOUBLE PRECISION DPDEG                                            
      DATA DPDEG/57.2957795131D0/                                       
      DPRE=DBLE(RE)                                                     
      DPZMAX=DBLE(ZMAX)                                                 
      IF(H1.LE.DPZMAX .AND. H2.LE.DPZMAX)RETURN                         
      CALL DPFISH(H1,SH,GAMMA)                                          
      CPATH=DPANDX(H1,SH,GAMMA)*(DPRE+H1)*SIN(ANGLE/DPDEG)              
      CALL DPFISH(DPZMAX,SH,GAMMA)                                      
      CZMAX=DPANDX(DPZMAX,SH,GAMMA)*(DPRE+DPZMAX)                       
      ANGMAX=DBLE(180.)-ASIN(CPATH/CZMAX)*DPDEG                         
      IF(H1.GT.DPZMAX)THEN                                              
          H1=DPZMAX                                                     
          ANGLE=ANGMAX                                                  
      ENDIF                                                             
      IF(H2.GT.DPZMAX)THEN                                              
          H2=DPZMAX                                                     
          PHI=ANGMAX                                                    
      ENDIF                                                             
Calley      IF(NPR.LE.1)WRITE(IPR,'(//A,/(4X,2A,F10.3,A))')             
      IF(NPR.LE.1 .AND. IPR.GT.0) WRITE(IPR,'(//A,/(4X,2A,F10.3,A))')   
     1  ' FROM SUBROUTINE REDUCE: ','ONE OR BOTH OF H1 AND H2 ARE',     
     2  ' ABOVE THE TOP OF THE ATMOSPHERIC PROFILE ZMAX = ',ZMAX,       
     3  ' KM AND HAVE BEEN RESET TO ZMAX','ANGLE AND/OR PHI HAVE ALSO', 
     4  ' BEEN RESET TO THE ZENITH ANGLE AT ZMAX = ',ANGMAX,' DEG'      
      RETURN                                                            
      END                                                               
      SUBROUTINE RNSCAT(V,R,TT,PHASE,DIST,CSSA,ASYMR)                   
CC    SUBROUTINE RNSCAT(V,R,TT,PHASE,DIST,IK,CSSA,ASYMR,IENT)           
C********************************************************************** 
      INTEGER PHASE,DIST                                                
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                          
      DIMENSION SC(3,4)                                                 
C                                                                       
C          ARGUMENTS:                                                   
C                                                                       
C          F = FREQUENCY (GHZ)                                          
C          R = RAINFALL RATE (MM/HR)                                    
C          TCEL = TEMPERATURE (DEGREES CELSIUS)                         
C          PHASE = PHASE PARAMETER (1=WATER, 2=ICE)                     
C          DIST = DROP SIZE DISTRIBUTION PARAMETER                      
C                     (1=MARSHALL-PALMER, 2=BEST)                       
C                                                                       
C          RESULTS:                                                     
C                                                                       
C          SC(1) = ABSORPTION COEFFICIENT (1/KM)                        
C          SC(2) = EXTINCTION COEFFICIENT (1/KM)                        
C          SC(I),I=3,NSC = LEGENDRE COEFFICIENTS #I-3  (NSC=10)         
C          ERR = ERROR RETURN CODE: 0=NO ERROR, 1=BAD FREQUENCY,        
C                2=BAD RAINFALL RATE, 3=BAD TEMPERATURE,                
C                4=BAD PHASE PARAMETER, 5=BAD DROP SIZE DISTRIBUTION    
C                                                                       
C          THE INTERNAL DATA:                                           
C                                                                       
      DIMENSION FR(9),TEMP(9)                                           
C                                                                       
C          FR(I),I=1,NF = TABULATED FREQUENCIES (GHZ)  (NF=9)           
C          TEMP(I),I=1,NT = TABULATED TEMPERATURES  (NT=3)              
C                                                                       
C          THE BLOCK-DATA SECTION                                       
C                                                                       
      DATA RMIN,RMAX/0.,50./,NF/9/,NT/3/,NSC/4/,MAXI/3/                 
      DATA TK/273.15/,CMT0/1.0/,C7500/0.5/,G0/0.0/,G7500/0.85/          
      DATA (TEMP(I),I=1,3)/-10.,0.,10./                                 
      DATA (FR(I),I=1,9)/19.35,37.,50.3,89.5,100.,118.,130.,183.,231./  
C                                                                       
C      THIS SUBROUTINE REQUIRES FREQUENCIES IN GHZ                      
      NOPR = 0                                                          
CC    IF(IK .EQ. 1) NOPR = 1                                            
CC    IF(IENT .GT.1) NOPR = 0                                           
      F= V *29.97925                                                    
      FSAV=F                                                            
      RSAV=R                                                            
      INT=0                                                             
C      CONVERT TEMP TO DEGREES CELSIUS                                  
      TCEL=TT-TK                                                        
      TSAV=TCEL                                                         
C      FREQ RANGE OF DATA 19.35-231 GHZ IF LESS THAN 19.35              
C      SET UP PARAMETERS FOR INTERPOLATION                              
      IF(F.LT.FR(1)) THEN                                               
        FL=0.0                                                          
        FM=FR(1)                                                        
        INT=1                                                           
Calley        IF(NOPR .GT. 0) WRITE (IPR,801)                           
        IF(NOPR.GT.0 .AND. IPR.GT.0) WRITE (IPR,801)                    
      END IF                                                            
C      IF MORE THAN 231 GHZ SET UP PARAMETERS FOR EXTRAPOLATION         
       IF(F.GT.FR(NF)) THEN                                             
         FL=FR(NF)                                                      
         FM=7500.                                                       
         INT=2                                                          
Calley         IF(NOPR .GT. 0) WRITE (IPR,801)                          
         IF(NOPR.GT.0 .AND. IPR.GT.0) WRITE (IPR,801)                   
      END IF                                                            
C      TEMP RANGE OF DATA IS -10 TO +10 DEGREES CELCIUS                 
C      IF BELOW OR ABOVE EXTREME SET AND DO CALCULATIONS AT EXTREME     
      IF (TCEL.LT.TEMP(1)) THEN                                         
        TCEL=TEMP(1)                                                    
Calley        IF(NOPR .GT. 0) WRITE (IPR,802)                           
        IF(NOPR.GT.0 .AND. IPR.GT.0) WRITE (IPR,802)                    
      END IF                                                            
C                                                                       
      IF (TCEL.GT.TEMP(3)) THEN                                         
        TCEL=TEMP(3)                                                    
Calley        IF(NOPR .GT. 0) WRITE (IPR,802)                           
        IF(NOPR.GT.0 .AND. IPR.GT.0) WRITE (IPR,802)                    
      END IF                                                            
C                                                                       
C      RAIN RATE OF DATA IS FOR 0-50 MM/HR                              
C      IF GT 50 TREAT CALCULATIONS AS IF 50 MM/HR WAS INPUT             
      IF(R.GT.50) THEN                                                  
        R=50.                                                           
Calley        IF(NOPR .GT. 0) WRITE (IPR,803)                           
        IF(NOPR.GT.0 .AND. IPR.GT.0) WRITE (IPR,803)                    
      END IF                                                            
C                                                                       
      KI=1                                                              
C             FIGURE OUT THE SECOND INDEX                               
   10 J=PHASE+2*DIST                                                    
C                                                                       
C                                                                       
C             GET THE TEMPERATURE INTERPOLATION PARAMETER ST            
C             IF NEEDED AND AMEND THE SECOND INDEX                      
      CALL BS(J,TCEL,TEMP,NT,ST)                                        
C                                                                       
C             FIGURE OUT THE THIRD INDEX AND THE FREQUENCY INTERPOLATION
C             PARAMETER SF                                              
      CALL BS(K,F,FR,NF,SF)                                             
C                                                                       
C             INITIALIZE SC                                             
      DO 11 I=1,NSC                                                     
      SC(KI,I)=0.                                                       
   11 CONTINUE                                                          
      SC(KI,3)=1.                                                       
C                                                                       
C             NOW DO THE CALCULATIONS                                   
C                                                                       
C             THE WATER CONTENT IS                                      
      IF(DIST.EQ.1) THEN                                                
      WC=.0889*R**.84                                                   
      ELSE                                                              
      WC=.067*R**.846                                                   
      END IF                                                            
C                                                                       
C             FOR A TEMPERATURE DEPENDENT CASE, I.E.                    
      IF(J.LT.3) THEN                                                   
      S1=(1.-SF)*(1.-ST)                                                
      S2=(1.-SF)*ST                                                     
      S3=SF*(1.-ST)                                                     
      S4=SF*ST                                                          
      DO 14 I=1,MAXI                                                    
      IF(I.LE.2) THEN                                                   
      ISC=I                                                             
      ELSE                                                              
      ISC=I+1                                                           
      END IF                                                            
      SC(KI,ISC)=S1*TAB(I,J,K,WC)+S2*TAB(I,J+1,K,WC)+                   
     *             S3*TAB(I,J,K+1,WC)+S4*TAB(I,J+1,K+1,WC)              
   14 CONTINUE                                                          
C                                                                       
C             FOR A TEMPERATURE INDEPENDENT CASE                        
      ELSE                                                              
      S1=1.-SF                                                          
      S2=SF                                                             
      DO 17 I=1,MAXI                                                    
      IF(I.LE.2) THEN                                                   
      ISC=I                                                             
      ELSE                                                              
      ISC=I+1                                                           
      END IF                                                            
      SC(KI,ISC)=S1*TAB(I,J,K,WC)+S2*TAB(I,J,K+1,WC)                    
   17 CONTINUE                                                          
      END IF                                                            
      F=FSAV                                                            
      IF(INT.EQ.3) GO TO 20                                             
      IF(INT.EQ.4) GO TO 30                                             
      IF(INT.EQ.0) THEN                                                 
        CSSA=SC(KI,1)/SC(KI,2)                                          
        IF(CSSA.GT.1.0) CSSA=1.0                                        
        ASYMR=SC(KI,4)/3.0                                              
        F=FSAV                                                          
        R=RSAV                                                          
        TCEL=TSAV                                                       
      RETURN                                                            
      END IF                                                            
      IF(INT.EQ.1) THEN                                                 
        INT=3                                                           
        F=FM                                                            
        KI=2                                                            
      END IF                                                            
      IF(INT.EQ.2) THEN                                                 
        INT=4                                                           
        F=FL                                                            
        KI=3                                                            
      END IF                                                            
      GO TO 10                                                          
   20 CONTINUE                                                          
      FDIF=FM-F                                                         
      FTOT=FM-FL                                                        
      CM=SC(KI,1)/SC(KI,2)                                              
      IF(CM.GT.1.0) CM=1.0                                              
      CL=CMT0                                                           
      AM=SC(KI,4)/3.0                                                   
      AL=G0                                                             
      GO TO 40                                                          
   30 CONTINUE                                                          
      FDIF=FM-F                                                         
      FTOT=FM-FL                                                        
      CM=C7500                                                          
      CL=SC(KI,1)/SC(KI,2)                                              
      IF(CL.GT.1.0) CL=1.0                                              
      AM=G7500                                                          
      AL=SC(KI,4)/3.0                                                   
   40 CTOT=CM-CL                                                        
      CAMT=FDIF*CTOT/FTOT                                               
      CSSA=CM-CAMT                                                      
      ATOT=AM-AL                                                        
      AAMT=FDIF*ATOT/FTOT                                               
      ASYMR=AM-AAMT                                                     
      F=FSAV                                                            
      R=RSAV                                                            
      TCEL=TSAV                                                         
      RETURN                                                            
801   FORMAT(2X,'***  THE ASYMMETRY PARAMETER DUE TO RAIN IS BASED ON', 
     1 'DATA BETWEEN 19 AND 231 GHZ',                                   
     2 /2X,'***  EXTRAPOLATION IS USED FOR FREQUENCIES LOWER AND',      
     3 'HIGHER THAN THIS RANGE')                                        
802   FORMAT(2X,'***  TEMPERATURE RANGE OF DATA IS -10 TO +10 ',        
     1'DEGREES CELSIUS',/2X,'***  BEYOND THESE VALUES IT IS ',          
     2'TREATED AS IF AT THE EXTREMES')                                  
803   FORMAT(2X,'***  RAIN RATES BETWEEN 0 AND 50 MM/HR ARE',           
     1'WITHIN THIS DATA RANGE',/2X,'***  ABOVE THAT THE ASYMMETRY',     
     2' PARAMETER IS CALCULATED FOR 50 MM/HR')                          
      END                                                               
      DOUBLE PRECISION FUNCTION RTBIS(X1,X2,CPATH)                      
C                                                                       
C     THIS FUNCTION FINDS THE ROOT OF FUNC(X) = X*REFRACTIVE INDEX - CPA
C     THE ROOT IS ACTUALLY THE TANGENT HEIGHT.                          
C     IT IS SANDWICHED BETWEEN X1 AND X2.                               
C     THIS ROUTINE IS FROM "NUMERICAL RECIPES" BY PRESS ET AL.          
C                                                                       
      DOUBLE PRECISION X1, X2, CPATH                                    
      DOUBLE PRECISION F,FMID,DX,XMID,XACC,F1,F2,RATIO,DPRE             
      INTEGER J, JMAX                                                   
      REAL RE,ZMAX                                                      
      INTEGER IPATH                                                     
      COMMON/PARMTR/RE,ZMAX,IPATH                                       
      PARAMETER (JMAX=40)                                               
      DATA XACC/1.D-5/                                                  
      DPRE=DBLE(RE)                                                     
      CALL IRFXN(X2,FMID, RATIO)                                        
      FMID = FMID*(X2+DPRE)-CPATH                                       
      CALL IRFXN(X1,F, RATIO)                                           
      F = F*(X1+DPRE)-CPATH                                             
      IF(F*FMID.GT.0.)                                                  
     1  STOP 'ERROR in RTBIS:  Root must be bracketed for bisection.'   
      IF(F.LT.0.)THEN                                                   
         RTBIS=X1                                                       
         DX=X2-X1                                                       
      ELSE                                                              
         RTBIS=X2                                                       
         DX=X1-X2                                                       
      ENDIF                                                             
      DO 11 J=1,JMAX                                                    
         DX=DX/2                                                        
         XMID=RTBIS+DX                                                  
         CALL IRFXN(XMID,FMID, RATIO)                                   
         FMID = FMID*(XMID+DPRE)-CPATH                                  
         IF(FMID.LE.0.)RTBIS=XMID                                       
         IF(ABS(DX).LT.XACC .OR. FMID.EQ.0.) RETURN                     
 11   CONTINUE                                                          
C                                                                       
C     COMES HERE IF UNABLE TO SOLVE.                                    
C                                                                       
      CALL IRFXN(X2,F2, RATIO)                                          
      F2 = F2*(X2+DPRE)-CPATH                                           
      CALL IRFXN(X1,F1, RATIO)                                          
      F1 = F1*(X1+DPRE)-CPATH                                           
      IF (ABS(F2) .LT. ABS(F1)) THEN                                    
         RTBIS = X2                                                     
      ELSE                                                              
         RTBIS = X1                                                     
      ENDIF                                                             
      END                                                               
      SUBROUTINE SCHRUN(V,CPRUN)                                        
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                           
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                       
      COMMON /SHUR/ SHN(430)                                            
      DATA V1,V2,DV,INUM /49600.,51710.,5.,425/                         
      CPRUN = -20.                                                      
      IF(V .LT. V1) GO TO 20                                            
      IF(V .GT. V2) GO TO 20                                            
      IND = (V - V1)/DV + 1.0001                                        
      IF(IND . GT. INUM) THEN                                           
Calley            PRINT*,'  IND GT INUM  V IND ',V,IND                  
            IF (IPR .GT. 0) WRITE (IPR,*) '  IND GT INUM  V IND ',V,IND 
            GO TO 20                                                    
      ENDIF                                                             
      CPRUN = SHN(IND)                                                  
20    RETURN                                                            
      END                                                               
      FUNCTION   SCTANG(ANGLST,THTST,PSIST,IARB)                        
C                                                                       
C     FUNCTION SCTANG RETURNS THE SCATTERING ANGLE (THAT IS, THE        
C     ANGLE BETWEEN THE SUN'S RAYS AND THE LINE OF SIGHT) AT ANY        
C     POINT ALONG THE OPTICAL PATH.                                     
C                                                                       
C       PI       THE CONSTANT PI                                        
C       DEG      NUMBER OF DEGREES IN ONE RADIAN.                       
C       BIGNUM   MAXIMUM SINGLE PRECISION NUMBER.                       
C       BIGEXP   MAXIMUM EXPONENTIAL ARGUMENT WITHOUT OVERFLOW.         
      REAL PI,DEG,BIGNUM,BIGEXP                                         
      COMMON/CNSTNS/PI,DEG,BIGNUM,BIGEXP                                
C                                                                       
      SUNZEN=ANGLST/DEG                                                 
      PTHZEN=THTST/DEG                                                  
      IF(IARB.EQ.0) GO TO 10                                            
C     SPECIAL CASES IF PSI IS ARBITRARY                                 
      COSANG= COS(SUNZEN)*COS(PTHZEN)                                   
      IF(COSANG.GT. 1.)COSANG= 1.                                       
      IF(COSANG.LT.-1.)COSANG=-1.                                       
      SCTANG=DEG*ACOS(COSANG)                                           
      RETURN                                                            
10    CONTINUE                                                          
      PSI=PSIST/DEG                                                     
C     GENERAL CASE                                                      
      X=SIN(SUNZEN)*SIN(PTHZEN)*COS(PSI)+COS(SUNZEN)*COS(PTHZEN)        
      IF(X.GT. 1.)X= 1.-1.E-6                                           
      IF(X.LT.-1.)X=-1.+1.E-6                                           
      SCTANG=DEG*ACOS(X)                                                
      RETURN                                                            
      END                                                               
      SUBROUTINE  SETDIS( CMU, CWT, DELTAM, DTAUC, EXPBEA, FBEAM, FLYR, 
     $                    GL, HL, HLPR, IBCND, LAMBER, LAYRU, LYRCUT,   
     $                    MAXUMU, MAXCMU, MXCMU, NCUT, NLYR, NTAU, NN,  
     $                    NSTR, PLANK, NUMU, ONLYFL, OPRIM, PMOM,SSALB, 
     $                    TAUC, TAUCPR, UTAU, UTAUPR, UMU, UMU0, USRTAU,
     $                    USRANG )                                      
                                                                        
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
C          PERFORM MISCELLANEOUS SETTING-UP OPERATIONS                  
                                                                        
C       ROUTINES CALLED:  ERRMSG, QGAUSN, ZEROIT                        
                                                                        
C       INPUT :  ALL ARE DISORT INPUT VARIABLES (SEE DOC FILE)          
                                                                        
C       OUTPUT:  NTAU,UTAU   IF USRTAU = FALSE                          
C                NUMU,UMU    IF USRANG = FALSE                          
C                CMU,CWT     COMPUTATIONAL POLAR ANGLES AND             
C                               CORRESPONDING QUADRATURE WEIGHTS        
C                EXPBEA      TRANSMISSION OF DIRECT BEAM                
C                FLYR        TRUNCATED FRACTION IN DELTA-M METHOD       
C                GL          PHASE FUNCTION LEGENDRE COEFFICIENTS MULTI-
C                              PLIED BY (2L+1) AND SINGLE-SCATTER ALBEDO
C                HLPR        LEGENDRE MOMENTS OF SURFACE BIDIRECTIONAL  
C                              REFLECTIVITY, TIMES 2K+1                 
C                LAYRU       COMPUTATIONAL LAYER IN WHICH UTAU FALLS    
C                LYRCUT      FLAG AS TO WHETHER RADIATION WILL BE ZEROED
C                              BELOW LAYER NCUT                         
C                NCUT        COMPUTATIONAL LAYER WHERE ABSORPTION       
C                              OPTICAL DEPTH FIRST EXCEEDS  ABSCUT      
C                NN          NSTR / 2                                   
C                OPRIM       DELTA-M-SCALED SINGLE-SCATTER ALBEDO       
C                TAUCPR      DELTA-M-SCALED OPTICAL DEPTH               
C                UTAUPR      DELTA-M-SCALED VERSION OF  UTAU            
                                                                        
      LOGICAL  DELTAM, LAMBER, LYRCUT, PLANK, ONLYFL, USRTAU, USRANG    
      INTEGER  LAYRU(*)                                                 
      REAL*8     CMU(*), CWT(*), DTAUC(*), EXPBEA(0:*), FLYR(*),        
     $         GL(0:MXCMU,*), HL(0:*), HLPR(0:*), OPRIM(*),             
     $         PMOM(0:MAXCMU,*), SSALB(*), TAUC(0:*), TAUCPR(0:*),      
     $         UTAU(*), UTAUPR(*), UMU(*)                               
      DATA  ABSCUT / 10. /                                              
      IF ( .NOT.USRTAU ) THEN                                           
C                              ** SET OUTPUT LEVELS AT COMPUTATIONAL    
C                              ** LAYER BOUNDARIES                      
         NTAU = NLYR + 1                                                
         DO 30  LC = 0, NTAU-1                                          
            UTAU(LC+1) = TAUC(LC)                                       
30       CONTINUE                                                       
      END IF                                                            
C                        ** APPLY DELTA-M SCALING AND MOVE DESCRIPTION  
C                        ** OF COMPUTATIONAL LAYERS TO LOCAL VARIABLES  
      EXPBEA( 0 ) = 1.0                                                 
      ABSTAU = 0.0                                                      
      DO  60  LC = 1, NLYR                                              
         PMOM(0,LC) = 1.0                                               
         IF ( ABSTAU.LT.ABSCUT )  NCUT = LC                             
         ABSTAU = ABSTAU + ( 1. - SSALB(LC) ) * DTAUC(LC)               
                                                                        
         IF ( .NOT.DELTAM )  THEN                                       
            OPRIM(LC) = SSALB(LC)                                       
            TAUCPR(LC) = TAUC(LC)                                       
            DO 40  K = 0, NSTR-1                                        
               GL(K,LC) = (2*K+1) * OPRIM(LC) * PMOM(K,LC)              
 40         CONTINUE                                                    
            F = 0.0                                                     
         ELSE                                                           
C                                    ** DO DELTA-M TRANSFORMATION       
            F = PMOM( NSTR,LC )                                         
            OPRIM(LC) = SSALB(LC) * ( 1. - F ) / ( 1. - F * SSALB(LC) ) 
            TAUCPR(LC) = TAUCPR(LC-1) + ( 1. - F*SSALB(LC) ) * DTAUC(LC)
            DO 50  K = 0, NSTR-1                                        
               GL(K,LC) = (2*K+1) * OPRIM(LC) * (PMOM(K,LC)-F) / (1.-F) 
 50         CONTINUE                                                    
         ENDIF                                                          
                                                                        
         FLYR(LC) = F                                                   
         EXPBEA(LC) = 0.0                                               
         IF ( FBEAM.GT.0.0 )  EXPBEA(LC) = DEXP( - TAUCPR(LC) / UMU0 )  
60    CONTINUE                                                          
C                      ** IF NO THERMAL EMISSION, CUT OFF MEDIUM BELOW  
C                      ** ABSORPTION OPTICAL DEPTH = ABSCUT ( NOTE THAT 
C                      ** DELTA-M TRANSFORMATION LEAVES ABSORPTION      
C                      ** OPTICAL DEPTH INVARIANT ).  NOT WORTH THE     
C                      ** TROUBLE FOR ONE-LAYER PROBLEMS, THOUGH.       
      LYRCUT = .FALSE.                                                  
      IF ( ABSTAU.GE.ABSCUT .AND. .NOT.PLANK .AND. IBCND.NE.1           
     $     .AND. NLYR.GT.1 )  LYRCUT =.TRUE.                            
      IF ( .NOT.LYRCUT )  NCUT = NLYR                                   
                                                                        
C                             ** SET ARRAYS DEFINING LOCATION OF USER   
C                             ** OUTPUT LEVELS WITHIN DELTA-M-SCALED    
C                             ** COMPUTATIONAL MESH                     
      DO 90  LU = 1, NTAU                                               
         DO 70 LC = 1, NLYR                                             
            IF ( UTAU(LU).GE.TAUC(LC-1) .AND. UTAU(LU).LE.TAUC(LC) )    
     $           GO TO 80                                               
70       CONTINUE                                                       
         LC = NLYR                                                      
                                                                        
80       UTAUPR(LU) = UTAU(LU)                                          
         IF(DELTAM) UTAUPR(LU) = TAUCPR(LC-1) + (1.-SSALB(LC)*FLYR(LC)) 
     $                                        * (UTAU(LU) - TAUC(LC-1)) 
         LAYRU(LU) = LC                                                 
90    CONTINUE                                                          
C                      ** CALCULATE COMPUTATIONAL POLAR ANGLE COSINES   
C                      ** AND ASSOCIATED QUADRATURE WEIGHTS FOR GAUSSIAN
C                      ** QUADRATURE ON THE INTERVAL (0,1) (UPWARD)     
      NN = NSTR / 2                                                     
      CALL  QGAUSN( NN, CMU, CWT )                                      
C                                  ** DOWNWARD (NEG) ANGLES AND WEIGHTS 
      DO 100  IQ = 1, NN                                                
         CMU(IQ+NN) = - CMU(IQ)                                         
         CWT(IQ+NN) =   CWT(IQ)                                         
100   CONTINUE                                                          
                                                                        
      IF ( FBEAM.GT.0.0 )  THEN                                         
C                               ** COMPARE BEAM ANGLE TO COMPU'L ANGLES 
         DO 110  IQ = 1, NN                                             
            IF ( DABS(UMU0-CMU(IQ))/UMU0 .LT. 1.E-4 )  CALL ERRMSG      
     $         ( 'SETDIS--BEAM ANGLE=COMPUTATIONAL ANGLE; CHANGE NSTR', 
     $            .TRUE. )                                              
  110    CONTINUE                                                       
      END IF                                                            
      IF ( .NOT.USRANG .OR. (ONLYFL .AND. MAXUMU.GE.NSTR) )  THEN       
                                                                        
C                                   ** SET OUTPUT POLAR ANGLES TO       
C                                   ** COMPUTATIONAL POLAR ANGLES       
            NUMU = NSTR                                                 
            DO 120  IU = 1, NN                                          
               UMU(IU) = - CMU(NN+1-IU)                                 
120         CONTINUE                                                    
            DO 121  IU = NN+1, NSTR                                     
               UMU(IU) = CMU(IU-NN)                                     
121         CONTINUE                                                    
      END IF                                                            
             IF ( USRANG .AND. IBCND.EQ.1 )  THEN                       
                                                                        
C                               ** SHIFT POSITIVE USER ANGLE COSINES TO 
C                               ** UPPER LOCATIONS AND PUT NEGATIVES    
C                               ** IN LOWER LOCATIONS                   
         DO 140  IU = 1, NUMU                                           
            UMU(IU+NUMU) = UMU(IU)                                      
140      CONTINUE                                                       
         DO 141  IU = 1, NUMU                                           
            UMU(IU) = - UMU( 2*NUMU+1-IU)                               
141      CONTINUE                                                       
         NUMU = 2*NUMU                                                  
      END IF                                                            
                                                                        
      IF ( .NOT.LYRCUT .AND. .NOT.LAMBER )  THEN                        
         DO 160  K = 0, NSTR                                            
            HLPR(K) = (2*K+1) * HL(K)                                   
160      CONTINUE                                                       
      END IF                                                            
                                                                        
      RETURN                                                            
      END                                                               
      SUBROUTINE  SETMTX( BDR, CBAND, CMU, CWT, DELM0, GC, KK, LAMBER,  
     $                    LYRCUT, MI, MI9M2, MXCMU, NCOL, NCUT, NNLYRI, 
     $                    NN, NSTR, TAUCPR, WK )                        
                                                                        
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
C        CALCULATE COEFFICIENT MATRIX FOR THE SET OF EQUATIONS          
C        OBTAINED FROM THE BOUNDARY CONDITIONS AND THE CONTINUITY-      
C        OF-INTENSITY-AT-LAYER-INTERFACE EQUATIONS;  STORE IN THE       
C        SPECIAL BANDED-MATRIX FORMAT REQUIRED BY LINPACK ROUTINES      
                                                                        
C     ROUTINES CALLED:  ZEROIT                                          
                                                                        
C     I N P U T      V A R I A B L E S:                                 
                                                                        
C       BDR      :  SURFACE BIDIRECTIONAL REFLECTIVITY                  
C       CMU      :  ABSCISSAE FOR GAUSS QUADRATURE OVER ANGLE COSINE    
C       CWT      :  WEIGHTS FOR GAUSS QUADRATURE OVER ANGLE COSINE      
C       DELM0    :  KRONECKER DELTA, DELTA-SUB-M0                       
C       GC       :  EIGENVECTORS AT POLAR QUADRATURE ANGLES, SC(1)      
C       KK       :  EIGENVALUES OF COEFF. MATRIX IN EQ. SS(7)           
C       LYRCUT   :  LOGICAL FLAG FOR TRUNCATION OF COMPUT. LAYER        
C       NN       :  NUMBER OF STREAMS IN A HEMISPHERE (NSTR/2)          
C       NCUT     :  TOTAL NUMBER OF COMPUTATIONAL LAYERS CONSIDERED     
C       TAUCPR   :  CUMULATIVE OPTICAL DEPTH (DELTA-M-SCALED)           
C       (REMAINDER ARE 'DISORT' INPUT VARIABLES)                        
                                                                        
C   O U T P U T     V A R I A B L E S:                                  
                                                                        
C       CBAND    :  LEFT-HAND SIDE MATRIX OF LINEAR SYSTEM EQ. SC(5),   
C                   SCALED BY EQ. SC(12); IN BANDED FORM REQUIRED       
C                   BY LINPACK SOLUTION ROUTINES                        
C       NCOL     :  COUNTS OF COLUMNS IN -CBAND-                        
                                                                        
C   I N T E R N A L    V A R I A B L E S:                               
                                                                        
C       IROW     :  POINTS TO ROW IN  -CBAND-                           
C       JCOL     :  POINTS TO POSITION IN LAYER BLOCK                   
C       LDA      :  ROW DIMENSION OF -CBAND-                            
C       NCD      :  NUMBER OF DIAGONALS BELOW OR ABOVE MAIN DIAGONAL    
C       NCOL     :  COUNTS OF COLUMNS IN -CBAND-                        
C       NSHIFT   :  FOR POSITIONING NUMBER OF ROWS IN BAND STORAGE      
C       WK       :  TEMPORARY STORAGE FOR 'EXP' EVALUATIONS             
C ---------------------------------------------------------------------+
      LOGICAL LAMBER, LYRCUT                                            
      REAL*8    BDR( MI,0:* ), CBAND( MI9M2,NNLYRI ), CMU(*), CWT(*),   
     $        GC( MXCMU,MXCMU,* ), KK( MXCMU,* ), TAUCPR( 0:* ), WK(*)  
                                                                        
                                                                        
      CALL  ZEROIT( CBAND, MI9M2*NNLYRI )                               
      NCD    = 3*NN - 1                                                 
      LDA    = 3*NCD + 1                                                
      NSHIFT = LDA - 2*NSTR + 1                                         
      NCOL   = 0                                                        
C                         ** USE CONTINUITY CONDITIONS OF EQ. STWJ(17)  
C                         ** TO FORM COEFFICIENT MATRIX IN STWJ(20);    
C                         ** EMPLOY SCALING TRANSFORMATION STWJ(22)     
      DO 30  LC = 1, NCUT                                               
                                                                        
         DO 4  IQ = 1, NN                                               
            WK(IQ) = DEXP( KK(IQ,LC) * (TAUCPR(LC) - TAUCPR(LC-1)) )    
 4       CONTINUE                                                       
                                                                        
         JCOL = 0                                                       
         DO 10  IQ = 1, NN                                              
            NCOL = NCOL + 1                                             
            IROW = NSHIFT - JCOL                                        
            DO 5  JQ = 1, NSTR                                          
               CBAND(IROW+NSTR,NCOL) =   GC(JQ,IQ,LC)                   
               CBAND(IROW,     NCOL) = - GC(JQ,IQ,LC) * WK(IQ)          
               IROW = IROW + 1                                          
 5          CONTINUE                                                    
            JCOL = JCOL + 1                                             
10       CONTINUE                                                       
                                                                        
         DO 20  IQ = NN+1, NSTR                                         
            NCOL = NCOL + 1                                             
            IROW = NSHIFT - JCOL                                        
            DO 15  JQ = 1, NSTR                                         
               CBAND(IROW+NSTR,NCOL) =   GC(JQ,IQ,LC) * WK(NSTR+1-IQ)   
               CBAND(IROW,     NCOL) = - GC(JQ,IQ,LC)                   
               IROW = IROW + 1                                          
15          CONTINUE                                                    
            JCOL = JCOL + 1                                             
20       CONTINUE                                                       
                                                                        
30    CONTINUE                                                          
C                  ** USE TOP BOUNDARY CONDITION OF STWJ(20A) FOR       
C                  ** FIRST LAYER                                       
      JCOL = 0                                                          
      DO 40  IQ = 1, NN                                                 
         EXPA = DEXP( KK(IQ,1) * TAUCPR(1) )                            
         IROW = NSHIFT - JCOL + NN                                      
         DO 35  JQ = NN, 1, -1                                          
            CBAND(IROW,JCOL+1) = GC(JQ,IQ,1) * EXPA                     
            IROW = IROW+1                                               
35       CONTINUE                                                       
         JCOL = JCOL+1                                                  
40    CONTINUE                                                          
                                                                        
      DO 50  IQ = NN+1, NSTR                                            
         IROW = NSHIFT - JCOL + NN                                      
         DO 45  JQ = NN, 1, -1                                          
            CBAND(IROW,JCOL+1) = GC(JQ,IQ,1)                            
            IROW = IROW+1                                               
45       CONTINUE                                                       
         JCOL = JCOL+1                                                  
50    CONTINUE                                                          
C                           ** USE BOTTOM BOUNDARY CONDITION OF         
C                           ** STWJ(20C) FOR LAST LAYER                 
      NNCOL = NCOL - NSTR                                               
      JCOL  = 0                                                         
      DO 70  IQ = 1, NN                                                 
         NNCOL = NNCOL + 1                                              
         IROW  = NSHIFT - JCOL + NSTR                                   
                                                                        
         DO 60  JQ = NN+1, NSTR                                         
            IF ( LYRCUT .OR. (LAMBER .AND. DELM0.EQ.0) ) THEN           
                                                                        
C                          ** NO AZIMUTHAL-DEPENDENT INTENSITY IF LAM-  
C                          ** BERT SURFACE; NO INTENSITY COMPONENT IF   
C                          ** TRUNCATED BOTTOM LAYER                    
                                                                        
               CBAND(IROW,NNCOL) = GC(JQ,IQ,NCUT)                       
            ELSE                                                        
               SUM = 0.0                                                
               DO 55  K = 1, NN                                         
                  SUM = SUM + CWT(K) * CMU(K) * BDR(JQ-NN,K)            
     $                        * GC(NN+1-K,IQ,NCUT)                      
55             CONTINUE                                                 
               CBAND(IROW,NNCOL) = GC(JQ,IQ,NCUT) - (1.+DELM0) * SUM    
            END IF                                                      
                                                                        
            IROW = IROW + 1                                             
60       CONTINUE                                                       
         JCOL = JCOL + 1                                                
70    CONTINUE                                                          
                                                                        
      DO 90  IQ = NN+1, NSTR                                            
         NNCOL = NNCOL + 1                                              
         IROW  = NSHIFT - JCOL + NSTR                                   
         EXPA = WK(NSTR+1-IQ)                                           
                                                                        
         DO 80  JQ = NN+1, NSTR                                         
                                                                        
            IF ( LYRCUT .OR. (LAMBER .AND. DELM0.EQ.0) ) THEN           
               CBAND(IROW,NNCOL) = GC(JQ,IQ,NCUT) * EXPA                
            ELSE                                                        
               SUM = 0.0                                                
               DO 75  K = 1, NN                                         
                  SUM = SUM + CWT(K) * CMU(K) * BDR(JQ-NN,K)            
     $                        * GC(NN+1-K,IQ,NCUT)                      
75             CONTINUE                                                 
               CBAND(IROW,NNCOL) = ( GC(JQ,IQ,NCUT)                     
     $                               - (1.+DELM0) * SUM ) * EXPA        
            END IF                                                      
                                                                        
            IROW = IROW + 1                                             
80       CONTINUE                                                       
         JCOL = JCOL + 1                                                
90    CONTINUE                                                          
                                                                        
      RETURN                                                            
      END                                                               
      BLOCK DATA SF260                                                  
C>    BLOCK DATA                                                        
C               06/28/82                                                
C               UNITS OF (CM**3/MOL) * 1.E-20                           
      COMMON /S260/ V1,V2,DV,NPT,S0000(2),                              
     1      S0001(50),S0051(50),S0101(50),S0151(50),S0201(50),S0251(50),
     2      S0301(50),S0351(50),S0401(50),S0451(50),S0501(50),S0551(50),
     3      S0601(50),S0651(50),S0701(50),S0751(50),S0801(50),S0851(50),
     4      S0901(50),S0951(50),S1001(50),S1051(50),S1101(50),S1151(50),
     5      S1201(50),S1251(50),S1301(50),S1351(50),S1401(50),S1451(50),
     6      S1501(50),S1551(50),S1601(50),S1651(50),S1701(50),S1751(50),
     7      S1801(50),S1851(50),S1901(50),S1951(50),S2001(1)            
C                                                                       
C                                                                       
       DATA V1,V2,DV,NPT /                                              
     1      -20.0,     20000.0,       10.0,  2003/                      
C                                                                       
C                                                                       
      DATA S0000/ 1.7750E-01, 1.7045E-01/                               
      DATA S0001/                                                       
     C 1.6457E-01, 1.7045E-01, 1.7750E-01, 2.0036E-01, 2.1347E-01,      
     C 2.2454E-01, 2.3428E-01, 2.3399E-01, 2.3022E-01, 2.0724E-01,      
     C 1.9712E-01, 1.8317E-01, 1.6724E-01, 1.4780E-01, 1.2757E-01,      
     C 1.1626E-01, 1.0098E-01, 8.9033E-02, 7.9770E-02, 6.7416E-02,      
     C 5.9588E-02, 5.1117E-02, 4.6218E-02, 4.2179E-02, 3.4372E-02,      
     C 2.9863E-02, 2.5252E-02, 2.2075E-02, 1.9209E-02, 1.5816E-02,      
     C 1.3932E-02, 1.1943E-02, 1.0079E-02, 8.7667E-03, 7.4094E-03,      
     C 6.4967E-03, 5.5711E-03, 4.8444E-03, 4.2552E-03, 3.6953E-03,      
     C 3.2824E-03, 2.9124E-03, 2.6102E-03, 2.3370E-03, 2.1100E-03,      
     C 1.9008E-03, 1.7145E-03, 1.5573E-03, 1.4206E-03, 1.2931E-03/      
      DATA S0051/                                                       
     C 1.1803E-03, 1.0774E-03, 9.8616E-04, 9.0496E-04, 8.3071E-04,      
     C 7.6319E-04, 7.0149E-04, 6.4637E-04, 5.9566E-04, 5.4987E-04,      
     C 5.0768E-04, 4.6880E-04, 4.3317E-04, 4.0037E-04, 3.7064E-04,      
     C 3.4325E-04, 3.1809E-04, 2.9501E-04, 2.7382E-04, 2.5430E-04,      
     C 2.3630E-04, 2.1977E-04, 2.0452E-04, 1.9042E-04, 1.7740E-04,      
     C 1.6544E-04, 1.5442E-04, 1.4425E-04, 1.3486E-04, 1.2618E-04,      
     C 1.1817E-04, 1.1076E-04, 1.0391E-04, 9.7563E-05, 9.1696E-05,      
     C 8.6272E-05, 8.1253E-05, 7.6607E-05, 7.2302E-05, 6.8311E-05,      
     C 6.4613E-05, 6.1183E-05, 5.8001E-05, 5.5048E-05, 5.2307E-05,      
     C 4.9761E-05, 4.7395E-05, 4.5197E-05, 4.3155E-05, 4.1256E-05/      
      DATA S0101/                                                       
     C 3.9491E-05, 3.7849E-05, 3.6324E-05, 3.4908E-05, 3.3594E-05,      
     C 3.2374E-05, 3.1244E-05, 3.0201E-05, 2.9240E-05, 2.8356E-05,      
     C 2.7547E-05, 2.6814E-05, 2.6147E-05, 2.5551E-05, 2.5029E-05,      
     C 2.4582E-05, 2.4203E-05, 2.3891E-05, 2.3663E-05, 2.3531E-05,      
     C 2.3483E-05, 2.3516E-05, 2.3694E-05, 2.4032E-05, 2.4579E-05,      
     C 2.5234E-05, 2.6032E-05, 2.7119E-05, 2.8631E-05, 3.0848E-05,      
     C 3.3262E-05, 3.6635E-05, 4.0732E-05, 4.5923E-05, 5.3373E-05,      
     C 6.1875E-05, 7.2031E-05, 8.5980E-05, 9.8642E-05, 1.1469E-04,      
     C 1.3327E-04, 1.5390E-04, 1.7513E-04, 2.0665E-04, 2.3609E-04,      
     C 2.6220E-04, 2.8677E-04, 3.2590E-04, 3.8624E-04, 4.1570E-04/      
      DATA S0151/                                                       
     C 4.5207E-04, 4.9336E-04, 5.4500E-04, 5.8258E-04, 5.8086E-04,      
     C 5.6977E-04, 5.3085E-04, 4.8020E-04, 4.3915E-04, 4.0343E-04,      
     C 3.7853E-04, 3.7025E-04, 3.9637E-04, 4.4675E-04, 4.7072E-04,      
     C 4.9022E-04, 5.2076E-04, 5.3676E-04, 5.2755E-04, 4.8244E-04,      
     C 4.5473E-04, 4.3952E-04, 3.9614E-04, 3.4086E-04, 2.9733E-04,      
     C 2.6367E-04, 2.3767E-04, 2.0427E-04, 1.7595E-04, 1.5493E-04,      
     C 1.3851E-04, 1.1874E-04, 1.0735E-04, 9.0490E-05, 8.1149E-05,      
     C 7.4788E-05, 6.5438E-05, 5.8248E-05, 4.8076E-05, 4.3488E-05,      
     C 3.7856E-05, 3.3034E-05, 2.9592E-05, 2.6088E-05, 2.3497E-05,      
     C 2.0279E-05, 1.7526E-05, 1.5714E-05, 1.3553E-05, 1.2145E-05/      
      DATA S0201/                                                       
     C 1.0802E-05, 9.7681E-06, 8.8196E-06, 7.8291E-06, 7.1335E-06,      
     C 6.4234E-06, 5.8391E-06, 5.3532E-06, 4.9079E-06, 4.5378E-06,      
     C 4.1716E-06, 3.8649E-06, 3.5893E-06, 3.3406E-06, 3.1199E-06,      
     C 2.9172E-06, 2.7348E-06, 2.5644E-06, 2.4086E-06, 2.2664E-06,      
     C 2.1359E-06, 2.0159E-06, 1.9051E-06, 1.8031E-06, 1.7074E-06,      
     C 1.6185E-06, 1.5356E-06, 1.4584E-06, 1.3861E-06, 1.3179E-06,      
     C 1.2545E-06, 1.1951E-06, 1.1395E-06, 1.0873E-06, 1.0384E-06,      
     C 9.9250E-07, 9.4935E-07, 9.0873E-07, 8.7050E-07, 8.3446E-07,      
     C 8.0046E-07, 7.6834E-07, 7.3800E-07, 7.0931E-07, 6.8217E-07,      
     C 6.5648E-07, 6.3214E-07, 6.0909E-07, 5.8725E-07, 5.6655E-07/      
      DATA S0251/                                                       
     C 5.4693E-07, 5.2835E-07, 5.1077E-07, 4.9416E-07, 4.7853E-07,      
     C 4.6381E-07, 4.5007E-07, 4.3728E-07, 4.2550E-07, 4.1450E-07,      
     C 4.0459E-07, 3.9532E-07, 3.8662E-07, 3.7855E-07, 3.7041E-07,      
     C 3.6254E-07, 3.5420E-07, 3.4617E-07, 3.3838E-07, 3.3212E-07,      
     C 3.2655E-07, 3.1865E-07, 3.1203E-07, 3.0670E-07, 3.0252E-07,      
     C 2.9749E-07, 2.9184E-07, 2.8795E-07, 2.8501E-07, 2.8202E-07,      
     C 2.7856E-07, 2.7509E-07, 2.7152E-07, 2.6844E-07, 2.6642E-07,      
     C 2.6548E-07, 2.6617E-07, 2.6916E-07, 2.7372E-07, 2.8094E-07,      
     C 2.9236E-07, 3.1035E-07, 3.2854E-07, 3.5481E-07, 3.9377E-07,      
     C 4.4692E-07, 5.0761E-07, 5.7715E-07, 6.7725E-07, 8.0668E-07/      
      DATA S0301/                                                       
     C 9.3716E-07, 1.0797E-06, 1.1689E-06, 1.3217E-06, 1.4814E-06,      
     C 1.5627E-06, 1.6519E-06, 1.7601E-06, 1.9060E-06, 2.0474E-06,      
     C 2.0716E-06, 2.0433E-06, 1.9752E-06, 1.8466E-06, 1.7526E-06,      
     C 1.6657E-06, 1.5870E-06, 1.5633E-06, 1.6520E-06, 1.8471E-06,      
     C 1.9953E-06, 2.0975E-06, 2.2016E-06, 2.2542E-06, 2.3081E-06,      
     C 2.3209E-06, 2.2998E-06, 2.3056E-06, 2.2757E-06, 2.2685E-06,      
     C 2.2779E-06, 2.2348E-06, 2.2445E-06, 2.3174E-06, 2.4284E-06,      
     C 2.5290E-06, 2.7340E-06, 2.9720E-06, 3.2332E-06, 3.5392E-06,      
     C 3.9013E-06, 4.3334E-06, 4.9088E-06, 5.3428E-06, 5.9142E-06,      
     C 6.6106E-06, 7.4709E-06, 8.5019E-06, 9.6835E-06, 1.0984E-05/      
      DATA S0351/                                                       
     C 1.2831E-05, 1.4664E-05, 1.7080E-05, 2.0103E-05, 2.4148E-05,      
     C 2.7948E-05, 3.2855E-05, 3.9046E-05, 4.6429E-05, 5.6633E-05,      
     C 6.6305E-05, 7.6048E-05, 8.7398E-05, 1.0034E-04, 1.1169E-04,      
     C 1.2813E-04, 1.3354E-04, 1.3952E-04, 1.4204E-04, 1.4615E-04,      
     C 1.5144E-04, 1.5475E-04, 1.6561E-04, 1.7135E-04, 1.6831E-04,      
     C 1.6429E-04, 1.6353E-04, 1.6543E-04, 1.5944E-04, 1.5404E-04,      
     C 1.5458E-04, 1.6287E-04, 1.7277E-04, 1.8387E-04, 1.7622E-04,      
     C 1.6360E-04, 1.5273E-04, 1.3667E-04, 1.2364E-04, 9.7576E-05,      
     C 7.9140E-05, 6.4241E-05, 5.1826E-05, 4.1415E-05, 3.1347E-05,      
     C 2.5125E-05, 2.0027E-05, 1.6362E-05, 1.3364E-05, 1.1117E-05/      
      DATA S0401/                                                       
     C 9.4992E-06, 8.1581E-06, 7.1512E-06, 6.2692E-06, 5.5285E-06,      
     C 4.9000E-06, 4.3447E-06, 3.8906E-06, 3.4679E-06, 3.1089E-06,      
     C 2.8115E-06, 2.5496E-06, 2.2982E-06, 2.0861E-06, 1.8763E-06,      
     C 1.7035E-06, 1.5548E-06, 1.4107E-06, 1.2839E-06, 1.1706E-06,      
     C 1.0709E-06, 9.8099E-07, 8.9901E-07, 8.2394E-07, 7.5567E-07,      
     C 6.9434E-07, 6.3867E-07, 5.8845E-07, 5.4263E-07, 5.0033E-07,      
     C 4.6181E-07, 4.2652E-07, 3.9437E-07, 3.6497E-07, 3.3781E-07,      
     C 3.1292E-07, 2.9011E-07, 2.6915E-07, 2.4989E-07, 2.3215E-07,      
     C 2.1582E-07, 2.0081E-07, 1.8700E-07, 1.7432E-07, 1.6264E-07,      
     C 1.5191E-07, 1.4207E-07, 1.3306E-07, 1.2484E-07, 1.1737E-07/      
      DATA S0451/                                                       
     C 1.1056E-07, 1.0451E-07, 9.9060E-08, 9.4135E-08, 8.9608E-08,      
     C 8.5697E-08, 8.1945E-08, 7.8308E-08, 7.4808E-08, 7.1686E-08,      
     C 6.8923E-08, 6.5869E-08, 6.3308E-08, 6.0840E-08, 5.8676E-08,      
     C 5.6744E-08, 5.5016E-08, 5.3813E-08, 5.2792E-08, 5.2097E-08,      
     C 5.1737E-08, 5.1603E-08, 5.1656E-08, 5.1989E-08, 5.2467E-08,      
     C 5.2918E-08, 5.3589E-08, 5.4560E-08, 5.5869E-08, 5.7403E-08,      
     C 5.8968E-08, 6.0973E-08, 6.3432E-08, 6.6245E-08, 6.9353E-08,      
     C 7.2686E-08, 7.6541E-08, 8.0991E-08, 8.5950E-08, 9.1429E-08,      
     C 9.7851E-08, 1.0516E-07, 1.1349E-07, 1.2295E-07, 1.3335E-07,      
     C 1.4488E-07, 1.5864E-07, 1.7412E-07, 1.9140E-07, 2.1078E-07/      
      DATA S0501/                                                       
     C 2.3369E-07, 2.5996E-07, 2.8848E-07, 3.2169E-07, 3.5991E-07,      
     C 4.0566E-07, 4.5969E-07, 5.3094E-07, 6.1458E-07, 7.1155E-07,      
     C 8.3045E-07, 9.9021E-07, 1.2042E-06, 1.4914E-06, 1.8145E-06,      
     C 2.2210E-06, 2.7831E-06, 3.4533E-06, 4.4446E-06, 5.1989E-06,      
     C 6.2289E-06, 7.1167E-06, 8.3949E-06, 9.6417E-06, 1.0313E-05,      
     C 1.0485E-05, 1.0641E-05, 1.0898E-05, 1.0763E-05, 1.0506E-05,      
     C 1.0497E-05, 1.1696E-05, 1.2654E-05, 1.3029E-05, 1.3175E-05,      
     C 1.4264E-05, 1.4985E-05, 1.4999E-05, 1.4317E-05, 1.4616E-05,      
     C 1.4963E-05, 1.5208E-05, 1.4942E-05, 1.3879E-05, 1.3087E-05,      
     C 1.1727E-05, 1.0515E-05, 9.0073E-06, 7.3133E-06, 6.1181E-06/      
      DATA S0551/                                                       
     C 5.0623E-06, 4.1105E-06, 3.3915E-06, 2.6711E-06, 2.1464E-06,      
     C 1.7335E-06, 1.4302E-06, 1.1847E-06, 9.9434E-07, 8.2689E-07,      
     C 7.0589E-07, 6.0750E-07, 5.3176E-07, 4.6936E-07, 4.1541E-07,      
     C 3.6625E-07, 3.2509E-07, 2.9156E-07, 2.6308E-07, 2.3819E-07,      
     C 2.1421E-07, 1.9366E-07, 1.7626E-07, 1.5982E-07, 1.4567E-07,      
     C 1.3354E-07, 1.2097E-07, 1.1029E-07, 1.0063E-07, 9.2003E-08,      
     C 8.4245E-08, 7.7004E-08, 7.0636E-08, 6.4923E-08, 5.9503E-08,      
     C 5.4742E-08, 5.0450E-08, 4.6470E-08, 4.2881E-08, 3.9550E-08,      
     C 3.6541E-08, 3.3803E-08, 3.1279E-08, 2.8955E-08, 2.6858E-08,      
     C 2.4905E-08, 2.3146E-08, 2.1539E-08, 2.0079E-08, 1.8746E-08/      
      DATA S0601/                                                       
     C 1.7517E-08, 1.6396E-08, 1.5369E-08, 1.4426E-08, 1.3543E-08,      
     C 1.2724E-08, 1.1965E-08, 1.1267E-08, 1.0617E-08, 1.0010E-08,      
     C 9.4662E-09, 8.9553E-09, 8.4988E-09, 8.0807E-09, 7.7043E-09,      
     C 7.3721E-09, 7.0707E-09, 6.8047E-09, 6.5702E-09, 6.3634E-09,      
     C 6.1817E-09, 6.0239E-09, 5.8922E-09, 5.7824E-09, 5.7019E-09,      
     C 5.6368E-09, 5.5940E-09, 5.5669E-09, 5.5583E-09, 5.5653E-09,      
     C 5.5837E-09, 5.6243E-09, 5.6883E-09, 5.7800E-09, 5.8964E-09,      
     C 6.0429E-09, 6.2211E-09, 6.4282E-09, 6.6634E-09, 6.9306E-09,      
     C 7.2336E-09, 7.5739E-09, 7.9562E-09, 8.3779E-09, 8.8575E-09,      
     C 9.3992E-09, 1.0004E-08, 1.0684E-08, 1.1450E-08, 1.2320E-08/      
      DATA S0651/                                                       
     C 1.3311E-08, 1.4455E-08, 1.5758E-08, 1.7254E-08, 1.8927E-08,      
     C 2.0930E-08, 2.3348E-08, 2.6074E-08, 2.9221E-08, 3.2770E-08,      
     C 3.7485E-08, 4.2569E-08, 4.8981E-08, 5.5606E-08, 6.2393E-08,      
     C 7.1901E-08, 8.2921E-08, 9.5513E-08, 1.1111E-07, 1.3143E-07,      
     C 1.5971E-07, 1.8927E-07, 2.2643E-07, 2.7860E-07, 3.2591E-07,      
     C 3.7024E-07, 4.2059E-07, 4.9432E-07, 5.5543E-07, 5.7498E-07,      
     C 5.9210E-07, 6.1005E-07, 6.1577E-07, 5.9193E-07, 5.6602E-07,      
     C 5.7403E-07, 6.0050E-07, 6.4723E-07, 6.7073E-07, 7.5415E-07,      
     C 8.0982E-07, 8.7658E-07, 9.1430E-07, 9.4459E-07, 9.8347E-07,      
     C 9.8768E-07, 1.0153E-06, 1.0066E-06, 1.0353E-06, 1.0353E-06/      
      DATA S0701/                                                       
     C 1.0722E-06, 1.1138E-06, 1.1923E-06, 1.2947E-06, 1.4431E-06,      
     C 1.6537E-06, 1.8662E-06, 2.2473E-06, 2.6464E-06, 3.1041E-06,      
     C 3.4858E-06, 4.0167E-06, 4.6675E-06, 5.0983E-06, 5.7997E-06,      
     C 6.0503E-06, 6.4687E-06, 6.5396E-06, 6.7986E-06, 7.0244E-06,      
     C 7.2305E-06, 7.6732E-06, 7.9783E-06, 7.9846E-06, 7.7617E-06,      
     C 7.7657E-06, 7.7411E-06, 7.8816E-06, 7.8136E-06, 8.0051E-06,      
     C 8.5799E-06, 9.1659E-06, 9.8646E-06, 9.4920E-06, 8.7670E-06,      
     C 8.2034E-06, 7.2297E-06, 6.2324E-06, 4.9315E-06, 3.9128E-06,      
     C 3.1517E-06, 2.4469E-06, 1.8815E-06, 1.4627E-06, 1.1698E-06,      
     C 9.4686E-07, 7.8486E-07, 6.6970E-07, 5.8811E-07, 5.2198E-07/      
      DATA S0751/                                                       
     C 4.6809E-07, 4.1671E-07, 3.7006E-07, 3.3066E-07, 2.9387E-07,      
     C 2.6415E-07, 2.3409E-07, 2.0991E-07, 1.9132E-07, 1.7519E-07,      
     C 1.5939E-07, 1.4368E-07, 1.3050E-07, 1.1883E-07, 1.0772E-07,      
     C 9.6884E-08, 8.7888E-08, 7.8956E-08, 7.1024E-08, 6.3824E-08,      
     C 5.7256E-08, 5.1769E-08, 4.7037E-08, 4.2901E-08, 3.8970E-08,      
     C 3.5467E-08, 3.2502E-08, 2.9827E-08, 2.7389E-08, 2.5111E-08,      
     C 2.3056E-08, 2.1267E-08, 1.9610E-08, 1.8133E-08, 1.6775E-08,      
     C 1.5491E-08, 1.4329E-08, 1.3265E-08, 1.2300E-08, 1.1420E-08,      
     C 1.0593E-08, 9.8475E-09, 9.1585E-09, 8.5256E-09, 7.9525E-09,      
     C 7.4226E-09, 6.9379E-09, 6.4950E-09, 6.0911E-09, 5.7242E-09/      
      DATA S0801/                                                       
     C 5.3877E-09, 5.0821E-09, 4.8051E-09, 4.5554E-09, 4.3315E-09,      
     C 4.1336E-09, 3.9632E-09, 3.8185E-09, 3.7080E-09, 3.6296E-09,      
     C 3.5804E-09, 3.5776E-09, 3.6253E-09, 3.7115E-09, 3.8151E-09,      
     C 3.9804E-09, 4.1742E-09, 4.3581E-09, 4.5306E-09, 4.7736E-09,      
     C 5.1297E-09, 5.5291E-09, 5.9125E-09, 6.4956E-09, 7.0362E-09,      
     C 7.5318E-09, 7.9947E-09, 8.6438E-09, 9.7227E-09, 1.0130E-08,      
     C 1.0549E-08, 1.1064E-08, 1.1702E-08, 1.2043E-08, 1.1781E-08,      
     C 1.1838E-08, 1.1917E-08, 1.2131E-08, 1.2476E-08, 1.3611E-08,      
     C 1.4360E-08, 1.5057E-08, 1.6247E-08, 1.7284E-08, 1.8420E-08,      
     C 1.8352E-08, 1.8722E-08, 1.9112E-08, 1.9092E-08, 1.9311E-08/      
      DATA S0851/                                                       
     C 1.9411E-08, 1.9884E-08, 2.0508E-08, 2.1510E-08, 2.3143E-08,      
     C 2.5050E-08, 2.7596E-08, 3.1231E-08, 3.6260E-08, 4.3410E-08,      
     C 5.2240E-08, 6.3236E-08, 7.7522E-08, 9.8688E-08, 1.1859E-07,      
     C 1.4341E-07, 1.6798E-07, 1.9825E-07, 2.2898E-07, 2.6257E-07,      
     C 2.9884E-07, 3.3247E-07, 3.4936E-07, 3.5583E-07, 3.7150E-07,      
     C 3.6580E-07, 3.7124E-07, 3.7030E-07, 4.1536E-07, 4.6656E-07,      
     C 4.6677E-07, 4.7507E-07, 4.9653E-07, 5.3795E-07, 5.4957E-07,      
     C 5.2238E-07, 5.4690E-07, 5.6569E-07, 5.9844E-07, 5.9835E-07,      
     C 5.6522E-07, 5.4123E-07, 4.7904E-07, 4.2851E-07, 3.5603E-07,      
     C 2.8932E-07, 2.3655E-07, 1.8592E-07, 1.4943E-07, 1.1971E-07/      
      DATA S0901/                                                       
     C 9.8482E-08, 8.3675E-08, 7.1270E-08, 6.2496E-08, 5.4999E-08,      
     C 4.9821E-08, 4.5387E-08, 4.1340E-08, 3.7453E-08, 3.3298E-08,      
     C 3.0120E-08, 2.7032E-08, 2.4236E-08, 2.1500E-08, 1.8988E-08,      
     C 1.7414E-08, 1.5706E-08, 1.4192E-08, 1.3204E-08, 1.1759E-08,      
     C 1.0737E-08, 9.6309E-09, 8.8179E-09, 8.2619E-09, 7.2264E-09,      
     C 6.4856E-09, 5.8037E-09, 5.2093E-09, 4.7205E-09, 4.1749E-09,      
     C 3.7852E-09, 3.3915E-09, 3.0089E-09, 2.7335E-09, 2.4398E-09,      
     C 2.2031E-09, 1.9786E-09, 1.7890E-09, 1.6266E-09, 1.4830E-09,      
     C 1.3576E-09, 1.2518E-09, 1.1587E-09, 1.0726E-09, 9.9106E-10,      
     C 9.1673E-10, 8.5084E-10, 7.9147E-10, 7.2882E-10, 6.7342E-10/      
      DATA S0951/                                                       
     C 6.2593E-10, 5.8294E-10, 5.4435E-10, 5.0997E-10, 4.7806E-10,      
     C 4.4931E-10, 4.2357E-10, 4.0023E-10, 3.7909E-10, 3.5999E-10,      
     C 3.4285E-10, 3.2776E-10, 3.1468E-10, 3.0377E-10, 2.9479E-10,      
     C 2.8877E-10, 2.8512E-10, 2.8617E-10, 2.8976E-10, 3.0001E-10,      
     C 3.1718E-10, 3.3898E-10, 3.5857E-10, 3.8358E-10, 4.3131E-10,      
     C 4.5741E-10, 4.6948E-10, 4.7594E-10, 4.9529E-10, 5.1563E-10,      
     C 4.9475E-10, 4.8369E-10, 4.8829E-10, 5.0047E-10, 5.0203E-10,      
     C 5.1954E-10, 5.5352E-10, 5.9928E-10, 6.7148E-10, 7.1121E-10,      
     C 7.4317E-10, 7.6039E-10, 7.8313E-10, 8.0684E-10, 7.8553E-10,      
     C 7.8312E-10, 7.8537E-10, 7.8872E-10, 8.0185E-10, 8.1004E-10/      
      DATA S1001/                                                       
     C 8.2608E-10, 8.2525E-10, 8.3857E-10, 8.7920E-10, 9.2451E-10,      
     C 9.8661E-10, 1.0629E-09, 1.1659E-09, 1.2922E-09, 1.4387E-09,      
     C 1.6254E-09, 1.8425E-09, 2.1428E-09, 2.5477E-09, 3.0379E-09,      
     C 3.7570E-09, 4.4354E-09, 5.1802E-09, 6.2769E-09, 7.4894E-09,      
     C 8.7474E-09, 9.8037E-09, 1.1582E-08, 1.3293E-08, 1.4471E-08,      
     C 1.5025E-08, 1.5580E-08, 1.6228E-08, 1.6413E-08, 1.6020E-08,      
     C 1.6393E-08, 1.7545E-08, 1.9590E-08, 2.1449E-08, 2.3856E-08,      
     C 2.7050E-08, 3.0214E-08, 3.3733E-08, 3.6487E-08, 3.9353E-08,      
     C 4.2660E-08, 4.6385E-08, 4.9955E-08, 5.5313E-08, 6.0923E-08,      
     C 6.8948E-08, 7.3649E-08, 8.2602E-08, 9.2212E-08, 9.9080E-08/      
      DATA S1051/                                                       
     C 1.1319E-07, 1.1790E-07, 1.2941E-07, 1.3199E-07, 1.3914E-07,      
     C 1.4843E-07, 1.5300E-07, 1.6419E-07, 1.7095E-07, 1.6988E-07,      
     C 1.6494E-07, 1.6327E-07, 1.6067E-07, 1.6909E-07, 1.7118E-07,      
     C 1.8106E-07, 1.9857E-07, 2.1696E-07, 2.3385E-07, 2.2776E-07,      
     C 2.1402E-07, 1.9882E-07, 1.7362E-07, 1.4308E-07, 1.1158E-07,      
     C 8.8781E-08, 6.8689E-08, 5.2062E-08, 4.0427E-08, 3.2669E-08,      
     C 2.7354E-08, 2.3200E-08, 2.0580E-08, 1.8676E-08, 1.7329E-08,      
     C 1.6621E-08, 1.6433E-08, 1.6953E-08, 1.7134E-08, 1.7948E-08,      
     C 1.9107E-08, 1.9875E-08, 2.1416E-08, 2.1556E-08, 2.2265E-08,      
     C 2.2171E-08, 2.2534E-08, 2.3029E-08, 2.2828E-08, 2.3143E-08/      
      DATA S1101/                                                       
     C 2.2965E-08, 2.2223E-08, 2.1108E-08, 2.0265E-08, 1.9516E-08,      
     C 1.9941E-08, 2.0312E-08, 2.1080E-08, 2.2611E-08, 2.4210E-08,      
     C 2.6069E-08, 2.5097E-08, 2.3318E-08, 2.1543E-08, 1.8942E-08,      
     C 1.5960E-08, 1.2386E-08, 9.9340E-09, 7.7502E-09, 5.9462E-09,      
     C 4.5113E-09, 3.5523E-09, 2.8844E-09, 2.3394E-09, 1.9584E-09,      
     C 1.6749E-09, 1.4624E-09, 1.2809E-09, 1.1359E-09, 1.0087E-09,      
     C 9.0166E-10, 8.1079E-10, 7.2219E-10, 6.4922E-10, 5.8803E-10,      
     C 5.3290E-10, 4.8590E-10, 4.4111E-10, 4.0184E-10, 3.6644E-10,      
     C 3.3529E-10, 3.0789E-10, 2.8286E-10, 2.6089E-10, 2.4125E-10,      
     C 2.2355E-10, 2.0783E-10, 1.9370E-10, 1.8088E-10, 1.6948E-10/      
      DATA S1151/                                                       
     C 1.5929E-10, 1.5013E-10, 1.4193E-10, 1.3470E-10, 1.2841E-10,      
     C 1.2307E-10, 1.1865E-10, 1.1502E-10, 1.1243E-10, 1.1099E-10,      
     C 1.1066E-10, 1.1216E-10, 1.1529E-10, 1.2171E-10, 1.3128E-10,      
     C 1.4153E-10, 1.5962E-10, 1.8048E-10, 2.0936E-10, 2.3165E-10,      
     C 2.5746E-10, 2.9600E-10, 3.3707E-10, 3.5267E-10, 3.5953E-10,      
     C 3.6822E-10, 3.8363E-10, 3.8286E-10, 3.5883E-10, 3.6154E-10,      
     C 3.6653E-10, 3.8507E-10, 4.0250E-10, 4.4435E-10, 4.9889E-10,      
     C 5.6932E-10, 6.3599E-10, 7.0281E-10, 7.5777E-10, 8.1279E-10,      
     C 8.8910E-10, 9.3400E-10, 1.0076E-09, 1.0945E-09, 1.1898E-09,      
     C 1.3108E-09, 1.4725E-09, 1.7028E-09, 1.9619E-09, 2.3527E-09/      
      DATA S1201/                                                       
     C 2.6488E-09, 3.0327E-09, 3.4396E-09, 3.8797E-09, 4.4115E-09,      
     C 4.6853E-09, 4.9553E-09, 4.9551E-09, 5.1062E-09, 5.0996E-09,      
     C 5.1119E-09, 5.2283E-09, 5.8297E-09, 6.3439E-09, 6.2675E-09,      
     C 6.3296E-09, 6.5173E-09, 7.1685E-09, 7.0528E-09, 6.8856E-09,      
     C 7.3182E-09, 7.6990E-09, 8.3461E-09, 8.1946E-09, 7.7153E-09,      
     C 7.2411E-09, 6.4511E-09, 5.7336E-09, 4.6105E-09, 3.6962E-09,      
     C 2.9944E-09, 2.4317E-09, 1.9399E-09, 1.5331E-09, 1.2633E-09,      
     C 1.0613E-09, 9.0136E-10, 7.9313E-10, 7.1543E-10, 6.6485E-10,      
     C 6.4225E-10, 6.3980E-10, 6.4598E-10, 6.7428E-10, 7.0270E-10,      
     C 7.4694E-10, 7.7946E-10, 7.9395E-10, 7.8716E-10, 7.6933E-10/      
      DATA S1251/                                                       
     C 7.6220E-10, 7.4825E-10, 7.4805E-10, 7.6511E-10, 7.6492E-10,      
     C 7.4103E-10, 7.1979E-10, 7.1686E-10, 7.3403E-10, 7.1142E-10,      
     C 7.0212E-10, 7.1548E-10, 7.5253E-10, 8.0444E-10, 8.2378E-10,      
     C 7.8004E-10, 7.1712E-10, 6.4978E-10, 5.7573E-10, 4.8675E-10,      
     C 3.7945E-10, 3.0118E-10, 2.4241E-10, 1.9100E-10, 1.4816E-10,      
     C 1.1567E-10, 9.4183E-11, 7.7660E-11, 6.5270E-11, 5.6616E-11,      
     C 4.9576E-11, 4.4137E-11, 3.9459E-11, 3.5759E-11, 3.2478E-11,      
     C 2.9419E-11, 2.6703E-11, 2.4365E-11, 2.2412E-11, 2.0606E-11,      
     C 1.9067E-11, 1.7800E-11, 1.6695E-11, 1.5729E-11, 1.4887E-11,      
     C 1.4135E-11, 1.3519E-11, 1.2992E-11, 1.2563E-11, 1.2223E-11/      
      DATA S1301/                                                       
     C 1.1962E-11, 1.1775E-11, 1.1657E-11, 1.1605E-11, 1.1619E-11,      
     C 1.1697E-11, 1.1839E-11, 1.2046E-11, 1.2319E-11, 1.2659E-11,      
     C 1.3070E-11, 1.3553E-11, 1.4113E-11, 1.4754E-11, 1.5480E-11,      
     C 1.6298E-11, 1.7214E-11, 1.8236E-11, 1.9372E-11, 2.0635E-11,      
     C 2.2036E-11, 2.3590E-11, 2.5317E-11, 2.7242E-11, 2.9400E-11,      
     C 3.1849E-11, 3.4654E-11, 3.7923E-11, 4.1695E-11, 4.6055E-11,      
     C 5.0940E-11, 5.5624E-11, 6.0667E-11, 6.6261E-11, 7.2692E-11,      
     C 7.9711E-11, 8.7976E-11, 9.6884E-11, 1.0775E-10, 1.2093E-10,      
     C 1.3531E-10, 1.5404E-10, 1.7315E-10, 1.9862E-10, 2.3341E-10,      
     C 2.7014E-10, 3.1716E-10, 3.6957E-10, 4.3233E-10, 5.2566E-10/      
      DATA S1351/                                                       
     C 6.2251E-10, 7.2149E-10, 8.3958E-10, 9.5931E-10, 1.1388E-09,      
     C 1.2973E-09, 1.4442E-09, 1.5638E-09, 1.6974E-09, 1.8489E-09,      
     C 1.9830E-09, 2.1720E-09, 2.3662E-09, 2.6987E-09, 3.1697E-09,      
     C 3.6907E-09, 4.2625E-09, 4.7946E-09, 5.3848E-09, 6.0897E-09,      
     C 6.4730E-09, 7.1483E-09, 7.7432E-09, 8.0851E-09, 8.5013E-09,      
     C 8.5909E-09, 9.1890E-09, 9.3124E-09, 9.5936E-09, 9.8787E-09,      
     C 9.9036E-09, 9.6712E-09, 9.2036E-09, 9.0466E-09, 8.9380E-09,      
     C 9.1815E-09, 9.5092E-09, 1.0027E-08, 1.0876E-08, 1.1744E-08,      
     C 1.1853E-08, 1.1296E-08, 1.0134E-08, 8.8245E-09, 7.3930E-09,      
     C 5.7150E-09, 4.4884E-09, 3.4027E-09, 2.6054E-09, 2.0790E-09/      
      DATA S1401/                                                       
     C 1.7267E-09, 1.4724E-09, 1.2722E-09, 1.1234E-09, 1.0186E-09,      
     C 9.4680E-10, 8.8854E-10, 8.5127E-10, 8.3157E-10, 8.2226E-10,      
     C 8.3395E-10, 8.3294E-10, 8.4725E-10, 8.8814E-10, 9.3697E-10,      
     C 1.0112E-09, 1.0412E-09, 1.0948E-09, 1.1810E-09, 1.2267E-09,      
     C 1.3690E-09, 1.4512E-09, 1.5568E-09, 1.6552E-09, 1.7321E-09,      
     C 1.8797E-09, 1.9210E-09, 1.9686E-09, 1.9917E-09, 1.9357E-09,      
     C 1.8486E-09, 1.7575E-09, 1.7113E-09, 1.7163E-09, 1.7623E-09,      
     C 1.8536E-09, 1.9765E-09, 2.1334E-09, 2.3237E-09, 2.3259E-09,      
     C 2.1833E-09, 1.9785E-09, 1.7308E-09, 1.4596E-09, 1.1198E-09,      
     C 8.7375E-10, 6.5381E-10, 4.8677E-10, 3.6756E-10, 2.9155E-10/      
      DATA S1451/                                                       
     C 2.3735E-10, 1.9590E-10, 1.6638E-10, 1.4549E-10, 1.2947E-10,      
     C 1.1511E-10, 1.0548E-10, 9.6511E-11, 9.0469E-11, 8.5170E-11,      
     C 7.7804E-11, 7.1971E-11, 6.6213E-11, 6.1063E-11, 5.5881E-11,      
     C 5.0508E-11, 4.5932E-11, 4.1997E-11, 3.7672E-11, 3.3972E-11,      
     C 3.0318E-11, 2.6769E-11, 2.3874E-11, 2.1336E-11, 1.9073E-11,      
     C 1.7313E-11, 1.5904E-11, 1.4684E-11, 1.3698E-11, 1.2873E-11,      
     C 1.2175E-11, 1.1542E-11, 1.1024E-11, 1.0602E-11, 1.0267E-11,      
     C 1.0012E-11, 9.8379E-12, 9.7482E-12, 9.7564E-12, 9.8613E-12,      
     C 1.0092E-11, 1.0418E-11, 1.0868E-11, 1.1585E-11, 1.2351E-11,      
     C 1.3372E-11, 1.4841E-11, 1.6457E-11, 1.8681E-11, 2.0550E-11/      
      DATA S1501/                                                       
     C 2.2912E-11, 2.5958E-11, 2.9137E-11, 3.2368E-11, 3.4848E-11,      
     C 3.8462E-11, 4.2190E-11, 4.5629E-11, 4.9022E-11, 5.4232E-11,      
     C 6.1900E-11, 7.1953E-11, 8.5368E-11, 9.9699E-11, 1.1734E-10,      
     C 1.4185E-10, 1.7017E-10, 1.9813E-10, 2.3859E-10, 2.7304E-10,      
     C 3.0971E-10, 3.5129E-10, 3.9405E-10, 4.5194E-10, 4.8932E-10,      
     C 5.2436E-10, 5.4098E-10, 5.5542E-10, 5.7794E-10, 5.6992E-10,      
     C 5.8790E-10, 6.1526E-10, 6.8034E-10, 6.7956E-10, 6.6864E-10,      
     C 6.9329E-10, 7.2971E-10, 7.6546E-10, 7.5078E-10, 7.8406E-10,      
     C 8.3896E-10, 9.0111E-10, 9.1994E-10, 8.7189E-10, 8.1426E-10,      
     C 7.3097E-10, 6.3357E-10, 5.1371E-10, 4.0936E-10, 3.2918E-10/      
      DATA S1551/                                                       
     C 2.6255E-10, 2.0724E-10, 1.6879E-10, 1.4165E-10, 1.1989E-10,      
     C 1.0125E-10, 8.9629E-11, 7.8458E-11, 6.8826E-11, 6.0935E-11,      
     C 5.5208E-11, 5.2262E-11, 5.0260E-11, 4.8457E-11, 4.7888E-11,      
     C 4.8032E-11, 5.0838E-11, 5.4668E-11, 5.5790E-11, 6.0056E-11,      
     C 6.3811E-11, 6.8848E-11, 7.4590E-11, 7.8249E-11, 8.3371E-11,      
     C 8.3641E-11, 8.6591E-11, 8.9599E-11, 9.3487E-11, 1.0066E-10,      
     C 1.0765E-10, 1.0851E-10, 1.0619E-10, 1.0557E-10, 1.0460E-10,      
     C 1.0796E-10, 1.0523E-10, 1.0674E-10, 1.1261E-10, 1.1431E-10,      
     C 1.1408E-10, 1.0901E-10, 9.9105E-11, 8.8077E-11, 6.9928E-11,      
     C 5.4595E-11, 4.5401E-11, 3.6313E-11, 2.6986E-11, 1.9463E-11/      
      DATA S1601/                                                       
     C 1.4577E-11, 1.1583E-11, 9.5492E-12, 8.0770E-12, 6.9642E-12,      
     C 6.0966E-12, 5.4046E-12, 4.8431E-12, 4.3815E-12, 3.9987E-12,      
     C 3.6790E-12, 3.4113E-12, 3.1868E-12, 2.9992E-12, 2.8434E-12,      
     C 2.7153E-12, 2.6120E-12, 2.5311E-12, 2.4705E-12, 2.4290E-12,      
     C 2.4053E-12, 2.3988E-12, 2.4087E-12, 2.4349E-12, 2.4771E-12,      
     C 2.5355E-12, 2.6103E-12, 2.7019E-12, 2.8110E-12, 2.9383E-12,      
     C 3.0848E-12, 3.2518E-12, 3.4405E-12, 3.6527E-12, 3.8902E-12,      
     C 4.1555E-12, 4.4510E-12, 4.7801E-12, 5.1462E-12, 5.5539E-12,      
     C 6.0086E-12, 6.5171E-12, 7.0884E-12, 7.7357E-12, 8.4831E-12,      
     C 9.3096E-12, 1.0282E-11, 1.1407E-11, 1.2690E-11, 1.4148E-11/      
      DATA S1651/                                                       
     C 1.5888E-11, 1.7992E-11, 2.0523E-11, 2.3342E-11, 2.6578E-11,      
     C 3.0909E-11, 3.6228E-11, 4.2053E-11, 4.9059E-11, 5.9273E-11,      
     C 7.0166E-11, 8.2298E-11, 9.7071E-11, 1.1673E-10, 1.4010E-10,      
     C 1.6621E-10, 2.0127E-10, 2.3586E-10, 2.7050E-10, 3.0950E-10,      
     C 3.6584E-10, 4.1278E-10, 4.6591E-10, 5.2220E-10, 5.5246E-10,      
     C 6.1500E-10, 6.5878E-10, 7.1167E-10, 7.9372E-10, 8.6975E-10,      
     C 9.6459E-10, 9.7368E-10, 9.8142E-10, 1.0202E-09, 1.0200E-09,      
     C 1.0356E-09, 1.0092E-09, 1.0269E-09, 1.0366E-09, 1.0490E-09,      
     C 1.0717E-09, 1.0792E-09, 1.1016E-09, 1.0849E-09, 1.0929E-09,      
     C 1.0971E-09, 1.0969E-09, 1.0460E-09, 9.2026E-10, 8.1113E-10/      
      DATA S1701/                                                       
     C 6.8635E-10, 5.5369E-10, 4.2908E-10, 3.3384E-10, 2.6480E-10,      
     C 2.0810E-10, 1.6915E-10, 1.4051E-10, 1.1867E-10, 1.0158E-10,      
     C 8.8990E-11, 7.9175E-11, 7.0440E-11, 6.3453E-11, 5.7009E-11,      
     C 5.1662E-11, 4.7219E-11, 4.3454E-11, 4.0229E-11, 3.7689E-11,      
     C 3.6567E-11, 3.5865E-11, 3.5955E-11, 3.5928E-11, 3.6298E-11,      
     C 3.7629E-11, 3.9300E-11, 4.1829E-11, 4.4806E-11, 5.0534E-11,      
     C 5.6672E-11, 6.2138E-11, 6.8678E-11, 7.6111E-11, 8.4591E-11,      
     C 9.2634E-11, 9.8085E-11, 1.0830E-10, 1.1949E-10, 1.2511E-10,      
     C 1.3394E-10, 1.3505E-10, 1.4342E-10, 1.4874E-10, 1.4920E-10,      
     C 1.5872E-10, 1.5972E-10, 1.5821E-10, 1.5425E-10, 1.4937E-10/      
      DATA S1751/                                                       
     C 1.5089E-10, 1.5521E-10, 1.6325E-10, 1.6924E-10, 1.8265E-10,      
     C 1.9612E-10, 2.0176E-10, 1.9359E-10, 1.7085E-10, 1.5197E-10,      
     C 1.2646E-10, 9.8552E-11, 7.4530E-11, 5.5052E-11, 4.2315E-11,      
     C 3.2736E-11, 2.6171E-11, 2.1909E-11, 1.8286E-11, 1.5752E-11,      
     C 1.3859E-11, 1.2288E-11, 1.1002E-11, 9.7534E-12, 8.8412E-12,      
     C 8.0169E-12, 7.2855E-12, 6.8734E-12, 6.4121E-12, 6.1471E-12,      
     C 5.7780E-12, 5.3478E-12, 4.9652E-12, 4.4043E-12, 3.9862E-12,      
     C 3.4684E-12, 2.9681E-12, 2.5791E-12, 2.2339E-12, 1.9247E-12,      
     C 1.6849E-12, 1.4863E-12, 1.3291E-12, 1.2021E-12, 1.0947E-12,      
     C 1.0015E-12, 9.1935E-13, 8.4612E-13, 7.8036E-13, 7.2100E-13/      
      DATA S1801/                                                       
     C 6.6718E-13, 6.1821E-13, 5.7353E-13, 5.3269E-13, 4.9526E-13,      
     C 4.6093E-13, 4.2937E-13, 4.0034E-13, 3.7361E-13, 3.4895E-13,      
     C 3.2621E-13, 3.0520E-13, 2.8578E-13, 2.6782E-13, 2.5120E-13,      
     C 2.3581E-13, 2.2154E-13, 2.0832E-13, 1.9605E-13, 1.8466E-13,      
     C 1.7408E-13, 1.6425E-13, 1.5511E-13, 1.4661E-13, 1.3869E-13,      
     C 1.3131E-13, 1.2444E-13, 1.1803E-13, 1.1205E-13, 1.0646E-13,      
     C 1.0124E-13, 9.6358E-14, 9.1789E-14, 8.7509E-14, 8.3498E-14,      
     C 7.9735E-14, 7.6202E-14, 7.2882E-14, 6.9760E-14, 6.6822E-14,      
     C 6.4053E-14, 6.1442E-14, 5.8978E-14, 5.6650E-14, 5.4448E-14,      
     C 5.2364E-14, 5.0389E-14, 4.8516E-14, 4.6738E-14, 4.5048E-14/      
      DATA S1851/                                                       
     C 4.3441E-14, 4.1911E-14, 4.0453E-14, 3.9063E-14, 3.7735E-14,      
     C 3.6467E-14, 3.5254E-14, 3.4093E-14, 3.2980E-14, 3.1914E-14,      
     C 3.0891E-14, 2.9909E-14, 2.8965E-14, 2.8058E-14, 2.7185E-14,      
     C 2.6344E-14, 2.5535E-14, 2.4755E-14, 2.4002E-14, 2.3276E-14,      
     C 2.2576E-14, 2.1899E-14, 2.1245E-14, 2.0613E-14, 2.0002E-14,      
     C 1.9411E-14, 1.8839E-14, 1.8285E-14, 1.7749E-14, 1.7230E-14,      
     C 1.6727E-14, 1.6240E-14, 1.5768E-14, 1.5310E-14, 1.4867E-14,      
     C 1.4436E-14, 1.4019E-14, 1.3614E-14, 1.3221E-14, 1.2840E-14,      
     C 1.2471E-14, 1.2112E-14, 1.1764E-14, 1.1425E-14, 1.1097E-14,      
     C 1.0779E-14, 1.0469E-14, 1.0169E-14, 9.8775E-15, 9.5943E-15/      
      DATA S1901/                                                       
     C 9.3193E-15, 9.0522E-15, 8.7928E-15, 8.5409E-15, 8.2962E-15,      
     C 8.0586E-15, 7.8278E-15, 7.6036E-15, 7.3858E-15, 7.1742E-15,      
     C 6.9687E-15, 6.7691E-15, 6.5752E-15, 6.3868E-15, 6.2038E-15,      
     C 6.0260E-15, 5.8533E-15, 5.6856E-15, 5.5226E-15, 5.3642E-15,      
     C 5.2104E-15, 5.0610E-15, 4.9158E-15, 4.7748E-15, 4.6378E-15,      
     C 4.5047E-15, 4.3753E-15, 4.2497E-15, 4.1277E-15, 4.0091E-15,      
     C 3.8939E-15, 3.7820E-15, 3.6733E-15, 3.5677E-15, 3.4651E-15,      
     C 3.3655E-15, 3.2686E-15, 3.1746E-15, 3.0832E-15, 2.9944E-15,      
     C 2.9082E-15, 2.8244E-15, 2.7431E-15, 2.6640E-15, 2.5872E-15,      
     C 2.5126E-15, 2.4401E-15, 2.3697E-15, 2.3014E-15, 2.2349E-15/      
      DATA S1951/                                                       
     C 2.1704E-15, 2.1077E-15, 2.0468E-15, 1.9877E-15, 1.9302E-15,      
     C 1.8744E-15, 1.8202E-15, 1.7675E-15, 1.7164E-15, 1.6667E-15,      
     C 1.6184E-15, 1.5716E-15, 1.5260E-15, 1.4818E-15, 1.4389E-15,      
     C 1.3971E-15, 1.3566E-15, 1.3172E-15, 1.2790E-15, 1.2419E-15,      
     C 1.2058E-15, 1.1708E-15, 1.1368E-15, 1.1037E-15, 1.0716E-15,      
     C 1.0405E-15, 1.0102E-15, 9.8079E-16, 9.5224E-16, 9.2451E-16,      
     C 8.9758E-16, 8.7142E-16, 8.4602E-16, 8.2136E-16, 7.9740E-16,      
     C 7.7414E-16, 7.5154E-16, 7.2961E-16, 7.0830E-16, 6.8761E-16,      
     C 6.6752E-16, 6.4801E-16, 6.2906E-16, 6.1066E-16, 5.9280E-16,      
     C 5.7545E-16, 5.5860E-16, 5.4224E-16, 5.2636E-16, 5.1094E-16/      
      DATA S2001/                                                       
     C 4.9596E-16/                                                      
C                                                                       
      END                                                               
      BLOCK DATA SF296                                                  
C>    BLOCK DATA                                                        
C               06/28/82                                                
C               UNITS OF (CM**3/MOL) * 1.E-20                           
      COMMON /SH2O/ V1,V2,DV,NPT,S0000(2),                              
     1      S0001(50),S0051(50),S0101(50),S0151(50),S0201(50),S0251(50),
     2      S0301(50),S0351(50),S0401(50),S0451(50),S0501(50),S0551(50),
     3      S0601(50),S0651(50),S0701(50),S0751(50),S0801(50),S0851(50),
     4      S0901(50),S0951(50),S1001(50),S1051(50),S1101(50),S1151(50),
     5      S1201(50),S1251(50),S1301(50),S1351(50),S1401(50),S1451(50),
     6      S1501(50),S1551(50),S1601(50),S1651(50),S1701(50),S1751(50),
     7      S1801(50),S1851(50),S1901(50),S1951(50),S2001(1)            
C                                                                       
C                                                                       
       DATA V1,V2,DV,NPT /                                              
     1      -20.0,     20000.0,       10.0,  2003/                      
C                                                                       
C                                                                       
      DATA S0000/ 1.1109E-01 ,1.0573E-01/                               
      DATA S0001/                                                       
     C 1.0162E-01, 1.0573E-01, 1.1109E-01, 1.2574E-01, 1.3499E-01,      
     C 1.4327E-01, 1.5065E-01, 1.5164E-01, 1.5022E-01, 1.3677E-01,      
     C 1.3115E-01, 1.2253E-01, 1.1271E-01, 1.0070E-01, 8.7495E-02,      
     C 8.0118E-02, 6.9940E-02, 6.2034E-02, 5.6051E-02, 4.7663E-02,      
     C 4.2450E-02, 3.6690E-02, 3.3441E-02, 3.0711E-02, 2.5205E-02,      
     C 2.2113E-02, 1.8880E-02, 1.6653E-02, 1.4626E-02, 1.2065E-02,      
     C 1.0709E-02, 9.1783E-03, 7.7274E-03, 6.7302E-03, 5.6164E-03,      
     C 4.9089E-03, 4.1497E-03, 3.5823E-03, 3.1124E-03, 2.6414E-03,      
     C 2.3167E-03, 2.0156E-03, 1.7829E-03, 1.5666E-03, 1.3928E-03,      
     C 1.2338E-03, 1.0932E-03, 9.7939E-04, 8.8241E-04, 7.9173E-04/      
      DATA S0051/                                                       
     C 7.1296E-04, 6.4179E-04, 5.8031E-04, 5.2647E-04, 4.7762E-04,      
     C 4.3349E-04, 3.9355E-04, 3.5887E-04, 3.2723E-04, 2.9919E-04,      
     C 2.7363E-04, 2.5013E-04, 2.2876E-04, 2.0924E-04, 1.9193E-04,      
     C 1.7618E-04, 1.6188E-04, 1.4891E-04, 1.3717E-04, 1.2647E-04,      
     C 1.1671E-04, 1.0786E-04, 9.9785E-05, 9.2350E-05, 8.5539E-05,      
     C 7.9377E-05, 7.3781E-05, 6.8677E-05, 6.3993E-05, 5.9705E-05,      
     C 5.5788E-05, 5.2196E-05, 4.8899E-05, 4.5865E-05, 4.3079E-05,      
     C 4.0526E-05, 3.8182E-05, 3.6025E-05, 3.4038E-05, 3.2203E-05,      
     C 3.0511E-05, 2.8949E-05, 2.7505E-05, 2.6170E-05, 2.4933E-05,      
     C 2.3786E-05, 2.2722E-05, 2.1736E-05, 2.0819E-05, 1.9968E-05/      
      DATA S0101/                                                       
     C 1.9178E-05, 1.8442E-05, 1.7760E-05, 1.7127E-05, 1.6541E-05,      
     C 1.5997E-05, 1.5495E-05, 1.5034E-05, 1.4614E-05, 1.4230E-05,      
     C 1.3883E-05, 1.3578E-05, 1.3304E-05, 1.3069E-05, 1.2876E-05,      
     C 1.2732E-05, 1.2626E-05, 1.2556E-05, 1.2544E-05, 1.2604E-05,      
     C 1.2719E-05, 1.2883E-05, 1.3164E-05, 1.3581E-05, 1.4187E-05,      
     C 1.4866E-05, 1.5669E-05, 1.6717E-05, 1.8148E-05, 2.0268E-05,      
     C 2.2456E-05, 2.5582E-05, 2.9183E-05, 3.3612E-05, 3.9996E-05,      
     C 4.6829E-05, 5.5055E-05, 6.5897E-05, 7.5360E-05, 8.7213E-05,      
     C 1.0046E-04, 1.1496E-04, 1.2943E-04, 1.5049E-04, 1.6973E-04,      
     C 1.8711E-04, 2.0286E-04, 2.2823E-04, 2.6780E-04, 2.8766E-04/      
      DATA S0151/                                                       
     C 3.1164E-04, 3.3640E-04, 3.6884E-04, 3.9159E-04, 3.8712E-04,      
     C 3.7433E-04, 3.4503E-04, 3.1003E-04, 2.8027E-04, 2.5253E-04,      
     C 2.3408E-04, 2.2836E-04, 2.4442E-04, 2.7521E-04, 2.9048E-04,      
     C 3.0489E-04, 3.2646E-04, 3.3880E-04, 3.3492E-04, 3.0987E-04,      
     C 2.9482E-04, 2.8711E-04, 2.6068E-04, 2.2683E-04, 1.9996E-04,      
     C 1.7788E-04, 1.6101E-04, 1.3911E-04, 1.2013E-04, 1.0544E-04,      
     C 9.4224E-05, 8.1256E-05, 7.3667E-05, 6.2233E-05, 5.5906E-05,      
     C 5.1619E-05, 4.5140E-05, 4.0273E-05, 3.3268E-05, 3.0258E-05,      
     C 2.6440E-05, 2.3103E-05, 2.0749E-05, 1.8258E-05, 1.6459E-05,      
     C 1.4097E-05, 1.2052E-05, 1.0759E-05, 9.1400E-06, 8.1432E-06/      
      DATA S0201/                                                       
     C 7.1460E-06, 6.4006E-06, 5.6995E-06, 4.9372E-06, 4.4455E-06,      
     C 3.9033E-06, 3.4740E-06, 3.1269E-06, 2.8059E-06, 2.5558E-06,      
     C 2.2919E-06, 2.0846E-06, 1.8983E-06, 1.7329E-06, 1.5929E-06,      
     C 1.4631E-06, 1.3513E-06, 1.2461E-06, 1.1519E-06, 1.0682E-06,      
     C 9.9256E-07, 9.2505E-07, 8.6367E-07, 8.0857E-07, 7.5674E-07,      
     C 7.0934E-07, 6.6580E-07, 6.2580E-07, 5.8853E-07, 5.5333E-07,      
     C 5.2143E-07, 4.9169E-07, 4.6431E-07, 4.3898E-07, 4.1564E-07,      
     C 3.9405E-07, 3.7403E-07, 3.5544E-07, 3.3819E-07, 3.2212E-07,      
     C 3.0714E-07, 2.9313E-07, 2.8003E-07, 2.6777E-07, 2.5628E-07,      
     C 2.4551E-07, 2.3540E-07, 2.2591E-07, 2.1701E-07, 2.0866E-07/      
      DATA S0251/                                                       
     C 2.0082E-07, 1.9349E-07, 1.8665E-07, 1.8027E-07, 1.7439E-07,      
     C 1.6894E-07, 1.6400E-07, 1.5953E-07, 1.5557E-07, 1.5195E-07,      
     C 1.4888E-07, 1.4603E-07, 1.4337E-07, 1.4093E-07, 1.3828E-07,      
     C 1.3569E-07, 1.3270E-07, 1.2984E-07, 1.2714E-07, 1.2541E-07,      
     C 1.2399E-07, 1.2102E-07, 1.1878E-07, 1.1728E-07, 1.1644E-07,      
     C 1.1491E-07, 1.1305E-07, 1.1235E-07, 1.1228E-07, 1.1224E-07,      
     C 1.1191E-07, 1.1151E-07, 1.1098E-07, 1.1068E-07, 1.1109E-07,      
     C 1.1213E-07, 1.1431E-07, 1.1826E-07, 1.2322E-07, 1.3025E-07,      
     C 1.4066E-07, 1.5657E-07, 1.7214E-07, 1.9449E-07, 2.2662E-07,      
     C 2.6953E-07, 3.1723E-07, 3.7028E-07, 4.4482E-07, 5.3852E-07/      
      DATA S0301/                                                       
     C 6.2639E-07, 7.2175E-07, 7.7626E-07, 8.7248E-07, 9.6759E-07,      
     C 1.0102E-06, 1.0620E-06, 1.1201E-06, 1.2107E-06, 1.2998E-06,      
     C 1.3130E-06, 1.2856E-06, 1.2350E-06, 1.1489E-06, 1.0819E-06,      
     C 1.0120E-06, 9.4795E-07, 9.2858E-07, 9.8060E-07, 1.0999E-06,      
     C 1.1967E-06, 1.2672E-06, 1.3418E-06, 1.3864E-06, 1.4330E-06,      
     C 1.4592E-06, 1.4598E-06, 1.4774E-06, 1.4726E-06, 1.4820E-06,      
     C 1.5050E-06, 1.4984E-06, 1.5181E-06, 1.5888E-06, 1.6850E-06,      
     C 1.7690E-06, 1.9277E-06, 2.1107E-06, 2.3068E-06, 2.5347E-06,      
     C 2.8069E-06, 3.1345E-06, 3.5822E-06, 3.9051E-06, 4.3422E-06,      
     C 4.8704E-06, 5.5351E-06, 6.3454E-06, 7.2690E-06, 8.2974E-06/      
      DATA S0351/                                                       
     C 9.7609E-06, 1.1237E-05, 1.3187E-05, 1.5548E-05, 1.8784E-05,      
     C 2.1694E-05, 2.5487E-05, 3.0092E-05, 3.5385E-05, 4.2764E-05,      
     C 4.9313E-05, 5.5800E-05, 6.2968E-05, 7.1060E-05, 7.7699E-05,      
     C 8.7216E-05, 8.9335E-05, 9.2151E-05, 9.2779E-05, 9.4643E-05,      
     C 9.7978E-05, 1.0008E-04, 1.0702E-04, 1.1026E-04, 1.0828E-04,      
     C 1.0550E-04, 1.0432E-04, 1.0428E-04, 9.8980E-05, 9.4992E-05,      
     C 9.5159E-05, 1.0058E-04, 1.0738E-04, 1.1550E-04, 1.1229E-04,      
     C 1.0596E-04, 1.0062E-04, 9.1742E-05, 8.4492E-05, 6.8099E-05,      
     C 5.6295E-05, 4.6502E-05, 3.8071E-05, 3.0721E-05, 2.3297E-05,      
     C 1.8688E-05, 1.4830E-05, 1.2049E-05, 9.6754E-06, 7.9192E-06/      
      DATA S0401/                                                       
     C 6.6673E-06, 5.6468E-06, 4.8904E-06, 4.2289E-06, 3.6880E-06,      
     C 3.2396E-06, 2.8525E-06, 2.5363E-06, 2.2431E-06, 1.9949E-06,      
     C 1.7931E-06, 1.6164E-06, 1.4431E-06, 1.2997E-06, 1.1559E-06,      
     C 1.0404E-06, 9.4300E-07, 8.4597E-07, 7.6133E-07, 6.8623E-07,      
     C 6.2137E-07, 5.6345E-07, 5.1076E-07, 4.6246E-07, 4.1906E-07,      
     C 3.8063E-07, 3.4610E-07, 3.1554E-07, 2.8795E-07, 2.6252E-07,      
     C 2.3967E-07, 2.1901E-07, 2.0052E-07, 1.8384E-07, 1.6847E-07,      
     C 1.5459E-07, 1.4204E-07, 1.3068E-07, 1.2036E-07, 1.1095E-07,      
     C 1.0237E-07, 9.4592E-08, 8.7530E-08, 8.1121E-08, 7.5282E-08,      
     C 6.9985E-08, 6.5189E-08, 6.0874E-08, 5.6989E-08, 5.3530E-08/      
      DATA S0451/                                                       
     C 5.0418E-08, 4.7745E-08, 4.5367E-08, 4.3253E-08, 4.1309E-08,      
     C 3.9695E-08, 3.8094E-08, 3.6482E-08, 3.4897E-08, 3.3500E-08,      
     C 3.2302E-08, 3.0854E-08, 2.9698E-08, 2.8567E-08, 2.7600E-08,      
     C 2.6746E-08, 2.5982E-08, 2.5510E-08, 2.5121E-08, 2.4922E-08,      
     C 2.4909E-08, 2.5013E-08, 2.5216E-08, 2.5589E-08, 2.6049E-08,      
     C 2.6451E-08, 2.6978E-08, 2.7687E-08, 2.8600E-08, 2.9643E-08,      
     C 3.0701E-08, 3.2058E-08, 3.3695E-08, 3.5558E-08, 3.7634E-08,      
     C 3.9875E-08, 4.2458E-08, 4.5480E-08, 4.8858E-08, 5.2599E-08,      
     C 5.7030E-08, 6.2067E-08, 6.7911E-08, 7.4579E-08, 8.1902E-08,      
     C 8.9978E-08, 9.9870E-08, 1.1102E-07, 1.2343E-07, 1.3732E-07/      
      DATA S0501/                                                       
     C 1.5394E-07, 1.7318E-07, 1.9383E-07, 2.1819E-07, 2.4666E-07,      
     C 2.8109E-07, 3.2236E-07, 3.7760E-07, 4.4417E-07, 5.2422E-07,      
     C 6.1941E-07, 7.4897E-07, 9.2041E-07, 1.1574E-06, 1.4126E-06,      
     C 1.7197E-06, 2.1399E-06, 2.6266E-06, 3.3424E-06, 3.8418E-06,      
     C 4.5140E-06, 5.0653E-06, 5.8485E-06, 6.5856E-06, 6.8937E-06,      
     C 6.9121E-06, 6.9005E-06, 6.9861E-06, 6.8200E-06, 6.6089E-06,      
     C 6.5809E-06, 7.3496E-06, 8.0311E-06, 8.3186E-06, 8.4260E-06,      
     C 9.0644E-06, 9.4965E-06, 9.4909E-06, 9.0160E-06, 9.1494E-06,      
     C 9.3629E-06, 9.5944E-06, 9.5459E-06, 8.9919E-06, 8.6040E-06,      
     C 7.8613E-06, 7.1567E-06, 6.2677E-06, 5.1899E-06, 4.4188E-06/      
      DATA S0551/                                                       
     C 3.7167E-06, 3.0636E-06, 2.5573E-06, 2.0317E-06, 1.6371E-06,      
     C 1.3257E-06, 1.0928E-06, 8.9986E-07, 7.4653E-07, 6.1111E-07,      
     C 5.1395E-07, 4.3500E-07, 3.7584E-07, 3.2633E-07, 2.8413E-07,      
     C 2.4723E-07, 2.1709E-07, 1.9294E-07, 1.7258E-07, 1.5492E-07,      
     C 1.3820E-07, 1.2389E-07, 1.1189E-07, 1.0046E-07, 9.0832E-08,      
     C 8.2764E-08, 7.4191E-08, 6.7085E-08, 6.0708E-08, 5.4963E-08,      
     C 4.9851E-08, 4.5044E-08, 4.0916E-08, 3.7220E-08, 3.3678E-08,      
     C 3.0663E-08, 2.7979E-08, 2.5495E-08, 2.3286E-08, 2.1233E-08,      
     C 1.9409E-08, 1.7770E-08, 1.6260E-08, 1.4885E-08, 1.3674E-08,      
     C 1.2543E-08, 1.1551E-08, 1.0655E-08, 9.8585E-09, 9.1398E-09/      
      DATA S0601/                                                       
     C 8.4806E-09, 7.8899E-09, 7.3547E-09, 6.8670E-09, 6.4131E-09,      
     C 5.9930E-09, 5.6096E-09, 5.2592E-09, 4.9352E-09, 4.6354E-09,      
     C 4.3722E-09, 4.1250E-09, 3.9081E-09, 3.7118E-09, 3.5372E-09,      
     C 3.3862E-09, 3.2499E-09, 3.1324E-09, 3.0313E-09, 2.9438E-09,      
     C 2.8686E-09, 2.8050E-09, 2.7545E-09, 2.7149E-09, 2.6907E-09,      
     C 2.6724E-09, 2.6649E-09, 2.6642E-09, 2.6725E-09, 2.6871E-09,      
     C 2.7056E-09, 2.7357E-09, 2.7781E-09, 2.8358E-09, 2.9067E-09,      
     C 2.9952E-09, 3.1020E-09, 3.2253E-09, 3.3647E-09, 3.5232E-09,      
     C 3.7037E-09, 3.9076E-09, 4.1385E-09, 4.3927E-09, 4.6861E-09,      
     C 5.0238E-09, 5.4027E-09, 5.8303E-09, 6.3208E-09, 6.8878E-09/      
      DATA S0651/                                                       
     C 7.5419E-09, 8.3130E-09, 9.1952E-09, 1.0228E-08, 1.1386E-08,      
     C 1.2792E-08, 1.4521E-08, 1.6437E-08, 1.8674E-08, 2.1160E-08,      
     C 2.4506E-08, 2.8113E-08, 3.2636E-08, 3.7355E-08, 4.2234E-08,      
     C 4.9282E-08, 5.7358E-08, 6.6743E-08, 7.8821E-08, 9.4264E-08,      
     C 1.1542E-07, 1.3684E-07, 1.6337E-07, 2.0056E-07, 2.3252E-07,      
     C 2.6127E-07, 2.9211E-07, 3.3804E-07, 3.7397E-07, 3.8205E-07,      
     C 3.8810E-07, 3.9499E-07, 3.9508E-07, 3.7652E-07, 3.5859E-07,      
     C 3.6198E-07, 3.7871E-07, 4.0925E-07, 4.2717E-07, 4.8241E-07,      
     C 5.2008E-07, 5.6530E-07, 5.9531E-07, 6.1994E-07, 6.5080E-07,      
     C 6.6355E-07, 6.9193E-07, 6.9930E-07, 7.3058E-07, 7.4678E-07/      
      DATA S0701/                                                       
     C 7.9193E-07, 8.3627E-07, 9.1267E-07, 1.0021E-06, 1.1218E-06,      
     C 1.2899E-06, 1.4447E-06, 1.7268E-06, 2.0025E-06, 2.3139E-06,      
     C 2.5599E-06, 2.8920E-06, 3.3059E-06, 3.5425E-06, 3.9522E-06,      
     C 4.0551E-06, 4.2818E-06, 4.2892E-06, 4.4210E-06, 4.5614E-06,      
     C 4.6739E-06, 4.9482E-06, 5.1118E-06, 5.0986E-06, 4.9417E-06,      
     C 4.9022E-06, 4.8449E-06, 4.8694E-06, 4.8111E-06, 4.9378E-06,      
     C 5.3231E-06, 5.7362E-06, 6.2350E-06, 6.0951E-06, 5.7281E-06,      
     C 5.4585E-06, 4.9032E-06, 4.3009E-06, 3.4776E-06, 2.8108E-06,      
     C 2.2993E-06, 1.7999E-06, 1.3870E-06, 1.0750E-06, 8.5191E-07,      
     C 6.7951E-07, 5.5336E-07, 4.6439E-07, 4.0243E-07, 3.5368E-07/      
      DATA S0751/                                                       
     C 3.1427E-07, 2.7775E-07, 2.4486E-07, 2.1788E-07, 1.9249E-07,      
     C 1.7162E-07, 1.5115E-07, 1.3478E-07, 1.2236E-07, 1.1139E-07,      
     C 1.0092E-07, 9.0795E-08, 8.2214E-08, 7.4691E-08, 6.7486E-08,      
     C 6.0414E-08, 5.4584E-08, 4.8754E-08, 4.3501E-08, 3.8767E-08,      
     C 3.4363E-08, 3.0703E-08, 2.7562E-08, 2.4831E-08, 2.2241E-08,      
     C 1.9939E-08, 1.8049E-08, 1.6368E-08, 1.4863E-08, 1.3460E-08,      
     C 1.2212E-08, 1.1155E-08, 1.0185E-08, 9.3417E-09, 8.5671E-09,      
     C 7.8292E-09, 7.1749E-09, 6.5856E-09, 6.0588E-09, 5.5835E-09,      
     C 5.1350E-09, 4.7395E-09, 4.3771E-09, 4.0476E-09, 3.7560E-09,      
     C 3.4861E-09, 3.2427E-09, 3.0240E-09, 2.8278E-09, 2.6531E-09/      
      DATA S0801/                                                       
     C 2.4937E-09, 2.3511E-09, 2.2245E-09, 2.1133E-09, 2.0159E-09,      
     C 1.9330E-09, 1.8669E-09, 1.8152E-09, 1.7852E-09, 1.7752E-09,      
     C 1.7823E-09, 1.8194E-09, 1.8866E-09, 1.9759E-09, 2.0736E-09,      
     C 2.2083E-09, 2.3587E-09, 2.4984E-09, 2.6333E-09, 2.8160E-09,      
     C 3.0759E-09, 3.3720E-09, 3.6457E-09, 4.0668E-09, 4.4541E-09,      
     C 4.7976E-09, 5.0908E-09, 5.4811E-09, 6.1394E-09, 6.3669E-09,      
     C 6.5714E-09, 6.8384E-09, 7.1918E-09, 7.3741E-09, 7.2079E-09,      
     C 7.2172E-09, 7.2572E-09, 7.3912E-09, 7.6188E-09, 8.3291E-09,      
     C 8.7885E-09, 9.2412E-09, 1.0021E-08, 1.0752E-08, 1.1546E-08,      
     C 1.1607E-08, 1.1949E-08, 1.2346E-08, 1.2516E-08, 1.2826E-08/      
      DATA S0851/                                                       
     C 1.3053E-08, 1.3556E-08, 1.4221E-08, 1.5201E-08, 1.6661E-08,      
     C 1.8385E-08, 2.0585E-08, 2.3674E-08, 2.7928E-08, 3.3901E-08,      
     C 4.1017E-08, 4.9595E-08, 6.0432E-08, 7.6304E-08, 9.0764E-08,      
     C 1.0798E-07, 1.2442E-07, 1.4404E-07, 1.6331E-07, 1.8339E-07,      
     C 2.0445E-07, 2.2288E-07, 2.3083E-07, 2.3196E-07, 2.3919E-07,      
     C 2.3339E-07, 2.3502E-07, 2.3444E-07, 2.6395E-07, 2.9928E-07,      
     C 3.0025E-07, 3.0496E-07, 3.1777E-07, 3.4198E-07, 3.4739E-07,      
     C 3.2696E-07, 3.4100E-07, 3.5405E-07, 3.7774E-07, 3.8285E-07,      
     C 3.6797E-07, 3.5800E-07, 3.2283E-07, 2.9361E-07, 2.4881E-07,      
     C 2.0599E-07, 1.7121E-07, 1.3641E-07, 1.1111E-07, 8.9413E-08/      
      DATA S0901/                                                       
     C 7.3455E-08, 6.2078E-08, 5.2538E-08, 4.5325E-08, 3.9005E-08,      
     C 3.4772E-08, 3.1203E-08, 2.8132E-08, 2.5250E-08, 2.2371E-08,      
     C 2.0131E-08, 1.7992E-08, 1.6076E-08, 1.4222E-08, 1.2490E-08,      
     C 1.1401E-08, 1.0249E-08, 9.2279E-09, 8.5654E-09, 7.6227E-09,      
     C 6.9648E-09, 6.2466E-09, 5.7252E-09, 5.3800E-09, 4.6960E-09,      
     C 4.2194E-09, 3.7746E-09, 3.3813E-09, 3.0656E-09, 2.6885E-09,      
     C 2.4311E-09, 2.1572E-09, 1.8892E-09, 1.7038E-09, 1.4914E-09,      
     C 1.3277E-09, 1.1694E-09, 1.0391E-09, 9.2779E-10, 8.3123E-10,      
     C 7.4968E-10, 6.8385E-10, 6.2915E-10, 5.7784E-10, 5.2838E-10,      
     C 4.8382E-10, 4.4543E-10, 4.1155E-10, 3.7158E-10, 3.3731E-10/      
      DATA S0951/                                                       
     C 3.0969E-10, 2.8535E-10, 2.6416E-10, 2.4583E-10, 2.2878E-10,      
     C 2.1379E-10, 2.0073E-10, 1.8907E-10, 1.7866E-10, 1.6936E-10,      
     C 1.6119E-10, 1.5424E-10, 1.4847E-10, 1.4401E-10, 1.4068E-10,      
     C 1.3937E-10, 1.3943E-10, 1.4281E-10, 1.4766E-10, 1.5701E-10,      
     C 1.7079E-10, 1.8691E-10, 2.0081E-10, 2.1740E-10, 2.4847E-10,      
     C 2.6463E-10, 2.7087E-10, 2.7313E-10, 2.8352E-10, 2.9511E-10,      
     C 2.8058E-10, 2.7227E-10, 2.7356E-10, 2.8012E-10, 2.8034E-10,      
     C 2.9031E-10, 3.1030E-10, 3.3745E-10, 3.8152E-10, 4.0622E-10,      
     C 4.2673E-10, 4.3879E-10, 4.5488E-10, 4.7179E-10, 4.6140E-10,      
     C 4.6339E-10, 4.6716E-10, 4.7024E-10, 4.7931E-10, 4.8503E-10/      
      DATA S1001/                                                       
     C 4.9589E-10, 4.9499E-10, 5.0363E-10, 5.3184E-10, 5.6451E-10,      
     C 6.0932E-10, 6.6469E-10, 7.4076E-10, 8.3605E-10, 9.4898E-10,      
     C 1.0935E-09, 1.2593E-09, 1.4913E-09, 1.8099E-09, 2.1842E-09,      
     C 2.7284E-09, 3.2159E-09, 3.7426E-09, 4.5226E-09, 5.3512E-09,      
     C 6.1787E-09, 6.8237E-09, 7.9421E-09, 9.0002E-09, 9.6841E-09,      
     C 9.9558E-09, 1.0232E-08, 1.0591E-08, 1.0657E-08, 1.0441E-08,      
     C 1.0719E-08, 1.1526E-08, 1.2962E-08, 1.4336E-08, 1.6150E-08,      
     C 1.8417E-08, 2.0725E-08, 2.3426E-08, 2.5619E-08, 2.7828E-08,      
     C 3.0563E-08, 3.3438E-08, 3.6317E-08, 4.0400E-08, 4.4556E-08,      
     C 5.0397E-08, 5.3315E-08, 5.9185E-08, 6.5311E-08, 6.9188E-08/      
      DATA S1051/                                                       
     C 7.7728E-08, 7.9789E-08, 8.6598E-08, 8.7768E-08, 9.1773E-08,      
     C 9.7533E-08, 1.0007E-07, 1.0650E-07, 1.0992E-07, 1.0864E-07,      
     C 1.0494E-07, 1.0303E-07, 1.0031E-07, 1.0436E-07, 1.0537E-07,      
     C 1.1184E-07, 1.2364E-07, 1.3651E-07, 1.4881E-07, 1.4723E-07,      
     C 1.4118E-07, 1.3371E-07, 1.1902E-07, 1.0007E-07, 7.9628E-08,      
     C 6.4362E-08, 5.0243E-08, 3.8133E-08, 2.9400E-08, 2.3443E-08,      
     C 1.9319E-08, 1.6196E-08, 1.4221E-08, 1.2817E-08, 1.1863E-08,      
     C 1.1383E-08, 1.1221E-08, 1.1574E-08, 1.1661E-08, 1.2157E-08,      
     C 1.2883E-08, 1.3295E-08, 1.4243E-08, 1.4240E-08, 1.4614E-08,      
     C 1.4529E-08, 1.4685E-08, 1.4974E-08, 1.4790E-08, 1.4890E-08/      
      DATA S1101/                                                       
     C 1.4704E-08, 1.4142E-08, 1.3374E-08, 1.2746E-08, 1.2172E-08,      
     C 1.2336E-08, 1.2546E-08, 1.3065E-08, 1.4090E-08, 1.5215E-08,      
     C 1.6540E-08, 1.6144E-08, 1.5282E-08, 1.4358E-08, 1.2849E-08,      
     C 1.0998E-08, 8.6956E-09, 7.0881E-09, 5.5767E-09, 4.2792E-09,      
     C 3.2233E-09, 2.5020E-09, 1.9985E-09, 1.5834E-09, 1.3015E-09,      
     C 1.0948E-09, 9.4141E-10, 8.1465E-10, 7.1517E-10, 6.2906E-10,      
     C 5.5756E-10, 4.9805E-10, 4.3961E-10, 3.9181E-10, 3.5227E-10,      
     C 3.1670E-10, 2.8667E-10, 2.5745E-10, 2.3212E-10, 2.0948E-10,      
     C 1.8970E-10, 1.7239E-10, 1.5659E-10, 1.4301E-10, 1.3104E-10,      
     C 1.2031E-10, 1.1095E-10, 1.0262E-10, 9.5130E-11, 8.8595E-11/      
      DATA S1151/                                                       
     C 8.2842E-11, 7.7727E-11, 7.3199E-11, 6.9286E-11, 6.5994E-11,      
     C 6.3316E-11, 6.1244E-11, 5.9669E-11, 5.8843E-11, 5.8832E-11,      
     C 5.9547E-11, 6.1635E-11, 6.4926E-11, 7.0745E-11, 7.8802E-11,      
     C 8.6724E-11, 1.0052E-10, 1.1575E-10, 1.3626E-10, 1.5126E-10,      
     C 1.6751E-10, 1.9239E-10, 2.1748E-10, 2.2654E-10, 2.2902E-10,      
     C 2.3240E-10, 2.4081E-10, 2.3930E-10, 2.2378E-10, 2.2476E-10,      
     C 2.2791E-10, 2.4047E-10, 2.5305E-10, 2.8073E-10, 3.1741E-10,      
     C 3.6592E-10, 4.1495E-10, 4.6565E-10, 5.0990E-10, 5.5607E-10,      
     C 6.1928E-10, 6.6779E-10, 7.3350E-10, 8.1434E-10, 8.9635E-10,      
     C 9.9678E-10, 1.1256E-09, 1.2999E-09, 1.4888E-09, 1.7642E-09/      
      DATA S1201/                                                       
     C 1.9606E-09, 2.2066E-09, 2.4601E-09, 2.7218E-09, 3.0375E-09,      
     C 3.1591E-09, 3.2852E-09, 3.2464E-09, 3.3046E-09, 3.2710E-09,      
     C 3.2601E-09, 3.3398E-09, 3.7446E-09, 4.0795E-09, 4.0284E-09,      
     C 4.0584E-09, 4.1677E-09, 4.5358E-09, 4.4097E-09, 4.2744E-09,      
     C 4.5449E-09, 4.8147E-09, 5.2656E-09, 5.2476E-09, 5.0275E-09,      
     C 4.7968E-09, 4.3654E-09, 3.9530E-09, 3.2447E-09, 2.6489E-09,      
     C 2.1795E-09, 1.7880E-09, 1.4309E-09, 1.1256E-09, 9.1903E-10,      
     C 7.6533E-10, 6.3989E-10, 5.5496E-10, 4.9581E-10, 4.5722E-10,      
     C 4.3898E-10, 4.3505E-10, 4.3671E-10, 4.5329E-10, 4.6827E-10,      
     C 4.9394E-10, 5.1122E-10, 5.1649E-10, 5.0965E-10, 4.9551E-10/      
      DATA S1251/                                                       
     C 4.8928E-10, 4.7947E-10, 4.7989E-10, 4.9071E-10, 4.8867E-10,      
     C 4.7260E-10, 4.5756E-10, 4.5400E-10, 4.5993E-10, 4.4042E-10,      
     C 4.3309E-10, 4.4182E-10, 4.6735E-10, 5.0378E-10, 5.2204E-10,      
     C 5.0166E-10, 4.6799E-10, 4.3119E-10, 3.8803E-10, 3.3291E-10,      
     C 2.6289E-10, 2.1029E-10, 1.7011E-10, 1.3345E-10, 1.0224E-10,      
     C 7.8207E-11, 6.2451E-11, 5.0481E-11, 4.1507E-11, 3.5419E-11,      
     C 3.0582E-11, 2.6900E-11, 2.3778E-11, 2.1343E-11, 1.9182E-11,      
     C 1.7162E-11, 1.5391E-11, 1.3877E-11, 1.2619E-11, 1.1450E-11,      
     C 1.0461E-11, 9.6578E-12, 8.9579E-12, 8.3463E-12, 7.8127E-12,      
     C 7.3322E-12, 6.9414E-12, 6.6037E-12, 6.3285E-12, 6.1095E-12/      
      DATA S1301/                                                       
     C 5.9387E-12, 5.8118E-12, 5.7260E-12, 5.6794E-12, 5.6711E-12,      
     C 5.7003E-12, 5.7670E-12, 5.8717E-12, 6.0151E-12, 6.1984E-12,      
     C 6.4232E-12, 6.6918E-12, 7.0065E-12, 7.3705E-12, 7.7873E-12,      
     C 8.2612E-12, 8.7972E-12, 9.4009E-12, 1.0079E-11, 1.0840E-11,      
     C 1.1692E-11, 1.2648E-11, 1.3723E-11, 1.4935E-11, 1.6313E-11,      
     C 1.7905E-11, 1.9740E-11, 2.1898E-11, 2.4419E-11, 2.7426E-11,      
     C 3.0869E-11, 3.4235E-11, 3.7841E-11, 4.1929E-11, 4.6776E-11,      
     C 5.2123E-11, 5.8497E-11, 6.5294E-11, 7.4038E-11, 8.4793E-11,      
     C 9.6453E-11, 1.1223E-10, 1.2786E-10, 1.4882E-10, 1.7799E-10,      
     C 2.0766E-10, 2.4523E-10, 2.8591E-10, 3.3386E-10, 4.0531E-10/      
      DATA S1351/                                                       
     C 4.7663E-10, 5.4858E-10, 6.3377E-10, 7.1688E-10, 8.4184E-10,      
     C 9.5144E-10, 1.0481E-09, 1.1356E-09, 1.2339E-09, 1.3396E-09,      
     C 1.4375E-09, 1.5831E-09, 1.7323E-09, 1.9671E-09, 2.2976E-09,      
     C 2.6679E-09, 3.0777E-09, 3.4321E-09, 3.8192E-09, 4.2711E-09,      
     C 4.4903E-09, 4.8931E-09, 5.2253E-09, 5.4040E-09, 5.6387E-09,      
     C 5.6704E-09, 6.0345E-09, 6.1079E-09, 6.2576E-09, 6.4039E-09,      
     C 6.3776E-09, 6.1878E-09, 5.8616E-09, 5.7036E-09, 5.5840E-09,      
     C 5.6905E-09, 5.8931E-09, 6.2478E-09, 6.8291E-09, 7.4528E-09,      
     C 7.6078E-09, 7.3898E-09, 6.7573E-09, 5.9827E-09, 5.0927E-09,      
     C 4.0099E-09, 3.1933E-09, 2.4296E-09, 1.8485E-09, 1.4595E-09/      
      DATA S1401/                                                       
     C 1.2017E-09, 1.0164E-09, 8.7433E-10, 7.7108E-10, 7.0049E-10,      
     C 6.5291E-10, 6.1477E-10, 5.9254E-10, 5.8150E-10, 5.7591E-10,      
     C 5.8490E-10, 5.8587E-10, 5.9636E-10, 6.2408E-10, 6.5479E-10,      
     C 7.0480E-10, 7.2313E-10, 7.5524E-10, 8.0863E-10, 8.3386E-10,      
     C 9.2342E-10, 9.6754E-10, 1.0293E-09, 1.0895E-09, 1.1330E-09,      
     C 1.2210E-09, 1.2413E-09, 1.2613E-09, 1.2671E-09, 1.2225E-09,      
     C 1.1609E-09, 1.0991E-09, 1.0600E-09, 1.0570E-09, 1.0818E-09,      
     C 1.1421E-09, 1.2270E-09, 1.3370E-09, 1.4742E-09, 1.4946E-09,      
     C 1.4322E-09, 1.3210E-09, 1.1749E-09, 1.0051E-09, 7.8387E-10,      
     C 6.1844E-10, 4.6288E-10, 3.4164E-10, 2.5412E-10, 1.9857E-10/      
      DATA S1451/                                                       
     C 1.5876E-10, 1.2966E-10, 1.0920E-10, 9.4811E-11, 8.3733E-11,      
     C 7.3906E-11, 6.7259E-11, 6.1146E-11, 5.7119E-11, 5.3546E-11,      
     C 4.8625E-11, 4.4749E-11, 4.1089E-11, 3.7825E-11, 3.4465E-11,      
     C 3.1018E-11, 2.8109E-11, 2.5610E-11, 2.2859E-11, 2.0490E-11,      
     C 1.8133E-11, 1.5835E-11, 1.3949E-11, 1.2295E-11, 1.0799E-11,      
     C 9.6544E-12, 8.7597E-12, 7.9990E-12, 7.3973E-12, 6.9035E-12,      
     C 6.4935E-12, 6.1195E-12, 5.8235E-12, 5.5928E-12, 5.4191E-12,      
     C 5.2993E-12, 5.2338E-12, 5.2272E-12, 5.2923E-12, 5.4252E-12,      
     C 5.6523E-12, 5.9433E-12, 6.3197E-12, 6.9016E-12, 7.5016E-12,      
     C 8.2885E-12, 9.4050E-12, 1.0605E-11, 1.2257E-11, 1.3622E-11/      
      DATA S1501/                                                       
     C 1.5353E-11, 1.7543E-11, 1.9809E-11, 2.2197E-11, 2.4065E-11,      
     C 2.6777E-11, 2.9751E-11, 3.2543E-11, 3.5536E-11, 3.9942E-11,      
     C 4.6283E-11, 5.4556E-11, 6.5490E-11, 7.6803E-11, 9.0053E-11,      
     C 1.0852E-10, 1.2946E-10, 1.4916E-10, 1.7748E-10, 2.0073E-10,      
     C 2.2485E-10, 2.5114E-10, 2.7715E-10, 3.1319E-10, 3.3305E-10,      
     C 3.5059E-10, 3.5746E-10, 3.6311E-10, 3.7344E-10, 3.6574E-10,      
     C 3.7539E-10, 3.9434E-10, 4.3510E-10, 4.3340E-10, 4.2588E-10,      
     C 4.3977E-10, 4.6062E-10, 4.7687E-10, 4.6457E-10, 4.8578E-10,      
     C 5.2344E-10, 5.6752E-10, 5.8702E-10, 5.6603E-10, 5.3784E-10,      
     C 4.9181E-10, 4.3272E-10, 3.5681E-10, 2.8814E-10, 2.3320E-10/      
      DATA S1551/                                                       
     C 1.8631E-10, 1.4587E-10, 1.1782E-10, 9.8132E-11, 8.2528E-11,      
     C 6.9174E-11, 6.1056E-11, 5.3459E-11, 4.7116E-11, 4.1878E-11,      
     C 3.8125E-11, 3.6347E-11, 3.5071E-11, 3.3897E-11, 3.3541E-11,      
     C 3.3563E-11, 3.5469E-11, 3.8111E-11, 3.8675E-11, 4.1333E-11,      
     C 4.3475E-11, 4.6476E-11, 4.9761E-11, 5.1380E-11, 5.4135E-11,      
     C 5.3802E-11, 5.5158E-11, 5.6864E-11, 5.9311E-11, 6.3827E-11,      
     C 6.7893E-11, 6.8230E-11, 6.6694E-11, 6.6018E-11, 6.4863E-11,      
     C 6.5893E-11, 6.3813E-11, 6.4741E-11, 6.8630E-11, 7.0255E-11,      
     C 7.0667E-11, 6.8810E-11, 6.4104E-11, 5.8136E-11, 4.7242E-11,      
     C 3.7625E-11, 3.1742E-11, 2.5581E-11, 1.8824E-11, 1.3303E-11/      
      DATA S1601/                                                       
     C 9.6919E-12, 7.5353E-12, 6.0986E-12, 5.0742E-12, 4.3094E-12,      
     C 3.7190E-12, 3.2520E-12, 2.8756E-12, 2.5680E-12, 2.3139E-12,      
     C 2.1025E-12, 1.9257E-12, 1.7777E-12, 1.6539E-12, 1.5508E-12,      
     C 1.4657E-12, 1.3966E-12, 1.3417E-12, 1.2998E-12, 1.2700E-12,      
     C 1.2514E-12, 1.2437E-12, 1.2463E-12, 1.2592E-12, 1.2823E-12,      
     C 1.3157E-12, 1.3596E-12, 1.4144E-12, 1.4806E-12, 1.5588E-12,      
     C 1.6497E-12, 1.7544E-12, 1.8738E-12, 2.0094E-12, 2.1626E-12,      
     C 2.3354E-12, 2.5297E-12, 2.7483E-12, 2.9941E-12, 3.2708E-12,      
     C 3.5833E-12, 3.9374E-12, 4.3415E-12, 4.8079E-12, 5.3602E-12,      
     C 5.9816E-12, 6.7436E-12, 7.6368E-12, 8.6812E-12, 9.8747E-12/      
      DATA S1651/                                                       
     C 1.1350E-11, 1.3181E-11, 1.5406E-11, 1.7868E-11, 2.0651E-11,      
     C 2.4504E-11, 2.9184E-11, 3.4159E-11, 3.9979E-11, 4.8704E-11,      
     C 5.7856E-11, 6.7576E-11, 7.9103E-11, 9.4370E-11, 1.1224E-10,      
     C 1.3112E-10, 1.5674E-10, 1.8206E-10, 2.0576E-10, 2.3187E-10,      
     C 2.7005E-10, 3.0055E-10, 3.3423E-10, 3.6956E-10, 3.8737E-10,      
     C 4.2630E-10, 4.5154E-10, 4.8383E-10, 5.3582E-10, 5.8109E-10,      
     C 6.3741E-10, 6.3874E-10, 6.3870E-10, 6.5818E-10, 6.5056E-10,      
     C 6.5291E-10, 6.3159E-10, 6.3984E-10, 6.4549E-10, 6.5444E-10,      
     C 6.7035E-10, 6.7665E-10, 6.9124E-10, 6.8451E-10, 6.9255E-10,      
     C 6.9923E-10, 7.0396E-10, 6.7715E-10, 6.0371E-10, 5.3774E-10/      
      DATA S1701/                                                       
     C 4.6043E-10, 3.7635E-10, 2.9484E-10, 2.2968E-10, 1.8185E-10,      
     C 1.4191E-10, 1.1471E-10, 9.4790E-11, 7.9613E-11, 6.7989E-11,      
     C 5.9391E-11, 5.2810E-11, 4.7136E-11, 4.2618E-11, 3.8313E-11,      
     C 3.4686E-11, 3.1669E-11, 2.9110E-11, 2.6871E-11, 2.5074E-11,      
     C 2.4368E-11, 2.3925E-11, 2.4067E-11, 2.4336E-11, 2.4704E-11,      
     C 2.5823E-11, 2.7177E-11, 2.9227E-11, 3.1593E-11, 3.5730E-11,      
     C 4.0221E-11, 4.3994E-11, 4.8448E-11, 5.3191E-11, 5.8552E-11,      
     C 6.3458E-11, 6.6335E-11, 7.2457E-11, 7.9091E-11, 8.2234E-11,      
     C 8.7668E-11, 8.7951E-11, 9.2952E-11, 9.6157E-11, 9.5926E-11,      
     C 1.0120E-10, 1.0115E-10, 9.9577E-11, 9.6633E-11, 9.2891E-11/      
      DATA S1751/                                                       
     C 9.3315E-11, 9.5584E-11, 1.0064E-10, 1.0509E-10, 1.1455E-10,      
     C 1.2443E-10, 1.2963E-10, 1.2632E-10, 1.1308E-10, 1.0186E-10,      
     C 8.5880E-11, 6.7863E-11, 5.1521E-11, 3.7780E-11, 2.8842E-11,      
     C 2.2052E-11, 1.7402E-11, 1.4406E-11, 1.1934E-11, 1.0223E-11,      
     C 8.9544E-12, 7.9088E-12, 7.0675E-12, 6.2222E-12, 5.6051E-12,      
     C 5.0502E-12, 4.5578E-12, 4.2636E-12, 3.9461E-12, 3.7599E-12,      
     C 3.5215E-12, 3.2467E-12, 3.0018E-12, 2.6558E-12, 2.3928E-12,      
     C 2.0707E-12, 1.7575E-12, 1.5114E-12, 1.2941E-12, 1.1004E-12,      
     C 9.5175E-13, 8.2894E-13, 7.3253E-13, 6.5551E-13, 5.9098E-13,      
     C 5.3548E-13, 4.8697E-13, 4.4413E-13, 4.0600E-13, 3.7188E-13/      
      DATA S1801/                                                       
     C 3.4121E-13, 3.1356E-13, 2.8856E-13, 2.6590E-13, 2.4533E-13,      
     C 2.2663E-13, 2.0960E-13, 1.9407E-13, 1.7990E-13, 1.6695E-13,      
     C 1.5512E-13, 1.4429E-13, 1.3437E-13, 1.2527E-13, 1.1693E-13,      
     C 1.0927E-13, 1.0224E-13, 9.5767E-14, 8.9816E-14, 8.4335E-14,      
     C 7.9285E-14, 7.4626E-14, 7.0325E-14, 6.6352E-14, 6.2676E-14,      
     C 5.9274E-14, 5.6121E-14, 5.3195E-14, 5.0479E-14, 4.7953E-14,      
     C 4.5602E-14, 4.3411E-14, 4.1367E-14, 3.9456E-14, 3.7670E-14,      
     C 3.5996E-14, 3.4427E-14, 3.2952E-14, 3.1566E-14, 3.0261E-14,      
     C 2.9030E-14, 2.7868E-14, 2.6770E-14, 2.5730E-14, 2.4745E-14,      
     C 2.3809E-14, 2.2921E-14, 2.2076E-14, 2.1271E-14, 2.0504E-14/      
      DATA S1851/                                                       
     C 1.9772E-14, 1.9073E-14, 1.8404E-14, 1.7764E-14, 1.7151E-14,      
     C 1.6564E-14, 1.6000E-14, 1.5459E-14, 1.4939E-14, 1.4439E-14,      
     C 1.3958E-14, 1.3495E-14, 1.3049E-14, 1.2620E-14, 1.2206E-14,      
     C 1.1807E-14, 1.1422E-14, 1.1050E-14, 1.0691E-14, 1.0345E-14,      
     C 1.0010E-14, 9.6870E-15, 9.3747E-15, 9.0727E-15, 8.7808E-15,      
     C 8.4986E-15, 8.2257E-15, 7.9617E-15, 7.7064E-15, 7.4594E-15,      
     C 7.2204E-15, 6.9891E-15, 6.7653E-15, 6.5488E-15, 6.3392E-15,      
     C 6.1363E-15, 5.9399E-15, 5.7499E-15, 5.5659E-15, 5.3878E-15,      
     C 5.2153E-15, 5.0484E-15, 4.8868E-15, 4.7303E-15, 4.5788E-15,      
     C 4.4322E-15, 4.2902E-15, 4.1527E-15, 4.0196E-15, 3.8907E-15/      
      DATA S1901/                                                       
     C 3.7659E-15, 3.6451E-15, 3.5281E-15, 3.4149E-15, 3.3052E-15,      
     C 3.1991E-15, 3.0963E-15, 2.9967E-15, 2.9004E-15, 2.8071E-15,      
     C 2.7167E-15, 2.6293E-15, 2.5446E-15, 2.4626E-15, 2.3833E-15,      
     C 2.3064E-15, 2.2320E-15, 2.1600E-15, 2.0903E-15, 2.0228E-15,      
     C 1.9574E-15, 1.8942E-15, 1.8329E-15, 1.7736E-15, 1.7163E-15,      
     C 1.6607E-15, 1.6069E-15, 1.5548E-15, 1.5044E-15, 1.4557E-15,      
     C 1.4084E-15, 1.3627E-15, 1.3185E-15, 1.2757E-15, 1.2342E-15,      
     C 1.1941E-15, 1.1552E-15, 1.1177E-15, 1.0813E-15, 1.0461E-15,      
     C 1.0120E-15, 9.7900E-16, 9.4707E-16, 9.1618E-16, 8.8628E-16,      
     C 8.5734E-16, 8.2933E-16, 8.0223E-16, 7.7600E-16, 7.5062E-16/      
      DATA S1951/                                                       
     C 7.2606E-16, 7.0229E-16, 6.7929E-16, 6.5703E-16, 6.3550E-16,      
     C 6.1466E-16, 5.9449E-16, 5.7498E-16, 5.5610E-16, 5.3783E-16,      
     C 5.2015E-16, 5.0305E-16, 4.8650E-16, 4.7049E-16, 4.5500E-16,      
     C 4.4002E-16, 4.2552E-16, 4.1149E-16, 3.9792E-16, 3.8479E-16,      
     C 3.7209E-16, 3.5981E-16, 3.4792E-16, 3.3642E-16, 3.2530E-16,      
     C 3.1454E-16, 3.0413E-16, 2.9406E-16, 2.8432E-16, 2.7490E-16,      
     C 2.6579E-16, 2.5697E-16, 2.4845E-16, 2.4020E-16, 2.3223E-16,      
     C 2.2451E-16, 2.1705E-16, 2.0984E-16, 2.0286E-16, 1.9611E-16,      
     C 1.8958E-16, 1.8327E-16, 1.7716E-16, 1.7126E-16, 1.6555E-16,      
     C 1.6003E-16, 1.5469E-16, 1.4952E-16, 1.4453E-16, 1.3970E-16/      
      DATA S2001/                                                       
     C 1.3503E-16/                                                      
C                                                                       
      END                                                               
      SUBROUTINE SHADE(IPH,IK,MSOFF,IPATH,KNTRVL,V,TSNOBS,TSNREF,SUMSSS)
C                                                                       
C     ROUTINE SHADE SETS THE SOLAR TRANSMISSION TERMS TO ZERO FOR       
C     SHADED SCATTERING POINTS                                          
C                                                                       
C     DECLARE ARGUMENTS                                                 
      INTEGER IPH,IK,MSOFF,IPATH,KNTRVL                                 
      REAL V,TSNOBS,TSNREF,SUMSSS                                       
      INCLUDE 'PARAM.LST'                                               
C                                                                       
C     COMMON /CORKDT/                                                   
C       WTKSUB   SPECTRAL BIN SUB-INTERVAL FRACTIONAL WIDTHS.           
C       DEPLAY   INCREMENTAL EXTINCTION OPTICAL DEPTHS                  
C       TRNLAY   INCREMENTAL TRANSMITTANCES                             
C       TRNCUM   CUMULATIVE TRANSMITTANCES                              
      REAL WTKSUB,DEPLAY,TRNLAY,TRNCUM                                  
      COMMON/CORKDT/WTKSUB(NKSUB),DEPLAY(NKSUB),                        
     1  TRNLAY(NKSUB),TRNCUM(NKSUB)                                     
      SAVE /CORKDT/                                                     
C                                                                       
C       PI       THE CONSTANT PI                                        
C       DEG      NUMBER OF DEGREES IN ONE RADIAN.                       
C       BIGNUM   MAXIMUM SINGLE PRECISION NUMBER.                       
C       BIGEXP   MAXIMUM EXPONENTIAL ARGUMENT WITHOUT OVERFLOW.         
      REAL PI,DEG,BIGNUM,BIGEXP                                         
      COMMON/CNSTNS/PI,DEG,BIGNUM,BIGEXP                                
C                                                                       
C     COMMON /MSRD/                                                     
C       CSZEN0  LAYER BOUNDARY COSINE OF SOLAR/LUNAR ZENITH.            
C       CSZEN   LAYER AVERAGE COSINE OF SOLAR/LUNAR ZENITH.             
C       CSZENX  AVERAGE SOLAR/LUNAR COSINE ZENITH EXITING               
C               (AWAY FROM EARTH) THE CURRENT LAYER.                    
C       BBGRND  THERMAL EMISSION (FLUX) AT THE GROUND [W CM-2 / CM-1].  
C       BBNDRY  LAYER BOUNDARY THERMAL EMISSION (FLUX) [W CM-2 / CM-1]. 
C       COSBAR  LAYER HENYEY-GREENSTEIN ASYMMETRY FACTOR.               
C       TSCAT   LAYER SCATTERING OPTICAL DEPTH.                         
C       TCONT   LAYER CONTINUUM OPTICAL DEPTH.                          
C       TAUT    LAYER TOTAL OPTICAL DEPTH.                              
C       DEPRAT  FRACTIONAL DECREASE IN WEAK-LINE OPTICAL DEPTH TO SUN.  
C       S0DEP   OPTICAL DEPTH FROM LAYER BOUNDARY TO SUN.               
C       S0TRN   TRANSMITTED SOLAR IRRADIANCES [W CM-2 / CM-1]           
C       UPF     LAYER BOUNDARY UPWARD THERMAL FLUX [W CM-2 / CM-1].     
C       DNF     LAYER BOUNDARY DOWNWARD THERMAL FLUX [W CM-2 / CM-1].   
C       UPFS    LAYER BOUNDARY UPWARD SOLAR FLUX [W CM-2 / CM-1].       
C       DNFS    LAYER BOUNDARY DOWNWARD SOLAR FLUX [W CM-2 / CM-1].     
      REAL CSZEN0,CSZEN,CSZENX,BBGRND,BBNDRY,COSBAR,TSCAT,              
     1  TCONT,TAUT,DEPRAT,S0DEP,S0TRN,UPF,DNF,UPFS,DNFS                 
      COMMON/MSRD/CSZEN0(LAYDIM),CSZEN(LAYDIM),CSZENX(LAYDIM),          
     1  BBGRND,BBNDRY(LAYDIM),COSBAR(LAYDIM),TSCAT(LAYDIM),             
     2  TCONT(LAYDIM),TAUT(NKSUB,LAYDIM),DEPRAT(LAYDIM),                
     3  S0DEP(NKSUB,LAYDIM),S0TRN(NKSUB,LAYDIM),UPF(NKSUB,LAYDIM),      
     4  DNF(NKSUB,LAYDIM),UPFS(NKSUB,LAYDIM),DNFS(NKSUB,LAYDIM)         
C                                                                       
C     DECLARE LOCAL VARIABLES                                           
      INTEGER INTRVL                                                    
      REAL S0,TMOL,BIGDEP                                               
      S0=0.                                                             
      IF(KNTRVL.EQ.1)THEN                                               
          TMOL=0.                                                       
          CALL SSRAD(IPH,IK,MSOFF,IPATH,V,S0,TMOL,TSNOBS,TSNREF,SUMSSS) 
      ELSE                                                              
C                                                                       
C         DIVIDE BIGNUM BY THE LAYER NUMBER TO ARTIFICIALLY REQUIRE     
C         THAT OPTICAL DEPTH DECREASES WITH INCREASING LAYER NUMBER.    
          BIGDEP=BIGNUM/IK                                              
          DO 10 INTRVL=1,KNTRVL                                         
              TRNLAY(INTRVL)=0.                                         
              DEPLAY(INTRVL)=BIGDEP                                     
   10     CONTINUE                                                      
          IF(MSOFF.GT.0)THEN                                            
C                                                                       
C             FOR MULTIPLE SCATTERING, STORE THE DECREASE IN WEAK-LINE  
C             OPTICAL DEPTH TO THE SUN ACROSS THE CURRENT LAYER.        
              IF(IPATH.EQ.1)THEN                                        
                  DEPRAT(IK)=BIGDEP                                     
              ELSE                                                      
                  DEPRAT(IK+1)=BIGDEP                                   
                  DEPRAT(IK)=1.-BIGDEP/DEPRAT(IK)                       
              ENDIF                                                     
          ENDIF                                                         
CORK      CALL SSCORK(IPH,IK,MSOFF,IPATH,KNTRVL,V,S0,TSNOBS,SUMSSS)     
      ENDIF                                                             
      RETURN                                                            
      END                                                               
      BLOCK DATA SHUMG                                                  
C>    BLOCK DATA                                                        
C                                                                       
C     SCHUMANN-RUNGE O2 BAND MODEL - SAMPLE CODING                      
C                                                                       
       COMMON /SHUR/ SHN001(70),SHN076(75),SHN151(75),                  
     X  SHN226(75),SHN301(75),SHN376(54),SHDUM(6)                       
       DATA SHN001/                                                     
     X  -8.00000,  -8.00000,  -8.00000,  -6.30103,  -6.00000,           
     X  -5.94896,  -5.94896,  -5.55139,  -5.17613,  -4.90612,           
     X  -4.56059,  -4.30010,  -4.30739,  -4.34455,  -4.35231,           
     X  -4.50777,  -4.41705,  -3.93569,  -3.70298,  -3.84254,           
     X  -4.01007,  -4.13821,  -3.92122,  -3.55006,  -3.22681,           
     X  -3.17363,  -3.55224,  -3.66208,  -3.32331,  -3.00804,           
     X  -2.99732,  -3.30951,  -3.20867,  -2.69141,  -2.49670,           
     X  -2.74355,  -2.69834,  -2.67293,  -2.67371,  -2.89603,           
     X  -3.13808,  -3.45473,  -3.54812,  -3.00636,  -2.72446,           
     X  -2.90208,  -2.93847,  -3.03693,  -3.15944,  -3.43764,           
     X  -3.67262,  -3.53970,  -2.84182,  -2.51909,  -2.50557,           
     X  -2.44459,  -2.72040,  -2.95979,  -3.02842,  -2.92391,           
     X  -2.61329,  -2.24839,  -2.03988,  -1.98147,  -1.97078,           
     X  -2.14548,  -2.51734,  -2.47024,  -2.02579,  -1.70360/           
       DATA SHN076/                                                     
     X  -1.64178,  -2.05789,  -2.41111,  -2.30034,  -1.91818,           
     X  -1.50450,  -1.32084,  -1.80380,  -2.13878,  -1.94658,           
     X  -1.61627,  -1.55771,  -1.88813,  -1.64415,  -1.43970,           
     X  -1.72633,  -1.50064,  -1.29499,  -1.47224,  -1.42286,           
     X  -1.84903,  -2.42249,  -2.95877,  -3.43342,  -3.85023,           
     X  -4.92183,  -4.92959,  -4.80852,  -4.67030,  -4.72573,           
     X  -4.84445,  -4.86951,  -4.90354,  -4.80891,  -4.61211,           
     X  -4.48205,  -4.51391,  -4.66502,  -4.84670,  -4.88606,           
     X  -4.82391,  -4.69897,  -4.51203,  -4.13960,  -3.87805,           
     X  -3.80311,  -3.77114,  -3.88260,  -4.14615,  -4.39649,           
     X  -4.62899,  -4.78494,  -4.69514,  -4.27200,  -3.92731,           
     X  -3.72681,  -3.60335,  -3.49142,  -3.38223,  -3.52349,           
     X  -3.64037,  -3.58526,  -3.48978,  -3.36320,  -3.37270,           
     X  -3.58359,  -3.83908,  -4.06157,  -3.96920,  -3.24875,           
     X  -2.78627,  -2.54861,  -2.56192,  -2.79838,  -2.89008/           
       DATA SHN151/                                                     
     X  -2.97200,  -2.91496,  -2.85783,  -3.00554,  -3.22285,           
     X  -3.17575,  -2.82405,  -2.44375,  -2.24512,  -2.13519,           
     X  -2.17638,  -2.12548,  -2.24833,  -2.42286,  -2.48889,           
     X  -2.57284,  -2.67481,  -2.84576,  -2.57849,  -2.23621,           
     X  -1.97914,  -2.01655,  -2.08918,  -2.25852,  -2.60669,           
     X  -2.91101,  -3.24343,  -3.54870,  -3.05507,  -2.41260,           
     X  -1.97192,  -1.74591,  -1.70757,  -1.86170,  -2.21955,           
     X  -2.52520,  -2.86220,  -2.96082,  -2.42138,  -1.96791,           
     X  -1.71099,  -1.68871,  -1.86617,  -2.21148,  -2.51694,           
     X  -2.77760,  -2.37949,  -1.89083,  -1.58900,  -1.52710,           
     X  -1.68850,  -2.03635,  -2.31319,  -2.17366,  -1.60655,           
     X  -1.27097,  -1.14262,  -1.34089,  -1.68119,  -1.78236,           
     X  -1.45853,  -1.19063,  -1.11210,  -1.38628,  -1.48342,           
     X  -1.12039,   -.85543,   -.77060,  -1.05684,  -1.05423,           
     X   -.93689,   -.86922,   -.94306,   -.76850,   -.59062/           
       DATA SHN226/                                                     
     X   -.50208,   -.53499,   -.88884,  -1.18360,  -1.52243,           
     X  -1.84564,  -2.17740,  -2.50559,  -2.83351,  -3.15308,           
     X  -3.41587,  -3.41025,  -3.23752,  -3.13656,  -3.30149,           
     X  -3.55280,  -3.77885,  -3.71929,  -3.36467,  -3.06275,           
     X  -2.83782,  -2.68294,  -2.55793,  -2.63001,  -2.90714,           
     X  -3.18561,  -3.46714,  -3.70067,  -3.62895,  -3.02605,           
     X  -2.65584,  -2.46195,  -2.48991,  -2.44044,  -2.29494,           
     X  -2.28839,  -2.29827,  -2.22063,  -2.12801,  -2.18940,           
     X  -2.48029,  -2.74669,  -2.83833,  -2.45937,  -2.16507,           
     X  -2.02067,  -2.03314,  -1.80888,  -1.51479,  -1.38580,           
     X  -1.37993,  -1.63534,  -1.83905,  -1.87999,  -1.82492,           
     X  -1.89398,  -1.90149,  -1.78545,  -1.65285,  -1.40144,           
     X  -1.17488,  -1.07228,  -1.15343,  -1.37759,  -1.70025,           
     X  -2.01075,  -2.33004,  -2.62771,  -2.87105,  -2.84082,           
     X  -2.00293,  -1.31932,   -.92860,   -.76253,   -.84790/           
       DATA SHN301/                                                     
     X  -1.16306,  -1.46677,  -1.79051,  -2.09491,  -2.34556,           
     X  -2.13867,  -1.37321,   -.82048,   -.53990,   -.47636,           
     X   -.72816,  -1.03484,  -1.33688,  -1.61955,  -1.78843,           
     X  -1.43388,   -.81369,   -.44878,   -.28512,   -.40431,           
     X   -.72200,  -1.00945,  -1.28895,  -1.31856,   -.85686,           
     X   -.42072,   -.19421,   -.18317,   -.46858,   -.73309,           
     X   -.93390,   -.77552,   -.37922,   -.12965,   -.05480,           
     X   -.26659,   -.48423,   -.50987,   -.24666,   -.01742,           
     X    .07660,   -.06367,   -.20185,   -.11253,    .06726,           
     X    .17955,    .14879,    .15975,    .28769,    .41632,           
     X    .49995,    .61664,    .76706,    .82624,    .76615,           
     X    .43165,    .13821,   -.18926,   -.48784,   -.77913,           
     X  -1.08972,  -1.39948,  -1.70006,  -1.94700,  -1.96249,           
     X  -1.67500,  -1.41241,  -1.29981,  -1.40100,  -1.69529,           
     X  -1.96904,  -2.25253,  -2.44942,  -2.13985,  -1.80460/           
       DATA SHN376/                                                     
     X  -1.60216,  -1.72517,  -1.98472,  -2.08115,  -1.62632,           
     X  -1.12971,   -.86160,   -.81141,  -1.07504,  -1.34407,           
     X  -1.50074,  -1.47345,  -1.41077,  -1.59810,  -1.67103,           
     X  -1.53208,  -1.36215,  -1.26724,   -.91307,   -.50826,           
     X   -.27840,   -.24468,   -.46373,   -.76619,  -1.07304,           
     X  -1.37968,  -1.66148,  -1.89046,  -2.02811,  -1.97679,           
     X  -1.55840,   -.94089,   -.46463,   -.21757,   -.16985,           
     X   -.41642,   -.69469,   -.98624,  -1.26028,  -1.48661,           
     X  -1.58100,  -1.42675,  -1.01563,   -.52312,   -.13686,           
     X    .06300,    .07682,   -.16825,   -.42809,   -.69506,           
     X   -.91898,  -1.03253,   -.90609,   -.42809           /           
      END                                                               
      SUBROUTINE SINT(V1,V1C,DV,NPT,CONTI,CONTO)                        
C                                                                       
C     INTERPOLATION  FOR CONTINUUM WITH LOWTRAN                         
C                                                                       
      DIMENSION CONTI(2003)                                             
      CONTO=0.                                                          
      I=(V1C-V1)/DV+1.00001                                             
      IF(I.GE.NPT)GO TO 10                                              
      CONTO=CONTI(I)                                                    
      IMOD=AMOD(V1C,10.)                                                
      IF(IMOD.GT.0) CONTO=(CONTI(I)+CONTI(I+1))/2.                      
10    CONTINUE                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE SLF260(V1C,SH2OT1)                                     
C     LOADS SELF CONTINUUM  260K                                        
      COMMON /S260/ V1,V2,DV,NPT,S260(2003)                             
      CALL SINT(V1,V1C,DV,NPT,S260,SH2OT1)                              
      RETURN                                                            
      END                                                               
      SUBROUTINE SLF296(V1C,SH2OT0)                                     
C     LOADS SELF CONTINUUM  296K                                        
      COMMON /SH2O/ V1,V2,DV,NPT,S296(2003)                             
      CALL SINT(V1,V1C,DV,NPT,S296,SH2OT0)                              
      RETURN                                                            
      END                                                               
      SUBROUTINE  SLFTST( ACCUR, ALBEDO, BTEMP, DELTAM, DTAUC, FBEAM,   
     $                    FISOT, IBCND, LAMBER, NLYR, PLANK, NPHI,      
     $                    NUMU, NSTR, NTAU, ONLYFL, PHI, PHI0, PMOM,    
     $                    PRNT, SSALB, TEMIS, TEMPER, TTEMP, UMU,       
     $                    USRANG, USRTAU, UTAU, UMU0, WVNMHI, WVNMLO,   
     $                    COMPAR, FLUP, RFLDIR, RFLDN, UU )             
                                                                        
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
C       IF  COMPAR = FALSE, SAVE USER INPUT VALUES THAT WOULD OTHERWISE 
C       BE DESTROYED AND REPLACE THEM WITH INPUT VALUES FOR SELF-TEST.  
C       IF  COMPAR = TRUE, COMPARE SELF-TEST CASE RESULTS WITH CORRECT  
C       ANSWERS AND RESTORE USER INPUT VALUES IF TEST IS PASSED.        
                                                                        
C       (SEE FILE 'DISORT.DOC' FOR VARIABLE DEFINITIONS.)               
                                                                        
C     I N T E R N A L    V A R I A B L E S:                             
                                                                        
C         ACC     RELATIVE ACCURACY REQUIRED FOR PASSING SELF-TEST      
C         ERRORN  RELATIVE ERRORS IN 'DISORT' OUTPUT VARIABLES          
C         OK      LOGICAL VARIABLE FOR DETERMINING FAILURE OF SELF-TEST 
C         ALL VARIABLES ENDING IN 'S':  TEMPORARY 'S'TORAGE FOR INPUT   
C+---------------------------------------------------------------------+
      REAL*8     PMOM( 0:* ), TEMPER( 0:* )                             
      LOGICAL  COMPAR, DELTAM, LAMBER, PLANK, OK, ONLYFL, PRNT(*),      
     $         USRANG, USRTAU                                           
      REAL*8     PMOMS( 0:4 ), TEMPES (0:1 )                            
      LOGICAL  DELTAS, LAMBES, NOPLNS, ONLYFS, PRNTS ( 7 ), USRANS,     
     $         USRTAS, TSTBAD                                           
      SAVE     NLYRS, DTAUCS, SSALBS, PMOMS, NSTRS, USRANS, NUMUS,      
     $         UMUS, USRTAS, NTAUS, UTAUS, NPHIS, PHIS, IBCNDS,         
     $         FBEAMS, UMU0S, PHI0S, FISOTS, LAMBES, ALBEDS, DELTAS,    
     $         ONLYFS, ACCURS, NOPLNS, WVNMLS, WVNMHS, BTEMPS, TTEMPS,  
     $         TEMISS, TEMPES, PRNTS                                    
      DATA     ACC / 1.E-4 /                                            
                                                                        
                                                                        
      IF  ( .NOT.COMPAR )  THEN                                         
C                                              ** SAVE USER INPUT VALUES
         NLYRS = NLYR                                                   
         DTAUCS = DTAUC                                                 
         SSALBS = SSALB                                                 
         DO 1  N = 0, 4                                                 
            PMOMS(N) = PMOM(N)                                          
 1       CONTINUE                                                       
         NSTRS = NSTR                                                   
         USRANS = USRANG                                                
         NUMUS  = NUMU                                                  
         UMUS  = UMU                                                    
         USRTAS = USRTAU                                                
         NTAUS = NTAU                                                   
         UTAUS  = UTAU                                                  
         NPHIS = NPHI                                                   
         PHIS  = PHI                                                    
         IBCNDS = IBCND                                                 
         FBEAMS = FBEAM                                                 
         UMU0S = UMU0                                                   
         PHI0S = PHI0                                                   
         FISOTS  = FISOT                                                
         LAMBES = LAMBER                                                
         ALBEDS = ALBEDO                                                
         DELTAS = DELTAM                                                
         ONLYFS = ONLYFL                                                
         ACCURS = ACCUR                                                 
         NOPLNS = PLANK                                                 
         WVNMLS = WVNMLO                                                
         WVNMHS = WVNMHI                                                
         BTEMPS = BTEMP                                                 
         TTEMPS = TTEMP                                                 
         TEMISS = TEMIS                                                 
         TEMPES( 0 ) = TEMPER( 0 )                                      
         TEMPES( 1 ) = TEMPER( 1 )                                      
         DO 3 I = 1, 7                                                  
            PRNTS( I ) = PRNT( I )                                      
    3    CONTINUE                                                       
C                                     ** SET INPUT VALUES FOR SELF-TEST 
         NLYR = 1                                                       
         DTAUC = 1.0                                                    
         SSALB = 0.9                                                    
C                          ** HAZE L MOMENTS                            
         PMOM(0) = 1.0                                                  
         PMOM(1) = 0.8042                                               
         PMOM(2) = 0.646094                                             
         PMOM(3) = 0.481851                                             
         PMOM(4) = 0.359056                                             
         NSTR = 4                                                       
         USRANG = .TRUE.                                                
         NUMU  = 1                                                      
         UMU  = 0.5                                                     
         USRTAU = .TRUE.                                                
         NTAU = 1                                                       
         UTAU  = 0.5                                                    
         NPHI = 1                                                       
         PHI  = 90.0                                                    
         IBCND = 0                                                      
         FBEAM = 3.14159265                                             
         UMU0 = 0.866                                                   
         PHI0 = 0.0                                                     
         FISOT  = 1.0                                                   
         LAMBER = .TRUE.                                                
         ALBEDO = 0.7                                                   
         DELTAM = .TRUE.                                                
         ONLYFL = .FALSE.                                               
         ACCUR = 1.E-4                                                  
         PLANK = .TRUE.                                                 
         WVNMLO = 0.0                                                   
         WVNMHI = 50000.                                                
         BTEMP = 300.0                                                  
         TTEMP = 100.0                                                  
         TEMIS = 0.8                                                    
         TEMPER( 0 ) = 210.0                                            
         TEMPER( 1 ) = 200.0                                            
         DO 5 I = 1, 7                                                  
            PRNT( I ) = .FALSE.                                         
    5    CONTINUE                                                       
                                                                        
      ELSE                                                              
C                                    ** COMPARE TEST CASE RESULTS WITH  
C                                    ** CORRECT ANSWERS AND ABORT IF BAD
         OK = .TRUE.                                                    
         ERROR1 = ( UU  - 47.86005 ) / 47.86005                         
         ERROR2 = ( RFLDIR - 1.527286 ) / 1.527286                      
         ERROR3 = ( RFLDN - 28.37223 ) / 28.37223                       
         ERROR4 = ( FLUP   - 152.5853 ) / 152.5853                      
         IF( DABS(ERROR1).GT.ACC ) OK = TSTBAD( 'UU',     ERROR1 )      
         IF( DABS(ERROR2).GT.ACC ) OK = TSTBAD( 'RFLDIR', ERROR2 )      
         IF( DABS(ERROR3).GT.ACC ) OK = TSTBAD( 'RFLDN',  ERROR3 )      
         IF( DABS(ERROR4).GT.ACC ) OK = TSTBAD( 'FLUP',   ERROR4 )      
                                                                        
         IF( .NOT. OK )                                                 
     $       CALL ERRMSG( 'DISORT--SELF-TEST FAILED', .TRUE. )          
                                                                        
C                                           ** RESTORE USER INPUT VALUES
         NLYR = NLYRS                                                   
         DTAUC = DTAUCS                                                 
         SSALB = SSALBS                                                 
         DO 11  N = 0, 4                                                
            PMOM(N) = PMOMS(N)                                          
 11      CONTINUE                                                       
         NSTR = NSTRS                                                   
         USRANG = USRANS                                                
         NUMU  = NUMUS                                                  
         UMU  = UMUS                                                    
         USRTAU = USRTAS                                                
         NTAU = NTAUS                                                   
         UTAU  = UTAUS                                                  
         NPHI = NPHIS                                                   
         PHI  = PHIS                                                    
         IBCND = IBCNDS                                                 
         FBEAM = FBEAMS                                                 
         UMU0 = UMU0S                                                   
         PHI0 = PHI0S                                                   
         FISOT  = FISOTS                                                
         LAMBER = LAMBES                                                
         ALBEDO = ALBEDS                                                
         DELTAM = DELTAS                                                
         ONLYFL = ONLYFS                                                
         ACCUR = ACCURS                                                 
         PLANK = NOPLNS                                                 
         WVNMLO = WVNMLS                                                
         WVNMHI = WVNMHS                                                
         BTEMP = BTEMPS                                                 
         TTEMP = TTEMPS                                                 
         TEMIS = TEMISS                                                 
         TEMPER( 0 ) = TEMPES( 0 )                                      
         TEMPER( 1 ) = TEMPES( 1 )                                      
         DO 13  I = 1, 7                                                
            PRNT( I ) = PRNTS( I )                                      
   13    CONTINUE                                                       
      END IF                                                            
                                                                        
      RETURN                                                            
      END                                                               
      SUBROUTINE SMGEO(SPANGL,SPBETA,SPPHI,                             
     1  DHALFR,DPRNG2,BENDNG,LENN,SMMIN)                                
      REAL SPANGL,SPPHI,BENDNG,SPBETA,AORIG                             
      DOUBLE PRECISION DHALFR,DPRNG2,X,Y,BETA,RANGE,H1,H2,              
     1  DPDEG,PHI,ANGLE,SMMIN,COSPHI,COSANG,DPRE                        
      INTEGER LENN                                                      
      REAL RE,ZMAX                                                      
      INTEGER IPATH                                                     
      COMMON/PARMTR/RE,ZMAX,IPATH                                       
      COMMON /SMALL4/H1, H2, RANGE                                      
C                                                                       
C     AORIG IS THE ORIGINAL INPUT ANGLE IN SINGLE PRECISION             
      COMMON /SMALL5/AORIG                                              
      DATA DPDEG/57.2957795131D0/                                       
      DPRE=DBLE(RE)                                                     
      X=H2-H1                                                           
      Y=(RANGE+X)*(RANGE-X)                                             
      IF(Y.LT.0.)Y=DBLE(0.)                                             
      BETA=2*DPDEG*ASIN(SQRT(Y/((H1+DPRE)*(H2+DPRE)))/2)                
C                                                                       
C     IF H2 > H1, CALCULATE PHI (>90 DEG) FROM THE COSINE LAW           
C     AND ANGLE FROM SUBTRACTION;  IF H1 > H2, CALCULATE ANGLE          
C     (>90 DEG) FROM THE COSINE LAW AND PHI FROM SUBTRACTION.           
      IF(X.GE.0.)THEN                                                   
         COSPHI=-(RANGE**2+X*(H1+H2+2*DPRE))/(2*RANGE*(H2+DPRE))        
         PHI=DBLE(180.)                                                 
         IF(COSPHI.GT.-1.)PHI=DPDEG*ACOS(COSPHI)                        
         ANGLE=DBLE(180.)+BETA-PHI                                      
      ELSE                                                              
         COSANG=-(RANGE**2-X*(H1+H2+2*DPRE))/(2*RANGE*(H1+DPRE))        
         ANGLE=DBLE(180.)                                               
         IF(COSANG.GT.-1.)ANGLE=DPDEG*ACOS(COSANG)                      
         PHI=DBLE(180.)+BETA-ANGLE                                      
      ENDIF                                                             
      BENDNG=0.                                                         
      IF(ANGLE.GT.90.D0 .AND. PHI.GT.90.D0 .AND.                        
     1  (AORIG.GT.90.D0 .OR. AORIG.EQ.0.))THEN                          
C        THE CONDITION ON AORIG IS TO MAKE SURE THAT PATHS WHOSE        
C        ORIGINAL INPUT ZENITH IS 90 DEGREES OR LESS ARE TREATED AS     
C        LENN=0 PATHS.  CALCULATED ANGLE WILL LIKELY                    
C        DIFFER FROM AORIG.                                             
         LENN=1                                                         
         IF(H1.LE.H2)THEN                                               
             DHALFR=(H1+DPRE)*COS((DBLE(180.)-ANGLE)/DPDEG)             
         ELSE                                                           
             DHALFR=(H2+DPRE)*COS((DBLE(180.)-PHI)/DPDEG)               
         ENDIF                                                          
         DPRNG2=RANGE-2*DHALFR                                          
         IF (DPRNG2 .LE. 1.0D-06) THEN                                  
            DPRNG2=DBLE(0.)                                             
            DHALFR=RANGE/2                                              
         ENDIF                                                          
         SMMIN=(DPRE+H1)*SIN((DBLE(180.)-ANGLE)/DPDEG)-DPRE             
      ELSE                                                              
         LENN=0                                                         
         DHALFR=DBLE(0.)                                                
         DPRNG2=RANGE                                                   
         SMMIN=MIN(H1,H2)                                               
      ENDIF                                                             
      SPANGL=REAL(ANGLE)                                                
      SPBETA=REAL(BETA)                                                 
      SPPHI=REAL(PHI)                                                   
      RETURN                                                            
      END                                                               
      SUBROUTINE SMPREP(SPH1,SPH2,SPANGL,SPRANG,SPBETA,ISLCT)           
C                                                                       
C     THIS SUBROUTINE PREPS OR PREPROCESSES PATH GEOMETRY               
C     PARAMETERS TO SEE IS IF THE RANGE IS SMALL.  ALL SMALL PATH       
C     CASES ARE CAST INTO THE EQUIVALENT CASE 2C (H1,H2,RANGE).         
C                                                                       
C     DECLARE INPUTS                                                    
      REAL SPH1,SPH2,SPANGL,SPRANG,SPBETA                               
      INTEGER ISLCT                                                     
C                                                                       
C     LIST COMMONS                                                      
      REAL SMALL                                                        
      COMMON/SMALL3/SMALL                                               
      REAL RE,ZMAX                                                      
      INTEGER IPATH                                                     
      COMMON/PARMTR/RE,ZMAX,IPATH                                       
      DOUBLE PRECISION H1,H2,RANGE                                      
      COMMON/SMALL4/H1,H2,RANGE                                         
C                                                                       
C     FILE UNIT NUMBERS                                                 
C       IRD      MODTRAN INPUT FILE, tape5, UNIT NUMBER (1).            
C       IPR      MODTRAN STANDARD OUTPUT FILE, tape6, UNIT NUMBER (2).  
C       IPU      MODTRAN SPECTRAL DATA FILE, tape7, UNIT NUMBER (7).    
C       NPR      PRINTOUT LEVEL SWITCH (1=small,0=normal,-1=large).     
C       IPR1     MODTRAN FLUX OUTPUT FILE, tape8, UNIT NUMBER (8).      
C       ISCRCH   MULTIPLE SCATTERING SCRATCH FILE UNIT NUMBER (10).     
C       ITB      MOLECULAR BAND MODEL PARAMETER FILE UNIT NUMBER (9).   
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                           
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                       
      REAL AORIG                                                        
      COMMON/SMALL5/AORIG                                               
C                                                                       
C     DECLARE LOCAL VARIABLES                                           
      DOUBLE PRECISION ANGLE,BETA,DPDEG,R1,DRE,STORE                    
C                                                                       
C     LIST DATA                                                         
      DATA DPDEG/57.2957795131D0/                                       
C                                                                       
C     AORIG IS THE ORIGINAL INPUT ANGLE IN SINGLE PRECISION             
      AORIG=SPANGL                                                      
C                                                                       
C     DEFINE DOUBLE PRECISION VARIABLES                                 
      H1=DBLE(SPH1)                                                     
      H2=DBLE(SPH2)                                                     
      RANGE=DBLE(SPRANG)                                                
C                                                                       
C     IF ALREADY IN CASE 2C (H1,H2,RANGE) RETURN.                       
      IF(ISLCT.EQ.23)RETURN                                             
C                                                                       
C     DETERMINE RANGE WITHOUT REFRACTION                                
C     (REFRACTION IS NOT IMPORTANT FOR SHORT PATHS).                    
      DRE=DBLE(RE)                                                      
      R1=H1+DRE                                                         
      IF(ISLCT.EQ.24)THEN                                               
C                                                                       
C         CASE 2D (H1,H2,BETA)                                          
          BETA=DBLE(SPBETA)/DPDEG                                       
          RANGE=SQRT((H1-H2)**2+4*R1*(H2+DRE)*SIN(BETA/2)**2)           
      ELSEIF(ISLCT.EQ.22)THEN                                           
C                                                                       
C         CASE 2B (H1,ANGLE,RANGE)                                      
          ANGLE=DBLE(SPANGL)                                            
          STORE=(RANGE-H1)*(RANGE+H1)+2*R1*(H1+RANGE*COS(ANGLE/DPDEG))  
          H2=STORE/(SQRT(DRE**2+STORE)+DRE)                             
      ENDIF                                                             
C                                                                       
C     CHECK FOR SMALL RANGE                                             
      IF(RANGE.LE.SMALL .AND. RANGE.GT.0.)THEN                          
          SPANGL=0.                                                     
          SPBETA=0.                                                     
          SPRANG=REAL(RANGE)                                            
          SPH1=REAL(H1)                                                 
          SPH2=REAL(H2)                                                 
Calley          WRITE(IPR,'(/2A,F12.7,A)')' FROM SMPREP:  RANGE IS',    
          IF (IPR .GT. 0) WRITE(IPR,                                    
     +                    '(/2A,F12.7,A)')' FROM SMPREP:  RANGE IS',    
     1      ' BELOW THE SMALL RANGE CUTOFF (',SMALL,'KM).'              
Calley          WRITE(IPR,'(/14X,A,/14X,4(A,F12.7))')                   
          IF (IPR .GT. 0) WRITE(IPR,'(/14X,A,/14X,4(A,F12.7))')         
     1      ' THE INPUT GEOMETRY HAS BEEN CONVERTED TO CASE 2C WITH',   
     2      ' H1 =',SPH1,'KM, H2 =',SPH2,'KM, AND RANGE =', RANGE,'KM.' 
      ELSEIF(RANGE.LT.0)THEN                                            
Calley          WRITE(IPR,'(/A)')' FROM SMPREP:  RANGE IS LESS THAN 0.' 
          IF (IPR .GT. 0) WRITE(IPR,                                    
     +                    '(/A)')' FROM SMPREP:  RANGE IS LESS THAN 0.' 
          STOP                                                          
      ENDIF                                                             
      RETURN                                                            
      END                                                               
      SUBROUTINE SO2XS(V,CROSS)                                         
      INTEGER NMAX                                                      
      PARAMETER (NMAX=5562)                                             
      DIMENSION  SO2CRS(5562)                                           
C     BEGINNING AND ENDING FREQUENCIES (CM-1):    24820  52625          
C     BIN WIDTH AND TOTAL ENTRIES:        5   5562                      
C     CROSS-SECTIONS IN CM^2 TIMES 2.6868E19                            
      DATA VBEG, VEND, VINCR /24820.0, 52625.0, 5.0/                    
      DATA (SO2CRS(I),I=    1,  100)/                                   
     1   8.124E-5, 8.447E-5, 8.780E-5, 9.070E-5, 9.346E-5, 9.665E-5,    
     2   9.921E-5, 1.017E-4, 1.047E-4, 1.077E-4, 1.102E-4, 1.127E-4,    
     3   1.152E-4, 1.177E-4, 1.205E-4, 1.236E-4, 1.262E-4, 1.287E-4,    
     4   1.311E-4, 1.336E-4, 1.363E-4, 1.395E-4, 1.421E-4, 1.446E-4,    
     5   1.474E-4, 1.505E-4, 1.530E-4, 1.555E-4, 1.580E-4, 1.605E-4,    
     6   1.629E-4, 1.654E-4, 1.679E-4, 1.703E-4, 1.728E-4, 1.753E-4,    
     7   1.778E-4, 1.802E-4, 1.827E-4, 1.847E-4, 1.866E-4, 1.889E-4,    
     8   1.907E-4, 1.923E-4, 1.944E-4, 1.968E-4, 1.993E-4, 2.017E-4,    
     9   2.036E-4, 2.052E-4, 2.071E-4, 2.094E-4, 2.112E-4, 2.134E-4,    
     &   2.162E-4, 2.192E-4, 2.218E-4, 2.249E-4, 2.282E-4, 2.311E-4,    
     1   2.335E-4, 2.361E-4, 2.391E-4, 2.424E-4, 2.457E-4, 2.488E-4,    
     2   2.513E-4, 2.537E-4, 2.575E-4, 2.639E-4, 2.739E-4, 2.867E-4,    
     3   3.043E-4, 3.293E-4, 3.602E-4, 3.916E-4, 4.202E-4, 4.464E-4,    
     4   4.705E-4, 4.931E-4, 5.149E-4, 5.272E-4, 5.326E-4, 5.287E-4,    
     5   5.100E-4, 4.754E-4, 4.308E-4, 3.908E-4, 3.557E-4, 3.139E-4,    
     6   2.802E-4, 2.585E-4, 2.427E-4, 2.294E-4, 2.237E-4, 2.183E-4,    
     7   2.131E-4, 2.081E-4, 2.026E-4, 1.976E-4/                        
      DATA (SO2CRS(I),I=  101,  200)/                                   
     1   1.928E-4, 1.880E-4, 1.832E-4, 1.784E-4, 1.729E-4, 1.678E-4,    
     2   1.630E-4, 1.581E-4, 1.526E-4, 1.476E-4, 1.428E-4, 1.380E-4,    
     3   1.332E-4, 1.284E-4, 1.237E-4, 1.196E-4, 1.173E-4, 1.163E-4,    
     4   1.155E-4, 1.151E-4, 1.151E-4, 1.151E-4, 1.151E-4, 1.155E-4,    
     5   1.165E-4, 1.182E-4, 1.212E-4, 1.243E-4, 1.275E-4, 1.306E-4,    
     6   1.338E-4, 1.370E-4, 1.394E-4, 1.410E-4, 1.425E-4, 1.435E-4,    
     7   1.447E-4, 1.465E-4, 1.489E-4, 1.514E-4, 1.598E-4, 1.760E-4,    
     8   2.001E-4, 2.269E-4, 2.460E-4, 2.597E-4, 2.707E-4, 2.816E-4,    
     9   2.920E-4, 3.030E-4, 3.150E-4, 3.277E-4, 3.403E-4, 3.543E-4,    
     &   3.704E-4, 3.896E-4, 4.126E-4, 4.398E-4, 4.705E-4, 5.053E-4,    
     1   5.468E-4, 6.070E-4, 6.867E-4, 7.834E-4, 8.873E-4, 1.025E-3,    
     2   1.173E-3, 1.316E-3, 1.455E-3, 1.591E-3, 1.727E-3, 1.882E-3,    
     3   2.098E-3, 2.343E-3, 2.631E-3, 2.973E-3, 3.390E-3, 3.893E-3,    
     4   4.239E-3, 4.424E-3, 4.500E-3, 4.510E-3, 4.439E-3, 4.247E-3,    
     5   3.916E-3, 3.690E-3, 3.485E-3, 3.280E-3, 3.075E-3, 2.867E-3,    
     6   2.656E-3, 2.448E-3, 2.251E-3, 2.062E-3, 1.893E-3, 1.739E-3,    
     7   1.596E-3, 1.446E-3, 1.324E-3, 1.217E-3/                        
      DATA (SO2CRS(I),I=  201,  300)/                                   
     1   1.111E-3, 1.006E-3, 9.066E-4, 8.150E-4, 7.364E-4, 6.737E-4,    
     2   6.193E-4, 5.724E-4, 5.342E-4, 5.033E-4, 4.756E-4, 4.530E-4,    
     3   4.390E-4, 4.340E-4, 4.366E-4, 4.454E-4, 4.593E-4, 4.745E-4,    
     4   4.914E-4, 5.072E-4, 5.193E-4, 5.301E-4, 5.414E-4, 5.534E-4,    
     5   5.664E-4, 5.800E-4, 5.946E-4, 6.100E-4, 6.261E-4, 6.440E-4,    
     6   6.660E-4, 6.943E-4, 7.323E-4, 7.756E-4, 8.314E-4, 9.039E-4,    
     7   9.966E-4, 1.106E-3, 1.233E-3, 1.373E-3, 1.519E-3, 1.665E-3,    
     8   1.809E-3, 1.951E-3, 2.092E-3, 2.268E-3, 2.452E-3, 2.619E-3,    
     9   2.822E-3, 3.083E-3, 3.401E-3, 3.784E-3, 4.302E-3, 4.856E-3,    
     &   5.389E-3, 5.834E-3, 6.097E-3, 6.114E-3, 5.876E-3, 5.573E-3,    
     1   5.305E-3, 5.077E-3, 4.882E-3, 4.692E-3, 4.455E-3, 4.202E-3,    
     2   3.983E-3, 3.667E-3, 3.317E-3, 2.965E-3, 2.632E-3, 2.293E-3,    
     3   2.005E-3, 1.800E-3, 1.612E-3, 1.460E-3, 1.339E-3, 1.246E-3,    
     4   1.146E-3, 1.069E-3, 1.012E-3, 9.568E-4, 9.125E-4, 8.800E-4,    
     5   8.586E-4, 8.389E-4, 8.234E-4, 8.105E-4, 7.986E-4, 7.886E-4,    
     6   7.805E-4, 7.737E-4, 7.672E-4, 7.633E-4, 7.612E-4, 7.605E-4,    
     7   7.604E-4, 7.612E-4, 7.638E-4, 7.699E-4/                        
      DATA (SO2CRS(I),I=  301,  400)/                                   
     1   7.794E-4, 7.915E-4, 8.056E-4, 8.204E-4, 8.352E-4, 8.497E-4,    
     2   8.643E-4, 8.832E-4, 9.071E-4, 9.358E-4, 9.694E-4, 1.010E-3,    
     3   1.058E-3, 1.120E-3, 1.201E-3, 1.288E-3, 1.378E-3, 1.467E-3,    
     4   1.560E-3, 1.664E-3, 1.780E-3, 1.894E-3, 2.004E-3, 2.121E-3,    
     5   2.269E-3, 2.478E-3, 2.755E-3, 3.063E-3, 3.119E-3, 3.134E-3,    
     6   3.147E-3, 3.154E-3, 3.128E-3, 3.049E-3, 2.909E-3, 2.802E-3,    
     7   2.687E-3, 2.566E-3, 2.450E-3, 2.340E-3, 2.223E-3, 2.094E-3,    
     8   1.976E-3, 1.884E-3, 1.818E-3, 1.773E-3, 1.743E-3, 1.721E-3,    
     9   1.710E-3, 1.722E-3, 1.746E-3, 1.779E-3, 1.827E-3, 1.891E-3,    
     &   1.971E-3, 2.075E-3, 2.233E-3, 2.416E-3, 2.612E-3, 2.819E-3,    
     1   3.066E-3, 3.380E-3, 3.818E-3, 4.284E-3, 4.722E-3, 5.106E-3,    
     2   5.533E-3, 6.001E-3, 6.483E-3, 6.889E-3, 7.141E-3, 7.303E-3,    
     3   7.430E-3, 7.362E-3, 7.141E-3, 6.796E-3, 6.513E-3, 6.287E-3,    
     4   6.083E-3, 5.808E-3, 5.470E-3, 5.091E-3, 4.681E-3, 4.268E-3,    
     5   3.849E-3, 3.436E-3, 3.110E-3, 2.853E-3, 2.650E-3, 2.488E-3,    
     6   2.332E-3, 2.184E-3, 2.058E-3, 1.971E-3, 1.911E-3, 1.878E-3,    
     7   1.864E-3, 1.859E-3, 1.859E-3, 1.859E-3/                        
      DATA (SO2CRS(I),I=  401,  500)/                                   
     1   1.859E-3, 1.857E-3, 1.850E-3, 1.835E-3, 1.816E-3, 1.788E-3,    
     2   1.741E-3, 1.694E-3, 1.656E-3, 1.624E-3, 1.595E-3, 1.567E-3,    
     3   1.540E-3, 1.521E-3, 1.505E-3, 1.491E-3, 1.482E-3, 1.479E-3,    
     4   1.483E-3, 1.495E-3, 1.512E-3, 1.535E-3, 1.570E-3, 1.618E-3,    
     5   1.682E-3, 1.765E-3, 1.864E-3, 1.988E-3, 2.161E-3, 2.324E-3,    
     6   2.477E-3, 2.622E-3, 2.781E-3, 2.972E-3, 3.218E-3, 3.536E-3,    
     7   3.935E-3, 4.433E-3, 5.054E-3, 5.754E-3, 6.509E-3, 7.261E-3,    
     8   7.800E-3, 8.182E-3, 8.535E-3, 8.938E-3, 9.326E-3, 9.564E-3,    
     9   9.228E-3, 8.783E-3, 8.601E-3, 8.153E-3, 7.604E-3, 7.043E-3,    
     &   6.575E-3, 6.165E-3, 5.749E-3, 4.918E-3, 4.260E-3, 3.903E-3,    
     1   3.645E-3, 3.391E-3, 3.140E-3, 2.951E-3, 2.755E-3, 2.562E-3,    
     2   2.422E-3, 2.290E-3, 2.158E-3, 2.024E-3, 1.924E-3, 1.845E-3,    
     3   1.776E-3, 1.707E-3, 1.640E-3, 1.578E-3, 1.522E-3, 1.472E-3,    
     4   1.424E-3, 1.380E-3, 1.340E-3, 1.305E-3, 1.279E-3, 1.262E-3,    
     5   1.257E-3, 1.267E-3, 1.281E-3, 1.295E-3, 1.318E-3, 1.347E-3,    
     6   1.382E-3, 1.427E-3, 1.481E-3, 1.549E-3, 1.644E-3, 1.739E-3,    
     7   1.827E-3, 1.916E-3, 2.013E-3, 2.120E-3/                        
      DATA (SO2CRS(I),I=  501,  600)/                                   
     1   2.249E-3, 2.386E-3, 2.530E-3, 2.677E-3, 2.887E-3, 3.157E-3,    
     2   3.445E-3, 3.585E-3, 3.594E-3, 3.595E-3, 3.568E-3, 3.508E-3,    
     3   3.405E-3, 3.272E-3, 3.118E-3, 2.957E-3, 2.838E-3, 2.759E-3,    
     4   2.696E-3, 2.657E-3, 2.644E-3, 2.670E-3, 2.730E-3, 2.815E-3,    
     5   2.892E-3, 2.976E-3, 3.072E-3, 3.191E-3, 3.337E-3, 3.512E-3,    
     6   3.736E-3, 3.959E-3, 4.181E-3, 4.442E-3, 4.750E-3, 5.103E-3,    
     7   5.459E-3, 5.736E-3, 5.901E-3, 5.950E-3, 5.968E-3, 5.975E-3,    
     8   5.980E-3, 5.967E-3, 5.912E-3, 5.730E-3, 5.564E-3, 5.482E-3,    
     9   5.386E-3, 5.282E-3, 5.174E-3, 5.056E-3, 4.922E-3, 4.764E-3,    
     &   4.642E-3, 4.518E-3, 4.352E-3, 4.180E-3, 4.008E-3, 3.843E-3,    
     1   3.673E-3, 3.488E-3, 3.264E-3, 3.074E-3, 2.915E-3, 2.791E-3,    
     2   2.682E-3, 2.579E-3, 2.461E-3, 2.354E-3, 2.262E-3, 2.177E-3,    
     3   2.095E-3, 2.017E-3, 1.948E-3, 1.897E-3, 1.872E-3, 1.866E-3,    
     4   1.878E-3, 1.918E-3, 1.967E-3, 2.022E-3, 2.078E-3, 2.142E-3,    
     5   2.213E-3, 2.304E-3, 2.409E-3, 2.530E-3, 2.684E-3, 2.899E-3,    
     6   3.188E-3, 3.627E-3, 3.996E-3, 4.251E-3, 4.545E-3, 4.824E-3,    
     7   5.055E-3, 5.171E-3, 5.180E-3, 5.030E-3/                        
      DATA (SO2CRS(I),I=  601,  700)/                                   
     1   4.908E-3, 4.767E-3, 4.512E-3, 4.301E-3, 4.147E-3, 4.105E-3,    
     2   4.095E-3, 4.106E-3, 4.159E-3, 4.239E-3, 4.347E-3, 4.464E-3,    
     3   4.581E-3, 4.696E-3, 4.812E-3, 4.927E-3, 5.031E-3, 5.074E-3,    
     4   5.077E-3, 5.058E-3, 5.033E-3, 4.998E-3, 4.928E-3, 4.796E-3,    
     5   4.578E-3, 4.264E-3, 3.942E-3, 3.667E-3, 3.474E-3, 3.324E-3,    
     6   3.195E-3, 3.034E-3, 2.859E-3, 2.729E-3, 2.609E-3, 2.490E-3,    
     7   2.362E-3, 2.232E-3, 2.102E-3, 1.991E-3, 1.885E-3, 1.772E-3,    
     8   1.672E-3, 1.584E-3, 1.517E-3, 1.452E-3, 1.390E-3, 1.357E-3,    
     9   1.334E-3, 1.318E-3, 1.304E-3, 1.292E-3, 1.284E-3, 1.286E-3,    
     &   1.294E-3, 1.301E-3, 1.308E-3, 1.316E-3, 1.324E-3, 1.331E-3,    
     1   1.339E-3, 1.345E-3, 1.352E-3, 1.360E-3, 1.370E-3, 1.382E-3,    
     2   1.396E-3, 1.413E-3, 1.433E-3, 1.460E-3, 1.487E-3, 1.509E-3,    
     3   1.546E-3, 1.594E-3, 1.653E-3, 1.715E-3, 1.781E-3, 1.849E-3,    
     4   1.919E-3, 1.991E-3, 2.072E-3, 2.160E-3, 2.261E-3, 2.372E-3,    
     5   2.491E-3, 2.617E-3, 2.752E-3, 2.902E-3, 3.045E-3, 3.182E-3,    
     6   3.317E-3, 3.471E-3, 3.655E-3, 3.927E-3, 4.201E-3, 4.433E-3,    
     7   4.715E-3, 5.020E-3, 5.314E-3, 5.519E-3/                        
      DATA (SO2CRS(I),I=  701,  800)/                                   
     1   5.600E-3, 5.366E-3, 4.921E-3, 4.198E-3, 3.716E-3, 3.385E-3,    
     2   3.132E-3, 2.885E-3, 2.635E-3, 2.411E-3, 2.191E-3, 1.964E-3,    
     3   1.795E-3, 1.668E-3, 1.568E-3, 1.457E-3, 1.319E-3, 1.086E-3,    
     4   8.464E-4, 6.889E-4, 4.589E-4, 2.139E-4, 3.041E-4, 5.345E-4,    
     5   8.927E-4, 1.101E-3, 1.224E-3, 1.281E-3, 1.358E-3, 1.465E-3,    
     6   1.573E-3, 1.670E-3, 1.743E-3, 1.786E-3, 1.810E-3, 1.823E-3,    
     7   1.836E-3, 1.848E-3, 1.861E-3, 1.873E-3, 1.883E-3, 1.887E-3,    
     8   1.887E-3, 1.876E-3, 1.864E-3, 1.851E-3, 1.850E-3, 1.859E-3,    
     9   1.881E-3, 1.906E-3, 1.932E-3, 1.965E-3, 2.004E-3, 2.050E-3,    
     &   2.102E-3, 2.158E-3, 2.217E-3, 2.274E-3, 2.324E-3, 2.380E-3,    
     1   2.439E-3, 2.463E-3, 2.465E-3, 2.438E-3, 2.389E-3, 2.324E-3,    
     2   2.246E-3, 2.155E-3, 2.045E-3, 1.946E-3, 1.850E-3, 1.741E-3,    
     3   1.621E-3, 1.486E-3, 1.352E-3, 1.217E-3, 1.079E-3, 9.417E-4,    
     4   8.030E-4, 6.603E-4, 5.335E-4, 4.611E-4, 5.192E-4, 6.871E-4,    
     5   8.005E-4, 8.945E-4, 9.754E-4, 1.052E-3, 1.128E-3, 1.209E-3,    
     6   1.300E-3, 1.410E-3, 1.521E-3, 1.628E-3, 1.708E-3, 1.782E-3,    
     7   1.857E-3, 1.939E-3, 2.025E-3, 2.111E-3/                        
      DATA (SO2CRS(I),I=  801,  900)/                                   
     1   2.197E-3, 2.281E-3, 2.249E-3, 2.150E-3, 2.046E-3, 1.958E-3,    
     2   1.899E-3, 1.823E-3, 1.739E-3, 1.664E-3, 1.581E-3, 1.479E-3,    
     3   1.348E-3, 1.199E-3, 1.039E-3, 8.984E-4, 7.998E-4, 6.785E-4,    
     4   5.503E-4, 4.636E-4, 3.874E-4, 3.173E-4, 2.535E-4, 1.990E-4,    
     5   1.840E-4, 1.814E-4, 1.891E-4, 1.989E-4, 2.100E-4, 2.221E-4,    
     6   2.354E-4, 2.512E-4, 2.745E-4, 3.059E-4, 3.606E-4, 4.281E-4,    
     7   5.150E-4, 5.952E-4, 6.677E-4, 7.312E-4, 8.003E-4, 8.953E-4,    
     8   9.786E-4, 1.049E-3, 1.143E-3, 1.242E-3, 1.329E-3, 1.401E-3,    
     9   1.452E-3, 1.484E-3, 1.500E-3, 1.481E-3, 1.458E-3, 1.433E-3,    
     &   1.401E-3, 1.363E-3, 1.312E-3, 1.252E-3, 1.180E-3, 1.087E-3,    
     1   9.794E-4, 8.785E-4, 7.813E-4, 6.902E-4, 6.055E-4, 5.277E-4,    
     2   4.631E-4, 4.053E-4, 3.566E-4, 3.160E-4, 2.864E-4, 2.806E-4,    
     3   2.906E-4, 3.250E-4, 3.670E-4, 4.161E-4, 4.676E-4, 5.188E-4,    
     4   5.504E-4, 5.797E-4, 6.182E-4, 6.713E-4, 7.412E-4, 8.294E-4,    
     5   9.124E-4, 9.325E-4, 9.381E-4, 9.329E-4, 9.197E-4, 8.991E-4,    
     6   8.563E-4, 7.909E-4, 6.749E-4, 5.614E-4, 4.548E-4, 3.609E-4,    
     7   2.753E-4, 2.072E-4, 1.509E-4, 1.125E-4/                        
      DATA (SO2CRS(I),I=  901, 1000)/                                   
     1   9.024E-5, 7.923E-5, 7.706E-5, 7.911E-5, 8.760E-5, 1.006E-4,    
     2   1.187E-4, 1.425E-4, 1.700E-4, 2.046E-4, 2.513E-4, 3.218E-4,    
     3   3.930E-4, 4.646E-4, 5.451E-4, 6.306E-4, 7.254E-4, 8.222E-4,    
     4   9.202E-4, 9.923E-4, 1.047E-3, 1.082E-3, 1.108E-3, 1.120E-3,    
     5   1.125E-3, 1.122E-3, 1.112E-3, 1.098E-3, 1.066E-3, 1.006E-3,    
     6   8.856E-4, 7.586E-4, 6.296E-4, 5.239E-4, 4.308E-4, 3.571E-4,    
     7   2.864E-4, 2.163E-4, 1.604E-4, 1.169E-4, 8.453E-5, 5.856E-5,    
     8   4.541E-5, 3.570E-5, 2.946E-5, 2.419E-5, 1.961E-5, 1.560E-5,    
     9   1.202E-5, 9.583E-6, 7.515E-6, 5.876E-6, 4.298E-6, 2.812E-6,    
     &   1.995E-6, 1.492E-6, 1.474E-6, 1.775E-6, 2.561E-6, 4.123E-6,    
     1   6.388E-6, 1.056E-5, 1.618E-5, 2.567E-5, 3.882E-5, 5.822E-5,    
     2   8.705E-5, 1.245E-4, 1.811E-4, 2.504E-4, 3.503E-4, 4.719E-4,    
     3   6.321E-4, 8.318E-4, 1.069E-3, 1.367E-3, 1.698E-3, 2.096E-3,    
     4   2.525E-3, 3.009E-3, 3.519E-3, 4.056E-3, 4.597E-3, 5.138E-3,    
     5   5.653E-3, 6.144E-3, 6.577E-3, 6.964E-3, 7.288E-3, 7.549E-3,    
     6   7.764E-3, 7.919E-3, 8.049E-3, 8.141E-3, 8.225E-3, 8.301E-3,    
     7   8.380E-3, 8.462E-3, 8.547E-3, 8.631E-3/                        
      DATA (SO2CRS(I),I= 1001, 1100)/                                   
     1   8.703E-3, 8.763E-3, 8.795E-3, 8.805E-3, 8.787E-3, 8.750E-3,    
     2   8.703E-3, 8.671E-3, 8.660E-3, 8.723E-3, 8.849E-3, 9.092E-3,    
     3   9.455E-3, 9.941E-3, 1.059E-2, 1.133E-2, 1.222E-2, 1.317E-2,    
     4   1.421E-2, 1.525E-2, 1.630E-2, 1.730E-2, 1.824E-2, 1.907E-2,    
     5   1.983E-2, 2.044E-2, 2.097E-2, 2.136E-2, 2.167E-2, 2.188E-2,    
     6   2.203E-2, 2.212E-2, 2.217E-2, 2.219E-2, 2.218E-2, 2.217E-2,    
     7   2.217E-2, 2.217E-2, 2.220E-2, 2.225E-2, 2.233E-2, 2.244E-2,    
     8   2.257E-2, 2.272E-2, 2.287E-2, 2.303E-2, 2.316E-2, 2.325E-2,    
     9   2.328E-2, 2.326E-2, 2.312E-2, 2.293E-2, 2.259E-2, 2.217E-2,    
     &   2.159E-2, 2.092E-2, 2.012E-2, 1.920E-2, 1.819E-2, 1.710E-2,    
     1   1.597E-2, 1.481E-2, 1.368E-2, 1.265E-2, 1.172E-2, 1.100E-2,    
     2   1.052E-2, 1.033E-2, 1.057E-2, 1.110E-2, 1.224E-2, 1.368E-2,    
     3   1.579E-2, 1.820E-2, 2.121E-2, 2.449E-2, 2.817E-2, 3.203E-2,    
     4   3.605E-2, 4.000E-2, 4.390E-2, 4.741E-2, 5.069E-2, 5.330E-2,    
     5   5.555E-2, 5.703E-2, 5.802E-2, 5.833E-2, 5.811E-2, 5.747E-2,    
     6   5.646E-2, 5.530E-2, 5.412E-2, 5.303E-2, 5.236E-2, 5.204E-2,    
     7   5.251E-2, 5.361E-2, 5.558E-2, 5.815E-2/                        
      DATA (SO2CRS(I),I= 1101, 1200)/                                   
     1   6.123E-2, 6.516E-2, 6.926E-2, 7.121E-2, 7.282E-2, 7.558E-2,    
     2   7.956E-2, 8.665E-2, 9.234E-2, 9.530E-2, 9.524E-2, 9.232E-2,    
     3   8.941E-2, 8.650E-2, 8.359E-2, 8.068E-2, 7.778E-2, 7.430E-2,    
     4   6.870E-2, 6.550E-2, 6.819E-2, 7.109E-2, 7.399E-2, 7.689E-2,    
     5   7.979E-2, 8.269E-2, 8.559E-2, 8.849E-2, 9.082E-2, 8.989E-2,    
     6   8.813E-2, 8.532E-2, 8.427E-2, 8.704E-2, 9.057E-2, 9.491E-2,    
     7   1.001E-1, 1.059E-1, 1.137E-1, 1.224E-1, 1.322E-1, 1.420E-1,    
     8   1.496E-1, 1.559E-1, 1.591E-1, 1.611E-1, 1.612E-1, 1.600E-1,    
     9   1.572E-1, 1.535E-1, 1.492E-1, 1.449E-1, 1.404E-1, 1.329E-1,    
     &   1.245E-1, 1.183E-1, 1.132E-1, 1.113E-1, 1.109E-1, 1.135E-1,    
     1   1.173E-1, 1.230E-1, 1.299E-1, 1.385E-1, 1.463E-1, 1.535E-1,    
     2   1.616E-1, 1.703E-1, 1.810E-1, 1.924E-1, 2.039E-1, 2.153E-1,    
     3   2.267E-1, 2.360E-1, 2.381E-1, 2.374E-1, 2.319E-1, 2.268E-1,    
     4   2.225E-1, 2.224E-1, 2.267E-1, 2.344E-1, 2.444E-1, 2.564E-1,    
     5   2.689E-1, 2.784E-1, 2.859E-1, 2.848E-1, 2.818E-1, 2.777E-1,    
     6   2.737E-1, 2.708E-1, 2.688E-1, 2.687E-1, 2.703E-1, 2.745E-1,    
     7   2.860E-1, 3.058E-1, 3.257E-1, 3.454E-1/                        
      DATA (SO2CRS(I),I= 1201, 1300)/                                   
     1   3.605E-1, 3.731E-1, 3.838E-1, 3.931E-1, 3.962E-1, 3.956E-1,    
     2   3.812E-1, 3.643E-1, 3.474E-1, 3.323E-1, 3.233E-1, 3.141E-1,    
     3   3.029E-1, 2.896E-1, 2.728E-1, 2.596E-1, 2.512E-1, 2.524E-1,    
     4   2.622E-1, 2.712E-1, 2.798E-1, 2.940E-1, 3.110E-1, 3.289E-1,    
     5   3.480E-1, 3.765E-1, 4.090E-1, 4.531E-1, 5.042E-1, 5.794E-1,    
     6   6.520E-1, 7.030E-1, 7.392E-1, 7.399E-1, 7.301E-1, 7.027E-1,    
     7   6.769E-1, 6.545E-1, 6.422E-1, 6.421E-1, 6.488E-1, 6.612E-1,    
     8   6.638E-1, 6.595E-1, 6.489E-1, 6.348E-1, 6.189E-1, 6.021E-1,    
     9   5.843E-1, 5.665E-1, 5.518E-1, 5.395E-1, 5.387E-1, 5.451E-1,    
     &   5.786E-1, 6.198E-1, 6.764E-1, 7.333E-1, 7.850E-1, 8.371E-1,    
     1   8.911E-1, 9.469E-1, 1.006E+0, 1.052E+0, 1.073E+0, 1.088E+0,    
     2   1.095E+0, 1.061E+0, 9.809E-1, 9.314E-1, 9.092E-1, 8.823E-1,    
     3   8.522E-1, 8.445E-1, 8.501E-1, 8.584E-1, 8.686E-1, 8.892E-1,    
     4   9.156E-1, 9.665E-1, 1.029E+0, 1.129E+0, 1.237E+0, 1.324E+0,    
     5   1.404E+0, 1.463E+0, 1.509E+0, 1.504E+0, 1.491E+0, 1.483E+0,    
     6   1.481E+0, 1.505E+0, 1.529E+0, 1.538E+0, 1.534E+0, 1.492E+0,    
     7   1.433E+0, 1.336E+0, 1.246E+0, 1.177E+0/                        
      DATA (SO2CRS(I),I= 1301, 1400)/                                   
     1   1.118E+0, 1.079E+0, 1.050E+0, 1.038E+0, 1.024E+0, 1.005E+0,    
     2   9.783E-1, 9.404E-1, 9.321E-1, 9.611E-1, 1.028E+0, 1.138E+0,    
     3   1.234E+0, 1.318E+0, 1.415E+0, 1.523E+0, 1.647E+0, 1.782E+0,    
     4   1.875E+0, 1.938E+0, 2.054E+0, 2.204E+0, 2.360E+0, 2.516E+0,    
     5   2.476E+0, 2.331E+0, 2.207E+0, 2.096E+0, 2.048E+0, 2.030E+0,    
     6   2.036E+0, 2.051E+0, 2.028E+0, 1.991E+0, 2.024E+0, 2.083E+0,    
     7   2.151E+0, 2.227E+0, 2.360E+0, 2.509E+0, 2.589E+0, 2.638E+0,    
     8   2.574E+0, 2.478E+0, 2.433E+0, 2.403E+0, 2.383E+0, 2.367E+0,    
     9   2.369E+0, 2.379E+0, 2.415E+0, 2.448E+0, 2.383E+0, 2.287E+0,    
     &   2.151E+0, 2.013E+0, 1.971E+0, 1.956E+0, 1.957E+0, 1.966E+0,    
     1   2.018E+0, 2.081E+0, 2.155E+0, 2.237E+0, 2.372E+0, 2.523E+0,    
     2   2.704E+0, 2.901E+0, 3.182E+0, 3.471E+0, 3.611E+0, 3.694E+0,    
     3   3.591E+0, 3.446E+0, 3.383E+0, 3.349E+0, 3.386E+0, 3.451E+0,    
     4   3.602E+0, 3.767E+0, 3.790E+0, 3.754E+0, 3.484E+0, 3.152E+0,    
     5   3.010E+0, 2.937E+0, 2.959E+0, 3.015E+0, 3.097E+0, 3.181E+0,    
     6   3.115E+0, 2.992E+0, 2.962E+0, 2.969E+0, 2.906E+0, 2.810E+0,    
     7   2.648E+0, 2.457E+0, 2.340E+0, 2.263E+0/                        
      DATA (SO2CRS(I),I= 1401, 1500)/                                   
     1   2.220E+0, 2.199E+0, 2.270E+0, 2.397E+0, 2.499E+0, 2.583E+0,    
     2   2.738E+0, 2.946E+0, 3.113E+0, 3.244E+0, 3.236E+0, 3.097E+0,    
     3   3.110E+0, 3.286E+0, 3.517E+0, 3.815E+0, 4.155E+0, 4.554E+0,    
     4   4.960E+0, 5.380E+0, 5.764E+0, 6.084E+0, 6.403E+0, 6.723E+0,    
     5   6.906E+0, 6.769E+0, 6.533E+0, 6.068E+0, 5.603E+0, 5.175E+0,    
     6   4.765E+0, 4.407E+0, 4.126E+0, 4.148E+0, 4.173E+0, 4.040E+0,    
     7   3.887E+0, 3.743E+0, 3.610E+0, 3.535E+0, 3.482E+0, 3.524E+0,    
     8   3.587E+0, 3.633E+0, 3.674E+0, 3.694E+0, 3.703E+0, 3.616E+0,    
     9   3.490E+0, 3.384E+0, 3.290E+0, 3.296E+0, 3.363E+0, 3.457E+0,    
     &   3.571E+0, 3.753E+0, 3.996E+0, 4.281E+0, 4.615E+0, 4.973E+0,    
     1   5.367E+0, 5.727E+0, 6.024E+0, 6.312E+0, 6.582E+0, 6.838E+0,    
     2   7.056E+0, 7.260E+0, 7.417E+0, 7.644E+0, 8.218E+0, 8.824E+0,    
     3   9.356E+0, 9.797E+0, 9.570E+0, 9.172E+0, 8.506E+0, 7.758E+0,    
     4   6.942E+0, 6.115E+0, 5.744E+0, 5.595E+0, 5.544E+0, 5.554E+0,    
     5   5.532E+0, 5.483E+0, 5.310E+0, 4.996E+0, 4.819E+0, 4.851E+0,    
     6   4.898E+0, 4.975E+0, 5.040E+0, 5.073E+0, 5.073E+0, 4.962E+0,    
     7   4.856E+0, 4.828E+0, 4.822E+0, 4.895E+0/                        
      DATA (SO2CRS(I),I= 1501, 1600)/                                   
     1   4.995E+0, 5.210E+0, 5.458E+0, 5.743E+0, 6.044E+0, 6.414E+0,    
     2   6.818E+0, 7.347E+0, 7.960E+0, 8.635E+0, 9.370E+0, 1.013E+1,    
     3   1.092E+1, 1.175E+1, 1.267E+1, 1.348E+1, 1.397E+1, 1.417E+1,    
     4   1.332E+1, 1.230E+1, 1.096E+1, 9.597E+0, 8.465E+0, 7.440E+0,    
     5   7.193E+0, 7.193E+0, 6.891E+0, 6.446E+0, 5.963E+0, 5.454E+0,    
     6   5.137E+0, 5.016E+0, 4.987E+0, 5.100E+0, 5.159E+0, 5.094E+0,    
     7   5.032E+0, 5.000E+0, 4.987E+0, 5.067E+0, 5.165E+0, 5.320E+0,    
     8   5.494E+0, 5.783E+0, 6.111E+0, 6.497E+0, 6.910E+0, 7.246E+0,    
     9   7.526E+0, 7.849E+0, 8.221E+0, 8.605E+0, 9.008E+0, 9.509E+0,    
     &   1.028E+1, 1.110E+1, 1.210E+1, 1.318E+1, 1.460E+1, 1.605E+1,    
     1   1.707E+1, 1.793E+1, 1.791E+1, 1.749E+1, 1.676E+1, 1.580E+1,    
     2   1.481E+1, 1.380E+1, 1.278E+1, 1.178E+1, 1.081E+1, 9.918E+0,    
     3   9.031E+0, 8.135E+0, 7.265E+0, 6.616E+0, 6.027E+0, 5.623E+0,    
     4   5.290E+0, 5.057E+0, 4.885E+0, 4.728E+0, 4.586E+0, 4.539E+0,    
     5   4.653E+0, 4.816E+0, 5.109E+0, 5.403E+0, 5.665E+0, 5.928E+0,    
     6   6.239E+0, 6.563E+0, 6.937E+0, 7.329E+0, 7.701E+0, 8.059E+0,    
     7   8.521E+0, 9.099E+0, 9.756E+0, 1.056E+1/                        
      DATA (SO2CRS(I),I= 1601, 1700)/                                   
     1   1.144E+1, 1.250E+1, 1.356E+1, 1.448E+1, 1.538E+1, 1.621E+1,    
     2   1.703E+1, 1.793E+1, 1.888E+1, 1.990E+1, 2.098E+1, 2.135E+1,    
     3   2.058E+1, 1.924E+1, 1.634E+1, 1.356E+1, 1.184E+1, 1.030E+1,    
     4   9.133E+0, 8.080E+0, 7.418E+0, 6.934E+0, 6.613E+0, 6.426E+0,    
     5   6.272E+0, 6.167E+0, 6.121E+0, 6.233E+0, 6.334E+0, 6.332E+0,    
     6   6.333E+0, 6.514E+0, 6.744E+0, 7.001E+0, 7.272E+0, 7.598E+0,    
     7   7.977E+0, 8.417E+0, 8.969E+0, 9.517E+0, 1.005E+1, 1.058E+1,    
     8   1.109E+1, 1.161E+1, 1.240E+1, 1.329E+1, 1.435E+1, 1.553E+1,    
     9   1.678E+1, 1.813E+1, 1.940E+1, 2.049E+1, 2.155E+1, 2.250E+1,    
     &   2.341E+1, 2.403E+1, 2.455E+1, 2.419E+1, 2.337E+1, 2.172E+1,    
     1   1.919E+1, 1.670E+1, 1.431E+1, 1.214E+1, 1.087E+1, 9.699E+0,    
     2   8.545E+0, 7.410E+0, 6.763E+0, 6.352E+0, 6.139E+0, 6.122E+0,    
     3   6.143E+0, 6.241E+0, 6.388E+0, 6.724E+0, 7.090E+0, 7.560E+0,    
     4   8.052E+0, 8.366E+0, 8.591E+0, 9.120E+0, 9.974E+0, 1.073E+1,    
     5   1.125E+1, 1.177E+1, 1.235E+1, 1.293E+1, 1.333E+1, 1.369E+1,    
     6   1.424E+1, 1.490E+1, 1.579E+1, 1.698E+1, 1.826E+1, 1.979E+1,    
     7   2.131E+1, 2.267E+1, 2.402E+1, 2.549E+1/                        
      DATA (SO2CRS(I),I= 1701, 1800)/                                   
     1   2.702E+1, 2.833E+1, 2.947E+1, 3.029E+1, 3.053E+1, 3.064E+1,    
     2   3.028E+1, 2.971E+1, 2.752E+1, 2.488E+1, 2.065E+1, 1.555E+1,    
     3   1.213E+1, 1.087E+1, 9.751E+0, 9.008E+0, 8.374E+0, 8.311E+0,    
     4   8.360E+0, 8.575E+0, 8.860E+0, 9.337E+0, 9.998E+0, 1.073E+1,    
     5   1.161E+1, 1.250E+1, 1.336E+1, 1.422E+1, 1.515E+1, 1.610E+1,    
     6   1.672E+1, 1.707E+1, 1.772E+1, 1.898E+1, 2.013E+1, 2.069E+1,    
     7   2.118E+1, 2.162E+1, 2.204E+1, 2.235E+1, 2.258E+1, 2.274E+1,    
     8   2.279E+1, 2.287E+1, 2.308E+1, 2.335E+1, 2.417E+1, 2.516E+1,    
     9   2.604E+1, 2.684E+1, 2.718E+1, 2.666E+1, 2.601E+1, 2.484E+1,    
     &   2.361E+1, 2.232E+1, 2.101E+1, 1.967E+1, 1.830E+1, 1.692E+1,    
     1   1.548E+1, 1.404E+1, 1.260E+1, 1.121E+1, 1.067E+1, 1.043E+1,    
     2   1.031E+1, 1.029E+1, 1.037E+1, 1.067E+1, 1.107E+1, 1.211E+1,    
     3   1.323E+1, 1.367E+1, 1.381E+1, 1.425E+1, 1.507E+1, 1.603E+1,    
     4   1.739E+1, 1.867E+1, 1.894E+1, 1.896E+1, 1.920E+1, 1.957E+1,    
     5   2.054E+1, 2.239E+1, 2.427E+1, 2.620E+1, 2.795E+1, 2.866E+1,    
     6   2.918E+1, 2.896E+1, 2.824E+1, 2.741E+1, 2.642E+1, 2.539E+1,    
     7   2.415E+1, 2.288E+1, 2.172E+1, 2.059E+1/                        
      DATA (SO2CRS(I),I= 1801, 1900)/                                   
     1   1.942E+1, 1.820E+1, 1.703E+1, 1.600E+1, 1.508E+1, 1.477E+1,    
     2   1.456E+1, 1.398E+1, 1.315E+1, 1.259E+1, 1.242E+1, 1.231E+1,    
     3   1.255E+1, 1.286E+1, 1.326E+1, 1.369E+1, 1.420E+1, 1.483E+1,    
     4   1.531E+1, 1.538E+1, 1.543E+1, 1.559E+1, 1.579E+1, 1.633E+1,    
     5   1.710E+1, 1.794E+1, 1.899E+1, 2.004E+1, 2.098E+1, 2.190E+1,    
     6   2.246E+1, 2.277E+1, 2.325E+1, 2.398E+1, 2.470E+1, 2.537E+1,    
     7   2.602E+1, 2.634E+1, 2.642E+1, 2.626E+1, 2.573E+1, 2.528E+1,    
     8   2.534E+1, 2.549E+1, 2.559E+1, 2.567E+1, 2.543E+1, 2.474E+1,    
     9   2.348E+1, 2.060E+1, 1.771E+1, 1.633E+1, 1.547E+1, 1.493E+1,    
     &   1.485E+1, 1.485E+1, 1.504E+1, 1.526E+1, 1.574E+1, 1.631E+1,    
     1   1.689E+1, 1.751E+1, 1.823E+1, 1.928E+1, 2.033E+1, 2.120E+1,    
     2   2.200E+1, 2.265E+1, 2.309E+1, 2.344E+1, 2.350E+1, 2.355E+1,    
     3   2.367E+1, 2.382E+1, 2.411E+1, 2.462E+1, 2.504E+1, 2.519E+1,    
     4   2.535E+1, 2.578E+1, 2.631E+1, 2.665E+1, 2.673E+1, 2.665E+1,    
     5   2.608E+1, 2.547E+1, 2.469E+1, 2.385E+1, 2.287E+1, 2.170E+1,    
     6   2.062E+1, 2.013E+1, 1.968E+1, 1.854E+1, 1.716E+1, 1.629E+1,    
     7   1.616E+1, 1.609E+1, 1.644E+1, 1.685E+1/                        
      DATA (SO2CRS(I),I= 1901, 2000)/                                   
     1   1.765E+1, 1.870E+1, 1.935E+1, 1.940E+1, 1.945E+1, 1.957E+1,    
     2   1.970E+1, 2.001E+1, 2.046E+1, 2.088E+1, 2.126E+1, 2.163E+1,    
     3   2.209E+1, 2.257E+1, 2.307E+1, 2.358E+1, 2.424E+1, 2.537E+1,    
     4   2.651E+1, 2.733E+1, 2.803E+1, 2.793E+1, 2.665E+1, 2.534E+1,    
     5   2.395E+1, 2.256E+1, 2.200E+1, 2.203E+1, 2.213E+1, 2.232E+1,    
     6   2.255E+1, 2.293E+1, 2.333E+1, 2.341E+1, 2.326E+1, 2.288E+1,    
     7   2.183E+1, 2.079E+1, 2.044E+1, 2.033E+1, 2.011E+1, 1.975E+1,    
     8   1.940E+1, 1.914E+1, 1.890E+1, 1.876E+1, 1.870E+1, 1.872E+1,    
     9   1.896E+1, 1.925E+1, 1.995E+1, 2.078E+1, 2.154E+1, 2.217E+1,    
     &   2.279E+1, 2.329E+1, 2.377E+1, 2.437E+1, 2.506E+1, 2.574E+1,    
     1   2.641E+1, 2.708E+1, 2.774E+1, 2.839E+1, 2.886E+1, 2.909E+1,    
     2   2.909E+1, 2.777E+1, 2.622E+1, 2.456E+1, 2.282E+1, 2.127E+1,    
     3   2.027E+1, 1.934E+1, 1.901E+1, 1.888E+1, 1.892E+1, 1.921E+1,    
     4   1.953E+1, 2.001E+1, 2.051E+1, 2.079E+1, 2.091E+1, 2.106E+1,    
     5   2.127E+1, 2.149E+1, 2.194E+1, 2.246E+1, 2.277E+1, 2.280E+1,    
     6   2.282E+1, 2.284E+1, 2.286E+1, 2.295E+1, 2.308E+1, 2.333E+1,    
     7   2.388E+1, 2.446E+1, 2.495E+1, 2.542E+1/                        
      DATA (SO2CRS(I),I= 2001, 2100)/                                   
     1   2.570E+1, 2.572E+1, 2.574E+1, 2.577E+1, 2.579E+1, 2.586E+1,    
     2   2.600E+1, 2.618E+1, 2.659E+1, 2.704E+1, 2.734E+1, 2.754E+1,    
     3   2.779E+1, 2.816E+1, 2.851E+1, 2.835E+1, 2.802E+1, 2.697E+1,    
     4   2.384E+1, 2.071E+1, 1.949E+1, 1.895E+1, 1.857E+1, 1.846E+1,    
     5   1.838E+1, 1.852E+1, 1.869E+1, 1.898E+1, 1.936E+1, 1.970E+1,    
     6   1.991E+1, 2.009E+1, 2.025E+1, 2.040E+1, 2.066E+1, 2.122E+1,    
     7   2.178E+1, 2.225E+1, 2.267E+1, 2.310E+1, 2.352E+1, 2.393E+1,    
     8   2.428E+1, 2.459E+1, 2.484E+1, 2.499E+1, 2.517E+1, 2.557E+1,    
     9   2.600E+1, 2.633E+1, 2.651E+1, 2.673E+1, 2.718E+1, 2.767E+1,    
     &   2.818E+1, 2.871E+1, 2.905E+1, 2.834E+1, 2.744E+1, 2.617E+1,    
     1   2.465E+1, 2.349E+1, 2.343E+1, 2.343E+1, 2.335E+1, 2.322E+1,    
     2   2.298E+1, 2.243E+1, 2.188E+1, 2.159E+1, 2.138E+1, 2.123E+1,    
     3   2.122E+1, 2.121E+1, 2.116E+1, 2.109E+1, 2.091E+1, 2.058E+1,    
     4   2.025E+1, 2.001E+1, 1.981E+1, 1.980E+1, 2.006E+1, 2.033E+1,    
     5   2.056E+1, 2.079E+1, 2.117E+1, 2.179E+1, 2.233E+1, 2.243E+1,    
     6   2.245E+1, 2.247E+1, 2.250E+1, 2.255E+1, 2.277E+1, 2.303E+1,    
     7   2.359E+1, 2.462E+1, 2.556E+1, 2.601E+1/                        
      DATA (SO2CRS(I),I= 2101, 2200)/                                   
     1   2.637E+1, 2.681E+1, 2.735E+1, 2.775E+1, 2.734E+1, 2.680E+1,    
     2   2.509E+1, 2.170E+1, 1.870E+1, 1.807E+1, 1.785E+1, 1.787E+1,    
     3   1.826E+1, 1.863E+1, 1.889E+1, 1.913E+1, 1.928E+1, 1.930E+1,    
     4   1.933E+1, 1.935E+1, 1.937E+1, 1.943E+1, 1.953E+1, 1.965E+1,    
     5   1.994E+1, 2.025E+1, 2.060E+1, 2.100E+1, 2.141E+1, 2.179E+1,    
     6   2.216E+1, 2.254E+1, 2.291E+1, 2.329E+1, 2.369E+1, 2.410E+1,    
     7   2.451E+1, 2.489E+1, 2.528E+1, 2.563E+1, 2.598E+1, 2.626E+1,    
     8   2.643E+1, 2.659E+1, 2.672E+1, 2.683E+1, 2.690E+1, 2.682E+1,    
     9   2.671E+1, 2.636E+1, 2.592E+1, 2.531E+1, 2.423E+1, 2.313E+1,    
     &   2.193E+1, 2.068E+1, 1.971E+1, 1.957E+1, 1.948E+1, 1.944E+1,    
     1   1.942E+1, 1.941E+1, 1.948E+1, 1.957E+1, 1.973E+1, 1.993E+1,    
     2   2.016E+1, 2.050E+1, 2.087E+1, 2.116E+1, 2.137E+1, 2.157E+1,    
     3   2.170E+1, 2.180E+1, 2.201E+1, 2.237E+1, 2.276E+1, 2.360E+1,    
     4   2.458E+1, 2.536E+1, 2.554E+1, 2.569E+1, 2.560E+1, 2.535E+1,    
     5   2.485E+1, 2.361E+1, 2.233E+1, 2.101E+1, 1.965E+1, 1.840E+1,    
     6   1.778E+1, 1.728E+1, 1.726E+1, 1.796E+1, 1.866E+1, 1.939E+1,    
     7   2.012E+1, 2.088E+1, 2.169E+1, 2.250E+1/                        
      DATA (SO2CRS(I),I= 2201, 2300)/                                   
     1   2.319E+1, 2.385E+1, 2.431E+1, 2.417E+1, 2.398E+1, 2.322E+1,    
     2   2.205E+1, 2.088E+1, 1.970E+1, 1.852E+1, 1.767E+1, 1.729E+1,    
     3   1.700E+1, 1.721E+1, 1.750E+1, 1.774E+1, 1.791E+1, 1.809E+1,    
     4   1.848E+1, 1.893E+1, 1.938E+1, 1.984E+1, 2.029E+1, 2.075E+1,    
     5   2.120E+1, 2.165E+1, 2.206E+1, 2.246E+1, 2.272E+1, 2.278E+1,    
     6   2.282E+1, 2.254E+1, 2.215E+1, 2.179E+1, 2.154E+1, 2.130E+1,    
     7   2.106E+1, 2.080E+1, 2.047E+1, 1.967E+1, 1.879E+1, 1.841E+1,    
     8   1.874E+1, 1.908E+1, 1.940E+1, 1.972E+1, 2.007E+1, 2.050E+1,    
     9   2.095E+1, 2.122E+1, 2.138E+1, 2.146E+1, 2.106E+1, 2.059E+1,    
     &   2.011E+1, 1.964E+1, 1.917E+1, 1.883E+1, 1.853E+1, 1.841E+1,    
     1   1.880E+1, 1.923E+1, 1.969E+1, 2.018E+1, 2.062E+1, 2.082E+1,    
     2   2.097E+1, 2.093E+1, 2.061E+1, 2.025E+1, 1.937E+1, 1.831E+1,    
     3   1.744E+1, 1.709E+1, 1.678E+1, 1.667E+1, 1.669E+1, 1.671E+1,    
     4   1.675E+1, 1.679E+1, 1.687E+1, 1.701E+1, 1.715E+1, 1.735E+1,    
     5   1.756E+1, 1.777E+1, 1.797E+1, 1.817E+1, 1.836E+1, 1.853E+1,    
     6   1.869E+1, 1.877E+1, 1.882E+1, 1.887E+1, 1.891E+1, 1.894E+1,    
     7   1.902E+1, 1.914E+1, 1.926E+1, 1.939E+1/                        
      DATA (SO2CRS(I),I= 2301, 2400)/                                   
     1   1.953E+1, 1.962E+1, 1.962E+1, 1.960E+1, 1.950E+1, 1.936E+1,    
     2   1.922E+1, 1.913E+1, 1.905E+1, 1.901E+1, 1.901E+1, 1.901E+1,    
     3   1.899E+1, 1.898E+1, 1.894E+1, 1.877E+1, 1.857E+1, 1.819E+1,    
     4   1.755E+1, 1.690E+1, 1.635E+1, 1.583E+1, 1.536E+1, 1.503E+1,    
     5   1.472E+1, 1.449E+1, 1.439E+1, 1.430E+1, 1.429E+1, 1.430E+1,    
     6   1.435E+1, 1.452E+1, 1.471E+1, 1.514E+1, 1.593E+1, 1.672E+1,    
     7   1.735E+1, 1.791E+1, 1.837E+1, 1.852E+1, 1.864E+1, 1.874E+1,    
     8   1.878E+1, 1.883E+1, 1.892E+1, 1.903E+1, 1.919E+1, 1.951E+1,    
     9   1.984E+1, 2.023E+1, 2.070E+1, 2.115E+1, 2.116E+1, 2.103E+1,    
     &   2.077E+1, 2.014E+1, 1.948E+1, 1.881E+1, 1.813E+1, 1.747E+1,    
     1   1.723E+1, 1.713E+1, 1.704E+1, 1.701E+1, 1.698E+1, 1.697E+1,    
     2   1.699E+1, 1.701E+1, 1.703E+1, 1.705E+1, 1.707E+1, 1.708E+1,    
     3   1.709E+1, 1.709E+1, 1.706E+1, 1.703E+1, 1.699E+1, 1.693E+1,    
     4   1.687E+1, 1.681E+1, 1.675E+1, 1.669E+1, 1.661E+1, 1.653E+1,    
     5   1.647E+1, 1.643E+1, 1.639E+1, 1.645E+1, 1.655E+1, 1.665E+1,    
     6   1.678E+1, 1.691E+1, 1.703E+1, 1.710E+1, 1.718E+1, 1.723E+1,    
     7   1.728E+1, 1.730E+1, 1.720E+1, 1.707E+1/                        
      DATA (SO2CRS(I),I= 2401, 2500)/                                   
     1   1.687E+1, 1.658E+1, 1.628E+1, 1.600E+1, 1.574E+1, 1.551E+1,    
     2   1.549E+1, 1.550E+1, 1.549E+1, 1.538E+1, 1.527E+1, 1.499E+1,    
     3   1.445E+1, 1.393E+1, 1.362E+1, 1.338E+1, 1.317E+1, 1.314E+1,    
     4   1.313E+1, 1.315E+1, 1.320E+1, 1.325E+1, 1.331E+1, 1.336E+1,    
     5   1.341E+1, 1.352E+1, 1.365E+1, 1.378E+1, 1.392E+1, 1.405E+1,    
     6   1.419E+1, 1.432E+1, 1.445E+1, 1.467E+1, 1.494E+1, 1.521E+1,    
     7   1.550E+1, 1.579E+1, 1.601E+1, 1.601E+1, 1.600E+1, 1.591E+1,    
     8   1.572E+1, 1.553E+1, 1.504E+1, 1.437E+1, 1.372E+1, 1.324E+1,    
     9   1.279E+1, 1.242E+1, 1.227E+1, 1.214E+1, 1.210E+1, 1.221E+1,    
     &   1.231E+1, 1.246E+1, 1.263E+1, 1.280E+1, 1.293E+1, 1.306E+1,    
     1   1.320E+1, 1.336E+1, 1.353E+1, 1.361E+1, 1.357E+1, 1.353E+1,    
     2   1.336E+1, 1.310E+1, 1.285E+1, 1.267E+1, 1.251E+1, 1.236E+1,    
     3   1.228E+1, 1.221E+1, 1.227E+1, 1.252E+1, 1.277E+1, 1.339E+1,    
     4   1.427E+1, 1.513E+1, 1.571E+1, 1.618E+1, 1.657E+1, 1.641E+1,    
     5   1.617E+1, 1.562E+1, 1.461E+1, 1.360E+1, 1.300E+1, 1.268E+1,    
     6   1.235E+1, 1.196E+1, 1.156E+1, 1.117E+1, 1.094E+1, 1.073E+1,    
     7   1.059E+1, 1.063E+1, 1.069E+1, 1.077E+1/                        
      DATA (SO2CRS(I),I= 2501, 2600)/                                   
     1   1.087E+1, 1.097E+1, 1.115E+1, 1.137E+1, 1.158E+1, 1.175E+1,    
     2   1.191E+1, 1.203E+1, 1.193E+1, 1.180E+1, 1.165E+1, 1.145E+1,    
     3   1.126E+1, 1.111E+1, 1.103E+1, 1.096E+1, 1.099E+1, 1.107E+1,    
     4   1.117E+1, 1.137E+1, 1.160E+1, 1.187E+1, 1.234E+1, 1.284E+1,    
     5   1.325E+1, 1.339E+1, 1.351E+1, 1.355E+1, 1.347E+1, 1.339E+1,    
     6   1.320E+1, 1.293E+1, 1.266E+1, 1.221E+1, 1.171E+1, 1.126E+1,    
     7   1.111E+1, 1.101E+1, 1.099E+1, 1.118E+1, 1.138E+1, 1.163E+1,    
     8   1.192E+1, 1.222E+1, 1.235E+1, 1.236E+1, 1.236E+1, 1.230E+1,    
     9   1.221E+1, 1.209E+1, 1.176E+1, 1.139E+1, 1.103E+1, 1.068E+1,    
     &   1.034E+1, 1.005E+1, 9.856E+0, 9.661E+0, 9.549E+0, 9.560E+0,    
     1   9.572E+0, 9.655E+0, 9.788E+0, 9.922E+0, 1.009E+1, 1.026E+1,    
     2   1.045E+1, 1.071E+1, 1.098E+1, 1.121E+1, 1.130E+1, 1.138E+1,    
     3   1.132E+1, 1.105E+1, 1.078E+1, 1.058E+1, 1.047E+1, 1.036E+1,    
     4   1.030E+1, 1.027E+1, 1.026E+1, 1.049E+1, 1.080E+1, 1.112E+1,    
     5   1.142E+1, 1.173E+1, 1.199E+1, 1.204E+1, 1.204E+1, 1.202E+1,    
     6   1.194E+1, 1.185E+1, 1.169E+1, 1.144E+1, 1.118E+1, 1.089E+1,    
     7   1.059E+1, 1.028E+1, 1.015E+1, 1.013E+1/                        
      DATA (SO2CRS(I),I= 2601, 2700)/                                   
     1   1.011E+1, 1.006E+1, 1.001E+1, 9.926E+0, 9.720E+0, 9.493E+0,    
     2   9.262E+0, 8.999E+0, 8.731E+0, 8.527E+0, 8.508E+0, 8.500E+0,    
     3   8.518E+0, 8.573E+0, 8.629E+0, 8.699E+0, 8.790E+0, 8.880E+0,    
     4   8.829E+0, 8.683E+0, 8.533E+0, 8.337E+0, 8.124E+0, 7.915E+0,    
     5   7.747E+0, 7.593E+0, 7.485E+0, 7.652E+0, 7.864E+0, 8.062E+0,    
     6   8.175E+0, 8.274E+0, 8.360E+0, 8.406E+0, 8.450E+0, 8.477E+0,    
     7   8.477E+0, 8.477E+0, 8.477E+0, 8.477E+0, 8.477E+0, 8.479E+0,    
     8   8.483E+0, 8.486E+0, 8.505E+0, 8.534E+0, 8.563E+0, 8.604E+0,    
     9   8.649E+0, 8.688E+0, 8.641E+0, 8.564E+0, 8.483E+0, 8.374E+0,    
     &   8.260E+0, 8.168E+0, 8.202E+0, 8.258E+0, 8.313E+0, 8.368E+0,    
     1   8.422E+0, 8.485E+0, 8.572E+0, 8.660E+0, 8.754E+0, 8.856E+0,    
     2   8.958E+0, 8.998E+0, 8.948E+0, 8.897E+0, 8.820E+0, 8.724E+0,    
     3   8.628E+0, 8.545E+0, 8.469E+0, 8.394E+0, 8.320E+0, 8.246E+0,    
     4   8.179E+0, 8.229E+0, 8.318E+0, 8.411E+0, 8.555E+0, 8.716E+0,    
     5   8.867E+0, 8.956E+0, 9.035E+0, 9.116E+0, 9.209E+0, 9.305E+0,    
     6   9.380E+0, 9.331E+0, 9.261E+0, 9.141E+0, 8.876E+0, 8.602E+0,    
     7   8.373E+0, 8.275E+0, 8.186E+0, 8.089E+0/                        
      DATA (SO2CRS(I),I= 2701, 2800)/                                   
     1   7.970E+0, 7.850E+0, 7.784E+0, 7.797E+0, 7.811E+0, 7.840E+0,    
     2   7.894E+0, 7.948E+0, 7.958E+0, 7.905E+0, 7.851E+0, 7.805E+0,    
     3   7.763E+0, 7.722E+0, 7.697E+0, 7.681E+0, 7.666E+0, 7.634E+0,    
     4   7.590E+0, 7.546E+0, 7.519E+0, 7.504E+0, 7.488E+0, 7.462E+0,    
     5   7.434E+0, 7.406E+0, 7.389E+0, 7.375E+0, 7.362E+0, 7.348E+0,    
     6   7.333E+0, 7.319E+0, 7.305E+0, 7.290E+0, 7.277E+0, 7.273E+0,    
     7   7.273E+0, 7.273E+0, 7.273E+0, 7.273E+0, 7.273E+0, 7.273E+0,    
     8   7.273E+0, 7.273E+0, 7.273E+0, 7.273E+0, 7.273E+0, 7.273E+0,    
     9   7.273E+0, 7.271E+0, 7.260E+0, 7.246E+0, 7.233E+0, 7.219E+0,    
     &   7.204E+0, 7.187E+0, 7.149E+0, 7.107E+0, 7.066E+0, 7.023E+0,    
     1   6.980E+0, 6.938E+0, 6.898E+0, 6.859E+0, 6.819E+0, 6.781E+0,    
     2   6.742E+0, 6.695E+0, 6.620E+0, 6.544E+0, 6.469E+0, 6.395E+0,    
     3   6.322E+0, 6.245E+0, 6.158E+0, 6.070E+0, 5.985E+0, 5.910E+0,    
     4   5.836E+0, 5.772E+0, 5.738E+0, 5.706E+0, 5.681E+0, 5.680E+0,    
     5   5.680E+0, 5.683E+0, 5.693E+0, 5.704E+0, 5.720E+0, 5.752E+0,    
     6   5.785E+0, 5.824E+0, 5.879E+0, 5.936E+0, 5.990E+0, 6.037E+0,    
     7   6.083E+0, 6.130E+0, 6.177E+0, 6.225E+0/                        
      DATA (SO2CRS(I),I= 2801, 2900)/                                   
     1   6.276E+0, 6.336E+0, 6.397E+0, 6.443E+0, 6.446E+0, 6.446E+0,    
     2   6.446E+0, 6.446E+0, 6.446E+0, 6.444E+0, 6.433E+0, 6.421E+0,    
     3   6.401E+0, 6.335E+0, 6.263E+0, 6.192E+0, 6.132E+0, 6.074E+0,    
     4   6.017E+0, 5.970E+0, 5.924E+0, 5.876E+0, 5.812E+0, 5.746E+0,    
     5   5.680E+0, 5.615E+0, 5.551E+0, 5.485E+0, 5.409E+0, 5.332E+0,    
     6   5.256E+0, 5.192E+0, 5.133E+0, 5.074E+0, 5.023E+0, 4.975E+0,    
     7   4.926E+0, 4.865E+0, 4.801E+0, 4.737E+0, 4.677E+0, 4.619E+0,    
     8   4.561E+0, 4.502E+0, 4.442E+0, 4.382E+0, 4.319E+0, 4.253E+0,    
     9   4.188E+0, 4.162E+0, 4.162E+0, 4.162E+0, 4.180E+0, 4.210E+0,    
     &   4.240E+0, 4.299E+0, 4.400E+0, 4.501E+0, 4.598E+0, 4.689E+0,    
     1   4.779E+0, 4.880E+0, 4.995E+0, 5.111E+0, 5.226E+0, 5.341E+0,    
     2   5.456E+0, 5.562E+0, 5.640E+0, 5.716E+0, 5.793E+0, 5.872E+0,    
     3   5.952E+0, 6.020E+0, 6.055E+0, 6.088E+0, 6.106E+0, 6.040E+0,    
     4   5.959E+0, 5.880E+0, 5.806E+0, 5.733E+0, 5.660E+0, 5.603E+0,    
     5   5.550E+0, 5.497E+0, 5.453E+0, 5.411E+0, 5.368E+0, 5.323E+0,    
     6   5.276E+0, 5.229E+0, 5.186E+0, 5.147E+0, 5.107E+0, 5.064E+0,    
     7   5.019E+0, 4.974E+0, 4.931E+0, 4.894E+0/                        
      DATA (SO2CRS(I),I= 2901, 3000)/                                   
     1   4.856E+0, 4.820E+0, 4.785E+0, 4.751E+0, 4.714E+0, 4.670E+0,    
     2   4.625E+0, 4.581E+0, 4.541E+0, 4.500E+0, 4.461E+0, 4.426E+0,    
     3   4.392E+0, 4.359E+0, 4.334E+0, 4.311E+0, 4.287E+0, 4.263E+0,    
     4   4.239E+0, 4.214E+0, 4.180E+0, 4.142E+0, 4.105E+0, 4.080E+0,    
     5   4.065E+0, 4.050E+0, 4.031E+0, 4.009E+0, 3.987E+0, 3.965E+0,    
     6   3.942E+0, 3.920E+0, 3.898E+0, 3.877E+0, 3.856E+0, 3.835E+0,    
     7   3.814E+0, 3.793E+0, 3.771E+0, 3.745E+0, 3.717E+0, 3.690E+0,    
     8   3.669E+0, 3.649E+0, 3.629E+0, 3.614E+0, 3.600E+0, 3.587E+0,    
     9   3.579E+0, 3.572E+0, 3.565E+0, 3.544E+0, 3.512E+0, 3.480E+0,    
     &   3.456E+0, 3.443E+0, 3.431E+0, 3.413E+0, 3.389E+0, 3.365E+0,    
     1   3.343E+0, 3.330E+0, 3.317E+0, 3.306E+0, 3.299E+0, 3.293E+0,    
     2   3.287E+0, 3.281E+0, 3.275E+0, 3.268E+0, 3.258E+0, 3.246E+0,    
     3   3.234E+0, 3.226E+0, 3.220E+0, 3.214E+0, 3.204E+0, 3.187E+0,    
     4   3.170E+0, 3.155E+0, 3.142E+0, 3.129E+0, 3.121E+0, 3.126E+0,    
     5   3.132E+0, 3.138E+0, 3.144E+0, 3.150E+0, 3.156E+0, 3.170E+0,    
     6   3.187E+0, 3.204E+0, 3.221E+0, 3.239E+0, 3.257E+0, 3.283E+0,    
     7   3.321E+0, 3.360E+0, 3.413E+0, 3.488E+0/                        
      DATA (SO2CRS(I),I= 3001, 3100)/                                   
     1   3.564E+0, 3.626E+0, 3.649E+0, 3.669E+0, 3.691E+0, 3.723E+0,    
     2   3.756E+0, 3.789E+0, 3.802E+0, 3.809E+0, 3.815E+0, 3.801E+0,    
     3   3.774E+0, 3.746E+0, 3.711E+0, 3.666E+0, 3.620E+0, 3.575E+0,    
     4   3.531E+0, 3.486E+0, 3.441E+0, 3.393E+0, 3.344E+0, 3.296E+0,    
     5   3.254E+0, 3.213E+0, 3.173E+0, 3.134E+0, 3.095E+0, 3.057E+0,    
     6   3.016E+0, 2.973E+0, 2.931E+0, 2.891E+0, 2.859E+0, 2.828E+0,    
     7   2.797E+0, 2.763E+0, 2.728E+0, 2.694E+0, 2.660E+0, 2.627E+0,    
     8   2.594E+0, 2.567E+0, 2.544E+0, 2.521E+0, 2.500E+0, 2.483E+0,    
     9   2.465E+0, 2.447E+0, 2.430E+0, 2.412E+0, 2.394E+0, 2.374E+0,    
     &   2.352E+0, 2.331E+0, 2.314E+0, 2.297E+0, 2.280E+0, 2.255E+0,    
     1   2.223E+0, 2.191E+0, 2.170E+0, 2.166E+0, 2.162E+0, 2.156E+0,    
     2   2.141E+0, 2.125E+0, 2.110E+0, 2.095E+0, 2.080E+0, 2.065E+0,    
     3   2.050E+0, 2.035E+0, 2.021E+0, 2.005E+0, 1.988E+0, 1.971E+0,    
     4   1.958E+0, 1.953E+0, 1.950E+0, 1.947E+0, 1.947E+0, 1.947E+0,    
     5   1.946E+0, 1.944E+0, 1.940E+0, 1.937E+0, 1.935E+0, 1.935E+0,    
     6   1.935E+0, 1.934E+0, 1.931E+0, 1.928E+0, 1.925E+0, 1.924E+0,    
     7   1.924E+0, 1.924E+0, 1.924E+0, 1.924E+0/                        
      DATA (SO2CRS(I),I= 3101, 3200)/                                   
     1   1.924E+0, 1.922E+0, 1.919E+0, 1.915E+0, 1.911E+0, 1.904E+0,    
     2   1.898E+0, 1.892E+0, 1.891E+0, 1.891E+0, 1.891E+0, 1.886E+0,    
     3   1.879E+0, 1.872E+0, 1.866E+0, 1.860E+0, 1.853E+0, 1.847E+0,    
     4   1.840E+0, 1.834E+0, 1.827E+0, 1.820E+0, 1.814E+0, 1.808E+0,    
     5   1.804E+0, 1.801E+0, 1.798E+0, 1.793E+0, 1.787E+0, 1.780E+0,    
     6   1.774E+0, 1.768E+0, 1.761E+0, 1.755E+0, 1.752E+0, 1.749E+0,    
     7   1.746E+0, 1.741E+0, 1.735E+0, 1.729E+0, 1.724E+0, 1.721E+0,    
     8   1.718E+0, 1.715E+0, 1.709E+0, 1.703E+0, 1.696E+0, 1.688E+0,    
     9   1.679E+0, 1.670E+0, 1.665E+0, 1.662E+0, 1.659E+0, 1.655E+0,    
     &   1.646E+0, 1.637E+0, 1.629E+0, 1.626E+0, 1.623E+0, 1.620E+0,    
     1   1.619E+0, 1.619E+0, 1.619E+0, 1.622E+0, 1.631E+0, 1.639E+0,    
     2   1.647E+0, 1.656E+0, 1.665E+0, 1.674E+0, 1.685E+0, 1.697E+0,    
     3   1.708E+0, 1.717E+0, 1.723E+0, 1.729E+0, 1.736E+0, 1.747E+0,    
     4   1.760E+0, 1.772E+0, 1.782E+0, 1.792E+0, 1.801E+0, 1.810E+0,    
     5   1.820E+0, 1.830E+0, 1.839E+0, 1.849E+0, 1.858E+0, 1.868E+0,    
     6   1.877E+0, 1.887E+0, 1.897E+0, 1.905E+0, 1.912E+0, 1.919E+0,    
     7   1.923E+0, 1.920E+0, 1.917E+0, 1.914E+0/                        
      DATA (SO2CRS(I),I= 3201, 3300)/                                   
     1   1.905E+0, 1.895E+0, 1.885E+0, 1.866E+0, 1.841E+0, 1.816E+0,    
     2   1.789E+0, 1.757E+0, 1.725E+0, 1.693E+0, 1.666E+0, 1.641E+0,    
     3   1.616E+0, 1.589E+0, 1.561E+0, 1.533E+0, 1.508E+0, 1.490E+0,    
     4   1.472E+0, 1.455E+0, 1.432E+0, 1.408E+0, 1.384E+0, 1.360E+0,    
     5   1.335E+0, 1.311E+0, 1.287E+0, 1.270E+0, 1.254E+0, 1.238E+0,    
     6   1.224E+0, 1.209E+0, 1.195E+0, 1.180E+0, 1.164E+0, 1.149E+0,    
     7   1.133E+0, 1.118E+0, 1.103E+0, 1.088E+0, 1.074E+0, 1.062E+0,    
     8   1.049E+0, 1.037E+0, 1.024E+0, 1.011E+0, 9.986E-1, 9.868E-1,    
     9   9.752E-1, 9.636E-1, 9.522E-1, 9.411E-1, 9.299E-1, 9.189E-1,    
     &   9.081E-1, 8.974E-1, 8.867E-1, 8.763E-1, 8.660E-1, 8.557E-1,    
     1   8.456E-1, 8.358E-1, 8.260E-1, 8.170E-1, 8.121E-1, 8.080E-1,    
     2   8.039E-1, 7.991E-1, 7.937E-1, 7.883E-1, 7.833E-1, 7.793E-1,    
     3   7.753E-1, 7.715E-1, 7.695E-1, 7.682E-1, 7.668E-1, 7.650E-1,    
     4   7.624E-1, 7.597E-1, 7.572E-1, 7.546E-1, 7.521E-1, 7.496E-1,    
     5   7.470E-1, 7.445E-1, 7.420E-1, 7.398E-1, 7.385E-1, 7.373E-1,    
     6   7.360E-1, 7.319E-1, 7.270E-1, 7.220E-1, 7.185E-1, 7.173E-1,    
     7   7.161E-1, 7.151E-1, 7.150E-1, 7.150E-1/                        
      DATA (SO2CRS(I),I= 3301, 3400)/                                   
     1   7.150E-1, 7.150E-1, 7.150E-1, 7.150E-1, 7.150E-1, 7.150E-1,    
     2   7.150E-1, 7.150E-1, 7.150E-1, 7.150E-1, 7.150E-1, 7.150E-1,    
     3   7.150E-1, 7.150E-1, 7.150E-1, 7.150E-1, 7.150E-1, 7.150E-1,    
     4   7.150E-1, 7.150E-1, 7.150E-1, 7.150E-1, 7.150E-1, 7.150E-1,    
     5   7.150E-1, 7.150E-1, 7.150E-1, 7.150E-1, 7.150E-1, 7.150E-1,    
     6   7.150E-1, 7.150E-1, 7.150E-1, 7.150E-1, 7.150E-1, 7.145E-1,    
     7   7.134E-1, 7.123E-1, 7.112E-1, 7.109E-1, 7.109E-1, 7.109E-1,    
     8   7.109E-1, 7.109E-1, 7.109E-1, 7.109E-1, 7.109E-1, 7.109E-1,    
     9   7.109E-1, 7.109E-1, 7.109E-1, 7.109E-1, 7.109E-1, 7.109E-1,    
     &   7.109E-1, 7.109E-1, 7.109E-1, 7.109E-1, 7.109E-1, 7.106E-1,    
     1   7.094E-1, 7.081E-1, 7.069E-1, 7.066E-1, 7.066E-1, 7.066E-1,    
     2   7.066E-1, 7.066E-1, 7.066E-1, 7.066E-1, 7.057E-1, 7.046E-1,    
     3   7.035E-1, 7.026E-1, 7.026E-1, 7.026E-1, 7.025E-1, 7.016E-1,    
     4   7.005E-1, 6.993E-1, 6.981E-1, 6.970E-1, 6.959E-1, 6.948E-1,    
     5   6.937E-1, 6.925E-1, 6.914E-1, 6.899E-1, 6.876E-1, 6.854E-1,    
     6   6.832E-1, 6.818E-1, 6.806E-1, 6.794E-1, 6.783E-1, 6.772E-1,    
     7   6.762E-1, 6.751E-1, 6.740E-1, 6.729E-1/                        
      DATA (SO2CRS(I),I= 3401, 3500)/                                   
     1   6.718E-1, 6.703E-1, 6.681E-1, 6.660E-1, 6.638E-1, 6.616E-1,    
     2   6.594E-1, 6.572E-1, 6.550E-1, 6.529E-1, 6.508E-1, 6.487E-1,    
     3   6.466E-1, 6.443E-1, 6.421E-1, 6.400E-1, 6.380E-1, 6.360E-1,    
     4   6.339E-1, 6.318E-1, 6.297E-1, 6.276E-1, 6.251E-1, 6.221E-1,    
     5   6.191E-1, 6.161E-1, 6.131E-1, 6.100E-1, 6.069E-1, 6.039E-1,    
     6   6.010E-1, 5.981E-1, 5.953E-1, 5.938E-1, 5.928E-1, 5.919E-1,    
     7   5.909E-1, 5.900E-1, 5.890E-1, 5.881E-1, 5.871E-1, 5.861E-1,    
     8   5.852E-1, 5.840E-1, 5.821E-1, 5.803E-1, 5.784E-1, 5.765E-1,    
     9   5.746E-1, 5.727E-1, 5.711E-1, 5.701E-1, 5.692E-1, 5.683E-1,    
     &   5.674E-1, 5.664E-1, 5.655E-1, 5.645E-1, 5.636E-1, 5.627E-1,    
     1   5.618E-1, 5.605E-1, 5.586E-1, 5.567E-1, 5.550E-1, 5.540E-1,    
     2   5.532E-1, 5.524E-1, 5.511E-1, 5.494E-1, 5.476E-1, 5.458E-1,    
     3   5.440E-1, 5.423E-1, 5.406E-1, 5.389E-1, 5.371E-1, 5.352E-1,    
     4   5.334E-1, 5.304E-1, 5.270E-1, 5.237E-1, 5.207E-1, 5.190E-1,    
     5   5.174E-1, 5.157E-1, 5.136E-1, 5.111E-1, 5.087E-1, 5.065E-1,    
     6   5.062E-1, 5.062E-1, 5.062E-1, 5.069E-1, 5.085E-1, 5.101E-1,    
     7   5.118E-1, 5.141E-1, 5.165E-1, 5.190E-1/                        
      DATA (SO2CRS(I),I= 3501, 3600)/                                   
     1   5.215E-1, 5.240E-1, 5.266E-1, 5.291E-1, 5.301E-1, 5.301E-1,    
     2   5.301E-1, 5.311E-1, 5.352E-1, 5.395E-1, 5.437E-1, 5.470E-1,    
     3   5.496E-1, 5.522E-1, 5.548E-1, 5.575E-1, 5.602E-1, 5.629E-1,    
     4   5.656E-1, 5.684E-1, 5.711E-1, 5.739E-1, 5.766E-1, 5.794E-1,    
     5   5.822E-1, 5.849E-1, 5.878E-1, 5.906E-1, 5.934E-1, 5.958E-1,    
     6   5.977E-1, 5.996E-1, 6.016E-1, 6.035E-1, 6.055E-1, 6.074E-1,    
     7   6.097E-1, 6.124E-1, 6.152E-1, 6.179E-1, 6.208E-1, 6.238E-1,    
     8   6.268E-1, 6.297E-1, 6.318E-1, 6.338E-1, 6.358E-1, 6.370E-1,    
     9   6.370E-1, 6.370E-1, 6.370E-1, 6.370E-1, 6.370E-1, 6.370E-1,    
     &   6.365E-1, 6.346E-1, 6.326E-1, 6.306E-1, 6.292E-1, 6.282E-1,    
     1   6.273E-1, 6.260E-1, 6.233E-1, 6.203E-1, 6.173E-1, 6.137E-1,    
     2   6.091E-1, 6.045E-1, 5.999E-1, 5.925E-1, 5.832E-1, 5.738E-1,    
     3   5.639E-1, 5.508E-1, 5.370E-1, 5.233E-1, 5.100E-1, 4.974E-1,    
     4   4.848E-1, 4.723E-1, 4.620E-1, 4.525E-1, 4.429E-1, 4.334E-1,    
     5   4.241E-1, 4.147E-1, 4.054E-1, 3.993E-1, 3.980E-1, 3.968E-1,    
     6   3.955E-1, 3.952E-1, 3.952E-1, 3.952E-1, 3.952E-1, 3.952E-1,    
     7   3.952E-1, 3.952E-1, 3.955E-1, 3.961E-1/                        
      DATA (SO2CRS(I),I= 3601, 3700)/                                   
     1   3.967E-1, 3.973E-1, 3.989E-1, 4.009E-1, 4.028E-1, 4.052E-1,    
     2   4.089E-1, 4.126E-1, 4.164E-1, 4.217E-1, 4.293E-1, 4.369E-1,    
     3   4.447E-1, 4.562E-1, 4.690E-1, 4.818E-1, 4.949E-1, 5.096E-1,    
     4   5.246E-1, 5.396E-1, 5.553E-1, 5.719E-1, 5.886E-1, 6.052E-1,    
     5   6.217E-1, 6.382E-1, 6.547E-1, 6.716E-1, 6.915E-1, 7.118E-1,    
     6   7.321E-1, 7.528E-1, 7.742E-1, 7.957E-1, 8.171E-1, 8.407E-1,    
     7   8.657E-1, 8.907E-1, 9.158E-1, 9.420E-1, 9.683E-1, 9.946E-1,    
     8   1.022E+0, 1.053E+0, 1.083E+0, 1.114E+0, 1.144E+0, 1.172E+0,    
     9   1.201E+0, 1.228E+0, 1.237E+0, 1.239E+0, 1.241E+0, 1.216E+0,    
     &   1.115E+0, 1.009E+0, 9.034E-1, 8.394E-1, 8.363E-1, 8.338E-1,    
     1   8.313E-1, 8.310E-1, 8.324E-1, 8.337E-1, 8.445E-1, 9.118E-1,    
     2   9.885E-1, 1.065E+0, 1.143E+0, 1.224E+0, 1.305E+0, 1.386E+0,    
     3   1.472E+0, 1.560E+0, 1.649E+0, 1.736E+0, 1.805E+0, 1.867E+0,    
     4   1.929E+0, 1.985E+0, 1.998E+0, 2.005E+0, 2.011E+0, 1.983E+0,    
     5   1.904E+0, 1.825E+0, 1.747E+0, 1.672E+0, 1.600E+0, 1.529E+0,    
     6   1.458E+0, 1.399E+0, 1.345E+0, 1.290E+0, 1.266E+0, 1.420E+0,    
     7   1.605E+0, 1.789E+0, 2.159E+0, 2.799E+0/                        
      DATA (SO2CRS(I),I= 3701, 3800)/                                   
     1   3.442E+0, 4.083E+0, 4.513E+0, 4.799E+0, 5.085E+0, 5.357E+0,    
     2   5.427E+0, 5.427E+0, 5.427E+0, 5.427E+0, 5.427E+0, 5.427E+0,    
     3   5.427E+0, 5.398E+0, 5.327E+0, 5.256E+0, 5.184E+0, 5.027E+0,    
     4   4.813E+0, 4.599E+0, 4.407E+0, 4.570E+0, 4.856E+0, 5.142E+0,    
     5   5.383E+0, 5.356E+0, 5.285E+0, 5.213E+0, 5.072E+0, 4.727E+0,    
     6   4.370E+0, 4.013E+0, 3.656E+0, 3.299E+0, 2.942E+0, 2.586E+0,    
     7   2.314E+0, 2.100E+0, 1.885E+0, 1.697E+0, 1.914E+0, 2.271E+0,    
     8   2.628E+0, 2.976E+0, 3.271E+0, 3.556E+0, 3.842E+0, 4.076E+0,    
     9   4.161E+0, 4.236E+0, 4.312E+0, 4.471E+0, 4.686E+0, 4.901E+0,    
     &   5.109E+0, 5.215E+0, 5.286E+0, 5.357E+0, 5.418E+0, 5.427E+0,    
     1   5.427E+0, 5.427E+0, 5.440E+0, 5.526E+0, 5.625E+0, 5.724E+0,    
     2   5.806E+0, 5.837E+0, 5.866E+0, 5.894E+0, 5.715E+0, 5.233E+0,    
     3   4.749E+0, 4.266E+0, 4.028E+0, 3.956E+0, 3.885E+0, 3.804E+0,    
     4   3.571E+0, 3.285E+0, 2.999E+0, 2.740E+0, 2.642E+0, 2.571E+0,    
     5   2.499E+0, 2.376E+0, 2.100E+0, 1.814E+0, 1.528E+0, 1.358E+0,    
     6   1.357E+0, 1.357E+0, 1.357E+0, 1.398E+0, 1.465E+0, 1.533E+0,    
     7   1.603E+0, 1.885E+0, 2.314E+0, 2.742E+0/                        
      DATA (SO2CRS(I),I= 3801, 3900)/                                   
     1   3.180E+0, 3.771E+0, 4.413E+0, 5.056E+0, 5.654E+0, 5.984E+0,    
     2   6.270E+0, 6.556E+0, 6.789E+0, 6.870E+0, 6.941E+0, 7.013E+0,    
     3   7.193E+0, 7.530E+0, 7.870E+0, 8.209E+0, 8.642E+0, 9.212E+0,    
     4   9.783E+0, 1.036E+1, 1.131E+1, 1.253E+1, 1.374E+1, 1.489E+1,    
     5   1.498E+1, 1.471E+1, 1.444E+1, 1.407E+1, 1.228E+1, 9.998E+0,    
     6   7.713E+0, 5.722E+0, 5.499E+0, 5.570E+0, 5.642E+0, 5.762E+0,    
     7   6.024E+0, 6.296E+0, 6.567E+0, 6.772E+0, 6.784E+0, 6.784E+0,    
     8   6.784E+0, 6.813E+0, 6.884E+0, 6.956E+0, 7.028E+0, 7.218E+0,    
     9   7.490E+0, 7.761E+0, 8.031E+0, 8.141E+0, 8.141E+0, 8.141E+0,    
     &   8.141E+0, 8.141E+0, 8.141E+0, 8.141E+0, 8.144E+0, 8.198E+0,    
     1   8.270E+0, 8.341E+0, 8.446E+0, 8.752E+0, 9.091E+0, 9.430E+0,    
     2   9.763E+0, 1.005E+1, 1.034E+1, 1.063E+1, 1.086E+1, 1.094E+1,    
     3   1.100E+1, 1.107E+1, 1.121E+1, 1.155E+1, 1.191E+1, 1.227E+1,    
     4   1.262E+1, 1.296E+1, 1.330E+1, 1.364E+1, 1.395E+1, 1.424E+1,    
     5   1.453E+1, 1.481E+1, 1.493E+1, 1.493E+1, 1.493E+1, 1.493E+1,    
     6   1.497E+1, 1.504E+1, 1.511E+1, 1.519E+1, 1.541E+1, 1.569E+1,    
     7   1.596E+1, 1.620E+1, 1.606E+1, 1.579E+1/                        
      DATA (SO2CRS(I),I= 3901, 4000)/                                   
     1   1.552E+1, 1.521E+1, 1.417E+1, 1.288E+1, 1.160E+1, 1.039E+1,    
     2   9.634E+0, 8.955E+0, 8.277E+0, 7.632E+0, 7.191E+0, 6.784E+0,    
     3   6.377E+0, 6.101E+0, 6.613E+0, 7.255E+0, 7.898E+0, 8.467E+0,    
     4   8.819E+0, 9.159E+0, 9.498E+0, 9.854E+0, 1.026E+1, 1.066E+1,    
     5   1.107E+1, 1.151E+1, 1.205E+1, 1.259E+1, 1.313E+1, 1.356E+1,    
     6   1.365E+1, 1.373E+1, 1.380E+1, 1.398E+1, 1.431E+1, 1.465E+1,    
     7   1.499E+1, 1.533E+1, 1.567E+1, 1.601E+1, 1.635E+1, 1.669E+1,    
     8   1.703E+1, 1.737E+1, 1.771E+1, 1.805E+1, 1.839E+1, 1.872E+1,    
     9   1.906E+1, 1.946E+1, 1.993E+1, 2.041E+1, 2.088E+1, 2.144E+1,    
     &   2.212E+1, 2.279E+1, 2.347E+1, 2.359E+1, 2.288E+1, 2.217E+1,    
     1   2.145E+1, 2.060E+1, 1.965E+1, 1.870E+1, 1.774E+1, 1.639E+1,    
     2   1.476E+1, 1.313E+1, 1.151E+1, 1.081E+1, 1.075E+1, 1.068E+1,    
     3   1.061E+1, 1.026E+1, 9.715E+0, 9.172E+0, 8.627E+0, 7.802E+0,    
     4   6.784E+0, 5.767E+0, 4.756E+0, 4.545E+0, 4.885E+0, 5.224E+0,    
     5   5.563E+0, 5.943E+0, 6.350E+0, 6.757E+0, 7.166E+0, 7.815E+0,    
     6   8.629E+0, 9.444E+0, 1.026E+1, 1.136E+1, 1.265E+1, 1.393E+1,    
     7   1.522E+1, 1.623E+1, 1.704E+1, 1.786E+1/                        
      DATA (SO2CRS(I),I= 4001, 4100)/                                   
     1   1.867E+1, 1.900E+1, 1.900E+1, 1.900E+1, 1.900E+1, 1.913E+1,    
     2   1.947E+1, 1.981E+1, 2.015E+1, 2.093E+1, 2.235E+1, 2.377E+1,    
     3   2.520E+1, 2.615E+1, 2.643E+1, 2.670E+1, 2.697E+1, 2.716E+1,    
     4   2.723E+1, 2.730E+1, 2.737E+1, 2.754E+1, 2.788E+1, 2.823E+1,    
     5   2.857E+1, 2.893E+1, 2.931E+1, 2.970E+1, 3.008E+1, 3.050E+1,    
     6   3.104E+1, 3.158E+1, 3.213E+1, 3.242E+1, 3.199E+1, 3.151E+1,    
     7   3.104E+1, 3.008E+1, 2.773E+1, 2.529E+1, 2.285E+1, 2.051E+1,    
     8   1.849E+1, 1.649E+1, 1.449E+1, 1.275E+1, 1.262E+1, 1.275E+1,    
     9   1.289E+1, 1.296E+1, 1.262E+1, 1.221E+1, 1.180E+1, 1.152E+1,    
     &   1.198E+1, 1.256E+1, 1.314E+1, 1.372E+1, 1.417E+1, 1.457E+1,    
     1   1.498E+1, 1.540E+1, 1.596E+1, 1.657E+1, 1.718E+1, 1.778E+1,    
     2   1.832E+1, 1.884E+1, 1.936E+1, 1.988E+1, 2.077E+1, 2.193E+1,    
     3   2.308E+1, 2.423E+1, 2.498E+1, 2.545E+1, 2.593E+1, 2.641E+1,    
     4   2.714E+1, 2.804E+1, 2.894E+1, 2.985E+1, 3.063E+1, 3.124E+1,    
     5   3.185E+1, 3.247E+1, 3.301E+1, 3.347E+1, 3.392E+1, 3.438E+1,    
     6   3.502E+1, 3.621E+1, 3.743E+1, 3.865E+1, 4.002E+1, 4.180E+1,    
     7   4.360E+1, 4.540E+1, 4.724E+1, 4.931E+1/                        
      DATA (SO2CRS(I),I= 4101, 4200)/                                   
     1   5.141E+1, 5.351E+1, 5.584E+1, 5.950E+1, 6.338E+1, 6.727E+1,    
     2   7.093E+1, 7.110E+1, 7.006E+1, 6.902E+1, 6.796E+1, 6.411E+1,    
     3   5.834E+1, 5.257E+1, 4.680E+1, 4.116E+1, 3.561E+1, 3.005E+1,    
     4   2.450E+1, 2.086E+1, 2.003E+1, 1.921E+1, 1.840E+1, 1.760E+1,    
     5   1.682E+1, 1.605E+1, 1.527E+1, 1.501E+1, 1.620E+1, 1.750E+1,    
     6   1.879E+1, 2.007E+1, 2.130E+1, 2.252E+1, 2.374E+1, 2.484E+1,    
     7   2.516E+1, 2.535E+1, 2.555E+1, 2.567E+1, 2.464E+1, 2.322E+1,    
     8   2.180E+1, 2.038E+1, 1.958E+1, 1.919E+1, 1.880E+1, 1.841E+1,    
     9   1.862E+1, 1.970E+1, 2.079E+1, 2.187E+1, 2.341E+1, 2.560E+1,    
     &   2.780E+1, 3.000E+1, 3.180E+1, 3.246E+1, 3.304E+1, 3.362E+1,    
     1   3.417E+1, 3.452E+1, 3.484E+1, 3.516E+1, 3.553E+1, 3.668E+1,    
     2   3.810E+1, 3.952E+1, 4.096E+1, 4.477E+1, 5.019E+1, 5.562E+1,    
     3   6.104E+1, 6.508E+1, 6.818E+1, 7.129E+1, 7.439E+1, 7.765E+1,    
     4   8.114E+1, 8.463E+1, 8.813E+1, 8.969E+1, 8.565E+1, 8.125E+1,    
     5   7.686E+1, 7.196E+1, 6.406E+1, 5.566E+1, 4.726E+1, 3.902E+1,    
     6   3.326E+1, 2.834E+1, 2.343E+1, 1.854E+1, 1.605E+1, 1.521E+1,    
     7   1.437E+1, 1.353E+1, 1.345E+1, 1.447E+1/                        
      DATA (SO2CRS(I),I= 4201, 4300)/                                   
     1   1.551E+1, 1.654E+1, 1.761E+1, 1.876E+1, 1.993E+1, 2.109E+1,    
     2   2.217E+1, 2.277E+1, 2.329E+1, 2.380E+1, 2.429E+1, 2.432E+1,    
     3   2.419E+1, 2.406E+1, 2.393E+1, 2.376E+1, 2.357E+1, 2.338E+1,    
     4   2.318E+1, 2.364E+1, 2.506E+1, 2.648E+1, 2.791E+1, 2.912E+1,    
     5   2.974E+1, 3.033E+1, 3.091E+1, 3.147E+1, 3.192E+1, 3.234E+1,    
     6   3.277E+1, 3.320E+1, 3.430E+1, 3.586E+1, 3.741E+1, 3.897E+1,    
     7   4.146E+1, 4.533E+1, 4.920E+1, 5.308E+1, 5.692E+1, 6.067E+1,    
     8   6.441E+1, 6.816E+1, 7.187E+1, 7.539E+1, 7.888E+1, 8.238E+1,    
     9   8.588E+1, 8.962E+1, 9.343E+1, 9.724E+1, 1.010E+2, 1.029E+2,    
     &   1.035E+2, 1.040E+2, 1.046E+2, 1.044E+2, 1.021E+2, 9.962E+1,    
     1   9.717E+1, 9.397E+1, 8.631E+1, 7.791E+1, 6.951E+1, 6.118E+1,    
     2   5.400E+1, 4.722E+1, 4.044E+1, 3.365E+1, 2.907E+1, 2.768E+1,    
     3   2.632E+1, 2.497E+1, 2.418E+1, 2.504E+1, 2.601E+1, 2.698E+1,    
     4   2.791E+1, 2.862E+1, 2.930E+1, 2.998E+1, 3.065E+1, 3.073E+1,    
     5   3.041E+1, 3.009E+1, 2.977E+1, 2.940E+1, 2.895E+1, 2.849E+1,    
     6   2.804E+1, 2.765E+1, 2.745E+1, 2.727E+1, 2.709E+1, 2.703E+1,    
     7   2.893E+1, 3.152E+1, 3.410E+1, 3.668E+1/                        
      DATA (SO2CRS(I),I= 4301, 4400)/                                   
     1   3.857E+1, 3.999E+1, 4.141E+1, 4.282E+1, 4.445E+1, 4.667E+1,    
     2   4.894E+1, 5.120E+1, 5.341E+1, 5.526E+1, 5.705E+1, 5.883E+1,    
     3   6.062E+1, 6.161E+1, 6.206E+1, 6.250E+1, 6.295E+1, 6.387E+1,    
     4   6.547E+1, 6.707E+1, 6.868E+1, 7.073E+1, 7.546E+1, 8.062E+1,    
     5   8.579E+1, 9.107E+1, 9.797E+1, 1.054E+2, 1.129E+2, 1.204E+2,    
     6   1.264E+2, 1.304E+2, 1.345E+2, 1.385E+2, 1.405E+2, 1.306E+2,    
     7   1.187E+2, 1.068E+2, 9.491E+1, 8.306E+1, 7.122E+1, 5.938E+1,    
     8   4.754E+1, 3.893E+1, 3.501E+1, 3.113E+1, 2.725E+1, 2.463E+1,    
     9   2.563E+1, 2.687E+1, 2.810E+1, 2.933E+1, 3.042E+1, 3.147E+1,    
     &   3.252E+1, 3.357E+1, 3.435E+1, 3.472E+1, 3.508E+1, 3.545E+1,    
     1   3.591E+1, 3.692E+1, 3.802E+1, 3.912E+1, 4.029E+1, 4.271E+1,    
     2   4.555E+1, 4.839E+1, 5.123E+1, 5.421E+1, 5.742E+1, 6.062E+1,    
     3   6.383E+1, 6.699E+1, 6.987E+1, 7.270E+1, 7.554E+1, 7.835E+1,    
     4   7.911E+1, 7.847E+1, 7.782E+1, 7.718E+1, 7.672E+1, 7.653E+1,    
     5   7.635E+1, 7.617E+1, 7.629E+1, 7.827E+1, 8.055E+1, 8.283E+1,    
     6   8.513E+1, 8.884E+1, 9.353E+1, 9.821E+1, 1.029E+2, 1.072E+2,    
     7   1.102E+2, 1.132E+2, 1.161E+2, 1.191E+2/                        
      DATA (SO2CRS(I),I= 4401, 4500)/                                   
     1   1.233E+2, 1.279E+2, 1.325E+2, 1.370E+2, 1.401E+2, 1.411E+2,    
     2   1.421E+2, 1.431E+2, 1.432E+2, 1.381E+2, 1.321E+2, 1.261E+2,    
     3   1.202E+2, 1.157E+2, 1.123E+2, 1.090E+2, 1.056E+2, 9.965E+1,    
     4   8.642E+1, 7.273E+1, 5.904E+1, 4.578E+1, 3.935E+1, 3.528E+1,    
     5   3.121E+1, 2.714E+1, 2.534E+1, 2.686E+1, 2.840E+1, 2.994E+1,    
     6   3.140E+1, 3.229E+1, 3.309E+1, 3.389E+1, 3.470E+1, 3.664E+1,    
     7   3.935E+1, 4.206E+1, 4.477E+1, 4.748E+1, 5.020E+1, 5.292E+1,    
     8   5.563E+1, 5.838E+1, 6.156E+1, 6.489E+1, 6.821E+1, 7.154E+1,    
     9   7.417E+1, 7.579E+1, 7.739E+1, 7.900E+1, 8.050E+1, 8.137E+1,    
     &   8.213E+1, 8.290E+1, 8.366E+1, 8.507E+1, 8.741E+1, 8.975E+1,    
     1   9.210E+1, 9.476E+1, 9.937E+1, 1.043E+2, 1.092E+2, 1.142E+2,    
     2   1.177E+2, 1.204E+2, 1.230E+2, 1.257E+2, 1.285E+2, 1.316E+2,    
     3   1.347E+2, 1.378E+2, 1.409E+2, 1.444E+2, 1.482E+2, 1.520E+2,    
     4   1.557E+2, 1.605E+2, 1.681E+2, 1.759E+2, 1.836E+2, 1.910E+2,    
     5   1.927E+2, 1.924E+2, 1.921E+2, 1.918E+2, 1.804E+2, 1.529E+2,    
     6   1.252E+2, 9.752E+1, 7.074E+1, 5.791E+1, 4.989E+1, 4.187E+1,    
     7   3.385E+1, 2.932E+1, 2.987E+1, 3.046E+1/                        
      DATA (SO2CRS(I),I= 4501, 4600)/                                   
     1   3.105E+1, 3.165E+1, 3.240E+1, 3.320E+1, 3.400E+1, 3.480E+1,    
     2   3.587E+1, 3.735E+1, 3.882E+1, 4.030E+1, 4.182E+1, 4.355E+1,    
     3   4.532E+1, 4.709E+1, 4.886E+1, 5.146E+1, 5.528E+1, 5.911E+1,    
     4   6.294E+1, 6.652E+1, 6.860E+1, 7.042E+1, 7.225E+1, 7.408E+1,    
     5   7.604E+1, 7.819E+1, 8.035E+1, 8.251E+1, 8.472E+1, 8.732E+1,    
     6   8.998E+1, 9.263E+1, 9.529E+1, 9.882E+1, 1.036E+2, 1.084E+2,    
     7   1.132E+2, 1.179E+2, 1.214E+2, 1.247E+2, 1.280E+2, 1.313E+2,    
     8   1.357E+2, 1.417E+2, 1.477E+2, 1.537E+2, 1.600E+2, 1.701E+2,    
     9   1.817E+2, 1.932E+2, 2.047E+2, 2.139E+2, 2.196E+2, 2.253E+2,    
     &   2.309E+2, 2.358E+2, 2.285E+2, 2.169E+2, 2.053E+2, 1.938E+2,    
     1   1.837E+2, 1.781E+2, 1.727E+2, 1.674E+2, 1.619E+2, 1.554E+2,    
     2   1.486E+2, 1.418E+2, 1.349E+2, 1.248E+2, 1.050E+2, 8.454E+1,    
     3   6.413E+1, 4.382E+1, 3.647E+1, 3.802E+1, 3.956E+1, 4.111E+1,    
     4   4.243E+1, 4.312E+1, 4.377E+1, 4.442E+1, 4.508E+1, 4.671E+1,    
     5   4.901E+1, 5.131E+1, 5.361E+1, 5.599E+1, 5.880E+1, 6.169E+1,    
     6   6.459E+1, 6.748E+1, 6.982E+1, 7.135E+1, 7.288E+1, 7.442E+1,    
     7   7.596E+1, 7.776E+1, 7.965E+1, 8.153E+1/                        
      DATA (SO2CRS(I),I= 4601, 4700)/                                   
     1   8.342E+1, 8.554E+1, 8.834E+1, 9.118E+1, 9.402E+1, 9.691E+1,    
     2   1.006E+2, 1.046E+2, 1.087E+2, 1.127E+2, 1.168E+2, 1.213E+2,    
     3   1.257E+2, 1.302E+2, 1.347E+2, 1.409E+2, 1.482E+2, 1.555E+2,    
     4   1.628E+2, 1.698E+2, 1.743E+2, 1.784E+2, 1.825E+2, 1.867E+2,    
     5   1.913E+2, 1.966E+2, 2.019E+2, 2.072E+2, 2.123E+2, 2.147E+2,    
     6   2.161E+2, 2.175E+2, 2.189E+2, 2.211E+2, 2.255E+2, 2.301E+2,    
     7   2.346E+2, 2.391E+2, 2.379E+2, 2.328E+2, 2.276E+2, 2.225E+2,    
     8   2.137E+2, 1.833E+2, 1.492E+2, 1.151E+2, 8.097E+1, 5.884E+1,    
     9   5.415E+1, 4.961E+1, 4.508E+1, 4.086E+1, 4.171E+1, 4.431E+1,    
     &   4.690E+1, 4.950E+1, 5.185E+1, 5.275E+1, 5.339E+1, 5.404E+1,    
     1   5.469E+1, 5.546E+1, 5.640E+1, 5.735E+1, 5.830E+1, 5.927E+1,    
     2   6.075E+1, 6.241E+1, 6.406E+1, 6.571E+1, 6.778E+1, 7.107E+1,    
     3   7.442E+1, 7.778E+1, 8.114E+1, 8.422E+1, 8.711E+1, 8.999E+1,    
     4   9.288E+1, 9.584E+1, 9.984E+1, 1.042E+2, 1.086E+2, 1.129E+2,    
     5   1.173E+2, 1.215E+2, 1.258E+2, 1.300E+2, 1.343E+2, 1.390E+2,    
     6   1.440E+2, 1.490E+2, 1.540E+2, 1.592E+2, 1.651E+2, 1.711E+2,    
     7   1.772E+2, 1.832E+2, 1.895E+2, 1.963E+2/                        
      DATA (SO2CRS(I),I= 4701, 4800)/                                   
     1   2.031E+2, 2.100E+2, 2.168E+2, 2.260E+2, 2.368E+2, 2.476E+2,    
     2   2.584E+2, 2.698E+2, 2.849E+2, 3.006E+2, 3.162E+2, 3.319E+2,    
     3   3.384E+2, 3.184E+2, 2.966E+2, 2.749E+2, 2.532E+2, 2.306E+2,    
     4   2.074E+2, 1.842E+2, 1.611E+2, 1.381E+2, 1.195E+2, 1.023E+2,    
     5   8.517E+1, 6.801E+1, 5.543E+1, 5.617E+1, 5.776E+1, 5.934E+1,    
     6   6.093E+1, 6.270E+1, 6.476E+1, 6.683E+1, 6.889E+1, 7.091E+1,    
     7   7.236E+1, 7.360E+1, 7.484E+1, 7.608E+1, 7.757E+1, 8.052E+1,    
     8   8.370E+1, 8.689E+1, 9.008E+1, 9.340E+1, 9.690E+1, 1.004E+2,    
     9   1.039E+2, 1.074E+2, 1.096E+2, 1.109E+2, 1.122E+2, 1.135E+2,    
     &   1.147E+2, 1.154E+2, 1.160E+2, 1.166E+2, 1.173E+2, 1.190E+2,    
     1   1.239E+2, 1.290E+2, 1.340E+2, 1.391E+2, 1.440E+2, 1.485E+2,    
     2   1.530E+2, 1.574E+2, 1.620E+2, 1.684E+2, 1.753E+2, 1.823E+2,    
     3   1.892E+2, 1.969E+2, 2.090E+2, 2.217E+2, 2.345E+2, 2.473E+2,    
     4   2.598E+2, 2.715E+2, 2.832E+2, 2.948E+2, 3.064E+2, 3.073E+2,    
     5   3.009E+2, 2.945E+2, 2.882E+2, 2.816E+2, 2.723E+2, 2.620E+2,    
     6   2.517E+2, 2.415E+2, 2.314E+2, 2.226E+2, 2.140E+2, 2.054E+2,    
     7   1.968E+2, 1.856E+2, 1.667E+2, 1.473E+2/                        
      DATA (SO2CRS(I),I= 4801, 4900)/                                   
     1   1.279E+2, 1.085E+2, 9.514E+1, 9.052E+1, 8.598E+1, 8.144E+1,    
     2   7.726E+1, 7.897E+1, 8.270E+1, 8.644E+1, 9.017E+1, 9.357E+1,    
     3   9.498E+1, 9.605E+1, 9.713E+1, 9.820E+1, 9.882E+1, 9.811E+1,    
     4   9.731E+1, 9.652E+1, 9.572E+1, 9.598E+1, 9.778E+1, 9.959E+1,    
     5   1.014E+2, 1.032E+2, 1.054E+2, 1.079E+2, 1.104E+2, 1.129E+2,    
     6   1.154E+2, 1.188E+2, 1.225E+2, 1.262E+2, 1.298E+2, 1.337E+2,    
     7   1.386E+2, 1.437E+2, 1.488E+2, 1.539E+2, 1.590E+2, 1.641E+2,    
     8   1.692E+2, 1.744E+2, 1.795E+2, 1.841E+2, 1.878E+2, 1.914E+2,    
     9   1.951E+2, 1.988E+2, 2.077E+2, 2.200E+2, 2.323E+2, 2.446E+2,    
     &   2.567E+2, 2.644E+2, 2.706E+2, 2.767E+2, 2.829E+2, 2.904E+2,    
     1   3.056E+2, 3.221E+2, 3.386E+2, 3.551E+2, 3.671E+2, 3.522E+2,    
     2   3.328E+2, 3.135E+2, 2.941E+2, 2.686E+2, 2.250E+2, 1.804E+2,    
     3   1.358E+2, 9.111E+1, 6.496E+1, 6.575E+1, 6.677E+1, 6.779E+1,    
     4   6.881E+1, 7.070E+1, 7.319E+1, 7.567E+1, 7.816E+1, 8.061E+1,    
     5   8.253E+1, 8.427E+1, 8.600E+1, 8.774E+1, 8.958E+1, 9.308E+1,    
     6   9.714E+1, 1.012E+2, 1.053E+2, 1.092E+2, 1.123E+2, 1.152E+2,    
     7   1.182E+2, 1.211E+2, 1.245E+2, 1.292E+2/                        
      DATA (SO2CRS(I),I= 4901, 5000)/                                   
     1   1.339E+2, 1.387E+2, 1.434E+2, 1.469E+2, 1.484E+2, 1.499E+2,    
     2   1.514E+2, 1.530E+2, 1.552E+2, 1.584E+2, 1.616E+2, 1.648E+2,    
     3   1.680E+2, 1.715E+2, 1.751E+2, 1.788E+2, 1.824E+2, 1.861E+2,    
     4   1.927E+2, 2.013E+2, 2.099E+2, 2.184E+2, 2.271E+2, 2.373E+2,    
     5   2.481E+2, 2.588E+2, 2.695E+2, 2.806E+2, 2.942E+2, 3.081E+2,    
     6   3.220E+2, 3.359E+2, 3.460E+2, 3.331E+2, 3.165E+2, 2.998E+2,    
     7   2.831E+2, 2.670E+2, 2.525E+2, 2.381E+2, 2.237E+2, 2.093E+2,    
     8   1.990E+2, 2.002E+2, 2.023E+2, 2.043E+2, 2.063E+2, 2.049E+2,    
     9   1.938E+2, 1.821E+2, 1.704E+2, 1.587E+2, 1.474E+2, 1.365E+2,    
     &   1.256E+2, 1.148E+2, 1.039E+2, 9.816E+1, 9.980E+1, 1.015E+2,    
     1   1.032E+2, 1.049E+2, 1.075E+2, 1.108E+2, 1.140E+2, 1.173E+2,    
     2   1.205E+2, 1.224E+2, 1.234E+2, 1.244E+2, 1.254E+2, 1.263E+2,    
     3   1.273E+2, 1.283E+2, 1.292E+2, 1.302E+2, 1.312E+2, 1.333E+2,    
     4   1.357E+2, 1.382E+2, 1.406E+2, 1.431E+2, 1.466E+2, 1.505E+2,    
     5   1.543E+2, 1.582E+2, 1.622E+2, 1.694E+2, 1.776E+2, 1.858E+2,    
     6   1.940E+2, 2.019E+2, 2.061E+2, 2.091E+2, 2.120E+2, 2.150E+2,    
     7   2.179E+2, 2.209E+2, 2.240E+2, 2.270E+2/                        
      DATA (SO2CRS(I),I= 5001, 5100)/                                   
     1   2.301E+2, 2.334E+2, 2.385E+2, 2.440E+2, 2.494E+2, 2.548E+2,    
     2   2.602E+2, 2.651E+2, 2.700E+2, 2.748E+2, 2.797E+2, 2.856E+2,    
     3   2.975E+2, 3.105E+2, 3.235E+2, 3.365E+2, 3.453E+2, 3.289E+2,    
     4   3.082E+2, 2.875E+2, 2.668E+2, 2.446E+2, 2.131E+2, 1.801E+2,    
     5   1.471E+2, 1.141E+2, 8.541E+1, 8.228E+1, 8.342E+1, 8.456E+1,    
     6   8.570E+1, 8.688E+1, 8.830E+1, 8.977E+1, 9.124E+1, 9.271E+1,    
     7   9.422E+1, 9.602E+1, 9.786E+1, 9.970E+1, 1.015E+2, 1.034E+2,    
     8   1.052E+2, 1.071E+2, 1.089E+2, 1.108E+2, 1.128E+2, 1.162E+2,    
     9   1.197E+2, 1.232E+2, 1.267E+2, 1.305E+2, 1.357E+2, 1.411E+2,    
     &   1.465E+2, 1.520E+2, 1.567E+2, 1.570E+2, 1.565E+2, 1.561E+2,    
     1   1.557E+2, 1.551E+2, 1.542E+2, 1.533E+2, 1.523E+2, 1.513E+2,    
     2   1.510E+2, 1.543E+2, 1.584E+2, 1.624E+2, 1.664E+2, 1.706E+2,    
     3   1.761E+2, 1.818E+2, 1.875E+2, 1.932E+2, 1.992E+2, 2.073E+2,    
     4   2.157E+2, 2.241E+2, 2.325E+2, 2.410E+2, 2.511E+2, 2.617E+2,    
     5   2.722E+2, 2.828E+2, 2.936E+2, 3.067E+2, 3.206E+2, 3.345E+2,    
     6   3.484E+2, 3.610E+2, 3.515E+2, 3.345E+2, 3.174E+2, 3.004E+2,    
     7   2.834E+2, 2.668E+2, 2.503E+2, 2.338E+2/                        
      DATA (SO2CRS(I),I= 5101, 5200)/                                   
     1   2.174E+2, 2.010E+2, 1.915E+2, 1.868E+2, 1.820E+2, 1.773E+2,    
     2   1.725E+2, 1.614E+2, 1.459E+2, 1.305E+2, 1.150E+2, 9.961E+1,    
     3   9.359E+1, 9.401E+1, 9.443E+1, 9.485E+1, 9.526E+1, 9.670E+1,    
     4   9.962E+1, 1.026E+2, 1.055E+2, 1.084E+2, 1.108E+2, 1.123E+2,    
     5   1.138E+2, 1.153E+2, 1.168E+2, 1.183E+2, 1.196E+2, 1.208E+2,    
     6   1.220E+2, 1.233E+2, 1.247E+2, 1.265E+2, 1.284E+2, 1.303E+2,    
     7   1.322E+2, 1.347E+2, 1.412E+2, 1.484E+2, 1.555E+2, 1.627E+2,    
     8   1.700E+2, 1.778E+2, 1.857E+2, 1.937E+2, 2.016E+2, 2.094E+2,    
     9   2.141E+2, 2.178E+2, 2.215E+2, 2.252E+2, 2.291E+2, 2.365E+2,    
     &   2.451E+2, 2.537E+2, 2.623E+2, 2.709E+2, 2.772E+2, 2.819E+2,    
     1   2.866E+2, 2.913E+2, 2.961E+2, 2.984E+2, 2.990E+2, 2.997E+2,    
     2   3.004E+2, 3.011E+2, 3.005E+2, 2.982E+2, 2.959E+2, 2.936E+2,    
     3   2.912E+2, 2.868E+2, 2.762E+2, 2.652E+2, 2.542E+2, 2.432E+2,    
     4   2.335E+2, 2.274E+2, 2.215E+2, 2.156E+2, 2.097E+2, 2.023E+2,    
     5   1.858E+2, 1.678E+2, 1.498E+2, 1.318E+2, 1.147E+2, 1.123E+2,    
     6   1.150E+2, 1.176E+2, 1.203E+2, 1.230E+2, 1.251E+2, 1.268E+2,    
     7   1.285E+2, 1.302E+2, 1.319E+2, 1.340E+2/                        
      DATA (SO2CRS(I),I= 5201, 5300)/                                   
     1   1.364E+2, 1.388E+2, 1.413E+2, 1.437E+2, 1.472E+2, 1.523E+2,    
     2   1.573E+2, 1.624E+2, 1.675E+2, 1.711E+2, 1.707E+2, 1.700E+2,    
     3   1.693E+2, 1.687E+2, 1.681E+2, 1.683E+2, 1.686E+2, 1.689E+2,    
     4   1.692E+2, 1.697E+2, 1.716E+2, 1.741E+2, 1.766E+2, 1.791E+2,    
     5   1.816E+2, 1.843E+2, 1.872E+2, 1.901E+2, 1.930E+2, 1.958E+2,    
     6   2.003E+2, 2.069E+2, 2.136E+2, 2.203E+2, 2.270E+2, 2.341E+2,    
     7   2.428E+2, 2.516E+2, 2.603E+2, 2.691E+2, 2.777E+2, 2.859E+2,    
     8   2.939E+2, 3.020E+2, 3.101E+2, 3.181E+2, 3.260E+2, 3.338E+2,    
     9   3.416E+2, 3.494E+2, 3.570E+2, 3.486E+2, 3.291E+2, 3.096E+2,    
     &   2.901E+2, 2.706E+2, 2.536E+2, 2.402E+2, 2.268E+2, 2.135E+2,    
     1   2.001E+2, 1.866E+2, 1.725E+2, 1.584E+2, 1.443E+2, 1.302E+2,    
     2   1.184E+2, 1.197E+2, 1.233E+2, 1.269E+2, 1.304E+2, 1.340E+2,    
     3   1.356E+2, 1.358E+2, 1.361E+2, 1.363E+2, 1.366E+2, 1.377E+2,    
     4   1.399E+2, 1.422E+2, 1.444E+2, 1.466E+2, 1.487E+2, 1.503E+2,    
     5   1.519E+2, 1.535E+2, 1.550E+2, 1.565E+2, 1.571E+2, 1.577E+2,    
     6   1.582E+2, 1.588E+2, 1.594E+2, 1.606E+2, 1.622E+2, 1.639E+2,    
     7   1.656E+2, 1.672E+2, 1.704E+2, 1.756E+2/                        
      DATA (SO2CRS(I),I= 5301, 5400)/                                   
     1   1.808E+2, 1.860E+2, 1.912E+2, 1.964E+2, 2.013E+2, 2.062E+2,    
     2   2.111E+2, 2.161E+2, 2.211E+2, 2.271E+2, 2.334E+2, 2.398E+2,    
     3   2.462E+2, 2.525E+2, 2.602E+2, 2.688E+2, 2.773E+2, 2.859E+2,    
     4   2.944E+2, 2.953E+2, 2.850E+2, 2.746E+2, 2.642E+2, 2.538E+2,    
     5   2.432E+2, 2.314E+2, 2.193E+2, 2.073E+2, 1.952E+2, 1.839E+2,    
     6   1.848E+2, 1.900E+2, 1.951E+2, 2.002E+2, 2.053E+2, 2.090E+2,    
     7   2.107E+2, 2.123E+2, 2.139E+2, 2.155E+2, 2.146E+2, 2.064E+2,    
     8   1.977E+2, 1.890E+2, 1.803E+2, 1.719E+2, 1.679E+2, 1.654E+2,    
     9   1.629E+2, 1.604E+2, 1.579E+2, 1.559E+2, 1.542E+2, 1.525E+2,    
     &   1.509E+2, 1.492E+2, 1.486E+2, 1.512E+2, 1.539E+2, 1.566E+2,    
     1   1.593E+2, 1.618E+2, 1.615E+2, 1.602E+2, 1.589E+2, 1.576E+2,    
     2   1.563E+2, 1.555E+2, 1.551E+2, 1.547E+2, 1.543E+2, 1.539E+2,    
     3   1.537E+2, 1.540E+2, 1.543E+2, 1.546E+2, 1.549E+2, 1.554E+2,    
     4   1.596E+2, 1.650E+2, 1.704E+2, 1.758E+2, 1.813E+2, 1.863E+2,    
     5   1.908E+2, 1.953E+2, 1.998E+2, 2.043E+2, 2.083E+2, 2.109E+2,    
     6   2.134E+2, 2.159E+2, 2.184E+2, 2.211E+2, 2.269E+2, 2.337E+2,    
     7   2.406E+2, 2.474E+2, 2.542E+2, 2.599E+2/                        
      DATA (SO2CRS(I),I= 5401, 5500)/                                   
     1   2.639E+2, 2.679E+2, 2.720E+2, 2.760E+2, 2.778E+2, 2.667E+2,    
     2   2.535E+2, 2.402E+2, 2.270E+2, 2.137E+2, 1.999E+2, 1.857E+2,    
     3   1.714E+2, 1.572E+2, 1.430E+2, 1.326E+2, 1.334E+2, 1.349E+2,    
     4   1.365E+2, 1.380E+2, 1.395E+2, 1.421E+2, 1.449E+2, 1.478E+2,    
     5   1.506E+2, 1.535E+2, 1.563E+2, 1.590E+2, 1.617E+2, 1.645E+2,    
     6   1.672E+2, 1.690E+2, 1.655E+2, 1.610E+2, 1.566E+2, 1.522E+2,    
     7   1.478E+2, 1.427E+2, 1.373E+2, 1.319E+2, 1.265E+2, 1.210E+2,    
     8   1.182E+2, 1.229E+2, 1.281E+2, 1.332E+2, 1.384E+2, 1.436E+2,    
     9   1.493E+2, 1.550E+2, 1.608E+2, 1.666E+2, 1.724E+2, 1.783E+2,    
     &   1.843E+2, 1.903E+2, 1.964E+2, 2.024E+2, 2.082E+2, 2.130E+2,    
     1   2.177E+2, 2.223E+2, 2.269E+2, 2.315E+2, 2.301E+2, 2.245E+2,    
     2   2.190E+2, 2.135E+2, 2.079E+2, 2.022E+2, 1.959E+2, 1.895E+2,    
     3   1.831E+2, 1.767E+2, 1.703E+2, 1.667E+2, 1.651E+2, 1.635E+2,    
     4   1.619E+2, 1.603E+2, 1.603E+2, 1.651E+2, 1.701E+2, 1.751E+2,    
     5   1.801E+2, 1.852E+2, 1.905E+2, 1.959E+2, 2.014E+2, 2.068E+2,    
     6   2.122E+2, 2.124E+2, 2.051E+2, 1.977E+2, 1.903E+2, 1.828E+2,    
     7   1.756E+2, 1.711E+2, 1.675E+2, 1.640E+2/                        
      DATA (SO2CRS(I),I= 5501, 5562)/                                   
     1   1.604E+2, 1.568E+2, 1.522E+2, 1.461E+2, 1.400E+2, 1.339E+2,    
     2   1.278E+2, 1.222E+2, 1.237E+2, 1.278E+2, 1.319E+2, 1.360E+2,    
     3   1.400E+2, 1.437E+2, 1.469E+2, 1.501E+2, 1.532E+2, 1.564E+2,    
     4   1.584E+2, 1.532E+2, 1.468E+2, 1.404E+2, 1.340E+2, 1.276E+2,    
     5   1.255E+2, 1.297E+2, 1.339E+2, 1.381E+2, 1.423E+2, 1.466E+2,    
     6   1.515E+2, 1.564E+2, 1.614E+2, 1.663E+2, 1.712E+2, 1.759E+2,    
     7   1.803E+2, 1.846E+2, 1.889E+2, 1.932E+2, 1.974E+2, 1.993E+2,    
     8   2.005E+2, 2.018E+2, 2.030E+2, 2.042E+2, 2.065E+2, 2.103E+2,    
     9   2.142E+2, 2.181E+2, 2.220E+2, 2.255E+2, 2.246E+2, 2.222E+2,    
     &   2.197E+2, 2.172E+2, 2.148E+2, 2.097E+2, 2.007E+2, 1.917E+2,    
     1   1.827E+2, 1.736E+2/                                            
      IF (V .LT. VBEG .OR. V .GT. VEND) THEN                            
         CROSS = 0.0                                                    
      ELSE IF (V .EQ. VEND) THEN                                        
C        THIS CHECK PREVENTS N FROM EXCEEDING NMAX IN THE ALGORITHM BELO
         CROSS = SO2CRS(NMAX)                                           
      ELSE                                                              
         XI = (V-VBEG)/VINCR+1.                                         
         N = XI+1.+1.E-6                                                
         XD = XI-FLOAT(N)                                               
         CROSS = SO2CRS(N)+XD*(SO2CRS(N)-SO2CRS(N-1))                   
      ENDIF                                                             
      RETURN                                                            
      END                                                               
      SUBROUTINE  SOLEIG( AMB, APB, ARRAY, CMU, CWT, GL, MI, MAZIM,     
     $                    MXCMU, NN, NSTR, WK, YLMC, CC, EVECC, EVAL,   
     $                    KK, GC, AAD, WKD, EVECCD, EVALD )             
                                                                        
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
C         SOLVES EIGENVALUE/VECTOR PROBLEM NECESSARY TO CONSTRUCT       
C         HOMOGENEOUS PART OF DISCRETE ORDINATE SOLUTION; STWJ(8B)      
C         ** NOTE ** EIGENVALUE PROBLEM IS DEGENERATE WHEN SINGLE       
C                    SCATTERING ALBEDO = 1;  PRESENT WAY OF DOING IT    
C                    SEEMS NUMERICALLY MORE STABLE THAN ALTERNATIVE     
C                    METHODS THAT WE TRIED                              
                                                                        
C     ROUTINES CALLED:  ASYMTX                                          
                                                                        
C   I N P U T     V A R I A B L E S:                                    
                                                                        
C       GL     :  DELTA-M SCALED LEGENDRE COEFFICIENTS OF PHASE FUNCTION
C                    (INCLUDING FACTORS 2L+1 AND SINGLE-SCATTER ALBEDO) 
C       CMU    :  COMPUTATIONAL POLAR ANGLE COSINES                     
C       CWT    :  WEIGHTS FOR QUADRATURE OVER POLAR ANGLE COSINE        
C       MAZIM  :  ORDER OF AZIMUTHAL COMPONENT                          
C       NN     :  HALF THE TOTAL NUMBER OF STREAMS                      
C       YLMC   :  NORMALIZED ASSOCIATED LEGENDRE POLYNOMIAL             
C                 AT THE QUADRATURE ANGLES -CMU-                        
C       (REMAINDER ARE 'DISORT' INPUT VARIABLES)                        
                                                                        
C   O U T P U T    V A R I A B L E S:                                   
                                                                        
C       CC     :  CAPITAL-C-SUB-IJ IN EQ. SS(5); NEEDED IN SS(15&18)    
C       EVAL   :  -NN- EIGENVALUES OF EQ. SS(12) ON RETURN FROM 'ASYMTX'
C                    BUT THEN SQUARE ROOTS TAKEN                        
C       EVECC  :  -NN- EIGENVECTORS  (G+) - (G-)  ON RETURN             
C                    FROM 'ASYMTX' ( COLUMN J CORRESPONDS TO -EVAL(J)- )
C                    BUT THEN  (G+) + (G-)  IS CALCULATED FROM SS(10),  
C                    G+  AND  G-  ARE SEPARATED, AND  G+  IS STACKED ON 
C                    TOP OF  G-  TO FORM -NSTR- EIGENVECTORS OF SS(7)   
C       GC     :  PERMANENT STORAGE FOR ALL -NSTR- EIGENVECTORS, BUT    
C                    IN AN ORDER CORRESPONDING TO -KK-                  
C       KK     :  PERMANENT STORAGE FOR ALL -NSTR- EIGENVALUES OF SS(7),
C                    BUT RE-ORDERED WITH NEGATIVE VALUES FIRST ( SQUARE 
C                    ROOTS OF -EVAL- TAKEN AND NEGATIVES ADDED )        
                                                                        
C   I N T E R N A L   V A R I A B L E S:                                
                                                                        
C       AMB,APB :  MATRICES (ALPHA-BETA), (ALPHA+BETA) IN REDUCED       
C                    EIGENVALUE PROBLEM                                 
C       ARRAY   :  COMPLETE COEFFICIENT MATRIX OF REDUCED EIGENVALUE    
C                    PROBLEM: (ALFA+BETA)*(ALFA-BETA)                   
C       GPPLGM  :  (G+) + (G-) (CF. EQS. SS(10-11))                     
C       GPMIGM  :  (G+) - (G-) (CF. EQS. SS(10-11))                     
C       WK      :  SCRATCH ARRAY REQUIRED BY 'ASYMTX'                   
C+---------------------------------------------------------------------+
      REAL*8    AMB( MI,* ), APB( MI,* ), ARRAY( MI,* ), CC( MXCMU,* ), 
     $        CMU(*), CWT(*), EVAL(*), EVECC( MXCMU,* ), GC( MXCMU,* ), 
     $        GL(0:*), KK(*), WK(*), YLMC( 0:MXCMU,* )                  
      DOUBLE PRECISION   EVECCD( MI,* ), EVALD(*), WKD(*), AAD( MI,* )  
                                                                        
C                                                                       
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                          
                                                                        
C                             ** CALCULATE QUANTITIES IN EQS. SS(5-6)   
      DO 40 IQ  = 1, NN                                                 
                                                                        
         DO 20  JQ = 1, NSTR                                            
            SUM = 0.0                                                   
            DO 10  L = MAZIM, NSTR-1                                    
               SUM = SUM + GL(L) * YLMC(L,IQ) * YLMC(L,JQ)              
10          CONTINUE                                                    
            CC(IQ,JQ) = 0.5 * SUM * CWT(JQ)                             
20       CONTINUE                                                       
                                                                        
         DO 30  JQ = 1, NN                                              
C                             ** FILL REMAINDER OF ARRAY USING SYMMETRY 
C                             ** RELATIONS  C(-MUI,MUJ) = C(MUI,-MUJ)   
C                             ** AND        C(-MUI,-MUJ) = C(MUI,MUJ)   
                                                                        
            CC(IQ+NN,JQ) = CC(IQ,JQ+NN)                                 
            CC(IQ+NN,JQ+NN) = CC(IQ,JQ)                                 
C                                      ** GET FACTORS OF COEFF. MATRIX  
C                                      ** OF REDUCED EIGENVALUE PROBLEM 
            ALPHA =   CC(IQ,JQ) / CMU(IQ)                               
            BETA = CC(IQ,JQ+NN) / CMU(IQ)                               
            AMB(IQ,JQ) = ALPHA - BETA                                   
            APB(IQ,JQ) = ALPHA + BETA                                   
30       CONTINUE                                                       
         AMB(IQ,IQ) = AMB(IQ,IQ) - 1.0 / CMU(IQ)                        
         APB(IQ,IQ) = APB(IQ,IQ) - 1.0 / CMU(IQ)                        
                                                                        
C                                INSERT TO ELIMINATE SINGULARITY, IF ANY
         IF ( AMB(IQ,IQ).EQ.0. ) AMB(IQ,IQ) = 1.E-6                     
         IF ( APB(IQ,IQ).EQ.0. ) APB(IQ,IQ) = 1.E-6                     
                                                                        
40    CONTINUE                                                          
C                      ** FINISH CALCULATION OF COEFFICIENT MATRIX OF   
C                      ** REDUCED EIGENVALUE PROBLEM:  GET MATRIX       
C                      ** PRODUCT (ALFA+BETA)*(ALFA-BETA); SS(12)       
      DO 70  IQ = 1, NN                                                 
         DO 70  JQ = 1, NN                                              
            SUM = 0.                                                    
            DO 60  KQ = 1, NN                                           
               SUM = SUM + APB(IQ,KQ) * AMB(KQ,JQ)                      
60          CONTINUE                                                    
            ARRAY(IQ,JQ) = SUM                                          
70    CONTINUE                                                          
C                      ** FIND (REAL) EIGENVALUES AND EIGENVECTORS      
                                                                        
      CALL  ASYMTX( ARRAY, EVECC, EVAL, NN, MI, MXCMU, IER, WK,         
     $              AAD, EVECCD, EVALD, WKD )                           
                                                                        
      IF ( IER.GT.0 )  THEN                                             
Calley         WRITE( *,'(//,A,I4,A)') ' ASYMTX--EIGENVALUE NO. ', IER, 
         IF (IPR .GT. 0) WRITE (IPR, '(//,A,I4,A)')                     
     +                                 ' ASYMTX--EIGENVALUE NO. ', IER, 
     $     '  DIDNT CONVERGE.  LOWER-NUMBERED EIGENVALUES WRONG.'       
         CALL  ERRMSG( 'ASYMTX--CONVERGENCE PROBLEMS', .TRUE. )         
      END IF                                                            
                                                                        
CDIR$ IVDEP                                                             
      DO 75  IQ = 1, NN                                                 
C                                INSERT TO ELIMINATE SINGULARITY, IF ANY
           IF ( EVAL(IQ).EQ.0. ) EVAL(IQ) = 1.E-8                       
         EVAL(IQ) = DSQRT( DABS( EVAL(IQ) ) )                           
         KK( IQ+NN ) = EVAL(IQ)                                         
C                                             ** ADD NEGATIVE EIGENVALUE
         KK( NN+1-IQ ) = - EVAL(IQ)                                     
75    CONTINUE                                                          
C                          ** FIND EIGENVECTORS (G+) + (G-) FROM SS(10) 
C                          ** AND STORE TEMPORARILY IN -APB- ARRAY      
      DO 90  JQ = 1, NN                                                 
         DO 90  IQ = 1, NN                                              
            SUM = 0.                                                    
            DO 80  KQ = 1,NN                                            
               SUM = SUM + AMB(IQ,KQ) * EVECC(KQ,JQ)                    
80          CONTINUE                                                    
            APB(IQ,JQ) = SUM / EVAL(JQ)                                 
90    CONTINUE                                                          
                                                                        
      DO 100  JQ = 1, NN                                                
CDIR$ IVDEP                                                             
         DO 100  IQ = 1, NN                                             
            GPPLGM = APB(IQ,JQ)                                         
            GPMIGM = EVECC(IQ,JQ)                                       
C                                ** RECOVER EIGENVECTORS G+,G- FROM     
C                                   THEIR SUM AND DIFFERENCE; STACK THEM
C                                   TO GET EIGENVECTORS OF FULL SYSTEM  
C                                   SS(7) (JQ = EIGENVECTOR NUMBER)     
                                                                        
            EVECC(IQ,      JQ) = 0.5 * ( GPPLGM + GPMIGM )              
            EVECC(IQ+NN,   JQ) = 0.5 * ( GPPLGM - GPMIGM )              
                                                                        
C                                ** EIGENVECTORS CORRESPONDING TO       
C                                ** NEGATIVE EIGENVALUES (CORRESP. TO   
C                                ** REVERSING SIGN OF 'K' IN SS(10) )   
            GPPLGM = - GPPLGM                                           
            EVECC(IQ,   JQ+NN) = 0.5 * ( GPPLGM + GPMIGM )              
            EVECC(IQ+NN,JQ+NN) = 0.5 * ( GPPLGM - GPMIGM )              
            GC( IQ+NN,   JQ+NN )   = EVECC( IQ,    JQ )                 
            GC( NN+1-IQ, JQ+NN )   = EVECC( IQ+NN, JQ )                 
            GC( IQ+NN,   NN+1-JQ ) = EVECC( IQ,    JQ+NN )              
            GC( NN+1-IQ, NN+1-JQ ) = EVECC( IQ+NN, JQ+NN )              
100   CONTINUE                                                          
                                                                        
      RETURN                                                            
      END                                                               
      SUBROUTINE  SOLVE0( B, BDR, BEM, BPLANK, CBAND, CMU, CWT, EXPBEA, 
     $                    FBEAM, FISOT, IPVT, LAMBER, LL, LYRCUT,       
     $                    MAZIM, MI, MI9M2, MXCMU, NCOL, NCUT, NN, NSTR,
     $                    NNLYRI, PI, TPLANK, TAUCPR, UMU0, Z, ZZ,      
     $                    ZPLK0, ZPLK1 )                                
                                                                        
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
C        CONSTRUCT RIGHT-HAND SIDE VECTOR -B- FOR GENERAL BOUNDARY      
C        CONDITIONS STWJ(17) AND SOLVE SYSTEM OF EQUATIONS OBTAINED     
C        FROM THE BOUNDARY CONDITIONS AND THE                           
C        CONTINUITY-OF-INTENSITY-AT-LAYER-INTERFACE EQUATIONS.          
C        THERMAL EMISSION CONTRIBUTES ONLY IN AZIMUTHAL INDEPENDENCE.   
                                                                        
C     ROUTINES CALLED:  DGBCO, DGBSL, ZEROIT                            
                                                                        
C     I N P U T      V A R I A B L E S:                                 
                                                                        
C       BDR      :  SURFACE BIDIRECTIONAL REFLECTIVITY                  
C       BEM      :  SURFACE BIDIRECTIONAL EMISSIVITY                    
C       BPLANK   :  BOTTOM BOUNDARY THERMAL EMISSION                    
C       CBAND    :  LEFT-HAND SIDE MATRIX OF LINEAR SYSTEM EQ. SC(5),   
C                   SCALED BY EQ. SC(12); IN BANDED FORM REQUIRED       
C                   BY LINPACK SOLUTION ROUTINES                        
C       CMU      :  ABSCISSAE FOR GAUSS QUADRATURE OVER ANGLE COSINE    
C       CWT      :  WEIGHTS FOR GAUSS QUADRATURE OVER ANGLE COSINE      
C       EXPBEA   :  TRANSMISSION OF INCIDENT BEAM, EXP(-TAUCPR/UMU0)    
C       LYRCUT   :  LOGICAL FLAG FOR TRUNCATION OF COMPUT. LAYER        
C       MAZIM    :  ORDER OF AZIMUTHAL COMPONENT                        
C       NCOL     :  COUNTS OF COLUMNS IN -CBAND-                        
C       NN       :  ORDER OF DOUBLE-GAUSS QUADRATURE (NSTR/2)           
C       NCUT     :  TOTAL NUMBER OF COMPUTATIONAL LAYERS CONSIDERED     
C       TPLANK   :  TOP BOUNDARY THERMAL EMISSION                       
C       TAUCPR   :  CUMULATIVE OPTICAL DEPTH (DELTA-M-SCALED)           
C       ZZ       :  BEAM SOURCE VECTORS IN EQ. SS(19)                   
C       ZPLK0    :  THERMAL SOURCE VECTORS -Z0-, BY SOLVING EQ. SS(16)  
C       ZPLK1    :  THERMAL SOURCE VECTORS -Z1-, BY SOLVING EQ. SS(16)  
C       (REMAINDER ARE 'DISORT' INPUT VARIABLES)                        
                                                                        
C   O U T P U T     V A R I A B L E S:                                  
                                                                        
C       B        :  RIGHT-HAND SIDE VECTOR OF EQ. SC(5) GOING INTO      
C                   *DGBSL*; RETURNS AS SOLUTION VECTOR OF EQ.          
C                   SC(12), CONSTANTS OF INTEGRATION WITHOUT            
C                   EXPONENTIAL TERM                                    
C      LL        :  PERMANENT STORAGE FOR -B-, BUT RE-ORDERED           
                                                                        
C   I N T E R N A L    V A R I A B L E S:                               
                                                                        
C       IPVT     :  INTEGER VECTOR OF PIVOT INDICES                     
C       IT       :  POINTER FOR POSITION IN  -B-                        
C       NCD      :  NUMBER OF DIAGONALS BELOW OR ABOVE MAIN DIAGONAL    
C       RCOND    :  INDICATOR OF SINGULARITY FOR -CBAND-                
C       Z        :  SCRATCH ARRAY REQUIRED BY *DGBCO*                   
C+---------------------------------------------------------------------+
                                                                        
      LOGICAL  LAMBER, LYRCUT                                           
      INTEGER  IPVT(*)                                                  
      REAL*8     B(*), BDR( MI,0:* ), BEM(*), CBAND( MI9M2,NNLYRI ),    
     $         CMU(*), CWT(*), EXPBEA(0:*), LL( MXCMU,* ),              
     $         TAUCPR( 0:* ), Z(*), ZZ( MXCMU,* ), ZPLK0( MXCMU,* ),    
     $         ZPLK1( MXCMU,* )                                         
                                                                        
      CALL  ZEROIT( B, NNLYRI )                                         
C                             ** CONSTRUCT -B-,  STWJ(20A,C) FOR        
C                             ** PARALLEL BEAM + BOTTOM REFLECTION +    
C                             ** THERMAL EMISSION AT TOP AND/OR BOTTOM  
      IF ( MAZIM.GT.0 .AND. FBEAM.GT.0.0 )  THEN                        
C                                         ** AZIMUTH-DEPENDENT CASE     
C                                         ** (NEVER CALLED IF FBEAM = 0)
         IF ( LYRCUT .OR. LAMBER ) THEN                                 
C               ** NO AZIMUTHAL-DEPENDENT INTENSITY FOR LAMBERT SURFACE;
C               ** NO INTENSITY COMPONENT FOR TRUNCATED BOTTOM LAYER    
                                                                        
            DO 10  IQ = 1, NN                                           
C                                                     ** TOP BOUNDARY   
               B(IQ) = - ZZ(NN+1-IQ,1)                                  
C                                                  ** BOTTOM BOUNDARY   
               B(NCOL-NN+IQ) = - ZZ(IQ+NN,NCUT) * EXPBEA(NCUT)          
10          CONTINUE                                                    
                                                                        
         ELSE                                                           
                                                                        
            DO 20  IQ = 1, NN                                           
               B(IQ) = - ZZ(NN+1-IQ,1)                                  
                                                                        
               SUM = 0.                                                 
               DO 15  JQ = 1, NN                                        
                  SUM = SUM + CWT(JQ) * CMU(JQ) * BDR(IQ,JQ)            
     $                        * ZZ(NN+1-JQ,NCUT) * EXPBEA(NCUT)         
15             CONTINUE                                                 
               B(NCOL-NN+IQ) = SUM                                      
               IF ( FBEAM.GT.0.0 )                                      
     $              B(NCOL-NN+IQ) = SUM + ( BDR(IQ,0) * UMU0*FBEAM/PI   
     $                                 - ZZ(IQ+NN,NCUT) ) * EXPBEA(NCUT)
20          CONTINUE                                                    
                                                                        
                                                                        
         END IF                                                         
                                                                        
                                                                        
C                             ** CONTINUITY CONDITION FOR LAYER         
C                             ** INTERFACES OF EQ. STWJ(20B)            
         IT = NN                                                        
         DO 40  LC = 1, NCUT-1                                          
            DO 30  IQ = 1, NSTR                                         
                                                                        
               IT    = IT + 1                                           
               B(IT) = ( ZZ(IQ,LC+1) - ZZ(IQ,LC) ) * EXPBEA(LC)         
30          CONTINUE                                                    
40       CONTINUE                                                       
      ELSE                                                              
C                                   ** AZIMUTH-INDEPENDENT CASE         
         IF ( FBEAM.EQ.0.0 )  THEN                                      
                                                                        
            DO 50 IQ = 1, NN                                            
C                                      ** TOP BOUNDARY                  
               B(IQ) = - ZPLK0(NN+1-IQ,1) + FISOT + TPLANK              
50          CONTINUE                                                    
                                                                        
            IF ( LYRCUT ) THEN                                          
C                               ** NO INTENSITY COMPONENT FOR TRUNCATED 
C                               ** BOTTOM LAYER                         
               DO 60 IQ = 1, NN                                         
C                                      ** BOTTOM BOUNDARY               
                  B(NCOL-NN+IQ) = - ZPLK0(IQ+NN,NCUT)                   
     $                            - ZPLK1(IQ+NN,NCUT) * TAUCPR(NCUT)    
60             CONTINUE                                                 
                                                                        
            ELSE                                                        
                                                                        
               DO 80 IQ = 1, NN                                         
                  SUM = 0.                                              
                 DO 70 JQ = 1, NN                                       
                                                                        
                                                                        
                     SUM = SUM + CWT(JQ) * CMU(JQ) * BDR(IQ,JQ)         
     $                          * ( ZPLK0(NN+1-JQ,NCUT)                 
     $                            + ZPLK1(NN+1-JQ,NCUT) * TAUCPR(NCUT) )
70                CONTINUE                                              
                  B(NCOL-NN+IQ) = 2.*SUM + BEM(IQ) * BPLANK             
     $                            - ZPLK0(IQ+NN,NCUT)                   
     $                            - ZPLK1(IQ+NN,NCUT) * TAUCPR(NCUT)    
80             CONTINUE                                                 
            END IF                                                      
C                             ** CONTINUITY CONDITION FOR LAYER         
C                             ** INTERFACES, STWJ(20B)                  
                                                                        
            IT = NN                                                     
            DO 100  LC = 1, NCUT-1                                      
               DO 90  IQ = 1, NSTR                                      
                  IT    = IT + 1                                        
                  B(IT) = ZPLK0(IQ,LC+1) - ZPLK0(IQ,LC) +               
     $                  ( ZPLK1(IQ,LC+1) - ZPLK1(IQ,LC) ) * TAUCPR(LC)  
90             CONTINUE                                                 
100         CONTINUE                                                    
                                                                        
         ELSE                                                           
            DO 150 IQ = 1, NN                                           
                                                                        
                                                                        
                                                                        
               B(IQ) = - ZZ(NN+1-IQ,1) - ZPLK0(NN+1-IQ,1) +FISOT +TPLANK
                                                                        
150         CONTINUE                                                    
                                                                        
            IF ( LYRCUT ) THEN                                          
               DO 160 IQ = 1, NN                                        
                  B(NCOL-NN+IQ) = - ZZ(IQ+NN,NCUT) * EXPBEA(NCUT)       
     $                            - ZPLK0(IQ+NN,NCUT)                   
     $                            - ZPLK1(IQ+NN,NCUT) * TAUCPR(NCUT)    
160            CONTINUE                                                 
                                                                        
            ELSE                                                        
                                                                        
               DO 180 IQ = 1, NN                                        
                  SUM = 0.                                              
                  DO 170 JQ = 1, NN                                     
                     SUM = SUM + CWT(JQ) * CMU(JQ) * BDR(IQ,JQ)         
     $                          * ( ZZ(NN+1-JQ,NCUT) * EXPBEA(NCUT)     
     $                            + ZPLK0(NN+1-JQ,NCUT)                 
     $                            + ZPLK1(NN+1-JQ,NCUT) * TAUCPR(NCUT) )
170               CONTINUE                                              
                  B(NCOL-NN+IQ) = 2.*SUM + ( BDR(IQ,0) * UMU0*FBEAM/PI  
     $                                 - ZZ(IQ+NN,NCUT) ) * EXPBEA(NCUT)
     $                            + BEM(IQ) * BPLANK                    
     $                            - ZPLK0(IQ+NN,NCUT)                   
     $                            - ZPLK1(IQ+NN,NCUT) * TAUCPR(NCUT)    
180            CONTINUE                                                 
            END IF                                                      
            IT = NN                                                     
            DO 200  LC = 1, NCUT-1                                      
               DO 190  IQ = 1, NSTR                                     
                  IT    = IT + 1                                        
                  B(IT) = ( ZZ(IQ,LC+1) - ZZ(IQ,LC) ) * EXPBEA(LC)      
     $                    + ZPLK0(IQ,LC+1) - ZPLK0(IQ,LC) +             
     $                    ( ZPLK1(IQ,LC+1) - ZPLK1(IQ,LC) ) * TAUCPR(LC)
190            CONTINUE                                                 
200         CONTINUE                                                    
         END IF                                                         
                                                                        
      END IF                                                            
C                     ** FIND L-U (LOWER/UPPER TRIANGULAR) DECOMPOSITION
C                     ** OF BAND MATRIX -CBAND- AND TEST IF IT IS NEARLY
C                     ** SINGULAR (NOTE: -CBAND- IS DESTROYED)          
C                     ** (-CBAND- IS IN LINPACK PACKED FORMAT)          
      RCOND = 0.0                                                       
      NCD = 3*NN - 1                                                    
      CALL  DGBCO( CBAND, MI9M2, NCOL, NCD, NCD, IPVT, RCOND, Z )       
      IF ( 1.0+RCOND .EQ. 1.0 )  CALL  ERRMSG                           
     $   ( 'SOLVE0--dGBCO SAYS MATRIX NEAR SINGULAR',.FALSE.)           
C                   ** SOLVE LINEAR SYSTEM WITH COEFF MATRIX -CBAND-    
C                   ** AND R.H. SIDE(S) -B- AFTER -CBAND- HAS BEEN L-U  
C                   ** DECOMPOSED.  SOLUTION IS RETURNED IN -B-.        
      CALL  DGBSL( CBAND, MI9M2, NCOL, NCD, NCD, IPVT, B, 0 )           
C                   ** ZERO -CBAND- (IT MAY CONTAIN 'FOREIGN'           
C                   ** ELEMENTS UPON RETURNING FROM LINPACK);           
C                   ** NECESSARY TO PREVENT ERRORS                      
                                                                        
      CALL  ZEROIT( CBAND, MI9M2*NNLYRI )                               
      DO 220  LC = 1, NCUT                                              
         IPNT = LC*NSTR - NN                                            
         DO 220  IQ = 1, NN                                             
            LL(NN+1-IQ,LC) = B(IPNT+1-IQ)                               
            LL(IQ+NN,  LC) = B(IQ+IPNT)                                 
220   CONTINUE                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE  SOLVE1( B, CBAND, FISOT, IHOM, IPVT, LL, MI9M2, MXCMU,
     $                    NCOL, NCUT, NN, NNLYRI, NSTR, Z )             
                                                                        
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
C        CONSTRUCT RIGHT-HAND SIDE VECTOR -B- FOR ISOTROPIC INCIDENCE   
C        (ONLY) ON EITHER TOP OR BOTTOM BOUNDARY AND SOLVE SYSTEM       
C        OF EQUATIONS OBTAINED FROM THE BOUNDARY CONDITIONS AND THE     
C        CONTINUITY-OF-INTENSITY-AT-LAYER-INTERFACE EQUATIONS           
                                                                        
C     ROUTINES CALLED:  DGBCO, DGBSL, ZEROIT                            
                                                                        
C     I N P U T      V A R I A B L E S:                                 
                                                                        
C       CBAND    :  LEFT-HAND SIDE MATRIX OF LINEAR SYSTEM EQ. SC(5),   
C                   SCALED BY EQ. SC(12); IN BANDED FORM REQUIRED       
C                   BY LINPACK SOLUTION ROUTINES                        
C       IHOM     :  DIRECTION OF ILLUMINATION FLAG                      
C       NCOL     :  COUNTS OF COLUMNS IN -CBAND-                        
C       NN       :  ORDER OF DOUBLE-GAUSS QUADRATURE (NSTR/2)           
C       (REMAINDER ARE 'DISORT' INPUT VARIABLES)                        
                                                                        
C    O U T P U T     V A R I A B L E S:                                 
                                                                        
C       B        :  RIGHT-HAND SIDE VECTOR OF EQ. SC(5) GOING INTO      
C                   *DGBSL*; RETURNS AS SOLUTION VECTOR OF EQ.          
C                   SC(12), CONSTANTS OF INTEGRATION WITHOUT            
C                   EXPONENTIAL TERM                                    
C       LL      :   PERMANENT STORAGE FOR -B-, BUT RE-ORDERED           
                                                                        
C   I N T E R N A L    V A R I A B L E S:                               
                                                                        
C       IPVT     :  INTEGER VECTOR OF PIVOT INDICES                     
C       NCD      :  NUMBER OF DIAGONALS BELOW OR ABOVE MAIN DIAGONAL    
C       RCOND    :  INDICATOR OF SINGULARITY FOR -CBAND-                
C       Z        :  SCRATCH ARRAY REQUIRED BY *DGBCO*                   
C----------------------------------------------------------------------+
      INTEGER  IPVT(*)                                                  
      REAL*8     B( NNLYRI ), CBAND( MI9M2,NNLYRI ), LL( MXCMU,* ), Z(*)
                                                                        
                                                                        
      CALL  ZEROIT( B, NNLYRI )                                         
      NCD = 3*NN - 1                                                    
                                                                        
      IF ( IHOM.EQ.1 )  THEN                                            
C                             ** BECAUSE THERE ARE NO BEAM OR EMISSION  
C                             ** SOURCES, REMAINDER OF -B- ARRAY IS ZERO
         DO 10  I = 1, NN                                               
            B(I) = FISOT                                                
            B( NCOL-NN+I ) = 0.0                                        
10       CONTINUE                                                       
                                                                        
         RCOND = 0.0                                                    
         CALL  DGBCO( CBAND, MI9M2, NCOL, NCD, NCD, IPVT, RCOND, Z )    
         IF ( 1.0+RCOND .EQ. 1.0 )  CALL  ERRMSG                        
     $         ( 'SOLVE1--dGBCO SAYS MATRIX NEAR SINGULAR', .FALSE. )   
                                                                        
      ELSE IF ( IHOM.EQ.2 )  THEN                                       
                                                                        
         DO 20 I = 1, NN                                                
            B(I) = 0.0                                                  
            B( NCOL-NN+I ) = FISOT                                      
20       CONTINUE                                                       
                                                                        
      END IF                                                            
                                                                        
      CALL  DGBSL( CBAND, MI9M2, NCOL, NCD, NCD, IPVT, B, 0 )           
                                                                        
C                          ** ZERO -CBAND- TO GET RID OF 'FOREIGN'      
C                          ** ELEMENTS PUT IN BY LINPACK                
      DO 30  LC = 1, NCUT                                               
         IPNT = LC*NSTR - NN                                            
         DO 30  IQ = 1, NN                                              
            LL( NN+1-IQ, LC) = B( IPNT+1-IQ )                           
            LL( IQ+NN,   LC) = B( IQ+IPNT )                             
30    CONTINUE                                                          
                                                                        
      RETURN                                                            
      END                                                               
      SUBROUTINE SOLZEN(L,IKMAX1,REE,DEG,ANGLE)                         
C                                                                       
C     ROUTINE SOLZEN STORES THE COSINE OF THE SOLAR/LUNAR ZENITH        
C     ANGLE DATA FOR THE MULTIPLE SCATTERING CALCULATIONS:              
C       CSZEN0  COSINE OF SOLAR/LUNAR ZENITH AT THE GROUND.             
C       CSZEN   LAYER AVERAGE COSINE OF SOLAR/LUNAR ZENITH FOR VERTICAL 
C               PATH (USED IN CALCULATION OF BACKSCATTER FRACTION).     
C       CSZENX  AVERAGE SOLAR/LUNAR COSINE ZENITH EXITING               
C               (AWAY FROM EARTH) THE CURRENT LAYER.                    
C                                                                       
C     DEFINE INPUTS                                                     
C       L       CURRENT LAYER BOUNDARY.                                 
C       IKMAX1  NUMBER OF LAYER BOUNDARIES (NUMBER OF LAYERS PLUS ONE). 
C       REE     EARTH RADIUS [KM]                                       
C       DEG     NUMBER OF DEGREES IN ONE RADIAN                         
C       ANGLE   SOLAR ZENITH ANGLE AT BOUNDARY L [DEG]                  
      INTEGER L,IKMAX1                                                  
      REAL REE,DEG,ANGLE                                                
C                                                                       
C     LIST PARAMETERS                                                   
      INCLUDE 'PARAM.LST'                                               
C                                                                       
C     LIST COMMONS                                                      
      REAL ZM,PM,TM,RFNDX,DENSTY                                        
      COMMON/MODEL/ZM(LAYDIM),PM(LAYDIM),TM(LAYDIM),                    
     1  RFNDX(LAYDIM),DENSTY(KMAX,LAYDIM)                               
C                                                                       
C     COMMON /MSRD/                                                     
C       CSZEN0  LAYER BOUNDARY COSINE OF SOLAR/LUNAR ZENITH.            
C       CSZEN   LAYER AVERAGE COSINE OF SOLAR/LUNAR ZENITH.             
C       CSZENX  AVERAGE SOLAR/LUNAR COSINE ZENITH EXITING               
C               (AWAY FROM EARTH) THE CURRENT LAYER.                    
C       BBGRND  THERMAL EMISSION (FLUX) AT THE GROUND [W CM-2 / CM-1].  
C       BBNDRY  LAYER BOUNDARY THERMAL EMISSION (FLUX) [W CM-2 / CM-1]. 
C       COSBAR  LAYER HENYEY-GREENSTEIN ASYMMETRY FACTOR.               
C       TSCAT   LAYER SCATTERING OPTICAL DEPTH.                         
C       TCONT   LAYER CONTINUUM OPTICAL DEPTH.                          
C       TAUT    LAYER TOTAL OPTICAL DEPTH.                              
C       DEPRAT  FRACTIONAL DECREASE IN WEAK-LINE OPTICAL DEPTH TO SUN.  
C       S0DEP   OPTICAL DEPTH FROM LAYER BOUNDARY TO SUN.               
C       S0TRN   TRANSMITTED SOLAR IRRADIANCES [W CM-2 / CM-1]           
C       UPF     LAYER BOUNDARY UPWARD THERMAL FLUX [W CM-2 / CM-1].     
C       DNF     LAYER BOUNDARY DOWNWARD THERMAL FLUX [W CM-2 / CM-1].   
C       UPFS    LAYER BOUNDARY UPWARD SOLAR FLUX [W CM-2 / CM-1].       
C       DNFS    LAYER BOUNDARY DOWNWARD SOLAR FLUX [W CM-2 / CM-1].     
      REAL CSZEN0,CSZEN,CSZENX,BBGRND,BBNDRY,COSBAR,TSCAT,              
     1  TCONT,TAUT,DEPRAT,S0DEP,S0TRN,UPF,DNF,UPFS,DNFS                 
      COMMON/MSRD/CSZEN0(LAYDIM),CSZEN(LAYDIM),CSZENX(LAYDIM),          
     1  BBGRND,BBNDRY(LAYDIM),COSBAR(LAYDIM),TSCAT(LAYDIM),             
     2  TCONT(LAYDIM),TAUT(NKSUB,LAYDIM),DEPRAT(LAYDIM),                
     3  S0DEP(NKSUB,LAYDIM),S0TRN(NKSUB,LAYDIM),UPF(NKSUB,LAYDIM),      
     4  DNF(NKSUB,LAYDIM),UPFS(NKSUB,LAYDIM),DNFS(NKSUB,LAYDIM)         
C                                                                       
C     DECLARE LOCAL VARIABLES                                           
      INTEGER LP1                                                       
      REAL RIDIF,DSTDIF,DSTRAT,PROD                                     
C                                                                       
C     COSINE OF THE SOLAR ZENITH AT UPPER LAYER BOUNDARY                
      CSZEN0(L)=COS(ANGLE/DEG)                                          
C                                                                       
C     COSINE OF THE SOLAR ZENITH AVERAGED FOR LAYER.                    
      IF(L.GT.1)CSZEN(L-1)=.5*(CSZEN0(L-1)+CSZEN0(L))                   
C                                                                       
C     COSINE OF THE SOLAR ZENITH EXITING THE LAYER ABOVE.               
      IF(L.GE.IKMAX1)RETURN                                             
      LP1=L+1                                                           
      RIDIF=(RFNDX(L)-RFNDX(LP1))/(1.+RFNDX(LP1))                       
      DSTDIF=(ZM(LP1)-ZM(L))/(REE+ZM(LP1))                              
      DSTRAT=1.-DSTDIF                                                  
      PROD=(1.+RIDIF)*DSTRAT                                            
      CSZENX(L)=.5*(ABS(CSZEN0(L))+                                     
     1  SQRT((CSZEN0(L)*PROD)**2+(1.+PROD)*(DSTDIF-RIDIF*DSTRAT)))      
      RETURN                                                            
      END                                                               
      REAL FUNCTION SOURCE(IV,ISOURC,IDAY,ANGLE)                        
C                                                                       
C     THIS ROUTINE RETURNS SOURCE IRRADIANCE [W CM-2 / CM-1].           
C     CORRECTIONS ARE MADE FOR THE SUN'S ELLIPTIC ORBIT.  IF THE        
C     SOURCE IS THE MOON RATHER THAN THE EARTH,  THE PHASE ANGLE        
C     BETWEEN THE SUN, MOON AND EARTH IS TAKEN IN ACCOUNT.              
C                                                                       
C     DECLARE INPUTS.                                                   
C       IV       FREQUENCY [CM-1].                                      
C       ISOURC   SOURCE FLAG [0=SUN AND 1=MOON].                        
C       IDAY     DAY OF YEAR [0-366, DEFAULT (0) IS DAY 91].            
C       ANGLE    LUNAR PHASE ANGLE [0 TO 180 DEG].                      
      INTEGER IV,ISOURC,IDAY                                            
      REAL ANGLE                                                        
C                                                                       
C     DECLARE PARAMETERS                                                
      INTEGER MAXSUN                                                    
      PARAMETER(MAXSUN=50000)                                           
C                                                                       
C     LIST COMMON BLOCKS                                                
      INTEGER ICALL                                                     
      REAL FPHS,FALB,FORBIT                                             
      COMMON/ICLL/ICALL,FPHS,FALB,FORBIT                                
      REAL SUN                                                          
      COMMON/SOLAR1/SUN(0:MAXSUN)                                       
C                                                                       
C     DECLARE LOCAL VARIABLE                                            
      INTEGER I,IM1                                                     
      REAL V                                                            
C                                                                       
C     DECLARE DATA                                                      
      INTEGER NDAY(13)                                                  
      REAL RAT(13),PHS(0:16),ALB(29)                                    
      DATA NDAY/1,32,60,91,121,152,182,213,244,274,305,335,366/         
      DATA RAT/1.034,1.030,1.019,1.001,.985,.972,.967,.971,.982,        
     1    .998,1.015,1.029,1.034/                                       
      DATA PHS/100.,73.2,57.8,42.3,32.0,23.3,16.7,12.4,8.7,6.7,         
     1    4.7,3.6,2.4,1.2,0.9,0.4,.002/                                 
      DATA ALB/.001,.01,.03,.075,.1,.13,.155,.17,.178,.185,.2,.211,     
     1    .231,.25,.275,.289,.285,.287,.3,.29,.3,.31,.313,.319,.329     
     1    ,.339,.345,.350,.4/                                           
C                                                                       
C     CHECK FOR LUNAR SOURCE.                                           
      IF(ISOURC.EQ.1)THEN                                               
C                                                                       
C         CHECK FOR INITIAL CALL.                                       
          IF(ICALL.NE.1)THEN                                            
C                                                                       
C             LUNAR PHASE ANGLE FACTOR                                  
              FPHS=0.                                                   
              I=ANGLE/10                                                
              IF(I.LT.16)FPHS=PHS(I)+(ANGLE/10-I)*(PHS(I+1)-PHS(I))     
          ENDIF                                                         
C                                                                       
C         GEOMETRICAL ALBEDO OF THE MOON                                
          FALB=.4                                                       
          IF(IV.GT.3571)THEN                                            
              V=10000./IV                                               
              I=10*V                                                    
              FALB=ALB(I)+(ALB(I+1)-ALB(I))*(10*V-I)                    
          ELSEIF(IV.GT.2000)THEN                                        
              V=10000./IV                                               
              FALB=ALB(28)+(ALB(29)-ALB(28))*(V-2.8)/2.2                
          ENDIF                                                         
      ENDIF                                                             
C                                                                       
C     CHECK FOR INITIAL CALL.                                           
      IF(ICALL.NE.1)THEN                                                
          ICALL=1                                                       
C                                                                       
C         SUN ELLIPTIC ORBIT FACTOR                                     
          IF(IDAY.LT.NDAY(1) .OR. IDAY.GT.NDAY(13))THEN                 
              FORBIT=1.                                                 
          ELSEIF(IDAY.EQ.1)THEN                                         
              FORBIT=RAT(1)                                             
          ELSE                                                          
              IM1=1                                                     
              DO 10 I=2,12                                              
                  IF(IDAY.LE.NDAY(I))GOTO20                             
   10         IM1=I                                                     
              I=13                                                      
   20         FORBIT=RAT(IM1)+(IDAY-NDAY(IM1))*                         
     1          (RAT(I)-RAT(IM1))/(NDAY(I)-NDAY(I-1))                   
          ENDIF                                                         
      ENDIF                                                             
C                                                                       
C     SOLAR INTENSITY [W CM-2 / CM-1]                                   
      SOURCE=FORBIT*SUN(IV)                                             
C                                                                       
C     LUNAR INTENSITY [W CM-2 / CM-1]                                   
      IF(ISOURC.EQ.1)SOURCE=2.04472E-7*FPHS*FALB*SOURCE                 
      RETURN                                                            
      END                                                               
      SUBROUTINE  SPALTR( CMU, CWT, GC, KK, LL, MXCMU, NLYR,            
     $                    NN, NSTR, TAUCPR, SFLUP, SFLDN )              
                                                                        
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
C       CALCULATES SPHERICAL ALBEDO AND TRANSMISSIVITY FOR THE ENTIRE   
C       MEDIUM FROM THE M=0 INTENSITY COMPONENTS                        
C       (THIS IS A VERY SPECIALIZED VERSION OF 'FLUXES')                
                                                                        
C    I N P U T    V A R I A B L E S:                                    
                                                                        
C       CMU     :  ABSCISSAE FOR GAUSS QUADRATURE OVER ANGLE COSINE     
C       CWT     :  WEIGHTS FOR GAUSS QUADRATURE OVER ANGLE COSINE       
C       KK      :  EIGENVALUES OF COEFF. MATRIX IN EQ. SS(7)            
C       GC      :  EIGENVECTORS AT POLAR QUADRATURE ANGLES, SC(1)       
C       LL      :  CONSTANTS OF INTEGRATION IN EQ. SC(1), OBTAINED      
C                  BY SOLVING SCALED VERSION OF EQ. SC(5);              
C                  EXPONENTIAL TERM OF EQ. SC(12) NOT INCLUDED          
C       NN      :  ORDER OF DOUBLE-GAUSS QUADRATURE (NSTR/2)            
C       (REMAINDER ARE 'DISORT' INPUT VARIABLES)                        
                                                                        
C    O U T P U T   V A R I A B L E S:                                   
                                                                        
C       SFLUP   :  UP-FLUX AT TOP (EQUIVALENT TO SPHERICAL ALBEDO DUE TO
C                  RECIPROCITY).  FOR ILLUMINATION FROM BELOW IT GIVES  
C                  SPHERICAL TRANSMISSIVITY                             
C       SFLDN   :  DOWN-FLUX AT BOTTOM (FOR SINGLE LAYER                
C                  EQUIVALENT TO SPHERICAL TRANSMISSIVITY               
C                  DUE TO RECIPROCITY)                                  
                                                                        
C    I N T E R N A L   V A R I A B L E S:                               
                                                                        
C       ZINT    :  INTENSITY OF M=0 CASE, IN EQ. SC(1)                  
C+----------------------------------------------------------------------
                                                                        
      REAL*8  CMU(*), CWT(*), GC( MXCMU,MXCMU,* ), KK( MXCMU,* ),       
     $      LL( MXCMU,* ), TAUCPR( 0:* )                                
                                                                        
                                                                        
      SFLUP = 0.0                                                       
      DO 20  IQ = NN+1, NSTR                                            
         ZINT  = 0.0                                                    
         DO 10   JQ = 1, NN                                             
            ZINT = ZINT + GC(IQ,JQ,1) * LL(JQ,1) *                      
     $                    DEXP( KK(JQ,1) * TAUCPR(1) )                  
10       CONTINUE                                                       
         DO 11  JQ = NN+1, NSTR                                         
            ZINT = ZINT + GC(IQ,JQ,1) * LL(JQ,1)                        
11       CONTINUE                                                       
                                                                        
         SFLUP = SFLUP + CWT(IQ-NN) * CMU(IQ-NN) * ZINT                 
20    CONTINUE                                                          
                                                                        
      SFLDN  = 0.0                                                      
      DO 40  IQ = 1, NN                                                 
         ZINT   = 0.0                                                   
         DO 30  JQ = 1, NN                                              
             ZINT = ZINT + GC(IQ,JQ,NLYR) * LL(JQ,NLYR)                 
30       CONTINUE                                                       
         DO 31  JQ = NN+1, NSTR                                         
             ZINT = ZINT + GC(IQ,JQ,NLYR) * LL(JQ,NLYR) *               
     $         DEXP( - KK(JQ,NLYR)*(TAUCPR(NLYR) - TAUCPR(NLYR-1)) )    
31       CONTINUE                                                       
                                                                        
         SFLDN = SFLDN + CWT(NN+1-IQ) * CMU(NN+1-IQ) * ZINT             
40    CONTINUE                                                          
                                                                        
      SFLUP = 2.0 * SFLUP                                               
      SFLDN = 2.0 * SFLDN                                               
                                                                        
      RETURN                                                            
      END                                                               
      SUBROUTINE SSGEO(IERROR,IPH,PARM1,PARM2,PARM3,PARM4,              
     1  PSIPO,G,MSOFF,ICH1,KNTRVL)                                      
C                                                                       
C     THIS ROUTINE CALLS THE LOWTRAN GEOMETRY ROUTINES REPEATEDLY       
C     TO OBTAIN THE ABSORBER AMOUNTS FROM THE SCATTERING POINTS ON      
C     THE OPTICAL PATH TO THE EXTRATERRESTRIAL SOURCE, AS IS NECESSARY  
C     FOR THE LAYER BY LAYER SINGLE SCATTERING RADIANCE CALCULATION.    
C                                                                       
C     DECLARE INPUTS                                                    
C       IERROR   ERROR FLAG (=0 FOR SUCCESSFUL CALLS)                   
C       IPH      PHASE FUNCTION FLAG (=0 FOR HENYEY-GREENSTEIN)         
C                                    (=1 FOR USER-DEFINED)              
C                                    (=2 FOR MIE-GENERATED)             
C       PARM1    OBSERVER LATITUDE [DEG NORTH OF EQUATOR]               
C       PARM2    OBSERVER LONGITUDE [DEG WEST OF GREENWICH]             
C       PARM3    SOURCE LATITUDE [DEG NORTH OF EQUATOR]                 
C       PARM4    SOURCE LONGITUDE [DEG WEST OF GREENWICH]               
C       PSIPO    PATH AZIMUTH ANGLE [DEG EAST OF NORTH]                 
C       G        HENYEY-GREENSTEIN ASYMMETRY FACTOR (IPH=0)             
C       MSOFF    MULTIPLE SCATTERING LAYER OFFSET (EQUALS 0 FOR         
C                OPTICAL PATH AND EQUALS LAYTWO FOR VERTICAL PATH)      
C       ICH1     HAZE MODEL FLAG                                        
C       KNTRVL   NUMBER OF CORRELATED-K SUB-INTERVALS                   
C                (=1 IF CORRELATED-K APPROACH IS NOT USED)              
      INTEGER IERROR,IPH,MSOFF,ICH1,KNTRVL                              
      REAL PARM1,PARM2,PARM3,PARM4,PSIPO,G                              
C                                                                       
C     LIST PARAMETERS                                                   
      INCLUDE 'PARAM.LST'                                               
C                                                                       
C     LIST COMMONS                                                      
      REAL TXX,WX,WPATHX                                                
      COMMON/NONAME/TXX(MMOLX),WX(MMOLX),WPATHX(LAYTHR,MMOLX)           
      REAL WPTHSX,TBBYSX                                                
      COMMON/SOLSX/WPTHSX(LAYTHR,MMOLX),TBBYSX(LAYTHR,MMOLX)            
      INTEGER KPOINT                                                    
      REAL WAVLEN,EXTC,ABSC,ASYM,AWCCON,TX,W,RELHUM,PATM,TBBY,WPATH     
      COMMON/BASE/WAVLEN(MXWVLN),EXTC(NAER,MXWVLN),ABSC(NAER,MXWVLN),   
     1  ASYM(NAER,MXWVLN),AWCCON(NAER),KPOINT(NSPC),TX(KMAX),W(KMAX),   
     2  RELHUM(LAYDIM),PATM(LAYTHR),TBBY(LAYTHR),WPATH(LAYTHR,KMAX)     
      INTEGER JTURN,LJ                                                  
      REAL ATHETA,ADBETA,PHASFN,AH1,ARH,ANGSUN,TBBYS,PATMS,WPATHS       
      COMMON/SOLS/JTURN,LJ(LAYTWO+1),ATHETA(LAYDIM+1),                  
     1  ADBETA(LAYDIM+1),PHASFN(LAYTWO,4),AH1(LAYTWO),ARH(LAYTWO),      
     2  ANGSUN,TBBYS(LAYTHR,12),PATMS(LAYTHR,12),WPATHS(LAYTHR,KMAX)    
C                                                                       
C     FILE UNIT NUMBERS                                                 
C       IRD      MODTRAN INPUT FILE, tape5, UNIT NUMBER (1).            
C       IPR      MODTRAN STANDARD OUTPUT FILE, tape6, UNIT NUMBER (2).  
C       IPU      MODTRAN SPECTRAL DATA FILE, tape7, UNIT NUMBER (7).    
C       NPR      PRINTOUT LEVEL SWITCH (1=small,0=normal,-1=large).     
C       IPR1     MODTRAN FLUX OUTPUT FILE, tape8, UNIT NUMBER (8).      
C       ISCRCH   MULTIPLE SCATTERING SCRATCH FILE UNIT NUMBER (10).     
C       ITB      MOLECULAR BAND MODEL PARAMETER FILE UNIT NUMBER (9).   
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                           
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                       
      INTEGER MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT                     
      REAL TBOUND,SALB                                                  
      LOGICAL MODTRN                                                    
      COMMON/CARD1/MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB,   
     1  MODTRN                                                          
      INTEGER NCRALT,NCRSPC                                             
      REAL CTHIK,CALT,CEXT,CWAVLN,CCOLWD,CCOLIP,CHUMID,ASYMWD,ASYMIP    
      COMMON/CARD2A/CTHIK,CALT,CEXT,NCRALT,NCRSPC,                      
     1  CWAVLN,CCOLWD,CCOLIP,CHUMID,ASYMWD,ASYMIP                       
      INTEGER LENN                                                      
      REAL H1,H2,ANGLE,RANGE,BETA,REE                                   
      COMMON/CARD3/H1,H2,ANGLE,RANGE,BETA,REE,LENN                      
      INTEGER IKMAX,ML,ISSGEO,IMULT                                     
      COMMON/CNTRL/IKMAX,ML,ISSGEO,IMULT                                
      REAL RE,ZMAX                                                      
      INTEGER IPATH                                                     
      COMMON/PARMTR/RE,ZMAX,IPATH                                       
C                                                                       
C       PI       THE CONSTANT PI                                        
C       DEG      NUMBER OF DEGREES IN ONE RADIAN.                       
C       BIGNUM   MAXIMUM SINGLE PRECISION NUMBER.                       
C       BIGEXP   MAXIMUM EXPONENTIAL ARGUMENT WITHOUT OVERFLOW.         
      REAL PI,DEG,BIGNUM,BIGEXP                                         
      COMMON/CNSTNS/PI,DEG,BIGNUM,BIGEXP                                
      REAL ZP,PP,TP,RFNDXP,SP,PPSUM,TPSUM,RHOPSM,DENP,AMTP              
      COMMON/RFRPTH/ZP(LAYDIM+1),PP(LAYDIM+1),TP(LAYDIM+1),             
     1  RFNDXP(LAYDIM+1),SP(LAYDIM+1),PPSUM(LAYDIM+1),TPSUM(LAYDIM+1),  
     2  RHOPSM(LAYDIM+1),DENP(KMAX,LAYDIM+1),AMTP(KMAX,LAYDIM+1)        
      INTEGER NANGLS                                                    
      REAL ANGF,F                                                       
      COMMON/USRDTA/NANGLS,ANGF(50),F(4,50)                             
C                                                                       
C     DECLARE LOCAL VARIABLES                                           
      CHARACTER*48 MESSAG                                               
      INTEGER MSOFFX,JTRNSV,IKMAX1,LENNSV,ITYPSV,J,MSOFFJ,K,IARBO,      
     1  IARB,LM1,L,LJ0,JITER,MM,LLM1,LL,MSOFFL,KP,IK,MSOFFK             
      REAL X,THETAO,PHIO,THETAS,PHIS,PSIO,DELO,H1SAV,H2SAV,ANGSAV,      
     1  RNGSAV,BETASV,PSIPOS,BETAST,PSIST,ANGL0,RELH,THTST,ANGERR,ANGMX,
     2  BENDNG,ANGSV,ANGMN,SANGLE,COSANG,PNUM,TNUM,DENOM,WPTH           
C                                                                       
C     DECLARE LOCAL ARRAYS                                              
      INTEGER LJSAV(LAYTWO)                                             
      REAL WPSAV(LAYTWO,KMAX),TBSAV(LAYTWO),WSAV(KMAX),ZPSAV(LAYDIM+1), 
     1  PSAV(LAYTWO),RHSAV(LAYDIM+1),WPSUM(KMAX),WPSAVX(LAYTHR,MMOLX)   
C                                                                       
C     DECLARE LOCAL FUNCTIONS                                           
      REAL PFMOL,PSI,DEL,SCTANG,HENGNS                                  
C                                                                       
C     MOLECULAR PHASE FUNCTION [STER-1]; X=COS(SCATTERING ANGLE)        
      PFMOL(X)=.06050402+.0572197*X**2                                  
      MSOFFX=0                                                          
      NPR=2                                                             
      ISSGEO=1                                                          
C                                                                       
C     SPECIFY THE GEOMETRICAL CONFIGURATION                             
      THETAO=PARM1                                                      
      PHIO=PARM2                                                        
      THETAS=PARM3                                                      
      PHIS=PARM4                                                        
      IF(THETAO.LT.-89.5)THEN                                           
C                                                                       
C         OBSERVER IS AT OR NEAR THE SOUTH POLE.                        
C         REMAP TO THE EQUATOR.                                         
Calley    WRITE(IPR,'(/2A)')'  THETAO < -89.5 (OBSERVER AT OR NEAR THE',
          IF (IPR .GT. 0) WRITE(IPR,                                    
     +              '(/2A)')'  THETAO < -89.5 (OBSERVER AT OR NEAR THE',
     1      ' SOUTH POLE).  PROBLEM HAS BEEN REMAPPED TO THE EQUATOR.'  
          PSIPO=PSIPO-PHIS                                              
          THETAO=0.                                                     
          PHIO=0.                                                       
          THETAS=0.                                                     
          PHIS=90.+THETAS                                               
      ELSEIF(THETAO.GT.89.5)THEN                                        
C                                                                       
C         OBSERVER IS AT OR NEAR THE NORTH POLE.  REMAP TO EQUATOR.     
Calley    WRITE(IPR,'(/2A)')'  THETAO > +89.5 (OBSERVER AT OR NEAR THE',
          IF (IPR .GT. 0) WRITE(IPR,                                    
     +              '(/2A)')'  THETAO > +89.5 (OBSERVER AT OR NEAR THE',
     1      ' NORTH POLE).  PROBLEM HAS BEEN REMAPPED TO THE EQUATOR.'  
          PSIPO=PHIS-PSIPO                                              
          THETAO=0.                                                     
          PHIO=0.                                                       
          THETAS=0.                                                     
          PHIS=90.-THETAS                                               
      ENDIF                                                             
Calley    WRITE(IPR,'(//A)')' SINGLE SCATTERING POINT TO SOURCE PATHS ' 
      IF (IPR .GT. 0) WRITE(IPR,                                        
     +              '(//A)')' SINGLE SCATTERING POINT TO SOURCE PATHS ' 
C                                                                       
C     SAVE OPTICAL PATH PARAMETERS AND AMOUNTS                          
      JTRNSV=JTURN                                                      
      IKMAX1=IKMAX+1                                                    
      H1SAV=H1                                                          
      H2SAV=H2                                                          
      ANGSAV=ANGLE                                                      
      RNGSAV=RANGE                                                      
      BETASV=BETA                                                       
      BETA=0.                                                           
      LENNSV=LENN                                                       
      ITYPSV=ITYPE                                                      
      DO 10 J=1,ML                                                      
          ZPSAV(J)=ZP(J)                                                
          RHSAV(J)=RELHUM(J)                                            
   10 CONTINUE                                                          
      DO 40 J=1,IKMAX1                                                  
          MSOFFJ=MSOFF+J                                                
          TBSAV(J)=TBBY(MSOFFJ)                                         
          PSAV(J)=PATM(MSOFFJ)                                          
          LJSAV(J)=LJ(J)                                                
          IF(LJSAV(J).GT.ML)LJSAV(J)=ML                                 
          DO 20 K=1,KMAX                                                
              WPSAV(J,K)=WPATH(MSOFFJ,K)                                
   20     CONTINUE                                                      
          DO 30 K=1,NSPECX                                              
              WPSAVX(J,K)=WPATHX(MSOFFJ,K)                              
   30     CONTINUE                                                      
   40 CONTINUE                                                          
      DO 50 K=1,KMAX                                                    
          WSAV(K)=W(K)                                                  
          WPSUM(K)=0.                                                   
   50 CONTINUE                                                          
C                                                                       
C     ESTABLISH PSIO AND DELO                                           
      IARBO=0                                                           
      IF(ANGLE.LT..01 .OR. ANGLE.GT.179.99)IARBO=1                      
      IARB=IARBO                                                        
      BETAST=0.                                                         
      CALL PSIECA(THETAO,PHIO,THETAS,PHIS,PSIPOS,DELO)                  
      PSIO=PSIPOS-PSIPO                                                 
      IF(PSIO.GT.180.)PSIO=PSIO-360.                                    
      IF(PSIO.LT.-180.)PSIO=PSIO+360.                                   
      PSIST=PSIO                                                        
      ANGL0=DELO                                                        
C                                                                       
C     LOOP OVER THE POINT TO SUN PATHS TO OBTAIN AMOUNTS                
Calley      WRITE(IPR,'(/(2A))')' SCT    SCATTER  SUBTENDED',           
      IF (IPR .GT. 0) WRITE(IPR,'(/(2A))')' SCT    SCATTER  SUBTENDED', 
     1  '      SOLAR       PATH   RELATIVE    SCATTER  MOLECULAR',      
     2                    ' PNT   ALTITUDE      ANGLE',                 
     3  '     ZENITH     ZENITH    AZIMUTH      ANGLE  PHASE FNC'       
      LM1=0                                                             
      DO 190 L=1,IKMAX1                                                 
          IF(LENNSV.EQ.0 .AND. JTRNSV.EQ.0)THEN                         
C                                                                       
C             SHORT PATH, UP                                            
              IF(L.GE.2)BETAST=BETAST+ADBETA(LM1)                       
              H1=ZPSAV(L)                                               
              RELH=RHSAV(L)                                             
              THTST=ATHETA(L)                                           
          ELSE                                                          
C                                                                       
C             LONG PATH, OR SHORT PATH DOWN                             
              IF(L.GE.2)BETAST=BETAST+ADBETA(LJSAV(LM1))                
              LJ0=LJSAV(L)                                              
              IF(L.LT.JTRNSV)LJ0=LJ0+1                                  
              THTST=ATHETA(LJ0)                                         
              IF(L.LE.JTRNSV)THTST=180.-THTST                           
              H1=ZPSAV(LJ0)                                             
              RELH=RHSAV(LJ0)                                           
          ENDIF                                                         
          AH1(L)=H1                                                     
          ARH(L)=RELH                                                   
          IF(L.GE.2)THEN                                                
              PSIST=PSI(PSIO,DELO,BETAST,IARB,IARBO)                    
              ANGL0=DEL(PSIO,DELO,BETAST,IARBO)                         
          ENDIF                                                         
          ANGERR=0.                                                     
          ANGMX=ANGL0                                                   
          BENDNG=0.                                                     
          ANGLE=ANGL0                                                   
C                                                                       
C         RANGE=UNKNOWN                                                 
          ITYPE=3                                                       
          DO 80 JITER=1,12                                              
              MESSAG=' '                                                
C                                                                       
C             SET H2 TO ZERO TO INSURE THAT ANGLE                       
C             IS USED TO DEFINE SOLAR PATH.                             
              H2=0.                                                     
              LENN=0                                                    
              IF(ANGLE.GT.90.)THEN                                      
                  IF(ANGLE.LE.90.0001)THEN                              
C                                                                       
C                     MULTIPLE SCATTERING CORRECTION FOR                
C                     SCATTERING POINT TO SUN PATHS.                    
                      ANGLE=90.                                         
                  ELSE                                                  
                      LENN=1                                            
                      MESSAG(1:23)='THIS SOLAR PATH PASSES '            
                      MESSAG(24:48)='THROUGH A TANGENT HEIGHT.'         
                  ENDIF                                                 
              ENDIF                                                     
              IF(H1.GE.ZMAX .AND. LENN.EQ.0)THEN                        
C                                                                       
C                 SCATTERING POINT IS AT OR ABOVE ZMAX                  
C                 AND LENN=0;  SET W(K)=0.0 AND CONTINUE.               
                  DO 60 K=1,KMAX                                        
                      W(K)=0.                                           
   60             CONTINUE                                              
                  DO 70 K=1,NSPECX                                      
                      WX(K)=0.                                          
   70             CONTINUE                                              
                  GOTO90                                                
              ENDIF                                                     
              ANGSV=ANGLE                                               
              CALL GEO(IERROR,BENDNG,MSOFFX,ICH1)                       
              ANGLE=ANGSV                                               
C                                                                       
C             IERROR=-5 IF SCATTERING POINT IS SHADED; SET W(36)=-5.    
              IF(IERROR.EQ.-5)THEN                                      
                  MESSAG='THIS SCATTERING POINT IS IN THE SHADE.'       
                  W(36)=-5.                                             
                  IERROR=0                                              
                  GOTO90                                                
              ENDIF                                                     
C                                                                       
C             SOLAR ZENITH ERROR                                        
              ANGERR=ANGLE+BENDNG-ANGL0                                 
              IF(ABS(ANGERR).LT..001)GOTO90                             
C                                                                       
C             CALCULATE ANGLE USING THE BISECTION METHOD.  ANGL0 IS     
C             A MAXIMUM AND ANGL0 MINUS ITS BENDING IS A MINIMUM.       
              IF(JITER.EQ.1)THEN                                        
                  ANGMN=ANGL0-BENDNG                                    
                  ANGLE=ANGMN                                           
              ELSE                                                      
                  IF(ANGERR.GT.0)THEN                                   
                      ANGMX=ANGLE                                       
                  ELSE                                                  
                      ANGMN=ANGLE                                       
                  ENDIF                                                 
                  ANGLE=.5*(ANGMX+ANGMN)                                
              ENDIF                                                     
   80     CONTINUE                                                      
          MESSAG='THE SOLAR ZENITH ANGLE DID NOT CONVERGE.'             
Calley          WRITE(IPR,'(2A,F12.5,A)')                               
          IF (IPR .GT. 0) WRITE(IPR,'(2A,F12.5,A)')                     
     1      ' AFTER 12 ITERATIONS, THE SOLAR ZENITH EXITING',           
     2      ' THE ATMOSPHERE IS STILL IN ERROR BY',ANGERR,'DEG'         
   90     CONTINUE                                                      
          SANGLE=SCTANG(ANGLE,THTST,PSIST,IARB)                         
          COSANG=COS(SANGLE/DEG)                                        
C                                                                       
C         LOAD MOLECULAR PHASE FUNCTION ARRAY                           
          PHASFN(L,1)=PFMOL(COSANG)                                     
C                                                                       
C         LOAD AEROSOL PHASE FUNCTION ARRAY                             
C         HENYEY-GREENSTEIN                                             
          IF(IPH.EQ.0)THEN                                              
              PHASFN(L,2)=HENGNS(G,COSANG)                              
          ELSEIF(IPH.EQ.1)THEN                                          
C                                                                       
C             USER SUPPLIED PHASE FUNCTION                              
C             DETERMINE ALTITUDE AND ANGLE INDICES                      
              MM=4                                                      
              IF(H1.LE.30.)MM=3                                         
              IF(H1.LE.10.)MM=2                                         
              IF(H1.LE.2.)MM=1                                          
              LLM1=1                                                    
              DO 100 LL=2,NANGLS-1                                      
                  IF(ANGF(LL).GT.SANGLE)GOTO110                         
  100         LLM1=LL                                                   
              LL=NANGLS                                                 
  110         CONTINUE                                                  
              CALL INTERP(2,SANGLE,ANGF(LLM1),ANGF(LL),                 
     1          PHASFN(L,2),F(MM,LLM1),F(MM,LL))                        
          ELSE                                                          
C                                                                       
C             V DEPENDENT MIE DATA BASE, SAVE SCATTERING ANGLE INSTEAD  
              PHASFN(L,2)=SANGLE                                        
          ENDIF                                                         
C                                                                       
C         LOAD WATER DROPLET CLOUD PHASE FUNCTION INFORMATION           
          IF(ABS(ASYMWD).LT.1.)THEN                                     
C                                                                       
C             SPECTRALLY INDEPENDENT ASYMMETRY                          
C             FACTOR; STORE PHASE FUNCTION.                             
              PHASFN(L,3)=HENGNS(ASYMWD,COSANG)                         
          ELSE                                                          
C                                                                       
C             SPECTRALLY DEPENDENT ASYMMETRY                            
C             FACTOR; STORE SCATTERING COSINE.                          
              PHASFN(L,3)=COSANG                                        
          ENDIF                                                         
C                                                                       
C         LOAD ICE PARTICLE CLOUD PHASE FUNCTION INFORMATION            
          IF(ABS(ASYMIP).LT.1.)THEN                                     
C                                                                       
C             SPECTRALLY INDEPENDENT ASYMMETRY                          
C             FACTOR; STORE PHASE FUNCTION.                             
              PHASFN(L,4)=HENGNS(ASYMIP,COSANG)                         
          ELSE                                                          
C                                                                       
C             SPECTRALLY DEPENDENT ASYMMETRY                            
C             FACTOR; STORE SCATTERING ANGLE.                           
              PHASFN(L,4)=COSANG                                        
          ENDIF                                                         
C                                                                       
C         STORE SOLAR ZENITH DATA FOR MULTIPLE SCATTERING.              
          IF(MSOFF.GT.0)CALL SOLZEN(L,IKMAX1,REE,DEG,ANGLE)             
C                                                                       
C         WRITE SOLAR SCATTER PATH DATA.                                
Calley          WRITE(IPR,'(I4,6F11.5,1PE11.3,3X,A)')                   
          IF (IPR .GT. 0) WRITE(IPR,'(I4,6F11.5,1PE11.3,3X,A)')         
     1      L,H1,BETAST,ANGLE,THTST,PSIST,SANGLE,PHASFN(L,1),MESSAG     
C                                                                       
C         LOAD AMOUNTS FROM W(K) INTO WPATHS(L,K)                       
          MSOFFL=MSOFF+L                                                
          IF(MSOFF.EQ.0 .AND. L.GT.1 .AND.                              
     1      W(36).GE.0. .AND. KNTRVL.EQ.1)THEN                          
C                                                                       
C             ADD OBSERVER TO SCATTERING POINT PATH AMOUNTS TO          
C             W FOR ALL BUT THE MODTRAN BAND MODEL ABSORBERS.           
              DO 120 K=1,KMAX                                           
                  WPSUM(K)=WPSUM(K)+WPSAV(LM1,K)                        
                  WPATHS(MSOFFL,K)=W(K)+WPSUM(K)                        
  120         CONTINUE                                                  
              IF(MODTRN)THEN                                            
                  DO 130 K=1,NSPC                                       
                      KP=KPOINT(K)                                      
                      WPATHS(MSOFFL,KP)=W(KP)                           
  130             CONTINUE                                              
              ENDIF                                                     
          ELSE                                                          
              DO 140 K=1,KMAX                                           
                  WPATHS(MSOFFL,K)=W(K)                                 
  140         CONTINUE                                                  
          ENDIF                                                         
          DO 150 K=1,NSPECX                                             
              WPTHSX(MSOFFL,K)=WX(K)                                    
  150     CONTINUE                                                      
C                                                                       
C         WHEN THE MODERATE RESOLUTION OPTION IS USED, A CURTIS-GODSON  
C         AVERAGE PRESSURE, PATMS, AND TEMPERATURE, TBBYS, IS DEFINED   
C         FOR THE SCATTERING POINT TO EXTRATERRESTRIAL SOURCE "LAYER"   
          IF(MODTRN)THEN                                                
              DO 180 K=1,NSPECT                                         
                  TNUM=0.                                               
                  DENOM=0.                                              
                  IF(K.LE.NSPC)THEN                                     
                      PNUM=0.                                           
                      KP=KPOINT(K)                                      
                      DO 160 IK=1,IKMAX                                 
                          MSOFFK=MSOFFX+IK                              
                          WPTH=WPATH(MSOFFK,KP)                         
                          IF(WPTH.LE.0)GOTO160                          
                          PNUM=PNUM+PATM(MSOFFK)*WPTH                   
                          TNUM=TNUM+TBBY(MSOFFK)*WPTH                   
                          DENOM=DENOM+WPTH                              
  160                 CONTINUE                                          
                      IF(DENOM.NE.0.)THEN                               
                          PATMS(MSOFFL,K)=PNUM/DENOM                    
                          TBBYS(MSOFFL,K)=TNUM/DENOM                    
                      ENDIF                                             
                  ELSE                                                  
                      DO 170 IK=1,IKMAX                                 
                          MSOFFK=MSOFFX+IK                              
                          WPTH=WPATHX(MSOFFK,K-NSPC)                    
                          IF(WPTH.LE.0)GOTO170                          
                          TNUM=TNUM+TBBY(MSOFFK)*WPTH                   
                          DENOM=DENOM+WPTH                              
  170                 CONTINUE                                          
                      IF(DENOM.NE.0.)TBBYSX(MSOFFL,K-NSPC)=TNUM/DENOM   
                  ENDIF                                                 
  180         CONTINUE                                                  
          ENDIF                                                         
          LM1=L                                                         
  190 CONTINUE                                                          
      ANGSUN=ANGLE                                                      
C                                                                       
C     RESTORE OPTICAL PATH AMOUNTS                                      
      IKMAX=IKMAX1-1                                                    
      H1=H1SAV                                                          
      H2=H2SAV                                                          
      ANGLE=ANGSAV                                                      
      RANGE=RNGSAV                                                      
      BETA=BETASV                                                       
      LENN=LENNSV                                                       
      ITYPE=ITYPSV                                                      
      NPR=NOPRNT                                                        
      DO 220 J=1,IKMAX1                                                 
          MSOFFJ=MSOFF+J                                                
          TBBY(MSOFFJ)=TBSAV(J)                                         
          PATM(MSOFFJ)=PSAV(J)                                          
          LJ(J)=LJSAV(J)                                                
          DO 200 K=1,KMAX                                               
              WPATH(MSOFFJ,K)=WPSAV(J,K)                                
  200     CONTINUE                                                      
          DO 210 K=1,NSPECX                                             
              WPATHX(MSOFFJ,K)=WPSAVX(J,K)                              
  210     CONTINUE                                                      
  220 CONTINUE                                                          
      DO 230 K=1,KMAX                                                   
          W(K)=WSAV(K)                                                  
  230 CONTINUE                                                          
C                                                                       
C     RETURN TO DRIVER                                                  
      RETURN                                                            
      END                                                               
      SUBROUTINE SSRAD(IPH,IK,MSOFF,IPATH,                              
     1  V,S0,TMOL,TSNOBS,TSNREF,SUMSSS)                                 
C                                                                       
C     SSRAD PERFORMS THE SINGLE SCATTERING SOLAR/LUNAR                  
C     RADIANCE LAYER SUM AND STORES TRANSMITTED SOLAR/LUNAR             
C     IRRADIANCES FOR MULTIPLE SCATTERING CALCULATIONS.                 
C                                                                       
C     DECLARE INPUTS                                                    
C       IPH     SCATTERING PHASE FUNCTION SWITCH                        
C               =2 FOR LOWTRAN MIE FUNCTIONS                            
C       IK      LAYER INDEX                                             
C       MSOFF   LAYER INDEX OFFSET (>0 FOR MULTIPLE SCATTERING PATH)    
C       IPATH   PATH TYPE SWITCH                                        
C               =1 FOR DIRECT SUN TO OBSERVER PATH ONLY                 
C               =2 FOR SUN TO SCATTERING POINT (MSOFF>0)                
C                  FOR SUN TO SCATTERING POINT TO OBSERVER (MSOFF=0)    
C               =3 FOR OBSERVER TO SCATTERING POINT LINE-OF-SIGHT PATH  
C       V       SPECTRAL FREQUENCY [CM-1]                               
C       S0      EXTRA-TERRESTRIAL SOURCE FUNCTION [W/(CM2-MICRON)]      
C       TMOL    SCATTERING POINT TO SUN (MOON) MOLECULAR TRANSMITTANCE. 
C               [THE TOTAL TRANSMITTANCE IS TMOL*EXP(-TX(14))]          
      INTEGER IPH,IK,MSOFF,IPATH                                        
      REAL V,S0,TMOL                                                    
C                                                                       
C     DECLARE OUTPUTS                                                   
C       TSNOBS   SOLAR/LUNAR IRRADIANCE AT THE OBSERVER                 
C       TSNREF   SOLAR/LUNAR IRRADIANCE ALONG L-SHAPED PATH             
C       SUMSSS   SOLAR/LUNAR SINGLE SCATTERING RADIANCE SUM             
      REAL TSNOBS,TSNREF,SUMSSS                                         
      INCLUDE 'PARAM.LST'                                               
C                                                                       
C     LIST COMMONS                                                      
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH                               
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                           
      INTEGER KPOINT                                                    
      REAL WAVLEN,EXTC,ABSC,ASYM,AWCCON,TX,W,RELHUM,PATM,TBBY,WPATH     
      COMMON/BASE/WAVLEN(MXWVLN),EXTC(NAER,MXWVLN),ABSC(NAER,MXWVLN),   
     1  ASYM(NAER,MXWVLN),AWCCON(NAER),KPOINT(NSPC),TX(KMAX),W(KMAX),   
     2  RELHUM(LAYDIM),PATM(LAYTHR),TBBY(LAYTHR),WPATH(LAYTHR,KMAX)     
      INTEGER JTURN,LJ                                                  
      REAL ATHETA,ADBETA,PHASFN,AH1,ARH,ANGSUN,TBBYS,PATMS,WPATHS       
      COMMON/SOLS/JTURN,LJ(LAYTWO+1),ATHETA(LAYDIM+1),                  
     1  ADBETA(LAYDIM+1),PHASFN(LAYTWO,4),AH1(LAYTWO),ARH(LAYTWO),      
     2  ANGSUN,TBBYS(LAYTHR,12),PATMS(LAYTHR,12),WPATHS(LAYTHR,KMAX)    
      INTEGER NCRALT,NCRSPC                                             
      REAL CTHIK,CALT,CEXT,CWAVLN,CCOLWD,CCOLIP,CHUMID,ASYMWD,ASYMIP    
      COMMON/CARD2A/CTHIK,CALT,CEXT,NCRALT,NCRSPC,                      
     1  CWAVLN,CCOLWD,CCOLIP,CHUMID,ASYMWD,ASYMIP                       
      REAL EXTV,ABSV,ASYV                                               
      COMMON/AER/EXTV(NAER),ABSV(NAER),ASYV(NAER)                       
C                                                                       
C     COMMON /MSRD/                                                     
C       CSZEN0  LAYER BOUNDARY COSINE OF SOLAR/LUNAR ZENITH.            
C       CSZEN   LAYER AVERAGE COSINE OF SOLAR/LUNAR ZENITH.             
C       CSZENX  AVERAGE SOLAR/LUNAR COSINE ZENITH EXITING               
C               (AWAY FROM EARTH) THE CURRENT LAYER.                    
C       BBGRND  THERMAL EMISSION (FLUX) AT THE GROUND [W CM-2 / CM-1].  
C       BBNDRY  LAYER BOUNDARY THERMAL EMISSION (FLUX) [W CM-2 / CM-1]. 
C       COSBAR  LAYER HENYEY-GREENSTEIN ASYMMETRY FACTOR.               
C       TSCAT   LAYER SCATTERING OPTICAL DEPTH.                         
C       TCONT   LAYER CONTINUUM OPTICAL DEPTH.                          
C       TAUT    LAYER TOTAL OPTICAL DEPTH.                              
C       DEPRAT  FRACTIONAL DECREASE IN WEAK-LINE OPTICAL DEPTH TO SUN.  
C       S0DEP   OPTICAL DEPTH FROM LAYER BOUNDARY TO SUN.               
C       S0TRN   TRANSMITTED SOLAR IRRADIANCES [W CM-2 / CM-1]           
C       UPF     LAYER BOUNDARY UPWARD THERMAL FLUX [W CM-2 / CM-1].     
C       DNF     LAYER BOUNDARY DOWNWARD THERMAL FLUX [W CM-2 / CM-1].   
C       UPFS    LAYER BOUNDARY UPWARD SOLAR FLUX [W CM-2 / CM-1].       
C       DNFS    LAYER BOUNDARY DOWNWARD SOLAR FLUX [W CM-2 / CM-1].     
      REAL CSZEN0,CSZEN,CSZENX,BBGRND,BBNDRY,COSBAR,TSCAT,              
     1  TCONT,TAUT,DEPRAT,S0DEP,S0TRN,UPF,DNF,UPFS,DNFS                 
      COMMON/MSRD/CSZEN0(LAYDIM),CSZEN(LAYDIM),CSZENX(LAYDIM),          
     1  BBGRND,BBNDRY(LAYDIM),COSBAR(LAYDIM),TSCAT(LAYDIM),             
     2  TCONT(LAYDIM),TAUT(NKSUB,LAYDIM),DEPRAT(LAYDIM),                
     3  S0DEP(NKSUB,LAYDIM),S0TRN(NKSUB,LAYDIM),UPF(NKSUB,LAYDIM),      
     4  DNF(NKSUB,LAYDIM),UPFS(NKSUB,LAYDIM),DNFS(NKSUB,LAYDIM)         
C                                                                       
C       PI       THE CONSTANT PI                                        
C       DEG      NUMBER OF DEGREES IN ONE RADIAN.                       
C       BIGNUM   MAXIMUM SINGLE PRECISION NUMBER.                       
C       BIGEXP   MAXIMUM EXPONENTIAL ARGUMENT WITHOUT OVERFLOW.         
      REAL PI,DEG,BIGNUM,BIGEXP                                         
      COMMON/CNSTNS/PI,DEG,BIGNUM,BIGEXP                                
C                                                                       
C     DECLARE FUNCTIONS                                                 
      REAL PHASEF,HENGNS                                                
C                                                                       
C     DECLARE LOCAL VARIABLES                                           
      INTEGER IKP1                                                      
      LOGICAL LWARN                                                     
      REAL PMOLB,PAERB,PCLDB,PCIRB,PMOLF,PAERF,PCLDF,PCIRF,DELDEP,STRANL
C                                                                       
C     SAVE PHASE FUNCTION VARIABLES AND WARNING LOGICAL VARIABLE.       
      SAVE PMOLB,PAERB,PCLDB,PCIRB,PMOLF,PAERF,PCLDF,PCIRF,LWARN        
C                                                                       
C     LIST DATA                                                         
      DATA LWARN/.TRUE./                                                
C                                                                       
C     BRANCH TO PATH TYPE                                               
      GOTO(10,20,30),IPATH                                              
C                                                                       
C     IPATH=1 (DIRECT SUN TO OBSERVER PATH).                            
   10 CONTINUE                                                          
C                                                                       
C     STORE THE TRANSMITTED SOLAR/LUNAR IRRADIANCE TO THE               
C     OBSERVER AND THEN RETURN IF MULTIPLE SCATTERING PATH.             
      IF(TMOL.GT.0.)THEN                                                
          S0DEP(1,1)=TX(14)-LOG(TMOL)                                   
          S0TRN(1,1)=S0*TMOL*EXP(-TX(14))                               
      ELSE                                                              
          S0DEP(1,1)=BIGNUM                                             
          S0TRN(1,1)=0.                                                 
      ENDIF                                                             
      IF(MSOFF.GT.0)RETURN                                              
      TSNOBS=S0TRN(1,1)                                                 
C                                                                       
C     INITIALIZE THE SOLAR/LUNAR SINGLE SCATTERING RADIANCE LAYER SUM.  
C     STORE THE SUN/MOON TO OBSERVER OPTICAL DEPTH.                     
      SUMSSS=0.                                                         
C                                                                       
C     STORE THE RAYLEIGH (PMOLB), THE AEROSOL (PAERB),                  
C     THE CLOUD WATER DROPLET (PCLDB) AND THE CLOUD ICE                 
C     PARTICLE (PCIRB) PHASE FUNCTIONS AT THE OBSERVER.                 
      PMOLB=PHASFN(1,1)                                                 
      PAERB=PHASFN(1,2)                                                 
      PCLDB=PHASFN(1,3)                                                 
      PCIRB=PHASFN(1,4)                                                 
      IF(IPH.EQ.2)PAERB=PHASEF(V,AH1(1),PHASFN(1,2),ARH(1))             
      IF(ABS(ASYMWD).GE.1.)PCLDB=HENGNS(ASYV(6),PHASFN(1,3))            
      IF(ABS(ASYMIP).GE.1.)PCIRB=HENGNS(ASYV(7),PHASFN(1,4))            
      RETURN                                                            
C                                                                       
C     IPATH=2 (SUN TO SCATTERING POINT TO OBSERVER PATH).               
   20 CONTINUE                                                          
C                                                                       
C     STORE THE IPATH=2 TRANSMITTED SOLAR/LUNAR IRRADIANCE              
C     RETURN IF MULTIPLE SCATTERING PATH.  CALCULATE THE                
C     CHANGE IN AND STORE THE CURRENT IPATH=2 OPTICAL DEPTH.            
      IKP1=IK+1                                                         
      IF(TMOL.GT.0.)THEN                                                
          S0DEP(1,IKP1)=TX(14)-LOG(TMOL)                                
          S0TRN(1,IKP1)=S0*TMOL*EXP(-TX(14))                            
      ELSE                                                              
C                                                                       
C         DIVIDE BIGNUM BY BOUNDARY NUMBER SO THAT DEPTH                
C         TO THE SUN DECREASES WITH ALTITUDE IN MULTIPLE                
C         SCATTERING FLUX ADDING ROUTINES BMFLUX AND FLXADD.            
          S0DEP(1,IKP1)=BIGNUM/IKP1                                     
          S0TRN(1,IKP1)=0.                                              
      ENDIF                                                             
      IF(MSOFF.GT.0)THEN                                                
C                                                                       
C         STORE FRACTIONAL DECREASE IN OPTICAL DEPTH ACROSS THE LAYER.  
          DEPRAT(IK)=0.                                                 
          IF(S0DEP(1,IK).LT.S0DEP(1,IKP1))THEN                          
              IF(LWARN)THEN                                             
Calley             WRITE(IPR,'(/2A,2(/10X,2A,I3,A,1PE10.3),/(10X,2A))') 
                  IF (IPR .GT. 0) WRITE(IPR,                            
     +                       '(/2A,2(/10X,2A,I3,A,1PE10.3),/(10X,2A))') 
     1              ' WARNING:  WEAK-LINE OPTICAL DEPTH TO',            
     2              ' THE SUN IS INCREASING WITH ALTITUDE.',            
     3              ' THE DEPTH TO THE SUN FROM THE BOTTOM',            
     4              ' OF LAYER',IK,' IS ',S0DEP(1,IK),                  
     5              ' THE DEPTH TO THE SUN FROM THE TOP   ',            
     6              ' OF LAYER',IK,' WAS',S0DEP(1,IKP1),                
     7              ' THIS ANOMALY CAN OCCUR BECAUSE OF',               
     8              ' CURVED-EARTH EFFECTS OR BECAUSE',                 
     9              ' OF THE CURTIS-GODSON APPROXIMATION. ',            
     &              ' THE DEPTH FROM LAYER TOP',                        
     &              ' WAS DECREASED TO MATCH THE',                      
     1              ' DEPTH FROM LAYER BOTTOM.',                        
     2              ' ***  THIS WARNING WILL NOT BE REPEATED  ***'      
                  LWARN=.FALSE.                                         
              ENDIF                                                     
              S0DEP(1,IKP1)=S0DEP(1,IK)                                 
              S0TRN(1,IKP1)=S0TRN(1,IK)                                 
          ELSEIF(S0DEP(1,IK).GT.0.)THEN                                 
              DEPRAT(IK)=1.-S0DEP(1,IKP1)/S0DEP(1,IK)                   
          ENDIF                                                         
          RETURN                                                        
      ENDIF                                                             
      TSNREF=S0TRN(1,IKP1)                                              
C                                                                       
C     STORE THE RAYLEIGH (PMOL), AEROSOL (PAER), CLOUD WATER DROPLET    
C     (PCLD), AND CLOUD ICE PARTICLE (PCIR) PHASE FUNCTIONS AT THE      
C     CURRENT (FRONT-SIDE) AND PREVIOUS (BACK-SIDE) SCATTERING POINT.   
      PMOLF=PMOLB                                                       
      PAERF=PAERB                                                       
      PCLDF=PCLDB                                                       
      PCIRF=PCIRB                                                       
      PMOLB=PHASFN(IKP1,1)                                              
      PAERB=PHASFN(IKP1,2)                                              
      PCLDB=PHASFN(IKP1,3)                                              
      PCIRB=PHASFN(IKP1,4)                                              
      IF(IPH.EQ.2)PAERB=PHASEF(V,AH1(IKP1),PHASFN(IKP1,2),ARH(IKP1))    
      IF(ABS(ASYMWD).GE.1.)PCLDB=HENGNS(ASYV(6),PHASFN(IKP1,3))         
      IF(ABS(ASYMIP).GE.1.)PCIRB=HENGNS(ASYV(7),PHASFN(IKP1,4))         
      RETURN                                                            
C                                                                       
C     IPATH=3 (OBSERVER TO SCATTERING POINT).                           
   30 CONTINUE                                                          
C                                                                       
C     NO PREPARATION REQUIRED FOR MULTIPLE SCATTERING PATH.             
      IF(MSOFF.GT.0)RETURN                                              
C                                                                       
C                           1                                           
C                           /                                  Z        
C     STRANL = S0TRN(1,IK)  |  [ S0TRN(1,IKP1) / S0TRN(1,IK) ]    DZ    
C                           /                                           
C                           0                                           
      IKP1=IK+1                                                         
      DELDEP=S0DEP(1,IK)-S0DEP(1,IKP1)                                  
      IF(ABS(DELDEP).LT..001)THEN                                       
          STRANL=.5*(S0TRN(1,IKP1)+S0TRN(1,IK))                         
      ELSE                                                              
          STRANL=(S0TRN(1,IKP1)-S0TRN(1,IK))/DELDEP                     
      ENDIF                                                             
C                                                                       
C     SUM THE SOLAR/LUNAR SINGLE SCATTER RADIANCE CONTRIBUTIONS.        
      SUMSSS=SUMSSS+STRANL*.5*(TX(2)*(PAERB+PAERF)+TX(66)*(PCLDB+PCLDF) 
     1                       +TX(67)*(PCIRB+PCIRF)+TX(15)*(PMOLB+PMOLF))
      RETURN                                                            
      END                                                               
      SUBROUTINE STDMDL(ICH1)                                           
C                                                                       
C     THIS SUBROUTINE LOADS ONE OF THE 6 STANDARD ATMOSPHERIC           
C     PROFILES INTO COMMON /MODEL/ AND CALCULATES THE DENSITIES         
C     OF THE VARIOUS ABSORBING GASES AND AEROSOLS.                      
C                                                                       
C     DECLARE INPUTS.                                                   
      INTEGER ICH1                                                      
C                                                                       
C     INCLUDE PARAMETERS                                                
      INCLUDE 'PARAM.LST'                                               
C                                                                       
C     LIST COMMONS.                                                     
      CHARACTER*8 CNAMEX                                                
      COMMON/NAMEX/CNAMEX(MMOLX)                                        
      REAL WMOLXT                                                       
      COMMON/MDATAX/WMOLXT(MMOLX,LAYDIM)                                
      REAL DNSTYX                                                       
      COMMON/MODELX/DNSTYX(MMOLX,LAYDIM)                                
      INTEGER KPOINT                                                    
      REAL WAVLEN,EXTC,ABSC,ASYM,AWCCON,TX,W,RELHUM,PATM,TBBY,WPATH     
      COMMON/BASE/WAVLEN(MXWVLN),EXTC(NAER,MXWVLN),ABSC(NAER,MXWVLN),   
     1  ASYM(NAER,MXWVLN),AWCCON(NAER),KPOINT(NSPC),TX(KMAX),W(KMAX),   
     2  RELHUM(LAYDIM),PATM(LAYTHR),TBBY(LAYTHR),WPATH(LAYTHR,KMAX)     
      REAL ZM,PM,TM,RFNDX,DENSTY                                        
      COMMON/MODEL/ZM(LAYDIM),PM(LAYDIM),TM(LAYDIM),                    
     1  RFNDX(LAYDIM),DENSTY(KMAX,LAYDIM)                               
C                                                                       
C     FILE UNIT NUMBERS                                                 
C       IRD      MODTRAN INPUT FILE, tape5, UNIT NUMBER (1).            
C       IPR      MODTRAN STANDARD OUTPUT FILE, tape6, UNIT NUMBER (2).  
C       IPU      MODTRAN SPECTRAL DATA FILE, tape7, UNIT NUMBER (7).    
C       NPR      PRINTOUT LEVEL SWITCH (1=small,0=normal,-1=large).     
C       IPR1     MODTRAN FLUX OUTPUT FILE, tape8, UNIT NUMBER (8).      
C       ISCRCH   MULTIPLE SCATTERING SCRATCH FILE UNIT NUMBER (10).     
C       ITB      MOLECULAR BAND MODEL PARAMETER FILE UNIT NUMBER (9).   
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                           
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH,ITB                       
      INTEGER MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT                     
      REAL TBOUND,SALB                                                  
      LOGICAL MODTRN                                                    
      COMMON/CARD1/MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,               
     1  TBOUND,SALB,MODTRN                                              
      INTEGER IV1,IV2,IDV,IFWHM                                         
      COMMON/CARD4/IV1,IV2,IDV,IFWHM                                    
      REAL P,T,WH,WCO2,WO,WN2O,WCO,WCH4,WO2                             
      COMMON/MDATA/P(LAYDIM),T(LAYDIM),WH(LAYDIM),WCO2(LAYDIM),         
     1  WO(LAYDIM),WN2O(LAYDIM),WCO(LAYDIM),WCH4(LAYDIM),WO2(LAYDIM)    
      REAL WNO,WSO2,WNO2,WNH3,WAIR,WHNO3                                
      COMMON/MDATA1/WNO(LAYDIM),WSO2(LAYDIM),WNO2(LAYDIM),              
     1  WNH3(LAYDIM),WAIR(LAYDIM),WHNO3(LAYDIM)                         
      INTEGER IKMAX,ML,ISSGEO,IMULT                                     
      COMMON/CNTRL/IKMAX,ML,ISSGEO,IMULT                                
      REAL EXTV,ABSV,ASYV                                               
      COMMON/AER/EXTV(NAER),ABSV(NAER),ASYV(NAER)                       
      INTEGER LENN                                                      
      REAL H1,H2,ANGLE,RANGE,BETA,REE                                   
      COMMON/CARD3/H1,H2,ANGLE,RANGE,BETA,REE,LENN                      
      REAL RE,ZMAX                                                      
      INTEGER IPATH                                                     
      COMMON/PARMTR/RE,ZMAX,IPATH                                       
C                                                                       
C     DECLARE LOCAL VARIABLES                                           
      INTEGER I,IX,K,KX                                                 
      REAL CONJOE,RHZERO,PP,TT,PSS,TSS,F1,WTEMP,RHOAIR,RHOH2O,          
     1  RHOFRN,RELH,RHLOG,DT,WO2D,STORE,CONO2,CONH2O,CONO3,CONCO2,      
     2  CONCO,CONCH4,CONN2O,CONNH3,CONNO,CONNO2,CONSO2,PPW,AVW          
C                                                                       
C     DECLARE DATA.                                                     
      INTEGER MNAER                                                     
      REAL V550NM,PZERO,TZERO,XLOSCH,RV,CON,A0,A1,A2,B1,B2,C0,C1        
C                                                                       
C     CONSTANTS FOR RETRIEVING 550 NM CLOUD EXTINCTION COEFFICIENTS.    
C       MNAER    MINIMUM AEROSOL INDEX USED IN CALL TO AEREXT.          
C       V550NM   FREQUENCY EQUIVALENT OF 550 NM [CM-1].                 
      DATA MNAER/6/,V550NM/18181.818/                                   
C     XLOSCH = LOSCHMIDT'S NUMBER,MOLECULES CM-2,KM-1                   
      DATA PZERO/1013.25/,TZERO/273.15/,XLOSCH/2.6868E24/               
C     RV GAS CONSTANT FOR WATER IN MB/(GM M-3 K)                        
C     CON CONVERTS WATER VAPOR FROM GM M-3 TO MOLECULES CM-2 KM-1       
      DATA RV/4.6152E-3/,CON/3.3429E21/                                 
C     CONSTANTS FOR INDEX OF REFRACTION, AFTER EDLEN, 1965              
      DATA A0/83.42/,A1/185.08/,A2/4.11/,                               
     X     B1/1.140E5/,B2/6.24E4/,C0/43.49/,C1/1.70E4/                  
C                                                                       
C     DEFINE /PARMTR/ VARIABLES.                                        
      RE=REE                                                            
      ZMAX=ZM(ML)                                                       
C                                                                       
C     CONJOE=(1/XLOSCH)*1.E5*1.E-6 WITH                                 
C        1.E5 ARISING FROM CM TO KM CONVERSION AND                      
C        1.E-6  "       "  PPMV                                         
C                                                                       
      CONJOE = 3.7194E-21                                               
C                                                                       
C     H2O CONTINUUM IS STORED AT 296 K RHZERO IS AIR DENSITY AT 296 K   
C     IN UNITS OF LOSCHMIDT'S                                           
C                                                                       
      RHZERO=(273.15/296.0)                                             
C                                                                       
C     LOAD ATMOSPHERE PROFILE INTO /MODEL/                              
        DO 25 I=1,ML                                                    
      PM(I)=P(I)                                                        
      TM(I)=T(I)                                                        
      PP=PM(I)                                                          
      TT=TM(I)                                                          
      PSS=PP/PZERO                                                      
      TSS=TZERO/TT                                                      
      F1=(PP/PZERO)/(TT/TZERO)                                          
      WTEMP=WH(I)                                                       
C     UV OZONE                                                          
C     THE UNIT FOR O3 HAS BEEN CHANGED FROM G/M**3 TO PPMV.             
      DENSTY(8,I)= CONJOE   *WAIR(I)    *WO(I)                          
C     N2 CONTINUUM (FASCODE APPROACH)                                   
      DENSTY(4,I)=0.781*(296.*PSS/TT)**2                                
      RHOAIR = F1                                                       
      RHOH2O = CON *WTEMP/XLOSCH                                        
      RHOFRN = RHOAIR - RHOH2O                                          
      DENSTY(5,I)= XLOSCH*RHOH2O**2/RHZERO                              
C     FOREIGN BROADENED                                                 
      DENSTY(10,I)= XLOSCH*RHOH2O*RHOFRN/RHZERO                         
C     MOLECULAR SCATTERING                                              
      DENSTY(6,I) = F1                                                  
C     RELATIVE HUMIDITY WEIGHTED BY BOUNDARY LAYER AEROSOL (0 TO 2 KM)  
C                                                                       
C     LOG WEIGHTING OF REL HUMIDITY                                     
C                                                                       
      RELH = RELHUM(I)                                                  
      IF(RELHUM(I). GT.99.) RELH = 99.                                  
      RHLOG = ALOG(100. - RELH)                                         
C     DENSTY(15,I)=RELHUM(I)*DENSTY(7,I)                                
      DENSTY(15,I)=RHLOG    *DENSTY(7,I)                                
C     DENSITY (9,I) TEMP DEP OF WATER SET IN GEO                        
      DENSTY(9,I)=0.                                                    
      IF(ICH1.GT.7)DENSTY(15,I)=RHLOG*DENSTY(12,I)                      
C     HNO3 IN ATM * CM /KM                                              
C     NEW PROFILE IS IN UNIT OF PART PER 10**6 BY VOLUME                
C     DENSTY(11,I)= F1* HMIX(I)*1.0E-4                                  
                     DENSTY(11,I)=F1*WHNO3(I)*1.0E-4                    
C                                                                       
C      O2 TEMP DEP                                                      
      DT = TT  - 220.                                                   
      WO2D       = CONJOE   *WAIR(I)    *WO2(I)  * PSS                  
C                                                                       
C     DT CAN BE NEGATIVE                                                
C     EFFECTIVE DT CALCULATED IN TRANS                                  
      DENSTY(1,I)  = WO2D * TT                                          
      DENSTY(2,I)  = WO2D * DT * DT                                     
      DENSTY(63,I) = WO2D                                               
C                                                                       
C   NEW  MICROWAVE TEMP  RAIN                                           
C                                                                       
      DENSTY(61,I)= 0.                                                  
      DENSTY(62,I)= 0.                                                  
      IF(DENSTY(3,I).GT.0.)THEN                                         
           DENSTY(3,I)=DENSTY(3,I)**.63                                 
           DENSTY(61,I)= DENSTY(3,I) * T(I)                             
           DENSTY(62,I)= 1.                                             
      ENDIF                                                             
C     MODTRAN DENSITIES. I E ACTUAL DENISITIES.  IN LOWTRAN             
C     SOME DENSITIES ARE SCALED.  BUT WE NEED THE ACTUAL ONES FOR UV-VIS
C     STUFF.  THEREFORE DENSITY ARRAY'S FIRST DIMENSION WAS EXTENDED BY 
C     DENSITY(64,I) WILL HOLD NO2                                       
C     DENSITY(65,I)WILL HOLD SO2                                        
      DENSTY(64,I)=CONJOE*WAIR(I)*WNO2(I)                               
      DENSTY(65,I)=CONJOE*WAIR(I)*WSO2(I)                               
C                                                                       
C     WHEN MODERATE RESOLUTION OPTION IS USED, ACTUAL DENSITIES ARE     
C     NEEDED.  FOR ALL SPECIES, DENSITIES ARE STORED IN AMAGATS-CM/KM   
C     WHERE 1 AMAGAT = 1 ATM AT STP.  FOR WATER, THE G/CM2 VALUE,       
C     .1*WH(I), IS CONVERTED TO AMAGAT-CM BY MULTIPLYING BY             
C     RT/(MOL WT), WHICH EQUALS 1244.2 CM3-ATM/GM/K.                    
C                                                                       
      CONO2 = CONJOE   *WAIR(I)  *WO2 (I)                               
      IF(MODTRN)THEN                                                    
          DENSTY(17,I)=WH(I)*124.42                                     
          DENSTY(18,I) =0                                               
          DENSTY(19,I) =0                                               
          DENSTY(20,I) =0                                               
          DENSTY(21,I) =0                                               
          DENSTY(22,I) =0                                               
          DENSTY(23,I) =0                                               
          DENSTY(24,I) =0                                               
          DENSTY(25,I) =0                                               
          DENSTY(26,I) =0                                               
          DENSTY(27,I) =0                                               
          DENSTY(28,I) =0                                               
          DENSTY(29,I) =0                                               
          DENSTY(30,I) =0                                               
          STORE=CONJOE*WAIR(I)                                          
          DENSTY(31,I)=STORE*WO(I)                                      
          DENSTY(32,I) =0                                               
          DENSTY(33,I) =0                                               
          DENSTY(34,I) =0                                               
          DENSTY(35,I) =0                                               
          DENSTY(36,I)=STORE*WCO2(I)                                    
C         CO2  CONTINUM                                                 
C         CO2 CONTINUM NOW THROUGH BAND MODEL                           
C                                                                       
C         CO2 = DENC *WCO2(I)* 1.0E-6                                   
CC        DENSTY(37,I)=CO2 * PSS * 1.E-15 * 296./TT                     
          DENSTY(37,I) =0                                               
          DENSTY(38,I) =0                                               
          DENSTY(39,I) =0                                               
          DENSTY(40,I) =0                                               
          DENSTY(41,I) =0                                               
          DENSTY(42,I) =0                                               
          DENSTY(43,I) =0                                               
          DENSTY(44,I)=STORE*WCO(I)                                     
          DENSTY(45,I) =0                                               
          DENSTY(46,I)=STORE*WCH4(I)                                    
          DENSTY(47,I)=STORE*WN2O(I)                                    
          DENSTY(48,I) =0                                               
          DENSTY(49,I) =0                                               
          DENSTY(50,I)=STORE*WO2(I)                                     
          DENSTY(51,I)=CONO2 *PSS**0.9353*TSS**( 0.1936)                
CC        DENSTY(51,I) =0                                               
          DENSTY(52,I)=STORE*WNH3(I)                                    
          DENSTY(53,I) =0                                               
          DENSTY(54,I)=STORE*WNO(I)                                     
          DENSTY(55,I)=STORE*WNO2(I)                                    
          DENSTY(56,I)=STORE*WSO2(I)                                    
          DENSTY(57,I) =0                                               
C                                                                       
C         STUFF THE DNSTYX ARRAY WITH THE PROFILE INFO FOR THE          
C         EXTRA SPECIES. THAT IS THE ADDITIONAL SPECIES BEYOND          
C         MODTRAN'S 12 REGULAR SPECIES.                                 
          DO 400 IX = 1,NSPECX                                          
             DNSTYX(IX,I)=STORE*WMOLXT(IX,I)                            
 400      CONTINUE                                                      
C                                                                       
      ELSE                                                              
C  --- FOR H2O -----                                                    
      CONH2O=WH(I)  *.1                                                 
      DENSTY(17,I)=CONH2O*PSS**0.9810*TSS**( 0.3324)                    
      DENSTY(18,I)=CONH2O*PSS**1.1406*TSS**(-2.6343)                    
      DENSTY(19,I)=CONH2O*PSS**0.9834*TSS**(-2.5294)                    
      DENSTY(20,I)=CONH2O*PSS**1.0443*TSS**(-2.4359)                    
      DENSTY(21,I)=CONH2O*PSS**0.9681*TSS**(-1.9537)                    
      DENSTY(22,I)=CONH2O*PSS**0.9555*TSS**(-1.5378)                    
      DENSTY(23,I)=CONH2O*PSS**0.9362*TSS**(-1.6338)                    
      DENSTY(24,I)=CONH2O*PSS**0.9233*TSS**(-0.9398)                    
      DENSTY(25,I)=CONH2O*PSS**0.8658*TSS**(-0.1034)                    
      DENSTY(26,I)=CONH2O*PSS**0.8874*TSS**(-0.2576)                    
      DENSTY(27,I)=CONH2O*PSS**0.7982*TSS**( 0.0588)                    
      DENSTY(28,I)=CONH2O*PSS**0.8088*TSS**( 0.2816)                    
      DENSTY(29,I)=CONH2O*PSS**0.6642*TSS**( 0.2764)                    
      DENSTY(30,I)=CONH2O*PSS**0.6656*TSS**( 0.5061)                    
C  --- FOR O3                                                           
      CONO3 = CONJOE   *WAIR(I)    *WO(I)                               
      DENSTY(31,I)=CONO3 *PSS**0.4200*TSS**( 1.3909)                    
      DENSTY(32,I)=CONO3 *PSS**0.4221*TSS**( 0.7678)                    
      DENSTY(33,I)=CONO3 *PSS**0.3739*TSS**( 0.1225)                    
      DENSTY(34,I)=CONO3 *PSS**0.1770*TSS**( 0.9827)                    
      DENSTY(35,I)=CONO3 *PSS**0.3921*TSS**( 0.1942)                    
C  --- FOR CO2                                                          
      CONCO2= CONJOE   *WAIR(I)  *WCO2(I)                               
      DENSTY(36,I)=CONCO2*PSS**0.6705*TSS**(-2.2560)                    
      DENSTY(37,I)=CONCO2*PSS**0.7038*TSS**(-5.0768)                    
      DENSTY(38,I)=CONCO2*PSS**0.7258*TSS**(-1.6740)                    
      DENSTY(39,I)=CONCO2*PSS**0.6982*TSS**(-1.8107)                    
      DENSTY(40,I)=CONCO2*PSS**0.8867*TSS**(-0.5327)                    
      DENSTY(41,I)=CONCO2*PSS**0.7883*TSS**(-1.3244)                    
      DENSTY(42,I)=CONCO2*PSS**0.6899*TSS**(-0.8152)                    
      DENSTY(43,I)=CONCO2*PSS**0.6035*TSS**( 0.6026)                    
C  --- FOR CO                                                           
      CONCO = CONJOE   *WAIR(I)  *WCO (I)                               
      DENSTY(44,I)=CONCO *PSS**0.7589*TSS**( 0.6911)                    
      DENSTY(45,I)=CONCO *PSS**0.9267*TSS**( 0.1716)                    
C  --- FOR CH4                                                          
      CONCH4= CONJOE   *WAIR(I)  *WCH4(I)                               
      DENSTY(46,I)=CONCH4*PSS**0.7139*TSS**(-0.4185)                    
C  --- FOR N2O                                                          
      CONN2O= CONJOE   *WAIR(I)  *WN2O(I)                               
      DENSTY(47,I)=CONN2O*PSS**0.3783*TSS**( 0.9399)                    
      DENSTY(48,I)=CONN2O*PSS**0.7203*TSS**(-0.1836)                    
      DENSTY(49,I)=CONN2O*PSS**0.7764*TSS**( 1.1931)                    
C  --- FOR O2                                                           
      CONO2 = CONJOE   *WAIR(I)  *WO2 (I)                               
      DENSTY(50,I)=CONO2 *PSS**1.1879*TSS**( 2.9738)                    
      DENSTY(51,I)=CONO2 *PSS**0.9353*TSS**( 0.1936)                    
C  --- FOR NH3                                                          
      CONNH3= CONJOE   *WAIR(I)  *WNH3(I)                               
      DENSTY(52,I)=CONNH3*PSS**0.8023*TSS**(-0.9111)                    
      DENSTY(53,I)=CONNH3*PSS**0.6968*TSS**( 0.3377)                    
C  --- FOR NO                                                           
      CONNO = CONJOE   *WAIR(I)  *WNO (I)                               
      DENSTY(54,I)=CONNO *PSS**0.5265*TSS**(-0.4702)                    
C  --- FOR NO2                                                          
      CONNO2= CONJOE   *WAIR(I)  *WNO2(I)                               
      DENSTY(55,I)=CONNO2*PSS**0.3956*TSS**(-0.0545)                    
C  --- FOR SO2                                                          
      CONSO2= CONJOE   *WAIR(I)  *WSO2(I)                               
      DENSTY(56,I)=CONSO2*PSS**0.2943*TSS**( 1.2316)                    
      DENSTY(57,I)=CONSO2*PSS**0.2135*TSS**( 0.0733)                    
C                                                                       
C     STUFF THE DNSTYX ARRAY WITH THE PROFILE INFO FOR THE              
C     EXTRA SPECIES. THAT IS, THE ADDITIONAL SPECIES BEYOND             
C     MODTRAN'S 12 REGULAR SPECIES.                                     
C     DNSTYX ARRAY IS STUFFED THE SAME WAY IN LOWTRAN AS IN MODTRAN.    
      DO 450 IX = 1, NSPECX                                             
         DNSTYX(IX,I)=CONJOE*WAIR(I)*WMOLXT(IX,I)                       
 450  CONTINUE                                                          
      ENDIF                                                             
C***********************************************************************
C   HERZBERG CONTINUUM PRESSURE DEPENDENCE CALCULATION, SHARDANAND 1977 
C      AND   YOSHINO ET AL 1988                                         
C                                                                       
C     OXYGEN                                                            
C                                                                       
C      ********       ERRATA JULY 25                                    
C     DENSTY(58,I)=(1.+.73*F1)*CONO2                                    
      DENSTY(58,I)=(1.+.83*F1)*CONO2                                    
C       ********      END  ERRATA                                       
      DENSTY(59,I) = 0.                                                 
      DENSTY(60,I) = 0.                                                 
C     THESE (DENSTY(55,I) FOR N2O AND DENSTY(56,I) FOR SO2 ARE          
C     MODTRAN DENSITIES. I E ACTUAL DENISITIES.  IN LOWTRAN             
C     SOME DENSITIES ARE SCALED.  BUT WE NEED THE ACTUAL ONES FOR UV-VIS
C     STUFF.  THEREFORE DENSITY ARRAY'S FIRST DIMENSION WAS EXTENDED BY 
C     DENSITY(64,I) WILL HOLD NO2                                       
C     DENSITY(65,I)WILL HOLD SO2                                        
      DENSTY(64,I)=CONJOE*WAIR(I)*WNO2(I)                               
      DENSTY(65,I)=CONJOE*WAIR(I)*WSO2(I)                               
C                                                                       
C     RFNDX = REFRACTIVITY 1-INDEX OF REFRACTION FROM EDLEN, 1966       
      PPW=RV*WTEMP*TT                                                   
      AVW=.5*(IV1+IV2)                                                  
      RFNDX(I)=((A0+A1/(1.-(AVW/B1)**2) +A2/(1.0-(AVW/B2)**2))*         
     X (PP/PZERO)*(TZERO+15.0)/TT-(C0-(AVW/C1)**2)*PPW/PZERO)*1.E-6     
25    CONTINUE                                                          
      IF(NPR.EQ.1)RETURN                                                
Calley      WRITE(IPR,910)                                              
      IF (IPR .GT. 0) WRITE(IPR,910)                                    
  910 FORMAT('1',/'  ATMOSPHERIC PROFILES',                             
     1  //3X,'I',T10,'Z',T18,'P',T26,'T',T35,'N2',T44,'CNTMSLF',        
     2  T54,'CNTMFRN',T62,'MOL SCAT',T75,'N-1',T83,'O3 (UV)',           
     3  T93,'O2 (UV)',T103,'WAT DROP  ICE PART  RAIN RATE',             
     4  /T9,'(KM)',T17,'(MB)',T25,'(K)',T43,'(  MOL/CM2 KM  )',         
     5  T65,'(-)',T75,'(-)',T82,'(  ATM CM/KM  )',                      
     6  T104,'(GM/M3)   (GM/M3)   (MM/HR)')                             
Calley      WRITE(IPR,'(/(I4,0PF9.4,F9.3,F7.1,1X,1P7E10.3,0P3F10.3))')  
      IF (IPR .GT. 0) WRITE(IPR,                                        
     +                '(/(I4,0PF9.4,F9.3,F7.1,1X,1P7E10.3,0P3F10.3))')  
     1  (I,ZM(I),PM(I),TM(I),DENSTY(4,I),DENSTY(5,I),DENSTY(10,I),      
     2  DENSTY(6,I),RFNDX(I),DENSTY(8,I),DENSTY(58,I),                  
     3  (DENSTY(K,I),K=66,67),DENSTY(3,I)**1.5873,I=1,ML)               
C                                                                       
C     CALCULATE 550 NM CLOUD EXTINCTION COEFFICIENTS (KM-1 M3/GM).      
      CALL AEREXT(V550NM,MNAER)                                         
Calley      WRITE (IPR,915)                                             
      IF (IPR .GT. 0) WRITE (IPR,915)                                   
  915 FORMAT('1',/'  ATMOSPHERIC PROFILES',                             
     1  //3X,'I',T10,'Z',T18,'P',T26,'T',T33,'AEROSOL 1',T43,           
     2  'AEROSOL 2',T53,'AEROSOL 3',T63,'AEROSOL 4',T74,'AER1*RH',      
     3  T84,'CIRRUS',T96,'RH',T103,'WAT DROP  ICE PART',                
     4  /T9,'(KM)',T17,'(MB)',T25,'(K)',T35,'(-)',T45,'(-)',            
     5  T55,'(-)',T65,'(-)',T76,'(-)',T85,'(-)',                        
     6  T93,'(PERCNT)',T103,'(550nm VIS [KM-1])')                       
Calley      WRITE(IPR,'(/(I4,0PF9.4,F9.3,F7.1,1X,1P6E10.3,0P3F10.5))')  
      IF (IPR .GT. 0) WRITE(IPR,                                        
     +                '(/(I4,0PF9.4,F9.3,F7.1,1X,1P6E10.3,0P3F10.5))')  
     1  (I,ZM(I),PM(I),TM(I),DENSTY(7,I),(DENSTY(K,I),K=12,16),         
     2  RELHUM(I),EXTV(6)*DENSTY(66,I),EXTV(7)*DENSTY(67,I),I=1,ML)     
      IF(MODTRN)THEN                                                    
Calley     WRITE(IPR,'(1H1,/22H  ATMOSPHERIC PROFILES,//11H   I      Z, 
          IF (IPR .GT. 0) WRITE(IPR,                                    
     +               '(1H1,/22H  ATMOSPHERIC PROFILES,//11H   I      Z, 
     1      44H       P       H2O      O3       CO2      CO,            
     2      55H       CH4      N2O      O2       NH3      NO       NO2, 
     3      19H      SO2      HNO3,/23H         (KM)    (MB)  ,         
     4      55H(                                            ATM CM/KM , 
     5      53H                                                    ))') 
      ELSE                                                              
Calley     WRITE(IPR,'(A,/A,//2A,//(3A))')'1','  ATMOSPHERIC PROFILES', 
          IF (IPR .GT. 0) WRITE(IPR,                                    
     +               '(A,/A,//2A,//(3A))')'1','  ATMOSPHERIC PROFILES', 
     1      '  (IF A MOLECULE HAS MORE THAN ONE BAND, THEN',            
     2      ' THE DATA FOR THE FIRST BAND ARE SHOWN.)',                 
     3            '   I      Z       P       H2O      O3  ',            
     4      '     CO2      CO       CH4      N2O      O2  ',            
     5      '     NH3      NO       NO2      SO2      HNO3',            
     6            '         (KM)    (MB) G/CM**2/KM  (    ',            
     7      '                                    ATM CM/KM',            
     8      '                                            )'             
      ENDIF                                                             
Calley      WRITE(IPR,'((I4,0PF9.4,F9.3,1X,1P12E9.2))')(I,ZM(I),PM(I),  
      IF (IPR .GT. 0) WRITE(IPR,                                        
     +                '((I4,0PF9.4,F9.3,1X,1P12E9.2))')(I,ZM(I),PM(I),  
     1  DENSTY(17,I),DENSTY(31,I),DENSTY(36,I),DENSTY(44,I),            
     2  DENSTY(46,I),DENSTY(47,I),DENSTY(50,I),DENSTY(52,I),            
     3  DENSTY(54,I),DENSTY(55,I),DENSTY(56,I),DENSTY(11,I),I=1,ML)     
Calley      WRITE(IPR,'(1H1,/22H  ATMOSPHERIC PROFILES)')               
      IF (IPR .GT. 0) WRITE(IPR,'(1H1,/22H  ATMOSPHERIC PROFILES)')     
Calley      WRITE(IPR,'(/A,13(1X,A8:),/(14X,13(1X,A8:)))')              
      IF (IPR .GT. 0) WRITE(IPR,'(/A,13(1X,A8:),/(14X,13(1X,A8:)))')    
     1  '   I      Z   ',(CNAMEX(KX),KX=1,NSPECX)                       
Calley      WRITE(IPR,'(9X,A,50X,A,50X,A)')'(KM)   (','ATM CM/KM',')'   
      IF (IPR .GT. 0) WRITE(IPR,                                        
     +                '(9X,A,50X,A,50X,A)')'(KM)   (','ATM CM/KM',')'   
      DO 37 I = 1,ML                                                    
Calley          WRITE(IPR,'(I4,0PF9.4,1X,1P13E9.2:,/(14X,13E9.2:))')    
          IF (IPR .GT. 0) WRITE(IPR,                                    
     +                    '(I4,0PF9.4,1X,1P13E9.2:,/(14X,13E9.2:))')    
     1      I,ZM(I),(DNSTYX(IX,I),IX=1,NSPECX)                          
   37 CONTINUE                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE SUBSOL(THETAS,PHIS,TIME,IDAY)                          
C                                                                       
C     SUBROUTINE SUBSOL CALCULATES THE SUBSOLAR POINT ANGLES            
C     THETAS AND PHIS BASED UPON IDAY AND TIME. SINCE EACH              
C     YEAR IS 365.25 DAYS LONG THE EXACT VALUE OF THE DECLINATION       
C     ANGLE CHANGES FROM YEAR TO YEAR.  FOR PRECISE VALUES CONSULT      
C     ' THE AMERICAN EPHEMERIS AND NAUTICAL ALMANAC' PUBLISHED YEARLY   
C     BY THE U.S. GOVT. PRINTING OFFICE.  ALSO, THE SOLAR POSITION      
C     IS CHARACTERIZED BY 25 POINTS BELOW; THIS SHOULD PREDICT THE SUBSO
C     ANGLES WITHIN ONE DEGREE.  FOR INCREASED ACCURACY ADD MORE DATA   
C     POINTS                                                            
C                                                                       
C     THE EQUATION OF TIME, EQT, IS IN MINUTES                          
C     THE DECLINATION ANGLE, DEC IS IN DEGREES                          
C                                                                       
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                          
      DIMENSION NDAY(25),EQT(25),DEC(25)                                
      DATA NDAY /1,9,21,32,44,60,91,121,141,152,160,172,182,            
     1 190,202,213,244,274,305,309,325,335,343,355,366/                 
      DATA DEC /-23.07,-22.22,-20.08,-17.32,-13.62,-7.88,4.23,          
     1 14.83, 20.03,21.95,22.87,23.45,23.17,22.47,20.63,18.23,8.58,     
     2 -2.88,-14.18,-15.45,-19.75,-21.68,-22.75,-23.43,-23.07/          
      DATA EQT /-3.23,-6.83,-11.17,-13.57,-14.33,-12.63,-4.2,           
     1 2.83,3.57,2.45,1.10,-1.42,-3.52,-4.93,-6.25,-6.28,-0.25,         
     2 10.02,16.35,16.38,14.3,11.27,8.02,2.32,-3.23/                    
      IF(IDAY.LT.1.OR.IDAY.GT.366)  GO TO 900                           
      IF(TIME.LT.0.0.OR.TIME.GT.24.0)  GO TO 910                        
      DO 10 I=1,25                                                      
      IF(NDAY(I).EQ.IDAY) GO TO 30                                      
10    IF(NDAY(I).GT.IDAY) GO TO 20                                      
20    I=I-1                                                             
      EQTIME=EQT(I)+(EQT(I+1)-EQT(I))*(IDAY-NDAY(I))/(NDAY(I+1)-NDAY(I))
      DECANG=DEC(I)+(DEC(I+1)-DEC(I))*(IDAY-NDAY(I))/(NDAY(I+1)-NDAY(I))
      GO TO 40                                                          
30    EQTIME=EQT(I)                                                     
      DECANG=DEC(I)                                                     
40    THETAS=DECANG                                                     
      EQTIME=EQTIME/60.0                                                
      PHIS=15.0*(TIME+EQTIME)-180.0                                     
      IF(PHIS.LT.0.0) PHIS=PHIS+360.0                                   
      RETURN                                                            
Calley900   WRITE(IPR,901) IDAY                                         
900   CONTINUE                                                          
      IF (IPR .GT. 0) WRITE(IPR,901) IDAY                               
901   FORMAT(' FROM SUBSOL - IDAY OUT OF RANGE, IDAY=',I6)              
      STOP                                                              
Calley910   WRITE(IPR,902) TIME                                         
910   CONTINUE                                                          
      IF (IPR .GT. 0) WRITE(IPR,902) TIME                               
902   FORMAT(' FROM SUBSOL - TIME OUT OF RANGE, TIME=',E12.5)           
      STOP                                                              
      END                                                               
      BLOCK DATA SUNBD                                                  
C                                                                       
C     SOLAR IRRADIANCES [W CM-2 / CM-1] TABULATED EACH                  
C     WAVENUMBER FROM 0 TO 50,000 CM-1 AT 5 CM-1 SPECTRAL               
C     RESOLUTION (FWHM TRIANGULAR SLIT).  THIS DATA IS                  
C     DERIVED FROM THE 1 CM-1 TABULATION (FILE SUN2) OF                 
C     KURUCZ HIGH SPECTRAL RESOLUTION CALCULATIONS.                     
      INTEGER MAXSUN                                                    
      PARAMETER(MAXSUN=50000)                                           
      REAL SUN                                                          
      COMMON/SOLAR1/SUN(0:MAXSUN)                                       
      INTEGER I                                                         
C                                                                       
C         0 TO   100 CM-1 DATA.                                         
      DATA (SUN(I),I=     0,   100)/                           .000E+00,
     $ 3.502E-13, 1.337E-12, 2.927E-12, 5.105E-12, 7.857E-12, 1.118E-11,
     $ 1.506E-11, 1.949E-11, 2.447E-11, 3.000E-11, 3.607E-11, 4.267E-11,
     $ 4.981E-11, 5.748E-11, 6.568E-11, 7.441E-11, 8.366E-11, 9.343E-11,
     $ 1.037E-10, 1.145E-10, 1.259E-10, 1.377E-10, 1.501E-10, 1.629E-10,
     $ 1.763E-10, 1.902E-10, 2.046E-10, 2.195E-10, 2.349E-10, 2.508E-10,
     $ 2.672E-10, 2.841E-10, 3.015E-10, 3.194E-10, 3.378E-10, 3.567E-10,
     $ 3.761E-10, 3.960E-10, 4.164E-10, 4.373E-10, 4.587E-10, 4.805E-10,
     $ 5.029E-10, 5.258E-10, 5.491E-10, 5.729E-10, 5.972E-10, 6.220E-10,
     $ 6.473E-10, 6.731E-10, 6.994E-10, 7.261E-10, 7.534E-10, 7.811E-10,
     $ 8.526E-10, 8.804E-10, 9.087E-10, 9.375E-10, 9.669E-10, 9.967E-10,
     $ 1.027E-09, 1.058E-09, 1.089E-09, 1.121E-09, 1.154E-09, 1.187E-09,
     $ 1.220E-09, 1.254E-09, 1.288E-09, 1.323E-09, 1.359E-09, 1.395E-09,
     $ 1.431E-09, 1.468E-09, 1.506E-09, 1.544E-09, 1.583E-09, 1.622E-09,
     $ 1.661E-09, 1.701E-09, 1.742E-09, 1.783E-09, 1.824E-09, 1.866E-09,
     $ 1.909E-09, 1.952E-09, 1.996E-09, 2.040E-09, 2.084E-09, 2.129E-09,
     $ 2.175E-09, 2.221E-09, 2.268E-09, 2.315E-09, 2.363E-09, 2.411E-09,
     $ 2.460E-09, 2.509E-09, 2.559E-09, 2.609E-09/
C                                                                       
C       101 TO   200 CM-1 DATA.                                         
      DATA (SUN(I),I=   101,   200)/                                    
     $ 2.659E-09, 2.710E-09, 2.762E-09, 2.814E-09, 2.866E-09, 2.920E-09,
     $ 2.973E-09, 3.027E-09, 3.081E-09, 3.136E-09, 3.192E-09, 3.248E-09,
     $ 3.305E-09, 3.362E-09, 3.419E-09, 3.477E-09, 3.536E-09, 3.595E-09,
     $ 3.654E-09, 3.714E-09, 3.775E-09, 3.836E-09, 3.898E-09, 3.960E-09,
     $ 4.023E-09, 4.086E-09, 4.149E-09, 4.214E-09, 4.278E-09, 4.344E-09,
     $ 4.410E-09, 4.476E-09, 4.543E-09, 4.610E-09, 4.677E-09, 4.746E-09,
     $ 4.814E-09, 4.884E-09, 4.954E-09, 5.024E-09, 5.095E-09, 5.166E-09,
     $ 5.238E-09, 5.310E-09, 5.383E-09, 5.457E-09, 5.531E-09, 5.605E-09,
     $ 5.680E-09, 5.755E-09, 5.831E-09, 5.907E-09, 5.984E-09, 6.062E-09,
     $ 6.140E-09, 6.218E-09, 6.297E-09, 6.376E-09, 6.456E-09, 6.536E-09,
     $ 6.618E-09, 6.699E-09, 6.781E-09, 6.864E-09, 6.947E-09, 7.030E-09,
     $ 7.114E-09, 7.198E-09, 7.284E-09, 7.369E-09, 7.455E-09, 7.542E-09,
     $ 7.629E-09, 7.717E-09, 7.805E-09, 7.893E-09, 7.982E-09, 8.072E-09,
     $ 8.162E-09, 8.253E-09, 8.344E-09, 8.435E-09, 8.527E-09, 8.620E-09,
     $ 8.713E-09, 8.807E-09, 8.901E-09, 8.996E-09, 9.091E-09, 9.187E-09,
     $ 9.283E-09, 9.379E-09, 9.476E-09, 9.574E-09, 9.672E-09, 9.771E-09,
     $ 9.870E-09, 9.970E-09, 1.007E-08, 1.017E-08/
C                                                                       
C       201 TO   300 CM-1 DATA.                                         
      DATA (SUN(I),I=   201,   300)/                                    
     $ 1.027E-08, 1.037E-08, 1.048E-08, 1.058E-08, 1.068E-08, 1.079E-08,
     $ 1.090E-08, 1.100E-08, 1.111E-08, 1.121E-08, 1.132E-08, 1.143E-08,
     $ 1.153E-08, 1.164E-08, 1.175E-08, 1.186E-08, 1.197E-08, 1.208E-08,
     $ 1.219E-08, 1.230E-08, 1.242E-08, 1.253E-08, 1.264E-08, 1.275E-08,
     $ 1.287E-08, 1.298E-08, 1.310E-08, 1.321E-08, 1.333E-08, 1.344E-08,
     $ 1.356E-08, 1.368E-08, 1.380E-08, 1.392E-08, 1.404E-08, 1.416E-08,
     $ 1.427E-08, 1.439E-08, 1.452E-08, 1.464E-08, 1.476E-08, 1.488E-08,
     $ 1.500E-08, 1.513E-08, 1.525E-08, 1.537E-08, 1.550E-08, 1.563E-08,
     $ 1.575E-08, 1.588E-08, 1.601E-08, 1.613E-08, 1.626E-08, 1.639E-08,
     $ 1.652E-08, 1.664E-08, 1.677E-08, 1.690E-08, 1.704E-08, 1.717E-08,
     $ 1.730E-08, 1.744E-08, 1.757E-08, 1.770E-08, 1.784E-08, 1.797E-08,
     $ 1.810E-08, 1.824E-08, 1.837E-08, 1.851E-08, 1.865E-08, 1.878E-08,
     $ 1.892E-08, 1.906E-08, 1.920E-08, 1.934E-08, 1.948E-08, 1.962E-08,
     $ 1.976E-08, 1.990E-08, 2.004E-08, 2.019E-08, 2.033E-08, 2.047E-08,
     $ 2.062E-08, 2.076E-08, 2.091E-08, 2.106E-08, 2.120E-08, 2.135E-08,
     $ 2.149E-08, 2.164E-08, 2.179E-08, 2.193E-08, 2.208E-08, 2.223E-08,
     $ 2.238E-08, 2.253E-08, 2.268E-08, 2.283E-08/
C                                                                       
C       301 TO   400 CM-1 DATA.                                         
      DATA (SUN(I),I=   301,   400)/                                    
     $ 2.299E-08, 2.314E-08, 2.329E-08, 2.345E-08, 2.360E-08, 2.375E-08,
     $ 2.391E-08, 2.406E-08, 2.422E-08, 2.437E-08, 2.453E-08, 2.469E-08,
     $ 2.485E-08, 2.501E-08, 2.517E-08, 2.532E-08, 2.548E-08, 2.564E-08,
     $ 2.580E-08, 2.596E-08, 2.613E-08, 2.629E-08, 2.645E-08, 2.661E-08,
     $ 2.678E-08, 2.694E-08, 2.711E-08, 2.728E-08, 2.744E-08, 2.761E-08,
     $ 2.777E-08, 2.794E-08, 2.811E-08, 2.827E-08, 2.844E-08, 2.861E-08,
     $ 2.878E-08, 2.895E-08, 2.912E-08, 2.930E-08, 2.947E-08, 2.964E-08,
     $ 2.981E-08, 2.998E-08, 3.016E-08, 3.033E-08, 3.050E-08, 3.068E-08,
     $ 3.085E-08, 3.103E-08, 3.121E-08, 3.138E-08, 3.156E-08, 3.174E-08,
     $ 3.192E-08, 3.210E-08, 3.228E-08, 3.245E-08, 3.263E-08, 3.281E-08,
     $ 3.299E-08, 3.318E-08, 3.336E-08, 3.354E-08, 3.373E-08, 3.391E-08,
     $ 3.410E-08, 3.428E-08, 3.447E-08, 3.465E-08, 3.484E-08, 3.502E-08,
     $ 3.521E-08, 3.540E-08, 3.558E-08, 3.577E-08, 3.596E-08, 3.615E-08,
     $ 3.634E-08, 3.654E-08, 3.673E-08, 3.692E-08, 3.711E-08, 3.730E-08,
     $ 3.750E-08, 3.769E-08, 3.788E-08, 3.807E-08, 3.827E-08, 3.846E-08,
     $ 3.866E-08, 3.886E-08, 3.905E-08, 3.925E-08, 3.945E-08, 3.965E-08,
     $ 3.985E-08, 4.005E-08, 4.025E-08, 4.045E-08/
C                                                                       
C       401 TO   500 CM-1 DATA.                                         
      DATA (SUN(I),I=   401,   500)/                                    
     $ 4.065E-08, 4.085E-08, 4.105E-08, 4.126E-08, 4.146E-08, 4.166E-08,
     $ 4.187E-08, 4.207E-08, 4.228E-08, 4.248E-08, 4.269E-08, 4.289E-08,
     $ 4.310E-08, 4.330E-08, 4.351E-08, 4.372E-08, 4.393E-08, 4.414E-08,
     $ 4.435E-08, 4.456E-08, 4.477E-08, 4.498E-08, 4.519E-08, 4.540E-08,
     $ 4.562E-08, 4.583E-08, 4.604E-08, 4.626E-08, 4.647E-08, 4.669E-08,
     $ 4.690E-08, 4.712E-08, 4.733E-08, 4.755E-08, 4.777E-08, 4.799E-08,
     $ 4.820E-08, 4.843E-08, 4.865E-08, 4.887E-08, 4.909E-08, 4.931E-08,
     $ 4.953E-08, 4.975E-08, 4.997E-08, 5.019E-08, 5.041E-08, 5.064E-08,
     $ 5.086E-08, 5.109E-08, 5.132E-08, 5.154E-08, 5.177E-08, 5.199E-08,
     $ 5.222E-08, 5.245E-08, 5.267E-08, 5.290E-08, 5.313E-08, 5.336E-08,
     $ 5.359E-08, 5.382E-08, 5.405E-08, 5.428E-08, 5.451E-08, 5.475E-08,
     $ 5.498E-08, 5.522E-08, 5.545E-08, 5.568E-08, 5.592E-08, 5.615E-08,
     $ 5.639E-08, 5.662E-08, 5.686E-08, 5.710E-08, 5.733E-08, 5.757E-08,
     $ 5.781E-08, 5.805E-08, 5.829E-08, 5.853E-08, 5.877E-08, 5.901E-08,
     $ 5.925E-08, 5.950E-08, 5.974E-08, 5.998E-08, 6.023E-08, 6.047E-08,
     $ 6.072E-08, 6.096E-08, 6.120E-08, 6.145E-08, 6.170E-08, 6.194E-08,
     $ 6.219E-08, 6.245E-08, 6.270E-08, 6.295E-08/
C                                                                       
C       501 TO   600 CM-1 DATA.                                         
      DATA (SUN(I),I=   501,   600)/                                    
     $ 6.321E-08, 6.346E-08, 6.371E-08, 6.396E-08, 6.421E-08, 6.447E-08,
     $ 6.472E-08, 6.497E-08, 6.523E-08, 6.548E-08, 6.573E-08, 6.599E-08,
     $ 6.624E-08, 6.650E-08, 6.676E-08, 6.701E-08, 6.727E-08, 6.753E-08,
     $ 6.779E-08, 6.804E-08, 6.830E-08, 6.855E-08, 6.881E-08, 6.907E-08,
     $ 6.932E-08, 6.959E-08, 6.986E-08, 7.012E-08, 7.039E-08, 7.066E-08,
     $ 7.092E-08, 7.118E-08, 7.145E-08, 7.171E-08, 7.198E-08, 7.225E-08,
     $ 7.251E-08, 7.278E-08, 7.305E-08, 7.332E-08, 7.359E-08, 7.385E-08,
     $ 7.412E-08, 7.439E-08, 7.466E-08, 7.493E-08, 7.521E-08, 7.548E-08,
     $ 7.575E-08, 7.603E-08, 7.630E-08, 7.657E-08, 7.685E-08, 7.712E-08,
     $ 7.740E-08, 7.767E-08, 7.795E-08, 7.823E-08, 7.850E-08, 7.878E-08,
     $ 7.906E-08, 7.934E-08, 7.961E-08, 7.989E-08, 8.017E-08, 8.045E-08,
     $ 8.073E-08, 8.101E-08, 8.130E-08, 8.158E-08, 8.186E-08, 8.215E-08,
     $ 8.243E-08, 8.272E-08, 8.300E-08, 8.329E-08, 8.357E-08, 8.386E-08,
     $ 8.414E-08, 8.443E-08, 8.472E-08, 8.501E-08, 8.529E-08, 8.558E-08,
     $ 8.587E-08, 8.616E-08, 8.645E-08, 8.675E-08, 8.704E-08, 8.733E-08,
     $ 8.762E-08, 8.791E-08, 8.820E-08, 8.850E-08, 8.879E-08, 8.909E-08,
     $ 8.938E-08, 8.968E-08, 8.997E-08, 9.027E-08/
C                                                                       
C       601 TO   700 CM-1 DATA.                                         
      DATA (SUN(I),I=   601,   700)/                                    
     $ 9.057E-08, 9.087E-08, 9.116E-08, 9.146E-08, 9.176E-08, 9.206E-08,
     $ 9.236E-08, 9.266E-08, 9.296E-08, 9.326E-08, 9.356E-08, 9.386E-08,
     $ 9.417E-08, 9.447E-08, 9.477E-08, 9.507E-08, 9.537E-08, 9.568E-08,
     $ 9.599E-08, 9.629E-08, 9.660E-08, 9.691E-08, 9.722E-08, 9.753E-08,
     $ 9.784E-08, 9.814E-08, 9.845E-08, 9.876E-08, 9.907E-08, 9.938E-08,
     $ 9.969E-08, 1.000E-07, 1.003E-07, 1.006E-07, 1.010E-07, 1.013E-07,
     $ 1.016E-07, 1.019E-07, 1.022E-07, 1.026E-07, 1.029E-07, 1.032E-07,
     $ 1.035E-07, 1.038E-07, 1.041E-07, 1.044E-07, 1.048E-07, 1.051E-07,
     $ 1.054E-07, 1.057E-07, 1.060E-07, 1.063E-07, 1.067E-07, 1.070E-07,
     $ 1.073E-07, 1.076E-07, 1.079E-07, 1.083E-07, 1.086E-07, 1.089E-07,
     $ 1.092E-07, 1.096E-07, 1.099E-07, 1.102E-07, 1.105E-07, 1.109E-07,
     $ 1.112E-07, 1.115E-07, 1.118E-07, 1.122E-07, 1.125E-07, 1.128E-07,
     $ 1.131E-07, 1.135E-07, 1.138E-07, 1.141E-07, 1.145E-07, 1.148E-07,
     $ 1.151E-07, 1.155E-07, 1.158E-07, 1.161E-07, 1.165E-07, 1.168E-07,
     $ 1.172E-07, 1.175E-07, 1.179E-07, 1.182E-07, 1.186E-07, 1.189E-07,
     $ 1.192E-07, 1.196E-07, 1.199E-07, 1.203E-07, 1.206E-07, 1.209E-07,
     $ 1.213E-07, 1.216E-07, 1.220E-07, 1.223E-07/
C                                                                       
C       701 TO   800 CM-1 DATA.                                         
      DATA (SUN(I),I=   701,   800)/                                    
     $ 1.226E-07, 1.230E-07, 1.233E-07, 1.237E-07, 1.240E-07, 1.243E-07,
     $ 1.247E-07, 1.250E-07, 1.254E-07, 1.257E-07, 1.261E-07, 1.264E-07,
     $ 1.268E-07, 1.271E-07, 1.275E-07, 1.278E-07, 1.282E-07, 1.285E-07,
     $ 1.289E-07, 1.292E-07, 1.296E-07, 1.299E-07, 1.303E-07, 1.306E-07,
     $ 1.310E-07, 1.313E-07, 1.317E-07, 1.320E-07, 1.324E-07, 1.328E-07,
     $ 1.331E-07, 1.335E-07, 1.339E-07, 1.342E-07, 1.346E-07, 1.350E-07,
     $ 1.353E-07, 1.357E-07, 1.360E-07, 1.364E-07, 1.368E-07, 1.371E-07,
     $ 1.375E-07, 1.378E-07, 1.382E-07, 1.386E-07, 1.389E-07, 1.393E-07,
     $ 1.396E-07, 1.400E-07, 1.404E-07, 1.407E-07, 1.411E-07, 1.415E-07,
     $ 1.418E-07, 1.422E-07, 1.426E-07, 1.429E-07, 1.433E-07, 1.437E-07,
     $ 1.441E-07, 1.444E-07, 1.448E-07, 1.452E-07, 1.455E-07, 1.459E-07,
     $ 1.463E-07, 1.466E-07, 1.470E-07, 1.474E-07, 1.478E-07, 1.481E-07,
     $ 1.485E-07, 1.489E-07, 1.493E-07, 1.497E-07, 1.501E-07, 1.505E-07,
     $ 1.509E-07, 1.512E-07, 1.516E-07, 1.520E-07, 1.524E-07, 1.528E-07,
     $ 1.531E-07, 1.535E-07, 1.539E-07, 1.543E-07, 1.547E-07, 1.550E-07,
     $ 1.554E-07, 1.558E-07, 1.562E-07, 1.566E-07, 1.569E-07, 1.573E-07,
     $ 1.577E-07, 1.581E-07, 1.585E-07, 1.589E-07/
C                                                                       
C       801 TO   900 CM-1 DATA.                                         
      DATA (SUN(I),I=   801,   900)/                                    
     $ 1.593E-07, 1.596E-07, 1.600E-07, 1.604E-07, 1.608E-07, 1.612E-07,
     $ 1.616E-07, 1.620E-07, 1.624E-07, 1.628E-07, 1.631E-07, 1.635E-07,
     $ 1.639E-07, 1.643E-07, 1.647E-07, 1.651E-07, 1.655E-07, 1.660E-07,
     $ 1.664E-07, 1.668E-07, 1.672E-07, 1.676E-07, 1.680E-07, 1.684E-07,
     $ 1.688E-07, 1.692E-07, 1.696E-07, 1.700E-07, 1.704E-07, 1.708E-07,
     $ 1.712E-07, 1.716E-07, 1.720E-07, 1.724E-07, 1.728E-07, 1.732E-07,
     $ 1.736E-07, 1.740E-07, 1.744E-07, 1.748E-07, 1.752E-07, 1.756E-07,
     $ 1.760E-07, 1.764E-07, 1.768E-07, 1.772E-07, 1.776E-07, 1.781E-07,
     $ 1.785E-07, 1.789E-07, 1.793E-07, 1.797E-07, 1.801E-07, 1.805E-07,
     $ 1.809E-07, 1.813E-07, 1.818E-07, 1.822E-07, 1.826E-07, 1.831E-07,
     $ 1.835E-07, 1.839E-07, 1.843E-07, 1.847E-07, 1.851E-07, 1.855E-07,
     $ 1.860E-07, 1.864E-07, 1.868E-07, 1.872E-07, 1.877E-07, 1.881E-07,
     $ 1.885E-07, 1.889E-07, 1.893E-07, 1.897E-07, 1.901E-07, 1.906E-07,
     $ 1.910E-07, 1.914E-07, 1.918E-07, 1.922E-07, 1.926E-07, 1.930E-07,
     $ 1.935E-07, 1.939E-07, 1.944E-07, 1.948E-07, 1.952E-07, 1.957E-07,
     $ 1.961E-07, 1.965E-07, 1.970E-07, 1.974E-07, 1.978E-07, 1.983E-07,
     $ 1.987E-07, 1.992E-07, 1.996E-07, 2.001E-07/
C                                                                       
C       901 TO  1000 CM-1 DATA.                                         
      DATA (SUN(I),I=   901,  1000)/                                    
     $ 2.005E-07, 2.009E-07, 2.014E-07, 2.018E-07, 2.022E-07, 2.026E-07,
     $ 2.031E-07, 2.035E-07, 2.039E-07, 2.044E-07, 2.048E-07, 2.052E-07,
     $ 2.057E-07, 2.061E-07, 2.066E-07, 2.070E-07, 2.074E-07, 2.079E-07,
     $ 2.083E-07, 2.088E-07, 2.092E-07, 2.096E-07, 2.101E-07, 2.105E-07,
     $ 2.109E-07, 2.114E-07, 2.118E-07, 2.123E-07, 2.127E-07, 2.132E-07,
     $ 2.137E-07, 2.142E-07, 2.146E-07, 2.151E-07, 2.155E-07, 2.160E-07,
     $ 2.164E-07, 2.168E-07, 2.173E-07, 2.177E-07, 2.182E-07, 2.186E-07,
     $ 2.191E-07, 2.195E-07, 2.200E-07, 2.204E-07, 2.209E-07, 2.213E-07,
     $ 2.218E-07, 2.222E-07, 2.226E-07, 2.231E-07, 2.236E-07, 2.240E-07,
     $ 2.245E-07, 2.250E-07, 2.254E-07, 2.259E-07, 2.263E-07, 2.268E-07,
     $ 2.273E-07, 2.277E-07, 2.282E-07, 2.286E-07, 2.291E-07, 2.296E-07,
     $ 2.301E-07, 2.305E-07, 2.310E-07, 2.315E-07, 2.319E-07, 2.324E-07,
     $ 2.329E-07, 2.333E-07, 2.338E-07, 2.342E-07, 2.347E-07, 2.352E-07,
     $ 2.357E-07, 2.361E-07, 2.366E-07, 2.370E-07, 2.375E-07, 2.380E-07,
     $ 2.385E-07, 2.389E-07, 2.394E-07, 2.399E-07, 2.403E-07, 2.408E-07,
     $ 2.413E-07, 2.417E-07, 2.422E-07, 2.427E-07, 2.432E-07, 2.436E-07,
     $ 2.441E-07, 2.445E-07, 2.450E-07, 2.454E-07/
C                                                                       
C      1001 TO  1100 CM-1 DATA.                                         
      DATA (SUN(I),I=  1001,  1100)/                                    
     $ 2.459E-07, 2.464E-07, 2.468E-07, 2.473E-07, 2.478E-07, 2.482E-07,
     $ 2.487E-07, 2.492E-07, 2.497E-07, 2.502E-07, 2.507E-07, 2.512E-07,
     $ 2.516E-07, 2.521E-07, 2.526E-07, 2.531E-07, 2.535E-07, 2.540E-07,
     $ 2.545E-07, 2.549E-07, 2.554E-07, 2.559E-07, 2.564E-07, 2.569E-07,
     $ 2.574E-07, 2.578E-07, 2.583E-07, 2.588E-07, 2.593E-07, 2.598E-07,
     $ 2.604E-07, 2.609E-07, 2.614E-07, 2.619E-07, 2.624E-07, 2.629E-07,
     $ 2.634E-07, 2.639E-07, 2.643E-07, 2.648E-07, 2.653E-07, 2.658E-07,
     $ 2.663E-07, 2.668E-07, 2.673E-07, 2.678E-07, 2.683E-07, 2.688E-07,
     $ 2.692E-07, 2.697E-07, 2.702E-07, 2.707E-07, 2.712E-07, 2.717E-07,
     $ 2.722E-07, 2.727E-07, 2.732E-07, 2.738E-07, 2.743E-07, 2.748E-07,
     $ 2.753E-07, 2.758E-07, 2.763E-07, 2.768E-07, 2.773E-07, 2.778E-07,
     $ 2.783E-07, 2.788E-07, 2.794E-07, 2.799E-07, 2.804E-07, 2.809E-07,
     $ 2.814E-07, 2.819E-07, 2.824E-07, 2.829E-07, 2.834E-07, 2.839E-07,
     $ 2.844E-07, 2.849E-07, 2.854E-07, 2.860E-07, 2.865E-07, 2.870E-07,
     $ 2.875E-07, 2.880E-07, 2.885E-07, 2.890E-07, 2.895E-07, 2.900E-07,
     $ 2.904E-07, 2.909E-07, 2.914E-07, 2.919E-07, 2.925E-07, 2.930E-07,
     $ 2.935E-07, 2.940E-07, 2.945E-07, 2.951E-07/
C                                                                       
C      1101 TO  1200 CM-1 DATA.                                         
      DATA (SUN(I),I=  1101,  1200)/                                    
     $ 2.956E-07, 2.962E-07, 2.967E-07, 2.973E-07, 2.978E-07, 2.983E-07,
     $ 2.988E-07, 2.993E-07, 2.998E-07, 3.004E-07, 3.009E-07, 3.013E-07,
     $ 3.018E-07, 3.023E-07, 3.029E-07, 3.034E-07, 3.040E-07, 3.045E-07,
     $ 3.051E-07, 3.057E-07, 3.062E-07, 3.067E-07, 3.071E-07, 3.076E-07,
     $ 3.080E-07, 3.085E-07, 3.090E-07, 3.096E-07, 3.103E-07, 3.109E-07,
     $ 3.115E-07, 3.121E-07, 3.126E-07, 3.131E-07, 3.136E-07, 3.141E-07,
     $ 3.147E-07, 3.152E-07, 3.157E-07, 3.163E-07, 3.168E-07, 3.173E-07,
     $ 3.179E-07, 3.184E-07, 3.190E-07, 3.196E-07, 3.202E-07, 3.207E-07,
     $ 3.212E-07, 3.218E-07, 3.223E-07, 3.228E-07, 3.234E-07, 3.239E-07,
     $ 3.244E-07, 3.250E-07, 3.255E-07, 3.261E-07, 3.266E-07, 3.272E-07,
     $ 3.277E-07, 3.283E-07, 3.288E-07, 3.294E-07, 3.299E-07, 3.305E-07,
     $ 3.310E-07, 3.316E-07, 3.321E-07, 3.327E-07, 3.332E-07, 3.338E-07,
     $ 3.343E-07, 3.349E-07, 3.354E-07, 3.360E-07, 3.365E-07, 3.371E-07,
     $ 3.376E-07, 3.382E-07, 3.387E-07, 3.393E-07, 3.399E-07, 3.404E-07,
     $ 3.410E-07, 3.415E-07, 3.421E-07, 3.426E-07, 3.431E-07, 3.437E-07,
     $ 3.442E-07, 3.447E-07, 3.453E-07, 3.458E-07, 3.464E-07, 3.469E-07,
     $ 3.474E-07, 3.480E-07, 3.485E-07, 3.491E-07/
C                                                                       
C      1201 TO  1300 CM-1 DATA.                                         
      DATA (SUN(I),I=  1201,  1300)/                                    
     $ 3.498E-07, 3.504E-07, 3.510E-07, 3.516E-07, 3.522E-07, 3.528E-07,
     $ 3.534E-07, 3.539E-07, 3.545E-07, 3.550E-07, 3.556E-07, 3.561E-07,
     $ 3.567E-07, 3.573E-07, 3.578E-07, 3.584E-07, 3.589E-07, 3.595E-07,
     $ 3.600E-07, 3.605E-07, 3.610E-07, 3.616E-07, 3.621E-07, 3.627E-07,
     $ 3.632E-07, 3.637E-07, 3.643E-07, 3.649E-07, 3.656E-07, 3.663E-07,
     $ 3.670E-07, 3.676E-07, 3.682E-07, 3.688E-07, 3.693E-07, 3.698E-07,
     $ 3.703E-07, 3.708E-07, 3.714E-07, 3.719E-07, 3.726E-07, 3.732E-07,
     $ 3.738E-07, 3.744E-07, 3.750E-07, 3.755E-07, 3.761E-07, 3.767E-07,
     $ 3.773E-07, 3.780E-07, 3.786E-07, 3.792E-07, 3.798E-07, 3.804E-07,
     $ 3.810E-07, 3.815E-07, 3.821E-07, 3.827E-07, 3.832E-07, 3.838E-07,
     $ 3.844E-07, 3.850E-07, 3.856E-07, 3.863E-07, 3.869E-07, 3.875E-07,
     $ 3.881E-07, 3.887E-07, 3.893E-07, 3.898E-07, 3.904E-07, 3.910E-07,
     $ 3.916E-07, 3.922E-07, 3.928E-07, 3.934E-07, 3.939E-07, 3.945E-07,
     $ 3.951E-07, 3.957E-07, 3.963E-07, 3.969E-07, 3.975E-07, 3.980E-07,
     $ 3.986E-07, 3.992E-07, 3.998E-07, 4.004E-07, 4.010E-07, 4.017E-07,
     $ 4.023E-07, 4.029E-07, 4.035E-07, 4.040E-07, 4.046E-07, 4.051E-07,
     $ 4.056E-07, 4.062E-07, 4.068E-07, 4.074E-07/
C                                                                       
C      1301 TO  1400 CM-1 DATA.                                         
      DATA (SUN(I),I=  1301,  1400)/                                    
     $ 4.081E-07, 4.088E-07, 4.095E-07, 4.101E-07, 4.107E-07, 4.113E-07,
     $ 4.119E-07, 4.124E-07, 4.130E-07, 4.136E-07, 4.142E-07, 4.148E-07,
     $ 4.155E-07, 4.161E-07, 4.168E-07, 4.174E-07, 4.180E-07, 4.186E-07,
     $ 4.192E-07, 4.198E-07, 4.204E-07, 4.210E-07, 4.216E-07, 4.221E-07,
     $ 4.227E-07, 4.233E-07, 4.239E-07, 4.244E-07, 4.248E-07, 4.252E-07,
     $ 4.255E-07, 4.259E-07, 4.264E-07, 4.272E-07, 4.280E-07, 4.287E-07,
     $ 4.292E-07, 4.295E-07, 4.297E-07, 4.300E-07, 4.305E-07, 4.314E-07,
     $ 4.324E-07, 4.334E-07, 4.345E-07, 4.354E-07, 4.361E-07, 4.368E-07,
     $ 4.375E-07, 4.382E-07, 4.388E-07, 4.395E-07, 4.401E-07, 4.407E-07,
     $ 4.413E-07, 4.420E-07, 4.426E-07, 4.432E-07, 4.437E-07, 4.442E-07,
     $ 4.448E-07, 4.453E-07, 4.459E-07, 4.466E-07, 4.473E-07, 4.481E-07,
     $ 4.488E-07, 4.495E-07, 4.501E-07, 4.508E-07, 4.514E-07, 4.520E-07,
     $ 4.526E-07, 4.532E-07, 4.538E-07, 4.544E-07, 4.549E-07, 4.555E-07,
     $ 4.562E-07, 4.569E-07, 4.576E-07, 4.582E-07, 4.588E-07, 4.594E-07,
     $ 4.600E-07, 4.606E-07, 4.612E-07, 4.619E-07, 4.626E-07, 4.633E-07,
     $ 4.640E-07, 4.646E-07, 4.653E-07, 4.660E-07, 4.667E-07, 4.673E-07,
     $ 4.680E-07, 4.687E-07, 4.693E-07, 4.699E-07/
C                                                                       
C      1401 TO  1500 CM-1 DATA.                                         
      DATA (SUN(I),I=  1401,  1500)/                                    
     $ 4.705E-07, 4.711E-07, 4.717E-07, 4.723E-07, 4.730E-07, 4.736E-07,
     $ 4.743E-07, 4.750E-07, 4.756E-07, 4.762E-07, 4.768E-07, 4.774E-07,
     $ 4.781E-07, 4.787E-07, 4.793E-07, 4.800E-07, 4.806E-07, 4.814E-07,
     $ 4.820E-07, 4.826E-07, 4.831E-07, 4.836E-07, 4.840E-07, 4.845E-07,
     $ 4.851E-07, 4.859E-07, 4.867E-07, 4.876E-07, 4.884E-07, 4.892E-07,
     $ 4.899E-07, 4.906E-07, 4.912E-07, 4.919E-07, 4.925E-07, 4.931E-07,
     $ 4.937E-07, 4.942E-07, 4.948E-07, 4.954E-07, 4.960E-07, 4.967E-07,
     $ 4.975E-07, 4.982E-07, 4.990E-07, 4.997E-07, 5.003E-07, 5.009E-07,
     $ 5.016E-07, 5.022E-07, 5.029E-07, 5.035E-07, 5.042E-07, 5.049E-07,
     $ 5.055E-07, 5.063E-07, 5.070E-07, 5.077E-07, 5.083E-07, 5.090E-07,
     $ 5.096E-07, 5.102E-07, 5.109E-07, 5.115E-07, 5.122E-07, 5.129E-07,
     $ 5.136E-07, 5.142E-07, 5.148E-07, 5.155E-07, 5.161E-07, 5.167E-07,
     $ 5.172E-07, 5.178E-07, 5.183E-07, 5.188E-07, 5.193E-07, 5.200E-07,
     $ 5.207E-07, 5.215E-07, 5.224E-07, 5.232E-07, 5.240E-07, 5.247E-07,
     $ 5.254E-07, 5.260E-07, 5.267E-07, 5.273E-07, 5.280E-07, 5.286E-07,
     $ 5.293E-07, 5.300E-07, 5.308E-07, 5.315E-07, 5.323E-07, 5.330E-07,
     $ 5.338E-07, 5.345E-07, 5.353E-07, 5.360E-07/
C                                                                       
C      1501 TO  1600 CM-1 DATA.                                         
      DATA (SUN(I),I=  1501,  1600)/                                    
     $ 5.367E-07, 5.373E-07, 5.380E-07, 5.386E-07, 5.392E-07, 5.398E-07,
     $ 5.404E-07, 5.411E-07, 5.418E-07, 5.425E-07, 5.432E-07, 5.438E-07,
     $ 5.445E-07, 5.451E-07, 5.459E-07, 5.466E-07, 5.473E-07, 5.481E-07,
     $ 5.488E-07, 5.495E-07, 5.501E-07, 5.508E-07, 5.514E-07, 5.521E-07,
     $ 5.527E-07, 5.534E-07, 5.541E-07, 5.548E-07, 5.556E-07, 5.562E-07,
     $ 5.569E-07, 5.576E-07, 5.582E-07, 5.588E-07, 5.595E-07, 5.602E-07,
     $ 5.608E-07, 5.612E-07, 5.616E-07, 5.619E-07, 5.621E-07, 5.624E-07,
     $ 5.630E-07, 5.638E-07, 5.649E-07, 5.660E-07, 5.672E-07, 5.682E-07,
     $ 5.690E-07, 5.697E-07, 5.704E-07, 5.711E-07, 5.718E-07, 5.725E-07,
     $ 5.733E-07, 5.741E-07, 5.749E-07, 5.756E-07, 5.763E-07, 5.769E-07,
     $ 5.775E-07, 5.781E-07, 5.787E-07, 5.793E-07, 5.800E-07, 5.806E-07,
     $ 5.814E-07, 5.821E-07, 5.827E-07, 5.833E-07, 5.840E-07, 5.846E-07,
     $ 5.853E-07, 5.861E-07, 5.869E-07, 5.877E-07, 5.885E-07, 5.892E-07,
     $ 5.898E-07, 5.904E-07, 5.909E-07, 5.913E-07, 5.917E-07, 5.922E-07,
     $ 5.928E-07, 5.934E-07, 5.942E-07, 5.950E-07, 5.957E-07, 5.965E-07,
     $ 5.974E-07, 5.982E-07, 5.990E-07, 5.998E-07, 6.006E-07, 6.013E-07,
     $ 6.020E-07, 6.027E-07, 6.032E-07, 6.037E-07/
C                                                                       
C      1601 TO  1700 CM-1 DATA.                                         
      DATA (SUN(I),I=  1601,  1700)/                                    
     $ 6.041E-07, 6.046E-07, 6.050E-07, 6.056E-07, 6.061E-07, 6.066E-07,
     $ 6.074E-07, 6.083E-07, 6.095E-07, 6.106E-07, 6.117E-07, 6.126E-07,
     $ 6.134E-07, 6.140E-07, 6.147E-07, 6.154E-07, 6.161E-07, 6.169E-07,
     $ 6.176E-07, 6.183E-07, 6.191E-07, 6.198E-07, 6.204E-07, 6.211E-07,
     $ 6.217E-07, 6.224E-07, 6.231E-07, 6.237E-07, 6.243E-07, 6.249E-07,
     $ 6.255E-07, 6.261E-07, 6.268E-07, 6.273E-07, 6.277E-07, 6.280E-07,
     $ 6.285E-07, 6.289E-07, 6.295E-07, 6.302E-07, 6.310E-07, 6.319E-07,
     $ 6.330E-07, 6.342E-07, 6.352E-07, 6.360E-07, 6.368E-07, 6.373E-07,
     $ 6.380E-07, 6.387E-07, 6.395E-07, 6.403E-07, 6.411E-07, 6.418E-07,
     $ 6.425E-07, 6.434E-07, 6.441E-07, 6.446E-07, 6.450E-07, 6.454E-07,
     $ 6.459E-07, 6.465E-07, 6.474E-07, 6.482E-07, 6.490E-07, 6.498E-07,
     $ 6.506E-07, 6.515E-07, 6.524E-07, 6.532E-07, 6.539E-07, 6.545E-07,
     $ 6.551E-07, 6.557E-07, 6.562E-07, 6.565E-07, 6.566E-07, 6.569E-07,
     $ 6.572E-07, 6.577E-07, 6.586E-07, 6.597E-07, 6.609E-07, 6.621E-07,
     $ 6.632E-07, 6.642E-07, 6.648E-07, 6.650E-07, 6.649E-07, 6.646E-07,
     $ 6.644E-07, 6.644E-07, 6.648E-07, 6.657E-07, 6.669E-07, 6.681E-07,
     $ 6.694E-07, 6.706E-07, 6.716E-07, 6.724E-07/
C                                                                       
C      1701 TO  1800 CM-1 DATA.                                         
      DATA (SUN(I),I=  1701,  1800)/                                    
     $ 6.733E-07, 6.743E-07, 6.754E-07, 6.763E-07, 6.772E-07, 6.779E-07,
     $ 6.785E-07, 6.792E-07, 6.803E-07, 6.812E-07, 6.819E-07, 6.826E-07,
     $ 6.833E-07, 6.840E-07, 6.848E-07, 6.856E-07, 6.861E-07, 6.865E-07,
     $ 6.869E-07, 6.875E-07, 6.883E-07, 6.892E-07, 6.900E-07, 6.906E-07,
     $ 6.911E-07, 6.919E-07, 6.928E-07, 6.937E-07, 6.944E-07, 6.951E-07,
     $ 6.956E-07, 6.962E-07, 6.973E-07, 6.983E-07, 6.990E-07, 6.997E-07,
     $ 7.003E-07, 7.008E-07, 7.016E-07, 7.024E-07, 7.031E-07, 7.037E-07,
     $ 7.042E-07, 7.049E-07, 7.058E-07, 7.065E-07, 7.069E-07, 7.073E-07,
     $ 7.076E-07, 7.082E-07, 7.091E-07, 7.101E-07, 7.109E-07, 7.117E-07,
     $ 7.122E-07, 7.128E-07, 7.138E-07, 7.146E-07, 7.151E-07, 7.159E-07,
     $ 7.164E-07, 7.169E-07, 7.177E-07, 7.188E-07, 7.198E-07, 7.206E-07,
     $ 7.215E-07, 7.223E-07, 7.231E-07, 7.236E-07, 7.238E-07, 7.240E-07,
     $ 7.243E-07, 7.248E-07, 7.256E-07, 7.266E-07, 7.276E-07, 7.285E-07,
     $ 7.293E-07, 7.302E-07, 7.312E-07, 7.320E-07, 7.324E-07, 7.327E-07,
     $ 7.327E-07, 7.327E-07, 7.330E-07, 7.336E-07, 7.343E-07, 7.353E-07,
     $ 7.365E-07, 7.380E-07, 7.394E-07, 7.406E-07, 7.416E-07, 7.421E-07,
     $ 7.425E-07, 7.431E-07, 7.438E-07, 7.445E-07/
C                                                                       
C      1801 TO  1900 CM-1 DATA.                                         
      DATA (SUN(I),I=  1801,  1900)/                                    
     $ 7.450E-07, 7.454E-07, 7.457E-07, 7.462E-07, 7.469E-07, 7.477E-07,
     $ 7.486E-07, 7.496E-07, 7.504E-07, 7.511E-07, 7.521E-07, 7.528E-07,
     $ 7.531E-07, 7.537E-07, 7.544E-07, 7.550E-07, 7.557E-07, 7.566E-07,
     $ 7.574E-07, 7.581E-07, 7.589E-07, 7.599E-07, 7.606E-07, 7.611E-07,
     $ 7.615E-07, 7.618E-07, 7.619E-07, 7.622E-07, 7.627E-07, 7.632E-07,
     $ 7.640E-07, 7.650E-07, 7.662E-07, 7.674E-07, 7.685E-07, 7.693E-07,
     $ 7.700E-07, 7.707E-07, 7.713E-07, 7.719E-07, 7.728E-07, 7.736E-07,
     $ 7.741E-07, 7.749E-07, 7.758E-07, 7.764E-07, 7.771E-07, 7.780E-07,
     $ 7.791E-07, 7.801E-07, 7.814E-07, 7.825E-07, 7.832E-07, 7.835E-07,
     $ 7.836E-07, 7.837E-07, 7.841E-07, 7.846E-07, 7.853E-07, 7.863E-07,
     $ 7.874E-07, 7.882E-07, 7.891E-07, 7.899E-07, 7.906E-07, 7.913E-07,
     $ 7.921E-07, 7.931E-07, 7.942E-07, 7.951E-07, 7.959E-07, 7.967E-07,
     $ 7.974E-07, 7.980E-07, 7.987E-07, 7.994E-07, 8.000E-07, 8.005E-07,
     $ 8.010E-07, 8.014E-07, 8.018E-07, 8.025E-07, 8.032E-07, 8.038E-07,
     $ 8.047E-07, 8.058E-07, 8.069E-07, 8.077E-07, 8.087E-07, 8.100E-07,
     $ 8.109E-07, 8.115E-07, 8.122E-07, 8.129E-07, 8.133E-07, 8.139E-07,
     $ 8.146E-07, 8.151E-07, 8.159E-07, 8.168E-07/
C                                                                       
C      1901 TO  2000 CM-1 DATA.                                         
      DATA (SUN(I),I=  1901,  2000)/                                    
     $ 8.175E-07, 8.183E-07, 8.193E-07, 8.201E-07, 8.206E-07, 8.211E-07,
     $ 8.217E-07, 8.221E-07, 8.224E-07, 8.228E-07, 8.236E-07, 8.247E-07,
     $ 8.258E-07, 8.268E-07, 8.280E-07, 8.289E-07, 8.293E-07, 8.295E-07,
     $ 8.301E-07, 8.309E-07, 8.317E-07, 8.326E-07, 8.335E-07, 8.346E-07,
     $ 8.355E-07, 8.359E-07, 8.366E-07, 8.380E-07, 8.394E-07, 8.409E-07,
     $ 8.425E-07, 8.439E-07, 8.447E-07, 8.449E-07, 8.451E-07, 8.452E-07,
     $ 8.456E-07, 8.462E-07, 8.468E-07, 8.473E-07, 8.480E-07, 8.486E-07,
     $ 8.490E-07, 8.493E-07, 8.500E-07, 8.503E-07, 8.499E-07, 8.499E-07,
     $ 8.501E-07, 8.504E-07, 8.514E-07, 8.528E-07, 8.542E-07, 8.559E-07,
     $ 8.573E-07, 8.580E-07, 8.585E-07, 8.593E-07, 8.597E-07, 8.603E-07,
     $ 8.612E-07, 8.621E-07, 8.630E-07, 8.640E-07, 8.647E-07, 8.654E-07,
     $ 8.664E-07, 8.673E-07, 8.679E-07, 8.689E-07, 8.705E-07, 8.720E-07,
     $ 8.731E-07, 8.744E-07, 8.755E-07, 8.758E-07, 8.761E-07, 8.770E-07,
     $ 8.782E-07, 8.795E-07, 8.811E-07, 8.826E-07, 8.833E-07, 8.837E-07,
     $ 8.840E-07, 8.835E-07, 8.832E-07, 8.836E-07, 8.841E-07, 8.845E-07,
     $ 8.854E-07, 8.860E-07, 8.863E-07, 8.868E-07, 8.874E-07, 8.879E-07,
     $ 8.891E-07, 8.907E-07, 8.913E-07, 8.918E-07/
C                                                                       
C      2001 TO  2100 CM-1 DATA.                                         
      DATA (SUN(I),I=  2001,  2100)/                                    
     $ 8.931E-07, 8.939E-07, 8.940E-07, 8.949E-07, 8.966E-07, 8.979E-07,
     $ 8.990E-07, 9.004E-07, 9.017E-07, 9.025E-07, 9.034E-07, 9.040E-07,
     $ 9.044E-07, 9.049E-07, 9.054E-07, 9.056E-07, 9.062E-07, 9.072E-07,
     $ 9.081E-07, 9.086E-07, 9.089E-07, 9.094E-07, 9.103E-07, 9.114E-07,
     $ 9.123E-07, 9.133E-07, 9.145E-07, 9.151E-07, 9.151E-07, 9.156E-07,
     $ 9.166E-07, 9.172E-07, 9.178E-07, 9.191E-07, 9.206E-07, 9.220E-07,
     $ 9.237E-07, 9.253E-07, 9.264E-07, 9.276E-07, 9.284E-07, 9.285E-07,
     $ 9.288E-07, 9.295E-07, 9.300E-07, 9.306E-07, 9.314E-07, 9.320E-07,
     $ 9.321E-07, 9.320E-07, 9.317E-07, 9.319E-07, 9.330E-07, 9.348E-07,
     $ 9.360E-07, 9.374E-07, 9.394E-07, 9.404E-07, 9.407E-07, 9.417E-07,
     $ 9.430E-07, 9.437E-07, 9.447E-07, 9.464E-07, 9.478E-07, 9.490E-07,
     $ 9.502E-07, 9.509E-07, 9.510E-07, 9.511E-07, 9.515E-07, 9.519E-07,
     $ 9.526E-07, 9.537E-07, 9.546E-07, 9.548E-07, 9.547E-07, 9.542E-07,
     $ 9.538E-07, 9.542E-07, 9.548E-07, 9.550E-07, 9.562E-07, 9.578E-07,
     $ 9.582E-07, 9.588E-07, 9.607E-07, 9.616E-07, 9.613E-07, 9.619E-07,
     $ 9.621E-07, 9.616E-07, 9.622E-07, 9.637E-07, 9.652E-07, 9.671E-07,
     $ 9.693E-07, 9.710E-07, 9.725E-07, 9.738E-07/
C                                                                       
C      2101 TO  2200 CM-1 DATA.                                         
      DATA (SUN(I),I=  2101,  2200)/                                    
     $ 9.745E-07, 9.749E-07, 9.753E-07, 9.759E-07, 9.765E-07, 9.775E-07,
     $ 9.789E-07, 9.797E-07, 9.797E-07, 9.803E-07, 9.810E-07, 9.810E-07,
     $ 9.822E-07, 9.844E-07, 9.851E-07, 9.850E-07, 9.851E-07, 9.842E-07,
     $ 9.826E-07, 9.824E-07, 9.833E-07, 9.849E-07, 9.870E-07, 9.891E-07,
     $ 9.909E-07, 9.923E-07, 9.930E-07, 9.936E-07, 9.947E-07, 9.959E-07,
     $ 9.966E-07, 9.971E-07, 9.978E-07, 9.980E-07, 9.978E-07, 9.975E-07,
     $ 9.980E-07, 9.983E-07, 9.982E-07, 9.987E-07, 1.000E-06, 1.000E-06,
     $ 9.999E-07, 1.000E-06, 9.982E-07, 9.946E-07, 9.916E-07, 9.890E-07,
     $ 9.875E-07, 9.893E-07, 9.935E-07, 9.985E-07, 1.004E-06, 1.008E-06,
     $ 1.011E-06, 1.014E-06, 1.015E-06, 1.016E-06, 1.017E-06, 1.017E-06,
     $ 1.017E-06, 1.017E-06, 1.016E-06, 1.016E-06, 1.017E-06, 1.017E-06,
     $ 1.018E-06, 1.019E-06, 1.020E-06, 1.020E-06, 1.021E-06, 1.021E-06,
     $ 1.020E-06, 1.020E-06, 1.019E-06, 1.017E-06, 1.017E-06, 1.016E-06,
     $ 1.015E-06, 1.016E-06, 1.019E-06, 1.024E-06, 1.029E-06, 1.033E-06,
     $ 1.036E-06, 1.038E-06, 1.037E-06, 1.037E-06, 1.037E-06, 1.038E-06,
     $ 1.040E-06, 1.042E-06, 1.044E-06, 1.046E-06, 1.046E-06, 1.044E-06,
     $ 1.043E-06, 1.043E-06, 1.042E-06, 1.043E-06/
C                                                                       
C      2201 TO  2300 CM-1 DATA.                                         
      DATA (SUN(I),I=  2201,  2300)/                                    
     $ 1.044E-06, 1.045E-06, 1.045E-06, 1.046E-06, 1.045E-06, 1.042E-06,
     $ 1.040E-06, 1.040E-06, 1.040E-06, 1.043E-06, 1.049E-06, 1.054E-06,
     $ 1.059E-06, 1.063E-06, 1.065E-06, 1.065E-06, 1.065E-06, 1.066E-06,
     $ 1.067E-06, 1.069E-06, 1.071E-06, 1.072E-06, 1.073E-06, 1.073E-06,
     $ 1.072E-06, 1.072E-06, 1.073E-06, 1.074E-06, 1.074E-06, 1.073E-06,
     $ 1.072E-06, 1.071E-06, 1.070E-06, 1.069E-06, 1.068E-06, 1.067E-06,
     $ 1.067E-06, 1.069E-06, 1.072E-06, 1.077E-06, 1.084E-06, 1.089E-06,
     $ 1.094E-06, 1.097E-06, 1.098E-06, 1.098E-06, 1.099E-06, 1.099E-06,
     $ 1.099E-06, 1.100E-06, 1.101E-06, 1.101E-06, 1.101E-06, 1.102E-06,
     $ 1.102E-06, 1.102E-06, 1.103E-06, 1.104E-06, 1.103E-06, 1.102E-06,
     $ 1.101E-06, 1.100E-06, 1.099E-06, 1.097E-06, 1.096E-06, 1.095E-06,
     $ 1.095E-06, 1.096E-06, 1.101E-06, 1.109E-06, 1.116E-06, 1.124E-06,
     $ 1.129E-06, 1.133E-06, 1.135E-06, 1.136E-06, 1.138E-06, 1.139E-06,
     $ 1.140E-06, 1.140E-06, 1.141E-06, 1.141E-06, 1.141E-06, 1.140E-06,
     $ 1.140E-06, 1.140E-06, 1.140E-06, 1.140E-06, 1.140E-06, 1.141E-06,
     $ 1.141E-06, 1.140E-06, 1.140E-06, 1.139E-06, 1.137E-06, 1.136E-06,
     $ 1.137E-06, 1.141E-06, 1.149E-06, 1.158E-06/
C                                                                       
C      2301 TO  2400 CM-1 DATA.                                         
      DATA (SUN(I),I=  2301,  2400)/                                    
     $ 1.167E-06, 1.174E-06, 1.179E-06, 1.182E-06, 1.183E-06, 1.183E-06,
     $ 1.183E-06, 1.184E-06, 1.185E-06, 1.186E-06, 1.188E-06, 1.189E-06,
     $ 1.189E-06, 1.189E-06, 1.190E-06, 1.190E-06, 1.191E-06, 1.191E-06,
     $ 1.191E-06, 1.191E-06, 1.191E-06, 1.189E-06, 1.187E-06, 1.184E-06,
     $ 1.181E-06, 1.180E-06, 1.182E-06, 1.188E-06, 1.198E-06, 1.209E-06,
     $ 1.218E-06, 1.225E-06, 1.229E-06, 1.231E-06, 1.232E-06, 1.233E-06,
     $ 1.234E-06, 1.236E-06, 1.237E-06, 1.238E-06, 1.239E-06, 1.239E-06,
     $ 1.240E-06, 1.240E-06, 1.241E-06, 1.242E-06, 1.243E-06, 1.244E-06,
     $ 1.245E-06, 1.247E-06, 1.247E-06, 1.248E-06, 1.248E-06, 1.247E-06,
     $ 1.247E-06, 1.248E-06, 1.250E-06, 1.252E-06, 1.255E-06, 1.257E-06,
     $ 1.259E-06, 1.260E-06, 1.261E-06, 1.262E-06, 1.263E-06, 1.264E-06,
     $ 1.265E-06, 1.265E-06, 1.266E-06, 1.266E-06, 1.266E-06, 1.267E-06,
     $ 1.267E-06, 1.266E-06, 1.264E-06, 1.262E-06, 1.261E-06, 1.260E-06,
     $ 1.261E-06, 1.264E-06, 1.267E-06, 1.271E-06, 1.274E-06, 1.276E-06,
     $ 1.278E-06, 1.280E-06, 1.281E-06, 1.282E-06, 1.283E-06, 1.284E-06,
     $ 1.285E-06, 1.285E-06, 1.286E-06, 1.286E-06, 1.287E-06, 1.288E-06,
     $ 1.289E-06, 1.291E-06, 1.293E-06, 1.295E-06/
C                                                                       
C      2401 TO  2500 CM-1 DATA.                                         
      DATA (SUN(I),I=  2401,  2500)/                                    
     $ 1.297E-06, 1.299E-06, 1.300E-06, 1.301E-06, 1.301E-06, 1.301E-06,
     $ 1.301E-06, 1.301E-06, 1.300E-06, 1.301E-06, 1.302E-06, 1.303E-06,
     $ 1.305E-06, 1.308E-06, 1.310E-06, 1.311E-06, 1.312E-06, 1.313E-06,
     $ 1.314E-06, 1.315E-06, 1.317E-06, 1.318E-06, 1.320E-06, 1.322E-06,
     $ 1.323E-06, 1.324E-06, 1.324E-06, 1.324E-06, 1.324E-06, 1.324E-06,
     $ 1.324E-06, 1.325E-06, 1.326E-06, 1.328E-06, 1.330E-06, 1.332E-06,
     $ 1.334E-06, 1.336E-06, 1.336E-06, 1.337E-06, 1.337E-06, 1.336E-06,
     $ 1.336E-06, 1.336E-06, 1.336E-06, 1.337E-06, 1.338E-06, 1.341E-06,
     $ 1.343E-06, 1.345E-06, 1.347E-06, 1.348E-06, 1.349E-06, 1.349E-06,
     $ 1.349E-06, 1.348E-06, 1.347E-06, 1.347E-06, 1.347E-06, 1.348E-06,
     $ 1.350E-06, 1.352E-06, 1.351E-06, 1.348E-06, 1.343E-06, 1.337E-06,
     $ 1.332E-06, 1.330E-06, 1.334E-06, 1.341E-06, 1.348E-06, 1.355E-06,
     $ 1.361E-06, 1.365E-06, 1.367E-06, 1.370E-06, 1.372E-06, 1.373E-06,
     $ 1.374E-06, 1.375E-06, 1.376E-06, 1.377E-06, 1.378E-06, 1.378E-06,
     $ 1.378E-06, 1.377E-06, 1.375E-06, 1.374E-06, 1.373E-06, 1.374E-06,
     $ 1.377E-06, 1.380E-06, 1.384E-06, 1.388E-06, 1.391E-06, 1.392E-06,
     $ 1.392E-06, 1.391E-06, 1.389E-06, 1.388E-06/
C                                                                       
C      2501 TO  2600 CM-1 DATA.                                         
      DATA (SUN(I),I=  2501,  2600)/                                    
     $ 1.387E-06, 1.387E-06, 1.388E-06, 1.390E-06, 1.391E-06, 1.393E-06,
     $ 1.395E-06, 1.396E-06, 1.398E-06, 1.400E-06, 1.403E-06, 1.406E-06,
     $ 1.408E-06, 1.409E-06, 1.411E-06, 1.412E-06, 1.413E-06, 1.414E-06,
     $ 1.416E-06, 1.417E-06, 1.418E-06, 1.418E-06, 1.418E-06, 1.418E-06,
     $ 1.418E-06, 1.417E-06, 1.417E-06, 1.418E-06, 1.419E-06, 1.420E-06,
     $ 1.422E-06, 1.424E-06, 1.427E-06, 1.429E-06, 1.432E-06, 1.435E-06,
     $ 1.437E-06, 1.438E-06, 1.439E-06, 1.439E-06, 1.439E-06, 1.440E-06,
     $ 1.441E-06, 1.443E-06, 1.445E-06, 1.446E-06, 1.448E-06, 1.449E-06,
     $ 1.449E-06, 1.450E-06, 1.451E-06, 1.451E-06, 1.453E-06, 1.454E-06,
     $ 1.455E-06, 1.456E-06, 1.457E-06, 1.458E-06, 1.459E-06, 1.460E-06,
     $ 1.461E-06, 1.461E-06, 1.461E-06, 1.461E-06, 1.461E-06, 1.462E-06,
     $ 1.464E-06, 1.466E-06, 1.468E-06, 1.469E-06, 1.469E-06, 1.468E-06,
     $ 1.468E-06, 1.468E-06, 1.470E-06, 1.473E-06, 1.476E-06, 1.479E-06,
     $ 1.480E-06, 1.481E-06, 1.481E-06, 1.481E-06, 1.481E-06, 1.480E-06,
     $ 1.481E-06, 1.481E-06, 1.482E-06, 1.483E-06, 1.485E-06, 1.487E-06,
     $ 1.490E-06, 1.492E-06, 1.495E-06, 1.496E-06, 1.498E-06, 1.499E-06,
     $ 1.501E-06, 1.502E-06, 1.503E-06, 1.504E-06/
C                                                                       
C      2601 TO  2700 CM-1 DATA.                                         
      DATA (SUN(I),I=  2601,  2700)/                                    
     $ 1.505E-06, 1.506E-06, 1.506E-06, 1.506E-06, 1.505E-06, 1.505E-06,
     $ 1.505E-06, 1.507E-06, 1.509E-06, 1.511E-06, 1.514E-06, 1.516E-06,
     $ 1.517E-06, 1.518E-06, 1.518E-06, 1.518E-06, 1.518E-06, 1.517E-06,
     $ 1.517E-06, 1.517E-06, 1.518E-06, 1.520E-06, 1.521E-06, 1.522E-06,
     $ 1.524E-06, 1.525E-06, 1.527E-06, 1.528E-06, 1.529E-06, 1.530E-06,
     $ 1.530E-06, 1.530E-06, 1.530E-06, 1.531E-06, 1.531E-06, 1.532E-06,
     $ 1.533E-06, 1.534E-06, 1.535E-06, 1.537E-06, 1.539E-06, 1.541E-06,
     $ 1.542E-06, 1.543E-06, 1.543E-06, 1.542E-06, 1.542E-06, 1.542E-06,
     $ 1.543E-06, 1.545E-06, 1.548E-06, 1.551E-06, 1.554E-06, 1.555E-06,
     $ 1.556E-06, 1.556E-06, 1.556E-06, 1.556E-06, 1.556E-06, 1.555E-06,
     $ 1.554E-06, 1.554E-06, 1.553E-06, 1.553E-06, 1.553E-06, 1.552E-06,
     $ 1.550E-06, 1.547E-06, 1.541E-06, 1.534E-06, 1.530E-06, 1.528E-06,
     $ 1.528E-06, 1.533E-06, 1.541E-06, 1.551E-06, 1.561E-06, 1.570E-06,
     $ 1.578E-06, 1.583E-06, 1.586E-06, 1.588E-06, 1.590E-06, 1.590E-06,
     $ 1.591E-06, 1.591E-06, 1.591E-06, 1.591E-06, 1.591E-06, 1.590E-06,
     $ 1.589E-06, 1.588E-06, 1.587E-06, 1.587E-06, 1.587E-06, 1.588E-06,
     $ 1.589E-06, 1.590E-06, 1.589E-06, 1.587E-06/
C                                                                       
C      2701 TO  2800 CM-1 DATA.                                         
      DATA (SUN(I),I=  2701,  2800)/                                    
     $ 1.584E-06, 1.581E-06, 1.580E-06, 1.583E-06, 1.589E-06, 1.597E-06,
     $ 1.604E-06, 1.610E-06, 1.615E-06, 1.617E-06, 1.617E-06, 1.617E-06,
     $ 1.615E-06, 1.612E-06, 1.610E-06, 1.609E-06, 1.610E-06, 1.613E-06,
     $ 1.617E-06, 1.622E-06, 1.627E-06, 1.630E-06, 1.632E-06, 1.633E-06,
     $ 1.634E-06, 1.636E-06, 1.638E-06, 1.640E-06, 1.641E-06, 1.641E-06,
     $ 1.641E-06, 1.640E-06, 1.639E-06, 1.639E-06, 1.639E-06, 1.639E-06,
     $ 1.640E-06, 1.643E-06, 1.646E-06, 1.649E-06, 1.651E-06, 1.653E-06,
     $ 1.654E-06, 1.655E-06, 1.656E-06, 1.658E-06, 1.661E-06, 1.663E-06,
     $ 1.665E-06, 1.666E-06, 1.668E-06, 1.669E-06, 1.670E-06, 1.671E-06,
     $ 1.672E-06, 1.673E-06, 1.675E-06, 1.676E-06, 1.678E-06, 1.679E-06,
     $ 1.681E-06, 1.682E-06, 1.683E-06, 1.684E-06, 1.685E-06, 1.686E-06,
     $ 1.687E-06, 1.688E-06, 1.689E-06, 1.690E-06, 1.691E-06, 1.692E-06,
     $ 1.693E-06, 1.694E-06, 1.694E-06, 1.694E-06, 1.694E-06, 1.695E-06,
     $ 1.695E-06, 1.696E-06, 1.698E-06, 1.700E-06, 1.702E-06, 1.704E-06,
     $ 1.705E-06, 1.706E-06, 1.707E-06, 1.707E-06, 1.707E-06, 1.707E-06,
     $ 1.707E-06, 1.708E-06, 1.710E-06, 1.712E-06, 1.714E-06, 1.716E-06,
     $ 1.717E-06, 1.717E-06, 1.717E-06, 1.717E-06/
C                                                                       
C      2801 TO  2900 CM-1 DATA.                                         
      DATA (SUN(I),I=  2801,  2900)/                                    
     $ 1.718E-06, 1.720E-06, 1.723E-06, 1.725E-06, 1.727E-06, 1.727E-06,
     $ 1.727E-06, 1.726E-06, 1.725E-06, 1.725E-06, 1.726E-06, 1.728E-06,
     $ 1.730E-06, 1.734E-06, 1.737E-06, 1.740E-06, 1.742E-06, 1.744E-06,
     $ 1.745E-06, 1.746E-06, 1.747E-06, 1.747E-06, 1.747E-06, 1.746E-06,
     $ 1.746E-06, 1.746E-06, 1.747E-06, 1.748E-06, 1.750E-06, 1.752E-06,
     $ 1.755E-06, 1.757E-06, 1.759E-06, 1.760E-06, 1.761E-06, 1.762E-06,
     $ 1.762E-06, 1.763E-06, 1.764E-06, 1.766E-06, 1.767E-06, 1.769E-06,
     $ 1.770E-06, 1.771E-06, 1.773E-06, 1.774E-06, 1.775E-06, 1.776E-06,
     $ 1.778E-06, 1.779E-06, 1.781E-06, 1.782E-06, 1.783E-06, 1.784E-06,
     $ 1.784E-06, 1.785E-06, 1.786E-06, 1.787E-06, 1.788E-06, 1.789E-06,
     $ 1.789E-06, 1.790E-06, 1.791E-06, 1.792E-06, 1.794E-06, 1.795E-06,
     $ 1.797E-06, 1.798E-06, 1.800E-06, 1.801E-06, 1.802E-06, 1.804E-06,
     $ 1.804E-06, 1.805E-06, 1.805E-06, 1.805E-06, 1.805E-06, 1.806E-06,
     $ 1.807E-06, 1.808E-06, 1.810E-06, 1.812E-06, 1.814E-06, 1.815E-06,
     $ 1.817E-06, 1.819E-06, 1.821E-06, 1.822E-06, 1.823E-06, 1.824E-06,
     $ 1.825E-06, 1.826E-06, 1.827E-06, 1.828E-06, 1.829E-06, 1.831E-06,
     $ 1.832E-06, 1.833E-06, 1.835E-06, 1.836E-06/
C                                                                       
C      2901 TO  3000 CM-1 DATA.                                         
      DATA (SUN(I),I=  2901,  3000)/                                    
     $ 1.837E-06, 1.838E-06, 1.838E-06, 1.840E-06, 1.841E-06, 1.842E-06,
     $ 1.843E-06, 1.845E-06, 1.846E-06, 1.847E-06, 1.848E-06, 1.849E-06,
     $ 1.849E-06, 1.848E-06, 1.847E-06, 1.846E-06, 1.846E-06, 1.847E-06,
     $ 1.850E-06, 1.853E-06, 1.857E-06, 1.859E-06, 1.860E-06, 1.859E-06,
     $ 1.857E-06, 1.855E-06, 1.853E-06, 1.854E-06, 1.857E-06, 1.860E-06,
     $ 1.862E-06, 1.865E-06, 1.867E-06, 1.869E-06, 1.870E-06, 1.871E-06,
     $ 1.870E-06, 1.867E-06, 1.863E-06, 1.857E-06, 1.855E-06, 1.855E-06,
     $ 1.857E-06, 1.862E-06, 1.870E-06, 1.878E-06, 1.884E-06, 1.889E-06,
     $ 1.893E-06, 1.895E-06, 1.896E-06, 1.896E-06, 1.896E-06, 1.895E-06,
     $ 1.895E-06, 1.895E-06, 1.896E-06, 1.897E-06, 1.899E-06, 1.901E-06,
     $ 1.903E-06, 1.904E-06, 1.904E-06, 1.904E-06, 1.903E-06, 1.902E-06,
     $ 1.902E-06, 1.903E-06, 1.904E-06, 1.906E-06, 1.909E-06, 1.913E-06,
     $ 1.916E-06, 1.919E-06, 1.921E-06, 1.923E-06, 1.925E-06, 1.925E-06,
     $ 1.925E-06, 1.925E-06, 1.925E-06, 1.925E-06, 1.926E-06, 1.928E-06,
     $ 1.929E-06, 1.932E-06, 1.935E-06, 1.937E-06, 1.938E-06, 1.939E-06,
     $ 1.939E-06, 1.938E-06, 1.938E-06, 1.939E-06, 1.941E-06, 1.943E-06,
     $ 1.945E-06, 1.947E-06, 1.949E-06, 1.950E-06/
C                                                                       
C      3001 TO  3100 CM-1 DATA.                                         
      DATA (SUN(I),I=  3001,  3100)/                                    
     $ 1.951E-06, 1.952E-06, 1.954E-06, 1.955E-06, 1.956E-06, 1.956E-06,
     $ 1.955E-06, 1.951E-06, 1.945E-06, 1.939E-06, 1.933E-06, 1.930E-06,
     $ 1.934E-06, 1.941E-06, 1.949E-06, 1.958E-06, 1.964E-06, 1.968E-06,
     $ 1.969E-06, 1.971E-06, 1.972E-06, 1.974E-06, 1.976E-06, 1.977E-06,
     $ 1.977E-06, 1.976E-06, 1.974E-06, 1.970E-06, 1.963E-06, 1.955E-06,
     $ 1.947E-06, 1.940E-06, 1.938E-06, 1.942E-06, 1.949E-06, 1.959E-06,
     $ 1.969E-06, 1.977E-06, 1.984E-06, 1.989E-06, 1.992E-06, 1.995E-06,
     $ 1.996E-06, 1.997E-06, 1.998E-06, 1.999E-06, 2.000E-06, 2.001E-06,
     $ 2.004E-06, 2.006E-06, 2.008E-06, 2.009E-06, 2.011E-06, 2.013E-06,
     $ 2.015E-06, 2.017E-06, 2.019E-06, 2.020E-06, 2.021E-06, 2.022E-06,
     $ 2.023E-06, 2.023E-06, 2.024E-06, 2.025E-06, 2.026E-06, 2.027E-06,
     $ 2.029E-06, 2.030E-06, 2.032E-06, 2.033E-06, 2.035E-06, 2.036E-06,
     $ 2.037E-06, 2.039E-06, 2.041E-06, 2.043E-06, 2.045E-06, 2.046E-06,
     $ 2.046E-06, 2.045E-06, 2.043E-06, 2.042E-06, 2.041E-06, 2.042E-06,
     $ 2.045E-06, 2.048E-06, 2.052E-06, 2.055E-06, 2.057E-06, 2.057E-06,
     $ 2.057E-06, 2.058E-06, 2.059E-06, 2.061E-06, 2.063E-06, 2.065E-06,
     $ 2.067E-06, 2.069E-06, 2.069E-06, 2.070E-06/
C                                                                       
C      3101 TO  3200 CM-1 DATA.                                         
      DATA (SUN(I),I=  3101,  3200)/                                    
     $ 2.071E-06, 2.072E-06, 2.073E-06, 2.075E-06, 2.077E-06, 2.079E-06,
     $ 2.080E-06, 2.079E-06, 2.079E-06, 2.079E-06, 2.079E-06, 2.081E-06,
     $ 2.084E-06, 2.087E-06, 2.090E-06, 2.093E-06, 2.094E-06, 2.095E-06,
     $ 2.096E-06, 2.095E-06, 2.094E-06, 2.093E-06, 2.092E-06, 2.092E-06,
     $ 2.094E-06, 2.098E-06, 2.101E-06, 2.104E-06, 2.107E-06, 2.108E-06,
     $ 2.110E-06, 2.111E-06, 2.113E-06, 2.114E-06, 2.115E-06, 2.116E-06,
     $ 2.117E-06, 2.118E-06, 2.119E-06, 2.119E-06, 2.119E-06, 2.118E-06,
     $ 2.118E-06, 2.119E-06, 2.121E-06, 2.124E-06, 2.127E-06, 2.130E-06,
     $ 2.132E-06, 2.132E-06, 2.131E-06, 2.130E-06, 2.128E-06, 2.126E-06,
     $ 2.127E-06, 2.129E-06, 2.131E-06, 2.135E-06, 2.138E-06, 2.140E-06,
     $ 2.142E-06, 2.145E-06, 2.147E-06, 2.149E-06, 2.151E-06, 2.153E-06,
     $ 2.154E-06, 2.154E-06, 2.152E-06, 2.148E-06, 2.144E-06, 2.141E-06,
     $ 2.140E-06, 2.144E-06, 2.149E-06, 2.155E-06, 2.161E-06, 2.165E-06,
     $ 2.167E-06, 2.169E-06, 2.170E-06, 2.171E-06, 2.172E-06, 2.172E-06,
     $ 2.173E-06, 2.174E-06, 2.176E-06, 2.177E-06, 2.179E-06, 2.181E-06,
     $ 2.182E-06, 2.182E-06, 2.183E-06, 2.183E-06, 2.183E-06, 2.184E-06,
     $ 2.186E-06, 2.188E-06, 2.190E-06, 2.192E-06/
C                                                                       
C      3201 TO  3300 CM-1 DATA.                                         
      DATA (SUN(I),I=  3201,  3300)/                                    
     $ 2.193E-06, 2.194E-06, 2.195E-06, 2.195E-06, 2.193E-06, 2.190E-06,
     $ 2.184E-06, 2.178E-06, 2.173E-06, 2.172E-06, 2.175E-06, 2.183E-06,
     $ 2.192E-06, 2.201E-06, 2.208E-06, 2.212E-06, 2.214E-06, 2.215E-06,
     $ 2.216E-06, 2.217E-06, 2.219E-06, 2.221E-06, 2.222E-06, 2.221E-06,
     $ 2.220E-06, 2.219E-06, 2.218E-06, 2.218E-06, 2.220E-06, 2.224E-06,
     $ 2.227E-06, 2.230E-06, 2.233E-06, 2.234E-06, 2.234E-06, 2.234E-06,
     $ 2.235E-06, 2.235E-06, 2.235E-06, 2.235E-06, 2.236E-06, 2.236E-06,
     $ 2.237E-06, 2.239E-06, 2.242E-06, 2.244E-06, 2.247E-06, 2.250E-06,
     $ 2.252E-06, 2.254E-06, 2.256E-06, 2.257E-06, 2.258E-06, 2.259E-06,
     $ 2.260E-06, 2.260E-06, 2.260E-06, 2.259E-06, 2.257E-06, 2.257E-06,
     $ 2.258E-06, 2.259E-06, 2.261E-06, 2.265E-06, 2.268E-06, 2.271E-06,
     $ 2.273E-06, 2.274E-06, 2.274E-06, 2.274E-06, 2.275E-06, 2.276E-06,
     $ 2.277E-06, 2.280E-06, 2.283E-06, 2.285E-06, 2.287E-06, 2.289E-06,
     $ 2.290E-06, 2.290E-06, 2.289E-06, 2.288E-06, 2.287E-06, 2.284E-06,
     $ 2.281E-06, 2.274E-06, 2.266E-06, 2.257E-06, 2.249E-06, 2.246E-06,
     $ 2.249E-06, 2.257E-06, 2.267E-06, 2.277E-06, 2.286E-06, 2.292E-06,
     $ 2.297E-06, 2.302E-06, 2.306E-06, 2.310E-06/
C                                                                       
C      3301 TO  3400 CM-1 DATA.                                         
      DATA (SUN(I),I=  3301,  3400)/                                    
     $ 2.313E-06, 2.315E-06, 2.317E-06, 2.318E-06, 2.320E-06, 2.321E-06,
     $ 2.322E-06, 2.324E-06, 2.325E-06, 2.325E-06, 2.326E-06, 2.328E-06,
     $ 2.330E-06, 2.331E-06, 2.333E-06, 2.335E-06, 2.337E-06, 2.339E-06,
     $ 2.341E-06, 2.342E-06, 2.343E-06, 2.343E-06, 2.344E-06, 2.345E-06,
     $ 2.346E-06, 2.348E-06, 2.350E-06, 2.352E-06, 2.352E-06, 2.351E-06,
     $ 2.350E-06, 2.349E-06, 2.347E-06, 2.347E-06, 2.348E-06, 2.349E-06,
     $ 2.352E-06, 2.356E-06, 2.360E-06, 2.363E-06, 2.365E-06, 2.367E-06,
     $ 2.368E-06, 2.369E-06, 2.370E-06, 2.371E-06, 2.373E-06, 2.375E-06,
     $ 2.378E-06, 2.380E-06, 2.382E-06, 2.383E-06, 2.383E-06, 2.383E-06,
     $ 2.384E-06, 2.384E-06, 2.385E-06, 2.387E-06, 2.390E-06, 2.392E-06,
     $ 2.394E-06, 2.396E-06, 2.397E-06, 2.398E-06, 2.398E-06, 2.399E-06,
     $ 2.401E-06, 2.402E-06, 2.404E-06, 2.406E-06, 2.407E-06, 2.409E-06,
     $ 2.410E-06, 2.410E-06, 2.411E-06, 2.411E-06, 2.412E-06, 2.413E-06,
     $ 2.414E-06, 2.416E-06, 2.417E-06, 2.418E-06, 2.419E-06, 2.419E-06,
     $ 2.420E-06, 2.421E-06, 2.422E-06, 2.423E-06, 2.424E-06, 2.425E-06,
     $ 2.425E-06, 2.424E-06, 2.424E-06, 2.424E-06, 2.426E-06, 2.427E-06,
     $ 2.430E-06, 2.433E-06, 2.436E-06, 2.438E-06/
C                                                                       
C      3401 TO  3500 CM-1 DATA.                                         
      DATA (SUN(I),I=  3401,  3500)/                                    
     $ 2.441E-06, 2.443E-06, 2.444E-06, 2.445E-06, 2.446E-06, 2.448E-06,
     $ 2.449E-06, 2.451E-06, 2.452E-06, 2.453E-06, 2.453E-06, 2.453E-06,
     $ 2.452E-06, 2.451E-06, 2.451E-06, 2.451E-06, 2.450E-06, 2.450E-06,
     $ 2.452E-06, 2.453E-06, 2.456E-06, 2.461E-06, 2.466E-06, 2.470E-06,
     $ 2.473E-06, 2.475E-06, 2.475E-06, 2.476E-06, 2.476E-06, 2.476E-06,
     $ 2.478E-06, 2.480E-06, 2.483E-06, 2.485E-06, 2.487E-06, 2.489E-06,
     $ 2.489E-06, 2.489E-06, 2.489E-06, 2.489E-06, 2.489E-06, 2.491E-06,
     $ 2.494E-06, 2.496E-06, 2.498E-06, 2.499E-06, 2.499E-06, 2.500E-06,
     $ 2.500E-06, 2.501E-06, 2.503E-06, 2.505E-06, 2.507E-06, 2.509E-06,
     $ 2.512E-06, 2.513E-06, 2.514E-06, 2.514E-06, 2.514E-06, 2.513E-06,
     $ 2.512E-06, 2.512E-06, 2.514E-06, 2.516E-06, 2.519E-06, 2.522E-06,
     $ 2.524E-06, 2.526E-06, 2.526E-06, 2.527E-06, 2.527E-06, 2.527E-06,
     $ 2.526E-06, 2.525E-06, 2.523E-06, 2.520E-06, 2.514E-06, 2.508E-06,
     $ 2.502E-06, 2.497E-06, 2.496E-06, 2.498E-06, 2.503E-06, 2.510E-06,
     $ 2.518E-06, 2.525E-06, 2.532E-06, 2.539E-06, 2.545E-06, 2.550E-06,
     $ 2.554E-06, 2.556E-06, 2.557E-06, 2.558E-06, 2.559E-06, 2.560E-06,
     $ 2.561E-06, 2.564E-06, 2.566E-06, 2.568E-06/
C                                                                       
C      3501 TO  3600 CM-1 DATA.                                         
      DATA (SUN(I),I=  3501,  3600)/                                    
     $ 2.569E-06, 2.570E-06, 2.570E-06, 2.570E-06, 2.569E-06, 2.569E-06,
     $ 2.570E-06, 2.572E-06, 2.575E-06, 2.578E-06, 2.581E-06, 2.583E-06,
     $ 2.585E-06, 2.585E-06, 2.585E-06, 2.583E-06, 2.581E-06, 2.580E-06,
     $ 2.580E-06, 2.581E-06, 2.584E-06, 2.589E-06, 2.594E-06, 2.599E-06,
     $ 2.603E-06, 2.605E-06, 2.606E-06, 2.607E-06, 2.608E-06, 2.609E-06,
     $ 2.610E-06, 2.610E-06, 2.611E-06, 2.612E-06, 2.612E-06, 2.613E-06,
     $ 2.614E-06, 2.615E-06, 2.616E-06, 2.617E-06, 2.618E-06, 2.619E-06,
     $ 2.621E-06, 2.623E-06, 2.625E-06, 2.627E-06, 2.628E-06, 2.630E-06,
     $ 2.631E-06, 2.631E-06, 2.632E-06, 2.633E-06, 2.635E-06, 2.637E-06,
     $ 2.639E-06, 2.641E-06, 2.642E-06, 2.644E-06, 2.645E-06, 2.646E-06,
     $ 2.647E-06, 2.647E-06, 2.647E-06, 2.647E-06, 2.647E-06, 2.647E-06,
     $ 2.649E-06, 2.651E-06, 2.653E-06, 2.655E-06, 2.656E-06, 2.658E-06,
     $ 2.659E-06, 2.661E-06, 2.664E-06, 2.666E-06, 2.669E-06, 2.670E-06,
     $ 2.672E-06, 2.673E-06, 2.674E-06, 2.675E-06, 2.677E-06, 2.678E-06,
     $ 2.679E-06, 2.680E-06, 2.680E-06, 2.679E-06, 2.678E-06, 2.677E-06,
     $ 2.676E-06, 2.675E-06, 2.675E-06, 2.676E-06, 2.679E-06, 2.683E-06,
     $ 2.686E-06, 2.689E-06, 2.690E-06, 2.690E-06/
C                                                                       
C      3601 TO  3700 CM-1 DATA.                                         
      DATA (SUN(I),I=  3601,  3700)/                                    
     $ 2.689E-06, 2.687E-06, 2.686E-06, 2.686E-06, 2.686E-06, 2.688E-06,
     $ 2.692E-06, 2.696E-06, 2.701E-06, 2.704E-06, 2.706E-06, 2.707E-06,
     $ 2.706E-06, 2.704E-06, 2.702E-06, 2.700E-06, 2.700E-06, 2.698E-06,
     $ 2.696E-06, 2.694E-06, 2.691E-06, 2.687E-06, 2.683E-06, 2.681E-06,
     $ 2.680E-06, 2.682E-06, 2.687E-06, 2.694E-06, 2.702E-06, 2.711E-06,
     $ 2.719E-06, 2.726E-06, 2.731E-06, 2.735E-06, 2.737E-06, 2.738E-06,
     $ 2.740E-06, 2.741E-06, 2.744E-06, 2.747E-06, 2.749E-06, 2.751E-06,
     $ 2.753E-06, 2.755E-06, 2.756E-06, 2.756E-06, 2.755E-06, 2.753E-06,
     $ 2.751E-06, 2.749E-06, 2.749E-06, 2.752E-06, 2.756E-06, 2.760E-06,
     $ 2.764E-06, 2.767E-06, 2.769E-06, 2.770E-06, 2.771E-06, 2.773E-06,
     $ 2.774E-06, 2.774E-06, 2.774E-06, 2.772E-06, 2.770E-06, 2.768E-06,
     $ 2.767E-06, 2.769E-06, 2.773E-06, 2.777E-06, 2.781E-06, 2.785E-06,
     $ 2.787E-06, 2.788E-06, 2.789E-06, 2.789E-06, 2.789E-06, 2.790E-06,
     $ 2.790E-06, 2.792E-06, 2.795E-06, 2.798E-06, 2.801E-06, 2.802E-06,
     $ 2.801E-06, 2.800E-06, 2.799E-06, 2.799E-06, 2.801E-06, 2.803E-06,
     $ 2.805E-06, 2.805E-06, 2.805E-06, 2.805E-06, 2.808E-06, 2.812E-06,
     $ 2.817E-06, 2.821E-06, 2.824E-06, 2.825E-06/
C                                                                       
C      3701 TO  3800 CM-1 DATA.                                         
      DATA (SUN(I),I=  3701,  3800)/                                    
     $ 2.825E-06, 2.826E-06, 2.827E-06, 2.829E-06, 2.829E-06, 2.830E-06,
     $ 2.828E-06, 2.827E-06, 2.826E-06, 2.826E-06, 2.827E-06, 2.829E-06,
     $ 2.831E-06, 2.834E-06, 2.837E-06, 2.840E-06, 2.842E-06, 2.844E-06,
     $ 2.846E-06, 2.848E-06, 2.849E-06, 2.851E-06, 2.853E-06, 2.854E-06,
     $ 2.856E-06, 2.858E-06, 2.859E-06, 2.859E-06, 2.860E-06, 2.860E-06,
     $ 2.860E-06, 2.859E-06, 2.856E-06, 2.852E-06, 2.848E-06, 2.845E-06,
     $ 2.845E-06, 2.848E-06, 2.854E-06, 2.861E-06, 2.868E-06, 2.874E-06,
     $ 2.878E-06, 2.881E-06, 2.882E-06, 2.880E-06, 2.876E-06, 2.867E-06,
     $ 2.855E-06, 2.843E-06, 2.836E-06, 2.832E-06, 2.835E-06, 2.846E-06,
     $ 2.859E-06, 2.871E-06, 2.885E-06, 2.897E-06, 2.906E-06, 2.913E-06,
     $ 2.918E-06, 2.917E-06, 2.911E-06, 2.902E-06, 2.894E-06, 2.887E-06,
     $ 2.888E-06, 2.896E-06, 2.908E-06, 2.919E-06, 2.929E-06, 2.936E-06,
     $ 2.939E-06, 2.940E-06, 2.941E-06, 2.941E-06, 2.942E-06, 2.944E-06,
     $ 2.946E-06, 2.947E-06, 2.947E-06, 2.947E-06, 2.942E-06, 2.933E-06,
     $ 2.924E-06, 2.917E-06, 2.909E-06, 2.909E-06, 2.921E-06, 2.938E-06,
     $ 2.953E-06, 2.968E-06, 2.979E-06, 2.984E-06, 2.985E-06, 2.986E-06,
     $ 2.987E-06, 2.988E-06, 2.987E-06, 2.984E-06/
C                                                                       
C      3801 TO  3900 CM-1 DATA.                                         
      DATA (SUN(I),I=  3801,  3900)/                                    
     $ 2.979E-06, 2.970E-06, 2.954E-06, 2.926E-06, 2.890E-06, 2.851E-06,
     $ 2.817E-06, 2.796E-06, 2.797E-06, 2.820E-06, 2.853E-06, 2.889E-06,
     $ 2.922E-06, 2.949E-06, 2.965E-06, 2.975E-06, 2.983E-06, 2.988E-06,
     $ 2.991E-06, 2.994E-06, 3.000E-06, 3.005E-06, 3.010E-06, 3.013E-06,
     $ 3.014E-06, 3.014E-06, 3.014E-06, 3.013E-06, 3.014E-06, 3.015E-06,
     $ 3.016E-06, 3.018E-06, 3.020E-06, 3.022E-06, 3.023E-06, 3.024E-06,
     $ 3.025E-06, 3.025E-06, 3.025E-06, 3.026E-06, 3.026E-06, 3.025E-06,
     $ 3.024E-06, 3.023E-06, 3.022E-06, 3.021E-06, 3.020E-06, 3.020E-06,
     $ 3.020E-06, 3.019E-06, 3.018E-06, 3.017E-06, 3.017E-06, 3.016E-06,
     $ 3.017E-06, 3.019E-06, 3.021E-06, 3.025E-06, 3.029E-06, 3.032E-06,
     $ 3.034E-06, 3.032E-06, 3.024E-06, 3.011E-06, 2.996E-06, 2.979E-06,
     $ 2.965E-06, 2.961E-06, 2.965E-06, 2.974E-06, 2.987E-06, 3.002E-06,
     $ 3.015E-06, 3.028E-06, 3.039E-06, 3.049E-06, 3.057E-06, 3.062E-06,
     $ 3.064E-06, 3.065E-06, 3.066E-06, 3.065E-06, 3.064E-06, 3.065E-06,
     $ 3.065E-06, 3.065E-06, 3.065E-06, 3.065E-06, 3.063E-06, 3.061E-06,
     $ 3.057E-06, 3.053E-06, 3.049E-06, 3.046E-06, 3.044E-06, 3.045E-06,
     $ 3.049E-06, 3.052E-06, 3.057E-06, 3.063E-06/
C                                                                       
C      3901 TO  4000 CM-1 DATA.                                         
      DATA (SUN(I),I=  3901,  4000)/                                    
     $ 3.067E-06, 3.068E-06, 3.068E-06, 3.067E-06, 3.065E-06, 3.064E-06,
     $ 3.063E-06, 3.061E-06, 3.060E-06, 3.059E-06, 3.062E-06, 3.066E-06,
     $ 3.072E-06, 3.076E-06, 3.079E-06, 3.077E-06, 3.074E-06, 3.073E-06,
     $ 3.075E-06, 3.078E-06, 3.083E-06, 3.087E-06, 3.088E-06, 3.088E-06,
     $ 3.089E-06, 3.090E-06, 3.093E-06, 3.099E-06, 3.103E-06, 3.099E-06,
     $ 3.092E-06, 3.083E-06, 3.072E-06, 3.066E-06, 3.069E-06, 3.077E-06,
     $ 3.087E-06, 3.098E-06, 3.108E-06, 3.115E-06, 3.119E-06, 3.124E-06,
     $ 3.129E-06, 3.132E-06, 3.136E-06, 3.140E-06, 3.144E-06, 3.147E-06,
     $ 3.152E-06, 3.155E-06, 3.157E-06, 3.158E-06, 3.158E-06, 3.158E-06,
     $ 3.159E-06, 3.160E-06, 3.161E-06, 3.163E-06, 3.165E-06, 3.166E-06,
     $ 3.168E-06, 3.170E-06, 3.173E-06, 3.176E-06, 3.178E-06, 3.180E-06,
     $ 3.180E-06, 3.178E-06, 3.174E-06, 3.170E-06, 3.168E-06, 3.167E-06,
     $ 3.169E-06, 3.172E-06, 3.175E-06, 3.176E-06, 3.177E-06, 3.176E-06,
     $ 3.174E-06, 3.172E-06, 3.171E-06, 3.169E-06, 3.169E-06, 3.171E-06,
     $ 3.175E-06, 3.180E-06, 3.188E-06, 3.197E-06, 3.206E-06, 3.212E-06,
     $ 3.217E-06, 3.219E-06, 3.221E-06, 3.223E-06, 3.226E-06, 3.228E-06,
     $ 3.230E-06, 3.231E-06, 3.230E-06, 3.228E-06/
C                                                                       
C      4001 TO  4100 CM-1 DATA.                                         
      DATA (SUN(I),I=  4001,  4100)/                                    
     $ 3.226E-06, 3.224E-06, 3.221E-06, 3.219E-06, 3.218E-06, 3.218E-06,
     $ 3.219E-06, 3.221E-06, 3.223E-06, 3.225E-06, 3.227E-06, 3.231E-06,
     $ 3.234E-06, 3.238E-06, 3.241E-06, 3.241E-06, 3.234E-06, 3.222E-06,
     $ 3.210E-06, 3.199E-06, 3.192E-06, 3.197E-06, 3.207E-06, 3.212E-06,
     $ 3.215E-06, 3.212E-06, 3.199E-06, 3.187E-06, 3.181E-06, 3.180E-06,
     $ 3.182E-06, 3.194E-06, 3.209E-06, 3.225E-06, 3.243E-06, 3.261E-06,
     $ 3.273E-06, 3.278E-06, 3.278E-06, 3.274E-06, 3.269E-06, 3.263E-06,
     $ 3.259E-06, 3.256E-06, 3.253E-06, 3.249E-06, 3.245E-06, 3.244E-06,
     $ 3.248E-06, 3.258E-06, 3.269E-06, 3.280E-06, 3.289E-06, 3.294E-06,
     $ 3.295E-06, 3.296E-06, 3.298E-06, 3.301E-06, 3.303E-06, 3.304E-06,
     $ 3.306E-06, 3.306E-06, 3.307E-06, 3.307E-06, 3.304E-06, 3.295E-06,
     $ 3.284E-06, 3.270E-06, 3.256E-06, 3.247E-06, 3.248E-06, 3.254E-06,
     $ 3.264E-06, 3.276E-06, 3.283E-06, 3.284E-06, 3.282E-06, 3.278E-06,
     $ 3.275E-06, 3.276E-06, 3.278E-06, 3.281E-06, 3.281E-06, 3.280E-06,
     $ 3.278E-06, 3.279E-06, 3.284E-06, 3.295E-06, 3.311E-06, 3.327E-06,
     $ 3.340E-06, 3.350E-06, 3.355E-06, 3.357E-06, 3.358E-06, 3.359E-06,
     $ 3.359E-06, 3.357E-06, 3.354E-06, 3.350E-06/
C                                                                       
C      4101 TO  4200 CM-1 DATA.                                         
      DATA (SUN(I),I=  4101,  4200)/                                    
     $ 3.345E-06, 3.341E-06, 3.339E-06, 3.338E-06, 3.337E-06, 3.338E-06,
     $ 3.341E-06, 3.347E-06, 3.355E-06, 3.364E-06, 3.372E-06, 3.376E-06,
     $ 3.378E-06, 3.378E-06, 3.378E-06, 3.377E-06, 3.376E-06, 3.375E-06,
     $ 3.374E-06, 3.372E-06, 3.371E-06, 3.370E-06, 3.369E-06, 3.370E-06,
     $ 3.372E-06, 3.375E-06, 3.379E-06, 3.383E-06, 3.386E-06, 3.388E-06,
     $ 3.387E-06, 3.386E-06, 3.384E-06, 3.377E-06, 3.364E-06, 3.348E-06,
     $ 3.328E-06, 3.306E-06, 3.294E-06, 3.296E-06, 3.310E-06, 3.332E-06,
     $ 3.363E-06, 3.392E-06, 3.413E-06, 3.426E-06, 3.434E-06, 3.435E-06,
     $ 3.435E-06, 3.434E-06, 3.434E-06, 3.434E-06, 3.435E-06, 3.435E-06,
     $ 3.434E-06, 3.434E-06, 3.435E-06, 3.436E-06, 3.439E-06, 3.442E-06,
     $ 3.445E-06, 3.445E-06, 3.443E-06, 3.441E-06, 3.437E-06, 3.435E-06,
     $ 3.436E-06, 3.439E-06, 3.443E-06, 3.447E-06, 3.450E-06, 3.450E-06,
     $ 3.450E-06, 3.449E-06, 3.447E-06, 3.446E-06, 3.444E-06, 3.443E-06,
     $ 3.442E-06, 3.444E-06, 3.445E-06, 3.447E-06, 3.449E-06, 3.449E-06,
     $ 3.446E-06, 3.440E-06, 3.431E-06, 3.419E-06, 3.403E-06, 3.387E-06,
     $ 3.374E-06, 3.362E-06, 3.355E-06, 3.359E-06, 3.372E-06, 3.392E-06,
     $ 3.420E-06, 3.450E-06, 3.473E-06, 3.490E-06/
C                                                                       
C      4201 TO  4300 CM-1 DATA.                                         
      DATA (SUN(I),I=  4201,  4300)/                                    
     $ 3.499E-06, 3.503E-06, 3.504E-06, 3.505E-06, 3.507E-06, 3.506E-06,
     $ 3.501E-06, 3.489E-06, 3.473E-06, 3.457E-06, 3.444E-06, 3.440E-06,
     $ 3.449E-06, 3.463E-06, 3.477E-06, 3.489E-06, 3.497E-06, 3.498E-06,
     $ 3.498E-06, 3.501E-06, 3.505E-06, 3.510E-06, 3.516E-06, 3.520E-06,
     $ 3.522E-06, 3.523E-06, 3.524E-06, 3.523E-06, 3.523E-06, 3.524E-06,
     $ 3.524E-06, 3.524E-06, 3.524E-06, 3.524E-06, 3.523E-06, 3.521E-06,
     $ 3.518E-06, 3.513E-06, 3.507E-06, 3.501E-06, 3.494E-06, 3.491E-06,
     $ 3.490E-06, 3.490E-06, 3.488E-06, 3.483E-06, 3.474E-06, 3.466E-06,
     $ 3.461E-06, 3.463E-06, 3.476E-06, 3.498E-06, 3.522E-06, 3.544E-06,
     $ 3.560E-06, 3.570E-06, 3.574E-06, 3.575E-06, 3.575E-06, 3.575E-06,
     $ 3.575E-06, 3.575E-06, 3.576E-06, 3.578E-06, 3.580E-06, 3.582E-06,
     $ 3.585E-06, 3.588E-06, 3.590E-06, 3.592E-06, 3.590E-06, 3.585E-06,
     $ 3.576E-06, 3.568E-06, 3.561E-06, 3.558E-06, 3.562E-06, 3.567E-06,
     $ 3.570E-06, 3.574E-06, 3.574E-06, 3.574E-06, 3.576E-06, 3.580E-06,
     $ 3.584E-06, 3.587E-06, 3.589E-06, 3.589E-06, 3.589E-06, 3.591E-06,
     $ 3.594E-06, 3.597E-06, 3.599E-06, 3.599E-06, 3.597E-06, 3.591E-06,
     $ 3.582E-06, 3.572E-06, 3.562E-06, 3.554E-06/
C                                                                       
C      4301 TO  4400 CM-1 DATA.                                         
      DATA (SUN(I),I=  4301,  4400)/                                    
     $ 3.545E-06, 3.540E-06, 3.541E-06, 3.547E-06, 3.561E-06, 3.585E-06,
     $ 3.610E-06, 3.629E-06, 3.642E-06, 3.647E-06, 3.644E-06, 3.638E-06,
     $ 3.634E-06, 3.634E-06, 3.635E-06, 3.636E-06, 3.640E-06, 3.643E-06,
     $ 3.646E-06, 3.651E-06, 3.658E-06, 3.664E-06, 3.669E-06, 3.674E-06,
     $ 3.676E-06, 3.677E-06, 3.676E-06, 3.675E-06, 3.674E-06, 3.674E-06,
     $ 3.676E-06, 3.679E-06, 3.682E-06, 3.685E-06, 3.687E-06, 3.687E-06,
     $ 3.687E-06, 3.686E-06, 3.686E-06, 3.686E-06, 3.688E-06, 3.689E-06,
     $ 3.691E-06, 3.691E-06, 3.690E-06, 3.689E-06, 3.687E-06, 3.685E-06,
     $ 3.681E-06, 3.674E-06, 3.666E-06, 3.657E-06, 3.650E-06, 3.647E-06,
     $ 3.646E-06, 3.644E-06, 3.646E-06, 3.650E-06, 3.656E-06, 3.666E-06,
     $ 3.683E-06, 3.699E-06, 3.712E-06, 3.723E-06, 3.730E-06, 3.733E-06,
     $ 3.734E-06, 3.736E-06, 3.737E-06, 3.737E-06, 3.736E-06, 3.735E-06,
     $ 3.733E-06, 3.731E-06, 3.729E-06, 3.727E-06, 3.726E-06, 3.721E-06,
     $ 3.709E-06, 3.695E-06, 3.682E-06, 3.671E-06, 3.669E-06, 3.681E-06,
     $ 3.702E-06, 3.722E-06, 3.741E-06, 3.755E-06, 3.762E-06, 3.764E-06,
     $ 3.764E-06, 3.762E-06, 3.758E-06, 3.755E-06, 3.752E-06, 3.751E-06,
     $ 3.755E-06, 3.759E-06, 3.762E-06, 3.764E-06/
C                                                                       
C      4401 TO  4500 CM-1 DATA.                                         
      DATA (SUN(I),I=  4401,  4500)/                                    
     $ 3.764E-06, 3.762E-06, 3.761E-06, 3.762E-06, 3.765E-06, 3.768E-06,
     $ 3.771E-06, 3.774E-06, 3.775E-06, 3.773E-06, 3.770E-06, 3.768E-06,
     $ 3.766E-06, 3.765E-06, 3.764E-06, 3.761E-06, 3.756E-06, 3.750E-06,
     $ 3.744E-06, 3.743E-06, 3.749E-06, 3.761E-06, 3.774E-06, 3.786E-06,
     $ 3.796E-06, 3.800E-06, 3.801E-06, 3.801E-06, 3.799E-06, 3.796E-06,
     $ 3.792E-06, 3.786E-06, 3.779E-06, 3.774E-06, 3.770E-06, 3.770E-06,
     $ 3.777E-06, 3.788E-06, 3.798E-06, 3.809E-06, 3.818E-06, 3.822E-06,
     $ 3.824E-06, 3.823E-06, 3.820E-06, 3.817E-06, 3.813E-06, 3.812E-06,
     $ 3.815E-06, 3.823E-06, 3.832E-06, 3.840E-06, 3.847E-06, 3.850E-06,
     $ 3.849E-06, 3.846E-06, 3.844E-06, 3.842E-06, 3.843E-06, 3.846E-06,
     $ 3.850E-06, 3.851E-06, 3.847E-06, 3.840E-06, 3.834E-06, 3.830E-06,
     $ 3.830E-06, 3.837E-06, 3.849E-06, 3.861E-06, 3.873E-06, 3.882E-06,
     $ 3.889E-06, 3.893E-06, 3.896E-06, 3.899E-06, 3.901E-06, 3.902E-06,
     $ 3.901E-06, 3.900E-06, 3.899E-06, 3.899E-06, 3.899E-06, 3.899E-06,
     $ 3.901E-06, 3.901E-06, 3.897E-06, 3.891E-06, 3.885E-06, 3.879E-06,
     $ 3.876E-06, 3.879E-06, 3.889E-06, 3.901E-06, 3.912E-06, 3.922E-06,
     $ 3.930E-06, 3.933E-06, 3.935E-06, 3.937E-06/
C                                                                       
C      4501 TO  4600 CM-1 DATA.                                         
      DATA (SUN(I),I=  4501,  4600)/                                    
     $ 3.940E-06, 3.942E-06, 3.945E-06, 3.946E-06, 3.947E-06, 3.945E-06,
     $ 3.939E-06, 3.932E-06, 3.926E-06, 3.921E-06, 3.922E-06, 3.928E-06,
     $ 3.937E-06, 3.946E-06, 3.954E-06, 3.961E-06, 3.964E-06, 3.967E-06,
     $ 3.969E-06, 3.971E-06, 3.973E-06, 3.973E-06, 3.968E-06, 3.960E-06,
     $ 3.951E-06, 3.937E-06, 3.919E-06, 3.903E-06, 3.887E-06, 3.872E-06,
     $ 3.865E-06, 3.872E-06, 3.889E-06, 3.916E-06, 3.946E-06, 3.971E-06,
     $ 3.988E-06, 3.997E-06, 3.999E-06, 3.998E-06, 3.998E-06, 3.999E-06,
     $ 4.000E-06, 4.003E-06, 4.005E-06, 4.008E-06, 4.011E-06, 4.013E-06,
     $ 4.015E-06, 4.016E-06, 4.016E-06, 4.016E-06, 4.017E-06, 4.018E-06,
     $ 4.020E-06, 4.022E-06, 4.024E-06, 4.026E-06, 4.028E-06, 4.030E-06,
     $ 4.031E-06, 4.030E-06, 4.027E-06, 4.020E-06, 4.006E-06, 3.989E-06,
     $ 3.975E-06, 3.964E-06, 3.959E-06, 3.969E-06, 3.989E-06, 4.010E-06,
     $ 4.029E-06, 4.045E-06, 4.052E-06, 4.054E-06, 4.051E-06, 4.044E-06,
     $ 4.034E-06, 4.026E-06, 4.018E-06, 4.016E-06, 4.024E-06, 4.037E-06,
     $ 4.046E-06, 4.046E-06, 4.040E-06, 4.028E-06, 4.013E-06, 4.002E-06,
     $ 4.004E-06, 4.013E-06, 4.021E-06, 4.032E-06, 4.044E-06, 4.052E-06,
     $ 4.058E-06, 4.063E-06, 4.067E-06, 4.068E-06/
C                                                                       
C      4601 TO  4700 CM-1 DATA.                                         
      DATA (SUN(I),I=  4601,  4700)/                                    
     $ 4.067E-06, 4.065E-06, 4.063E-06, 4.060E-06, 4.057E-06, 4.053E-06,
     $ 4.047E-06, 4.038E-06, 4.025E-06, 4.006E-06, 3.975E-06, 3.929E-06,
     $ 3.869E-06, 3.806E-06, 3.751E-06, 3.716E-06, 3.718E-06, 3.757E-06,
     $ 3.818E-06, 3.887E-06, 3.951E-06, 3.999E-06, 4.031E-06, 4.050E-06,
     $ 4.063E-06, 4.074E-06, 4.084E-06, 4.093E-06, 4.100E-06, 4.106E-06,
     $ 4.111E-06, 4.116E-06, 4.120E-06, 4.124E-06, 4.127E-06, 4.130E-06,
     $ 4.131E-06, 4.131E-06, 4.131E-06, 4.130E-06, 4.129E-06, 4.127E-06,
     $ 4.126E-06, 4.126E-06, 4.127E-06, 4.131E-06, 4.136E-06, 4.139E-06,
     $ 4.143E-06, 4.146E-06, 4.147E-06, 4.149E-06, 4.150E-06, 4.151E-06,
     $ 4.149E-06, 4.146E-06, 4.141E-06, 4.135E-06, 4.128E-06, 4.126E-06,
     $ 4.127E-06, 4.131E-06, 4.137E-06, 4.145E-06, 4.151E-06, 4.156E-06,
     $ 4.160E-06, 4.164E-06, 4.166E-06, 4.168E-06, 4.168E-06, 4.168E-06,
     $ 4.168E-06, 4.168E-06, 4.170E-06, 4.172E-06, 4.170E-06, 4.163E-06,
     $ 4.152E-06, 4.140E-06, 4.129E-06, 4.124E-06, 4.132E-06, 4.145E-06,
     $ 4.159E-06, 4.172E-06, 4.183E-06, 4.188E-06, 4.191E-06, 4.193E-06,
     $ 4.193E-06, 4.192E-06, 4.190E-06, 4.188E-06, 4.186E-06, 4.187E-06,
     $ 4.188E-06, 4.186E-06, 4.183E-06, 4.179E-06/
C                                                                       
C      4701 TO  4800 CM-1 DATA.                                         
      DATA (SUN(I),I=  4701,  4800)/                                    
     $ 4.174E-06, 4.170E-06, 4.169E-06, 4.167E-06, 4.164E-06, 4.160E-06,
     $ 4.157E-06, 4.157E-06, 4.160E-06, 4.166E-06, 4.175E-06, 4.181E-06,
     $ 4.184E-06, 4.183E-06, 4.182E-06, 4.179E-06, 4.177E-06, 4.181E-06,
     $ 4.185E-06, 4.185E-06, 4.181E-06, 4.178E-06, 4.172E-06, 4.168E-06,
     $ 4.175E-06, 4.187E-06, 4.200E-06, 4.213E-06, 4.221E-06, 4.224E-06,
     $ 4.224E-06, 4.223E-06, 4.223E-06, 4.224E-06, 4.223E-06, 4.218E-06,
     $ 4.211E-06, 4.203E-06, 4.195E-06, 4.193E-06, 4.199E-06, 4.210E-06,
     $ 4.222E-06, 4.234E-06, 4.243E-06, 4.248E-06, 4.251E-06, 4.253E-06,
     $ 4.254E-06, 4.252E-06, 4.248E-06, 4.243E-06, 4.238E-06, 4.234E-06,
     $ 4.231E-06, 4.233E-06, 4.236E-06, 4.239E-06, 4.242E-06, 4.243E-06,
     $ 4.243E-06, 4.244E-06, 4.243E-06, 4.243E-06, 4.243E-06, 4.242E-06,
     $ 4.240E-06, 4.236E-06, 4.231E-06, 4.223E-06, 4.216E-06, 4.211E-06,
     $ 4.210E-06, 4.211E-06, 4.210E-06, 4.207E-06, 4.200E-06, 4.193E-06,
     $ 4.189E-06, 4.197E-06, 4.214E-06, 4.235E-06, 4.256E-06, 4.274E-06,
     $ 4.285E-06, 4.290E-06, 4.292E-06, 4.293E-06, 4.295E-06, 4.296E-06,
     $ 4.297E-06, 4.298E-06, 4.297E-06, 4.293E-06, 4.287E-06, 4.277E-06,
     $ 4.266E-06, 4.257E-06, 4.252E-06, 4.254E-06/
C                                                                       
C      4801 TO  4900 CM-1 DATA.                                         
      DATA (SUN(I),I=  4801,  4900)/                                    
     $ 4.262E-06, 4.272E-06, 4.280E-06, 4.285E-06, 4.285E-06, 4.282E-06,
     $ 4.282E-06, 4.283E-06, 4.289E-06, 4.300E-06, 4.313E-06, 4.322E-06,
     $ 4.330E-06, 4.336E-06, 4.339E-06, 4.341E-06, 4.344E-06, 4.346E-06,
     $ 4.349E-06, 4.351E-06, 4.351E-06, 4.349E-06, 4.345E-06, 4.341E-06,
     $ 4.333E-06, 4.322E-06, 4.311E-06, 4.304E-06, 4.298E-06, 4.299E-06,
     $ 4.312E-06, 4.328E-06, 4.342E-06, 4.355E-06, 4.365E-06, 4.371E-06,
     $ 4.375E-06, 4.380E-06, 4.385E-06, 4.387E-06, 4.379E-06, 4.360E-06,
     $ 4.337E-06, 4.314E-06, 4.296E-06, 4.294E-06, 4.311E-06, 4.330E-06,
     $ 4.343E-06, 4.352E-06, 4.353E-06, 4.349E-06, 4.353E-06, 4.365E-06,
     $ 4.378E-06, 4.391E-06, 4.402E-06, 4.408E-06, 4.412E-06, 4.417E-06,
     $ 4.421E-06, 4.425E-06, 4.429E-06, 4.431E-06, 4.432E-06, 4.431E-06,
     $ 4.428E-06, 4.422E-06, 4.416E-06, 4.410E-06, 4.407E-06, 4.408E-06,
     $ 4.415E-06, 4.425E-06, 4.435E-06, 4.445E-06, 4.454E-06, 4.461E-06,
     $ 4.465E-06, 4.467E-06, 4.468E-06, 4.468E-06, 4.468E-06, 4.471E-06,
     $ 4.477E-06, 4.483E-06, 4.489E-06, 4.494E-06, 4.498E-06, 4.500E-06,
     $ 4.502E-06, 4.504E-06, 4.505E-06, 4.504E-06, 4.501E-06, 4.499E-06,
     $ 4.496E-06, 4.496E-06, 4.499E-06, 4.504E-06/
C                                                                       
C      4901 TO  5000 CM-1 DATA.                                         
      DATA (SUN(I),I=  4901,  5000)/                                    
     $ 4.502E-06, 4.488E-06, 4.469E-06, 4.447E-06, 4.427E-06, 4.421E-06,
     $ 4.436E-06, 4.462E-06, 4.485E-06, 4.499E-06, 4.502E-06, 4.495E-06,
     $ 4.484E-06, 4.482E-06, 4.495E-06, 4.515E-06, 4.535E-06, 4.552E-06,
     $ 4.562E-06, 4.558E-06, 4.545E-06, 4.528E-06, 4.508E-06, 4.492E-06,
     $ 4.482E-06, 4.483E-06, 4.494E-06, 4.511E-06, 4.529E-06, 4.548E-06,
     $ 4.564E-06, 4.575E-06, 4.581E-06, 4.586E-06, 4.585E-06, 4.582E-06,
     $ 4.579E-06, 4.576E-06, 4.576E-06, 4.578E-06, 4.582E-06, 4.583E-06,
     $ 4.577E-06, 4.563E-06, 4.545E-06, 4.526E-06, 4.513E-06, 4.511E-06,
     $ 4.525E-06, 4.547E-06, 4.573E-06, 4.597E-06, 4.614E-06, 4.623E-06,
     $ 4.626E-06, 4.626E-06, 4.626E-06, 4.627E-06, 4.628E-06, 4.630E-06,
     $ 4.630E-06, 4.629E-06, 4.627E-06, 4.625E-06, 4.625E-06, 4.627E-06,
     $ 4.632E-06, 4.635E-06, 4.639E-06, 4.642E-06, 4.643E-06, 4.645E-06,
     $ 4.646E-06, 4.648E-06, 4.650E-06, 4.651E-06, 4.653E-06, 4.656E-06,
     $ 4.659E-06, 4.661E-06, 4.659E-06, 4.652E-06, 4.643E-06, 4.634E-06,
     $ 4.624E-06, 4.620E-06, 4.621E-06, 4.622E-06, 4.619E-06, 4.618E-06,
     $ 4.620E-06, 4.623E-06, 4.630E-06, 4.644E-06, 4.660E-06, 4.672E-06,
     $ 4.681E-06, 4.687E-06, 4.690E-06, 4.690E-06/
C                                                                       
C      5001 TO  5100 CM-1 DATA.                                         
      DATA (SUN(I),I=  5001,  5100)/                                    
     $ 4.685E-06, 4.674E-06, 4.662E-06, 4.647E-06, 4.634E-06, 4.632E-06,
     $ 4.638E-06, 4.650E-06, 4.667E-06, 4.682E-06, 4.687E-06, 4.681E-06,
     $ 4.668E-06, 4.648E-06, 4.629E-06, 4.621E-06, 4.625E-06, 4.639E-06,
     $ 4.662E-06, 4.688E-06, 4.711E-06, 4.729E-06, 4.741E-06, 4.748E-06,
     $ 4.752E-06, 4.754E-06, 4.756E-06, 4.755E-06, 4.747E-06, 4.734E-06,
     $ 4.716E-06, 4.692E-06, 4.668E-06, 4.657E-06, 4.653E-06, 4.654E-06,
     $ 4.667E-06, 4.685E-06, 4.700E-06, 4.714E-06, 4.730E-06, 4.741E-06,
     $ 4.747E-06, 4.747E-06, 4.744E-06, 4.736E-06, 4.723E-06, 4.712E-06,
     $ 4.708E-06, 4.704E-06, 4.692E-06, 4.684E-06, 4.679E-06, 4.669E-06,
     $ 4.667E-06, 4.686E-06, 4.714E-06, 4.738E-06, 4.764E-06, 4.785E-06,
     $ 4.792E-06, 4.787E-06, 4.779E-06, 4.765E-06, 4.737E-06, 4.707E-06,
     $ 4.686E-06, 4.671E-06, 4.668E-06, 4.690E-06, 4.725E-06, 4.756E-06,
     $ 4.786E-06, 4.809E-06, 4.817E-06, 4.816E-06, 4.814E-06, 4.812E-06,
     $ 4.812E-06, 4.813E-06, 4.813E-06, 4.808E-06, 4.799E-06, 4.788E-06,
     $ 4.777E-06, 4.770E-06, 4.764E-06, 4.760E-06, 4.752E-06, 4.738E-06,
     $ 4.725E-06, 4.719E-06, 4.716E-06, 4.722E-06, 4.741E-06, 4.763E-06,
     $ 4.782E-06, 4.804E-06, 4.823E-06, 4.835E-06/
C                                                                       
C      5101 TO  5200 CM-1 DATA.                                         
      DATA (SUN(I),I=  5101,  5200)/                                    
     $ 4.844E-06, 4.851E-06, 4.856E-06, 4.861E-06, 4.867E-06, 4.873E-06,
     $ 4.880E-06, 4.884E-06, 4.884E-06, 4.886E-06, 4.888E-06, 4.889E-06,
     $ 4.893E-06, 4.901E-06, 4.909E-06, 4.915E-06, 4.920E-06, 4.922E-06,
     $ 4.916E-06, 4.897E-06, 4.864E-06, 4.824E-06, 4.786E-06, 4.752E-06,
     $ 4.736E-06, 4.747E-06, 4.771E-06, 4.794E-06, 4.819E-06, 4.843E-06,
     $ 4.853E-06, 4.852E-06, 4.847E-06, 4.828E-06, 4.789E-06, 4.733E-06,
     $ 4.660E-06, 4.575E-06, 4.496E-06, 4.438E-06, 4.412E-06, 4.425E-06,
     $ 4.474E-06, 4.542E-06, 4.620E-06, 4.700E-06, 4.772E-06, 4.831E-06,
     $ 4.880E-06, 4.916E-06, 4.936E-06, 4.938E-06, 4.925E-06, 4.906E-06,
     $ 4.886E-06, 4.874E-06, 4.880E-06, 4.906E-06, 4.939E-06, 4.970E-06,
     $ 4.995E-06, 5.008E-06, 5.006E-06, 4.997E-06, 4.989E-06, 4.980E-06,
     $ 4.973E-06, 4.970E-06, 4.966E-06, 4.954E-06, 4.939E-06, 4.923E-06,
     $ 4.904E-06, 4.890E-06, 4.887E-06, 4.887E-06, 4.890E-06, 4.899E-06,
     $ 4.905E-06, 4.903E-06, 4.900E-06, 4.894E-06, 4.883E-06, 4.879E-06,
     $ 4.890E-06, 4.904E-06, 4.922E-06, 4.946E-06, 4.967E-06, 4.980E-06,
     $ 4.988E-06, 4.995E-06, 4.999E-06, 4.997E-06, 4.990E-06, 4.982E-06,
     $ 4.975E-06, 4.969E-06, 4.967E-06, 4.973E-06/
C                                                                       
C      5201 TO  5300 CM-1 DATA.                                         
      DATA (SUN(I),I=  5201,  5300)/                                    
     $ 4.983E-06, 4.992E-06, 4.998E-06, 4.994E-06, 4.979E-06, 4.959E-06,
     $ 4.938E-06, 4.919E-06, 4.916E-06, 4.927E-06, 4.941E-06, 4.958E-06,
     $ 4.977E-06, 4.990E-06, 4.996E-06, 4.998E-06, 5.000E-06, 4.999E-06,
     $ 4.999E-06, 5.003E-06, 5.010E-06, 5.017E-06, 5.023E-06, 5.029E-06,
     $ 5.029E-06, 5.019E-06, 5.003E-06, 4.986E-06, 4.967E-06, 4.952E-06,
     $ 4.954E-06, 4.969E-06, 4.989E-06, 5.012E-06, 5.032E-06, 5.042E-06,
     $ 5.041E-06, 5.034E-06, 5.025E-06, 5.018E-06, 5.017E-06, 5.023E-06,
     $ 5.035E-06, 5.046E-06, 5.054E-06, 5.059E-06, 5.061E-06, 5.058E-06,
     $ 5.052E-06, 5.044E-06, 5.037E-06, 5.028E-06, 5.024E-06, 5.034E-06,
     $ 5.053E-06, 5.074E-06, 5.096E-06, 5.113E-06, 5.119E-06, 5.113E-06,
     $ 5.096E-06, 5.072E-06, 5.050E-06, 5.032E-06, 5.021E-06, 5.022E-06,
     $ 5.029E-06, 5.026E-06, 5.012E-06, 4.990E-06, 4.962E-06, 4.935E-06,
     $ 4.922E-06, 4.928E-06, 4.950E-06, 4.979E-06, 5.004E-06, 5.020E-06,
     $ 5.026E-06, 5.018E-06, 5.003E-06, 4.993E-06, 4.997E-06, 5.014E-06,
     $ 5.036E-06, 5.059E-06, 5.079E-06, 5.088E-06, 5.084E-06, 5.082E-06,
     $ 5.092E-06, 5.108E-06, 5.129E-06, 5.155E-06, 5.177E-06, 5.192E-06,
     $ 5.198E-06, 5.191E-06, 5.176E-06, 5.156E-06/
C                                                                       
C      5301 TO  5400 CM-1 DATA.                                         
      DATA (SUN(I),I=  5301,  5400)/                                    
     $ 5.132E-06, 5.115E-06, 5.118E-06, 5.133E-06, 5.152E-06, 5.178E-06,
     $ 5.202E-06, 5.214E-06, 5.222E-06, 5.227E-06, 5.229E-06, 5.231E-06,
     $ 5.235E-06, 5.237E-06, 5.233E-06, 5.222E-06, 5.206E-06, 5.189E-06,
     $ 5.173E-06, 5.165E-06, 5.162E-06, 5.159E-06, 5.151E-06, 5.133E-06,
     $ 5.102E-06, 5.048E-06, 4.959E-06, 4.838E-06, 4.705E-06, 4.585E-06,
     $ 4.503E-06, 4.493E-06, 4.563E-06, 4.681E-06, 4.810E-06, 4.926E-06,
     $ 5.012E-06, 5.063E-06, 5.089E-06, 5.113E-06, 5.145E-06, 5.177E-06,
     $ 5.208E-06, 5.238E-06, 5.261E-06, 5.276E-06, 5.287E-06, 5.293E-06,
     $ 5.290E-06, 5.281E-06, 5.267E-06, 5.246E-06, 5.221E-06, 5.201E-06,
     $ 5.188E-06, 5.178E-06, 5.178E-06, 5.191E-06, 5.210E-06, 5.228E-06,
     $ 5.244E-06, 5.256E-06, 5.259E-06, 5.256E-06, 5.253E-06, 5.252E-06,
     $ 5.246E-06, 5.238E-06, 5.234E-06, 5.229E-06, 5.222E-06, 5.218E-06,
     $ 5.217E-06, 5.214E-06, 5.208E-06, 5.204E-06, 5.207E-06, 5.216E-06,
     $ 5.229E-06, 5.247E-06, 5.269E-06, 5.284E-06, 5.290E-06, 5.281E-06,
     $ 5.261E-06, 5.235E-06, 5.210E-06, 5.195E-06, 5.200E-06, 5.219E-06,
     $ 5.240E-06, 5.257E-06, 5.263E-06, 5.256E-06, 5.242E-06, 5.233E-06,
     $ 5.232E-06, 5.244E-06, 5.261E-06, 5.280E-06/
C                                                                       
C      5401 TO  5500 CM-1 DATA.                                         
      DATA (SUN(I),I=  5401,  5500)/                                    
     $ 5.297E-06, 5.308E-06, 5.313E-06, 5.312E-06, 5.308E-06, 5.302E-06,
     $ 5.292E-06, 5.276E-06, 5.251E-06, 5.212E-06, 5.168E-06, 5.133E-06,
     $ 5.113E-06, 5.117E-06, 5.152E-06, 5.201E-06, 5.242E-06, 5.274E-06,
     $ 5.292E-06, 5.291E-06, 5.281E-06, 5.270E-06, 5.252E-06, 5.230E-06,
     $ 5.208E-06, 5.193E-06, 5.189E-06, 5.206E-06, 5.238E-06, 5.268E-06,
     $ 5.293E-06, 5.307E-06, 5.308E-06, 5.301E-06, 5.298E-06, 5.298E-06,
     $ 5.295E-06, 5.291E-06, 5.287E-06, 5.281E-06, 5.279E-06, 5.291E-06,
     $ 5.307E-06, 5.321E-06, 5.332E-06, 5.339E-06, 5.341E-06, 5.342E-06,
     $ 5.347E-06, 5.354E-06, 5.356E-06, 5.352E-06, 5.340E-06, 5.323E-06,
     $ 5.311E-06, 5.310E-06, 5.320E-06, 5.342E-06, 5.367E-06, 5.387E-06,
     $ 5.400E-06, 5.406E-06, 5.404E-06, 5.394E-06, 5.382E-06, 5.370E-06,
     $ 5.357E-06, 5.353E-06, 5.364E-06, 5.383E-06, 5.401E-06, 5.421E-06,
     $ 5.436E-06, 5.440E-06, 5.439E-06, 5.438E-06, 5.436E-06, 5.435E-06,
     $ 5.436E-06, 5.439E-06, 5.439E-06, 5.429E-06, 5.410E-06, 5.383E-06,
     $ 5.350E-06, 5.320E-06, 5.305E-06, 5.304E-06, 5.311E-06, 5.328E-06,
     $ 5.344E-06, 5.350E-06, 5.344E-06, 5.329E-06, 5.297E-06, 5.248E-06,
     $ 5.185E-06, 5.116E-06, 5.051E-06, 5.006E-06/
C                                                                       
C      5501 TO  5600 CM-1 DATA.                                         
      DATA (SUN(I),I=  5501,  5600)/                                    
     $ 4.994E-06, 5.021E-06, 5.078E-06, 5.150E-06, 5.224E-06, 5.289E-06,
     $ 5.337E-06, 5.371E-06, 5.397E-06, 5.418E-06, 5.437E-06, 5.457E-06,
     $ 5.476E-06, 5.490E-06, 5.500E-06, 5.505E-06, 5.506E-06, 5.506E-06,
     $ 5.509E-06, 5.515E-06, 5.523E-06, 5.529E-06, 5.534E-06, 5.537E-06,
     $ 5.537E-06, 5.535E-06, 5.534E-06, 5.531E-06, 5.527E-06, 5.522E-06,
     $ 5.516E-06, 5.510E-06, 5.507E-06, 5.504E-06, 5.504E-06, 5.508E-06,
     $ 5.515E-06, 5.522E-06, 5.528E-06, 5.534E-06, 5.534E-06, 5.527E-06,
     $ 5.514E-06, 5.494E-06, 5.468E-06, 5.445E-06, 5.430E-06, 5.423E-06,
     $ 5.425E-06, 5.438E-06, 5.453E-06, 5.465E-06, 5.478E-06, 5.495E-06,
     $ 5.509E-06, 5.522E-06, 5.534E-06, 5.540E-06, 5.538E-06, 5.531E-06,
     $ 5.523E-06, 5.513E-06, 5.505E-06, 5.500E-06, 5.500E-06, 5.503E-06,
     $ 5.510E-06, 5.517E-06, 5.520E-06, 5.519E-06, 5.516E-06, 5.510E-06,
     $ 5.505E-06, 5.505E-06, 5.508E-06, 5.512E-06, 5.517E-06, 5.522E-06,
     $ 5.527E-06, 5.531E-06, 5.538E-06, 5.546E-06, 5.553E-06, 5.557E-06,
     $ 5.560E-06, 5.562E-06, 5.563E-06, 5.566E-06, 5.572E-06, 5.580E-06,
     $ 5.588E-06, 5.595E-06, 5.600E-06, 5.603E-06, 5.602E-06, 5.599E-06,
     $ 5.590E-06, 5.575E-06, 5.557E-06, 5.538E-06/
C                                                                       
C      5601 TO  5700 CM-1 DATA.                                         
      DATA (SUN(I),I=  5601,  5700)/                                    
     $ 5.522E-06, 5.513E-06, 5.515E-06, 5.520E-06, 5.527E-06, 5.537E-06,
     $ 5.542E-06, 5.540E-06, 5.539E-06, 5.543E-06, 5.547E-06, 5.556E-06,
     $ 5.571E-06, 5.584E-06, 5.590E-06, 5.589E-06, 5.583E-06, 5.572E-06,
     $ 5.563E-06, 5.561E-06, 5.562E-06, 5.559E-06, 5.549E-06, 5.534E-06,
     $ 5.516E-06, 5.506E-06, 5.510E-06, 5.523E-06, 5.542E-06, 5.563E-06,
     $ 5.580E-06, 5.593E-06, 5.605E-06, 5.618E-06, 5.631E-06, 5.643E-06,
     $ 5.653E-06, 5.660E-06, 5.664E-06, 5.665E-06, 5.662E-06, 5.657E-06,
     $ 5.649E-06, 5.640E-06, 5.628E-06, 5.616E-06, 5.608E-06, 5.606E-06,
     $ 5.608E-06, 5.616E-06, 5.630E-06, 5.642E-06, 5.647E-06, 5.648E-06,
     $ 5.646E-06, 5.641E-06, 5.638E-06, 5.642E-06, 5.652E-06, 5.661E-06,
     $ 5.673E-06, 5.684E-06, 5.687E-06, 5.680E-06, 5.669E-06, 5.656E-06,
     $ 5.642E-06, 5.632E-06, 5.632E-06, 5.631E-06, 5.619E-06, 5.600E-06,
     $ 5.581E-06, 5.563E-06, 5.554E-06, 5.567E-06, 5.592E-06, 5.617E-06,
     $ 5.642E-06, 5.665E-06, 5.679E-06, 5.689E-06, 5.698E-06, 5.702E-06,
     $ 5.702E-06, 5.701E-06, 5.700E-06, 5.699E-06, 5.706E-06, 5.715E-06,
     $ 5.722E-06, 5.728E-06, 5.729E-06, 5.721E-06, 5.709E-06, 5.700E-06,
     $ 5.692E-06, 5.692E-06, 5.701E-06, 5.712E-06/
C                                                                       
C      5701 TO  5800 CM-1 DATA.                                         
      DATA (SUN(I),I=  5701,  5800)/                                    
     $ 5.723E-06, 5.730E-06, 5.727E-06, 5.717E-06, 5.709E-06, 5.698E-06,
     $ 5.688E-06, 5.684E-06, 5.680E-06, 5.672E-06, 5.667E-06, 5.667E-06,
     $ 5.674E-06, 5.688E-06, 5.708E-06, 5.730E-06, 5.753E-06, 5.770E-06,
     $ 5.771E-06, 5.755E-06, 5.733E-06, 5.706E-06, 5.678E-06, 5.667E-06,
     $ 5.673E-06, 5.680E-06, 5.688E-06, 5.702E-06, 5.717E-06, 5.735E-06,
     $ 5.764E-06, 5.793E-06, 5.813E-06, 5.825E-06, 5.827E-06, 5.820E-06,
     $ 5.815E-06, 5.811E-06, 5.800E-06, 5.786E-06, 5.773E-06, 5.758E-06,
     $ 5.748E-06, 5.755E-06, 5.768E-06, 5.778E-06, 5.786E-06, 5.787E-06,
     $ 5.779E-06, 5.764E-06, 5.745E-06, 5.720E-06, 5.683E-06, 5.633E-06,
     $ 5.576E-06, 5.519E-06, 5.471E-06, 5.445E-06, 5.449E-06, 5.479E-06,
     $ 5.524E-06, 5.573E-06, 5.620E-06, 5.654E-06, 5.666E-06, 5.657E-06,
     $ 5.644E-06, 5.631E-06, 5.619E-06, 5.629E-06, 5.673E-06, 5.732E-06,
     $ 5.790E-06, 5.849E-06, 5.895E-06, 5.920E-06, 5.934E-06, 5.945E-06,
     $ 5.952E-06, 5.956E-06, 5.957E-06, 5.949E-06, 5.932E-06, 5.912E-06,
     $ 5.894E-06, 5.881E-06, 5.880E-06, 5.892E-06, 5.909E-06, 5.924E-06,
     $ 5.931E-06, 5.929E-06, 5.921E-06, 5.912E-06, 5.905E-06, 5.904E-06,
     $ 5.902E-06, 5.892E-06, 5.868E-06, 5.829E-06/
C                                                                       
C      5801 TO  5900 CM-1 DATA.                                         
      DATA (SUN(I),I=  5801,  5900)/                                    
     $ 5.785E-06, 5.757E-06, 5.750E-06, 5.766E-06, 5.809E-06, 5.855E-06,
     $ 5.881E-06, 5.894E-06, 5.895E-06, 5.885E-06, 5.876E-06, 5.882E-06,
     $ 5.893E-06, 5.904E-06, 5.918E-06, 5.933E-06, 5.940E-06, 5.942E-06,
     $ 5.943E-06, 5.942E-06, 5.938E-06, 5.938E-06, 5.940E-06, 5.942E-06,
     $ 5.943E-06, 5.947E-06, 5.955E-06, 5.965E-06, 5.977E-06, 5.989E-06,
     $ 5.997E-06, 6.000E-06, 6.000E-06, 5.999E-06, 5.997E-06, 5.994E-06,
     $ 5.992E-06, 5.976E-06, 5.933E-06, 5.872E-06, 5.805E-06, 5.740E-06,
     $ 5.702E-06, 5.718E-06, 5.773E-06, 5.834E-06, 5.892E-06, 5.934E-06,
     $ 5.949E-06, 5.939E-06, 5.922E-06, 5.907E-06, 5.892E-06, 5.876E-06,
     $ 5.872E-06, 5.885E-06, 5.905E-06, 5.924E-06, 5.948E-06, 5.968E-06,
     $ 5.977E-06, 5.983E-06, 5.994E-06, 6.004E-06, 6.009E-06, 6.009E-06,
     $ 6.002E-06, 5.985E-06, 5.960E-06, 5.938E-06, 5.924E-06, 5.917E-06,
     $ 5.917E-06, 5.928E-06, 5.940E-06, 5.944E-06, 5.945E-06, 5.947E-06,
     $ 5.947E-06, 5.947E-06, 5.952E-06, 5.963E-06, 5.976E-06, 5.992E-06,
     $ 6.009E-06, 6.023E-06, 6.034E-06, 6.039E-06, 6.040E-06, 6.038E-06,
     $ 6.036E-06, 6.034E-06, 6.035E-06, 6.039E-06, 6.045E-06, 6.052E-06,
     $ 6.059E-06, 6.064E-06, 6.067E-06, 6.069E-06/
C                                                                       
C      5901 TO  6000 CM-1 DATA.                                         
      DATA (SUN(I),I=  5901,  6000)/                                    
     $ 6.070E-06, 6.069E-06, 6.070E-06, 6.072E-06, 6.075E-06, 6.080E-06,
     $ 6.085E-06, 6.090E-06, 6.093E-06, 6.093E-06, 6.092E-06, 6.090E-06,
     $ 6.089E-06, 6.082E-06, 6.065E-06, 6.041E-06, 6.016E-06, 5.992E-06,
     $ 5.982E-06, 5.995E-06, 6.018E-06, 6.039E-06, 6.057E-06, 6.065E-06,
     $ 6.063E-06, 6.059E-06, 6.056E-06, 6.056E-06, 6.059E-06, 6.060E-06,
     $ 6.061E-06, 6.069E-06, 6.080E-06, 6.087E-06, 6.093E-06, 6.093E-06,
     $ 6.083E-06, 6.067E-06, 6.047E-06, 6.022E-06, 5.992E-06, 5.960E-06,
     $ 5.922E-06, 5.873E-06, 5.823E-06, 5.779E-06, 5.737E-06, 5.713E-06,
     $ 5.718E-06, 5.746E-06, 5.792E-06, 5.855E-06, 5.920E-06, 5.975E-06,
     $ 6.019E-06, 6.055E-06, 6.081E-06, 6.104E-06, 6.125E-06, 6.137E-06,
     $ 6.142E-06, 6.143E-06, 6.132E-06, 6.107E-06, 6.085E-06, 6.070E-06,
     $ 6.056E-06, 6.054E-06, 6.076E-06, 6.109E-06, 6.139E-06, 6.168E-06,
     $ 6.189E-06, 6.193E-06, 6.178E-06, 6.145E-06, 6.101E-06, 6.061E-06,
     $ 6.032E-06, 6.024E-06, 6.048E-06, 6.096E-06, 6.146E-06, 6.189E-06,
     $ 6.223E-06, 6.241E-06, 6.248E-06, 6.247E-06, 6.231E-06, 6.202E-06,
     $ 6.167E-06, 6.126E-06, 6.091E-06, 6.080E-06, 6.089E-06, 6.106E-06,
     $ 6.131E-06, 6.153E-06, 6.161E-06, 6.159E-06/
C                                                                       
C      6001 TO  6100 CM-1 DATA.                                         
      DATA (SUN(I),I=  6001,  6100)/                                    
     $ 6.154E-06, 6.145E-06, 6.140E-06, 6.143E-06, 6.150E-06, 6.159E-06,
     $ 6.169E-06, 6.177E-06, 6.181E-06, 6.182E-06, 6.181E-06, 6.182E-06,
     $ 6.185E-06, 6.189E-06, 6.196E-06, 6.207E-06, 6.218E-06, 6.227E-06,
     $ 6.235E-06, 6.238E-06, 6.236E-06, 6.228E-06, 6.213E-06, 6.195E-06,
     $ 6.178E-06, 6.165E-06, 6.160E-06, 6.166E-06, 6.178E-06, 6.191E-06,
     $ 6.204E-06, 6.213E-06, 6.215E-06, 6.217E-06, 6.219E-06, 6.220E-06,
     $ 6.220E-06, 6.219E-06, 6.213E-06, 6.202E-06, 6.190E-06, 6.182E-06,
     $ 6.179E-06, 6.186E-06, 6.197E-06, 6.205E-06, 6.208E-06, 6.211E-06,
     $ 6.208E-06, 6.203E-06, 6.210E-06, 6.216E-06, 6.208E-06, 6.196E-06,
     $ 6.187E-06, 6.173E-06, 6.166E-06, 6.183E-06, 6.204E-06, 6.208E-06,
     $ 6.207E-06, 6.202E-06, 6.184E-06, 6.171E-06, 6.183E-06, 6.205E-06,
     $ 6.225E-06, 6.247E-06, 6.264E-06, 6.267E-06, 6.264E-06, 6.263E-06,
     $ 6.261E-06, 6.255E-06, 6.241E-06, 6.224E-06, 6.207E-06, 6.181E-06,
     $ 6.156E-06, 6.148E-06, 6.149E-06, 6.150E-06, 6.164E-06, 6.187E-06,
     $ 6.198E-06, 6.197E-06, 6.190E-06, 6.170E-06, 6.139E-06, 6.110E-06,
     $ 6.089E-06, 6.077E-06, 6.075E-06, 6.082E-06, 6.093E-06, 6.104E-06,
     $ 6.115E-06, 6.116E-06, 6.097E-06, 6.070E-06/
C                                                                       
C      6101 TO  6200 CM-1 DATA.                                         
      DATA (SUN(I),I=  6101,  6200)/                                    
     $ 6.045E-06, 6.023E-06, 6.026E-06, 6.065E-06, 6.109E-06, 6.145E-06,
     $ 6.179E-06, 6.198E-06, 6.207E-06, 6.235E-06, 6.277E-06, 6.318E-06,
     $ 6.357E-06, 6.387E-06, 6.396E-06, 6.387E-06, 6.366E-06, 6.340E-06,
     $ 6.311E-06, 6.281E-06, 6.266E-06, 6.276E-06, 6.296E-06, 6.319E-06,
     $ 6.348E-06, 6.371E-06, 6.381E-06, 6.384E-06, 6.386E-06, 6.387E-06,
     $ 6.384E-06, 6.375E-06, 6.363E-06, 6.355E-06, 6.350E-06, 6.353E-06,
     $ 6.370E-06, 6.393E-06, 6.412E-06, 6.426E-06, 6.434E-06, 6.435E-06,
     $ 6.431E-06, 6.422E-06, 6.411E-06, 6.399E-06, 6.385E-06, 6.372E-06,
     $ 6.366E-06, 6.361E-06, 6.351E-06, 6.341E-06, 6.335E-06, 6.332E-06,
     $ 6.339E-06, 6.360E-06, 6.385E-06, 6.404E-06, 6.417E-06, 6.416E-06,
     $ 6.397E-06, 6.370E-06, 6.343E-06, 6.315E-06, 6.288E-06, 6.267E-06,
     $ 6.240E-06, 6.199E-06, 6.161E-06, 6.136E-06, 6.128E-06, 6.150E-06,
     $ 6.205E-06, 6.269E-06, 6.321E-06, 6.362E-06, 6.390E-06, 6.400E-06,
     $ 6.401E-06, 6.396E-06, 6.376E-06, 6.342E-06, 6.298E-06, 6.246E-06,
     $ 6.198E-06, 6.165E-06, 6.146E-06, 6.150E-06, 6.184E-06, 6.236E-06,
     $ 6.293E-06, 6.345E-06, 6.381E-06, 6.397E-06, 6.400E-06, 6.401E-06,
     $ 6.406E-06, 6.408E-06, 6.404E-06, 6.393E-06/
C                                                                       
C      6201 TO  6300 CM-1 DATA.                                         
      DATA (SUN(I),I=  6201,  6300)/                                    
     $ 6.374E-06, 6.350E-06, 6.330E-06, 6.318E-06, 6.309E-06, 6.293E-06,
     $ 6.263E-06, 6.219E-06, 6.178E-06, 6.153E-06, 6.153E-06, 6.192E-06,
     $ 6.264E-06, 6.340E-06, 6.404E-06, 6.454E-06, 6.484E-06, 6.492E-06,
     $ 6.488E-06, 6.473E-06, 6.445E-06, 6.411E-06, 6.381E-06, 6.361E-06,
     $ 6.362E-06, 6.383E-06, 6.407E-06, 6.421E-06, 6.426E-06, 6.422E-06,
     $ 6.414E-06, 6.412E-06, 6.421E-06, 6.436E-06, 6.450E-06, 6.454E-06,
     $ 6.450E-06, 6.445E-06, 6.436E-06, 6.424E-06, 6.416E-06, 6.403E-06,
     $ 6.381E-06, 6.362E-06, 6.354E-06, 6.358E-06, 6.380E-06, 6.415E-06,
     $ 6.443E-06, 6.459E-06, 6.466E-06, 6.463E-06, 6.460E-06, 6.475E-06,
     $ 6.502E-06, 6.532E-06, 6.558E-06, 6.568E-06, 6.551E-06, 6.504E-06,
     $ 6.439E-06, 6.371E-06, 6.313E-06, 6.285E-06, 6.302E-06, 6.352E-06,
     $ 6.419E-06, 6.491E-06, 6.550E-06, 6.583E-06, 6.594E-06, 6.593E-06,
     $ 6.585E-06, 6.577E-06, 6.572E-06, 6.572E-06, 6.572E-06, 6.565E-06,
     $ 6.545E-06, 6.510E-06, 6.461E-06, 6.396E-06, 6.327E-06, 6.263E-06,
     $ 6.214E-06, 6.185E-06, 6.166E-06, 6.137E-06, 6.096E-06, 6.049E-06,
     $ 5.996E-06, 5.962E-06, 5.982E-06, 6.049E-06, 6.134E-06, 6.225E-06,
     $ 6.311E-06, 6.372E-06, 6.408E-06, 6.441E-06/
C                                                                       
C      6301 TO  6400 CM-1 DATA.                                         
      DATA (SUN(I),I=  6301,  6400)/                                    
     $ 6.476E-06, 6.503E-06, 6.524E-06, 6.545E-06, 6.559E-06, 6.568E-06,
     $ 6.584E-06, 6.595E-06, 6.589E-06, 6.569E-06, 6.543E-06, 6.516E-06,
     $ 6.494E-06, 6.490E-06, 6.496E-06, 6.487E-06, 6.464E-06, 6.439E-06,
     $ 6.417E-06, 6.411E-06, 6.441E-06, 6.494E-06, 6.549E-06, 6.603E-06,
     $ 6.642E-06, 6.658E-06, 6.660E-06, 6.654E-06, 6.644E-06, 6.634E-06,
     $ 6.618E-06, 6.601E-06, 6.587E-06, 6.567E-06, 6.531E-06, 6.472E-06,
     $ 6.378E-06, 6.265E-06, 6.161E-06, 6.088E-06, 6.081E-06, 6.157E-06,
     $ 6.259E-06, 6.338E-06, 6.394E-06, 6.405E-06, 6.351E-06, 6.290E-06,
     $ 6.279E-06, 6.290E-06, 6.325E-06, 6.408E-06, 6.499E-06, 6.552E-06,
     $ 6.587E-06, 6.608E-06, 6.602E-06, 6.592E-06, 6.598E-06, 6.611E-06,
     $ 6.623E-06, 6.635E-06, 6.643E-06, 6.642E-06, 6.634E-06, 6.617E-06,
     $ 6.589E-06, 6.557E-06, 6.528E-06, 6.503E-06, 6.489E-06, 6.487E-06,
     $ 6.482E-06, 6.472E-06, 6.461E-06, 6.456E-06, 6.463E-06, 6.480E-06,
     $ 6.500E-06, 6.514E-06, 6.516E-06, 6.505E-06, 6.494E-06, 6.487E-06,
     $ 6.490E-06, 6.507E-06, 6.532E-06, 6.553E-06, 6.573E-06, 6.587E-06,
     $ 6.582E-06, 6.562E-06, 6.542E-06, 6.522E-06, 6.507E-06, 6.511E-06,
     $ 6.528E-06, 6.545E-06, 6.560E-06, 6.574E-06/
C                                                                       
C      6401 TO  6500 CM-1 DATA.                                         
      DATA (SUN(I),I=  6401,  6500)/                                    
     $ 6.588E-06, 6.599E-06, 6.609E-06, 6.619E-06, 6.626E-06, 6.623E-06,
     $ 6.607E-06, 6.584E-06, 6.555E-06, 6.527E-06, 6.504E-06, 6.496E-06,
     $ 6.503E-06, 6.513E-06, 6.521E-06, 6.529E-06, 6.536E-06, 6.540E-06,
     $ 6.548E-06, 6.560E-06, 6.566E-06, 6.560E-06, 6.540E-06, 6.510E-06,
     $ 6.478E-06, 6.456E-06, 6.449E-06, 6.454E-06, 6.468E-06, 6.479E-06,
     $ 6.479E-06, 6.470E-06, 6.457E-06, 6.446E-06, 6.444E-06, 6.452E-06,
     $ 6.474E-06, 6.508E-06, 6.544E-06, 6.574E-06, 6.601E-06, 6.619E-06,
     $ 6.623E-06, 6.618E-06, 6.607E-06, 6.587E-06, 6.562E-06, 6.537E-06,
     $ 6.517E-06, 6.507E-06, 6.506E-06, 6.516E-06, 6.532E-06, 6.546E-06,
     $ 6.554E-06, 6.555E-06, 6.542E-06, 6.514E-06, 6.485E-06, 6.468E-06,
     $ 6.465E-06, 6.480E-06, 6.516E-06, 6.560E-06, 6.596E-06, 6.624E-06,
     $ 6.645E-06, 6.657E-06, 6.663E-06, 6.666E-06, 6.666E-06, 6.663E-06,
     $ 6.656E-06, 6.649E-06, 6.645E-06, 6.644E-06, 6.642E-06, 6.635E-06,
     $ 6.623E-06, 6.607E-06, 6.589E-06, 6.573E-06, 6.566E-06, 6.565E-06,
     $ 6.565E-06, 6.560E-06, 6.551E-06, 6.540E-06, 6.523E-06, 6.494E-06,
     $ 6.469E-06, 6.454E-06, 6.441E-06, 6.443E-06, 6.476E-06, 6.518E-06,
     $ 6.547E-06, 6.562E-06, 6.566E-06, 6.553E-06/
C                                                                       
C      6501 TO  6600 CM-1 DATA.                                         
      DATA (SUN(I),I=  6501,  6600)/                                    
     $ 6.537E-06, 6.541E-06, 6.567E-06, 6.598E-06, 6.625E-06, 6.646E-06,
     $ 6.656E-06, 6.655E-06, 6.651E-06, 6.650E-06, 6.644E-06, 6.632E-06,
     $ 6.618E-06, 6.598E-06, 6.568E-06, 6.544E-06, 6.533E-06, 6.527E-06,
     $ 6.531E-06, 6.553E-06, 6.578E-06, 6.595E-06, 6.610E-06, 6.621E-06,
     $ 6.629E-06, 6.639E-06, 6.652E-06, 6.666E-06, 6.676E-06, 6.673E-06,
     $ 6.648E-06, 6.597E-06, 6.527E-06, 6.456E-06, 6.399E-06, 6.375E-06,
     $ 6.399E-06, 6.458E-06, 6.526E-06, 6.588E-06, 6.637E-06, 6.664E-06,
     $ 6.674E-06, 6.681E-06, 6.682E-06, 6.676E-06, 6.667E-06, 6.656E-06,
     $ 6.648E-06, 6.646E-06, 6.654E-06, 6.667E-06, 6.670E-06, 6.655E-06,
     $ 6.627E-06, 6.596E-06, 6.563E-06, 6.545E-06, 6.556E-06, 6.578E-06,
     $ 6.597E-06, 6.615E-06, 6.629E-06, 6.629E-06, 6.615E-06, 6.596E-06,
     $ 6.576E-06, 6.555E-06, 6.538E-06, 6.531E-06, 6.534E-06, 6.539E-06,
     $ 6.541E-06, 6.550E-06, 6.571E-06, 6.596E-06, 6.622E-06, 6.651E-06,
     $ 6.667E-06, 6.663E-06, 6.652E-06, 6.639E-06, 6.629E-06, 6.634E-06,
     $ 6.651E-06, 6.667E-06, 6.681E-06, 6.686E-06, 6.677E-06, 6.655E-06,
     $ 6.631E-06, 6.611E-06, 6.600E-06, 6.600E-06, 6.611E-06, 6.630E-06,
     $ 6.648E-06, 6.662E-06, 6.669E-06, 6.668E-06/
C                                                                       
C      6601 TO  6700 CM-1 DATA.                                         
      DATA (SUN(I),I=  6601,  6700)/                                    
     $ 6.657E-06, 6.642E-06, 6.625E-06, 6.611E-06, 6.604E-06, 6.604E-06,
     $ 6.608E-06, 6.612E-06, 6.611E-06, 6.603E-06, 6.598E-06, 6.606E-06,
     $ 6.629E-06, 6.665E-06, 6.705E-06, 6.741E-06, 6.763E-06, 6.772E-06,
     $ 6.771E-06, 6.767E-06, 6.763E-06, 6.762E-06, 6.756E-06, 6.737E-06,
     $ 6.707E-06, 6.668E-06, 6.621E-06, 6.584E-06, 6.577E-06, 6.594E-06,
     $ 6.626E-06, 6.668E-06, 6.706E-06, 6.723E-06, 6.721E-06, 6.708E-06,
     $ 6.679E-06, 6.629E-06, 6.563E-06, 6.485E-06, 6.406E-06, 6.333E-06,
     $ 6.261E-06, 6.212E-06, 6.205E-06, 6.219E-06, 6.263E-06, 6.356E-06,
     $ 6.434E-06, 6.444E-06, 6.417E-06, 6.364E-06, 6.288E-06, 6.262E-06,
     $ 6.331E-06, 6.447E-06, 6.571E-06, 6.690E-06, 6.772E-06, 6.804E-06,
     $ 6.810E-06, 6.812E-06, 6.811E-06, 6.812E-06, 6.815E-06, 6.814E-06,
     $ 6.804E-06, 6.785E-06, 6.762E-06, 6.736E-06, 6.719E-06, 6.722E-06,
     $ 6.735E-06, 6.745E-06, 6.752E-06, 6.753E-06, 6.742E-06, 6.725E-06,
     $ 6.708E-06, 6.684E-06, 6.654E-06, 6.626E-06, 6.604E-06, 6.595E-06,
     $ 6.615E-06, 6.651E-06, 6.690E-06, 6.734E-06, 6.774E-06, 6.795E-06,
     $ 6.804E-06, 6.807E-06, 6.800E-06, 6.790E-06, 6.784E-06, 6.781E-06,
     $ 6.775E-06, 6.767E-06, 6.758E-06, 6.739E-06/
C                                                                       
C      6701 TO  6800 CM-1 DATA.                                         
      DATA (SUN(I),I=  6701,  6800)/                                    
     $ 6.718E-06, 6.709E-06, 6.707E-06, 6.711E-06, 6.725E-06, 6.739E-06,
     $ 6.744E-06, 6.743E-06, 6.741E-06, 6.738E-06, 6.741E-06, 6.752E-06,
     $ 6.761E-06, 6.746E-06, 6.680E-06, 6.552E-06, 6.390E-06, 6.222E-06,
     $ 6.093E-06, 6.062E-06, 6.141E-06, 6.278E-06, 6.428E-06, 6.561E-06,
     $ 6.646E-06, 6.677E-06, 6.684E-06, 6.694E-06, 6.711E-06, 6.730E-06,
     $ 6.751E-06, 6.772E-06, 6.787E-06, 6.791E-06, 6.785E-06, 6.770E-06,
     $ 6.749E-06, 6.721E-06, 6.683E-06, 6.651E-06, 6.633E-06, 6.622E-06,
     $ 6.623E-06, 6.649E-06, 6.681E-06, 6.706E-06, 6.724E-06, 6.729E-06,
     $ 6.720E-06, 6.706E-06, 6.692E-06, 6.682E-06, 6.684E-06, 6.698E-06,
     $ 6.716E-06, 6.737E-06, 6.763E-06, 6.779E-06, 6.776E-06, 6.757E-06,
     $ 6.729E-06, 6.696E-06, 6.666E-06, 6.649E-06, 6.644E-06, 6.643E-06,
     $ 6.642E-06, 6.641E-06, 6.643E-06, 6.651E-06, 6.664E-06, 6.677E-06,
     $ 6.682E-06, 6.676E-06, 6.659E-06, 6.639E-06, 6.626E-06, 6.626E-06,
     $ 6.640E-06, 6.650E-06, 6.640E-06, 6.618E-06, 6.590E-06, 6.559E-06,
     $ 6.549E-06, 6.572E-06, 6.605E-06, 6.631E-06, 6.651E-06, 6.662E-06,
     $ 6.662E-06, 6.663E-06, 6.678E-06, 6.695E-06, 6.700E-06, 6.693E-06,
     $ 6.677E-06, 6.652E-06, 6.633E-06, 6.635E-06/
C                                                                       
C      6801 TO  6900 CM-1 DATA.                                         
      DATA (SUN(I),I=  6801,  6900)/                                    
     $ 6.658E-06, 6.695E-06, 6.735E-06, 6.766E-06, 6.783E-06, 6.786E-06,
     $ 6.777E-06, 6.758E-06, 6.736E-06, 6.714E-06, 6.696E-06, 6.686E-06,
     $ 6.691E-06, 6.710E-06, 6.733E-06, 6.754E-06, 6.768E-06, 6.767E-06,
     $ 6.743E-06, 6.706E-06, 6.669E-06, 6.637E-06, 6.622E-06, 6.637E-06,
     $ 6.670E-06, 6.696E-06, 6.712E-06, 6.715E-06, 6.696E-06, 6.668E-06,
     $ 6.651E-06, 6.640E-06, 6.632E-06, 6.636E-06, 6.643E-06, 6.644E-06,
     $ 6.649E-06, 6.657E-06, 6.663E-06, 6.674E-06, 6.694E-06, 6.709E-06,
     $ 6.717E-06, 6.725E-06, 6.727E-06, 6.722E-06, 6.721E-06, 6.723E-06,
     $ 6.726E-06, 6.732E-06, 6.741E-06, 6.756E-06, 6.772E-06, 6.782E-06,
     $ 6.787E-06, 6.788E-06, 6.780E-06, 6.766E-06, 6.748E-06, 6.729E-06,
     $ 6.710E-06, 6.695E-06, 6.687E-06, 6.685E-06, 6.678E-06, 6.665E-06,
     $ 6.649E-06, 6.631E-06, 6.621E-06, 6.626E-06, 6.632E-06, 6.635E-06,
     $ 6.632E-06, 6.621E-06, 6.613E-06, 6.619E-06, 6.633E-06, 6.654E-06,
     $ 6.675E-06, 6.689E-06, 6.697E-06, 6.703E-06, 6.711E-06, 6.716E-06,
     $ 6.706E-06, 6.684E-06, 6.658E-06, 6.627E-06, 6.600E-06, 6.601E-06,
     $ 6.617E-06, 6.628E-06, 6.643E-06, 6.665E-06, 6.682E-06, 6.699E-06,
     $ 6.726E-06, 6.751E-06, 6.765E-06, 6.771E-06/
C                                                                       
C      6901 TO  7000 CM-1 DATA.                                         
      DATA (SUN(I),I=  6901,  7000)/                                    
     $ 6.772E-06, 6.772E-06, 6.772E-06, 6.773E-06, 6.774E-06, 6.772E-06,
     $ 6.762E-06, 6.747E-06, 6.731E-06, 6.711E-06, 6.693E-06, 6.689E-06,
     $ 6.697E-06, 6.713E-06, 6.738E-06, 6.768E-06, 6.787E-06, 6.785E-06,
     $ 6.765E-06, 6.731E-06, 6.685E-06, 6.648E-06, 6.638E-06, 6.649E-06,
     $ 6.670E-06, 6.696E-06, 6.713E-06, 6.708E-06, 6.680E-06, 6.641E-06,
     $ 6.604E-06, 6.576E-06, 6.567E-06, 6.595E-06, 6.649E-06, 6.700E-06,
     $ 6.730E-06, 6.718E-06, 6.658E-06, 6.569E-06, 6.482E-06, 6.430E-06,
     $ 6.440E-06, 6.503E-06, 6.594E-06, 6.689E-06, 6.768E-06, 6.814E-06,
     $ 6.828E-06, 6.826E-06, 6.818E-06, 6.805E-06, 6.794E-06, 6.794E-06,
     $ 6.799E-06, 6.804E-06, 6.810E-06, 6.812E-06, 6.807E-06, 6.797E-06,
     $ 6.786E-06, 6.780E-06, 6.780E-06, 6.783E-06, 6.785E-06, 6.789E-06,
     $ 6.789E-06, 6.788E-06, 6.785E-06, 6.780E-06, 6.771E-06, 6.758E-06,
     $ 6.744E-06, 6.732E-06, 6.732E-06, 6.749E-06, 6.775E-06, 6.802E-06,
     $ 6.825E-06, 6.842E-06, 6.847E-06, 6.837E-06, 6.812E-06, 6.778E-06,
     $ 6.743E-06, 6.710E-06, 6.691E-06, 6.700E-06, 6.723E-06, 6.733E-06,
     $ 6.725E-06, 6.706E-06, 6.671E-06, 6.622E-06, 6.593E-06, 6.598E-06,
     $ 6.614E-06, 6.641E-06, 6.689E-06, 6.736E-06/
C                                                                       
C      7001 TO  7100 CM-1 DATA.                                         
      DATA (SUN(I),I=  7001,  7100)/                                    
     $ 6.758E-06, 6.759E-06, 6.747E-06, 6.725E-06, 6.703E-06, 6.691E-06,
     $ 6.691E-06, 6.696E-06, 6.694E-06, 6.676E-06, 6.655E-06, 6.646E-06,
     $ 6.643E-06, 6.651E-06, 6.680E-06, 6.723E-06, 6.754E-06, 6.765E-06,
     $ 6.762E-06, 6.746E-06, 6.721E-06, 6.706E-06, 6.714E-06, 6.728E-06,
     $ 6.735E-06, 6.732E-06, 6.718E-06, 6.703E-06, 6.697E-06, 6.692E-06,
     $ 6.692E-06, 6.697E-06, 6.694E-06, 6.693E-06, 6.717E-06, 6.752E-06,
     $ 6.782E-06, 6.804E-06, 6.813E-06, 6.804E-06, 6.784E-06, 6.767E-06,
     $ 6.767E-06, 6.773E-06, 6.775E-06, 6.780E-06, 6.788E-06, 6.792E-06,
     $ 6.795E-06, 6.809E-06, 6.825E-06, 6.836E-06, 6.843E-06, 6.848E-06,
     $ 6.846E-06, 6.837E-06, 6.821E-06, 6.804E-06, 6.788E-06, 6.774E-06,
     $ 6.770E-06, 6.782E-06, 6.802E-06, 6.817E-06, 6.825E-06, 6.823E-06,
     $ 6.810E-06, 6.791E-06, 6.778E-06, 6.775E-06, 6.778E-06, 6.779E-06,
     $ 6.771E-06, 6.758E-06, 6.739E-06, 6.720E-06, 6.711E-06, 6.716E-06,
     $ 6.719E-06, 6.703E-06, 6.677E-06, 6.651E-06, 6.624E-06, 6.617E-06,
     $ 6.647E-06, 6.696E-06, 6.740E-06, 6.778E-06, 6.805E-06, 6.815E-06,
     $ 6.818E-06, 6.824E-06, 6.830E-06, 6.835E-06, 6.837E-06, 6.834E-06,
     $ 6.827E-06, 6.821E-06, 6.814E-06, 6.806E-06/
C                                                                       
C      7101 TO  7200 CM-1 DATA.                                         
      DATA (SUN(I),I=  7101,  7200)/                                    
     $ 6.803E-06, 6.802E-06, 6.800E-06, 6.800E-06, 6.802E-06, 6.801E-06,
     $ 6.795E-06, 6.788E-06, 6.784E-06, 6.782E-06, 6.788E-06, 6.801E-06,
     $ 6.809E-06, 6.810E-06, 6.806E-06, 6.792E-06, 6.775E-06, 6.768E-06,
     $ 6.769E-06, 6.770E-06, 6.774E-06, 6.778E-06, 6.772E-06, 6.759E-06,
     $ 6.749E-06, 6.746E-06, 6.748E-06, 6.759E-06, 6.777E-06, 6.794E-06,
     $ 6.806E-06, 6.810E-06, 6.802E-06, 6.786E-06, 6.767E-06, 6.745E-06,
     $ 6.727E-06, 6.717E-06, 6.703E-06, 6.687E-06, 6.676E-06, 6.670E-06,
     $ 6.676E-06, 6.706E-06, 6.746E-06, 6.784E-06, 6.815E-06, 6.835E-06,
     $ 6.840E-06, 6.840E-06, 6.840E-06, 6.843E-06, 6.844E-06, 6.845E-06,
     $ 6.845E-06, 6.843E-06, 6.838E-06, 6.833E-06, 6.830E-06, 6.829E-06,
     $ 6.829E-06, 6.826E-06, 6.816E-06, 6.802E-06, 6.787E-06, 6.774E-06,
     $ 6.770E-06, 6.775E-06, 6.779E-06, 6.781E-06, 6.781E-06, 6.777E-06,
     $ 6.776E-06, 6.783E-06, 6.792E-06, 6.801E-06, 6.808E-06, 6.810E-06,
     $ 6.806E-06, 6.803E-06, 6.806E-06, 6.811E-06, 6.818E-06, 6.827E-06,
     $ 6.834E-06, 6.837E-06, 6.837E-06, 6.835E-06, 6.828E-06, 6.812E-06,
     $ 6.789E-06, 6.767E-06, 6.745E-06, 6.734E-06, 6.745E-06, 6.769E-06,
     $ 6.795E-06, 6.819E-06, 6.836E-06, 6.841E-06/
C                                                                       
C      7201 TO  7300 CM-1 DATA.                                         
      DATA (SUN(I),I=  7201,  7300)/                                    
     $ 6.838E-06, 6.832E-06, 6.825E-06, 6.818E-06, 6.813E-06, 6.807E-06,
     $ 6.798E-06, 6.791E-06, 6.787E-06, 6.781E-06, 6.782E-06, 6.794E-06,
     $ 6.808E-06, 6.814E-06, 6.815E-06, 6.808E-06, 6.792E-06, 6.778E-06,
     $ 6.773E-06, 6.778E-06, 6.792E-06, 6.810E-06, 6.824E-06, 6.831E-06,
     $ 6.832E-06, 6.826E-06, 6.814E-06, 6.801E-06, 6.793E-06, 6.786E-06,
     $ 6.775E-06, 6.764E-06, 6.755E-06, 6.749E-06, 6.746E-06, 6.754E-06,
     $ 6.774E-06, 6.794E-06, 6.812E-06, 6.827E-06, 6.835E-06, 6.833E-06,
     $ 6.828E-06, 6.821E-06, 6.815E-06, 6.812E-06, 6.818E-06, 6.827E-06,
     $ 6.839E-06, 6.851E-06, 6.858E-06, 6.854E-06, 6.842E-06, 6.826E-06,
     $ 6.808E-06, 6.795E-06, 6.793E-06, 6.801E-06, 6.808E-06, 6.813E-06,
     $ 6.812E-06, 6.799E-06, 6.776E-06, 6.752E-06, 6.731E-06, 6.716E-06,
     $ 6.712E-06, 6.723E-06, 6.744E-06, 6.762E-06, 6.774E-06, 6.780E-06,
     $ 6.778E-06, 6.775E-06, 6.785E-06, 6.806E-06, 6.828E-06, 6.847E-06,
     $ 6.860E-06, 6.864E-06, 6.860E-06, 6.857E-06, 6.858E-06, 6.861E-06,
     $ 6.865E-06, 6.868E-06, 6.865E-06, 6.853E-06, 6.835E-06, 6.813E-06,
     $ 6.790E-06, 6.776E-06, 6.772E-06, 6.770E-06, 6.769E-06, 6.770E-06,
     $ 6.765E-06, 6.759E-06, 6.761E-06, 6.766E-06/
C                                                                       
C      7301 TO  7400 CM-1 DATA.                                         
      DATA (SUN(I),I=  7301,  7400)/                                    
     $ 6.768E-06, 6.768E-06, 6.762E-06, 6.753E-06, 6.749E-06, 6.754E-06,
     $ 6.773E-06, 6.799E-06, 6.822E-06, 6.832E-06, 6.833E-06, 6.824E-06,
     $ 6.808E-06, 6.794E-06, 6.791E-06, 6.797E-06, 6.806E-06, 6.817E-06,
     $ 6.829E-06, 6.840E-06, 6.849E-06, 6.858E-06, 6.863E-06, 6.862E-06,
     $ 6.856E-06, 6.845E-06, 6.831E-06, 6.820E-06, 6.820E-06, 6.823E-06,
     $ 6.827E-06, 6.831E-06, 6.824E-06, 6.804E-06, 6.780E-06, 6.758E-06,
     $ 6.745E-06, 6.753E-06, 6.775E-06, 6.803E-06, 6.833E-06, 6.857E-06,
     $ 6.870E-06, 6.876E-06, 6.879E-06, 6.877E-06, 6.870E-06, 6.858E-06,
     $ 6.844E-06, 6.825E-06, 6.802E-06, 6.783E-06, 6.769E-06, 6.758E-06,
     $ 6.757E-06, 6.771E-06, 6.792E-06, 6.816E-06, 6.838E-06, 6.851E-06,
     $ 6.853E-06, 6.850E-06, 6.843E-06, 6.835E-06, 6.827E-06, 6.810E-06,
     $ 6.786E-06, 6.763E-06, 6.738E-06, 6.721E-06, 6.729E-06, 6.749E-06,
     $ 6.764E-06, 6.781E-06, 6.791E-06, 6.779E-06, 6.764E-06, 6.761E-06,
     $ 6.762E-06, 6.769E-06, 6.792E-06, 6.817E-06, 6.833E-06, 6.844E-06,
     $ 6.850E-06, 6.849E-06, 6.848E-06, 6.850E-06, 6.852E-06, 6.856E-06,
     $ 6.861E-06, 6.864E-06, 6.868E-06, 6.871E-06, 6.873E-06, 6.870E-06,
     $ 6.865E-06, 6.859E-06, 6.848E-06, 6.832E-06/
C                                                                       
C      7401 TO  7500 CM-1 DATA.                                         
      DATA (SUN(I),I=  7401,  7500)/                                    
     $ 6.819E-06, 6.806E-06, 6.789E-06, 6.772E-06, 6.764E-06, 6.764E-06,
     $ 6.766E-06, 6.775E-06, 6.793E-06, 6.811E-06, 6.822E-06, 6.833E-06,
     $ 6.846E-06, 6.855E-06, 6.861E-06, 6.864E-06, 6.864E-06, 6.862E-06,
     $ 6.858E-06, 6.857E-06, 6.859E-06, 6.862E-06, 6.862E-06, 6.857E-06,
     $ 6.849E-06, 6.838E-06, 6.827E-06, 6.821E-06, 6.822E-06, 6.827E-06,
     $ 6.835E-06, 6.846E-06, 6.858E-06, 6.869E-06, 6.879E-06, 6.886E-06,
     $ 6.891E-06, 6.891E-06, 6.887E-06, 6.880E-06, 6.873E-06, 6.864E-06,
     $ 6.857E-06, 6.856E-06, 6.858E-06, 6.862E-06, 6.868E-06, 6.871E-06,
     $ 6.869E-06, 6.867E-06, 6.862E-06, 6.856E-06, 6.855E-06, 6.857E-06,
     $ 6.860E-06, 6.867E-06, 6.878E-06, 6.885E-06, 6.887E-06, 6.880E-06,
     $ 6.857E-06, 6.822E-06, 6.784E-06, 6.750E-06, 6.731E-06, 6.736E-06,
     $ 6.760E-06, 6.792E-06, 6.825E-06, 6.853E-06, 6.871E-06, 6.880E-06,
     $ 6.884E-06, 6.887E-06, 6.889E-06, 6.890E-06, 6.893E-06, 6.900E-06,
     $ 6.911E-06, 6.923E-06, 6.934E-06, 6.940E-06, 6.934E-06, 6.920E-06,
     $ 6.904E-06, 6.889E-06, 6.881E-06, 6.889E-06, 6.906E-06, 6.923E-06,
     $ 6.939E-06, 6.950E-06, 6.954E-06, 6.953E-06, 6.953E-06, 6.953E-06,
     $ 6.954E-06, 6.954E-06, 6.954E-06, 6.954E-06/
C                                                                       
C      7501 TO  7600 CM-1 DATA.                                         
      DATA (SUN(I),I=  7501,  7600)/                                    
     $ 6.947E-06, 6.923E-06, 6.886E-06, 6.846E-06, 6.806E-06, 6.779E-06,
     $ 6.783E-06, 6.813E-06, 6.850E-06, 6.887E-06, 6.917E-06, 6.933E-06,
     $ 6.938E-06, 6.941E-06, 6.941E-06, 6.933E-06, 6.921E-06, 6.909E-06,
     $ 6.886E-06, 6.851E-06, 6.823E-06, 6.800E-06, 6.772E-06, 6.760E-06,
     $ 6.781E-06, 6.813E-06, 6.847E-06, 6.891E-06, 6.931E-06, 6.954E-06,
     $ 6.965E-06, 6.968E-06, 6.960E-06, 6.946E-06, 6.929E-06, 6.915E-06,
     $ 6.912E-06, 6.918E-06, 6.929E-06, 6.946E-06, 6.961E-06, 6.968E-06,
     $ 6.970E-06, 6.971E-06, 6.970E-06, 6.974E-06, 6.983E-06, 6.993E-06,
     $ 7.001E-06, 7.007E-06, 7.008E-06, 7.004E-06, 6.997E-06, 6.989E-06,
     $ 6.983E-06, 6.981E-06, 6.980E-06, 6.984E-06, 6.987E-06, 6.989E-06,
     $ 6.990E-06, 6.990E-06, 6.986E-06, 6.979E-06, 6.974E-06, 6.968E-06,
     $ 6.964E-06, 6.964E-06, 6.966E-06, 6.971E-06, 6.978E-06, 6.986E-06,
     $ 6.994E-06, 7.003E-06, 7.012E-06, 7.020E-06, 7.027E-06, 7.033E-06,
     $ 7.037E-06, 7.041E-06, 7.043E-06, 7.039E-06, 7.021E-06, 6.995E-06,
     $ 6.970E-06, 6.946E-06, 6.935E-06, 6.948E-06, 6.974E-06, 6.996E-06,
     $ 7.015E-06, 7.029E-06, 7.032E-06, 7.029E-06, 7.028E-06, 7.024E-06,
     $ 6.998E-06, 6.942E-06, 6.870E-06, 6.797E-06/
C                                                                       
C      7601 TO  7700 CM-1 DATA.                                         
      DATA (SUN(I),I=  7601,  7700)/                                    
     $ 6.731E-06, 6.706E-06, 6.742E-06, 6.809E-06, 6.888E-06, 6.965E-06,
     $ 7.017E-06, 7.036E-06, 7.036E-06, 7.027E-06, 7.018E-06, 7.018E-06,
     $ 7.007E-06, 6.966E-06, 6.912E-06, 6.853E-06, 6.789E-06, 6.755E-06,
     $ 6.784E-06, 6.844E-06, 6.909E-06, 6.979E-06, 7.037E-06, 7.063E-06,
     $ 7.068E-06, 7.068E-06, 7.060E-06, 7.047E-06, 7.034E-06, 7.027E-06,
     $ 7.027E-06, 7.034E-06, 7.048E-06, 7.064E-06, 7.075E-06, 7.082E-06,
     $ 7.084E-06, 7.083E-06, 7.081E-06, 7.080E-06, 7.079E-06, 7.078E-06,
     $ 7.076E-06, 7.070E-06, 7.062E-06, 7.055E-06, 7.050E-06, 7.047E-06,
     $ 7.050E-06, 7.059E-06, 7.069E-06, 7.076E-06, 7.082E-06, 7.084E-06,
     $ 7.080E-06, 7.075E-06, 7.072E-06, 7.068E-06, 7.064E-06, 7.064E-06,
     $ 7.063E-06, 7.057E-06, 7.052E-06, 7.046E-06, 7.033E-06, 7.017E-06,
     $ 7.005E-06, 6.993E-06, 6.978E-06, 6.968E-06, 6.964E-06, 6.962E-06,
     $ 6.968E-06, 6.982E-06, 6.997E-06, 7.013E-06, 7.027E-06, 7.029E-06,
     $ 7.026E-06, 7.024E-06, 7.020E-06, 7.021E-06, 7.032E-06, 7.047E-06,
     $ 7.060E-06, 7.070E-06, 7.077E-06, 7.079E-06, 7.080E-06, 7.081E-06,
     $ 7.085E-06, 7.090E-06, 7.095E-06, 7.099E-06, 7.103E-06, 7.105E-06,
     $ 7.106E-06, 7.107E-06, 7.104E-06, 7.092E-06/
C                                                                       
C      7701 TO  7800 CM-1 DATA.                                         
      DATA (SUN(I),I=  7701,  7800)/                                    
     $ 7.074E-06, 7.055E-06, 7.035E-06, 7.018E-06, 7.015E-06, 7.025E-06,
     $ 7.038E-06, 7.056E-06, 7.076E-06, 7.092E-06, 7.101E-06, 7.108E-06,
     $ 7.113E-06, 7.118E-06, 7.120E-06, 7.121E-06, 7.119E-06, 7.116E-06,
     $ 7.112E-06, 7.109E-06, 7.107E-06, 7.107E-06, 7.106E-06, 7.101E-06,
     $ 7.088E-06, 7.073E-06, 7.058E-06, 7.045E-06, 7.039E-06, 7.049E-06,
     $ 7.070E-06, 7.092E-06, 7.114E-06, 7.131E-06, 7.139E-06, 7.139E-06,
     $ 7.137E-06, 7.134E-06, 7.131E-06, 7.125E-06, 7.117E-06, 7.110E-06,
     $ 7.103E-06, 7.100E-06, 7.098E-06, 7.089E-06, 7.073E-06, 7.053E-06,
     $ 7.029E-06, 7.014E-06, 7.024E-06, 7.051E-06, 7.087E-06, 7.126E-06,
     $ 7.156E-06, 7.173E-06, 7.177E-06, 7.168E-06, 7.156E-06, 7.146E-06,
     $ 7.137E-06, 7.135E-06, 7.145E-06, 7.161E-06, 7.174E-06, 7.187E-06,
     $ 7.196E-06, 7.198E-06, 7.201E-06, 7.202E-06, 7.201E-06, 7.196E-06,
     $ 7.190E-06, 7.181E-06, 7.169E-06, 7.161E-06, 7.157E-06, 7.153E-06,
     $ 7.150E-06, 7.152E-06, 7.154E-06, 7.152E-06, 7.152E-06, 7.152E-06,
     $ 7.147E-06, 7.139E-06, 7.129E-06, 7.113E-06, 7.090E-06, 7.061E-06,
     $ 7.026E-06, 6.984E-06, 6.929E-06, 6.848E-06, 6.728E-06, 6.575E-06,
     $ 6.417E-06, 6.282E-06, 6.208E-06, 6.231E-06/
C                                                                       
C      7801 TO  7900 CM-1 DATA.                                         
      DATA (SUN(I),I=  7801,  7900)/                                    
     $ 6.339E-06, 6.488E-06, 6.646E-06, 6.790E-06, 6.896E-06, 6.970E-06,
     $ 7.033E-06, 7.087E-06, 7.130E-06, 7.164E-06, 7.188E-06, 7.201E-06,
     $ 7.206E-06, 7.210E-06, 7.215E-06, 7.218E-06, 7.223E-06, 7.232E-06,
     $ 7.243E-06, 7.253E-06, 7.261E-06, 7.267E-06, 7.270E-06, 7.271E-06,
     $ 7.272E-06, 7.273E-06, 7.275E-06, 7.277E-06, 7.278E-06, 7.279E-06,
     $ 7.278E-06, 7.277E-06, 7.275E-06, 7.273E-06, 7.271E-06, 7.269E-06,
     $ 7.267E-06, 7.265E-06, 7.262E-06, 7.258E-06, 7.253E-06, 7.246E-06,
     $ 7.237E-06, 7.226E-06, 7.214E-06, 7.202E-06, 7.191E-06, 7.185E-06,
     $ 7.184E-06, 7.185E-06, 7.189E-06, 7.196E-06, 7.202E-06, 7.207E-06,
     $ 7.214E-06, 7.220E-06, 7.223E-06, 7.225E-06, 7.224E-06, 7.221E-06,
     $ 7.216E-06, 7.212E-06, 7.209E-06, 7.208E-06, 7.211E-06, 7.216E-06,
     $ 7.221E-06, 7.226E-06, 7.227E-06, 7.225E-06, 7.221E-06, 7.215E-06,
     $ 7.208E-06, 7.204E-06, 7.201E-06, 7.198E-06, 7.195E-06, 7.190E-06,
     $ 7.181E-06, 7.164E-06, 7.133E-06, 7.099E-06, 7.070E-06, 7.049E-06,
     $ 7.048E-06, 7.073E-06, 7.106E-06, 7.128E-06, 7.140E-06, 7.139E-06,
     $ 7.126E-06, 7.116E-06, 7.122E-06, 7.141E-06, 7.166E-06, 7.190E-06,
     $ 7.210E-06, 7.220E-06, 7.217E-06, 7.203E-06/
C                                                                       
C      7901 TO  8000 CM-1 DATA.                                         
      DATA (SUN(I),I=  7901,  8000)/                                    
     $ 7.184E-06, 7.167E-06, 7.150E-06, 7.144E-06, 7.150E-06, 7.152E-06,
     $ 7.147E-06, 7.140E-06, 7.129E-06, 7.121E-06, 7.133E-06, 7.155E-06,
     $ 7.177E-06, 7.199E-06, 7.216E-06, 7.222E-06, 7.223E-06, 7.222E-06,
     $ 7.219E-06, 7.208E-06, 7.187E-06, 7.161E-06, 7.137E-06, 7.118E-06,
     $ 7.117E-06, 7.134E-06, 7.162E-06, 7.189E-06, 7.208E-06, 7.215E-06,
     $ 7.212E-06, 7.202E-06, 7.195E-06, 7.197E-06, 7.205E-06, 7.214E-06,
     $ 7.224E-06, 7.230E-06, 7.230E-06, 7.222E-06, 7.208E-06, 7.189E-06,
     $ 7.170E-06, 7.158E-06, 7.156E-06, 7.163E-06, 7.180E-06, 7.199E-06,
     $ 7.209E-06, 7.210E-06, 7.205E-06, 7.194E-06, 7.181E-06, 7.171E-06,
     $ 7.169E-06, 7.171E-06, 7.173E-06, 7.175E-06, 7.181E-06, 7.187E-06,
     $ 7.189E-06, 7.192E-06, 7.198E-06, 7.200E-06, 7.199E-06, 7.201E-06,
     $ 7.206E-06, 7.210E-06, 7.213E-06, 7.216E-06, 7.217E-06, 7.214E-06,
     $ 7.211E-06, 7.209E-06, 7.209E-06, 7.208E-06, 7.210E-06, 7.215E-06,
     $ 7.215E-06, 7.207E-06, 7.194E-06, 7.178E-06, 7.155E-06, 7.139E-06,
     $ 7.139E-06, 7.146E-06, 7.153E-06, 7.163E-06, 7.174E-06, 7.179E-06,
     $ 7.184E-06, 7.197E-06, 7.213E-06, 7.225E-06, 7.234E-06, 7.240E-06,
     $ 7.240E-06, 7.237E-06, 7.237E-06, 7.238E-06/
C                                                                       
C      8001 TO  8100 CM-1 DATA.                                         
      DATA (SUN(I),I=  8001,  8100)/                                    
     $ 7.241E-06, 7.246E-06, 7.251E-06, 7.254E-06, 7.254E-06, 7.253E-06,
     $ 7.250E-06, 7.248E-06, 7.248E-06, 7.250E-06, 7.252E-06, 7.250E-06,
     $ 7.240E-06, 7.226E-06, 7.212E-06, 7.196E-06, 7.186E-06, 7.189E-06,
     $ 7.197E-06, 7.200E-06, 7.201E-06, 7.201E-06, 7.196E-06, 7.190E-06,
     $ 7.192E-06, 7.200E-06, 7.207E-06, 7.214E-06, 7.222E-06, 7.229E-06,
     $ 7.235E-06, 7.239E-06, 7.241E-06, 7.241E-06, 7.237E-06, 7.223E-06,
     $ 7.195E-06, 7.160E-06, 7.126E-06, 7.093E-06, 7.076E-06, 7.086E-06,
     $ 7.102E-06, 7.112E-06, 7.123E-06, 7.128E-06, 7.124E-06, 7.129E-06,
     $ 7.144E-06, 7.159E-06, 7.174E-06, 7.192E-06, 7.204E-06, 7.211E-06,
     $ 7.217E-06, 7.221E-06, 7.222E-06, 7.222E-06, 7.224E-06, 7.221E-06,
     $ 7.208E-06, 7.188E-06, 7.166E-06, 7.138E-06, 7.114E-06, 7.109E-06,
     $ 7.114E-06, 7.120E-06, 7.135E-06, 7.158E-06, 7.178E-06, 7.194E-06,
     $ 7.211E-06, 7.225E-06, 7.232E-06, 7.235E-06, 7.237E-06, 7.238E-06,
     $ 7.237E-06, 7.235E-06, 7.234E-06, 7.232E-06, 7.231E-06, 7.230E-06,
     $ 7.232E-06, 7.235E-06, 7.238E-06, 7.240E-06, 7.239E-06, 7.236E-06,
     $ 7.229E-06, 7.221E-06, 7.213E-06, 7.208E-06, 7.204E-06, 7.197E-06,
     $ 7.191E-06, 7.188E-06, 7.183E-06, 7.182E-06/
C                                                                       
C      8101 TO  8200 CM-1 DATA.                                         
      DATA (SUN(I),I=  8101,  8200)/                                    
     $ 7.190E-06, 7.203E-06, 7.212E-06, 7.222E-06, 7.232E-06, 7.236E-06,
     $ 7.236E-06, 7.238E-06, 7.239E-06, 7.235E-06, 7.226E-06, 7.217E-06,
     $ 7.209E-06, 7.200E-06, 7.194E-06, 7.196E-06, 7.201E-06, 7.207E-06,
     $ 7.216E-06, 7.231E-06, 7.244E-06, 7.254E-06, 7.258E-06, 7.257E-06,
     $ 7.251E-06, 7.244E-06, 7.240E-06, 7.243E-06, 7.250E-06, 7.259E-06,
     $ 7.268E-06, 7.276E-06, 7.280E-06, 7.281E-06, 7.282E-06, 7.282E-06,
     $ 7.282E-06, 7.283E-06, 7.286E-06, 7.289E-06, 7.292E-06, 7.280E-06,
     $ 7.242E-06, 7.187E-06, 7.131E-06, 7.075E-06, 7.043E-06, 7.061E-06,
     $ 7.106E-06, 7.152E-06, 7.199E-06, 7.238E-06, 7.256E-06, 7.267E-06,
     $ 7.278E-06, 7.287E-06, 7.292E-06, 7.292E-06, 7.286E-06, 7.277E-06,
     $ 7.269E-06, 7.265E-06, 7.264E-06, 7.267E-06, 7.274E-06, 7.284E-06,
     $ 7.292E-06, 7.298E-06, 7.300E-06, 7.299E-06, 7.290E-06, 7.275E-06,
     $ 7.257E-06, 7.242E-06, 7.227E-06, 7.221E-06, 7.228E-06, 7.240E-06,
     $ 7.251E-06, 7.264E-06, 7.270E-06, 7.268E-06, 7.263E-06, 7.260E-06,
     $ 7.257E-06, 7.256E-06, 7.261E-06, 7.266E-06, 7.271E-06, 7.276E-06,
     $ 7.282E-06, 7.287E-06, 7.291E-06, 7.293E-06, 7.293E-06, 7.287E-06,
     $ 7.275E-06, 7.262E-06, 7.250E-06, 7.240E-06/
C                                                                       
C      8201 TO  8300 CM-1 DATA.                                         
      DATA (SUN(I),I=  8201,  8300)/                                    
     $ 7.235E-06, 7.238E-06, 7.246E-06, 7.253E-06, 7.259E-06, 7.266E-06,
     $ 7.271E-06, 7.273E-06, 7.275E-06, 7.280E-06, 7.283E-06, 7.284E-06,
     $ 7.286E-06, 7.288E-06, 7.289E-06, 7.291E-06, 7.295E-06, 7.299E-06,
     $ 7.304E-06, 7.308E-06, 7.309E-06, 7.306E-06, 7.303E-06, 7.300E-06,
     $ 7.299E-06, 7.299E-06, 7.302E-06, 7.306E-06, 7.307E-06, 7.308E-06,
     $ 7.310E-06, 7.312E-06, 7.312E-06, 7.311E-06, 7.307E-06, 7.299E-06,
     $ 7.288E-06, 7.279E-06, 7.273E-06, 7.271E-06, 7.276E-06, 7.286E-06,
     $ 7.299E-06, 7.308E-06, 7.312E-06, 7.311E-06, 7.307E-06, 7.299E-06,
     $ 7.293E-06, 7.289E-06, 7.282E-06, 7.273E-06, 7.264E-06, 7.255E-06,
     $ 7.239E-06, 7.208E-06, 7.167E-06, 7.121E-06, 7.074E-06, 7.051E-06,
     $ 7.077E-06, 7.131E-06, 7.190E-06, 7.252E-06, 7.297E-06, 7.313E-06,
     $ 7.313E-06, 7.295E-06, 7.230E-06, 7.116E-06, 6.981E-06, 6.844E-06,
     $ 6.733E-06, 6.712E-06, 6.791E-06, 6.916E-06, 7.054E-06, 7.188E-06,
     $ 7.282E-06, 7.327E-06, 7.350E-06, 7.366E-06, 7.373E-06, 7.377E-06,
     $ 7.380E-06, 7.381E-06, 7.381E-06, 7.379E-06, 7.372E-06, 7.358E-06,
     $ 7.339E-06, 7.323E-06, 7.312E-06, 7.310E-06, 7.320E-06, 7.336E-06,
     $ 7.352E-06, 7.362E-06, 7.360E-06, 7.347E-06/
C                                                                       
C      8301 TO  8400 CM-1 DATA.                                         
      DATA (SUN(I),I=  8301,  8400)/                                    
     $ 7.332E-06, 7.317E-06, 7.305E-06, 7.282E-06, 7.223E-06, 7.133E-06,
     $ 7.035E-06, 6.935E-06, 6.877E-06, 6.908E-06, 6.999E-06, 7.106E-06,
     $ 7.218E-06, 7.308E-06, 7.354E-06, 7.373E-06, 7.386E-06, 7.394E-06,
     $ 7.397E-06, 7.397E-06, 7.392E-06, 7.387E-06, 7.381E-06, 7.376E-06,
     $ 7.374E-06, 7.375E-06, 7.375E-06, 7.378E-06, 7.386E-06, 7.395E-06,
     $ 7.398E-06, 7.377E-06, 7.316E-06, 7.232E-06, 7.142E-06, 7.057E-06,
     $ 6.994E-06, 6.963E-06, 6.949E-06, 6.939E-06, 6.932E-06, 6.949E-06,
     $ 7.013E-06, 7.102E-06, 7.170E-06, 7.198E-06, 7.180E-06, 7.117E-06,
     $ 7.035E-06, 6.993E-06, 7.023E-06, 7.094E-06, 7.175E-06, 7.256E-06,
     $ 7.318E-06, 7.346E-06, 7.352E-06, 7.345E-06, 7.331E-06, 7.320E-06,
     $ 7.301E-06, 7.275E-06, 7.259E-06, 7.253E-06, 7.246E-06, 7.251E-06,
     $ 7.278E-06, 7.308E-06, 7.331E-06, 7.353E-06, 7.366E-06, 7.364E-06,
     $ 7.360E-06, 7.358E-06, 7.358E-06, 7.363E-06, 7.370E-06, 7.371E-06,
     $ 7.366E-06, 7.360E-06, 7.349E-06, 7.336E-06, 7.327E-06, 7.325E-06,
     $ 7.325E-06, 7.328E-06, 7.335E-06, 7.344E-06, 7.351E-06, 7.355E-06,
     $ 7.358E-06, 7.361E-06, 7.362E-06, 7.360E-06, 7.358E-06, 7.359E-06,
     $ 7.357E-06, 7.356E-06, 7.354E-06, 7.344E-06/
C                                                                       
C      8401 TO  8500 CM-1 DATA.                                         
      DATA (SUN(I),I=  8401,  8500)/                                    
     $ 7.322E-06, 7.291E-06, 7.249E-06, 7.203E-06, 7.171E-06, 7.158E-06,
     $ 7.152E-06, 7.125E-06, 7.070E-06, 6.999E-06, 6.915E-06, 6.842E-06,
     $ 6.839E-06, 6.912E-06, 7.016E-06, 7.127E-06, 7.231E-06, 7.296E-06,
     $ 7.319E-06, 7.327E-06, 7.335E-06, 7.341E-06, 7.344E-06, 7.340E-06,
     $ 7.328E-06, 7.310E-06, 7.293E-06, 7.285E-06, 7.289E-06, 7.301E-06,
     $ 7.317E-06, 7.329E-06, 7.332E-06, 7.327E-06, 7.321E-06, 7.317E-06,
     $ 7.316E-06, 7.319E-06, 7.319E-06, 7.301E-06, 7.274E-06, 7.245E-06,
     $ 7.217E-06, 7.204E-06, 7.219E-06, 7.246E-06, 7.246E-06, 7.194E-06,
     $ 7.100E-06, 6.986E-06, 6.871E-06, 6.809E-06, 6.844E-06, 6.943E-06,
     $ 7.057E-06, 7.171E-06, 7.263E-06, 7.313E-06, 7.326E-06, 7.318E-06,
     $ 7.301E-06, 7.279E-06, 7.254E-06, 7.243E-06, 7.258E-06, 7.286E-06,
     $ 7.309E-06, 7.327E-06, 7.333E-06, 7.323E-06, 7.308E-06, 7.303E-06,
     $ 7.311E-06, 7.323E-06, 7.339E-06, 7.356E-06, 7.368E-06, 7.374E-06,
     $ 7.365E-06, 7.329E-06, 7.275E-06, 7.217E-06, 7.154E-06, 7.109E-06,
     $ 7.109E-06, 7.141E-06, 7.175E-06, 7.204E-06, 7.223E-06, 7.221E-06,
     $ 7.200E-06, 7.187E-06, 7.195E-06, 7.217E-06, 7.248E-06, 7.286E-06,
     $ 7.321E-06, 7.345E-06, 7.356E-06, 7.346E-06/
C                                                                       
C      8501 TO  8600 CM-1 DATA.                                         
      DATA (SUN(I),I=  8501,  8600)/                                    
     $ 7.306E-06, 7.236E-06, 7.152E-06, 7.069E-06, 7.002E-06, 6.975E-06,
     $ 6.996E-06, 7.042E-06, 7.094E-06, 7.150E-06, 7.202E-06, 7.238E-06,
     $ 7.264E-06, 7.285E-06, 7.299E-06, 7.308E-06, 7.313E-06, 7.318E-06,
     $ 7.324E-06, 7.331E-06, 7.334E-06, 7.332E-06, 7.322E-06, 7.309E-06,
     $ 7.296E-06, 7.285E-06, 7.281E-06, 7.290E-06, 7.304E-06, 7.318E-06,
     $ 7.329E-06, 7.334E-06, 7.331E-06, 7.325E-06, 7.318E-06, 7.312E-06,
     $ 7.312E-06, 7.315E-06, 7.318E-06, 7.321E-06, 7.321E-06, 7.315E-06,
     $ 7.308E-06, 7.300E-06, 7.295E-06, 7.296E-06, 7.283E-06, 7.241E-06,
     $ 7.186E-06, 7.129E-06, 7.068E-06, 7.034E-06, 7.059E-06, 7.112E-06,
     $ 7.166E-06, 7.225E-06, 7.275E-06, 7.300E-06, 7.314E-06, 7.328E-06,
     $ 7.337E-06, 7.335E-06, 7.317E-06, 7.288E-06, 7.259E-06, 7.233E-06,
     $ 7.221E-06, 7.236E-06, 7.262E-06, 7.275E-06, 7.271E-06, 7.252E-06,
     $ 7.214E-06, 7.170E-06, 7.144E-06, 7.145E-06, 7.161E-06, 7.185E-06,
     $ 7.215E-06, 7.246E-06, 7.270E-06, 7.287E-06, 7.299E-06, 7.303E-06,
     $ 7.287E-06, 7.246E-06, 7.195E-06, 7.153E-06, 7.122E-06, 7.120E-06,
     $ 7.161E-06, 7.217E-06, 7.258E-06, 7.286E-06, 7.299E-06, 7.291E-06,
     $ 7.285E-06, 7.297E-06, 7.314E-06, 7.327E-06/
C                                                                       
C      8601 TO  8700 CM-1 DATA.                                         
      DATA (SUN(I),I=  8601,  8700)/                                    
     $ 7.334E-06, 7.332E-06, 7.317E-06, 7.301E-06, 7.283E-06, 7.249E-06,
     $ 7.200E-06, 7.142E-06, 7.064E-06, 6.995E-06, 6.968E-06, 6.973E-06,
     $ 7.005E-06, 7.077E-06, 7.158E-06, 7.219E-06, 7.267E-06, 7.294E-06,
     $ 7.283E-06, 7.241E-06, 7.183E-06, 7.116E-06, 7.064E-06, 7.052E-06,
     $ 7.073E-06, 7.117E-06, 7.177E-06, 7.231E-06, 7.270E-06, 7.301E-06,
     $ 7.323E-06, 7.334E-06, 7.339E-06, 7.339E-06, 7.331E-06, 7.321E-06,
     $ 7.316E-06, 7.314E-06, 7.312E-06, 7.311E-06, 7.314E-06, 7.318E-06,
     $ 7.321E-06, 7.324E-06, 7.329E-06, 7.332E-06, 7.328E-06, 7.314E-06,
     $ 7.294E-06, 7.275E-06, 7.254E-06, 7.242E-06, 7.251E-06, 7.272E-06,
     $ 7.295E-06, 7.321E-06, 7.343E-06, 7.349E-06, 7.344E-06, 7.335E-06,
     $ 7.323E-06, 7.314E-06, 7.313E-06, 7.320E-06, 7.327E-06, 7.333E-06,
     $ 7.333E-06, 7.326E-06, 7.314E-06, 7.302E-06, 7.289E-06, 7.277E-06,
     $ 7.268E-06, 7.258E-06, 7.245E-06, 7.230E-06, 7.218E-06, 7.209E-06,
     $ 7.205E-06, 7.212E-06, 7.229E-06, 7.251E-06, 7.273E-06, 7.292E-06,
     $ 7.303E-06, 7.303E-06, 7.293E-06, 7.276E-06, 7.263E-06, 7.255E-06,
     $ 7.259E-06, 7.271E-06, 7.279E-06, 7.278E-06, 7.272E-06, 7.259E-06,
     $ 7.249E-06, 7.257E-06, 7.276E-06, 7.292E-06/
C                                                                       
C      8701 TO  8800 CM-1 DATA.                                         
      DATA (SUN(I),I=  8701,  8800)/                                    
     $ 7.300E-06, 7.297E-06, 7.281E-06, 7.257E-06, 7.240E-06, 7.239E-06,
     $ 7.250E-06, 7.269E-06, 7.291E-06, 7.307E-06, 7.311E-06, 7.305E-06,
     $ 7.295E-06, 7.287E-06, 7.291E-06, 7.304E-06, 7.320E-06, 7.338E-06,
     $ 7.351E-06, 7.355E-06, 7.349E-06, 7.340E-06, 7.329E-06, 7.317E-06,
     $ 7.309E-06, 7.308E-06, 7.308E-06, 7.305E-06, 7.300E-06, 7.285E-06,
     $ 7.264E-06, 7.249E-06, 7.244E-06, 7.243E-06, 7.242E-06, 7.231E-06,
     $ 7.208E-06, 7.174E-06, 7.140E-06, 7.129E-06, 7.152E-06, 7.193E-06,
     $ 7.243E-06, 7.294E-06, 7.326E-06, 7.332E-06, 7.314E-06, 7.275E-06,
     $ 7.230E-06, 7.192E-06, 7.166E-06, 7.162E-06, 7.191E-06, 7.233E-06,
     $ 7.265E-06, 7.288E-06, 7.296E-06, 7.279E-06, 7.256E-06, 7.240E-06,
     $ 7.225E-06, 7.204E-06, 7.178E-06, 7.147E-06, 7.116E-06, 7.091E-06,
     $ 7.087E-06, 7.115E-06, 7.158E-06, 7.198E-06, 7.235E-06, 7.262E-06,
     $ 7.261E-06, 7.243E-06, 7.224E-06, 7.207E-06, 7.199E-06, 7.213E-06,
     $ 7.238E-06, 7.247E-06, 7.240E-06, 7.223E-06, 7.191E-06, 7.165E-06,
     $ 7.164E-06, 7.174E-06, 7.179E-06, 7.181E-06, 7.178E-06, 7.178E-06,
     $ 7.196E-06, 7.233E-06, 7.278E-06, 7.324E-06, 7.360E-06, 7.379E-06,
     $ 7.385E-06, 7.382E-06, 7.372E-06, 7.356E-06/
C                                                                       
C      8801 TO  8900 CM-1 DATA.                                         
      DATA (SUN(I),I=  8801,  8900)/                                    
     $ 7.333E-06, 7.308E-06, 7.286E-06, 7.268E-06, 7.259E-06, 7.262E-06,
     $ 7.276E-06, 7.296E-06, 7.319E-06, 7.344E-06, 7.362E-06, 7.369E-06,
     $ 7.365E-06, 7.352E-06, 7.332E-06, 7.306E-06, 7.279E-06, 7.257E-06,
     $ 7.231E-06, 7.195E-06, 7.164E-06, 7.148E-06, 7.143E-06, 7.158E-06,
     $ 7.194E-06, 7.235E-06, 7.269E-06, 7.294E-06, 7.311E-06, 7.324E-06,
     $ 7.335E-06, 7.338E-06, 7.337E-06, 7.328E-06, 7.310E-06, 7.292E-06,
     $ 7.278E-06, 7.269E-06, 7.269E-06, 7.277E-06, 7.286E-06, 7.304E-06,
     $ 7.319E-06, 7.316E-06, 7.301E-06, 7.277E-06, 7.238E-06, 7.200E-06,
     $ 7.184E-06, 7.178E-06, 7.168E-06, 7.164E-06, 7.164E-06, 7.156E-06,
     $ 7.157E-06, 7.187E-06, 7.231E-06, 7.277E-06, 7.324E-06, 7.350E-06,
     $ 7.344E-06, 7.319E-06, 7.282E-06, 7.241E-06, 7.214E-06, 7.208E-06,
     $ 7.213E-06, 7.229E-06, 7.254E-06, 7.281E-06, 7.305E-06, 7.327E-06,
     $ 7.340E-06, 7.339E-06, 7.324E-06, 7.305E-06, 7.284E-06, 7.263E-06,
     $ 7.235E-06, 7.190E-06, 7.125E-06, 7.045E-06, 6.978E-06, 6.956E-06,
     $ 6.984E-06, 7.048E-06, 7.132E-06, 7.209E-06, 7.254E-06, 7.266E-06,
     $ 7.266E-06, 7.269E-06, 7.276E-06, 7.288E-06, 7.308E-06, 7.333E-06,
     $ 7.354E-06, 7.368E-06, 7.375E-06, 7.371E-06/
C                                                                       
C      8901 TO  9000 CM-1 DATA.                                         
      DATA (SUN(I),I=  8901,  9000)/                                    
     $ 7.358E-06, 7.338E-06, 7.320E-06, 7.313E-06, 7.316E-06, 7.320E-06,
     $ 7.326E-06, 7.335E-06, 7.341E-06, 7.344E-06, 7.345E-06, 7.343E-06,
     $ 7.335E-06, 7.321E-06, 7.303E-06, 7.290E-06, 7.282E-06, 7.276E-06,
     $ 7.272E-06, 7.270E-06, 7.265E-06, 7.254E-06, 7.242E-06, 7.225E-06,
     $ 7.198E-06, 7.176E-06, 7.167E-06, 7.168E-06, 7.186E-06, 7.227E-06,
     $ 7.259E-06, 7.258E-06, 7.232E-06, 7.190E-06, 7.136E-06, 7.100E-06,
     $ 7.109E-06, 7.150E-06, 7.201E-06, 7.254E-06, 7.296E-06, 7.319E-06,
     $ 7.327E-06, 7.328E-06, 7.324E-06, 7.315E-06, 7.306E-06, 7.299E-06,
     $ 7.296E-06, 7.305E-06, 7.322E-06, 7.343E-06, 7.364E-06, 7.376E-06,
     $ 7.367E-06, 7.339E-06, 7.300E-06, 7.255E-06, 7.218E-06, 7.200E-06,
     $ 7.205E-06, 7.224E-06, 7.247E-06, 7.268E-06, 7.278E-06, 7.270E-06,
     $ 7.256E-06, 7.248E-06, 7.245E-06, 7.254E-06, 7.279E-06, 7.309E-06,
     $ 7.334E-06, 7.352E-06, 7.360E-06, 7.351E-06, 7.320E-06, 7.273E-06,
     $ 7.223E-06, 7.182E-06, 7.155E-06, 7.156E-06, 7.188E-06, 7.228E-06,
     $ 7.257E-06, 7.272E-06, 7.262E-06, 7.233E-06, 7.203E-06, 7.184E-06,
     $ 7.184E-06, 7.205E-06, 7.230E-06, 7.245E-06, 7.251E-06, 7.248E-06,
     $ 7.240E-06, 7.237E-06, 7.248E-06, 7.266E-06/
C                                                                       
C      9001 TO  9100 CM-1 DATA.                                         
      DATA (SUN(I),I=  9001,  9100)/                                    
     $ 7.282E-06, 7.294E-06, 7.303E-06, 7.305E-06, 7.300E-06, 7.299E-06,
     $ 7.305E-06, 7.307E-06, 7.308E-06, 7.310E-06, 7.305E-06, 7.291E-06,
     $ 7.277E-06, 7.268E-06, 7.269E-06, 7.276E-06, 7.286E-06, 7.294E-06,
     $ 7.294E-06, 7.284E-06, 7.274E-06, 7.270E-06, 7.269E-06, 7.276E-06,
     $ 7.287E-06, 7.291E-06, 7.287E-06, 7.279E-06, 7.268E-06, 7.256E-06,
     $ 7.246E-06, 7.241E-06, 7.247E-06, 7.259E-06, 7.272E-06, 7.287E-06,
     $ 7.297E-06, 7.296E-06, 7.283E-06, 7.270E-06, 7.262E-06, 7.266E-06,
     $ 7.282E-06, 7.305E-06, 7.324E-06, 7.330E-06, 7.320E-06, 7.297E-06,
     $ 7.275E-06, 7.262E-06, 7.261E-06, 7.270E-06, 7.280E-06, 7.286E-06,
     $ 7.288E-06, 7.287E-06, 7.288E-06, 7.301E-06, 7.315E-06, 7.322E-06,
     $ 7.323E-06, 7.321E-06, 7.312E-06, 7.306E-06, 7.311E-06, 7.322E-06,
     $ 7.329E-06, 7.323E-06, 7.293E-06, 7.236E-06, 7.169E-06, 7.104E-06,
     $ 7.047E-06, 7.022E-06, 7.042E-06, 7.083E-06, 7.135E-06, 7.204E-06,
     $ 7.267E-06, 7.306E-06, 7.332E-06, 7.346E-06, 7.346E-06, 7.342E-06,
     $ 7.342E-06, 7.342E-06, 7.345E-06, 7.351E-06, 7.352E-06, 7.353E-06,
     $ 7.356E-06, 7.363E-06, 7.372E-06, 7.384E-06, 7.389E-06, 7.384E-06,
     $ 7.367E-06, 7.334E-06, 7.282E-06, 7.222E-06/
C                                                                       
C      9101 TO  9200 CM-1 DATA.                                         
      DATA (SUN(I),I=  9101,  9200)/                                    
     $ 7.152E-06, 7.078E-06, 7.022E-06, 7.001E-06, 7.011E-06, 7.059E-06,
     $ 7.142E-06, 7.228E-06, 7.290E-06, 7.331E-06, 7.350E-06, 7.332E-06,
     $ 7.283E-06, 7.227E-06, 7.172E-06, 7.121E-06, 7.102E-06, 7.136E-06,
     $ 7.192E-06, 7.236E-06, 7.273E-06, 7.286E-06, 7.253E-06, 7.209E-06,
     $ 7.190E-06, 7.183E-06, 7.183E-06, 7.208E-06, 7.242E-06, 7.261E-06,
     $ 7.268E-06, 7.269E-06, 7.250E-06, 7.202E-06, 7.118E-06, 6.995E-06,
     $ 6.848E-06, 6.706E-06, 6.598E-06, 6.562E-06, 6.618E-06, 6.738E-06,
     $ 6.882E-06, 7.024E-06, 7.137E-06, 7.206E-06, 7.245E-06, 7.273E-06,
     $ 7.299E-06, 7.327E-06, 7.359E-06, 7.390E-06, 7.415E-06, 7.426E-06,
     $ 7.413E-06, 7.382E-06, 7.349E-06, 7.315E-06, 7.295E-06, 7.310E-06,
     $ 7.349E-06, 7.390E-06, 7.426E-06, 7.452E-06, 7.462E-06, 7.460E-06,
     $ 7.458E-06, 7.464E-06, 7.472E-06, 7.474E-06, 7.463E-06, 7.441E-06,
     $ 7.412E-06, 7.379E-06, 7.352E-06, 7.345E-06, 7.354E-06, 7.367E-06,
     $ 7.376E-06, 7.367E-06, 7.332E-06, 7.274E-06, 7.207E-06, 7.155E-06,
     $ 7.143E-06, 7.172E-06, 7.231E-06, 7.306E-06, 7.374E-06, 7.420E-06,
     $ 7.440E-06, 7.430E-06, 7.368E-06, 7.253E-06, 7.119E-06, 6.991E-06,
     $ 6.892E-06, 6.872E-06, 6.940E-06, 7.041E-06/
C                                                                       
C      9201 TO  9300 CM-1 DATA.                                         
      DATA (SUN(I),I=  9201,  9300)/                                    
     $ 7.142E-06, 7.229E-06, 7.289E-06, 7.327E-06, 7.360E-06, 7.393E-06,
     $ 7.426E-06, 7.450E-06, 7.458E-06, 7.457E-06, 7.455E-06, 7.452E-06,
     $ 7.448E-06, 7.438E-06, 7.411E-06, 7.375E-06, 7.339E-06, 7.304E-06,
     $ 7.283E-06, 7.294E-06, 7.324E-06, 7.350E-06, 7.369E-06, 7.379E-06,
     $ 7.375E-06, 7.358E-06, 7.343E-06, 7.326E-06, 7.281E-06, 7.197E-06,
     $ 7.102E-06, 7.015E-06, 6.947E-06, 6.933E-06, 6.977E-06, 7.039E-06,
     $ 7.089E-06, 7.126E-06, 7.153E-06, 7.179E-06, 7.211E-06, 7.239E-06,
     $ 7.236E-06, 7.197E-06, 7.130E-06, 7.052E-06, 7.006E-06, 7.031E-06,
     $ 7.106E-06, 7.194E-06, 7.284E-06, 7.352E-06, 7.379E-06, 7.380E-06,
     $ 7.376E-06, 7.370E-06, 7.365E-06, 7.365E-06, 7.367E-06, 7.373E-06,
     $ 7.384E-06, 7.397E-06, 7.394E-06, 7.358E-06, 7.299E-06, 7.220E-06,
     $ 7.123E-06, 7.047E-06, 7.025E-06, 7.043E-06, 7.091E-06, 7.173E-06,
     $ 7.257E-06, 7.320E-06, 7.365E-06, 7.394E-06, 7.405E-06, 7.408E-06,
     $ 7.404E-06, 7.395E-06, 7.379E-06, 7.357E-06, 7.335E-06, 7.319E-06,
     $ 7.314E-06, 7.323E-06, 7.343E-06, 7.368E-06, 7.389E-06, 7.404E-06,
     $ 7.411E-06, 7.401E-06, 7.376E-06, 7.346E-06, 7.301E-06, 7.232E-06,
     $ 7.163E-06, 7.115E-06, 7.070E-06, 7.045E-06/
C                                                                       
C      9301 TO  9400 CM-1 DATA.                                         
      DATA (SUN(I),I=  9301,  9400)/                                    
     $ 7.072E-06, 7.124E-06, 7.167E-06, 7.216E-06, 7.269E-06, 7.302E-06,
     $ 7.322E-06, 7.346E-06, 7.369E-06, 7.382E-06, 7.387E-06, 7.384E-06,
     $ 7.362E-06, 7.315E-06, 7.242E-06, 7.157E-06, 7.076E-06, 7.019E-06,
     $ 7.009E-06, 7.054E-06, 7.134E-06, 7.223E-06, 7.297E-06, 7.339E-06,
     $ 7.347E-06, 7.337E-06, 7.319E-06, 7.309E-06, 7.317E-06, 7.334E-06,
     $ 7.352E-06, 7.361E-06, 7.349E-06, 7.320E-06, 7.286E-06, 7.251E-06,
     $ 7.232E-06, 7.247E-06, 7.278E-06, 7.309E-06, 7.342E-06, 7.367E-06,
     $ 7.366E-06, 7.336E-06, 7.294E-06, 7.234E-06, 7.136E-06, 7.025E-06,
     $ 6.943E-06, 6.884E-06, 6.849E-06, 6.870E-06, 6.925E-06, 6.958E-06,
     $ 6.969E-06, 6.981E-06, 6.994E-06, 7.018E-06, 7.080E-06, 7.170E-06,
     $ 7.253E-06, 7.318E-06, 7.359E-06, 7.374E-06, 7.373E-06, 7.369E-06,
     $ 7.364E-06, 7.358E-06, 7.355E-06, 7.353E-06, 7.351E-06, 7.339E-06,
     $ 7.302E-06, 7.243E-06, 7.175E-06, 7.107E-06, 7.061E-06, 7.070E-06,
     $ 7.124E-06, 7.193E-06, 7.267E-06, 7.329E-06, 7.362E-06, 7.371E-06,
     $ 7.371E-06, 7.368E-06, 7.365E-06, 7.363E-06, 7.363E-06, 7.366E-06,
     $ 7.370E-06, 7.373E-06, 7.374E-06, 7.375E-06, 7.373E-06, 7.371E-06,
     $ 7.368E-06, 7.363E-06, 7.356E-06, 7.349E-06/
C                                                                       
C      9401 TO  9500 CM-1 DATA.                                         
      DATA (SUN(I),I=  9401,  9500)/                                    
     $ 7.340E-06, 7.322E-06, 7.288E-06, 7.248E-06, 7.208E-06, 7.170E-06,
     $ 7.154E-06, 7.181E-06, 7.229E-06, 7.276E-06, 7.322E-06, 7.352E-06,
     $ 7.354E-06, 7.342E-06, 7.330E-06, 7.317E-06, 7.304E-06, 7.299E-06,
     $ 7.297E-06, 7.295E-06, 7.297E-06, 7.303E-06, 7.289E-06, 7.243E-06,
     $ 7.178E-06, 7.109E-06, 7.043E-06, 7.016E-06, 7.052E-06, 7.124E-06,
     $ 7.202E-06, 7.275E-06, 7.326E-06, 7.344E-06, 7.344E-06, 7.341E-06,
     $ 7.338E-06, 7.337E-06, 7.332E-06, 7.301E-06, 7.231E-06, 7.142E-06,
     $ 7.046E-06, 6.956E-06, 6.917E-06, 6.952E-06, 7.025E-06, 7.108E-06,
     $ 7.195E-06, 7.259E-06, 7.286E-06, 7.297E-06, 7.306E-06, 7.314E-06,
     $ 7.320E-06, 7.326E-06, 7.332E-06, 7.334E-06, 7.334E-06, 7.333E-06,
     $ 7.331E-06, 7.328E-06, 7.326E-06, 7.325E-06, 7.323E-06, 7.321E-06,
     $ 7.320E-06, 7.319E-06, 7.319E-06, 7.322E-06, 7.326E-06, 7.330E-06,
     $ 7.334E-06, 7.336E-06, 7.334E-06, 7.331E-06, 7.328E-06, 7.325E-06,
     $ 7.321E-06, 7.318E-06, 7.317E-06, 7.316E-06, 7.317E-06, 7.318E-06,
     $ 7.319E-06, 7.319E-06, 7.311E-06, 7.291E-06, 7.264E-06, 7.237E-06,
     $ 7.209E-06, 7.194E-06, 7.203E-06, 7.227E-06, 7.256E-06, 7.289E-06,
     $ 7.316E-06, 7.330E-06, 7.336E-06, 7.335E-06/
C                                                                       
C      9501 TO  9600 CM-1 DATA.                                         
      DATA (SUN(I),I=  9501,  9600)/                                    
     $ 7.323E-06, 7.306E-06, 7.291E-06, 7.276E-06, 7.267E-06, 7.276E-06,
     $ 7.291E-06, 7.302E-06, 7.312E-06, 7.319E-06, 7.318E-06, 7.316E-06,
     $ 7.319E-06, 7.323E-06, 7.324E-06, 7.321E-06, 7.317E-06, 7.311E-06,
     $ 7.305E-06, 7.303E-06, 7.302E-06, 7.299E-06, 7.296E-06, 7.292E-06,
     $ 7.291E-06, 7.299E-06, 7.312E-06, 7.327E-06, 7.339E-06, 7.344E-06,
     $ 7.340E-06, 7.332E-06, 7.321E-06, 7.313E-06, 7.314E-06, 7.320E-06,
     $ 7.327E-06, 7.337E-06, 7.346E-06, 7.350E-06, 7.352E-06, 7.355E-06,
     $ 7.357E-06, 7.347E-06, 7.321E-06, 7.287E-06, 7.252E-06, 7.220E-06,
     $ 7.208E-06, 7.231E-06, 7.270E-06, 7.305E-06, 7.325E-06, 7.318E-06,
     $ 7.284E-06, 7.237E-06, 7.181E-06, 7.132E-06, 7.109E-06, 7.101E-06,
     $ 7.105E-06, 7.136E-06, 7.186E-06, 7.228E-06, 7.259E-06, 7.284E-06,
     $ 7.295E-06, 7.295E-06, 7.304E-06, 7.322E-06, 7.340E-06, 7.357E-06,
     $ 7.369E-06, 7.372E-06, 7.369E-06, 7.363E-06, 7.356E-06, 7.349E-06,
     $ 7.343E-06, 7.340E-06, 7.344E-06, 7.352E-06, 7.358E-06, 7.355E-06,
     $ 7.343E-06, 7.321E-06, 7.286E-06, 7.251E-06, 7.234E-06, 7.232E-06,
     $ 7.242E-06, 7.272E-06, 7.310E-06, 7.337E-06, 7.356E-06, 7.368E-06,
     $ 7.372E-06, 7.373E-06, 7.378E-06, 7.385E-06/
C                                                                       
C      9601 TO  9700 CM-1 DATA.                                         
      DATA (SUN(I),I=  9601,  9700)/                                    
     $ 7.390E-06, 7.388E-06, 7.379E-06, 7.364E-06, 7.347E-06, 7.333E-06,
     $ 7.329E-06, 7.334E-06, 7.345E-06, 7.358E-06, 7.369E-06, 7.364E-06,
     $ 7.339E-06, 7.305E-06, 7.271E-06, 7.242E-06, 7.233E-06, 7.253E-06,
     $ 7.281E-06, 7.308E-06, 7.334E-06, 7.354E-06, 7.365E-06, 7.374E-06,
     $ 7.386E-06, 7.396E-06, 7.400E-06, 7.392E-06, 7.371E-06, 7.345E-06,
     $ 7.319E-06, 7.298E-06, 7.296E-06, 7.303E-06, 7.293E-06, 7.268E-06,
     $ 7.237E-06, 7.198E-06, 7.171E-06, 7.188E-06, 7.234E-06, 7.282E-06,
     $ 7.329E-06, 7.364E-06, 7.378E-06, 7.381E-06, 7.388E-06, 7.397E-06,
     $ 7.406E-06, 7.413E-06, 7.414E-06, 7.407E-06, 7.397E-06, 7.388E-06,
     $ 7.381E-06, 7.376E-06, 7.373E-06, 7.370E-06, 7.364E-06, 7.348E-06,
     $ 7.319E-06, 7.289E-06, 7.259E-06, 7.222E-06, 7.198E-06, 7.207E-06,
     $ 7.227E-06, 7.256E-06, 7.304E-06, 7.353E-06, 7.381E-06, 7.397E-06,
     $ 7.399E-06, 7.378E-06, 7.340E-06, 7.288E-06, 7.233E-06, 7.192E-06,
     $ 7.173E-06, 7.180E-06, 7.220E-06, 7.277E-06, 7.329E-06, 7.372E-06,
     $ 7.400E-06, 7.412E-06, 7.414E-06, 7.416E-06, 7.414E-06, 7.406E-06,
     $ 7.396E-06, 7.386E-06, 7.375E-06, 7.370E-06, 7.375E-06, 7.383E-06,
     $ 7.390E-06, 7.395E-06, 7.398E-06, 7.395E-06/
C                                                                       
C      9701 TO  9800 CM-1 DATA.                                         
      DATA (SUN(I),I=  9701,  9800)/                                    
     $ 7.388E-06, 7.382E-06, 7.375E-06, 7.369E-06, 7.367E-06, 7.371E-06,
     $ 7.378E-06, 7.391E-06, 7.405E-06, 7.416E-06, 7.419E-06, 7.406E-06,
     $ 7.372E-06, 7.331E-06, 7.290E-06, 7.258E-06, 7.254E-06, 7.283E-06,
     $ 7.324E-06, 7.364E-06, 7.400E-06, 7.422E-06, 7.429E-06, 7.431E-06,
     $ 7.432E-06, 7.433E-06, 7.431E-06, 7.427E-06, 7.421E-06, 7.414E-06,
     $ 7.408E-06, 7.406E-06, 7.407E-06, 7.409E-06, 7.409E-06, 7.407E-06,
     $ 7.400E-06, 7.391E-06, 7.385E-06, 7.384E-06, 7.387E-06, 7.393E-06,
     $ 7.403E-06, 7.413E-06, 7.419E-06, 7.424E-06, 7.426E-06, 7.426E-06,
     $ 7.423E-06, 7.420E-06, 7.417E-06, 7.415E-06, 7.414E-06, 7.410E-06,
     $ 7.406E-06, 7.403E-06, 7.399E-06, 7.398E-06, 7.403E-06, 7.407E-06,
     $ 7.407E-06, 7.406E-06, 7.405E-06, 7.400E-06, 7.398E-06, 7.403E-06,
     $ 7.409E-06, 7.415E-06, 7.422E-06, 7.428E-06, 7.431E-06, 7.431E-06,
     $ 7.429E-06, 7.427E-06, 7.423E-06, 7.422E-06, 7.426E-06, 7.432E-06,
     $ 7.431E-06, 7.418E-06, 7.384E-06, 7.328E-06, 7.264E-06, 7.212E-06,
     $ 7.183E-06, 7.190E-06, 7.233E-06, 7.291E-06, 7.339E-06, 7.374E-06,
     $ 7.395E-06, 7.400E-06, 7.397E-06, 7.397E-06, 7.395E-06, 7.391E-06,
     $ 7.385E-06, 7.379E-06, 7.379E-06, 7.386E-06/
C                                                                       
C      9801 TO  9900 CM-1 DATA.                                         
      DATA (SUN(I),I=  9801,  9900)/                                    
     $ 7.392E-06, 7.395E-06, 7.394E-06, 7.372E-06, 7.330E-06, 7.288E-06,
     $ 7.254E-06, 7.234E-06, 7.245E-06, 7.284E-06, 7.325E-06, 7.344E-06,
     $ 7.333E-06, 7.300E-06, 7.259E-06, 7.224E-06, 7.220E-06, 7.259E-06,
     $ 7.316E-06, 7.370E-06, 7.419E-06, 7.454E-06, 7.466E-06, 7.466E-06,
     $ 7.464E-06, 7.461E-06, 7.457E-06, 7.455E-06, 7.451E-06, 7.446E-06,
     $ 7.430E-06, 7.394E-06, 7.350E-06, 7.314E-06, 7.283E-06, 7.273E-06,
     $ 7.303E-06, 7.348E-06, 7.385E-06, 7.413E-06, 7.425E-06, 7.412E-06,
     $ 7.391E-06, 7.380E-06, 7.381E-06, 7.391E-06, 7.410E-06, 7.432E-06,
     $ 7.438E-06, 7.421E-06, 7.392E-06, 7.355E-06, 7.311E-06, 7.286E-06,
     $ 7.298E-06, 7.329E-06, 7.367E-06, 7.411E-06, 7.445E-06, 7.459E-06,
     $ 7.462E-06, 7.464E-06, 7.465E-06, 7.468E-06, 7.472E-06, 7.477E-06,
     $ 7.478E-06, 7.478E-06, 7.478E-06, 7.471E-06, 7.454E-06, 7.433E-06,
     $ 7.412E-06, 7.388E-06, 7.377E-06, 7.388E-06, 7.410E-06, 7.433E-06,
     $ 7.459E-06, 7.477E-06, 7.479E-06, 7.473E-06, 7.463E-06, 7.453E-06,
     $ 7.449E-06, 7.453E-06, 7.463E-06, 7.474E-06, 7.477E-06, 7.471E-06,
     $ 7.458E-06, 7.441E-06, 7.429E-06, 7.432E-06, 7.446E-06, 7.462E-06,
     $ 7.476E-06, 7.487E-06, 7.489E-06, 7.487E-06/
C                                                                       
C      9901 TO 10000 CM-1 DATA.                                         
      DATA (SUN(I),I=  9901, 10000)/                                    
     $ 7.485E-06, 7.485E-06, 7.485E-06, 7.484E-06, 7.484E-06, 7.485E-06,
     $ 7.486E-06, 7.487E-06, 7.484E-06, 7.477E-06, 7.466E-06, 7.453E-06,
     $ 7.443E-06, 7.438E-06, 7.440E-06, 7.446E-06, 7.454E-06, 7.464E-06,
     $ 7.473E-06, 7.483E-06, 7.492E-06, 7.502E-06, 7.509E-06, 7.510E-06,
     $ 7.504E-06, 7.492E-06, 7.478E-06, 7.463E-06, 7.451E-06, 7.446E-06,
     $ 7.445E-06, 7.444E-06, 7.442E-06, 7.439E-06, 7.427E-06, 7.404E-06,
     $ 7.374E-06, 7.338E-06, 7.302E-06, 7.278E-06, 7.265E-06, 7.249E-06,
     $ 7.208E-06, 7.127E-06, 7.010E-06, 6.880E-06, 6.767E-06, 6.710E-06,
     $ 6.738E-06, 6.837E-06, 6.970E-06, 7.109E-06, 7.231E-06, 7.316E-06,
     $ 7.366E-06, 7.394E-06, 7.404E-06, 7.404E-06, 7.400E-06, 7.393E-06,
     $ 7.389E-06, 7.395E-06, 7.406E-06, 7.417E-06, 7.427E-06, 7.439E-06,
     $ 7.451E-06, 7.457E-06, 7.462E-06, 7.468E-06, 7.472E-06, 7.476E-06,
     $ 7.486E-06, 7.498E-06, 7.507E-06, 7.516E-06, 7.523E-06, 7.528E-06,
     $ 7.532E-06, 7.538E-06, 7.543E-06, 7.546E-06, 7.546E-06, 7.542E-06,
     $ 7.535E-06, 7.529E-06, 7.523E-06, 7.521E-06, 7.523E-06, 7.528E-06,
     $ 7.532E-06, 7.531E-06, 7.526E-06, 7.517E-06, 7.506E-06, 7.494E-06,
     $ 7.487E-06, 7.484E-06, 7.479E-06, 7.470E-06/
C                                                                       
C     10001 TO 10100 CM-1 DATA.                                         
      DATA (SUN(I),I= 10001, 10100)/                                    
     $ 7.465E-06, 7.461E-06, 7.456E-06, 7.459E-06, 7.473E-06, 7.487E-06,
     $ 7.493E-06, 7.496E-06, 7.495E-06, 7.485E-06, 7.476E-06, 7.476E-06,
     $ 7.479E-06, 7.483E-06, 7.491E-06, 7.498E-06, 7.499E-06, 7.498E-06,
     $ 7.496E-06, 7.494E-06, 7.492E-06, 7.495E-06, 7.499E-06, 7.502E-06,
     $ 7.505E-06, 7.505E-06, 7.501E-06, 7.498E-06, 7.497E-06, 7.496E-06,
     $ 7.497E-06, 7.495E-06, 7.491E-06, 7.486E-06, 7.479E-06, 7.473E-06,
     $ 7.473E-06, 7.475E-06, 7.478E-06, 7.481E-06, 7.482E-06, 7.480E-06,
     $ 7.474E-06, 7.465E-06, 7.456E-06, 7.450E-06, 7.451E-06, 7.457E-06,
     $ 7.465E-06, 7.475E-06, 7.482E-06, 7.482E-06, 7.478E-06, 7.476E-06,
     $ 7.477E-06, 7.481E-06, 7.491E-06, 7.501E-06, 7.507E-06, 7.509E-06,
     $ 7.507E-06, 7.495E-06, 7.476E-06, 7.460E-06, 7.447E-06, 7.439E-06,
     $ 7.445E-06, 7.461E-06, 7.475E-06, 7.483E-06, 7.486E-06, 7.481E-06,
     $ 7.473E-06, 7.471E-06, 7.478E-06, 7.492E-06, 7.509E-06, 7.523E-06,
     $ 7.528E-06, 7.519E-06, 7.487E-06, 7.444E-06, 7.403E-06, 7.366E-06,
     $ 7.350E-06, 7.370E-06, 7.407E-06, 7.442E-06, 7.474E-06, 7.494E-06,
     $ 7.494E-06, 7.486E-06, 7.482E-06, 7.472E-06, 7.445E-06, 7.409E-06,
     $ 7.374E-06, 7.340E-06, 7.327E-06, 7.354E-06/
C                                                                       
C     10101 TO 10200 CM-1 DATA.                                         
      DATA (SUN(I),I= 10101, 10200)/                                    
     $ 7.402E-06, 7.449E-06, 7.483E-06, 7.482E-06, 7.438E-06, 7.367E-06,
     $ 7.294E-06, 7.240E-06, 7.227E-06, 7.263E-06, 7.327E-06, 7.397E-06,
     $ 7.453E-06, 7.485E-06, 7.492E-06, 7.485E-06, 7.480E-06, 7.488E-06,
     $ 7.505E-06, 7.522E-06, 7.529E-06, 7.513E-06, 7.478E-06, 7.436E-06,
     $ 7.396E-06, 7.374E-06, 7.384E-06, 7.414E-06, 7.449E-06, 7.481E-06,
     $ 7.505E-06, 7.509E-06, 7.488E-06, 7.455E-06, 7.420E-06, 7.385E-06,
     $ 7.363E-06, 7.373E-06, 7.404E-06, 7.437E-06, 7.468E-06, 7.491E-06,
     $ 7.497E-06, 7.492E-06, 7.487E-06, 7.484E-06, 7.482E-06, 7.482E-06,
     $ 7.485E-06, 7.492E-06, 7.502E-06, 7.508E-06, 7.504E-06, 7.493E-06,
     $ 7.476E-06, 7.455E-06, 7.440E-06, 7.446E-06, 7.464E-06, 7.482E-06,
     $ 7.496E-06, 7.496E-06, 7.476E-06, 7.446E-06, 7.416E-06, 7.400E-06,
     $ 7.406E-06, 7.427E-06, 7.452E-06, 7.474E-06, 7.487E-06, 7.488E-06,
     $ 7.485E-06, 7.483E-06, 7.479E-06, 7.479E-06, 7.481E-06, 7.481E-06,
     $ 7.483E-06, 7.493E-06, 7.506E-06, 7.515E-06, 7.523E-06, 7.529E-06,
     $ 7.528E-06, 7.524E-06, 7.521E-06, 7.516E-06, 7.513E-06, 7.512E-06,
     $ 7.514E-06, 7.517E-06, 7.523E-06, 7.528E-06, 7.530E-06, 7.523E-06,
     $ 7.499E-06, 7.467E-06, 7.433E-06, 7.399E-06/
C                                                                       
C     10201 TO 10300 CM-1 DATA.                                         
      DATA (SUN(I),I= 10201, 10300)/                                    
     $ 7.380E-06, 7.391E-06, 7.417E-06, 7.446E-06, 7.480E-06, 7.508E-06,
     $ 7.523E-06, 7.528E-06, 7.519E-06, 7.488E-06, 7.440E-06, 7.387E-06,
     $ 7.334E-06, 7.293E-06, 7.281E-06, 7.294E-06, 7.312E-06, 7.337E-06,
     $ 7.373E-06, 7.411E-06, 7.443E-06, 7.480E-06, 7.517E-06, 7.545E-06,
     $ 7.562E-06, 7.571E-06, 7.569E-06, 7.553E-06, 7.528E-06, 7.495E-06,
     $ 7.464E-06, 7.444E-06, 7.439E-06, 7.438E-06, 7.429E-06, 7.408E-06,
     $ 7.377E-06, 7.345E-06, 7.326E-06, 7.339E-06, 7.381E-06, 7.427E-06,
     $ 7.470E-06, 7.504E-06, 7.520E-06, 7.524E-06, 7.531E-06, 7.542E-06,
     $ 7.553E-06, 7.564E-06, 7.568E-06, 7.557E-06, 7.529E-06, 7.496E-06,
     $ 7.457E-06, 7.415E-06, 7.391E-06, 7.394E-06, 7.403E-06, 7.419E-06,
     $ 7.438E-06, 7.431E-06, 7.395E-06, 7.354E-06, 7.309E-06, 7.279E-06,
     $ 7.293E-06, 7.337E-06, 7.387E-06, 7.441E-06, 7.486E-06, 7.500E-06,
     $ 7.490E-06, 7.474E-06, 7.458E-06, 7.446E-06, 7.451E-06, 7.473E-06,
     $ 7.499E-06, 7.523E-06, 7.539E-06, 7.544E-06, 7.544E-06, 7.543E-06,
     $ 7.540E-06, 7.536E-06, 7.533E-06, 7.529E-06, 7.526E-06, 7.527E-06,
     $ 7.534E-06, 7.543E-06, 7.549E-06, 7.551E-06, 7.545E-06, 7.521E-06,
     $ 7.487E-06, 7.457E-06, 7.427E-06, 7.404E-06/
C                                                                       
C     10301 TO 10400 CM-1 DATA.                                         
      DATA (SUN(I),I= 10301, 10400)/                                    
     $ 7.406E-06, 7.426E-06, 7.447E-06, 7.473E-06, 7.505E-06, 7.530E-06,
     $ 7.546E-06, 7.558E-06, 7.564E-06, 7.560E-06, 7.553E-06, 7.543E-06,
     $ 7.530E-06, 7.511E-06, 7.487E-06, 7.462E-06, 7.439E-06, 7.429E-06,
     $ 7.442E-06, 7.469E-06, 7.499E-06, 7.527E-06, 7.547E-06, 7.553E-06,
     $ 7.552E-06, 7.549E-06, 7.544E-06, 7.528E-06, 7.498E-06, 7.459E-06,
     $ 7.417E-06, 7.383E-06, 7.372E-06, 7.386E-06, 7.412E-06, 7.443E-06,
     $ 7.473E-06, 7.496E-06, 7.516E-06, 7.531E-06, 7.543E-06, 7.551E-06,
     $ 7.552E-06, 7.547E-06, 7.542E-06, 7.523E-06, 7.476E-06, 7.414E-06,
     $ 7.347E-06, 7.281E-06, 7.245E-06, 7.254E-06, 7.291E-06, 7.337E-06,
     $ 7.380E-06, 7.411E-06, 7.435E-06, 7.457E-06, 7.469E-06, 7.477E-06,
     $ 7.485E-06, 7.483E-06, 7.477E-06, 7.485E-06, 7.506E-06, 7.529E-06,
     $ 7.546E-06, 7.546E-06, 7.523E-06, 7.485E-06, 7.445E-06, 7.409E-06,
     $ 7.385E-06, 7.380E-06, 7.386E-06, 7.395E-06, 7.415E-06, 7.456E-06,
     $ 7.503E-06, 7.537E-06, 7.548E-06, 7.534E-06, 7.497E-06, 7.443E-06,
     $ 7.403E-06, 7.394E-06, 7.394E-06, 7.393E-06, 7.401E-06, 7.403E-06,
     $ 7.403E-06, 7.428E-06, 7.468E-06, 7.504E-06, 7.543E-06, 7.578E-06,
     $ 7.598E-06, 7.614E-06, 7.629E-06, 7.636E-06/
C                                                                       
C     10401 TO 10500 CM-1 DATA.                                         
      DATA (SUN(I),I= 10401, 10500)/                                    
     $ 7.630E-06, 7.609E-06, 7.574E-06, 7.531E-06, 7.487E-06, 7.447E-06,
     $ 7.419E-06, 7.407E-06, 7.404E-06, 7.408E-06, 7.422E-06, 7.442E-06,
     $ 7.457E-06, 7.469E-06, 7.489E-06, 7.509E-06, 7.524E-06, 7.543E-06,
     $ 7.566E-06, 7.581E-06, 7.590E-06, 7.598E-06, 7.600E-06, 7.595E-06,
     $ 7.587E-06, 7.579E-06, 7.572E-06, 7.570E-06, 7.574E-06, 7.583E-06,
     $ 7.593E-06, 7.600E-06, 7.602E-06, 7.603E-06, 7.602E-06, 7.598E-06,
     $ 7.589E-06, 7.572E-06, 7.548E-06, 7.519E-06, 7.486E-06, 7.452E-06,
     $ 7.421E-06, 7.393E-06, 7.374E-06, 7.370E-06, 7.389E-06, 7.432E-06,
     $ 7.483E-06, 7.527E-06, 7.557E-06, 7.564E-06, 7.554E-06, 7.543E-06,
     $ 7.536E-06, 7.534E-06, 7.537E-06, 7.538E-06, 7.533E-06, 7.521E-06,
     $ 7.505E-06, 7.489E-06, 7.468E-06, 7.439E-06, 7.406E-06, 7.368E-06,
     $ 7.316E-06, 7.241E-06, 7.137E-06, 7.017E-06, 6.902E-06, 6.817E-06,
     $ 6.796E-06, 6.855E-06, 6.972E-06, 7.115E-06, 7.258E-06, 7.372E-06,
     $ 7.440E-06, 7.471E-06, 7.475E-06, 7.464E-06, 7.455E-06, 7.456E-06,
     $ 7.473E-06, 7.499E-06, 7.520E-06, 7.528E-06, 7.523E-06, 7.503E-06,
     $ 7.484E-06, 7.484E-06, 7.497E-06, 7.522E-06, 7.562E-06, 7.596E-06,
     $ 7.610E-06, 7.609E-06, 7.595E-06, 7.568E-06/
C                                                                       
C     10501 TO 10600 CM-1 DATA.                                         
      DATA (SUN(I),I= 10501, 10600)/                                    
     $ 7.545E-06, 7.539E-06, 7.547E-06, 7.562E-06, 7.579E-06, 7.591E-06,
     $ 7.590E-06, 7.575E-06, 7.558E-06, 7.546E-06, 7.538E-06, 7.536E-06,
     $ 7.540E-06, 7.538E-06, 7.526E-06, 7.513E-06, 7.494E-06, 7.479E-06,
     $ 7.483E-06, 7.500E-06, 7.522E-06, 7.553E-06, 7.584E-06, 7.601E-06,
     $ 7.602E-06, 7.593E-06, 7.579E-06, 7.564E-06, 7.558E-06, 7.570E-06,
     $ 7.591E-06, 7.611E-06, 7.625E-06, 7.628E-06, 7.614E-06, 7.590E-06,
     $ 7.571E-06, 7.559E-06, 7.555E-06, 7.561E-06, 7.575E-06, 7.586E-06,
     $ 7.589E-06, 7.589E-06, 7.587E-06, 7.584E-06, 7.579E-06, 7.573E-06,
     $ 7.568E-06, 7.563E-06, 7.558E-06, 7.555E-06, 7.559E-06, 7.565E-06,
     $ 7.569E-06, 7.571E-06, 7.575E-06, 7.583E-06, 7.583E-06, 7.565E-06,
     $ 7.535E-06, 7.502E-06, 7.466E-06, 7.443E-06, 7.453E-06, 7.490E-06,
     $ 7.531E-06, 7.564E-06, 7.582E-06, 7.576E-06, 7.552E-06, 7.521E-06,
     $ 7.492E-06, 7.478E-06, 7.484E-06, 7.498E-06, 7.514E-06, 7.525E-06,
     $ 7.518E-06, 7.497E-06, 7.466E-06, 7.428E-06, 7.406E-06, 7.406E-06,
     $ 7.413E-06, 7.436E-06, 7.470E-06, 7.475E-06, 7.443E-06, 7.397E-06,
     $ 7.340E-06, 7.292E-06, 7.288E-06, 7.321E-06, 7.359E-06, 7.392E-06,
     $ 7.411E-06, 7.405E-06, 7.400E-06, 7.420E-06/
C                                                                       
C     10601 TO 10700 CM-1 DATA.                                         
      DATA (SUN(I),I= 10601, 10700)/                                    
     $ 7.456E-06, 7.500E-06, 7.550E-06, 7.588E-06, 7.605E-06, 7.609E-06,
     $ 7.596E-06, 7.574E-06, 7.553E-06, 7.531E-06, 7.512E-06, 7.513E-06,
     $ 7.517E-06, 7.485E-06, 7.399E-06, 7.259E-06, 7.087E-06, 6.926E-06,
     $ 6.825E-06, 6.829E-06, 6.941E-06, 7.099E-06, 7.246E-06, 7.358E-06,
     $ 7.402E-06, 7.374E-06, 7.324E-06, 7.281E-06, 7.259E-06, 7.277E-06,
     $ 7.326E-06, 7.382E-06, 7.431E-06, 7.475E-06, 7.515E-06, 7.546E-06,
     $ 7.568E-06, 7.584E-06, 7.587E-06, 7.571E-06, 7.548E-06, 7.528E-06,
     $ 7.516E-06, 7.514E-06, 7.515E-06, 7.516E-06, 7.523E-06, 7.532E-06,
     $ 7.538E-06, 7.550E-06, 7.567E-06, 7.578E-06, 7.580E-06, 7.577E-06,
     $ 7.574E-06, 7.569E-06, 7.568E-06, 7.580E-06, 7.602E-06, 7.620E-06,
     $ 7.625E-06, 7.614E-06, 7.585E-06, 7.549E-06, 7.516E-06, 7.500E-06,
     $ 7.509E-06, 7.530E-06, 7.553E-06, 7.576E-06, 7.594E-06, 7.607E-06,
     $ 7.615E-06, 7.608E-06, 7.590E-06, 7.566E-06, 7.520E-06, 7.468E-06,
     $ 7.436E-06, 7.415E-06, 7.399E-06, 7.405E-06, 7.430E-06, 7.454E-06,
     $ 7.479E-06, 7.513E-06, 7.535E-06, 7.531E-06, 7.513E-06, 7.489E-06,
     $ 7.459E-06, 7.441E-06, 7.453E-06, 7.480E-06, 7.501E-06, 7.515E-06,
     $ 7.523E-06, 7.525E-06, 7.530E-06, 7.546E-06/
C                                                                       
C     10701 TO 10800 CM-1 DATA.                                         
      DATA (SUN(I),I= 10701, 10800)/                                    
     $ 7.571E-06, 7.595E-06, 7.608E-06, 7.612E-06, 7.609E-06, 7.595E-06,
     $ 7.573E-06, 7.549E-06, 7.530E-06, 7.517E-06, 7.522E-06, 7.546E-06,
     $ 7.574E-06, 7.592E-06, 7.600E-06, 7.597E-06, 7.578E-06, 7.556E-06,
     $ 7.543E-06, 7.533E-06, 7.526E-06, 7.531E-06, 7.544E-06, 7.547E-06,
     $ 7.537E-06, 7.518E-06, 7.490E-06, 7.457E-06, 7.439E-06, 7.454E-06,
     $ 7.487E-06, 7.514E-06, 7.536E-06, 7.552E-06, 7.548E-06, 7.536E-06,
     $ 7.534E-06, 7.538E-06, 7.539E-06, 7.537E-06, 7.537E-06, 7.543E-06,
     $ 7.550E-06, 7.561E-06, 7.575E-06, 7.584E-06, 7.582E-06, 7.573E-06,
     $ 7.560E-06, 7.542E-06, 7.524E-06, 7.502E-06, 7.482E-06, 7.473E-06,
     $ 7.476E-06, 7.482E-06, 7.490E-06, 7.488E-06, 7.472E-06, 7.444E-06,
     $ 7.418E-06, 7.413E-06, 7.432E-06, 7.465E-06, 7.508E-06, 7.553E-06,
     $ 7.585E-06, 7.604E-06, 7.613E-06, 7.609E-06, 7.599E-06, 7.588E-06,
     $ 7.577E-06, 7.574E-06, 7.585E-06, 7.602E-06, 7.615E-06, 7.629E-06,
     $ 7.637E-06, 7.630E-06, 7.617E-06, 7.608E-06, 7.600E-06, 7.593E-06,
     $ 7.593E-06, 7.595E-06, 7.589E-06, 7.569E-06, 7.543E-06, 7.518E-06,
     $ 7.493E-06, 7.469E-06, 7.443E-06, 7.406E-06, 7.364E-06, 7.307E-06,
     $ 7.227E-06, 7.164E-06, 7.139E-06, 7.119E-06/
C                                                                       
C     10801 TO 10900 CM-1 DATA.                                         
      DATA (SUN(I),I= 10801, 10900)/                                    
     $ 7.126E-06, 7.203E-06, 7.301E-06, 7.384E-06, 7.471E-06, 7.546E-06,
     $ 7.570E-06, 7.548E-06, 7.511E-06, 7.471E-06, 7.430E-06, 7.407E-06,
     $ 7.417E-06, 7.443E-06, 7.471E-06, 7.500E-06, 7.515E-06, 7.503E-06,
     $ 7.472E-06, 7.431E-06, 7.388E-06, 7.359E-06, 7.360E-06, 7.380E-06,
     $ 7.399E-06, 7.404E-06, 7.378E-06, 7.305E-06, 7.195E-06, 7.076E-06,
     $ 6.973E-06, 6.910E-06, 6.897E-06, 6.942E-06, 7.032E-06, 7.138E-06,
     $ 7.242E-06, 7.345E-06, 7.436E-06, 7.499E-06, 7.525E-06, 7.518E-06,
     $ 7.488E-06, 7.445E-06, 7.405E-06, 7.388E-06, 7.387E-06, 7.375E-06,
     $ 7.352E-06, 7.316E-06, 7.270E-06, 7.243E-06, 7.243E-06, 7.258E-06,
     $ 7.300E-06, 7.365E-06, 7.426E-06, 7.477E-06, 7.518E-06, 7.540E-06,
     $ 7.546E-06, 7.541E-06, 7.526E-06, 7.517E-06, 7.516E-06, 7.513E-06,
     $ 7.516E-06, 7.539E-06, 7.569E-06, 7.594E-06, 7.615E-06, 7.631E-06,
     $ 7.633E-06, 7.626E-06, 7.620E-06, 7.618E-06, 7.617E-06, 7.616E-06,
     $ 7.617E-06, 7.623E-06, 7.630E-06, 7.636E-06, 7.640E-06, 7.638E-06,
     $ 7.632E-06, 7.623E-06, 7.611E-06, 7.600E-06, 7.594E-06, 7.588E-06,
     $ 7.580E-06, 7.580E-06, 7.576E-06, 7.551E-06, 7.517E-06, 7.481E-06,
     $ 7.438E-06, 7.409E-06, 7.416E-06, 7.441E-06/
C                                                                       
C     10901 TO 11000 CM-1 DATA.                                         
      DATA (SUN(I),I= 10901, 11000)/                                    
     $ 7.472E-06, 7.509E-06, 7.543E-06, 7.560E-06, 7.562E-06, 7.556E-06,
     $ 7.545E-06, 7.529E-06, 7.522E-06, 7.536E-06, 7.563E-06, 7.593E-06,
     $ 7.622E-06, 7.641E-06, 7.643E-06, 7.635E-06, 7.621E-06, 7.608E-06,
     $ 7.601E-06, 7.599E-06, 7.604E-06, 7.617E-06, 7.625E-06, 7.617E-06,
     $ 7.593E-06, 7.550E-06, 7.489E-06, 7.432E-06, 7.401E-06, 7.399E-06,
     $ 7.424E-06, 7.471E-06, 7.519E-06, 7.551E-06, 7.568E-06, 7.577E-06,
     $ 7.581E-06, 7.588E-06, 7.602E-06, 7.616E-06, 7.626E-06, 7.635E-06,
     $ 7.644E-06, 7.652E-06, 7.657E-06, 7.659E-06, 7.660E-06, 7.657E-06,
     $ 7.651E-06, 7.647E-06, 7.648E-06, 7.651E-06, 7.653E-06, 7.655E-06,
     $ 7.658E-06, 7.659E-06, 7.658E-06, 7.645E-06, 7.608E-06, 7.547E-06,
     $ 7.463E-06, 7.362E-06, 7.284E-06, 7.255E-06, 7.273E-06, 7.330E-06,
     $ 7.393E-06, 7.421E-06, 7.413E-06, 7.381E-06, 7.336E-06, 7.321E-06,
     $ 7.356E-06, 7.405E-06, 7.447E-06, 7.489E-06, 7.516E-06, 7.516E-06,
     $ 7.518E-06, 7.533E-06, 7.543E-06, 7.542E-06, 7.537E-06, 7.519E-06,
     $ 7.495E-06, 7.481E-06, 7.464E-06, 7.432E-06, 7.398E-06, 7.365E-06,
     $ 7.327E-06, 7.312E-06, 7.349E-06, 7.400E-06, 7.405E-06, 7.351E-06,
     $ 7.256E-06, 7.128E-06, 7.006E-06, 6.978E-06/
C                                                                       
C     11001 TO 11100 CM-1 DATA.                                         
      DATA (SUN(I),I= 11001, 11100)/                                    
     $ 7.069E-06, 7.214E-06, 7.368E-06, 7.514E-06, 7.608E-06, 7.625E-06,
     $ 7.584E-06, 7.505E-06, 7.409E-06, 7.323E-06, 7.270E-06, 7.277E-06,
     $ 7.340E-06, 7.420E-06, 7.491E-06, 7.547E-06, 7.574E-06, 7.577E-06,
     $ 7.583E-06, 7.596E-06, 7.606E-06, 7.618E-06, 7.632E-06, 7.643E-06,
     $ 7.651E-06, 7.653E-06, 7.631E-06, 7.565E-06, 7.463E-06, 7.347E-06,
     $ 7.241E-06, 7.180E-06, 7.194E-06, 7.277E-06, 7.387E-06, 7.495E-06,
     $ 7.587E-06, 7.643E-06, 7.663E-06, 7.666E-06, 7.660E-06, 7.646E-06,
     $ 7.629E-06, 7.612E-06, 7.603E-06, 7.607E-06, 7.618E-06, 7.631E-06,
     $ 7.646E-06, 7.658E-06, 7.663E-06, 7.666E-06, 7.669E-06, 7.671E-06,
     $ 7.672E-06, 7.671E-06, 7.669E-06, 7.664E-06, 7.656E-06, 7.644E-06,
     $ 7.633E-06, 7.624E-06, 7.618E-06, 7.618E-06, 7.620E-06, 7.616E-06,
     $ 7.605E-06, 7.593E-06, 7.577E-06, 7.563E-06, 7.562E-06, 7.570E-06,
     $ 7.572E-06, 7.565E-06, 7.554E-06, 7.529E-06, 7.482E-06, 7.434E-06,
     $ 7.400E-06, 7.364E-06, 7.334E-06, 7.326E-06, 7.315E-06, 7.288E-06,
     $ 7.255E-06, 7.204E-06, 7.136E-06, 7.072E-06, 7.012E-06, 6.962E-06,
     $ 6.938E-06, 6.930E-06, 6.936E-06, 6.966E-06, 7.008E-06, 7.063E-06,
     $ 7.139E-06, 7.226E-06, 7.319E-06, 7.410E-06/
C                                                                       
C     11101 TO 11200 CM-1 DATA.                                         
      DATA (SUN(I),I= 11101, 11200)/                                    
     $ 7.489E-06, 7.547E-06, 7.580E-06, 7.566E-06, 7.498E-06, 7.405E-06,
     $ 7.308E-06, 7.218E-06, 7.185E-06, 7.235E-06, 7.320E-06, 7.409E-06,
     $ 7.497E-06, 7.556E-06, 7.572E-06, 7.572E-06, 7.570E-06, 7.566E-06,
     $ 7.570E-06, 7.580E-06, 7.592E-06, 7.602E-06, 7.603E-06, 7.594E-06,
     $ 7.582E-06, 7.568E-06, 7.563E-06, 7.577E-06, 7.600E-06, 7.617E-06,
     $ 7.626E-06, 7.624E-06, 7.601E-06, 7.559E-06, 7.514E-06, 7.477E-06,
     $ 7.452E-06, 7.447E-06, 7.472E-06, 7.518E-06, 7.566E-06, 7.603E-06,
     $ 7.621E-06, 7.603E-06, 7.549E-06, 7.481E-06, 7.414E-06, 7.367E-06,
     $ 7.358E-06, 7.394E-06, 7.456E-06, 7.524E-06, 7.583E-06, 7.622E-06,
     $ 7.639E-06, 7.644E-06, 7.647E-06, 7.651E-06, 7.655E-06, 7.658E-06,
     $ 7.657E-06, 7.654E-06, 7.650E-06, 7.647E-06, 7.642E-06, 7.629E-06,
     $ 7.605E-06, 7.575E-06, 7.539E-06, 7.496E-06, 7.449E-06, 7.399E-06,
     $ 7.350E-06, 7.301E-06, 7.248E-06, 7.222E-06, 7.235E-06, 7.264E-06,
     $ 7.311E-06, 7.394E-06, 7.475E-06, 7.532E-06, 7.581E-06, 7.619E-06,
     $ 7.632E-06, 7.633E-06, 7.632E-06, 7.628E-06, 7.616E-06, 7.601E-06,
     $ 7.580E-06, 7.545E-06, 7.497E-06, 7.443E-06, 7.385E-06, 7.334E-06,
     $ 7.305E-06, 7.292E-06, 7.293E-06, 7.307E-06/
C                                                                       
C     11201 TO 11300 CM-1 DATA.                                         
      DATA (SUN(I),I= 11201, 11300)/                                    
     $ 7.326E-06, 7.347E-06, 7.374E-06, 7.399E-06, 7.419E-06, 7.435E-06,
     $ 7.441E-06, 7.451E-06, 7.480E-06, 7.518E-06, 7.556E-06, 7.592E-06,
     $ 7.607E-06, 7.588E-06, 7.552E-06, 7.514E-06, 7.475E-06, 7.454E-06,
     $ 7.466E-06, 7.494E-06, 7.525E-06, 7.564E-06, 7.597E-06, 7.613E-06,
     $ 7.620E-06, 7.625E-06, 7.625E-06, 7.624E-06, 7.621E-06, 7.614E-06,
     $ 7.606E-06, 7.596E-06, 7.584E-06, 7.576E-06, 7.578E-06, 7.585E-06,
     $ 7.588E-06, 7.580E-06, 7.562E-06, 7.533E-06, 7.495E-06, 7.467E-06,
     $ 7.465E-06, 7.478E-06, 7.502E-06, 7.537E-06, 7.570E-06, 7.587E-06,
     $ 7.590E-06, 7.584E-06, 7.570E-06, 7.554E-06, 7.543E-06, 7.542E-06,
     $ 7.546E-06, 7.547E-06, 7.545E-06, 7.533E-06, 7.504E-06, 7.473E-06,
     $ 7.453E-06, 7.440E-06, 7.440E-06, 7.462E-06, 7.493E-06, 7.520E-06,
     $ 7.547E-06, 7.563E-06, 7.556E-06, 7.517E-06, 7.440E-06, 7.340E-06,
     $ 7.243E-06, 7.159E-06, 7.103E-06, 7.088E-06, 7.091E-06, 7.077E-06,
     $ 7.040E-06, 7.003E-06, 6.986E-06, 6.995E-06, 7.048E-06, 7.158E-06,
     $ 7.285E-06, 7.391E-06, 7.478E-06, 7.542E-06, 7.573E-06, 7.588E-06,
     $ 7.599E-06, 7.608E-06, 7.615E-06, 7.620E-06, 7.620E-06, 7.608E-06,
     $ 7.585E-06, 7.559E-06, 7.536E-06, 7.519E-06/
C                                                                       
C     11301 TO 11400 CM-1 DATA.                                         
      DATA (SUN(I),I= 11301, 11400)/                                    
     $ 7.519E-06, 7.535E-06, 7.554E-06, 7.570E-06, 7.579E-06, 7.567E-06,
     $ 7.520E-06, 7.456E-06, 7.394E-06, 7.334E-06, 7.306E-06, 7.339E-06,
     $ 7.402E-06, 7.466E-06, 7.533E-06, 7.585E-06, 7.605E-06, 7.610E-06,
     $ 7.614E-06, 7.612E-06, 7.609E-06, 7.607E-06, 7.609E-06, 7.589E-06,
     $ 7.519E-06, 7.415E-06, 7.302E-06, 7.186E-06, 7.119E-06, 7.158E-06,
     $ 7.265E-06, 7.383E-06, 7.500E-06, 7.588E-06, 7.618E-06, 7.610E-06,
     $ 7.588E-06, 7.555E-06, 7.520E-06, 7.492E-06, 7.475E-06, 7.478E-06,
     $ 7.504E-06, 7.537E-06, 7.558E-06, 7.554E-06, 7.479E-06, 7.313E-06,
     $ 7.107E-06, 6.901E-06, 6.720E-06, 6.649E-06, 6.739E-06, 6.915E-06,
     $ 7.116E-06, 7.331E-06, 7.503E-06, 7.592E-06, 7.635E-06, 7.656E-06,
     $ 7.652E-06, 7.636E-06, 7.621E-06, 7.590E-06, 7.536E-06, 7.479E-06,
     $ 7.426E-06, 7.360E-06, 7.301E-06, 7.287E-06, 7.301E-06, 7.316E-06,
     $ 7.359E-06, 7.436E-06, 7.506E-06, 7.553E-06, 7.590E-06, 7.609E-06,
     $ 7.603E-06, 7.589E-06, 7.586E-06, 7.595E-06, 7.606E-06, 7.612E-06,
     $ 7.613E-06, 7.610E-06, 7.605E-06, 7.604E-06, 7.604E-06, 7.587E-06,
     $ 7.548E-06, 7.490E-06, 7.421E-06, 7.364E-06, 7.345E-06, 7.366E-06,
     $ 7.419E-06, 7.488E-06, 7.547E-06, 7.583E-06/
C                                                                       
C     11401 TO 11500 CM-1 DATA.                                         
      DATA (SUN(I),I= 11401, 11500)/                                    
     $ 7.598E-06, 7.594E-06, 7.580E-06, 7.568E-06, 7.563E-06, 7.563E-06,
     $ 7.568E-06, 7.581E-06, 7.595E-06, 7.605E-06, 7.594E-06, 7.547E-06,
     $ 7.473E-06, 7.390E-06, 7.302E-06, 7.245E-06, 7.250E-06, 7.278E-06,
     $ 7.293E-06, 7.296E-06, 7.278E-06, 7.229E-06, 7.188E-06, 7.189E-06,
     $ 7.220E-06, 7.263E-06, 7.316E-06, 7.365E-06, 7.401E-06, 7.426E-06,
     $ 7.436E-06, 7.431E-06, 7.417E-06, 7.395E-06, 7.383E-06, 7.401E-06,
     $ 7.441E-06, 7.487E-06, 7.515E-06, 7.499E-06, 7.447E-06, 7.380E-06,
     $ 7.315E-06, 7.289E-06, 7.329E-06, 7.404E-06, 7.480E-06, 7.548E-06,
     $ 7.580E-06, 7.559E-06, 7.514E-06, 7.469E-06, 7.432E-06, 7.425E-06,
     $ 7.454E-06, 7.497E-06, 7.540E-06, 7.579E-06, 7.607E-06, 7.619E-06,
     $ 7.626E-06, 7.630E-06, 7.621E-06, 7.593E-06, 7.556E-06, 7.518E-06,
     $ 7.485E-06, 7.475E-06, 7.485E-06, 7.485E-06, 7.471E-06, 7.444E-06,
     $ 7.388E-06, 7.324E-06, 7.297E-06, 7.297E-06, 7.313E-06, 7.366E-06,
     $ 7.437E-06, 7.495E-06, 7.539E-06, 7.572E-06, 7.584E-06, 7.580E-06,
     $ 7.569E-06, 7.559E-06, 7.544E-06, 7.515E-06, 7.474E-06, 7.433E-06,
     $ 7.395E-06, 7.375E-06, 7.396E-06, 7.439E-06, 7.480E-06, 7.515E-06,
     $ 7.536E-06, 7.537E-06, 7.532E-06, 7.519E-06/
C                                                                       
C     11501 TO 11600 CM-1 DATA.                                         
      DATA (SUN(I),I= 11501, 11600)/                                    
     $ 7.462E-06, 7.331E-06, 7.154E-06, 6.969E-06, 6.799E-06, 6.724E-06,
     $ 6.802E-06, 6.969E-06, 7.149E-06, 7.325E-06, 7.455E-06, 7.499E-06,
     $ 7.477E-06, 7.430E-06, 7.377E-06, 7.326E-06, 7.293E-06, 7.303E-06,
     $ 7.338E-06, 7.350E-06, 7.325E-06, 7.273E-06, 7.193E-06, 7.105E-06,
     $ 7.067E-06, 7.091E-06, 7.138E-06, 7.187E-06, 7.232E-06, 7.245E-06,
     $ 7.220E-06, 7.172E-06, 7.103E-06, 7.000E-06, 6.841E-06, 6.580E-06,
     $ 6.178E-06, 5.668E-06, 5.138E-06, 4.690E-06, 4.446E-06, 4.517E-06,
     $ 4.871E-06, 5.380E-06, 5.931E-06, 6.426E-06, 6.788E-06, 7.015E-06,
     $ 7.155E-06, 7.243E-06, 7.299E-06, 7.339E-06, 7.369E-06, 7.389E-06,
     $ 7.395E-06, 7.382E-06, 7.357E-06, 7.328E-06, 7.306E-06, 7.313E-06,
     $ 7.355E-06, 7.411E-06, 7.465E-06, 7.510E-06, 7.536E-06, 7.541E-06,
     $ 7.539E-06, 7.540E-06, 7.545E-06, 7.551E-06, 7.556E-06, 7.561E-06,
     $ 7.564E-06, 7.562E-06, 7.552E-06, 7.533E-06, 7.504E-06, 7.468E-06,
     $ 7.440E-06, 7.424E-06, 7.427E-06, 7.451E-06, 7.485E-06, 7.515E-06,
     $ 7.536E-06, 7.549E-06, 7.554E-06, 7.553E-06, 7.555E-06, 7.557E-06,
     $ 7.543E-06, 7.504E-06, 7.453E-06, 7.401E-06, 7.354E-06, 7.335E-06,
     $ 7.362E-06, 7.399E-06, 7.414E-06, 7.420E-06/
C                                                                       
C     11601 TO 11700 CM-1 DATA.                                         
      DATA (SUN(I),I= 11601, 11700)/                                    
     $ 7.411E-06, 7.376E-06, 7.349E-06, 7.348E-06, 7.334E-06, 7.306E-06,
     $ 7.288E-06, 7.264E-06, 7.251E-06, 7.286E-06, 7.341E-06, 7.384E-06,
     $ 7.422E-06, 7.441E-06, 7.437E-06, 7.434E-06, 7.443E-06, 7.457E-06,
     $ 7.472E-06, 7.482E-06, 7.478E-06, 7.456E-06, 7.425E-06, 7.395E-06,
     $ 7.360E-06, 7.328E-06, 7.320E-06, 7.327E-06, 7.334E-06, 7.347E-06,
     $ 7.368E-06, 7.381E-06, 7.385E-06, 7.397E-06, 7.420E-06, 7.441E-06,
     $ 7.445E-06, 7.434E-06, 7.413E-06, 7.379E-06, 7.343E-06, 7.329E-06,
     $ 7.342E-06, 7.348E-06, 7.329E-06, 7.301E-06, 7.266E-06, 7.224E-06,
     $ 7.208E-06, 7.249E-06, 7.321E-06, 7.390E-06, 7.450E-06, 7.490E-06,
     $ 7.499E-06, 7.488E-06, 7.479E-06, 7.477E-06, 7.478E-06, 7.479E-06,
     $ 7.481E-06, 7.481E-06, 7.479E-06, 7.480E-06, 7.485E-06, 7.490E-06,
     $ 7.495E-06, 7.499E-06, 7.500E-06, 7.500E-06, 7.501E-06, 7.502E-06,
     $ 7.502E-06, 7.499E-06, 7.490E-06, 7.477E-06, 7.464E-06, 7.444E-06,
     $ 7.413E-06, 7.377E-06, 7.339E-06, 7.296E-06, 7.266E-06, 7.265E-06,
     $ 7.285E-06, 7.313E-06, 7.340E-06, 7.354E-06, 7.342E-06, 7.307E-06,
     $ 7.255E-06, 7.193E-06, 7.124E-06, 7.041E-06, 6.937E-06, 6.800E-06,
     $ 6.603E-06, 6.311E-06, 5.890E-06, 5.364E-06/
C                                                                       
C     11701 TO 11800 CM-1 DATA.                                         
      DATA (SUN(I),I= 11701, 11800)/                                    
     $ 4.814E-06, 4.336E-06, 4.042E-06, 4.035E-06, 4.316E-06, 4.783E-06,
     $ 5.323E-06, 5.839E-06, 6.255E-06, 6.553E-06, 6.760E-06, 6.913E-06,
     $ 7.037E-06, 7.138E-06, 7.215E-06, 7.275E-06, 7.321E-06, 7.353E-06,
     $ 7.366E-06, 7.349E-06, 7.301E-06, 7.240E-06, 7.177E-06, 7.130E-06,
     $ 7.135E-06, 7.192E-06, 7.270E-06, 7.347E-06, 7.414E-06, 7.455E-06,
     $ 7.467E-06, 7.466E-06, 7.462E-06, 7.456E-06, 7.447E-06, 7.422E-06,
     $ 7.350E-06, 7.230E-06, 7.092E-06, 6.960E-06, 6.864E-06, 6.866E-06,
     $ 6.974E-06, 7.120E-06, 7.265E-06, 7.393E-06, 7.472E-06, 7.496E-06,
     $ 7.498E-06, 7.495E-06, 7.484E-06, 7.469E-06, 7.446E-06, 7.412E-06,
     $ 7.368E-06, 7.321E-06, 7.264E-06, 7.187E-06, 7.046E-06, 6.792E-06,
     $ 6.447E-06, 6.079E-06, 5.753E-06, 5.584E-06, 5.678E-06, 5.979E-06,
     $ 6.362E-06, 6.751E-06, 7.068E-06, 7.253E-06, 7.339E-06, 7.384E-06,
     $ 7.415E-06, 7.440E-06, 7.460E-06, 7.475E-06, 7.483E-06, 7.488E-06,
     $ 7.495E-06, 7.503E-06, 7.505E-06, 7.494E-06, 7.471E-06, 7.439E-06,
     $ 7.403E-06, 7.377E-06, 7.376E-06, 7.395E-06, 7.423E-06, 7.453E-06,
     $ 7.480E-06, 7.497E-06, 7.504E-06, 7.507E-06, 7.510E-06, 7.503E-06,
     $ 7.479E-06, 7.447E-06, 7.415E-06, 7.364E-06/
C                                                                       
C     11801 TO 11900 CM-1 DATA.                                         
      DATA (SUN(I),I= 11801, 11900)/                                    
     $ 7.286E-06, 7.209E-06, 7.139E-06, 7.063E-06, 7.022E-06, 7.058E-06,
     $ 7.130E-06, 7.198E-06, 7.274E-06, 7.341E-06, 7.372E-06, 7.386E-06,
     $ 7.411E-06, 7.435E-06, 7.443E-06, 7.437E-06, 7.418E-06, 7.391E-06,
     $ 7.369E-06, 7.362E-06, 7.375E-06, 7.403E-06, 7.435E-06, 7.465E-06,
     $ 7.490E-06, 7.500E-06, 7.496E-06, 7.487E-06, 7.475E-06, 7.462E-06,
     $ 7.444E-06, 7.409E-06, 7.364E-06, 7.316E-06, 7.261E-06, 7.226E-06,
     $ 7.240E-06, 7.280E-06, 7.325E-06, 7.379E-06, 7.417E-06, 7.403E-06,
     $ 7.360E-06, 7.316E-06, 7.272E-06, 7.240E-06, 7.228E-06, 7.212E-06,
     $ 7.179E-06, 7.140E-06, 7.104E-06, 7.103E-06, 7.153E-06, 7.237E-06,
     $ 7.329E-06, 7.414E-06, 7.470E-06, 7.493E-06, 7.489E-06, 7.463E-06,
     $ 7.424E-06, 7.377E-06, 7.323E-06, 7.275E-06, 7.248E-06, 7.237E-06,
     $ 7.239E-06, 7.257E-06, 7.287E-06, 7.327E-06, 7.360E-06, 7.367E-06,
     $ 7.353E-06, 7.330E-06, 7.296E-06, 7.276E-06, 7.296E-06, 7.340E-06,
     $ 7.379E-06, 7.403E-06, 7.408E-06, 7.395E-06, 7.375E-06, 7.367E-06,
     $ 7.382E-06, 7.410E-06, 7.436E-06, 7.457E-06, 7.469E-06, 7.467E-06,
     $ 7.460E-06, 7.455E-06, 7.452E-06, 7.447E-06, 7.437E-06, 7.422E-06,
     $ 7.404E-06, 7.386E-06, 7.373E-06, 7.370E-06/
C                                                                       
C     11901 TO 12000 CM-1 DATA.                                         
      DATA (SUN(I),I= 11901, 12000)/                                    
     $ 7.375E-06, 7.375E-06, 7.369E-06, 7.361E-06, 7.355E-06, 7.357E-06,
     $ 7.373E-06, 7.400E-06, 7.426E-06, 7.445E-06, 7.452E-06, 7.447E-06,
     $ 7.432E-06, 7.385E-06, 7.281E-06, 7.150E-06, 7.022E-06, 6.903E-06,
     $ 6.852E-06, 6.920E-06, 7.041E-06, 7.147E-06, 7.238E-06, 7.295E-06,
     $ 7.296E-06, 7.285E-06, 7.308E-06, 7.349E-06, 7.381E-06, 7.402E-06,
     $ 7.411E-06, 7.402E-06, 7.392E-06, 7.399E-06, 7.418E-06, 7.439E-06,
     $ 7.455E-06, 7.461E-06, 7.455E-06, 7.444E-06, 7.434E-06, 7.432E-06,
     $ 7.440E-06, 7.451E-06, 7.455E-06, 7.438E-06, 7.402E-06, 7.354E-06,
     $ 7.297E-06, 7.257E-06, 7.254E-06, 7.272E-06, 7.297E-06, 7.334E-06,
     $ 7.366E-06, 7.378E-06, 7.384E-06, 7.390E-06, 7.392E-06, 7.389E-06,
     $ 7.393E-06, 7.404E-06, 7.414E-06, 7.422E-06, 7.433E-06, 7.442E-06,
     $ 7.445E-06, 7.449E-06, 7.453E-06, 7.448E-06, 7.435E-06, 7.417E-06,
     $ 7.385E-06, 7.332E-06, 7.276E-06, 7.230E-06, 7.188E-06, 7.168E-06,
     $ 7.185E-06, 7.219E-06, 7.250E-06, 7.277E-06, 7.293E-06, 7.295E-06,
     $ 7.290E-06, 7.285E-06, 7.280E-06, 7.286E-06, 7.296E-06, 7.293E-06,
     $ 7.282E-06, 7.272E-06, 7.253E-06, 7.230E-06, 7.218E-06, 7.218E-06,
     $ 7.221E-06, 7.226E-06, 7.243E-06, 7.277E-06/
C                                                                       
C     12001 TO 12100 CM-1 DATA.                                         
      DATA (SUN(I),I= 12001, 12100)/                                    
     $ 7.284E-06, 7.231E-06, 7.147E-06, 7.051E-06, 6.941E-06, 6.889E-06,
     $ 6.956E-06, 7.082E-06, 7.213E-06, 7.337E-06, 7.422E-06, 7.445E-06,
     $ 7.436E-06, 7.425E-06, 7.413E-06, 7.394E-06, 7.372E-06, 7.351E-06,
     $ 7.329E-06, 7.319E-06, 7.333E-06, 7.357E-06, 7.382E-06, 7.404E-06,
     $ 7.402E-06, 7.368E-06, 7.321E-06, 7.274E-06, 7.234E-06, 7.211E-06,
     $ 7.203E-06, 7.194E-06, 7.172E-06, 7.144E-06, 7.129E-06, 7.138E-06,
     $ 7.172E-06, 7.231E-06, 7.300E-06, 7.354E-06, 7.386E-06, 7.398E-06,
     $ 7.392E-06, 7.378E-06, 7.366E-06, 7.361E-06, 7.365E-06, 7.372E-06,
     $ 7.371E-06, 7.351E-06, 7.318E-06, 7.280E-06, 7.245E-06, 7.239E-06,
     $ 7.271E-06, 7.318E-06, 7.366E-06, 7.408E-06, 7.431E-06, 7.432E-06,
     $ 7.426E-06, 7.421E-06, 7.421E-06, 7.431E-06, 7.440E-06, 7.445E-06,
     $ 7.448E-06, 7.448E-06, 7.445E-06, 7.446E-06, 7.453E-06, 7.463E-06,
     $ 7.472E-06, 7.478E-06, 7.473E-06, 7.456E-06, 7.435E-06, 7.412E-06,
     $ 7.390E-06, 7.378E-06, 7.381E-06, 7.388E-06, 7.399E-06, 7.414E-06,
     $ 7.423E-06, 7.428E-06, 7.434E-06, 7.436E-06, 7.436E-06, 7.439E-06,
     $ 7.441E-06, 7.442E-06, 7.438E-06, 7.427E-06, 7.413E-06, 7.399E-06,
     $ 7.385E-06, 7.384E-06, 7.401E-06, 7.424E-06/
C                                                                       
C     12101 TO 12200 CM-1 DATA.                                         
      DATA (SUN(I),I= 12101, 12200)/                                    
     $ 7.445E-06, 7.462E-06, 7.469E-06, 7.456E-06, 7.428E-06, 7.396E-06,
     $ 7.363E-06, 7.335E-06, 7.324E-06, 7.334E-06, 7.353E-06, 7.377E-06,
     $ 7.405E-06, 7.426E-06, 7.430E-06, 7.410E-06, 7.363E-06, 7.301E-06,
     $ 7.238E-06, 7.188E-06, 7.183E-06, 7.227E-06, 7.290E-06, 7.355E-06,
     $ 7.411E-06, 7.437E-06, 7.433E-06, 7.421E-06, 7.402E-06, 7.369E-06,
     $ 7.337E-06, 7.314E-06, 7.290E-06, 7.278E-06, 7.298E-06, 7.331E-06,
     $ 7.363E-06, 7.397E-06, 7.413E-06, 7.389E-06, 7.331E-06, 7.246E-06,
     $ 7.142E-06, 7.059E-06, 7.024E-06, 7.039E-06, 7.103E-06, 7.203E-06,
     $ 7.300E-06, 7.375E-06, 7.428E-06, 7.460E-06, 7.473E-06, 7.473E-06,
     $ 7.462E-06, 7.432E-06, 7.362E-06, 7.251E-06, 7.132E-06, 7.030E-06,
     $ 6.959E-06, 6.963E-06, 7.050E-06, 7.164E-06, 7.266E-06, 7.348E-06,
     $ 7.379E-06, 7.343E-06, 7.278E-06, 7.214E-06, 7.151E-06, 7.110E-06,
     $ 7.119E-06, 7.163E-06, 7.206E-06, 7.239E-06, 7.258E-06, 7.256E-06,
     $ 7.237E-06, 7.220E-06, 7.229E-06, 7.249E-06, 7.263E-06, 7.276E-06,
     $ 7.288E-06, 7.284E-06, 7.274E-06, 7.259E-06, 7.227E-06, 7.199E-06,
     $ 7.186E-06, 7.174E-06, 7.175E-06, 7.193E-06, 7.170E-06, 7.087E-06,
     $ 6.991E-06, 6.894E-06, 6.814E-06, 6.826E-06/
C                                                                       
C     12201 TO 12300 CM-1 DATA.                                         
      DATA (SUN(I),I= 12201, 12300)/                                    
     $ 6.937E-06, 7.079E-06, 7.222E-06, 7.352E-06, 7.427E-06, 7.440E-06,
     $ 7.418E-06, 7.381E-06, 7.339E-06, 7.300E-06, 7.275E-06, 7.251E-06,
     $ 7.198E-06, 7.124E-06, 7.049E-06, 6.974E-06, 6.944E-06, 6.998E-06,
     $ 7.088E-06, 7.173E-06, 7.260E-06, 7.318E-06, 7.338E-06, 7.357E-06,
     $ 7.382E-06, 7.402E-06, 7.417E-06, 7.425E-06, 7.421E-06, 7.415E-06,
     $ 7.416E-06, 7.421E-06, 7.429E-06, 7.431E-06, 7.418E-06, 7.395E-06,
     $ 7.368E-06, 7.342E-06, 7.330E-06, 7.343E-06, 7.370E-06, 7.399E-06,
     $ 7.421E-06, 7.422E-06, 7.400E-06, 7.369E-06, 7.334E-06, 7.309E-06,
     $ 7.312E-06, 7.331E-06, 7.351E-06, 7.369E-06, 7.382E-06, 7.382E-06,
     $ 7.374E-06, 7.370E-06, 7.373E-06, 7.378E-06, 7.385E-06, 7.396E-06,
     $ 7.402E-06, 7.395E-06, 7.376E-06, 7.351E-06, 7.324E-06, 7.301E-06,
     $ 7.297E-06, 7.316E-06, 7.342E-06, 7.370E-06, 7.395E-06, 7.411E-06,
     $ 7.415E-06, 7.412E-06, 7.408E-06, 7.403E-06, 7.396E-06, 7.391E-06,
     $ 7.389E-06, 7.388E-06, 7.388E-06, 7.389E-06, 7.393E-06, 7.394E-06,
     $ 7.395E-06, 7.398E-06, 7.403E-06, 7.410E-06, 7.417E-06, 7.425E-06,
     $ 7.428E-06, 7.424E-06, 7.416E-06, 7.406E-06, 7.396E-06, 7.392E-06,
     $ 7.391E-06, 7.389E-06, 7.384E-06, 7.374E-06/
C                                                                       
C     12301 TO 12400 CM-1 DATA.                                         
      DATA (SUN(I),I= 12301, 12400)/                                    
     $ 7.359E-06, 7.345E-06, 7.339E-06, 7.341E-06, 7.351E-06, 7.371E-06,
     $ 7.391E-06, 7.403E-06, 7.407E-06, 7.401E-06, 7.388E-06, 7.372E-06,
     $ 7.356E-06, 7.346E-06, 7.341E-06, 7.336E-06, 7.332E-06, 7.335E-06,
     $ 7.340E-06, 7.344E-06, 7.351E-06, 7.356E-06, 7.353E-06, 7.347E-06,
     $ 7.345E-06, 7.341E-06, 7.342E-06, 7.351E-06, 7.359E-06, 7.363E-06,
     $ 7.366E-06, 7.366E-06, 7.361E-06, 7.359E-06, 7.361E-06, 7.365E-06,
     $ 7.373E-06, 7.384E-06, 7.383E-06, 7.355E-06, 7.310E-06, 7.248E-06,
     $ 7.164E-06, 7.091E-06, 7.066E-06, 7.070E-06, 7.097E-06, 7.153E-06,
     $ 7.199E-06, 7.207E-06, 7.197E-06, 7.178E-06, 7.156E-06, 7.154E-06,
     $ 7.174E-06, 7.200E-06, 7.229E-06, 7.263E-06, 7.297E-06, 7.311E-06,
     $ 7.291E-06, 7.247E-06, 7.194E-06, 7.130E-06, 7.092E-06, 7.119E-06,
     $ 7.174E-06, 7.220E-06, 7.262E-06, 7.292E-06, 7.291E-06, 7.288E-06,
     $ 7.305E-06, 7.332E-06, 7.352E-06, 7.357E-06, 7.348E-06, 7.328E-06,
     $ 7.299E-06, 7.273E-06, 7.261E-06, 7.252E-06, 7.238E-06, 7.227E-06,
     $ 7.221E-06, 7.221E-06, 7.232E-06, 7.257E-06, 7.286E-06, 7.315E-06,
     $ 7.340E-06, 7.360E-06, 7.374E-06, 7.385E-06, 7.393E-06, 7.394E-06,
     $ 7.392E-06, 7.389E-06, 7.384E-06, 7.380E-06/
C                                                                       
C     12401 TO 12500 CM-1 DATA.                                         
      DATA (SUN(I),I= 12401, 12500)/                                    
     $ 7.381E-06, 7.381E-06, 7.382E-06, 7.387E-06, 7.391E-06, 7.391E-06,
     $ 7.389E-06, 7.377E-06, 7.354E-06, 7.329E-06, 7.307E-06, 7.292E-06,
     $ 7.293E-06, 7.307E-06, 7.316E-06, 7.313E-06, 7.298E-06, 7.266E-06,
     $ 7.213E-06, 7.150E-06, 7.073E-06, 6.988E-06, 6.925E-06, 6.892E-06,
     $ 6.904E-06, 6.983E-06, 7.095E-06, 7.200E-06, 7.293E-06, 7.358E-06,
     $ 7.384E-06, 7.389E-06, 7.391E-06, 7.391E-06, 7.393E-06, 7.392E-06,
     $ 7.378E-06, 7.348E-06, 7.310E-06, 7.269E-06, 7.237E-06, 7.232E-06,
     $ 7.259E-06, 7.300E-06, 7.340E-06, 7.376E-06, 7.391E-06, 7.367E-06,
     $ 7.311E-06, 7.241E-06, 7.163E-06, 7.091E-06, 7.061E-06, 7.079E-06,
     $ 7.125E-06, 7.191E-06, 7.265E-06, 7.316E-06, 7.343E-06, 7.355E-06,
     $ 7.355E-06, 7.349E-06, 7.350E-06, 7.351E-06, 7.348E-06, 7.342E-06,
     $ 7.334E-06, 7.323E-06, 7.316E-06, 7.324E-06, 7.342E-06, 7.361E-06,
     $ 7.376E-06, 7.384E-06, 7.379E-06, 7.362E-06, 7.343E-06, 7.330E-06,
     $ 7.320E-06, 7.315E-06, 7.318E-06, 7.324E-06, 7.328E-06, 7.333E-06,
     $ 7.340E-06, 7.350E-06, 7.361E-06, 7.366E-06, 7.361E-06, 7.349E-06,
     $ 7.333E-06, 7.314E-06, 7.285E-06, 7.229E-06, 7.157E-06, 7.083E-06,
     $ 7.011E-06, 6.977E-06, 7.016E-06, 7.092E-06/
C                                                                       
C     12501 TO 12600 CM-1 DATA.                                         
      DATA (SUN(I),I= 12501, 12600)/                                    
     $ 7.169E-06, 7.244E-06, 7.301E-06, 7.322E-06, 7.329E-06, 7.341E-06,
     $ 7.353E-06, 7.364E-06, 7.375E-06, 7.384E-06, 7.385E-06, 7.377E-06,
     $ 7.362E-06, 7.343E-06, 7.323E-06, 7.313E-06, 7.319E-06, 7.335E-06,
     $ 7.350E-06, 7.363E-06, 7.370E-06, 7.369E-06, 7.364E-06, 7.360E-06,
     $ 7.356E-06, 7.349E-06, 7.342E-06, 7.336E-06, 7.333E-06, 7.336E-06,
     $ 7.344E-06, 7.347E-06, 7.343E-06, 7.335E-06, 7.320E-06, 7.306E-06,
     $ 7.306E-06, 7.314E-06, 7.319E-06, 7.323E-06, 7.325E-06, 7.321E-06,
     $ 7.317E-06, 7.326E-06, 7.341E-06, 7.357E-06, 7.368E-06, 7.371E-06,
     $ 7.363E-06, 7.347E-06, 7.329E-06, 7.320E-06, 7.320E-06, 7.325E-06,
     $ 7.336E-06, 7.346E-06, 7.342E-06, 7.327E-06, 7.310E-06, 7.289E-06,
     $ 7.271E-06, 7.261E-06, 7.253E-06, 7.241E-06, 7.231E-06, 7.226E-06,
     $ 7.234E-06, 7.257E-06, 7.287E-06, 7.315E-06, 7.338E-06, 7.345E-06,
     $ 7.339E-06, 7.332E-06, 7.327E-06, 7.322E-06, 7.299E-06, 7.238E-06,
     $ 7.151E-06, 7.044E-06, 6.915E-06, 6.822E-06, 6.811E-06, 6.840E-06,
     $ 6.887E-06, 6.977E-06, 7.065E-06, 7.109E-06, 7.148E-06, 7.192E-06,
     $ 7.190E-06, 7.138E-06, 7.075E-06, 7.006E-06, 6.944E-06, 6.945E-06,
     $ 7.016E-06, 7.091E-06, 7.135E-06, 7.151E-06/
C                                                                       
C     12601 TO 12700 CM-1 DATA.                                         
      DATA (SUN(I),I= 12601, 12700)/                                    
     $ 7.119E-06, 7.043E-06, 6.988E-06, 6.989E-06, 7.017E-06, 7.069E-06,
     $ 7.148E-06, 7.220E-06, 7.264E-06, 7.296E-06, 7.322E-06, 7.326E-06,
     $ 7.321E-06, 7.318E-06, 7.312E-06, 7.305E-06, 7.307E-06, 7.315E-06,
     $ 7.326E-06, 7.331E-06, 7.315E-06, 7.274E-06, 7.214E-06, 7.147E-06,
     $ 7.092E-06, 7.073E-06, 7.095E-06, 7.147E-06, 7.195E-06, 7.219E-06,
     $ 7.211E-06, 7.168E-06, 7.105E-06, 7.063E-06, 7.059E-06, 7.087E-06,
     $ 7.143E-06, 7.210E-06, 7.266E-06, 7.305E-06, 7.332E-06, 7.350E-06,
     $ 7.362E-06, 7.369E-06, 7.374E-06, 7.376E-06, 7.375E-06, 7.371E-06,
     $ 7.361E-06, 7.345E-06, 7.328E-06, 7.308E-06, 7.296E-06, 7.299E-06,
     $ 7.310E-06, 7.319E-06, 7.325E-06, 7.325E-06, 7.316E-06, 7.304E-06,
     $ 7.299E-06, 7.304E-06, 7.315E-06, 7.332E-06, 7.352E-06, 7.367E-06,
     $ 7.376E-06, 7.377E-06, 7.372E-06, 7.362E-06, 7.353E-06, 7.347E-06,
     $ 7.346E-06, 7.351E-06, 7.358E-06, 7.364E-06, 7.371E-06, 7.375E-06,
     $ 7.369E-06, 7.353E-06, 7.331E-06, 7.305E-06, 7.274E-06, 7.252E-06,
     $ 7.252E-06, 7.261E-06, 7.271E-06, 7.285E-06, 7.291E-06, 7.280E-06,
     $ 7.267E-06, 7.261E-06, 7.264E-06, 7.280E-06, 7.303E-06, 7.325E-06,
     $ 7.340E-06, 7.347E-06, 7.343E-06, 7.331E-06/
C                                                                       
C     12701 TO 12800 CM-1 DATA.                                         
      DATA (SUN(I),I= 12701, 12800)/                                    
     $ 7.319E-06, 7.310E-06, 7.306E-06, 7.315E-06, 7.335E-06, 7.358E-06,
     $ 7.379E-06, 7.395E-06, 7.401E-06, 7.398E-06, 7.393E-06, 7.385E-06,
     $ 7.376E-06, 7.367E-06, 7.358E-06, 7.350E-06, 7.345E-06, 7.346E-06,
     $ 7.353E-06, 7.341E-06, 7.287E-06, 7.205E-06, 7.110E-06, 7.011E-06,
     $ 6.951E-06, 6.974E-06, 7.045E-06, 7.129E-06, 7.215E-06, 7.276E-06,
     $ 7.288E-06, 7.276E-06, 7.265E-06, 7.254E-06, 7.252E-06, 7.268E-06,
     $ 7.292E-06, 7.315E-06, 7.338E-06, 7.354E-06, 7.357E-06, 7.353E-06,
     $ 7.343E-06, 7.332E-06, 7.323E-06, 7.317E-06, 7.311E-06, 7.309E-06,
     $ 7.313E-06, 7.321E-06, 7.334E-06, 7.349E-06, 7.352E-06, 7.328E-06,
     $ 7.278E-06, 7.218E-06, 7.160E-06, 7.120E-06, 7.104E-06, 7.089E-06,
     $ 7.064E-06, 7.034E-06, 6.996E-06, 6.976E-06, 7.017E-06, 7.101E-06,
     $ 7.191E-06, 7.272E-06, 7.318E-06, 7.314E-06, 7.285E-06, 7.252E-06,
     $ 7.234E-06, 7.247E-06, 7.275E-06, 7.302E-06, 7.324E-06, 7.335E-06,
     $ 7.330E-06, 7.318E-06, 7.310E-06, 7.312E-06, 7.321E-06, 7.333E-06,
     $ 7.345E-06, 7.353E-06, 7.355E-06, 7.354E-06, 7.351E-06, 7.348E-06,
     $ 7.347E-06, 7.347E-06, 7.344E-06, 7.328E-06, 7.288E-06, 7.238E-06,
     $ 7.189E-06, 7.146E-06, 7.122E-06, 7.127E-06/
C                                                                       
C     12801 TO 12900 CM-1 DATA.                                         
      DATA (SUN(I),I= 12801, 12900)/                                    
     $ 7.146E-06, 7.163E-06, 7.177E-06, 7.193E-06, 7.219E-06, 7.251E-06,
     $ 7.285E-06, 7.317E-06, 7.339E-06, 7.342E-06, 7.335E-06, 7.323E-06,
     $ 7.303E-06, 7.278E-06, 7.252E-06, 7.217E-06, 7.168E-06, 7.127E-06,
     $ 7.103E-06, 7.086E-06, 7.090E-06, 7.136E-06, 7.194E-06, 7.243E-06,
     $ 7.290E-06, 7.327E-06, 7.343E-06, 7.346E-06, 7.349E-06, 7.340E-06,
     $ 7.310E-06, 7.269E-06, 7.228E-06, 7.186E-06, 7.163E-06, 7.179E-06,
     $ 7.215E-06, 7.253E-06, 7.293E-06, 7.325E-06, 7.339E-06, 7.343E-06,
     $ 7.346E-06, 7.346E-06, 7.340E-06, 7.331E-06, 7.321E-06, 7.312E-06,
     $ 7.307E-06, 7.309E-06, 7.313E-06, 7.315E-06, 7.309E-06, 7.287E-06,
     $ 7.251E-06, 7.204E-06, 7.156E-06, 7.115E-06, 7.079E-06, 7.057E-06,
     $ 7.055E-06, 7.062E-06, 7.079E-06, 7.123E-06, 7.179E-06, 7.228E-06,
     $ 7.275E-06, 7.313E-06, 7.333E-06, 7.336E-06, 7.334E-06, 7.327E-06,
     $ 7.319E-06, 7.312E-06, 7.310E-06, 7.313E-06, 7.316E-06, 7.314E-06,
     $ 7.306E-06, 7.288E-06, 7.265E-06, 7.248E-06, 7.240E-06, 7.244E-06,
     $ 7.261E-06, 7.284E-06, 7.301E-06, 7.312E-06, 7.316E-06, 7.311E-06,
     $ 7.305E-06, 7.304E-06, 7.300E-06, 7.284E-06, 7.265E-06, 7.238E-06,
     $ 7.183E-06, 7.096E-06, 6.996E-06, 6.894E-06/
C                                                                       
C     12901 TO 13000 CM-1 DATA.                                         
      DATA (SUN(I),I= 12901, 13000)/                                    
     $ 6.789E-06, 6.706E-06, 6.685E-06, 6.722E-06, 6.778E-06, 6.858E-06,
     $ 6.958E-06, 7.033E-06, 7.072E-06, 7.099E-06, 7.112E-06, 7.119E-06,
     $ 7.146E-06, 7.189E-06, 7.230E-06, 7.269E-06, 7.298E-06, 7.309E-06,
     $ 7.309E-06, 7.309E-06, 7.310E-06, 7.308E-06, 7.301E-06, 7.292E-06,
     $ 7.282E-06, 7.272E-06, 7.267E-06, 7.272E-06, 7.283E-06, 7.293E-06,
     $ 7.303E-06, 7.298E-06, 7.263E-06, 7.216E-06, 7.169E-06, 7.115E-06,
     $ 7.074E-06, 7.075E-06, 7.090E-06, 7.084E-06, 7.068E-06, 7.052E-06,
     $ 7.020E-06, 6.985E-06, 6.986E-06, 7.020E-06, 7.061E-06, 7.103E-06,
     $ 7.150E-06, 7.192E-06, 7.220E-06, 7.247E-06, 7.273E-06, 7.280E-06,
     $ 7.254E-06, 7.209E-06, 7.157E-06, 7.105E-06, 7.068E-06, 7.064E-06,
     $ 7.066E-06, 7.041E-06, 7.000E-06, 6.963E-06, 6.934E-06, 6.935E-06,
     $ 6.994E-06, 7.085E-06, 7.170E-06, 7.239E-06, 7.286E-06, 7.304E-06,
     $ 7.306E-06, 7.309E-06, 7.312E-06, 7.314E-06, 7.313E-06, 7.309E-06,
     $ 7.304E-06, 7.276E-06, 7.208E-06, 7.123E-06, 7.041E-06, 6.959E-06,
     $ 6.917E-06, 6.952E-06, 7.024E-06, 7.091E-06, 7.160E-06, 7.214E-06,
     $ 7.236E-06, 7.245E-06, 7.245E-06, 7.218E-06, 7.174E-06, 7.127E-06,
     $ 7.075E-06, 7.044E-06, 7.059E-06, 7.097E-06/
C                                                                       
C     13001 TO 13100 CM-1 DATA.                                         
      DATA (SUN(I),I= 13001, 13100)/                                    
     $ 7.134E-06, 7.176E-06, 7.216E-06, 7.242E-06, 7.260E-06, 7.276E-06,
     $ 7.289E-06, 7.292E-06, 7.287E-06, 7.279E-06, 7.272E-06, 7.256E-06,
     $ 7.225E-06, 7.187E-06, 7.152E-06, 7.116E-06, 7.100E-06, 7.122E-06,
     $ 7.162E-06, 7.199E-06, 7.237E-06, 7.266E-06, 7.276E-06, 7.277E-06,
     $ 7.281E-06, 7.283E-06, 7.283E-06, 7.283E-06, 7.282E-06, 7.277E-06,
     $ 7.265E-06, 7.245E-06, 7.221E-06, 7.195E-06, 7.174E-06, 7.173E-06,
     $ 7.187E-06, 7.180E-06, 7.105E-06, 6.964E-06, 6.791E-06, 6.611E-06,
     $ 6.482E-06, 6.480E-06, 6.580E-06, 6.704E-06, 6.816E-06, 6.881E-06,
     $ 6.876E-06, 6.831E-06, 6.772E-06, 6.722E-06, 6.713E-06, 6.739E-06,
     $ 6.779E-06, 6.846E-06, 6.924E-06, 6.970E-06, 6.993E-06, 7.016E-06,
     $ 7.037E-06, 7.064E-06, 7.116E-06, 7.176E-06, 7.224E-06, 7.257E-06,
     $ 7.279E-06, 7.288E-06, 7.290E-06, 7.292E-06, 7.293E-06, 7.293E-06,
     $ 7.291E-06, 7.289E-06, 7.288E-06, 7.288E-06, 7.291E-06, 7.294E-06,
     $ 7.298E-06, 7.298E-06, 7.291E-06, 7.279E-06, 7.266E-06, 7.253E-06,
     $ 7.246E-06, 7.250E-06, 7.260E-06, 7.271E-06, 7.281E-06, 7.288E-06,
     $ 7.291E-06, 7.289E-06, 7.286E-06, 7.283E-06, 7.280E-06, 7.276E-06,
     $ 7.275E-06, 7.276E-06, 7.278E-06, 7.280E-06/
C                                                                       
C     13101 TO 13200 CM-1 DATA.                                         
      DATA (SUN(I),I= 13101, 13200)/                                    
     $ 7.283E-06, 7.284E-06, 7.285E-06, 7.288E-06, 7.284E-06, 7.266E-06,
     $ 7.239E-06, 7.211E-06, 7.181E-06, 7.163E-06, 7.174E-06, 7.201E-06,
     $ 7.229E-06, 7.248E-06, 7.241E-06, 7.197E-06, 7.120E-06, 7.026E-06,
     $ 6.944E-06, 6.880E-06, 6.827E-06, 6.803E-06, 6.804E-06, 6.808E-06,
     $ 6.835E-06, 6.909E-06, 7.000E-06, 7.089E-06, 7.177E-06, 7.246E-06,
     $ 7.275E-06, 7.271E-06, 7.248E-06, 7.216E-06, 7.184E-06, 7.160E-06,
     $ 7.161E-06, 7.182E-06, 7.205E-06, 7.219E-06, 7.219E-06, 7.200E-06,
     $ 7.176E-06, 7.159E-06, 7.149E-06, 7.143E-06, 7.139E-06, 7.128E-06,
     $ 7.108E-06, 7.093E-06, 7.101E-06, 7.124E-06, 7.154E-06, 7.195E-06,
     $ 7.233E-06, 7.252E-06, 7.259E-06, 7.260E-06, 7.248E-06, 7.229E-06,
     $ 7.211E-06, 7.194E-06, 7.182E-06, 7.184E-06, 7.198E-06, 7.218E-06,
     $ 7.237E-06, 7.253E-06, 7.264E-06, 7.264E-06, 7.255E-06, 7.246E-06,
     $ 7.232E-06, 7.199E-06, 7.155E-06, 7.113E-06, 7.063E-06, 6.996E-06,
     $ 6.946E-06, 6.926E-06, 6.910E-06, 6.914E-06, 6.967E-06, 7.041E-06,
     $ 7.106E-06, 7.172E-06, 7.229E-06, 7.254E-06, 7.253E-06, 7.243E-06,
     $ 7.231E-06, 7.219E-06, 7.216E-06, 7.217E-06, 7.206E-06, 7.182E-06,
     $ 7.155E-06, 7.127E-06, 7.111E-06, 7.130E-06/
C                                                                       
C     13201 TO 13300 CM-1 DATA.                                         
      DATA (SUN(I),I= 13201, 13300)/                                    
     $ 7.172E-06, 7.215E-06, 7.240E-06, 7.227E-06, 7.181E-06, 7.120E-06,
     $ 7.061E-06, 7.032E-06, 7.057E-06, 7.110E-06, 7.161E-06, 7.206E-06,
     $ 7.234E-06, 7.232E-06, 7.216E-06, 7.208E-06, 7.208E-06, 7.203E-06,
     $ 7.184E-06, 7.155E-06, 7.117E-06, 7.075E-06, 7.048E-06, 7.052E-06,
     $ 7.084E-06, 7.124E-06, 7.148E-06, 7.145E-06, 7.120E-06, 7.080E-06,
     $ 7.036E-06, 7.020E-06, 7.045E-06, 7.086E-06, 7.129E-06, 7.175E-06,
     $ 7.214E-06, 7.237E-06, 7.252E-06, 7.261E-06, 7.260E-06, 7.247E-06,
     $ 7.226E-06, 7.206E-06, 7.193E-06, 7.193E-06, 7.208E-06, 7.228E-06,
     $ 7.247E-06, 7.259E-06, 7.262E-06, 7.255E-06, 7.245E-06, 7.238E-06,
     $ 7.235E-06, 7.236E-06, 7.245E-06, 7.255E-06, 7.262E-06, 7.268E-06,
     $ 7.273E-06, 7.272E-06, 7.271E-06, 7.270E-06, 7.268E-06, 7.264E-06,
     $ 7.258E-06, 7.253E-06, 7.242E-06, 7.217E-06, 7.181E-06, 7.144E-06,
     $ 7.107E-06, 7.079E-06, 7.080E-06, 7.111E-06, 7.152E-06, 7.194E-06,
     $ 7.231E-06, 7.243E-06, 7.216E-06, 7.172E-06, 7.126E-06, 7.065E-06,
     $ 6.996E-06, 6.956E-06, 6.938E-06, 6.921E-06, 6.937E-06, 7.003E-06,
     $ 7.078E-06, 7.144E-06, 7.210E-06, 7.260E-06, 7.280E-06, 7.282E-06,
     $ 7.278E-06, 7.267E-06, 7.251E-06, 7.232E-06/
C                                                                       
C     13301 TO 13400 CM-1 DATA.                                         
      DATA (SUN(I),I= 13301, 13400)/                                    
     $ 7.213E-06, 7.202E-06, 7.201E-06, 7.203E-06, 7.179E-06, 7.103E-06,
     $ 6.995E-06, 6.882E-06, 6.774E-06, 6.723E-06, 6.779E-06, 6.894E-06,
     $ 7.009E-06, 7.115E-06, 7.187E-06, 7.200E-06, 7.183E-06, 7.168E-06,
     $ 7.164E-06, 7.174E-06, 7.193E-06, 7.215E-06, 7.231E-06, 7.236E-06,
     $ 7.231E-06, 7.223E-06, 7.212E-06, 7.197E-06, 7.187E-06, 7.179E-06,
     $ 7.170E-06, 7.166E-06, 7.163E-06, 7.125E-06, 7.048E-06, 6.959E-06,
     $ 6.866E-06, 6.795E-06, 6.795E-06, 6.852E-06, 6.920E-06, 6.984E-06,
     $ 7.032E-06, 7.046E-06, 7.051E-06, 7.079E-06, 7.117E-06, 7.159E-06,
     $ 7.205E-06, 7.240E-06, 7.255E-06, 7.259E-06, 7.255E-06, 7.235E-06,
     $ 7.203E-06, 7.168E-06, 7.135E-06, 7.104E-06, 7.089E-06, 7.094E-06,
     $ 7.109E-06, 7.127E-06, 7.152E-06, 7.175E-06, 7.185E-06, 7.190E-06,
     $ 7.192E-06, 7.185E-06, 7.170E-06, 7.156E-06, 7.142E-06, 7.127E-06,
     $ 7.114E-06, 7.103E-06, 7.094E-06, 7.086E-06, 7.087E-06, 7.107E-06,
     $ 7.138E-06, 7.171E-06, 7.205E-06, 7.231E-06, 7.242E-06, 7.241E-06,
     $ 7.240E-06, 7.243E-06, 7.250E-06, 7.259E-06, 7.270E-06, 7.279E-06,
     $ 7.281E-06, 7.263E-06, 7.208E-06, 7.126E-06, 7.038E-06, 6.954E-06,
     $ 6.902E-06, 6.918E-06, 6.988E-06, 7.072E-06/
C                                                                       
C     13401 TO 13500 CM-1 DATA.                                         
      DATA (SUN(I),I= 13401, 13500)/                                    
     $ 7.156E-06, 7.223E-06, 7.257E-06, 7.266E-06, 7.268E-06, 7.272E-06,
     $ 7.274E-06, 7.267E-06, 7.248E-06, 7.222E-06, 7.190E-06, 7.161E-06,
     $ 7.148E-06, 7.151E-06, 7.158E-06, 7.162E-06, 7.162E-06, 7.149E-06,
     $ 7.126E-06, 7.103E-06, 7.089E-06, 7.067E-06, 7.015E-06, 6.954E-06,
     $ 6.903E-06, 6.853E-06, 6.827E-06, 6.856E-06, 6.909E-06, 6.948E-06,
     $ 6.965E-06, 6.968E-06, 6.969E-06, 6.971E-06, 6.989E-06, 7.042E-06,
     $ 7.111E-06, 7.162E-06, 7.200E-06, 7.225E-06, 7.231E-06, 7.228E-06,
     $ 7.228E-06, 7.230E-06, 7.236E-06, 7.245E-06, 7.249E-06, 7.243E-06,
     $ 7.226E-06, 7.195E-06, 7.158E-06, 7.127E-06, 7.108E-06, 7.109E-06,
     $ 7.139E-06, 7.184E-06, 7.225E-06, 7.261E-06, 7.284E-06, 7.287E-06,
     $ 7.269E-06, 7.225E-06, 7.147E-06, 7.036E-06, 6.904E-06, 6.773E-06,
     $ 6.680E-06, 6.653E-06, 6.688E-06, 6.778E-06, 6.886E-06, 6.960E-06,
     $ 6.993E-06, 6.995E-06, 6.968E-06, 6.934E-06, 6.911E-06, 6.884E-06,
     $ 6.841E-06, 6.789E-06, 6.752E-06, 6.757E-06, 6.812E-06, 6.896E-06,
     $ 6.970E-06, 7.008E-06, 7.007E-06, 6.947E-06, 6.839E-06, 6.754E-06,
     $ 6.719E-06, 6.697E-06, 6.722E-06, 6.820E-06, 6.915E-06, 6.971E-06,
     $ 7.020E-06, 7.049E-06, 7.055E-06, 7.083E-06/
C                                                                       
C     13501 TO 13600 CM-1 DATA.                                         
      DATA (SUN(I),I= 13501, 13600)/                                    
     $ 7.134E-06, 7.171E-06, 7.182E-06, 7.153E-06, 7.077E-06, 6.977E-06,
     $ 6.898E-06, 6.863E-06, 6.878E-06, 6.939E-06, 7.023E-06, 7.096E-06,
     $ 7.147E-06, 7.175E-06, 7.180E-06, 7.169E-06, 7.142E-06, 7.099E-06,
     $ 7.053E-06, 7.010E-06, 6.981E-06, 6.995E-06, 7.045E-06, 7.084E-06,
     $ 7.082E-06, 7.050E-06, 6.984E-06, 6.876E-06, 6.784E-06, 6.749E-06,
     $ 6.723E-06, 6.695E-06, 6.701E-06, 6.719E-06, 6.740E-06, 6.800E-06,
     $ 6.880E-06, 6.952E-06, 7.013E-06, 7.050E-06, 7.067E-06, 7.086E-06,
     $ 7.108E-06, 7.124E-06, 7.138E-06, 7.148E-06, 7.144E-06, 7.140E-06,
     $ 7.150E-06, 7.166E-06, 7.177E-06, 7.185E-06, 7.190E-06, 7.182E-06,
     $ 7.169E-06, 7.165E-06, 7.165E-06, 7.166E-06, 7.171E-06, 7.183E-06,
     $ 7.190E-06, 7.190E-06, 7.186E-06, 7.177E-06, 7.169E-06, 7.166E-06,
     $ 7.166E-06, 7.171E-06, 7.178E-06, 7.182E-06, 7.175E-06, 7.156E-06,
     $ 7.130E-06, 7.092E-06, 7.037E-06, 6.982E-06, 6.952E-06, 6.939E-06,
     $ 6.944E-06, 6.986E-06, 7.052E-06, 7.109E-06, 7.152E-06, 7.186E-06,
     $ 7.196E-06, 7.173E-06, 7.125E-06, 7.065E-06, 7.003E-06, 6.944E-06,
     $ 6.907E-06, 6.913E-06, 6.954E-06, 7.002E-06, 7.041E-06, 7.069E-06,
     $ 7.076E-06, 7.062E-06, 7.054E-06, 7.073E-06/
C                                                                       
C     13601 TO 13700 CM-1 DATA.                                         
      DATA (SUN(I),I= 13601, 13700)/                                    
     $ 7.105E-06, 7.136E-06, 7.169E-06, 7.193E-06, 7.203E-06, 7.204E-06,
     $ 7.200E-06, 7.190E-06, 7.177E-06, 7.162E-06, 7.151E-06, 7.152E-06,
     $ 7.168E-06, 7.192E-06, 7.217E-06, 7.233E-06, 7.233E-06, 7.221E-06,
     $ 7.204E-06, 7.187E-06, 7.178E-06, 7.186E-06, 7.203E-06, 7.218E-06,
     $ 7.234E-06, 7.244E-06, 7.237E-06, 7.210E-06, 7.176E-06, 7.143E-06,
     $ 7.110E-06, 7.086E-06, 7.079E-06, 7.075E-06, 7.067E-06, 7.058E-06,
     $ 7.055E-06, 7.064E-06, 7.083E-06, 7.108E-06, 7.110E-06, 7.063E-06,
     $ 6.984E-06, 6.901E-06, 6.822E-06, 6.791E-06, 6.846E-06, 6.944E-06,
     $ 7.040E-06, 7.134E-06, 7.190E-06, 7.172E-06, 7.117E-06, 7.061E-06,
     $ 7.003E-06, 6.970E-06, 6.992E-06, 7.038E-06, 7.081E-06, 7.125E-06,
     $ 7.157E-06, 7.166E-06, 7.170E-06, 7.180E-06, 7.191E-06, 7.203E-06,
     $ 7.213E-06, 7.217E-06, 7.200E-06, 7.153E-06, 7.087E-06, 7.018E-06,
     $ 6.949E-06, 6.913E-06, 6.917E-06, 6.917E-06, 6.906E-06, 6.891E-06,
     $ 6.852E-06, 6.818E-06, 6.844E-06, 6.904E-06, 6.977E-06, 7.067E-06,
     $ 7.142E-06, 7.176E-06, 7.187E-06, 7.192E-06, 7.186E-06, 7.173E-06,
     $ 7.160E-06, 7.149E-06, 7.131E-06, 7.111E-06, 7.099E-06, 7.097E-06,
     $ 7.097E-06, 7.111E-06, 7.139E-06, 7.162E-06/
C                                                                       
C     13701 TO 13800 CM-1 DATA.                                         
      DATA (SUN(I),I= 13701, 13800)/                                    
     $ 7.174E-06, 7.182E-06, 7.164E-06, 7.110E-06, 7.050E-06, 6.991E-06,
     $ 6.914E-06, 6.852E-06, 6.838E-06, 6.822E-06, 6.762E-06, 6.695E-06,
     $ 6.637E-06, 6.568E-06, 6.536E-06, 6.605E-06, 6.745E-06, 6.876E-06,
     $ 6.962E-06, 7.001E-06, 6.978E-06, 6.906E-06, 6.842E-06, 6.833E-06,
     $ 6.864E-06, 6.907E-06, 6.961E-06, 7.024E-06, 7.081E-06, 7.120E-06,
     $ 7.141E-06, 7.149E-06, 7.141E-06, 7.117E-06, 7.101E-06, 7.101E-06,
     $ 7.099E-06, 7.092E-06, 7.086E-06, 7.073E-06, 7.064E-06, 7.079E-06,
     $ 7.108E-06, 7.134E-06, 7.158E-06, 7.175E-06, 7.179E-06, 7.182E-06,
     $ 7.191E-06, 7.200E-06, 7.207E-06, 7.212E-06, 7.211E-06, 7.206E-06,
     $ 7.203E-06, 7.203E-06, 7.201E-06, 7.199E-06, 7.201E-06, 7.203E-06,
     $ 7.207E-06, 7.198E-06, 7.152E-06, 7.069E-06, 6.971E-06, 6.870E-06,
     $ 6.795E-06, 6.797E-06, 6.868E-06, 6.964E-06, 7.062E-06, 7.151E-06,
     $ 7.205E-06, 7.223E-06, 7.224E-06, 7.218E-06, 7.207E-06, 7.191E-06,
     $ 7.176E-06, 7.170E-06, 7.167E-06, 7.157E-06, 7.136E-06, 7.097E-06,
     $ 7.045E-06, 6.999E-06, 6.972E-06, 6.973E-06, 7.011E-06, 7.075E-06,
     $ 7.138E-06, 7.188E-06, 7.218E-06, 7.214E-06, 7.171E-06, 7.113E-06,
     $ 7.058E-06, 7.011E-06, 6.992E-06, 7.019E-06/
C                                                                       
C     13801 TO 13900 CM-1 DATA.                                         
      DATA (SUN(I),I= 13801, 13900)/                                    
     $ 7.070E-06, 7.120E-06, 7.165E-06, 7.188E-06, 7.171E-06, 7.136E-06,
     $ 7.102E-06, 7.071E-06, 7.060E-06, 7.081E-06, 7.114E-06, 7.134E-06,
     $ 7.141E-06, 7.133E-06, 7.109E-06, 7.083E-06, 7.078E-06, 7.098E-06,
     $ 7.126E-06, 7.156E-06, 7.187E-06, 7.209E-06, 7.219E-06, 7.220E-06,
     $ 7.214E-06, 7.201E-06, 7.182E-06, 7.157E-06, 7.134E-06, 7.117E-06,
     $ 7.100E-06, 7.089E-06, 7.086E-06, 7.076E-06, 7.046E-06, 6.992E-06,
     $ 6.910E-06, 6.814E-06, 6.732E-06, 6.687E-06, 6.702E-06, 6.768E-06,
     $ 6.845E-06, 6.915E-06, 6.973E-06, 7.001E-06, 7.012E-06, 7.038E-06,
     $ 7.071E-06, 7.099E-06, 7.128E-06, 7.146E-06, 7.141E-06, 7.126E-06,
     $ 7.114E-06, 7.096E-06, 7.074E-06, 7.062E-06, 7.061E-06, 7.059E-06,
     $ 7.069E-06, 7.091E-06, 7.100E-06, 7.092E-06, 7.075E-06, 7.016E-06,
     $ 6.893E-06, 6.757E-06, 6.638E-06, 6.529E-06, 6.492E-06, 6.585E-06,
     $ 6.739E-06, 6.894E-06, 7.044E-06, 7.144E-06, 7.149E-06, 7.102E-06,
     $ 7.049E-06, 6.995E-06, 6.967E-06, 6.990E-06, 7.037E-06, 7.086E-06,
     $ 7.135E-06, 7.159E-06, 7.131E-06, 7.080E-06, 7.031E-06, 6.977E-06,
     $ 6.939E-06, 6.941E-06, 6.943E-06, 6.912E-06, 6.878E-06, 6.844E-06,
     $ 6.795E-06, 6.777E-06, 6.814E-06, 6.858E-06/
C                                                                       
C     13901 TO 14000 CM-1 DATA.                                         
      DATA (SUN(I),I= 13901, 14000)/                                    
     $ 6.886E-06, 6.904E-06, 6.895E-06, 6.853E-06, 6.784E-06, 6.701E-06,
     $ 6.632E-06, 6.582E-06, 6.552E-06, 6.581E-06, 6.679E-06, 6.793E-06,
     $ 6.900E-06, 7.001E-06, 7.068E-06, 7.070E-06, 7.017E-06, 6.939E-06,
     $ 6.843E-06, 6.740E-06, 6.684E-06, 6.700E-06, 6.756E-06, 6.836E-06,
     $ 6.932E-06, 6.998E-06, 7.012E-06, 6.992E-06, 6.958E-06, 6.925E-06,
     $ 6.917E-06, 6.943E-06, 6.998E-06, 7.065E-06, 7.121E-06, 7.159E-06,
     $ 7.172E-06, 7.163E-06, 7.144E-06, 7.125E-06, 7.108E-06, 7.103E-06,
     $ 7.112E-06, 7.124E-06, 7.135E-06, 7.142E-06, 7.128E-06, 7.078E-06,
     $ 6.985E-06, 6.848E-06, 6.696E-06, 6.573E-06, 6.506E-06, 6.520E-06,
     $ 6.624E-06, 6.768E-06, 6.895E-06, 6.995E-06, 7.060E-06, 7.084E-06,
     $ 7.088E-06, 7.096E-06, 7.107E-06, 7.119E-06, 7.129E-06, 7.129E-06,
     $ 7.111E-06, 7.078E-06, 7.037E-06, 6.994E-06, 6.970E-06, 6.985E-06,
     $ 7.024E-06, 7.059E-06, 7.073E-06, 7.064E-06, 7.031E-06, 6.979E-06,
     $ 6.941E-06, 6.939E-06, 6.922E-06, 6.846E-06, 6.748E-06, 6.644E-06,
     $ 6.533E-06, 6.485E-06, 6.549E-06, 6.671E-06, 6.797E-06, 6.916E-06,
     $ 7.009E-06, 7.055E-06, 7.064E-06, 7.062E-06, 7.059E-06, 7.050E-06,
     $ 7.040E-06, 7.048E-06, 7.067E-06, 7.084E-06/
C                                                                       
C     14001 TO 14100 CM-1 DATA.                                         
      DATA (SUN(I),I= 14001, 14100)/                                    
     $ 7.100E-06, 7.114E-06, 7.121E-06, 7.127E-06, 7.133E-06, 7.133E-06,
     $ 7.128E-06, 7.120E-06, 7.111E-06, 7.102E-06, 7.093E-06, 7.076E-06,
     $ 7.053E-06, 7.024E-06, 6.979E-06, 6.920E-06, 6.864E-06, 6.812E-06,
     $ 6.764E-06, 6.750E-06, 6.788E-06, 6.846E-06, 6.913E-06, 6.984E-06,
     $ 7.035E-06, 7.052E-06, 7.051E-06, 7.044E-06, 7.035E-06, 7.030E-06,
     $ 7.036E-06, 7.039E-06, 7.013E-06, 6.969E-06, 6.923E-06, 6.869E-06,
     $ 6.836E-06, 6.862E-06, 6.919E-06, 6.971E-06, 7.020E-06, 7.055E-06,
     $ 7.059E-06, 7.046E-06, 7.037E-06, 7.032E-06, 7.025E-06, 7.019E-06,
     $ 7.013E-06, 7.001E-06, 6.983E-06, 6.967E-06, 6.948E-06, 6.921E-06,
     $ 6.895E-06, 6.882E-06, 6.881E-06, 6.895E-06, 6.930E-06, 6.980E-06,
     $ 7.023E-06, 7.044E-06, 7.051E-06, 7.048E-06, 7.033E-06, 7.024E-06,
     $ 7.038E-06, 7.061E-06, 7.084E-06, 7.108E-06, 7.127E-06, 7.133E-06,
     $ 7.131E-06, 7.129E-06, 7.127E-06, 7.125E-06, 7.123E-06, 7.125E-06,
     $ 7.127E-06, 7.126E-06, 7.126E-06, 7.122E-06, 7.112E-06, 7.100E-06,
     $ 7.084E-06, 7.058E-06, 7.035E-06, 7.021E-06, 7.010E-06, 7.009E-06,
     $ 7.026E-06, 7.048E-06, 7.060E-06, 7.066E-06, 7.056E-06, 7.013E-06,
     $ 6.952E-06, 6.898E-06, 6.851E-06, 6.830E-06/
C                                                                       
C     14101 TO 14200 CM-1 DATA.                                         
      DATA (SUN(I),I= 14101, 14200)/                                    
     $ 6.861E-06, 6.923E-06, 6.980E-06, 7.030E-06, 7.060E-06, 7.043E-06,
     $ 6.988E-06, 6.925E-06, 6.858E-06, 6.794E-06, 6.766E-06, 6.787E-06,
     $ 6.837E-06, 6.907E-06, 6.988E-06, 7.057E-06, 7.099E-06, 7.122E-06,
     $ 7.134E-06, 7.138E-06, 7.138E-06, 7.138E-06, 7.139E-06, 7.139E-06,
     $ 7.138E-06, 7.136E-06, 7.135E-06, 7.134E-06, 7.133E-06, 7.130E-06,
     $ 7.121E-06, 7.104E-06, 7.073E-06, 7.036E-06, 7.007E-06, 6.982E-06,
     $ 6.959E-06, 6.942E-06, 6.907E-06, 6.832E-06, 6.750E-06, 6.690E-06,
     $ 6.649E-06, 6.656E-06, 6.732E-06, 6.833E-06, 6.922E-06, 7.000E-06,
     $ 7.058E-06, 7.080E-06, 7.083E-06, 7.083E-06, 7.081E-06, 7.075E-06,
     $ 7.062E-06, 7.043E-06, 7.020E-06, 6.996E-06, 6.972E-06, 6.959E-06,
     $ 6.966E-06, 6.983E-06, 6.995E-06, 7.000E-06, 6.997E-06, 6.986E-06,
     $ 6.970E-06, 6.959E-06, 6.967E-06, 6.984E-06, 6.990E-06, 6.988E-06,
     $ 6.985E-06, 6.975E-06, 6.966E-06, 6.980E-06, 7.013E-06, 7.047E-06,
     $ 7.080E-06, 7.107E-06, 7.120E-06, 7.123E-06, 7.124E-06, 7.124E-06,
     $ 7.122E-06, 7.113E-06, 7.092E-06, 7.066E-06, 7.040E-06, 7.017E-06,
     $ 7.007E-06, 7.020E-06, 7.043E-06, 7.066E-06, 7.088E-06, 7.104E-06,
     $ 7.108E-06, 7.102E-06, 7.074E-06, 7.015E-06/
C                                                                       
C     14201 TO 14300 CM-1 DATA.                                         
      DATA (SUN(I),I= 14201, 14300)/                                    
     $ 6.941E-06, 6.866E-06, 6.804E-06, 6.789E-06, 6.833E-06, 6.895E-06,
     $ 6.944E-06, 6.977E-06, 6.983E-06, 6.959E-06, 6.935E-06, 6.944E-06,
     $ 6.971E-06, 6.996E-06, 7.016E-06, 7.026E-06, 7.018E-06, 6.995E-06,
     $ 6.969E-06, 6.945E-06, 6.924E-06, 6.904E-06, 6.891E-06, 6.897E-06,
     $ 6.920E-06, 6.948E-06, 6.971E-06, 6.972E-06, 6.944E-06, 6.886E-06,
     $ 6.801E-06, 6.722E-06, 6.680E-06, 6.673E-06, 6.704E-06, 6.782E-06,
     $ 6.876E-06, 6.956E-06, 7.021E-06, 7.065E-06, 7.073E-06, 7.047E-06,
     $ 6.990E-06, 6.890E-06, 6.751E-06, 6.616E-06, 6.518E-06, 6.469E-06,
     $ 6.503E-06, 6.617E-06, 6.741E-06, 6.829E-06, 6.880E-06, 6.882E-06,
     $ 6.839E-06, 6.797E-06, 6.792E-06, 6.815E-06, 6.852E-06, 6.900E-06,
     $ 6.942E-06, 6.967E-06, 6.974E-06, 6.970E-06, 6.953E-06, 6.928E-06,
     $ 6.901E-06, 6.873E-06, 6.843E-06, 6.817E-06, 6.800E-06, 6.796E-06,
     $ 6.808E-06, 6.834E-06, 6.871E-06, 6.909E-06, 6.919E-06, 6.893E-06,
     $ 6.850E-06, 6.799E-06, 6.754E-06, 6.750E-06, 6.795E-06, 6.862E-06,
     $ 6.933E-06, 7.000E-06, 7.043E-06, 7.061E-06, 7.068E-06, 7.069E-06,
     $ 7.066E-06, 7.058E-06, 7.050E-06, 7.043E-06, 7.036E-06, 7.033E-06,
     $ 7.039E-06, 7.046E-06, 7.050E-06, 7.048E-06/
C                                                                       
C     14301 TO 14400 CM-1 DATA.                                         
      DATA (SUN(I),I= 14301, 14400)/                                    
     $ 7.033E-06, 7.009E-06, 6.986E-06, 6.966E-06, 6.958E-06, 6.973E-06,
     $ 6.997E-06, 7.019E-06, 7.040E-06, 7.053E-06, 7.055E-06, 7.055E-06,
     $ 7.054E-06, 7.048E-06, 7.037E-06, 7.022E-06, 7.003E-06, 6.981E-06,
     $ 6.960E-06, 6.935E-06, 6.889E-06, 6.817E-06, 6.744E-06, 6.682E-06,
     $ 6.634E-06, 6.624E-06, 6.663E-06, 6.717E-06, 6.768E-06, 6.823E-06,
     $ 6.881E-06, 6.927E-06, 6.966E-06, 7.000E-06, 7.015E-06, 7.005E-06,
     $ 6.979E-06, 6.942E-06, 6.907E-06, 6.894E-06, 6.900E-06, 6.917E-06,
     $ 6.953E-06, 6.994E-06, 7.022E-06, 7.039E-06, 7.046E-06, 7.037E-06,
     $ 7.011E-06, 6.982E-06, 6.956E-06, 6.936E-06, 6.928E-06, 6.940E-06,
     $ 6.959E-06, 6.976E-06, 6.993E-06, 7.005E-06, 7.006E-06, 6.998E-06,
     $ 6.981E-06, 6.952E-06, 6.922E-06, 6.902E-06, 6.892E-06, 6.896E-06,
     $ 6.915E-06, 6.935E-06, 6.947E-06, 6.950E-06, 6.951E-06, 6.957E-06,
     $ 6.961E-06, 6.963E-06, 6.972E-06, 6.981E-06, 6.976E-06, 6.958E-06,
     $ 6.935E-06, 6.909E-06, 6.881E-06, 6.865E-06, 6.878E-06, 6.913E-06,
     $ 6.947E-06, 6.970E-06, 6.985E-06, 6.985E-06, 6.960E-06, 6.913E-06,
     $ 6.860E-06, 6.808E-06, 6.753E-06, 6.713E-06, 6.722E-06, 6.768E-06,
     $ 6.823E-06, 6.885E-06, 6.949E-06, 6.995E-06/
C                                                                       
C     14401 TO 14500 CM-1 DATA.                                         
      DATA (SUN(I),I= 14401, 14500)/                                    
     $ 7.020E-06, 7.039E-06, 7.052E-06, 7.056E-06, 7.050E-06, 7.040E-06,
     $ 7.030E-06, 7.022E-06, 7.019E-06, 7.021E-06, 7.023E-06, 7.026E-06,
     $ 7.024E-06, 7.008E-06, 6.977E-06, 6.937E-06, 6.891E-06, 6.848E-06,
     $ 6.828E-06, 6.835E-06, 6.855E-06, 6.886E-06, 6.923E-06, 6.951E-06,
     $ 6.968E-06, 6.986E-06, 7.003E-06, 7.014E-06, 7.020E-06, 7.019E-06,
     $ 7.003E-06, 6.971E-06, 6.925E-06, 6.871E-06, 6.822E-06, 6.793E-06,
     $ 6.791E-06, 6.818E-06, 6.873E-06, 6.930E-06, 6.963E-06, 6.975E-06,
     $ 6.971E-06, 6.950E-06, 6.932E-06, 6.935E-06, 6.950E-06, 6.963E-06,
     $ 6.963E-06, 6.940E-06, 6.904E-06, 6.865E-06, 6.818E-06, 6.773E-06,
     $ 6.755E-06, 6.751E-06, 6.748E-06, 6.765E-06, 6.814E-06, 6.859E-06,
     $ 6.887E-06, 6.913E-06, 6.929E-06, 6.930E-06, 6.940E-06, 6.966E-06,
     $ 6.997E-06, 7.025E-06, 7.045E-06, 7.047E-06, 7.030E-06, 7.000E-06,
     $ 6.962E-06, 6.922E-06, 6.893E-06, 6.881E-06, 6.888E-06, 6.913E-06,
     $ 6.947E-06, 6.980E-06, 7.006E-06, 7.023E-06, 7.033E-06, 7.036E-06,
     $ 7.035E-06, 7.032E-06, 7.023E-06, 7.004E-06, 6.983E-06, 6.969E-06,
     $ 6.960E-06, 6.959E-06, 6.977E-06, 6.997E-06, 7.003E-06, 6.998E-06,
     $ 6.986E-06, 6.965E-06, 6.949E-06, 6.951E-06/
C                                                                       
C     14501 TO 14600 CM-1 DATA.                                         
      DATA (SUN(I),I= 14501, 14600)/                                    
     $ 6.969E-06, 6.992E-06, 7.017E-06, 7.038E-06, 7.050E-06, 7.054E-06,
     $ 7.057E-06, 7.058E-06, 7.058E-06, 7.053E-06, 7.036E-06, 7.012E-06,
     $ 6.981E-06, 6.943E-06, 6.904E-06, 6.880E-06, 6.872E-06, 6.875E-06,
     $ 6.893E-06, 6.923E-06, 6.938E-06, 6.925E-06, 6.892E-06, 6.847E-06,
     $ 6.799E-06, 6.772E-06, 6.783E-06, 6.823E-06, 6.873E-06, 6.922E-06,
     $ 6.963E-06, 6.990E-06, 7.001E-06, 7.007E-06, 7.009E-06, 7.005E-06,
     $ 6.995E-06, 6.985E-06, 6.979E-06, 6.979E-06, 6.986E-06, 6.991E-06,
     $ 6.987E-06, 6.978E-06, 6.966E-06, 6.953E-06, 6.952E-06, 6.967E-06,
     $ 6.989E-06, 7.008E-06, 7.024E-06, 7.034E-06, 7.036E-06, 7.035E-06,
     $ 7.035E-06, 7.034E-06, 7.033E-06, 7.028E-06, 7.023E-06, 7.016E-06,
     $ 7.008E-06, 7.005E-06, 7.002E-06, 6.973E-06, 6.904E-06, 6.812E-06,
     $ 6.706E-06, 6.594E-06, 6.530E-06, 6.550E-06, 6.617E-06, 6.698E-06,
     $ 6.780E-06, 6.833E-06, 6.839E-06, 6.815E-06, 6.790E-06, 6.767E-06,
     $ 6.731E-06, 6.676E-06, 6.616E-06, 6.564E-06, 6.540E-06, 6.570E-06,
     $ 6.657E-06, 6.759E-06, 6.841E-06, 6.893E-06, 6.911E-06, 6.903E-06,
     $ 6.902E-06, 6.924E-06, 6.957E-06, 6.989E-06, 7.016E-06, 7.031E-06,
     $ 7.035E-06, 7.034E-06, 7.034E-06, 7.033E-06/
C                                                                       
C     14601 TO 14700 CM-1 DATA.                                         
      DATA (SUN(I),I= 14601, 14700)/                                    
     $ 7.032E-06, 7.029E-06, 7.016E-06, 6.981E-06, 6.929E-06, 6.860E-06,
     $ 6.780E-06, 6.701E-06, 6.635E-06, 6.588E-06, 6.564E-06, 6.553E-06,
     $ 6.563E-06, 6.616E-06, 6.691E-06, 6.767E-06, 6.854E-06, 6.927E-06,
     $ 6.962E-06, 6.976E-06, 6.979E-06, 6.977E-06, 6.983E-06, 6.999E-06,
     $ 7.014E-06, 7.025E-06, 7.027E-06, 7.020E-06, 7.007E-06, 6.998E-06,
     $ 6.999E-06, 7.007E-06, 7.018E-06, 7.031E-06, 7.030E-06, 7.002E-06,
     $ 6.953E-06, 6.896E-06, 6.835E-06, 6.794E-06, 6.797E-06, 6.829E-06,
     $ 6.871E-06, 6.919E-06, 6.957E-06, 6.977E-06, 6.989E-06, 6.995E-06,
     $ 6.996E-06, 6.995E-06, 6.988E-06, 6.974E-06, 6.956E-06, 6.932E-06,
     $ 6.902E-06, 6.876E-06, 6.859E-06, 6.857E-06, 6.878E-06, 6.911E-06,
     $ 6.943E-06, 6.970E-06, 6.986E-06, 6.990E-06, 6.984E-06, 6.962E-06,
     $ 6.931E-06, 6.895E-06, 6.854E-06, 6.828E-06, 6.836E-06, 6.866E-06,
     $ 6.909E-06, 6.961E-06, 6.994E-06, 6.991E-06, 6.967E-06, 6.934E-06,
     $ 6.896E-06, 6.876E-06, 6.893E-06, 6.912E-06, 6.897E-06, 6.866E-06,
     $ 6.823E-06, 6.761E-06, 6.724E-06, 6.753E-06, 6.807E-06, 6.858E-06,
     $ 6.910E-06, 6.944E-06, 6.950E-06, 6.952E-06, 6.962E-06, 6.971E-06,
     $ 6.977E-06, 6.981E-06, 6.974E-06, 6.948E-06/
C                                                                       
C     14701 TO 14800 CM-1 DATA.                                         
      DATA (SUN(I),I= 14701, 14800)/                                    
     $ 6.915E-06, 6.887E-06, 6.861E-06, 6.849E-06, 6.860E-06, 6.871E-06,
     $ 6.871E-06, 6.867E-06, 6.855E-06, 6.842E-06, 6.847E-06, 6.855E-06,
     $ 6.855E-06, 6.855E-06, 6.850E-06, 6.847E-06, 6.862E-06, 6.889E-06,
     $ 6.913E-06, 6.933E-06, 6.940E-06, 6.937E-06, 6.943E-06, 6.958E-06,
     $ 6.972E-06, 6.981E-06, 6.981E-06, 6.965E-06, 6.936E-06, 6.906E-06,
     $ 6.889E-06, 6.881E-06, 6.870E-06, 6.855E-06, 6.839E-06, 6.819E-06,
     $ 6.799E-06, 6.799E-06, 6.831E-06, 6.877E-06, 6.925E-06, 6.972E-06,
     $ 7.003E-06, 7.010E-06, 7.003E-06, 6.991E-06, 6.976E-06, 6.963E-06,
     $ 6.959E-06, 6.961E-06, 6.964E-06, 6.974E-06, 6.984E-06, 6.989E-06,
     $ 6.992E-06, 6.998E-06, 6.996E-06, 6.977E-06, 6.949E-06, 6.916E-06,
     $ 6.872E-06, 6.836E-06, 6.831E-06, 6.841E-06, 6.860E-06, 6.895E-06,
     $ 6.918E-06, 6.901E-06, 6.869E-06, 6.835E-06, 6.788E-06, 6.755E-06,
     $ 6.765E-06, 6.793E-06, 6.819E-06, 6.850E-06, 6.884E-06, 6.913E-06,
     $ 6.938E-06, 6.962E-06, 6.983E-06, 6.990E-06, 6.979E-06, 6.963E-06,
     $ 6.952E-06, 6.945E-06, 6.947E-06, 6.963E-06, 6.982E-06, 6.995E-06,
     $ 7.001E-06, 6.999E-06, 6.989E-06, 6.978E-06, 6.972E-06, 6.975E-06,
     $ 6.988E-06, 7.001E-06, 7.010E-06, 7.006E-06/
C                                                                       
C     14801 TO 14900 CM-1 DATA.                                         
      DATA (SUN(I),I= 14801, 14900)/                                    
     $ 6.984E-06, 6.949E-06, 6.908E-06, 6.867E-06, 6.829E-06, 6.790E-06,
     $ 6.749E-06, 6.717E-06, 6.691E-06, 6.682E-06, 6.716E-06, 6.774E-06,
     $ 6.831E-06, 6.887E-06, 6.931E-06, 6.943E-06, 6.938E-06, 6.934E-06,
     $ 6.926E-06, 6.917E-06, 6.914E-06, 6.905E-06, 6.894E-06, 6.890E-06,
     $ 6.888E-06, 6.891E-06, 6.909E-06, 6.932E-06, 6.944E-06, 6.940E-06,
     $ 6.925E-06, 6.900E-06, 6.864E-06, 6.839E-06, 6.844E-06, 6.864E-06,
     $ 6.888E-06, 6.922E-06, 6.957E-06, 6.976E-06, 6.986E-06, 6.994E-06,
     $ 6.995E-06, 6.983E-06, 6.964E-06, 6.942E-06, 6.916E-06, 6.899E-06,
     $ 6.903E-06, 6.919E-06, 6.942E-06, 6.970E-06, 6.992E-06, 7.000E-06,
     $ 7.002E-06, 7.003E-06, 6.992E-06, 6.959E-06, 6.916E-06, 6.866E-06,
     $ 6.801E-06, 6.752E-06, 6.747E-06, 6.761E-06, 6.785E-06, 6.832E-06,
     $ 6.876E-06, 6.894E-06, 6.904E-06, 6.910E-06, 6.906E-06, 6.903E-06,
     $ 6.912E-06, 6.933E-06, 6.959E-06, 6.986E-06, 6.991E-06, 6.948E-06,
     $ 6.876E-06, 6.793E-06, 6.699E-06, 6.632E-06, 6.628E-06, 6.661E-06,
     $ 6.704E-06, 6.760E-06, 6.807E-06, 6.811E-06, 6.775E-06, 6.722E-06,
     $ 6.666E-06, 6.626E-06, 6.627E-06, 6.672E-06, 6.738E-06, 6.803E-06,
     $ 6.857E-06, 6.893E-06, 6.921E-06, 6.946E-06/
C                                                                       
C     14901 TO 15000 CM-1 DATA.                                         
      DATA (SUN(I),I= 14901, 15000)/                                    
     $ 6.968E-06, 6.988E-06, 6.999E-06, 6.999E-06, 6.989E-06, 6.970E-06,
     $ 6.947E-06, 6.921E-06, 6.881E-06, 6.843E-06, 6.827E-06, 6.823E-06,
     $ 6.833E-06, 6.871E-06, 6.919E-06, 6.954E-06, 6.982E-06, 6.995E-06,
     $ 6.979E-06, 6.944E-06, 6.905E-06, 6.867E-06, 6.842E-06, 6.839E-06,
     $ 6.844E-06, 6.833E-06, 6.810E-06, 6.782E-06, 6.751E-06, 6.744E-06,
     $ 6.783E-06, 6.845E-06, 6.904E-06, 6.955E-06, 6.984E-06, 6.984E-06,
     $ 6.971E-06, 6.962E-06, 6.959E-06, 6.962E-06, 6.970E-06, 6.981E-06,
     $ 6.989E-06, 6.989E-06, 6.978E-06, 6.961E-06, 6.945E-06, 6.934E-06,
     $ 6.933E-06, 6.947E-06, 6.966E-06, 6.979E-06, 6.986E-06, 6.986E-06,
     $ 6.979E-06, 6.972E-06, 6.967E-06, 6.966E-06, 6.969E-06, 6.973E-06,
     $ 6.976E-06, 6.978E-06, 6.978E-06, 6.974E-06, 6.949E-06, 6.881E-06,
     $ 6.778E-06, 6.666E-06, 6.557E-06, 6.487E-06, 6.507E-06, 6.600E-06,
     $ 6.713E-06, 6.826E-06, 6.917E-06, 6.962E-06, 6.972E-06, 6.974E-06,
     $ 6.977E-06, 6.981E-06, 6.986E-06, 6.988E-06, 6.991E-06, 6.994E-06,
     $ 6.997E-06, 7.000E-06, 7.001E-06, 7.000E-06, 6.990E-06, 6.970E-06,
     $ 6.941E-06, 6.905E-06, 6.867E-06, 6.837E-06, 6.819E-06, 6.812E-06,
     $ 6.817E-06, 6.806E-06, 6.750E-06, 6.665E-06/
C                                                                       
C     15001 TO 15100 CM-1 DATA.                                         
      DATA (SUN(I),I= 15001, 15100)/                                    
     $ 6.577E-06, 6.493E-06, 6.452E-06, 6.499E-06, 6.602E-06, 6.704E-06,
     $ 6.788E-06, 6.843E-06, 6.854E-06, 6.843E-06, 6.844E-06, 6.867E-06,
     $ 6.903E-06, 6.940E-06, 6.970E-06, 6.987E-06, 6.990E-06, 6.983E-06,
     $ 6.976E-06, 6.967E-06, 6.951E-06, 6.937E-06, 6.920E-06, 6.897E-06,
     $ 6.875E-06, 6.867E-06, 6.867E-06, 6.875E-06, 6.897E-06, 6.925E-06,
     $ 6.947E-06, 6.964E-06, 6.973E-06, 6.968E-06, 6.947E-06, 6.906E-06,
     $ 6.852E-06, 6.804E-06, 6.771E-06, 6.759E-06, 6.781E-06, 6.826E-06,
     $ 6.857E-06, 6.852E-06, 6.824E-06, 6.781E-06, 6.722E-06, 6.688E-06,
     $ 6.712E-06, 6.763E-06, 6.808E-06, 6.846E-06, 6.863E-06, 6.848E-06,
     $ 6.819E-06, 6.804E-06, 6.820E-06, 6.854E-06, 6.887E-06, 6.918E-06,
     $ 6.940E-06, 6.936E-06, 6.915E-06, 6.893E-06, 6.855E-06, 6.784E-06,
     $ 6.704E-06, 6.631E-06, 6.556E-06, 6.515E-06, 6.541E-06, 6.602E-06,
     $ 6.665E-06, 6.735E-06, 6.792E-06, 6.819E-06, 6.834E-06, 6.856E-06,
     $ 6.883E-06, 6.903E-06, 6.915E-06, 6.920E-06, 6.917E-06, 6.911E-06,
     $ 6.915E-06, 6.921E-06, 6.923E-06, 6.925E-06, 6.921E-06, 6.914E-06,
     $ 6.913E-06, 6.919E-06, 6.926E-06, 6.931E-06, 6.935E-06, 6.938E-06,
     $ 6.941E-06, 6.945E-06, 6.952E-06, 6.961E-06/
C                                                                       
C     15101 TO 15200 CM-1 DATA.                                         
      DATA (SUN(I),I= 15101, 15200)/                                    
     $ 6.967E-06, 6.969E-06, 6.968E-06, 6.965E-06, 6.960E-06, 6.954E-06,
     $ 6.953E-06, 6.958E-06, 6.966E-06, 6.974E-06, 6.979E-06, 6.978E-06,
     $ 6.969E-06, 6.958E-06, 6.947E-06, 6.937E-06, 6.936E-06, 6.944E-06,
     $ 6.954E-06, 6.958E-06, 6.937E-06, 6.883E-06, 6.806E-06, 6.720E-06,
     $ 6.640E-06, 6.601E-06, 6.617E-06, 6.666E-06, 6.730E-06, 6.801E-06,
     $ 6.859E-06, 6.892E-06, 6.905E-06, 6.908E-06, 6.906E-06, 6.900E-06,
     $ 6.896E-06, 6.906E-06, 6.921E-06, 6.935E-06, 6.950E-06, 6.961E-06,
     $ 6.965E-06, 6.962E-06, 6.954E-06, 6.940E-06, 6.921E-06, 6.892E-06,
     $ 6.852E-06, 6.814E-06, 6.788E-06, 6.768E-06, 6.765E-06, 6.788E-06,
     $ 6.820E-06, 6.831E-06, 6.810E-06, 6.756E-06, 6.658E-06, 6.514E-06,
     $ 6.377E-06, 6.295E-06, 6.257E-06, 6.284E-06, 6.398E-06, 6.541E-06,
     $ 6.666E-06, 6.778E-06, 6.861E-06, 6.898E-06, 6.910E-06, 6.914E-06,
     $ 6.911E-06, 6.897E-06, 6.870E-06, 6.837E-06, 6.805E-06, 6.774E-06,
     $ 6.759E-06, 6.771E-06, 6.796E-06, 6.820E-06, 6.842E-06, 6.857E-06,
     $ 6.859E-06, 6.857E-06, 6.851E-06, 6.842E-06, 6.831E-06, 6.818E-06,
     $ 6.809E-06, 6.811E-06, 6.820E-06, 6.832E-06, 6.841E-06, 6.841E-06,
     $ 6.830E-06, 6.813E-06, 6.794E-06, 6.767E-06/
C                                                                       
C     15201 TO 15300 CM-1 DATA.                                         
      DATA (SUN(I),I= 15201, 15300)/                                    
     $ 6.722E-06, 6.663E-06, 6.591E-06, 6.515E-06, 6.455E-06, 6.432E-06,
     $ 6.441E-06, 6.473E-06, 6.515E-06, 6.551E-06, 6.578E-06, 6.593E-06,
     $ 6.579E-06, 6.534E-06, 6.470E-06, 6.395E-06, 6.315E-06, 6.255E-06,
     $ 6.241E-06, 6.249E-06, 6.251E-06, 6.242E-06, 6.209E-06, 6.138E-06,
     $ 6.033E-06, 5.903E-06, 5.734E-06, 5.489E-06, 5.139E-06, 4.717E-06,
     $ 4.295E-06, 3.947E-06, 3.770E-06, 3.844E-06, 4.132E-06, 4.521E-06,
     $ 4.927E-06, 5.289E-06, 5.557E-06, 5.738E-06, 5.876E-06, 6.001E-06,
     $ 6.109E-06, 6.195E-06, 6.255E-06, 6.288E-06, 6.302E-06, 6.310E-06,
     $ 6.319E-06, 6.346E-06, 6.398E-06, 6.458E-06, 6.515E-06, 6.574E-06,
     $ 6.623E-06, 6.655E-06, 6.678E-06, 6.693E-06, 6.701E-06, 6.708E-06,
     $ 6.716E-06, 6.729E-06, 6.748E-06, 6.763E-06, 6.760E-06, 6.747E-06,
     $ 6.703E-06, 6.612E-06, 6.513E-06, 6.440E-06, 6.385E-06, 6.382E-06,
     $ 6.466E-06, 6.584E-06, 6.690E-06, 6.786E-06, 6.855E-06, 6.876E-06,
     $ 6.871E-06, 6.862E-06, 6.854E-06, 6.847E-06, 6.847E-06, 6.850E-06,
     $ 6.843E-06, 6.823E-06, 6.797E-06, 6.766E-06, 6.743E-06, 6.746E-06,
     $ 6.772E-06, 6.806E-06, 6.844E-06, 6.878E-06, 6.895E-06, 6.887E-06,
     $ 6.857E-06, 6.813E-06, 6.763E-06, 6.716E-06/
C                                                                       
C     15301 TO 15400 CM-1 DATA.                                         
      DATA (SUN(I),I= 15301, 15400)/                                    
     $ 6.697E-06, 6.715E-06, 6.755E-06, 6.805E-06, 6.855E-06, 6.891E-06,
     $ 6.908E-06, 6.914E-06, 6.915E-06, 6.916E-06, 6.915E-06, 6.903E-06,
     $ 6.881E-06, 6.847E-06, 6.808E-06, 6.776E-06, 6.763E-06, 6.776E-06,
     $ 6.810E-06, 6.854E-06, 6.892E-06, 6.918E-06, 6.930E-06, 6.927E-06,
     $ 6.914E-06, 6.895E-06, 6.871E-06, 6.845E-06, 6.825E-06, 6.815E-06,
     $ 6.814E-06, 6.809E-06, 6.786E-06, 6.751E-06, 6.715E-06, 6.680E-06,
     $ 6.665E-06, 6.677E-06, 6.695E-06, 6.709E-06, 6.721E-06, 6.733E-06,
     $ 6.757E-06, 6.799E-06, 6.845E-06, 6.888E-06, 6.922E-06, 6.939E-06,
     $ 6.941E-06, 6.942E-06, 6.945E-06, 6.948E-06, 6.945E-06, 6.932E-06,
     $ 6.908E-06, 6.879E-06, 6.850E-06, 6.829E-06, 6.828E-06, 6.846E-06,
     $ 6.874E-06, 6.905E-06, 6.931E-06, 6.946E-06, 6.945E-06, 6.915E-06,
     $ 6.859E-06, 6.794E-06, 6.730E-06, 6.680E-06, 6.676E-06, 6.721E-06,
     $ 6.781E-06, 6.840E-06, 6.892E-06, 6.903E-06, 6.852E-06, 6.763E-06,
     $ 6.655E-06, 6.537E-06, 6.459E-06, 6.457E-06, 6.496E-06, 6.527E-06,
     $ 6.528E-06, 6.480E-06, 6.353E-06, 6.169E-06, 6.018E-06, 5.914E-06,
     $ 5.806E-06, 5.748E-06, 5.803E-06, 5.895E-06, 6.011E-06, 6.203E-06,
     $ 6.410E-06, 6.555E-06, 6.658E-06, 6.737E-06/
C                                                                       
C     15401 TO 15500 CM-1 DATA.                                         
      DATA (SUN(I),I= 15401, 15500)/                                    
     $ 6.790E-06, 6.831E-06, 6.871E-06, 6.912E-06, 6.946E-06, 6.961E-06,
     $ 6.965E-06, 6.967E-06, 6.965E-06, 6.961E-06, 6.957E-06, 6.953E-06,
     $ 6.950E-06, 6.949E-06, 6.947E-06, 6.937E-06, 6.906E-06, 6.853E-06,
     $ 6.775E-06, 6.681E-06, 6.604E-06, 6.566E-06, 6.574E-06, 6.637E-06,
     $ 6.734E-06, 6.826E-06, 6.898E-06, 6.945E-06, 6.962E-06, 6.959E-06,
     $ 6.955E-06, 6.952E-06, 6.937E-06, 6.898E-06, 6.843E-06, 6.784E-06,
     $ 6.724E-06, 6.690E-06, 6.709E-06, 6.763E-06, 6.823E-06, 6.882E-06,
     $ 6.906E-06, 6.863E-06, 6.784E-06, 6.702E-06, 6.623E-06, 6.586E-06,
     $ 6.612E-06, 6.654E-06, 6.689E-06, 6.722E-06, 6.740E-06, 6.745E-06,
     $ 6.766E-06, 6.800E-06, 6.824E-06, 6.827E-06, 6.811E-06, 6.777E-06,
     $ 6.734E-06, 6.707E-06, 6.711E-06, 6.702E-06, 6.626E-06, 6.498E-06,
     $ 6.350E-06, 6.187E-06, 6.077E-06, 6.114E-06, 6.269E-06, 6.455E-06,
     $ 6.641E-06, 6.799E-06, 6.882E-06, 6.904E-06, 6.909E-06, 6.911E-06,
     $ 6.897E-06, 6.853E-06, 6.783E-06, 6.691E-06, 6.587E-06, 6.506E-06,
     $ 6.479E-06, 6.505E-06, 6.576E-06, 6.676E-06, 6.773E-06, 6.846E-06,
     $ 6.888E-06, 6.899E-06, 6.890E-06, 6.867E-06, 6.809E-06, 6.712E-06,
     $ 6.609E-06, 6.513E-06, 6.432E-06, 6.420E-06/
C                                                                       
C     15501 TO 15600 CM-1 DATA.                                         
      DATA (SUN(I),I= 15501, 15600)/                                    
     $ 6.499E-06, 6.612E-06, 6.724E-06, 6.828E-06, 6.895E-06, 6.915E-06,
     $ 6.917E-06, 6.919E-06, 6.922E-06, 6.923E-06, 6.921E-06, 6.911E-06,
     $ 6.892E-06, 6.870E-06, 6.852E-06, 6.840E-06, 6.836E-06, 6.846E-06,
     $ 6.861E-06, 6.869E-06, 6.832E-06, 6.717E-06, 6.555E-06, 6.387E-06,
     $ 6.228E-06, 6.154E-06, 6.228E-06, 6.378E-06, 6.535E-06, 6.692E-06,
     $ 6.809E-06, 6.855E-06, 6.872E-06, 6.887E-06, 6.895E-06, 6.890E-06,
     $ 6.865E-06, 6.824E-06, 6.782E-06, 6.745E-06, 6.701E-06, 6.642E-06,
     $ 6.574E-06, 6.506E-06, 6.440E-06, 6.419E-06, 6.483E-06, 6.592E-06,
     $ 6.705E-06, 6.815E-06, 6.895E-06, 6.922E-06, 6.920E-06, 6.912E-06,
     $ 6.903E-06, 6.895E-06, 6.889E-06, 6.886E-06, 6.887E-06, 6.891E-06,
     $ 6.900E-06, 6.912E-06, 6.919E-06, 6.892E-06, 6.812E-06, 6.704E-06,
     $ 6.574E-06, 6.413E-06, 6.289E-06, 6.264E-06, 6.286E-06, 6.342E-06,
     $ 6.466E-06, 6.598E-06, 6.668E-06, 6.697E-06, 6.709E-06, 6.695E-06,
     $ 6.671E-06, 6.666E-06, 6.684E-06, 6.706E-06, 6.720E-06, 6.736E-06,
     $ 6.766E-06, 6.798E-06, 6.803E-06, 6.760E-06, 6.681E-06, 6.576E-06,
     $ 6.463E-06, 6.404E-06, 6.444E-06, 6.546E-06, 6.664E-06, 6.763E-06,
     $ 6.793E-06, 6.744E-06, 6.652E-06, 6.547E-06/
C                                                                       
C     15601 TO 15700 CM-1 DATA.                                         
      DATA (SUN(I),I= 15601, 15700)/                                    
     $ 6.483E-06, 6.503E-06, 6.577E-06, 6.674E-06, 6.782E-06, 6.867E-06,
     $ 6.910E-06, 6.927E-06, 6.932E-06, 6.930E-06, 6.928E-06, 6.927E-06,
     $ 6.925E-06, 6.924E-06, 6.899E-06, 6.801E-06, 6.627E-06, 6.426E-06,
     $ 6.225E-06, 6.073E-06, 6.068E-06, 6.212E-06, 6.410E-06, 6.609E-06,
     $ 6.782E-06, 6.882E-06, 6.907E-06, 6.906E-06, 6.903E-06, 6.900E-06,
     $ 6.873E-06, 6.794E-06, 6.682E-06, 6.559E-06, 6.419E-06, 6.319E-06,
     $ 6.324E-06, 6.395E-06, 6.492E-06, 6.625E-06, 6.752E-06, 6.829E-06,
     $ 6.874E-06, 6.905E-06, 6.917E-06, 6.919E-06, 6.919E-06, 6.917E-06,
     $ 6.915E-06, 6.912E-06, 6.896E-06, 6.859E-06, 6.804E-06, 6.738E-06,
     $ 6.669E-06, 6.623E-06, 6.619E-06, 6.649E-06, 6.702E-06, 6.767E-06,
     $ 6.825E-06, 6.865E-06, 6.878E-06, 6.856E-06, 6.816E-06, 6.772E-06,
     $ 6.724E-06, 6.698E-06, 6.712E-06, 6.740E-06, 6.765E-06, 6.793E-06,
     $ 6.812E-06, 6.822E-06, 6.838E-06, 6.860E-06, 6.875E-06, 6.885E-06,
     $ 6.887E-06, 6.880E-06, 6.873E-06, 6.873E-06, 6.879E-06, 6.888E-06,
     $ 6.896E-06, 6.896E-06, 6.879E-06, 6.852E-06, 6.819E-06, 6.784E-06,
     $ 6.756E-06, 6.741E-06, 6.731E-06, 6.714E-06, 6.696E-06, 6.684E-06,
     $ 6.680E-06, 6.689E-06, 6.715E-06, 6.749E-06/
C                                                                       
C     15701 TO 15800 CM-1 DATA.                                         
      DATA (SUN(I),I= 15701, 15800)/                                    
     $ 6.775E-06, 6.787E-06, 6.775E-06, 6.744E-06, 6.704E-06, 6.661E-06,
     $ 6.619E-06, 6.587E-06, 6.566E-06, 6.542E-06, 6.515E-06, 6.491E-06,
     $ 6.482E-06, 6.491E-06, 6.519E-06, 6.561E-06, 6.590E-06, 6.574E-06,
     $ 6.526E-06, 6.467E-06, 6.407E-06, 6.389E-06, 6.447E-06, 6.539E-06,
     $ 6.626E-06, 6.692E-06, 6.700E-06, 6.655E-06, 6.593E-06, 6.517E-06,
     $ 6.456E-06, 6.448E-06, 6.464E-06, 6.490E-06, 6.555E-06, 6.642E-06,
     $ 6.710E-06, 6.762E-06, 6.801E-06, 6.818E-06, 6.818E-06, 6.816E-06,
     $ 6.823E-06, 6.835E-06, 6.846E-06, 6.846E-06, 6.825E-06, 6.791E-06,
     $ 6.754E-06, 6.717E-06, 6.697E-06, 6.707E-06, 6.718E-06, 6.699E-06,
     $ 6.664E-06, 6.614E-06, 6.544E-06, 6.491E-06, 6.494E-06, 6.530E-06,
     $ 6.581E-06, 6.645E-06, 6.707E-06, 6.749E-06, 6.778E-06, 6.790E-06,
     $ 6.767E-06, 6.724E-06, 6.676E-06, 6.626E-06, 6.588E-06, 6.573E-06,
     $ 6.558E-06, 6.535E-06, 6.486E-06, 6.400E-06, 6.328E-06, 6.296E-06,
     $ 6.278E-06, 6.311E-06, 6.429E-06, 6.564E-06, 6.670E-06, 6.759E-06,
     $ 6.810E-06, 6.805E-06, 6.768E-06, 6.731E-06, 6.708E-06, 6.700E-06,
     $ 6.706E-06, 6.725E-06, 6.753E-06, 6.782E-06, 6.799E-06, 6.803E-06,
     $ 6.796E-06, 6.782E-06, 6.769E-06, 6.772E-06/
C                                                                       
C     15801 TO 15900 CM-1 DATA.                                         
      DATA (SUN(I),I= 15801, 15900)/                                    
     $ 6.792E-06, 6.818E-06, 6.844E-06, 6.864E-06, 6.873E-06, 6.871E-06,
     $ 6.848E-06, 6.788E-06, 6.707E-06, 6.623E-06, 6.540E-06, 6.493E-06,
     $ 6.515E-06, 6.577E-06, 6.632E-06, 6.661E-06, 6.650E-06, 6.571E-06,
     $ 6.429E-06, 6.280E-06, 6.172E-06, 6.113E-06, 6.126E-06, 6.221E-06,
     $ 6.323E-06, 6.369E-06, 6.356E-06, 6.273E-06, 6.145E-06, 6.068E-06,
     $ 6.084E-06, 6.176E-06, 6.339E-06, 6.526E-06, 6.665E-06, 6.741E-06,
     $ 6.771E-06, 6.763E-06, 6.734E-06, 6.712E-06, 6.713E-06, 6.724E-06,
     $ 6.739E-06, 6.764E-06, 6.795E-06, 6.818E-06, 6.835E-06, 6.849E-06,
     $ 6.853E-06, 6.849E-06, 6.838E-06, 6.823E-06, 6.809E-06, 6.799E-06,
     $ 6.794E-06, 6.798E-06, 6.793E-06, 6.754E-06, 6.690E-06, 6.597E-06,
     $ 6.450E-06, 6.304E-06, 6.224E-06, 6.186E-06, 6.201E-06, 6.309E-06,
     $ 6.450E-06, 6.566E-06, 6.649E-06, 6.678E-06, 6.653E-06, 6.607E-06,
     $ 6.550E-06, 6.515E-06, 6.540E-06, 6.593E-06, 6.648E-06, 6.715E-06,
     $ 6.778E-06, 6.811E-06, 6.822E-06, 6.829E-06, 6.826E-06, 6.816E-06,
     $ 6.811E-06, 6.802E-06, 6.778E-06, 6.746E-06, 6.712E-06, 6.674E-06,
     $ 6.650E-06, 6.663E-06, 6.703E-06, 6.750E-06, 6.796E-06, 6.830E-06,
     $ 6.843E-06, 6.839E-06, 6.828E-06, 6.819E-06/
C                                                                       
C     15901 TO 16000 CM-1 DATA.                                         
      DATA (SUN(I),I= 15901, 16000)/                                    
     $ 6.814E-06, 6.812E-06, 6.812E-06, 6.816E-06, 6.821E-06, 6.826E-06,
     $ 6.833E-06, 6.835E-06, 6.829E-06, 6.820E-06, 6.808E-06, 6.789E-06,
     $ 6.751E-06, 6.694E-06, 6.626E-06, 6.548E-06, 6.476E-06, 6.448E-06,
     $ 6.473E-06, 6.527E-06, 6.602E-06, 6.684E-06, 6.745E-06, 6.781E-06,
     $ 6.802E-06, 6.814E-06, 6.820E-06, 6.822E-06, 6.820E-06, 6.817E-06,
     $ 6.814E-06, 6.813E-06, 6.812E-06, 6.812E-06, 6.812E-06, 6.804E-06,
     $ 6.785E-06, 6.764E-06, 6.735E-06, 6.683E-06, 6.626E-06, 6.581E-06,
     $ 6.540E-06, 6.520E-06, 6.545E-06, 6.589E-06, 6.632E-06, 6.675E-06,
     $ 6.706E-06, 6.722E-06, 6.741E-06, 6.739E-06, 6.686E-06, 6.609E-06,
     $ 6.521E-06, 6.411E-06, 6.339E-06, 6.362E-06, 6.431E-06, 6.512E-06,
     $ 6.618E-06, 6.703E-06, 6.726E-06, 6.721E-06, 6.714E-06, 6.691E-06,
     $ 6.670E-06, 6.668E-06, 6.653E-06, 6.608E-06, 6.545E-06, 6.473E-06,
     $ 6.409E-06, 6.368E-06, 6.345E-06, 6.346E-06, 6.366E-06, 6.377E-06,
     $ 6.391E-06, 6.420E-06, 6.404E-06, 6.336E-06, 6.263E-06, 6.160E-06,
     $ 6.036E-06, 5.986E-06, 6.012E-06, 6.049E-06, 6.132E-06, 6.287E-06,
     $ 6.440E-06, 6.560E-06, 6.676E-06, 6.764E-06, 6.799E-06, 6.803E-06,
     $ 6.790E-06, 6.751E-06, 6.702E-06, 6.628E-06/
C                                                                       
C     16001 TO 16100 CM-1 DATA.                                         
      DATA (SUN(I),I= 16001, 16100)/                                    
     $ 6.510E-06, 6.388E-06, 6.304E-06, 6.236E-06, 6.196E-06, 6.202E-06,
     $ 6.206E-06, 6.183E-06, 6.147E-06, 6.112E-06, 6.122E-06, 6.197E-06,
     $ 6.315E-06, 6.455E-06, 6.578E-06, 6.624E-06, 6.599E-06, 6.538E-06,
     $ 6.461E-06, 6.405E-06, 6.396E-06, 6.420E-06, 6.437E-06, 6.424E-06,
     $ 6.395E-06, 6.371E-06, 6.347E-06, 6.349E-06, 6.413E-06, 6.504E-06,
     $ 6.575E-06, 6.644E-06, 6.714E-06, 6.757E-06, 6.761E-06, 6.727E-06,
     $ 6.666E-06, 6.591E-06, 6.511E-06, 6.436E-06, 6.371E-06, 6.307E-06,
     $ 6.237E-06, 6.159E-06, 6.110E-06, 6.144E-06, 6.233E-06, 6.339E-06,
     $ 6.471E-06, 6.604E-06, 6.680E-06, 6.710E-06, 6.729E-06, 6.732E-06,
     $ 6.725E-06, 6.729E-06, 6.744E-06, 6.756E-06, 6.765E-06, 6.768E-06,
     $ 6.761E-06, 6.756E-06, 6.754E-06, 6.739E-06, 6.704E-06, 6.652E-06,
     $ 6.576E-06, 6.492E-06, 6.434E-06, 6.387E-06, 6.338E-06, 6.316E-06,
     $ 6.319E-06, 6.327E-06, 6.374E-06, 6.475E-06, 6.577E-06, 6.652E-06,
     $ 6.709E-06, 6.722E-06, 6.669E-06, 6.597E-06, 6.545E-06, 6.500E-06,
     $ 6.458E-06, 6.434E-06, 6.419E-06, 6.400E-06, 6.382E-06, 6.397E-06,
     $ 6.466E-06, 6.556E-06, 6.640E-06, 6.722E-06, 6.780E-06, 6.796E-06,
     $ 6.794E-06, 6.793E-06, 6.794E-06, 6.796E-06/
C                                                                       
C     16101 TO 16200 CM-1 DATA.                                         
      DATA (SUN(I),I= 16101, 16200)/                                    
     $ 6.801E-06, 6.807E-06, 6.813E-06, 6.817E-06, 6.819E-06, 6.820E-06,
     $ 6.818E-06, 6.814E-06, 6.805E-06, 6.793E-06, 6.783E-06, 6.774E-06,
     $ 6.770E-06, 6.774E-06, 6.780E-06, 6.783E-06, 6.783E-06, 6.777E-06,
     $ 6.752E-06, 6.698E-06, 6.629E-06, 6.552E-06, 6.471E-06, 6.421E-06,
     $ 6.434E-06, 6.486E-06, 6.559E-06, 6.650E-06, 6.728E-06, 6.770E-06,
     $ 6.787E-06, 6.789E-06, 6.777E-06, 6.761E-06, 6.745E-06, 6.725E-06,
     $ 6.706E-06, 6.691E-06, 6.682E-06, 6.681E-06, 6.684E-06, 6.653E-06,
     $ 6.554E-06, 6.407E-06, 6.246E-06, 6.101E-06, 6.041E-06, 6.113E-06,
     $ 6.267E-06, 6.436E-06, 6.578E-06, 6.648E-06, 6.645E-06, 6.603E-06,
     $ 6.548E-06, 6.515E-06, 6.527E-06, 6.561E-06, 6.601E-06, 6.659E-06,
     $ 6.716E-06, 6.755E-06, 6.781E-06, 6.798E-06, 6.802E-06, 6.796E-06,
     $ 6.787E-06, 6.780E-06, 6.777E-06, 6.779E-06, 6.775E-06, 6.747E-06,
     $ 6.703E-06, 6.654E-06, 6.602E-06, 6.569E-06, 6.582E-06, 6.621E-06,
     $ 6.662E-06, 6.686E-06, 6.679E-06, 6.645E-06, 6.601E-06, 6.551E-06,
     $ 6.513E-06, 6.509E-06, 6.519E-06, 6.528E-06, 6.540E-06, 6.546E-06,
     $ 6.532E-06, 6.500E-06, 6.463E-06, 6.445E-06, 6.467E-06, 6.512E-06,
     $ 6.550E-06, 6.565E-06, 6.526E-06, 6.397E-06/
C                                                                       
C     16201 TO 16300 CM-1 DATA.                                         
      DATA (SUN(I),I= 16201, 16300)/                                    
     $ 6.201E-06, 6.008E-06, 5.863E-06, 5.795E-06, 5.851E-06, 6.022E-06,
     $ 6.225E-06, 6.389E-06, 6.497E-06, 6.528E-06, 6.473E-06, 6.400E-06,
     $ 6.380E-06, 6.385E-06, 6.377E-06, 6.368E-06, 6.345E-06, 6.267E-06,
     $ 6.127E-06, 5.982E-06, 5.865E-06, 5.731E-06, 5.604E-06, 5.584E-06,
     $ 5.668E-06, 5.782E-06, 5.942E-06, 6.144E-06, 6.305E-06, 6.381E-06,
     $ 6.408E-06, 6.427E-06, 6.431E-06, 6.417E-06, 6.426E-06, 6.468E-06,
     $ 6.484E-06, 6.448E-06, 6.396E-06, 6.329E-06, 6.246E-06, 6.205E-06,
     $ 6.250E-06, 6.341E-06, 6.449E-06, 6.554E-06, 6.613E-06, 6.614E-06,
     $ 6.588E-06, 6.554E-06, 6.530E-06, 6.542E-06, 6.570E-06, 6.585E-06,
     $ 6.593E-06, 6.590E-06, 6.549E-06, 6.492E-06, 6.455E-06, 6.431E-06,
     $ 6.414E-06, 6.435E-06, 6.492E-06, 6.532E-06, 6.533E-06, 6.516E-06,
     $ 6.485E-06, 6.437E-06, 6.414E-06, 6.450E-06, 6.498E-06, 6.514E-06,
     $ 6.484E-06, 6.394E-06, 6.266E-06, 6.154E-06, 6.096E-06, 6.120E-06,
     $ 6.228E-06, 6.369E-06, 6.495E-06, 6.589E-06, 6.615E-06, 6.542E-06,
     $ 6.390E-06, 6.166E-06, 5.874E-06, 5.604E-06, 5.445E-06, 5.404E-06,
     $ 5.513E-06, 5.777E-06, 6.076E-06, 6.317E-06, 6.499E-06, 6.603E-06,
     $ 6.629E-06, 6.634E-06, 6.636E-06, 6.609E-06/
C                                                                       
C     16301 TO 16400 CM-1 DATA.                                         
      DATA (SUN(I),I= 16301, 16400)/                                    
     $ 6.561E-06, 6.508E-06, 6.446E-06, 6.400E-06, 6.404E-06, 6.425E-06,
     $ 6.436E-06, 6.441E-06, 6.413E-06, 6.338E-06, 6.270E-06, 6.227E-06,
     $ 6.194E-06, 6.201E-06, 6.268E-06, 6.350E-06, 6.410E-06, 6.442E-06,
     $ 6.449E-06, 6.438E-06, 6.413E-06, 6.407E-06, 6.452E-06, 6.493E-06,
     $ 6.468E-06, 6.395E-06, 6.299E-06, 6.178E-06, 6.084E-06, 6.096E-06,
     $ 6.195E-06, 6.310E-06, 6.420E-06, 6.515E-06, 6.562E-06, 6.572E-06,
     $ 6.590E-06, 6.622E-06, 6.647E-06, 6.655E-06, 6.639E-06, 6.594E-06,
     $ 6.532E-06, 6.481E-06, 6.458E-06, 6.470E-06, 6.516E-06, 6.575E-06,
     $ 6.617E-06, 6.633E-06, 6.626E-06, 6.601E-06, 6.574E-06, 6.560E-06,
     $ 6.563E-06, 6.575E-06, 6.588E-06, 6.602E-06, 6.619E-06, 6.641E-06,
     $ 6.665E-06, 6.673E-06, 6.656E-06, 6.608E-06, 6.525E-06, 6.422E-06,
     $ 6.333E-06, 6.285E-06, 6.282E-06, 6.324E-06, 6.391E-06, 6.463E-06,
     $ 6.525E-06, 6.567E-06, 6.585E-06, 6.574E-06, 6.511E-06, 6.382E-06,
     $ 6.203E-06, 6.025E-06, 5.896E-06, 5.859E-06, 5.941E-06, 6.113E-06,
     $ 6.303E-06, 6.465E-06, 6.580E-06, 6.635E-06, 6.645E-06, 6.637E-06,
     $ 6.626E-06, 6.614E-06, 6.595E-06, 6.567E-06, 6.541E-06, 6.522E-06,
     $ 6.508E-06, 6.512E-06, 6.543E-06, 6.577E-06/
C                                                                       
C     16401 TO 16500 CM-1 DATA.                                         
      DATA (SUN(I),I= 16401, 16500)/                                    
     $ 6.599E-06, 6.604E-06, 6.586E-06, 6.548E-06, 6.507E-06, 6.476E-06,
     $ 6.464E-06, 6.468E-06, 6.479E-06, 6.488E-06, 6.494E-06, 6.494E-06,
     $ 6.482E-06, 6.466E-06, 6.460E-06, 6.460E-06, 6.470E-06, 6.496E-06,
     $ 6.527E-06, 6.551E-06, 6.565E-06, 6.567E-06, 6.563E-06, 6.547E-06,
     $ 6.515E-06, 6.483E-06, 6.457E-06, 6.423E-06, 6.398E-06, 6.403E-06,
     $ 6.407E-06, 6.403E-06, 6.414E-06, 6.427E-06, 6.429E-06, 6.450E-06,
     $ 6.492E-06, 6.530E-06, 6.565E-06, 6.597E-06, 6.602E-06, 6.562E-06,
     $ 6.482E-06, 6.388E-06, 6.301E-06, 6.243E-06, 6.246E-06, 6.318E-06,
     $ 6.415E-06, 6.504E-06, 6.577E-06, 6.621E-06, 6.634E-06, 6.639E-06,
     $ 6.648E-06, 6.657E-06, 6.666E-06, 6.670E-06, 6.669E-06, 6.666E-06,
     $ 6.662E-06, 6.657E-06, 6.653E-06, 6.647E-06, 6.640E-06, 6.634E-06,
     $ 6.629E-06, 6.626E-06, 6.627E-06, 6.631E-06, 6.634E-06, 6.635E-06,
     $ 6.630E-06, 6.620E-06, 6.609E-06, 6.599E-06, 6.566E-06, 6.488E-06,
     $ 6.384E-06, 6.275E-06, 6.164E-06, 6.103E-06, 6.147E-06, 6.244E-06,
     $ 6.344E-06, 6.446E-06, 6.522E-06, 6.544E-06, 6.543E-06, 6.553E-06,
     $ 6.568E-06, 6.583E-06, 6.597E-06, 6.607E-06, 6.610E-06, 6.610E-06,
     $ 6.610E-06, 6.606E-06, 6.602E-06, 6.599E-06/
C                                                                       
C     16501 TO 16600 CM-1 DATA.                                         
      DATA (SUN(I),I= 16501, 16600)/                                    
     $ 6.595E-06, 6.593E-06, 6.582E-06, 6.541E-06, 6.482E-06, 6.424E-06,
     $ 6.366E-06, 6.335E-06, 6.360E-06, 6.410E-06, 6.455E-06, 6.497E-06,
     $ 6.522E-06, 6.526E-06, 6.529E-06, 6.540E-06, 6.555E-06, 6.572E-06,
     $ 6.585E-06, 6.589E-06, 6.589E-06, 6.587E-06, 6.587E-06, 6.586E-06,
     $ 6.585E-06, 6.583E-06, 6.581E-06, 6.579E-06, 6.577E-06, 6.576E-06,
     $ 6.576E-06, 6.577E-06, 6.575E-06, 6.571E-06, 6.567E-06, 6.562E-06,
     $ 6.553E-06, 6.543E-06, 6.536E-06, 6.529E-06, 6.526E-06, 6.533E-06,
     $ 6.545E-06, 6.555E-06, 6.564E-06, 6.570E-06, 6.573E-06, 6.572E-06,
     $ 6.568E-06, 6.565E-06, 6.563E-06, 6.561E-06, 6.564E-06, 6.571E-06,
     $ 6.578E-06, 6.581E-06, 6.580E-06, 6.575E-06, 6.568E-06, 6.559E-06,
     $ 6.552E-06, 6.548E-06, 6.542E-06, 6.533E-06, 6.525E-06, 6.522E-06,
     $ 6.520E-06, 6.523E-06, 6.537E-06, 6.552E-06, 6.563E-06, 6.569E-06,
     $ 6.569E-06, 6.550E-06, 6.497E-06, 6.412E-06, 6.315E-06, 6.221E-06,
     $ 6.153E-06, 6.148E-06, 6.210E-06, 6.287E-06, 6.337E-06, 6.359E-06,
     $ 6.349E-06, 6.304E-06, 6.274E-06, 6.301E-06, 6.362E-06, 6.417E-06,
     $ 6.445E-06, 6.423E-06, 6.357E-06, 6.275E-06, 6.207E-06, 6.195E-06,
     $ 6.236E-06, 6.272E-06, 6.292E-06, 6.304E-06/
C                                                                       
C     16601 TO 16700 CM-1 DATA.                                         
      DATA (SUN(I),I= 16601, 16700)/                                    
     $ 6.271E-06, 6.202E-06, 6.160E-06, 6.144E-06, 6.126E-06, 6.142E-06,
     $ 6.214E-06, 6.297E-06, 6.372E-06, 6.450E-06, 6.487E-06, 6.441E-06,
     $ 6.348E-06, 6.251E-06, 6.152E-06, 6.099E-06, 6.137E-06, 6.225E-06,
     $ 6.316E-06, 6.393E-06, 6.425E-06, 6.398E-06, 6.337E-06, 6.266E-06,
     $ 6.221E-06, 6.227E-06, 6.265E-06, 6.323E-06, 6.397E-06, 6.456E-06,
     $ 6.481E-06, 6.484E-06, 6.459E-06, 6.395E-06, 6.309E-06, 6.212E-06,
     $ 6.106E-06, 6.021E-06, 5.994E-06, 6.022E-06, 6.091E-06, 6.183E-06,
     $ 6.267E-06, 6.323E-06, 6.351E-06, 6.358E-06, 6.367E-06, 6.394E-06,
     $ 6.410E-06, 6.389E-06, 6.347E-06, 6.297E-06, 6.236E-06, 6.206E-06,
     $ 6.245E-06, 6.312E-06, 6.375E-06, 6.433E-06, 6.472E-06, 6.481E-06,
     $ 6.482E-06, 6.490E-06, 6.496E-06, 6.492E-06, 6.464E-06, 6.400E-06,
     $ 6.311E-06, 6.224E-06, 6.158E-06, 6.133E-06, 6.173E-06, 6.254E-06,
     $ 6.340E-06, 6.415E-06, 6.464E-06, 6.478E-06, 6.471E-06, 6.459E-06,
     $ 6.451E-06, 6.453E-06, 6.452E-06, 6.434E-06, 6.404E-06, 6.372E-06,
     $ 6.336E-06, 6.317E-06, 6.336E-06, 6.380E-06, 6.428E-06, 6.472E-06,
     $ 6.505E-06, 6.519E-06, 6.506E-06, 6.461E-06, 6.404E-06, 6.347E-06,
     $ 6.290E-06, 6.260E-06, 6.273E-06, 6.283E-06/
C                                                                       
C     16701 TO 16800 CM-1 DATA.                                         
      DATA (SUN(I),I= 16701, 16800)/                                    
     $ 6.272E-06, 6.257E-06, 6.222E-06, 6.181E-06, 6.184E-06, 6.227E-06,
     $ 6.281E-06, 6.349E-06, 6.415E-06, 6.458E-06, 6.482E-06, 6.500E-06,
     $ 6.512E-06, 6.516E-06, 6.517E-06, 6.516E-06, 6.507E-06, 6.482E-06,
     $ 6.450E-06, 6.418E-06, 6.389E-06, 6.362E-06, 6.333E-06, 6.296E-06,
     $ 6.250E-06, 6.177E-06, 6.081E-06, 6.012E-06, 5.981E-06, 5.964E-06,
     $ 5.998E-06, 6.104E-06, 6.223E-06, 6.322E-06, 6.417E-06, 6.487E-06,
     $ 6.515E-06, 6.519E-06, 6.521E-06, 6.520E-06, 6.517E-06, 6.513E-06,
     $ 6.509E-06, 6.506E-06, 6.505E-06, 6.505E-06, 6.505E-06, 6.506E-06,
     $ 6.506E-06, 6.504E-06, 6.500E-06, 6.491E-06, 6.471E-06, 6.437E-06,
     $ 6.401E-06, 6.366E-06, 6.340E-06, 6.340E-06, 6.367E-06, 6.404E-06,
     $ 6.439E-06, 6.470E-06, 6.488E-06, 6.488E-06, 6.481E-06, 6.471E-06,
     $ 6.457E-06, 6.444E-06, 6.430E-06, 6.418E-06, 6.413E-06, 6.414E-06,
     $ 6.416E-06, 6.420E-06, 6.426E-06, 6.430E-06, 6.429E-06, 6.416E-06,
     $ 6.381E-06, 6.339E-06, 6.299E-06, 6.260E-06, 6.247E-06, 6.281E-06,
     $ 6.336E-06, 6.390E-06, 6.444E-06, 6.478E-06, 6.460E-06, 6.394E-06,
     $ 6.309E-06, 6.219E-06, 6.144E-06, 6.119E-06, 6.161E-06, 6.241E-06,
     $ 6.329E-06, 6.411E-06, 6.462E-06, 6.465E-06/
C                                                                       
C     16801 TO 16900 CM-1 DATA.                                         
      DATA (SUN(I),I= 16801, 16900)/                                    
     $ 6.425E-06, 6.347E-06, 6.249E-06, 6.159E-06, 6.097E-06, 6.080E-06,
     $ 6.125E-06, 6.205E-06, 6.283E-06, 6.353E-06, 6.407E-06, 6.434E-06,
     $ 6.451E-06, 6.470E-06, 6.484E-06, 6.491E-06, 6.491E-06, 6.481E-06,
     $ 6.461E-06, 6.432E-06, 6.400E-06, 6.369E-06, 6.339E-06, 6.318E-06,
     $ 6.311E-06, 6.318E-06, 6.333E-06, 6.358E-06, 6.389E-06, 6.421E-06,
     $ 6.448E-06, 6.471E-06, 6.485E-06, 6.488E-06, 6.481E-06, 6.469E-06,
     $ 6.459E-06, 6.453E-06, 6.451E-06, 6.447E-06, 6.420E-06, 6.362E-06,
     $ 6.293E-06, 6.223E-06, 6.170E-06, 6.170E-06, 6.226E-06, 6.302E-06,
     $ 6.377E-06, 6.442E-06, 6.478E-06, 6.485E-06, 6.465E-06, 6.406E-06,
     $ 6.320E-06, 6.218E-06, 6.107E-06, 6.031E-06, 6.029E-06, 6.072E-06,
     $ 6.125E-06, 6.167E-06, 6.166E-06, 6.118E-06, 6.064E-06, 6.037E-06,
     $ 6.058E-06, 6.136E-06, 6.242E-06, 6.336E-06, 6.404E-06, 6.440E-06,
     $ 6.442E-06, 6.429E-06, 6.419E-06, 6.414E-06, 6.411E-06, 6.408E-06,
     $ 6.403E-06, 6.391E-06, 6.372E-06, 6.358E-06, 6.349E-06, 6.340E-06,
     $ 6.342E-06, 6.360E-06, 6.379E-06, 6.396E-06, 6.413E-06, 6.425E-06,
     $ 6.428E-06, 6.428E-06, 6.412E-06, 6.365E-06, 6.302E-06, 6.236E-06,
     $ 6.175E-06, 6.152E-06, 6.159E-06, 6.138E-06/
C                                                                       
C     16901 TO 17000 CM-1 DATA.                                         
      DATA (SUN(I),I= 16901, 17000)/                                    
     $ 6.092E-06, 6.041E-06, 5.969E-06, 5.927E-06, 5.984E-06, 6.094E-06,
     $ 6.201E-06, 6.307E-06, 6.385E-06, 6.408E-06, 6.400E-06, 6.380E-06,
     $ 6.353E-06, 6.324E-06, 6.290E-06, 6.270E-06, 6.280E-06, 6.307E-06,
     $ 6.337E-06, 6.374E-06, 6.407E-06, 6.426E-06, 6.426E-06, 6.397E-06,
     $ 6.345E-06, 6.276E-06, 6.198E-06, 6.142E-06, 6.134E-06, 6.162E-06,
     $ 6.213E-06, 6.274E-06, 6.319E-06, 6.341E-06, 6.352E-06, 6.355E-06,
     $ 6.359E-06, 6.377E-06, 6.400E-06, 6.420E-06, 6.432E-06, 6.429E-06,
     $ 6.405E-06, 6.371E-06, 6.330E-06, 6.286E-06, 6.254E-06, 6.240E-06,
     $ 6.228E-06, 6.202E-06, 6.112E-06, 5.894E-06, 5.577E-06, 5.234E-06,
     $ 4.924E-06, 4.761E-06, 4.858E-06, 5.148E-06, 5.502E-06, 5.829E-06,
     $ 6.039E-06, 6.091E-06, 6.040E-06, 5.954E-06, 5.888E-06, 5.865E-06,
     $ 5.846E-06, 5.746E-06, 5.502E-06, 5.142E-06, 4.753E-06, 4.407E-06,
     $ 4.223E-06, 4.323E-06, 4.664E-06, 5.098E-06, 5.538E-06, 5.917E-06,
     $ 6.163E-06, 6.284E-06, 6.338E-06, 6.367E-06, 6.382E-06, 6.390E-06,
     $ 6.397E-06, 6.394E-06, 6.361E-06, 6.311E-06, 6.260E-06, 6.206E-06,
     $ 6.172E-06, 6.193E-06, 6.242E-06, 6.278E-06, 6.303E-06, 6.312E-06,
     $ 6.284E-06, 6.236E-06, 6.203E-06, 6.190E-06/
C                                                                       
C     17001 TO 17100 CM-1 DATA.                                         
      DATA (SUN(I),I= 17001, 17100)/                                    
     $ 6.187E-06, 6.205E-06, 6.243E-06, 6.279E-06, 6.306E-06, 6.330E-06,
     $ 6.343E-06, 6.347E-06, 6.355E-06, 6.373E-06, 6.395E-06, 6.418E-06,
     $ 6.439E-06, 6.452E-06, 6.452E-06, 6.440E-06, 6.420E-06, 6.393E-06,
     $ 6.367E-06, 6.351E-06, 6.347E-06, 6.352E-06, 6.362E-06, 6.370E-06,
     $ 6.372E-06, 6.367E-06, 6.364E-06, 6.374E-06, 6.392E-06, 6.410E-06,
     $ 6.428E-06, 6.442E-06, 6.433E-06, 6.392E-06, 6.338E-06, 6.277E-06,
     $ 6.198E-06, 6.130E-06, 6.110E-06, 6.116E-06, 6.137E-06, 6.197E-06,
     $ 6.275E-06, 6.332E-06, 6.376E-06, 6.412E-06, 6.428E-06, 6.409E-06,
     $ 6.347E-06, 6.263E-06, 6.175E-06, 6.087E-06, 6.036E-06, 6.069E-06,
     $ 6.151E-06, 6.219E-06, 6.252E-06, 6.244E-06, 6.184E-06, 6.091E-06,
     $ 6.027E-06, 6.019E-06, 6.002E-06, 5.949E-06, 5.896E-06, 5.831E-06,
     $ 5.759E-06, 5.761E-06, 5.854E-06, 5.965E-06, 6.072E-06, 6.180E-06,
     $ 6.253E-06, 6.270E-06, 6.260E-06, 6.244E-06, 6.216E-06, 6.176E-06,
     $ 6.146E-06, 6.148E-06, 6.171E-06, 6.194E-06, 6.231E-06, 6.285E-06,
     $ 6.331E-06, 6.362E-06, 6.391E-06, 6.410E-06, 6.411E-06, 6.393E-06,
     $ 6.355E-06, 6.305E-06, 6.249E-06, 6.185E-06, 6.141E-06, 6.143E-06,
     $ 6.175E-06, 6.221E-06, 6.282E-06, 6.335E-06/
C                                                                       
C     17101 TO 17200 CM-1 DATA.                                         
      DATA (SUN(I),I= 17101, 17200)/                                    
     $ 6.362E-06, 6.373E-06, 6.377E-06, 6.379E-06, 6.384E-06, 6.393E-06,
     $ 6.403E-06, 6.409E-06, 6.414E-06, 6.417E-06, 6.421E-06, 6.428E-06,
     $ 6.429E-06, 6.414E-06, 6.390E-06, 6.361E-06, 6.328E-06, 6.303E-06,
     $ 6.298E-06, 6.300E-06, 6.301E-06, 6.302E-06, 6.309E-06, 6.320E-06,
     $ 6.338E-06, 6.364E-06, 6.389E-06, 6.399E-06, 6.389E-06, 6.370E-06,
     $ 6.346E-06, 6.320E-06, 6.308E-06, 6.312E-06, 6.320E-06, 6.335E-06,
     $ 6.362E-06, 6.387E-06, 6.396E-06, 6.386E-06, 6.348E-06, 6.288E-06,
     $ 6.228E-06, 6.185E-06, 6.173E-06, 6.209E-06, 6.271E-06, 6.332E-06,
     $ 6.382E-06, 6.412E-06, 6.418E-06, 6.411E-06, 6.402E-06, 6.398E-06,
     $ 6.402E-06, 6.408E-06, 6.414E-06, 6.422E-06, 6.428E-06, 6.432E-06,
     $ 6.430E-06, 6.415E-06, 6.389E-06, 6.358E-06, 6.320E-06, 6.285E-06,
     $ 6.273E-06, 6.282E-06, 6.298E-06, 6.324E-06, 6.359E-06, 6.387E-06,
     $ 6.405E-06, 6.417E-06, 6.427E-06, 6.430E-06, 6.429E-06, 6.431E-06,
     $ 6.434E-06, 6.436E-06, 6.435E-06, 6.433E-06, 6.412E-06, 6.354E-06,
     $ 6.271E-06, 6.184E-06, 6.093E-06, 6.026E-06, 6.020E-06, 6.053E-06,
     $ 6.087E-06, 6.126E-06, 6.167E-06, 6.193E-06, 6.214E-06, 6.247E-06,
     $ 6.281E-06, 6.306E-06, 6.324E-06, 6.336E-06/
C                                                                       
C     17201 TO 17300 CM-1 DATA.                                         
      DATA (SUN(I),I= 17201, 17300)/                                    
     $ 6.343E-06, 6.358E-06, 6.377E-06, 6.381E-06, 6.358E-06, 6.314E-06,
     $ 6.261E-06, 6.194E-06, 6.134E-06, 6.114E-06, 6.125E-06, 6.128E-06,
     $ 6.126E-06, 6.137E-06, 6.137E-06, 6.112E-06, 6.093E-06, 6.097E-06,
     $ 6.096E-06, 6.080E-06, 6.071E-06, 6.074E-06, 6.076E-06, 6.087E-06,
     $ 6.124E-06, 6.181E-06, 6.242E-06, 6.296E-06, 6.340E-06, 6.370E-06,
     $ 6.382E-06, 6.380E-06, 6.376E-06, 6.375E-06, 6.374E-06, 6.377E-06,
     $ 6.375E-06, 6.345E-06, 6.287E-06, 6.212E-06, 6.130E-06, 6.064E-06,
     $ 6.050E-06, 6.087E-06, 6.152E-06, 6.228E-06, 6.298E-06, 6.346E-06,
     $ 6.369E-06, 6.370E-06, 6.349E-06, 6.312E-06, 6.258E-06, 6.194E-06,
     $ 6.145E-06, 6.125E-06, 6.123E-06, 6.119E-06, 6.095E-06, 6.047E-06,
     $ 5.987E-06, 5.936E-06, 5.934E-06, 6.001E-06, 6.108E-06, 6.216E-06,
     $ 6.303E-06, 6.338E-06, 6.317E-06, 6.269E-06, 6.215E-06, 6.177E-06,
     $ 6.176E-06, 6.190E-06, 6.184E-06, 6.148E-06, 6.069E-06, 5.952E-06,
     $ 5.844E-06, 5.777E-06, 5.763E-06, 5.804E-06, 5.874E-06, 5.935E-06,
     $ 5.976E-06, 5.983E-06, 5.962E-06, 5.940E-06, 5.913E-06, 5.872E-06,
     $ 5.849E-06, 5.850E-06, 5.855E-06, 5.888E-06, 5.968E-06, 6.060E-06,
     $ 6.134E-06, 6.189E-06, 6.222E-06, 6.224E-06/
C                                                                       
C     17301 TO 17400 CM-1 DATA.                                         
      DATA (SUN(I),I= 17301, 17400)/                                    
     $ 6.216E-06, 6.223E-06, 6.240E-06, 6.261E-06, 6.284E-06, 6.289E-06,
     $ 6.259E-06, 6.214E-06, 6.167E-06, 6.110E-06, 6.073E-06, 6.086E-06,
     $ 6.125E-06, 6.171E-06, 6.222E-06, 6.251E-06, 6.245E-06, 6.223E-06,
     $ 6.196E-06, 6.182E-06, 6.199E-06, 6.223E-06, 6.229E-06, 6.215E-06,
     $ 6.181E-06, 6.129E-06, 6.087E-06, 6.085E-06, 6.122E-06, 6.175E-06,
     $ 6.235E-06, 6.289E-06, 6.322E-06, 6.338E-06, 6.347E-06, 6.351E-06,
     $ 6.353E-06, 6.357E-06, 6.361E-06, 6.365E-06, 6.369E-06, 6.353E-06,
     $ 6.288E-06, 6.181E-06, 6.049E-06, 5.906E-06, 5.800E-06, 5.776E-06,
     $ 5.816E-06, 5.880E-06, 5.945E-06, 5.991E-06, 6.008E-06, 6.010E-06,
     $ 6.033E-06, 6.087E-06, 6.149E-06, 6.209E-06, 6.268E-06, 6.310E-06,
     $ 6.333E-06, 6.350E-06, 6.363E-06, 6.367E-06, 6.361E-06, 6.343E-06,
     $ 6.308E-06, 6.244E-06, 6.149E-06, 6.040E-06, 5.920E-06, 5.777E-06,
     $ 5.636E-06, 5.536E-06, 5.472E-06, 5.446E-06, 5.501E-06, 5.635E-06,
     $ 5.781E-06, 5.919E-06, 6.061E-06, 6.170E-06, 6.228E-06, 6.261E-06,
     $ 6.276E-06, 6.268E-06, 6.241E-06, 6.194E-06, 6.117E-06, 6.022E-06,
     $ 5.927E-06, 5.848E-06, 5.810E-06, 5.848E-06, 5.949E-06, 6.067E-06,
     $ 6.180E-06, 6.273E-06, 6.326E-06, 6.341E-06/
C                                                                       
C     17401 TO 17500 CM-1 DATA.                                         
      DATA (SUN(I),I= 17401, 17500)/                                    
     $ 6.340E-06, 6.329E-06, 6.308E-06, 6.280E-06, 6.252E-06, 6.226E-06,
     $ 6.200E-06, 6.180E-06, 6.171E-06, 6.163E-06, 6.165E-06, 6.187E-06,
     $ 6.207E-06, 6.215E-06, 6.219E-06, 6.205E-06, 6.171E-06, 6.147E-06,
     $ 6.140E-06, 6.142E-06, 6.160E-06, 6.187E-06, 6.201E-06, 6.200E-06,
     $ 6.192E-06, 6.182E-06, 6.187E-06, 6.213E-06, 6.248E-06, 6.287E-06,
     $ 6.321E-06, 6.341E-06, 6.343E-06, 6.334E-06, 6.313E-06, 6.282E-06,
     $ 6.236E-06, 6.168E-06, 6.098E-06, 6.046E-06, 6.012E-06, 6.010E-06,
     $ 6.061E-06, 6.138E-06, 6.210E-06, 6.273E-06, 6.318E-06, 6.335E-06,
     $ 6.333E-06, 6.327E-06, 6.314E-06, 6.290E-06, 6.258E-06, 6.230E-06,
     $ 6.205E-06, 6.194E-06, 6.211E-06, 6.243E-06, 6.273E-06, 6.300E-06,
     $ 6.320E-06, 6.326E-06, 6.325E-06, 6.325E-06, 6.327E-06, 6.329E-06,
     $ 6.326E-06, 6.312E-06, 6.288E-06, 6.256E-06, 6.211E-06, 6.164E-06,
     $ 6.135E-06, 6.122E-06, 6.125E-06, 6.157E-06, 6.201E-06, 6.235E-06,
     $ 6.245E-06, 6.216E-06, 6.155E-06, 6.086E-06, 6.024E-06, 5.996E-06,
     $ 6.028E-06, 6.093E-06, 6.156E-06, 6.197E-06, 6.191E-06, 6.142E-06,
     $ 6.080E-06, 6.022E-06, 6.003E-06, 6.047E-06, 6.117E-06, 6.182E-06,
     $ 6.222E-06, 6.192E-06, 6.087E-06, 5.939E-06/
C                                                                       
C     17501 TO 17600 CM-1 DATA.                                         
      DATA (SUN(I),I= 17501, 17600)/                                    
     $ 5.757E-06, 5.592E-06, 5.523E-06, 5.537E-06, 5.575E-06, 5.617E-06,
     $ 5.649E-06, 5.622E-06, 5.518E-06, 5.427E-06, 5.434E-06, 5.486E-06,
     $ 5.550E-06, 5.671E-06, 5.803E-06, 5.853E-06, 5.840E-06, 5.815E-06,
     $ 5.780E-06, 5.744E-06, 5.753E-06, 5.834E-06, 5.953E-06, 6.057E-06,
     $ 6.136E-06, 6.184E-06, 6.180E-06, 6.143E-06, 6.094E-06, 6.005E-06,
     $ 5.882E-06, 5.766E-06, 5.657E-06, 5.581E-06, 5.601E-06, 5.697E-06,
     $ 5.814E-06, 5.943E-06, 6.054E-06, 6.093E-06, 6.072E-06, 6.030E-06,
     $ 5.979E-06, 5.950E-06, 5.979E-06, 6.049E-06, 6.120E-06, 6.173E-06,
     $ 6.186E-06, 6.141E-06, 6.060E-06, 5.986E-06, 5.942E-06, 5.944E-06,
     $ 5.994E-06, 6.067E-06, 6.127E-06, 6.158E-06, 6.163E-06, 6.136E-06,
     $ 6.090E-06, 6.062E-06, 6.054E-06, 6.036E-06, 6.021E-06, 6.029E-06,
     $ 6.036E-06, 6.026E-06, 6.022E-06, 6.008E-06, 5.944E-06, 5.850E-06,
     $ 5.773E-06, 5.722E-06, 5.704E-06, 5.739E-06, 5.801E-06, 5.846E-06,
     $ 5.870E-06, 5.886E-06, 5.913E-06, 5.956E-06, 5.993E-06, 6.009E-06,
     $ 6.009E-06, 5.982E-06, 5.944E-06, 5.927E-06, 5.908E-06, 5.866E-06,
     $ 5.811E-06, 5.754E-06, 5.719E-06, 5.751E-06, 5.843E-06, 5.943E-06,
     $ 6.034E-06, 6.097E-06, 6.098E-06, 6.052E-06/
C                                                                       
C     17601 TO 17700 CM-1 DATA.                                         
      DATA (SUN(I),I= 17601, 17700)/                                    
     $ 6.009E-06, 5.982E-06, 5.956E-06, 5.950E-06, 5.985E-06, 6.032E-06,
     $ 6.069E-06, 6.113E-06, 6.162E-06, 6.174E-06, 6.143E-06, 6.100E-06,
     $ 6.045E-06, 5.973E-06, 5.931E-06, 5.950E-06, 5.995E-06, 6.051E-06,
     $ 6.125E-06, 6.188E-06, 6.213E-06, 6.216E-06, 6.210E-06, 6.191E-06,
     $ 6.162E-06, 6.144E-06, 6.136E-06, 6.113E-06, 6.067E-06, 6.010E-06,
     $ 5.940E-06, 5.870E-06, 5.835E-06, 5.837E-06, 5.850E-06, 5.867E-06,
     $ 5.867E-06, 5.824E-06, 5.776E-06, 5.758E-06, 5.754E-06, 5.776E-06,
     $ 5.842E-06, 5.911E-06, 5.952E-06, 5.987E-06, 6.019E-06, 6.034E-06,
     $ 6.035E-06, 5.999E-06, 5.910E-06, 5.795E-06, 5.672E-06, 5.563E-06,
     $ 5.522E-06, 5.554E-06, 5.600E-06, 5.641E-06, 5.667E-06, 5.655E-06,
     $ 5.627E-06, 5.581E-06, 5.451E-06, 5.255E-06, 5.057E-06, 4.863E-06,
     $ 4.750E-06, 4.840E-06, 5.095E-06, 5.404E-06, 5.721E-06, 5.971E-06,
     $ 6.063E-06, 6.008E-06, 5.874E-06, 5.707E-06, 5.564E-06, 5.502E-06,
     $ 5.539E-06, 5.640E-06, 5.760E-06, 5.872E-06, 5.949E-06, 5.982E-06,
     $ 5.991E-06, 5.991E-06, 5.982E-06, 5.971E-06, 5.958E-06, 5.919E-06,
     $ 5.860E-06, 5.808E-06, 5.772E-06, 5.760E-06, 5.796E-06, 5.880E-06,
     $ 5.972E-06, 6.045E-06, 6.100E-06, 6.132E-06/
C                                                                       
C     17701 TO 17800 CM-1 DATA.                                         
      DATA (SUN(I),I= 17701, 17800)/                                    
     $ 6.144E-06, 6.149E-06, 6.153E-06, 6.153E-06, 6.146E-06, 6.133E-06,
     $ 6.119E-06, 6.100E-06, 6.070E-06, 6.033E-06, 5.992E-06, 5.946E-06,
     $ 5.915E-06, 5.925E-06, 5.956E-06, 5.971E-06, 5.956E-06, 5.913E-06,
     $ 5.835E-06, 5.739E-06, 5.686E-06, 5.713E-06, 5.787E-06, 5.875E-06,
     $ 5.971E-06, 6.028E-06, 6.002E-06, 5.937E-06, 5.884E-06, 5.829E-06,
     $ 5.793E-06, 5.812E-06, 5.850E-06, 5.866E-06, 5.875E-06, 5.896E-06,
     $ 5.919E-06, 5.946E-06, 5.981E-06, 6.008E-06, 6.004E-06, 5.965E-06,
     $ 5.902E-06, 5.841E-06, 5.816E-06, 5.837E-06, 5.889E-06, 5.963E-06,
     $ 6.042E-06, 6.097E-06, 6.126E-06, 6.143E-06, 6.157E-06, 6.171E-06,
     $ 6.184E-06, 6.191E-06, 6.180E-06, 6.146E-06, 6.099E-06, 6.041E-06,
     $ 5.982E-06, 5.950E-06, 5.953E-06, 5.975E-06, 6.014E-06, 6.066E-06,
     $ 6.103E-06, 6.108E-06, 6.066E-06, 5.962E-06, 5.813E-06, 5.649E-06,
     $ 5.504E-06, 5.431E-06, 5.469E-06, 5.587E-06, 5.748E-06, 5.908E-06,
     $ 6.008E-06, 6.021E-06, 5.979E-06, 5.903E-06, 5.812E-06, 5.759E-06,
     $ 5.758E-06, 5.756E-06, 5.743E-06, 5.737E-06, 5.706E-06, 5.656E-06,
     $ 5.647E-06, 5.681E-06, 5.728E-06, 5.789E-06, 5.848E-06, 5.873E-06,
     $ 5.847E-06, 5.753E-06, 5.584E-06, 5.357E-06/
C                                                                       
C     17801 TO 17900 CM-1 DATA.                                         
      DATA (SUN(I),I= 17801, 17900)/                                    
     $ 5.109E-06, 4.903E-06, 4.833E-06, 4.932E-06, 5.163E-06, 5.459E-06,
     $ 5.750E-06, 5.973E-06, 6.101E-06, 6.154E-06, 6.170E-06, 6.174E-06,
     $ 6.174E-06, 6.173E-06, 6.175E-06, 6.179E-06, 6.183E-06, 6.185E-06,
     $ 6.180E-06, 6.164E-06, 6.143E-06, 6.120E-06, 6.098E-06, 6.086E-06,
     $ 6.091E-06, 6.100E-06, 6.107E-06, 6.115E-06, 6.122E-06, 6.123E-06,
     $ 6.127E-06, 6.137E-06, 6.145E-06, 6.152E-06, 6.156E-06, 6.156E-06,
     $ 6.152E-06, 6.103E-06, 5.957E-06, 5.755E-06, 5.550E-06, 5.349E-06,
     $ 5.221E-06, 5.243E-06, 5.359E-06, 5.482E-06, 5.581E-06, 5.644E-06,
     $ 5.681E-06, 5.698E-06, 5.716E-06, 5.743E-06, 5.733E-06, 5.654E-06,
     $ 5.546E-06, 5.439E-06, 5.376E-06, 5.434E-06, 5.594E-06, 5.775E-06,
     $ 5.946E-06, 6.081E-06, 6.137E-06, 6.114E-06, 6.022E-06, 5.873E-06,
     $ 5.692E-06, 5.494E-06, 5.327E-06, 5.279E-06, 5.360E-06, 5.480E-06,
     $ 5.593E-06, 5.687E-06, 5.715E-06, 5.678E-06, 5.668E-06, 5.725E-06,
     $ 5.787E-06, 5.817E-06, 5.831E-06, 5.806E-06, 5.701E-06, 5.554E-06,
     $ 5.441E-06, 5.348E-06, 5.245E-06, 5.191E-06, 5.219E-06, 5.226E-06,
     $ 5.182E-06, 5.166E-06, 5.157E-06, 5.125E-06, 5.167E-06, 5.307E-06,
     $ 5.441E-06, 5.539E-06, 5.617E-06, 5.641E-06/
C                                                                       
C     17901 TO 18000 CM-1 DATA.                                         
      DATA (SUN(I),I= 17901, 18000)/                                    
     $ 5.628E-06, 5.644E-06, 5.707E-06, 5.804E-06, 5.892E-06, 5.916E-06,
     $ 5.878E-06, 5.803E-06, 5.705E-06, 5.647E-06, 5.690E-06, 5.785E-06,
     $ 5.874E-06, 5.946E-06, 5.972E-06, 5.928E-06, 5.863E-06, 5.829E-06,
     $ 5.825E-06, 5.856E-06, 5.922E-06, 5.992E-06, 6.037E-06, 6.034E-06,
     $ 5.959E-06, 5.839E-06, 5.707E-06, 5.570E-06, 5.486E-06, 5.502E-06,
     $ 5.561E-06, 5.631E-06, 5.720E-06, 5.744E-06, 5.648E-06, 5.509E-06,
     $ 5.369E-06, 5.232E-06, 5.195E-06, 5.318E-06, 5.520E-06, 5.732E-06,
     $ 5.933E-06, 6.061E-06, 6.052E-06, 5.934E-06, 5.776E-06, 5.609E-06,
     $ 5.469E-06, 5.419E-06, 5.472E-06, 5.557E-06, 5.621E-06, 5.666E-06,
     $ 5.684E-06, 5.672E-06, 5.665E-06, 5.685E-06, 5.705E-06, 5.709E-06,
     $ 5.700E-06, 5.704E-06, 5.749E-06, 5.793E-06, 5.785E-06, 5.747E-06,
     $ 5.668E-06, 5.525E-06, 5.398E-06, 5.354E-06, 5.348E-06, 5.380E-06,
     $ 5.477E-06, 5.602E-06, 5.720E-06, 5.817E-06, 5.880E-06, 5.904E-06,
     $ 5.894E-06, 5.879E-06, 5.901E-06, 5.938E-06, 5.947E-06, 5.936E-06,
     $ 5.906E-06, 5.849E-06, 5.806E-06, 5.822E-06, 5.866E-06, 5.912E-06,
     $ 5.951E-06, 5.932E-06, 5.833E-06, 5.714E-06, 5.605E-06, 5.505E-06,
     $ 5.459E-06, 5.487E-06, 5.532E-06, 5.564E-06/
C                                                                       
C     18001 TO 18100 CM-1 DATA.                                         
      DATA (SUN(I),I= 18001, 18100)/                                    
     $ 5.608E-06, 5.668E-06, 5.723E-06, 5.774E-06, 5.828E-06, 5.872E-06,
     $ 5.898E-06, 5.917E-06, 5.923E-06, 5.907E-06, 5.877E-06, 5.837E-06,
     $ 5.793E-06, 5.777E-06, 5.809E-06, 5.869E-06, 5.931E-06, 5.984E-06,
     $ 6.002E-06, 5.975E-06, 5.922E-06, 5.865E-06, 5.815E-06, 5.800E-06,
     $ 5.832E-06, 5.886E-06, 5.941E-06, 5.973E-06, 5.961E-06, 5.899E-06,
     $ 5.799E-06, 5.695E-06, 5.629E-06, 5.615E-06, 5.650E-06, 5.741E-06,
     $ 5.857E-06, 5.956E-06, 6.032E-06, 6.086E-06, 6.100E-06, 6.075E-06,
     $ 6.029E-06, 5.966E-06, 5.898E-06, 5.853E-06, 5.849E-06, 5.870E-06,
     $ 5.903E-06, 5.933E-06, 5.948E-06, 5.936E-06, 5.915E-06, 5.910E-06,
     $ 5.907E-06, 5.880E-06, 5.826E-06, 5.735E-06, 5.610E-06, 5.493E-06,
     $ 5.437E-06, 5.460E-06, 5.566E-06, 5.704E-06, 5.798E-06, 5.837E-06,
     $ 5.825E-06, 5.760E-06, 5.705E-06, 5.728E-06, 5.788E-06, 5.842E-06,
     $ 5.900E-06, 5.939E-06, 5.935E-06, 5.920E-06, 5.919E-06, 5.888E-06,
     $ 5.781E-06, 5.613E-06, 5.422E-06, 5.224E-06, 5.072E-06, 5.043E-06,
     $ 5.112E-06, 5.212E-06, 5.336E-06, 5.465E-06, 5.553E-06, 5.611E-06,
     $ 5.647E-06, 5.649E-06, 5.642E-06, 5.656E-06, 5.688E-06, 5.745E-06,
     $ 5.824E-06, 5.891E-06, 5.915E-06, 5.909E-06/
C                                                                       
C     18101 TO 18200 CM-1 DATA.                                         
      DATA (SUN(I),I= 18101, 18200)/                                    
     $ 5.892E-06, 5.847E-06, 5.787E-06, 5.752E-06, 5.731E-06, 5.709E-06,
     $ 5.728E-06, 5.794E-06, 5.865E-06, 5.934E-06, 6.004E-06, 6.052E-06,
     $ 6.070E-06, 6.074E-06, 6.066E-06, 6.046E-06, 6.013E-06, 5.970E-06,
     $ 5.922E-06, 5.875E-06, 5.840E-06, 5.834E-06, 5.856E-06, 5.872E-06,
     $ 5.859E-06, 5.818E-06, 5.753E-06, 5.659E-06, 5.556E-06, 5.476E-06,
     $ 5.395E-06, 5.275E-06, 5.153E-06, 5.087E-06, 5.088E-06, 5.169E-06,
     $ 5.337E-06, 5.544E-06, 5.710E-06, 5.797E-06, 5.819E-06, 5.807E-06,
     $ 5.777E-06, 5.753E-06, 5.771E-06, 5.823E-06, 5.870E-06, 5.915E-06,
     $ 5.944E-06, 5.901E-06, 5.787E-06, 5.638E-06, 5.459E-06, 5.299E-06,
     $ 5.234E-06, 5.256E-06, 5.327E-06, 5.451E-06, 5.586E-06, 5.682E-06,
     $ 5.755E-06, 5.812E-06, 5.840E-06, 5.847E-06, 5.842E-06, 5.820E-06,
     $ 5.764E-06, 5.659E-06, 5.546E-06, 5.460E-06, 5.392E-06, 5.383E-06,
     $ 5.490E-06, 5.643E-06, 5.773E-06, 5.890E-06, 5.974E-06, 5.992E-06,
     $ 5.978E-06, 5.931E-06, 5.820E-06, 5.680E-06, 5.539E-06, 5.391E-06,
     $ 5.312E-06, 5.373E-06, 5.505E-06, 5.649E-06, 5.801E-06, 5.898E-06,
     $ 5.889E-06, 5.794E-06, 5.636E-06, 5.446E-06, 5.280E-06, 5.170E-06,
     $ 5.151E-06, 5.242E-06, 5.391E-06, 5.540E-06/
C                                                                       
C     18201 TO 18300 CM-1 DATA.                                         
      DATA (SUN(I),I= 18201, 18300)/                                    
     $ 5.665E-06, 5.745E-06, 5.767E-06, 5.765E-06, 5.769E-06, 5.772E-06,
     $ 5.772E-06, 5.761E-06, 5.718E-06, 5.660E-06, 5.601E-06, 5.509E-06,
     $ 5.387E-06, 5.286E-06, 5.195E-06, 5.111E-06, 5.107E-06, 5.215E-06,
     $ 5.382E-06, 5.567E-06, 5.750E-06, 5.889E-06, 5.961E-06, 5.984E-06,
     $ 5.994E-06, 6.008E-06, 6.022E-06, 6.021E-06, 5.995E-06, 5.947E-06,
     $ 5.878E-06, 5.793E-06, 5.714E-06, 5.638E-06, 5.530E-06, 5.399E-06,
     $ 5.278E-06, 5.182E-06, 5.149E-06, 5.227E-06, 5.403E-06, 5.608E-06,
     $ 5.788E-06, 5.906E-06, 5.946E-06, 5.917E-06, 5.847E-06, 5.753E-06,
     $ 5.613E-06, 5.390E-06, 5.099E-06, 4.798E-06, 4.560E-06, 4.471E-06,
     $ 4.578E-06, 4.839E-06, 5.164E-06, 5.452E-06, 5.628E-06, 5.684E-06,
     $ 5.664E-06, 5.597E-06, 5.530E-06, 5.515E-06, 5.548E-06, 5.598E-06,
     $ 5.671E-06, 5.765E-06, 5.841E-06, 5.876E-06, 5.882E-06, 5.865E-06,
     $ 5.830E-06, 5.798E-06, 5.791E-06, 5.814E-06, 5.860E-06, 5.910E-06,
     $ 5.943E-06, 5.959E-06, 5.953E-06, 5.915E-06, 5.854E-06, 5.778E-06,
     $ 5.688E-06, 5.602E-06, 5.549E-06, 5.547E-06, 5.599E-06, 5.694E-06,
     $ 5.788E-06, 5.843E-06, 5.861E-06, 5.821E-06, 5.689E-06, 5.505E-06,
     $ 5.332E-06, 5.172E-06, 5.064E-06, 5.097E-06/
C                                                                       
C     18301 TO 18400 CM-1 DATA.                                         
      DATA (SUN(I),I= 18301, 18400)/                                    
     $ 5.250E-06, 5.434E-06, 5.618E-06, 5.771E-06, 5.855E-06, 5.884E-06,
     $ 5.898E-06, 5.922E-06, 5.959E-06, 5.994E-06, 6.018E-06, 6.034E-06,
     $ 6.042E-06, 6.041E-06, 6.038E-06, 6.032E-06, 6.007E-06, 5.949E-06,
     $ 5.852E-06, 5.660E-06, 5.344E-06, 4.995E-06, 4.694E-06, 4.472E-06,
     $ 4.442E-06, 4.671E-06, 5.016E-06, 5.348E-06, 5.638E-06, 5.831E-06,
     $ 5.889E-06, 5.879E-06, 5.871E-06, 5.872E-06, 5.879E-06, 5.894E-06,
     $ 5.920E-06, 5.949E-06, 5.974E-06, 5.997E-06, 6.017E-06, 6.024E-06,
     $ 6.017E-06, 5.998E-06, 5.963E-06, 5.918E-06, 5.874E-06, 5.826E-06,
     $ 5.730E-06, 5.548E-06, 5.307E-06, 5.056E-06, 4.828E-06, 4.718E-06,
     $ 4.796E-06, 4.968E-06, 5.147E-06, 5.317E-06, 5.429E-06, 5.480E-06,
     $ 5.555E-06, 5.665E-06, 5.775E-06, 5.880E-06, 5.958E-06, 5.989E-06,
     $ 5.996E-06, 5.991E-06, 5.972E-06, 5.947E-06, 5.919E-06, 5.886E-06,
     $ 5.865E-06, 5.875E-06, 5.899E-06, 5.925E-06, 5.958E-06, 5.990E-06,
     $ 6.007E-06, 6.014E-06, 6.019E-06, 6.005E-06, 5.957E-06, 5.883E-06,
     $ 5.781E-06, 5.642E-06, 5.505E-06, 5.417E-06, 5.378E-06, 5.390E-06,
     $ 5.418E-06, 5.401E-06, 5.332E-06, 5.237E-06, 5.135E-06, 5.093E-06,
     $ 5.159E-06, 5.270E-06, 5.374E-06, 5.464E-06/
C                                                                       
C     18401 TO 18500 CM-1 DATA.                                         
      DATA (SUN(I),I= 18401, 18500)/                                    
     $ 5.520E-06, 5.539E-06, 5.561E-06, 5.602E-06, 5.644E-06, 5.678E-06,
     $ 5.654E-06, 5.501E-06, 5.241E-06, 4.940E-06, 4.632E-06, 4.423E-06,
     $ 4.453E-06, 4.683E-06, 4.999E-06, 5.347E-06, 5.651E-06, 5.829E-06,
     $ 5.904E-06, 5.934E-06, 5.943E-06, 5.932E-06, 5.903E-06, 5.859E-06,
     $ 5.797E-06, 5.690E-06, 5.528E-06, 5.356E-06, 5.205E-06, 5.088E-06,
     $ 5.062E-06, 5.175E-06, 5.364E-06, 5.551E-06, 5.707E-06, 5.801E-06,
     $ 5.804E-06, 5.753E-06, 5.692E-06, 5.635E-06, 5.600E-06, 5.595E-06,
     $ 5.607E-06, 5.631E-06, 5.668E-06, 5.699E-06, 5.699E-06, 5.677E-06,
     $ 5.663E-06, 5.656E-06, 5.641E-06, 5.641E-06, 5.656E-06, 5.650E-06,
     $ 5.639E-06, 5.641E-06, 5.601E-06, 5.514E-06, 5.430E-06, 5.333E-06,
     $ 5.240E-06, 5.234E-06, 5.307E-06, 5.376E-06, 5.422E-06, 5.446E-06,
     $ 5.427E-06, 5.386E-06, 5.389E-06, 5.464E-06, 5.555E-06, 5.592E-06,
     $ 5.579E-06, 5.523E-06, 5.379E-06, 5.187E-06, 5.055E-06, 4.967E-06,
     $ 4.883E-06, 4.885E-06, 5.008E-06, 5.167E-06, 5.319E-06, 5.454E-06,
     $ 5.531E-06, 5.525E-06, 5.462E-06, 5.385E-06, 5.284E-06, 5.122E-06,
     $ 4.923E-06, 4.716E-06, 4.517E-06, 4.379E-06, 4.319E-06, 4.293E-06,
     $ 4.301E-06, 4.358E-06, 4.474E-06, 4.688E-06/
C                                                                       
C     18501 TO 18600 CM-1 DATA.                                         
      DATA (SUN(I),I= 18501, 18600)/                                    
     $ 4.991E-06, 5.301E-06, 5.566E-06, 5.755E-06, 5.839E-06, 5.829E-06,
     $ 5.754E-06, 5.631E-06, 5.495E-06, 5.363E-06, 5.252E-06, 5.227E-06,
     $ 5.304E-06, 5.406E-06, 5.493E-06, 5.572E-06, 5.604E-06, 5.529E-06,
     $ 5.358E-06, 5.164E-06, 4.965E-06, 4.769E-06, 4.682E-06, 4.783E-06,
     $ 4.994E-06, 5.231E-06, 5.457E-06, 5.606E-06, 5.643E-06, 5.616E-06,
     $ 5.581E-06, 5.549E-06, 5.513E-06, 5.472E-06, 5.426E-06, 5.374E-06,
     $ 5.360E-06, 5.409E-06, 5.460E-06, 5.493E-06, 5.528E-06, 5.536E-06,
     $ 5.529E-06, 5.556E-06, 5.584E-06, 5.575E-06, 5.551E-06, 5.513E-06,
     $ 5.466E-06, 5.467E-06, 5.527E-06, 5.594E-06, 5.644E-06, 5.666E-06,
     $ 5.647E-06, 5.593E-06, 5.543E-06, 5.519E-06, 5.521E-06, 5.545E-06,
     $ 5.598E-06, 5.663E-06, 5.722E-06, 5.772E-06, 5.798E-06, 5.759E-06,
     $ 5.651E-06, 5.506E-06, 5.328E-06, 5.146E-06, 5.051E-06, 5.069E-06,
     $ 5.152E-06, 5.285E-06, 5.445E-06, 5.566E-06, 5.629E-06, 5.657E-06,
     $ 5.659E-06, 5.641E-06, 5.617E-06, 5.595E-06, 5.575E-06, 5.577E-06,
     $ 5.616E-06, 5.664E-06, 5.705E-06, 5.745E-06, 5.763E-06, 5.757E-06,
     $ 5.757E-06, 5.763E-06, 5.773E-06, 5.794E-06, 5.815E-06, 5.831E-06,
     $ 5.850E-06, 5.867E-06, 5.860E-06, 5.819E-06/
C                                                                       
C     18601 TO 18700 CM-1 DATA.                                         
      DATA (SUN(I),I= 18601, 18700)/                                    
     $ 5.762E-06, 5.705E-06, 5.649E-06, 5.622E-06, 5.650E-06, 5.668E-06,
     $ 5.579E-06, 5.378E-06, 5.114E-06, 4.824E-06, 4.589E-06, 4.521E-06,
     $ 4.612E-06, 4.761E-06, 4.910E-06, 5.020E-06, 5.092E-06, 5.188E-06,
     $ 5.321E-06, 5.460E-06, 5.573E-06, 5.610E-06, 5.557E-06, 5.455E-06,
     $ 5.364E-06, 5.354E-06, 5.445E-06, 5.560E-06, 5.634E-06, 5.641E-06,
     $ 5.545E-06, 5.368E-06, 5.205E-06, 5.124E-06, 5.152E-06, 5.275E-06,
     $ 5.414E-06, 5.503E-06, 5.542E-06, 5.527E-06, 5.470E-06, 5.437E-06,
     $ 5.458E-06, 5.493E-06, 5.524E-06, 5.570E-06, 5.630E-06, 5.679E-06,
     $ 5.698E-06, 5.682E-06, 5.633E-06, 5.554E-06, 5.470E-06, 5.435E-06,
     $ 5.472E-06, 5.548E-06, 5.632E-06, 5.716E-06, 5.785E-06, 5.831E-06,
     $ 5.865E-06, 5.897E-06, 5.928E-06, 5.953E-06, 5.967E-06, 5.976E-06,
     $ 5.981E-06, 5.982E-06, 5.968E-06, 5.914E-06, 5.814E-06, 5.694E-06,
     $ 5.572E-06, 5.466E-06, 5.425E-06, 5.471E-06, 5.560E-06, 5.652E-06,
     $ 5.741E-06, 5.804E-06, 5.818E-06, 5.788E-06, 5.721E-06, 5.619E-06,
     $ 5.501E-06, 5.393E-06, 5.305E-06, 5.244E-06, 5.219E-06, 5.220E-06,
     $ 5.229E-06, 5.256E-06, 5.328E-06, 5.416E-06, 5.458E-06, 5.418E-06,
     $ 5.280E-06, 5.070E-06, 4.852E-06, 4.706E-06/
C                                                                       
C     18701 TO 18800 CM-1 DATA.                                         
      DATA (SUN(I),I= 18701, 18800)/                                    
     $ 4.704E-06, 4.865E-06, 5.115E-06, 5.371E-06, 5.594E-06, 5.757E-06,
     $ 5.838E-06, 5.848E-06, 5.822E-06, 5.787E-06, 5.744E-06, 5.703E-06,
     $ 5.659E-06, 5.586E-06, 5.484E-06, 5.360E-06, 5.190E-06, 5.017E-06,
     $ 4.917E-06, 4.869E-06, 4.855E-06, 4.921E-06, 5.031E-06, 5.071E-06,
     $ 5.018E-06, 4.908E-06, 4.759E-06, 4.626E-06, 4.609E-06, 4.742E-06,
     $ 4.958E-06, 5.177E-06, 5.372E-06, 5.517E-06, 5.579E-06, 5.595E-06,
     $ 5.615E-06, 5.618E-06, 5.592E-06, 5.544E-06, 5.420E-06, 5.200E-06,
     $ 4.950E-06, 4.719E-06, 4.566E-06, 4.589E-06, 4.794E-06, 5.084E-06,
     $ 5.374E-06, 5.604E-06, 5.727E-06, 5.738E-06, 5.672E-06, 5.574E-06,
     $ 5.463E-06, 5.322E-06, 5.133E-06, 4.861E-06, 4.481E-06, 4.047E-06,
     $ 3.661E-06, 3.418E-06, 3.422E-06, 3.704E-06, 4.153E-06, 4.610E-06,
     $ 4.984E-06, 5.217E-06, 5.289E-06, 5.283E-06, 5.287E-06, 5.276E-06,
     $ 5.215E-06, 5.138E-06, 5.052E-06, 4.951E-06, 4.924E-06, 5.045E-06,
     $ 5.238E-06, 5.413E-06, 5.547E-06, 5.609E-06, 5.563E-06, 5.454E-06,
     $ 5.376E-06, 5.366E-06, 5.389E-06, 5.431E-06, 5.508E-06, 5.579E-06,
     $ 5.605E-06, 5.617E-06, 5.644E-06, 5.664E-06, 5.673E-06, 5.680E-06,
     $ 5.679E-06, 5.645E-06, 5.544E-06, 5.391E-06/
C                                                                       
C     18801 TO 18900 CM-1 DATA.                                         
      DATA (SUN(I),I= 18801, 18900)/                                    
     $ 5.247E-06, 5.133E-06, 5.062E-06, 5.100E-06, 5.234E-06, 5.370E-06,
     $ 5.478E-06, 5.557E-06, 5.587E-06, 5.590E-06, 5.602E-06, 5.623E-06,
     $ 5.644E-06, 5.661E-06, 5.676E-06, 5.693E-06, 5.716E-06, 5.752E-06,
     $ 5.798E-06, 5.836E-06, 5.857E-06, 5.871E-06, 5.879E-06, 5.869E-06,
     $ 5.844E-06, 5.816E-06, 5.779E-06, 5.722E-06, 5.668E-06, 5.642E-06,
     $ 5.628E-06, 5.603E-06, 5.583E-06, 5.573E-06, 5.550E-06, 5.529E-06,
     $ 5.550E-06, 5.603E-06, 5.657E-06, 5.713E-06, 5.767E-06, 5.805E-06,
     $ 5.828E-06, 5.845E-06, 5.858E-06, 5.865E-06, 5.862E-06, 5.855E-06,
     $ 5.839E-06, 5.779E-06, 5.674E-06, 5.559E-06, 5.442E-06, 5.346E-06,
     $ 5.313E-06, 5.324E-06, 5.328E-06, 5.315E-06, 5.295E-06, 5.291E-06,
     $ 5.338E-06, 5.430E-06, 5.517E-06, 5.535E-06, 5.434E-06, 5.219E-06,
     $ 4.950E-06, 4.691E-06, 4.521E-06, 4.484E-06, 4.534E-06, 4.629E-06,
     $ 4.771E-06, 4.920E-06, 5.043E-06, 5.162E-06, 5.285E-06, 5.383E-06,
     $ 5.453E-06, 5.513E-06, 5.566E-06, 5.606E-06, 5.633E-06, 5.656E-06,
     $ 5.673E-06, 5.679E-06, 5.683E-06, 5.697E-06, 5.721E-06, 5.755E-06,
     $ 5.792E-06, 5.806E-06, 5.774E-06, 5.705E-06, 5.617E-06, 5.521E-06,
     $ 5.459E-06, 5.472E-06, 5.519E-06, 5.553E-06/
C                                                                       
C     18901 TO 19000 CM-1 DATA.                                         
      DATA (SUN(I),I= 18901, 19000)/                                    
     $ 5.584E-06, 5.603E-06, 5.589E-06, 5.581E-06, 5.619E-06, 5.676E-06,
     $ 5.729E-06, 5.783E-06, 5.829E-06, 5.851E-06, 5.854E-06, 5.843E-06,
     $ 5.808E-06, 5.733E-06, 5.622E-06, 5.472E-06, 5.270E-06, 5.052E-06,
     $ 4.878E-06, 4.759E-06, 4.728E-06, 4.831E-06, 4.982E-06, 5.082E-06,
     $ 5.152E-06, 5.190E-06, 5.168E-06, 5.154E-06, 5.202E-06, 5.256E-06,
     $ 5.288E-06, 5.312E-06, 5.338E-06, 5.385E-06, 5.464E-06, 5.570E-06,
     $ 5.683E-06, 5.777E-06, 5.828E-06, 5.838E-06, 5.824E-06, 5.801E-06,
     $ 5.758E-06, 5.670E-06, 5.538E-06, 5.365E-06, 5.139E-06, 4.904E-06,
     $ 4.755E-06, 4.732E-06, 4.820E-06, 5.014E-06, 5.231E-06, 5.326E-06,
     $ 5.270E-06, 5.118E-06, 4.910E-06, 4.742E-06, 4.728E-06, 4.861E-06,
     $ 5.058E-06, 5.263E-06, 5.426E-06, 5.461E-06, 5.326E-06, 5.064E-06,
     $ 4.684E-06, 4.194E-06, 3.751E-06, 3.487E-06, 3.372E-06, 3.432E-06,
     $ 3.715E-06, 4.077E-06, 4.383E-06, 4.665E-06, 4.894E-06, 4.959E-06,
     $ 4.880E-06, 4.736E-06, 4.516E-06, 4.244E-06, 4.067E-06, 4.032E-06,
     $ 4.083E-06, 4.222E-06, 4.413E-06, 4.557E-06, 4.608E-06, 4.576E-06,
     $ 4.517E-06, 4.505E-06, 4.519E-06, 4.540E-06, 4.607E-06, 4.663E-06,
     $ 4.664E-06, 4.693E-06, 4.783E-06, 4.885E-06/
C                                                                       
C     19001 TO 19100 CM-1 DATA.                                         
      DATA (SUN(I),I= 19001, 19100)/                                    
     $ 5.012E-06, 5.147E-06, 5.233E-06, 5.270E-06, 5.262E-06, 5.180E-06,
     $ 5.048E-06, 4.919E-06, 4.826E-06, 4.824E-06, 4.948E-06, 5.153E-06,
     $ 5.370E-06, 5.557E-06, 5.688E-06, 5.742E-06, 5.723E-06, 5.656E-06,
     $ 5.541E-06, 5.349E-06, 5.107E-06, 4.900E-06, 4.773E-06, 4.741E-06,
     $ 4.821E-06, 4.969E-06, 5.109E-06, 5.211E-06, 5.272E-06, 5.310E-06,
     $ 5.362E-06, 5.425E-06, 5.485E-06, 5.539E-06, 5.553E-06, 5.509E-06,
     $ 5.436E-06, 5.338E-06, 5.213E-06, 5.111E-06, 5.071E-06, 5.085E-06,
     $ 5.156E-06, 5.282E-06, 5.422E-06, 5.520E-06, 5.553E-06, 5.521E-06,
     $ 5.419E-06, 5.273E-06, 5.150E-06, 5.100E-06, 5.106E-06, 5.155E-06,
     $ 5.239E-06, 5.320E-06, 5.371E-06, 5.422E-06, 5.507E-06, 5.586E-06,
     $ 5.616E-06, 5.610E-06, 5.568E-06, 5.473E-06, 5.356E-06, 5.273E-06,
     $ 5.226E-06, 5.196E-06, 5.197E-06, 5.253E-06, 5.349E-06, 5.456E-06,
     $ 5.567E-06, 5.663E-06, 5.706E-06, 5.702E-06, 5.681E-06, 5.651E-06,
     $ 5.626E-06, 5.624E-06, 5.618E-06, 5.585E-06, 5.536E-06, 5.468E-06,
     $ 5.387E-06, 5.338E-06, 5.333E-06, 5.340E-06, 5.369E-06, 5.402E-06,
     $ 5.368E-06, 5.277E-06, 5.182E-06, 5.057E-06, 4.924E-06, 4.877E-06,
     $ 4.911E-06, 4.983E-06, 5.085E-06, 5.140E-06/
C                                                                       
C     19101 TO 19200 CM-1 DATA.                                         
      DATA (SUN(I),I= 19101, 19200)/                                    
     $ 5.089E-06, 4.969E-06, 4.817E-06, 4.703E-06, 4.735E-06, 4.912E-06,
     $ 5.148E-06, 5.388E-06, 5.582E-06, 5.672E-06, 5.638E-06, 5.515E-06,
     $ 5.362E-06, 5.220E-06, 5.110E-06, 5.076E-06, 5.133E-06, 5.221E-06,
     $ 5.293E-06, 5.299E-06, 5.176E-06, 4.917E-06, 4.557E-06, 4.148E-06,
     $ 3.812E-06, 3.675E-06, 3.756E-06, 4.009E-06, 4.363E-06, 4.693E-06,
     $ 4.909E-06, 5.021E-06, 5.076E-06, 5.120E-06, 5.187E-06, 5.277E-06,
     $ 5.375E-06, 5.452E-06, 5.489E-06, 5.501E-06, 5.505E-06, 5.493E-06,
     $ 5.484E-06, 5.500E-06, 5.529E-06, 5.549E-06, 5.555E-06, 5.547E-06,
     $ 5.521E-06, 5.483E-06, 5.466E-06, 5.498E-06, 5.553E-06, 5.592E-06,
     $ 5.603E-06, 5.561E-06, 5.435E-06, 5.272E-06, 5.154E-06, 5.061E-06,
     $ 4.954E-06, 4.878E-06, 4.837E-06, 4.759E-06, 4.671E-06, 4.672E-06,
     $ 4.739E-06, 4.799E-06, 4.881E-06, 5.018E-06, 5.150E-06, 5.244E-06,
     $ 5.346E-06, 5.453E-06, 5.520E-06, 5.557E-06, 5.597E-06, 5.621E-06,
     $ 5.616E-06, 5.607E-06, 5.590E-06, 5.535E-06, 5.448E-06, 5.367E-06,
     $ 5.294E-06, 5.229E-06, 5.218E-06, 5.281E-06, 5.315E-06, 5.231E-06,
     $ 5.057E-06, 4.825E-06, 4.553E-06, 4.380E-06, 4.433E-06, 4.646E-06,
     $ 4.910E-06, 5.132E-06, 5.191E-06, 5.068E-06/
C                                                                       
C     19201 TO 19300 CM-1 DATA.                                         
      DATA (SUN(I),I= 19201, 19300)/                                    
     $ 4.863E-06, 4.652E-06, 4.521E-06, 4.536E-06, 4.616E-06, 4.686E-06,
     $ 4.748E-06, 4.794E-06, 4.866E-06, 5.024E-06, 5.227E-06, 5.378E-06,
     $ 5.426E-06, 5.367E-06, 5.227E-06, 5.065E-06, 4.993E-06, 5.080E-06,
     $ 5.232E-06, 5.353E-06, 5.447E-06, 5.493E-06, 5.454E-06, 5.387E-06,
     $ 5.345E-06, 5.291E-06, 5.226E-06, 5.175E-06, 5.103E-06, 5.011E-06,
     $ 4.956E-06, 4.920E-06, 4.869E-06, 4.847E-06, 4.863E-06, 4.871E-06,
     $ 4.849E-06, 4.799E-06, 4.698E-06, 4.538E-06, 4.378E-06, 4.291E-06,
     $ 4.301E-06, 4.428E-06, 4.688E-06, 4.987E-06, 5.214E-06, 5.340E-06,
     $ 5.327E-06, 5.141E-06, 4.877E-06, 4.621E-06, 4.375E-06, 4.212E-06,
     $ 4.201E-06, 4.276E-06, 4.419E-06, 4.672E-06, 4.960E-06, 5.206E-06,
     $ 5.416E-06, 5.533E-06, 5.489E-06, 5.343E-06, 5.151E-06, 4.921E-06,
     $ 4.755E-06, 4.746E-06, 4.824E-06, 4.933E-06, 5.092E-06, 5.232E-06,
     $ 5.278E-06, 5.253E-06, 5.196E-06, 5.100E-06, 4.965E-06, 4.809E-06,
     $ 4.624E-06, 4.364E-06, 4.001E-06, 3.543E-06, 3.034E-06, 2.558E-06,
     $ 2.211E-06, 2.071E-06, 2.183E-06, 2.514E-06, 2.973E-06, 3.479E-06,
     $ 3.959E-06, 4.352E-06, 4.640E-06, 4.835E-06, 4.950E-06, 5.006E-06,
     $ 5.035E-06, 5.059E-06, 5.087E-06, 5.127E-06/
C                                                                       
C     19301 TO 19400 CM-1 DATA.                                         
      DATA (SUN(I),I= 19301, 19400)/                                    
     $ 5.182E-06, 5.236E-06, 5.283E-06, 5.333E-06, 5.379E-06, 5.401E-06,
     $ 5.397E-06, 5.359E-06, 5.287E-06, 5.216E-06, 5.167E-06, 5.144E-06,
     $ 5.163E-06, 5.220E-06, 5.274E-06, 5.308E-06, 5.322E-06, 5.280E-06,
     $ 5.150E-06, 4.937E-06, 4.638E-06, 4.223E-06, 3.720E-06, 3.219E-06,
     $ 2.781E-06, 2.444E-06, 2.277E-06, 2.344E-06, 2.603E-06, 2.970E-06,
     $ 3.425E-06, 3.939E-06, 4.404E-06, 4.757E-06, 4.988E-06, 5.029E-06,
     $ 4.846E-06, 4.537E-06, 4.201E-06, 3.907E-06, 3.743E-06, 3.686E-06,
     $ 3.609E-06, 3.464E-06, 3.285E-06, 3.100E-06, 3.007E-06, 3.132E-06,
     $ 3.426E-06, 3.738E-06, 4.023E-06, 4.253E-06, 4.351E-06, 4.376E-06,
     $ 4.456E-06, 4.587E-06, 4.734E-06, 4.917E-06, 5.108E-06, 5.252E-06,
     $ 5.316E-06, 5.285E-06, 5.188E-06, 5.069E-06, 4.950E-06, 4.893E-06,
     $ 4.949E-06, 5.075E-06, 5.216E-06, 5.343E-06, 5.413E-06, 5.405E-06,
     $ 5.330E-06, 5.207E-06, 5.093E-06, 5.034E-06, 5.019E-06, 5.052E-06,
     $ 5.154E-06, 5.277E-06, 5.374E-06, 5.447E-06, 5.503E-06, 5.530E-06,
     $ 5.522E-06, 5.478E-06, 5.412E-06, 5.331E-06, 5.228E-06, 5.139E-06,
     $ 5.106E-06, 5.096E-06, 5.087E-06, 5.107E-06, 5.108E-06, 5.046E-06,
     $ 4.989E-06, 4.972E-06, 4.953E-06, 4.942E-06/
C                                                                       
C     19401 TO 19500 CM-1 DATA.                                         
      DATA (SUN(I),I= 19401, 19500)/                                    
     $ 4.964E-06, 4.982E-06, 4.971E-06, 4.933E-06, 4.884E-06, 4.861E-06,
     $ 4.843E-06, 4.810E-06, 4.829E-06, 4.928E-06, 5.042E-06, 5.159E-06,
     $ 5.289E-06, 5.353E-06, 5.288E-06, 5.145E-06, 4.982E-06, 4.805E-06,
     $ 4.674E-06, 4.651E-06, 4.682E-06, 4.701E-06, 4.725E-06, 4.736E-06,
     $ 4.713E-06, 4.703E-06, 4.730E-06, 4.783E-06, 4.872E-06, 4.985E-06,
     $ 5.096E-06, 5.205E-06, 5.301E-06, 5.308E-06, 5.162E-06, 4.894E-06,
     $ 4.581E-06, 4.245E-06, 3.972E-06, 3.914E-06, 4.064E-06, 4.296E-06,
     $ 4.586E-06, 4.921E-06, 5.191E-06, 5.342E-06, 5.380E-06, 5.260E-06,
     $ 4.991E-06, 4.662E-06, 4.346E-06, 4.147E-06, 4.186E-06, 4.415E-06,
     $ 4.687E-06, 4.909E-06, 5.012E-06, 4.966E-06, 4.828E-06, 4.707E-06,
     $ 4.700E-06, 4.827E-06, 5.021E-06, 5.222E-06, 5.404E-06, 5.531E-06,
     $ 5.585E-06, 5.595E-06, 5.554E-06, 5.437E-06, 5.282E-06, 5.123E-06,
     $ 4.962E-06, 4.864E-06, 4.892E-06, 4.984E-06, 5.068E-06, 5.142E-06,
     $ 5.193E-06, 5.188E-06, 5.146E-06, 5.129E-06, 5.168E-06, 5.221E-06,
     $ 5.238E-06, 5.214E-06, 5.142E-06, 5.017E-06, 4.884E-06, 4.813E-06,
     $ 4.834E-06, 4.931E-06, 5.040E-06, 5.094E-06, 5.077E-06, 4.992E-06,
     $ 4.848E-06, 4.709E-06, 4.640E-06, 4.632E-06/
C                                                                       
C     19501 TO 19600 CM-1 DATA.                                         
      DATA (SUN(I),I= 19501, 19600)/                                    
     $ 4.630E-06, 4.599E-06, 4.562E-06, 4.534E-06, 4.509E-06, 4.535E-06,
     $ 4.638E-06, 4.733E-06, 4.766E-06, 4.760E-06, 4.728E-06, 4.712E-06,
     $ 4.775E-06, 4.908E-06, 5.047E-06, 5.150E-06, 5.193E-06, 5.169E-06,
     $ 5.107E-06, 5.065E-06, 5.080E-06, 5.128E-06, 5.185E-06, 5.257E-06,
     $ 5.333E-06, 5.391E-06, 5.435E-06, 5.475E-06, 5.502E-06, 5.516E-06,
     $ 5.522E-06, 5.522E-06, 5.519E-06, 5.519E-06, 5.520E-06, 5.517E-06,
     $ 5.507E-06, 5.477E-06, 5.409E-06, 5.315E-06, 5.223E-06, 5.152E-06,
     $ 5.130E-06, 5.180E-06, 5.279E-06, 5.376E-06, 5.432E-06, 5.441E-06,
     $ 5.405E-06, 5.339E-06, 5.283E-06, 5.281E-06, 5.330E-06, 5.391E-06,
     $ 5.454E-06, 5.508E-06, 5.505E-06, 5.413E-06, 5.258E-06, 5.064E-06,
     $ 4.840E-06, 4.652E-06, 4.582E-06, 4.628E-06, 4.759E-06, 4.961E-06,
     $ 5.177E-06, 5.309E-06, 5.293E-06, 5.146E-06, 4.930E-06, 4.687E-06,
     $ 4.500E-06, 4.492E-06, 4.656E-06, 4.866E-06, 5.055E-06, 5.206E-06,
     $ 5.272E-06, 5.242E-06, 5.194E-06, 5.183E-06, 5.176E-06, 5.154E-06,
     $ 5.150E-06, 5.161E-06, 5.167E-06, 5.180E-06, 5.203E-06, 5.202E-06,
     $ 5.170E-06, 5.143E-06, 5.130E-06, 5.111E-06, 5.096E-06, 5.107E-06,
     $ 5.118E-06, 5.095E-06, 5.057E-06, 5.028E-06/
C                                                                       
C     19601 TO 19700 CM-1 DATA.                                         
      DATA (SUN(I),I= 19601, 19700)/                                    
     $ 4.974E-06, 4.869E-06, 4.736E-06, 4.586E-06, 4.427E-06, 4.318E-06,
     $ 4.308E-06, 4.419E-06, 4.616E-06, 4.799E-06, 4.916E-06, 4.970E-06,
     $ 4.951E-06, 4.916E-06, 4.969E-06, 5.094E-06, 5.225E-06, 5.348E-06,
     $ 5.431E-06, 5.442E-06, 5.412E-06, 5.386E-06, 5.372E-06, 5.373E-06,
     $ 5.396E-06, 5.427E-06, 5.455E-06, 5.481E-06, 5.494E-06, 5.487E-06,
     $ 5.473E-06, 5.460E-06, 5.425E-06, 5.358E-06, 5.287E-06, 5.221E-06,
     $ 5.155E-06, 5.129E-06, 5.181E-06, 5.252E-06, 5.295E-06, 5.316E-06,
     $ 5.296E-06, 5.221E-06, 5.148E-06, 5.114E-06, 5.088E-06, 5.065E-06,
     $ 5.049E-06, 4.999E-06, 4.931E-06, 4.907E-06, 4.928E-06, 4.976E-06,
     $ 5.066E-06, 5.171E-06, 5.237E-06, 5.261E-06, 5.251E-06, 5.197E-06,
     $ 5.110E-06, 4.990E-06, 4.824E-06, 4.659E-06, 4.544E-06, 4.457E-06,
     $ 4.431E-06, 4.530E-06, 4.679E-06, 4.780E-06, 4.845E-06, 4.867E-06,
     $ 4.797E-06, 4.674E-06, 4.575E-06, 4.499E-06, 4.425E-06, 4.361E-06,
     $ 4.286E-06, 4.198E-06, 4.165E-06, 4.211E-06, 4.331E-06, 4.553E-06,
     $ 4.838E-06, 5.099E-06, 5.305E-06, 5.449E-06, 5.487E-06, 5.417E-06,
     $ 5.298E-06, 5.173E-06, 5.043E-06, 4.944E-06, 4.906E-06, 4.868E-06,
     $ 4.806E-06, 4.770E-06, 4.777E-06, 4.827E-06/
C                                                                       
C     19701 TO 19800 CM-1 DATA.                                         
      DATA (SUN(I),I= 19701, 19800)/                                    
     $ 4.958E-06, 5.128E-06, 5.243E-06, 5.274E-06, 5.219E-06, 5.078E-06,
     $ 4.911E-06, 4.812E-06, 4.797E-06, 4.850E-06, 4.974E-06, 5.133E-06,
     $ 5.263E-06, 5.349E-06, 5.390E-06, 5.370E-06, 5.298E-06, 5.186E-06,
     $ 5.032E-06, 4.872E-06, 4.753E-06, 4.672E-06, 4.655E-06, 4.732E-06,
     $ 4.835E-06, 4.905E-06, 4.968E-06, 5.029E-06, 5.061E-06, 5.095E-06,
     $ 5.164E-06, 5.228E-06, 5.219E-06, 5.114E-06, 4.943E-06, 4.733E-06,
     $ 4.536E-06, 4.443E-06, 4.511E-06, 4.699E-06, 4.926E-06, 5.140E-06,
     $ 5.303E-06, 5.384E-06, 5.401E-06, 5.403E-06, 5.409E-06, 5.411E-06,
     $ 5.418E-06, 5.435E-06, 5.452E-06, 5.452E-06, 5.423E-06, 5.368E-06,
     $ 5.300E-06, 5.233E-06, 5.196E-06, 5.217E-06, 5.274E-06, 5.325E-06,
     $ 5.359E-06, 5.363E-06, 5.328E-06, 5.274E-06, 5.230E-06, 5.201E-06,
     $ 5.196E-06, 5.214E-06, 5.234E-06, 5.251E-06, 5.274E-06, 5.297E-06,
     $ 5.312E-06, 5.327E-06, 5.342E-06, 5.347E-06, 5.341E-06, 5.341E-06,
     $ 5.363E-06, 5.388E-06, 5.395E-06, 5.395E-06, 5.381E-06, 5.335E-06,
     $ 5.247E-06, 5.103E-06, 4.898E-06, 4.669E-06, 4.459E-06, 4.327E-06,
     $ 4.353E-06, 4.495E-06, 4.626E-06, 4.722E-06, 4.785E-06, 4.756E-06,
     $ 4.680E-06, 4.666E-06, 4.670E-06, 4.627E-06/
C                                                                       
C     19801 TO 19900 CM-1 DATA.                                         
      DATA (SUN(I),I= 19801, 19900)/                                    
     $ 4.598E-06, 4.614E-06, 4.651E-06, 4.754E-06, 4.943E-06, 5.140E-06,
     $ 5.296E-06, 5.414E-06, 5.485E-06, 5.507E-06, 5.501E-06, 5.476E-06,
     $ 5.427E-06, 5.350E-06, 5.249E-06, 5.154E-06, 5.088E-06, 5.049E-06,
     $ 5.054E-06, 5.120E-06, 5.210E-06, 5.280E-06, 5.303E-06, 5.222E-06,
     $ 4.994E-06, 4.656E-06, 4.242E-06, 3.785E-06, 3.423E-06, 3.267E-06,
     $ 3.266E-06, 3.412E-06, 3.731E-06, 4.067E-06, 4.281E-06, 4.424E-06,
     $ 4.501E-06, 4.465E-06, 4.424E-06, 4.466E-06, 4.548E-06, 4.683E-06,
     $ 4.885E-06, 5.061E-06, 5.155E-06, 5.179E-06, 5.108E-06, 4.943E-06,
     $ 4.747E-06, 4.553E-06, 4.388E-06, 4.306E-06, 4.328E-06, 4.438E-06,
     $ 4.641E-06, 4.886E-06, 5.075E-06, 5.187E-06, 5.238E-06, 5.223E-06,
     $ 5.186E-06, 5.197E-06, 5.242E-06, 5.287E-06, 5.323E-06, 5.308E-06,
     $ 5.207E-06, 5.064E-06, 4.930E-06, 4.819E-06, 4.774E-06, 4.813E-06,
     $ 4.874E-06, 4.916E-06, 4.946E-06, 4.966E-06, 4.993E-06, 5.044E-06,
     $ 5.087E-06, 5.090E-06, 5.029E-06, 4.867E-06, 4.653E-06, 4.493E-06,
     $ 4.418E-06, 4.423E-06, 4.543E-06, 4.728E-06, 4.865E-06, 4.924E-06,
     $ 4.922E-06, 4.858E-06, 4.762E-06, 4.705E-06, 4.718E-06, 4.790E-06,
     $ 4.896E-06, 4.989E-06, 5.023E-06, 5.001E-06/
C                                                                       
C     19901 TO 20000 CM-1 DATA.                                         
      DATA (SUN(I),I= 19901, 20000)/                                    
     $ 4.928E-06, 4.798E-06, 4.646E-06, 4.515E-06, 4.402E-06, 4.331E-06,
     $ 4.353E-06, 4.468E-06, 4.641E-06, 4.816E-06, 4.927E-06, 4.957E-06,
     $ 4.928E-06, 4.855E-06, 4.795E-06, 4.777E-06, 4.735E-06, 4.651E-06,
     $ 4.547E-06, 4.398E-06, 4.265E-06, 4.266E-06, 4.372E-06, 4.516E-06,
     $ 4.699E-06, 4.863E-06, 4.938E-06, 4.956E-06, 4.966E-06, 4.970E-06,
     $ 4.963E-06, 4.936E-06, 4.857E-06, 4.708E-06, 4.548E-06, 4.421E-06,
     $ 4.321E-06, 4.307E-06, 4.404E-06, 4.509E-06, 4.552E-06, 4.533E-06,
     $ 4.441E-06, 4.296E-06, 4.182E-06, 4.180E-06, 4.310E-06, 4.514E-06,
     $ 4.717E-06, 4.873E-06, 4.964E-06, 4.993E-06, 4.991E-06, 5.007E-06,
     $ 5.062E-06, 5.138E-06, 5.218E-06, 5.279E-06, 5.290E-06, 5.228E-06,
     $ 5.070E-06, 4.831E-06, 4.593E-06, 4.416E-06, 4.295E-06, 4.226E-06,
     $ 4.192E-06, 4.136E-06, 4.038E-06, 3.966E-06, 4.004E-06, 4.156E-06,
     $ 4.366E-06, 4.576E-06, 4.743E-06, 4.827E-06, 4.839E-06, 4.846E-06,
     $ 4.867E-06, 4.869E-06, 4.850E-06, 4.779E-06, 4.621E-06, 4.463E-06,
     $ 4.368E-06, 4.291E-06, 4.272E-06, 4.370E-06, 4.459E-06, 4.456E-06,
     $ 4.428E-06, 4.355E-06, 4.209E-06, 4.119E-06, 4.148E-06, 4.223E-06,
     $ 4.342E-06, 4.512E-06, 4.663E-06, 4.772E-06/
C                                                                       
C     20001 TO 20100 CM-1 DATA.                                         
      DATA (SUN(I),I= 20001, 20100)/                                    
     $ 4.873E-06, 4.964E-06, 5.033E-06, 5.080E-06, 5.096E-06, 5.100E-06,
     $ 5.120E-06, 5.148E-06, 5.172E-06, 5.207E-06, 5.246E-06, 5.270E-06,
     $ 5.262E-06, 5.214E-06, 5.132E-06, 5.008E-06, 4.840E-06, 4.692E-06,
     $ 4.622E-06, 4.609E-06, 4.660E-06, 4.772E-06, 4.886E-06, 4.965E-06,
     $ 4.972E-06, 4.880E-06, 4.741E-06, 4.603E-06, 4.475E-06, 4.445E-06,
     $ 4.567E-06, 4.745E-06, 4.924E-06, 5.087E-06, 5.171E-06, 5.162E-06,
     $ 5.118E-06, 5.065E-06, 5.040E-06, 5.073E-06, 5.131E-06, 5.174E-06,
     $ 5.195E-06, 5.192E-06, 5.151E-06, 5.071E-06, 4.979E-06, 4.878E-06,
     $ 4.725E-06, 4.530E-06, 4.360E-06, 4.252E-06, 4.212E-06, 4.225E-06,
     $ 4.263E-06, 4.283E-06, 4.231E-06, 4.112E-06, 4.008E-06, 3.943E-06,
     $ 3.897E-06, 3.909E-06, 3.978E-06, 4.042E-06, 4.134E-06, 4.285E-06,
     $ 4.445E-06, 4.595E-06, 4.721E-06, 4.759E-06, 4.704E-06, 4.608E-06,
     $ 4.512E-06, 4.491E-06, 4.552E-06, 4.612E-06, 4.644E-06, 4.642E-06,
     $ 4.568E-06, 4.478E-06, 4.485E-06, 4.580E-06, 4.698E-06, 4.829E-06,
     $ 4.939E-06, 4.970E-06, 4.956E-06, 4.957E-06, 4.959E-06, 4.969E-06,
     $ 5.022E-06, 5.088E-06, 5.143E-06, 5.213E-06, 5.285E-06, 5.328E-06,
     $ 5.346E-06, 5.328E-06, 5.257E-06, 5.161E-06/
C                                                                       
C     20101 TO 20200 CM-1 DATA.                                         
      DATA (SUN(I),I= 20101, 20200)/                                    
     $ 5.063E-06, 4.975E-06, 4.936E-06, 4.953E-06, 4.988E-06, 5.030E-06,
     $ 5.082E-06, 5.100E-06, 5.074E-06, 5.032E-06, 4.954E-06, 4.840E-06,
     $ 4.758E-06, 4.743E-06, 4.761E-06, 4.806E-06, 4.863E-06, 4.864E-06,
     $ 4.781E-06, 4.654E-06, 4.533E-06, 4.442E-06, 4.414E-06, 4.467E-06,
     $ 4.581E-06, 4.703E-06, 4.789E-06, 4.814E-06, 4.774E-06, 4.678E-06,
     $ 4.571E-06, 4.520E-06, 4.546E-06, 4.627E-06, 4.746E-06, 4.901E-06,
     $ 5.061E-06, 5.192E-06, 5.298E-06, 5.370E-06, 5.376E-06, 5.322E-06,
     $ 5.236E-06, 5.124E-06, 5.034E-06, 5.010E-06, 5.026E-06, 5.079E-06,
     $ 5.177E-06, 5.276E-06, 5.341E-06, 5.385E-06, 5.410E-06, 5.407E-06,
     $ 5.393E-06, 5.378E-06, 5.361E-06, 5.340E-06, 5.306E-06, 5.219E-06,
     $ 5.013E-06, 4.667E-06, 4.223E-06, 3.767E-06, 3.416E-06, 3.307E-06,
     $ 3.488E-06, 3.880E-06, 4.345E-06, 4.772E-06, 5.086E-06, 5.245E-06,
     $ 5.279E-06, 5.263E-06, 5.235E-06, 5.197E-06, 5.173E-06, 5.169E-06,
     $ 5.149E-06, 5.111E-06, 5.063E-06, 4.991E-06, 4.928E-06, 4.920E-06,
     $ 4.952E-06, 5.008E-06, 5.098E-06, 5.190E-06, 5.249E-06, 5.288E-06,
     $ 5.300E-06, 5.261E-06, 5.178E-06, 5.063E-06, 4.936E-06, 4.847E-06,
     $ 4.835E-06, 4.892E-06, 5.008E-06, 5.150E-06/
C                                                                       
C     20201 TO 20300 CM-1 DATA.                                         
      DATA (SUN(I),I= 20201, 20300)/                                    
     $ 5.260E-06, 5.314E-06, 5.322E-06, 5.303E-06, 5.276E-06, 5.244E-06,
     $ 5.192E-06, 5.118E-06, 5.014E-06, 4.864E-06, 4.718E-06, 4.648E-06,
     $ 4.645E-06, 4.699E-06, 4.835E-06, 5.012E-06, 5.154E-06, 5.253E-06,
     $ 5.326E-06, 5.360E-06, 5.360E-06, 5.327E-06, 5.251E-06, 5.147E-06,
     $ 5.038E-06, 4.930E-06, 4.876E-06, 4.921E-06, 5.013E-06, 5.109E-06,
     $ 5.200E-06, 5.251E-06, 5.230E-06, 5.140E-06, 4.994E-06, 4.821E-06,
     $ 4.629E-06, 4.417E-06, 4.258E-06, 4.184E-06, 4.146E-06, 4.175E-06,
     $ 4.296E-06, 4.415E-06, 4.507E-06, 4.612E-06, 4.673E-06, 4.674E-06,
     $ 4.674E-06, 4.655E-06, 4.600E-06, 4.565E-06, 4.558E-06, 4.580E-06,
     $ 4.677E-06, 4.821E-06, 4.919E-06, 4.932E-06, 4.872E-06, 4.720E-06,
     $ 4.500E-06, 4.342E-06, 4.316E-06, 4.368E-06, 4.491E-06, 4.699E-06,
     $ 4.911E-06, 5.068E-06, 5.188E-06, 5.274E-06, 5.317E-06, 5.309E-06,
     $ 5.236E-06, 5.116E-06, 4.988E-06, 4.855E-06, 4.756E-06, 4.762E-06,
     $ 4.854E-06, 4.958E-06, 5.052E-06, 5.133E-06, 5.171E-06, 5.155E-06,
     $ 5.124E-06, 5.108E-06, 5.093E-06, 5.068E-06, 5.066E-06, 5.103E-06,
     $ 5.149E-06, 5.186E-06, 5.191E-06, 5.133E-06, 4.999E-06, 4.803E-06,
     $ 4.600E-06, 4.440E-06, 4.316E-06, 4.240E-06/
C                                                                       
C     20301 TO 20400 CM-1 DATA.                                         
      DATA (SUN(I),I= 20301, 20400)/                                    
     $ 4.242E-06, 4.277E-06, 4.334E-06, 4.469E-06, 4.635E-06, 4.751E-06,
     $ 4.827E-06, 4.858E-06, 4.822E-06, 4.778E-06, 4.773E-06, 4.760E-06,
     $ 4.672E-06, 4.489E-06, 4.235E-06, 3.954E-06, 3.742E-06, 3.700E-06,
     $ 3.786E-06, 3.886E-06, 3.948E-06, 3.931E-06, 3.811E-06, 3.681E-06,
     $ 3.640E-06, 3.686E-06, 3.798E-06, 3.975E-06, 4.188E-06, 4.401E-06,
     $ 4.611E-06, 4.822E-06, 4.994E-06, 5.102E-06, 5.145E-06, 5.121E-06,
     $ 5.061E-06, 5.013E-06, 4.974E-06, 4.944E-06, 4.938E-06, 4.924E-06,
     $ 4.880E-06, 4.837E-06, 4.811E-06, 4.791E-06, 4.776E-06, 4.743E-06,
     $ 4.662E-06, 4.550E-06, 4.439E-06, 4.360E-06, 4.345E-06, 4.380E-06,
     $ 4.402E-06, 4.376E-06, 4.297E-06, 4.167E-06, 4.037E-06, 3.983E-06,
     $ 4.035E-06, 4.168E-06, 4.347E-06, 4.530E-06, 4.652E-06, 4.675E-06,
     $ 4.643E-06, 4.602E-06, 4.576E-06, 4.620E-06, 4.751E-06, 4.910E-06,
     $ 5.059E-06, 5.185E-06, 5.265E-06, 5.283E-06, 5.258E-06, 5.214E-06,
     $ 5.143E-06, 5.022E-06, 4.897E-06, 4.814E-06, 4.749E-06, 4.689E-06,
     $ 4.656E-06, 4.621E-06, 4.551E-06, 4.470E-06, 4.445E-06, 4.506E-06,
     $ 4.625E-06, 4.784E-06, 4.966E-06, 5.107E-06, 5.169E-06, 5.181E-06,
     $ 5.155E-06, 5.070E-06, 4.954E-06, 4.851E-06/
C                                                                       
C     20401 TO 20500 CM-1 DATA.                                         
      DATA (SUN(I),I= 20401, 20500)/                                    
     $ 4.759E-06, 4.691E-06, 4.708E-06, 4.800E-06, 4.906E-06, 5.007E-06,
     $ 5.099E-06, 5.150E-06, 5.160E-06, 5.164E-06, 5.182E-06, 5.200E-06,
     $ 5.209E-06, 5.212E-06, 5.209E-06, 5.193E-06, 5.173E-06, 5.162E-06,
     $ 5.157E-06, 5.145E-06, 5.124E-06, 5.105E-06, 5.089E-06, 5.046E-06,
     $ 4.963E-06, 4.858E-06, 4.729E-06, 4.574E-06, 4.452E-06, 4.412E-06,
     $ 4.428E-06, 4.482E-06, 4.526E-06, 4.474E-06, 4.324E-06, 4.101E-06,
     $ 3.803E-06, 3.553E-06, 3.488E-06, 3.556E-06, 3.735E-06, 4.060E-06,
     $ 4.385E-06, 4.559E-06, 4.607E-06, 4.554E-06, 4.410E-06, 4.284E-06,
     $ 4.272E-06, 4.354E-06, 4.483E-06, 4.583E-06, 4.594E-06, 4.525E-06,
     $ 4.401E-06, 4.261E-06, 4.198E-06, 4.227E-06, 4.279E-06, 4.348E-06,
     $ 4.438E-06, 4.487E-06, 4.497E-06, 4.535E-06, 4.601E-06, 4.668E-06,
     $ 4.731E-06, 4.790E-06, 4.829E-06, 4.843E-06, 4.859E-06, 4.891E-06,
     $ 4.905E-06, 4.863E-06, 4.747E-06, 4.572E-06, 4.398E-06, 4.287E-06,
     $ 4.269E-06, 4.371E-06, 4.555E-06, 4.736E-06, 4.873E-06, 4.973E-06,
     $ 5.036E-06, 5.065E-06, 5.085E-06, 5.091E-06, 5.029E-06, 4.876E-06,
     $ 4.682E-06, 4.483E-06, 4.314E-06, 4.267E-06, 4.378E-06, 4.552E-06,
     $ 4.703E-06, 4.788E-06, 4.763E-06, 4.620E-06/
C                                                                       
C     20501 TO 20600 CM-1 DATA.                                         
      DATA (SUN(I),I= 20501, 20600)/                                    
     $ 4.435E-06, 4.301E-06, 4.251E-06, 4.276E-06, 4.366E-06, 4.486E-06,
     $ 4.577E-06, 4.632E-06, 4.657E-06, 4.636E-06, 4.603E-06, 4.603E-06,
     $ 4.622E-06, 4.625E-06, 4.585E-06, 4.483E-06, 4.319E-06, 4.078E-06,
     $ 3.816E-06, 3.652E-06, 3.586E-06, 3.584E-06, 3.697E-06, 3.898E-06,
     $ 4.095E-06, 4.274E-06, 4.427E-06, 4.523E-06, 4.583E-06, 4.617E-06,
     $ 4.620E-06, 4.610E-06, 4.587E-06, 4.539E-06, 4.487E-06, 4.457E-06,
     $ 4.448E-06, 4.471E-06, 4.500E-06, 4.486E-06, 4.444E-06, 4.399E-06,
     $ 4.330E-06, 4.282E-06, 4.310E-06, 4.361E-06, 4.387E-06, 4.397E-06,
     $ 4.364E-06, 4.260E-06, 4.119E-06, 3.993E-06, 3.904E-06, 3.845E-06,
     $ 3.819E-06, 3.822E-06, 3.809E-06, 3.744E-06, 3.618E-06, 3.421E-06,
     $ 3.146E-06, 2.834E-06, 2.549E-06, 2.353E-06, 2.302E-06, 2.405E-06,
     $ 2.601E-06, 2.815E-06, 3.008E-06, 3.153E-06, 3.262E-06, 3.404E-06,
     $ 3.600E-06, 3.818E-06, 4.039E-06, 4.236E-06, 4.368E-06, 4.446E-06,
     $ 4.504E-06, 4.546E-06, 4.579E-06, 4.609E-06, 4.614E-06, 4.577E-06,
     $ 4.477E-06, 4.318E-06, 4.145E-06, 3.994E-06, 3.893E-06, 3.889E-06,
     $ 3.977E-06, 4.097E-06, 4.234E-06, 4.376E-06, 4.492E-06, 4.591E-06,
     $ 4.685E-06, 4.753E-06, 4.790E-06, 4.798E-06/
C                                                                       
C     20601 TO 20700 CM-1 DATA.                                         
      DATA (SUN(I),I= 20601, 20700)/                                    
     $ 4.760E-06, 4.687E-06, 4.617E-06, 4.560E-06, 4.514E-06, 4.505E-06,
     $ 4.542E-06, 4.588E-06, 4.625E-06, 4.668E-06, 4.701E-06, 4.701E-06,
     $ 4.685E-06, 4.667E-06, 4.628E-06, 4.562E-06, 4.497E-06, 4.428E-06,
     $ 4.342E-06, 4.278E-06, 4.268E-06, 4.305E-06, 4.393E-06, 4.536E-06,
     $ 4.692E-06, 4.811E-06, 4.873E-06, 4.892E-06, 4.889E-06, 4.871E-06,
     $ 4.860E-06, 4.877E-06, 4.890E-06, 4.862E-06, 4.816E-06, 4.761E-06,
     $ 4.674E-06, 4.569E-06, 4.482E-06, 4.402E-06, 4.336E-06, 4.329E-06,
     $ 4.386E-06, 4.476E-06, 4.580E-06, 4.674E-06, 4.717E-06, 4.706E-06,
     $ 4.666E-06, 4.593E-06, 4.495E-06, 4.402E-06, 4.312E-06, 4.240E-06,
     $ 4.238E-06, 4.286E-06, 4.341E-06, 4.412E-06, 4.479E-06, 4.500E-06,
     $ 4.504E-06, 4.548E-06, 4.631E-06, 4.726E-06, 4.825E-06, 4.913E-06,
     $ 4.952E-06, 4.920E-06, 4.841E-06, 4.758E-06, 4.688E-06, 4.647E-06,
     $ 4.661E-06, 4.726E-06, 4.792E-06, 4.843E-06, 4.879E-06, 4.891E-06,
     $ 4.895E-06, 4.915E-06, 4.936E-06, 4.930E-06, 4.891E-06, 4.823E-06,
     $ 4.741E-06, 4.675E-06, 4.650E-06, 4.654E-06, 4.653E-06, 4.636E-06,
     $ 4.610E-06, 4.578E-06, 4.574E-06, 4.633E-06, 4.726E-06, 4.811E-06,
     $ 4.855E-06, 4.829E-06, 4.743E-06, 4.630E-06/
C                                                                       
C     20701 TO 20800 CM-1 DATA.                                         
      DATA (SUN(I),I= 20701, 20800)/                                    
     $ 4.540E-06, 4.529E-06, 4.610E-06, 4.739E-06, 4.875E-06, 4.990E-06,
     $ 5.053E-06, 5.049E-06, 4.998E-06, 4.943E-06, 4.899E-06, 4.862E-06,
     $ 4.848E-06, 4.876E-06, 4.920E-06, 4.961E-06, 5.008E-06, 5.038E-06,
     $ 5.018E-06, 4.961E-06, 4.866E-06, 4.704E-06, 4.522E-06, 4.397E-06,
     $ 4.323E-06, 4.318E-06, 4.440E-06, 4.630E-06, 4.792E-06, 4.924E-06,
     $ 5.015E-06, 5.020E-06, 4.962E-06, 4.887E-06, 4.799E-06, 4.714E-06,
     $ 4.676E-06, 4.694E-06, 4.750E-06, 4.837E-06, 4.934E-06, 5.011E-06,
     $ 5.059E-06, 5.077E-06, 5.057E-06, 4.988E-06, 4.865E-06, 4.710E-06,
     $ 4.567E-06, 4.478E-06, 4.479E-06, 4.574E-06, 4.722E-06, 4.869E-06,
     $ 4.986E-06, 5.053E-06, 5.067E-06, 5.045E-06, 5.006E-06, 4.943E-06,
     $ 4.853E-06, 4.762E-06, 4.687E-06, 4.624E-06, 4.588E-06, 4.596E-06,
     $ 4.619E-06, 4.637E-06, 4.661E-06, 4.677E-06, 4.659E-06, 4.626E-06,
     $ 4.601E-06, 4.583E-06, 4.583E-06, 4.629E-06, 4.694E-06, 4.725E-06,
     $ 4.732E-06, 4.719E-06, 4.657E-06, 4.596E-06, 4.593E-06, 4.602E-06,
     $ 4.614E-06, 4.664E-06, 4.707E-06, 4.711E-06, 4.720E-06, 4.723E-06,
     $ 4.697E-06, 4.661E-06, 4.612E-06, 4.562E-06, 4.547E-06, 4.563E-06,
     $ 4.605E-06, 4.686E-06, 4.775E-06, 4.821E-06/
C                                                                       
C     20801 TO 20900 CM-1 DATA.                                         
      DATA (SUN(I),I= 20801, 20900)/                                    
     $ 4.815E-06, 4.776E-06, 4.711E-06, 4.620E-06, 4.550E-06, 4.543E-06,
     $ 4.577E-06, 4.634E-06, 4.729E-06, 4.811E-06, 4.822E-06, 4.787E-06,
     $ 4.732E-06, 4.655E-06, 4.603E-06, 4.626E-06, 4.697E-06, 4.772E-06,
     $ 4.833E-06, 4.852E-06, 4.804E-06, 4.706E-06, 4.600E-06, 4.508E-06,
     $ 4.443E-06, 4.415E-06, 4.420E-06, 4.438E-06, 4.448E-06, 4.446E-06,
     $ 4.433E-06, 4.416E-06, 4.418E-06, 4.466E-06, 4.565E-06, 4.695E-06,
     $ 4.818E-06, 4.907E-06, 4.948E-06, 4.940E-06, 4.906E-06, 4.884E-06,
     $ 4.888E-06, 4.910E-06, 4.946E-06, 4.981E-06, 4.986E-06, 4.955E-06,
     $ 4.900E-06, 4.828E-06, 4.755E-06, 4.704E-06, 4.686E-06, 4.692E-06,
     $ 4.702E-06, 4.683E-06, 4.629E-06, 4.559E-06, 4.494E-06, 4.460E-06,
     $ 4.488E-06, 4.564E-06, 4.641E-06, 4.692E-06, 4.713E-06, 4.722E-06,
     $ 4.731E-06, 4.725E-06, 4.682E-06, 4.598E-06, 4.465E-06, 4.288E-06,
     $ 4.143E-06, 4.106E-06, 4.162E-06, 4.268E-06, 4.425E-06, 4.594E-06,
     $ 4.714E-06, 4.774E-06, 4.770E-06, 4.686E-06, 4.544E-06, 4.377E-06,
     $ 4.228E-06, 4.181E-06, 4.252E-06, 4.375E-06, 4.522E-06, 4.679E-06,
     $ 4.792E-06, 4.855E-06, 4.914E-06, 4.969E-06, 4.973E-06, 4.912E-06,
     $ 4.812E-06, 4.688E-06, 4.565E-06, 4.513E-06/
C                                                                       
C     20901 TO 21000 CM-1 DATA.                                         
      DATA (SUN(I),I= 20901, 21000)/                                    
     $ 4.569E-06, 4.682E-06, 4.799E-06, 4.892E-06, 4.935E-06, 4.919E-06,
     $ 4.871E-06, 4.835E-06, 4.836E-06, 4.847E-06, 4.838E-06, 4.814E-06,
     $ 4.767E-06, 4.695E-06, 4.644E-06, 4.648E-06, 4.692E-06, 4.764E-06,
     $ 4.852E-06, 4.926E-06, 4.968E-06, 4.993E-06, 5.006E-06, 5.001E-06,
     $ 4.980E-06, 4.938E-06, 4.859E-06, 4.761E-06, 4.678E-06, 4.617E-06,
     $ 4.599E-06, 4.650E-06, 4.743E-06, 4.838E-06, 4.924E-06, 4.990E-06,
     $ 5.018E-06, 5.020E-06, 5.010E-06, 4.988E-06, 4.937E-06, 4.842E-06,
     $ 4.727E-06, 4.628E-06, 4.550E-06, 4.524E-06, 4.575E-06, 4.661E-06,
     $ 4.738E-06, 4.796E-06, 4.828E-06, 4.829E-06, 4.812E-06, 4.793E-06,
     $ 4.786E-06, 4.794E-06, 4.813E-06, 4.841E-06, 4.871E-06, 4.887E-06,
     $ 4.845E-06, 4.729E-06, 4.584E-06, 4.441E-06, 4.320E-06, 4.296E-06,
     $ 4.387E-06, 4.507E-06, 4.590E-06, 4.613E-06, 4.567E-06, 4.461E-06,
     $ 4.335E-06, 4.252E-06, 4.248E-06, 4.283E-06, 4.333E-06, 4.421E-06,
     $ 4.515E-06, 4.560E-06, 4.556E-06, 4.526E-06, 4.470E-06, 4.400E-06,
     $ 4.363E-06, 4.374E-06, 4.377E-06, 4.350E-06, 4.323E-06, 4.294E-06,
     $ 4.258E-06, 4.266E-06, 4.345E-06, 4.445E-06, 4.528E-06, 4.619E-06,
     $ 4.724E-06, 4.808E-06, 4.869E-06, 4.931E-06/
C                                                                       
C     21001 TO 21100 CM-1 DATA.                                         
      DATA (SUN(I),I= 21001, 21100)/                                    
     $ 4.959E-06, 4.920E-06, 4.849E-06, 4.781E-06, 4.717E-06, 4.670E-06,
     $ 4.661E-06, 4.665E-06, 4.648E-06, 4.619E-06, 4.603E-06, 4.607E-06,
     $ 4.615E-06, 4.617E-06, 4.599E-06, 4.537E-06, 4.439E-06, 4.368E-06,
     $ 4.371E-06, 4.443E-06, 4.564E-06, 4.689E-06, 4.776E-06, 4.789E-06,
     $ 4.716E-06, 4.613E-06, 4.532E-06, 4.470E-06, 4.465E-06, 4.561E-06,
     $ 4.679E-06, 4.753E-06, 4.804E-06, 4.818E-06, 4.769E-06, 4.713E-06,
     $ 4.707E-06, 4.734E-06, 4.777E-06, 4.839E-06, 4.901E-06, 4.932E-06,
     $ 4.916E-06, 4.856E-06, 4.771E-06, 4.682E-06, 4.609E-06, 4.593E-06,
     $ 4.640E-06, 4.718E-06, 4.789E-06, 4.833E-06, 4.833E-06, 4.788E-06,
     $ 4.723E-06, 4.679E-06, 4.668E-06, 4.676E-06, 4.701E-06, 4.714E-06,
     $ 4.668E-06, 4.577E-06, 4.480E-06, 4.366E-06, 4.259E-06, 4.223E-06,
     $ 4.249E-06, 4.305E-06, 4.407E-06, 4.544E-06, 4.655E-06, 4.722E-06,
     $ 4.755E-06, 4.737E-06, 4.690E-06, 4.652E-06, 4.625E-06, 4.610E-06,
     $ 4.614E-06, 4.608E-06, 4.573E-06, 4.528E-06, 4.481E-06, 4.450E-06,
     $ 4.457E-06, 4.488E-06, 4.536E-06, 4.594E-06, 4.625E-06, 4.614E-06,
     $ 4.569E-06, 4.484E-06, 4.378E-06, 4.293E-06, 4.265E-06, 4.325E-06,
     $ 4.451E-06, 4.569E-06, 4.642E-06, 4.644E-06/
C                                                                       
C     21101 TO 21200 CM-1 DATA.                                         
      DATA (SUN(I),I= 21101, 21200)/                                    
     $ 4.532E-06, 4.345E-06, 4.188E-06, 4.096E-06, 4.052E-06, 4.083E-06,
     $ 4.182E-06, 4.284E-06, 4.362E-06, 4.444E-06, 4.543E-06, 4.635E-06,
     $ 4.703E-06, 4.746E-06, 4.733E-06, 4.632E-06, 4.489E-06, 4.369E-06,
     $ 4.287E-06, 4.274E-06, 4.354E-06, 4.470E-06, 4.557E-06, 4.575E-06,
     $ 4.512E-06, 4.399E-06, 4.278E-06, 4.181E-06, 4.165E-06, 4.248E-06,
     $ 4.356E-06, 4.430E-06, 4.481E-06, 4.500E-06, 4.458E-06, 4.395E-06,
     $ 4.361E-06, 4.339E-06, 4.308E-06, 4.290E-06, 4.289E-06, 4.283E-06,
     $ 4.266E-06, 4.239E-06, 4.192E-06, 4.123E-06, 4.072E-06, 4.090E-06,
     $ 4.163E-06, 4.282E-06, 4.448E-06, 4.610E-06, 4.725E-06, 4.817E-06,
     $ 4.884E-06, 4.901E-06, 4.884E-06, 4.848E-06, 4.796E-06, 4.746E-06,
     $ 4.720E-06, 4.712E-06, 4.697E-06, 4.664E-06, 4.610E-06, 4.524E-06,
     $ 4.428E-06, 4.368E-06, 4.343E-06, 4.327E-06, 4.320E-06, 4.324E-06,
     $ 4.321E-06, 4.318E-06, 4.346E-06, 4.429E-06, 4.555E-06, 4.676E-06,
     $ 4.770E-06, 4.829E-06, 4.838E-06, 4.806E-06, 4.758E-06, 4.712E-06,
     $ 4.677E-06, 4.655E-06, 4.642E-06, 4.654E-06, 4.695E-06, 4.733E-06,
     $ 4.750E-06, 4.745E-06, 4.705E-06, 4.634E-06, 4.540E-06, 4.436E-06,
     $ 4.355E-06, 4.309E-06, 4.288E-06, 4.311E-06/
C                                                                       
C     21201 TO 21300 CM-1 DATA.                                         
      DATA (SUN(I),I= 21201, 21300)/                                    
     $ 4.352E-06, 4.335E-06, 4.256E-06, 4.159E-06, 4.062E-06, 4.010E-06,
     $ 4.070E-06, 4.228E-06, 4.414E-06, 4.587E-06, 4.719E-06, 4.783E-06,
     $ 4.785E-06, 4.755E-06, 4.719E-06, 4.695E-06, 4.702E-06, 4.738E-06,
     $ 4.776E-06, 4.769E-06, 4.706E-06, 4.591E-06, 4.423E-06, 4.262E-06,
     $ 4.167E-06, 4.104E-06, 4.064E-06, 4.072E-06, 4.087E-06, 4.095E-06,
     $ 4.146E-06, 4.212E-06, 4.214E-06, 4.160E-06, 4.091E-06, 4.009E-06,
     $ 3.942E-06, 3.981E-06, 4.134E-06, 4.300E-06, 4.423E-06, 4.502E-06,
     $ 4.504E-06, 4.419E-06, 4.324E-06, 4.281E-06, 4.285E-06, 4.323E-06,
     $ 4.393E-06, 4.463E-06, 4.503E-06, 4.473E-06, 4.350E-06, 4.183E-06,
     $ 4.017E-06, 3.859E-06, 3.783E-06, 3.863E-06, 4.023E-06, 4.173E-06,
     $ 4.305E-06, 4.388E-06, 4.390E-06, 4.363E-06, 4.349E-06, 4.350E-06,
     $ 4.369E-06, 4.397E-06, 4.415E-06, 4.436E-06, 4.466E-06, 4.469E-06,
     $ 4.426E-06, 4.340E-06, 4.227E-06, 4.125E-06, 4.076E-06, 4.093E-06,
     $ 4.170E-06, 4.268E-06, 4.336E-06, 4.378E-06, 4.413E-06, 4.447E-06,
     $ 4.497E-06, 4.564E-06, 4.621E-06, 4.656E-06, 4.680E-06, 4.700E-06,
     $ 4.724E-06, 4.757E-06, 4.784E-06, 4.788E-06, 4.772E-06, 4.748E-06,
     $ 4.721E-06, 4.710E-06, 4.728E-06, 4.750E-06/
C                                                                       
C     21301 TO 21400 CM-1 DATA.                                         
      DATA (SUN(I),I= 21301, 21400)/                                    
     $ 4.747E-06, 4.729E-06, 4.697E-06, 4.625E-06, 4.517E-06, 4.401E-06,
     $ 4.289E-06, 4.197E-06, 4.155E-06, 4.181E-06, 4.266E-06, 4.363E-06,
     $ 4.442E-06, 4.485E-06, 4.488E-06, 4.480E-06, 4.487E-06, 4.501E-06,
     $ 4.519E-06, 4.540E-06, 4.537E-06, 4.506E-06, 4.444E-06, 4.365E-06,
     $ 4.309E-06, 4.281E-06, 4.272E-06, 4.306E-06, 4.375E-06, 4.422E-06,
     $ 4.446E-06, 4.456E-06, 4.444E-06, 4.434E-06, 4.441E-06, 4.448E-06,
     $ 4.442E-06, 4.429E-06, 4.417E-06, 4.391E-06, 4.334E-06, 4.289E-06,
     $ 4.284E-06, 4.279E-06, 4.286E-06, 4.349E-06, 4.416E-06, 4.431E-06,
     $ 4.402E-06, 4.360E-06, 4.327E-06, 4.324E-06, 4.374E-06, 4.486E-06,
     $ 4.588E-06, 4.607E-06, 4.545E-06, 4.419E-06, 4.259E-06, 4.125E-06,
     $ 4.064E-06, 4.065E-06, 4.086E-06, 4.105E-06, 4.129E-06, 4.166E-06,
     $ 4.235E-06, 4.358E-06, 4.505E-06, 4.633E-06, 4.726E-06, 4.782E-06,
     $ 4.808E-06, 4.826E-06, 4.836E-06, 4.826E-06, 4.800E-06, 4.757E-06,
     $ 4.696E-06, 4.641E-06, 4.613E-06, 4.600E-06, 4.587E-06, 4.581E-06,
     $ 4.587E-06, 4.602E-06, 4.606E-06, 4.555E-06, 4.448E-06, 4.314E-06,
     $ 4.160E-06, 4.039E-06, 4.048E-06, 4.183E-06, 4.362E-06, 4.547E-06,
     $ 4.706E-06, 4.786E-06, 4.789E-06, 4.756E-06/
C                                                                       
C     21401 TO 21500 CM-1 DATA.                                         
      DATA (SUN(I),I= 21401, 21500)/                                    
     $ 4.687E-06, 4.583E-06, 4.482E-06, 4.399E-06, 4.340E-06, 4.318E-06,
     $ 4.319E-06, 4.319E-06, 4.297E-06, 4.240E-06, 4.162E-06, 4.085E-06,
     $ 3.988E-06, 3.850E-06, 3.695E-06, 3.575E-06, 3.508E-06, 3.486E-06,
     $ 3.558E-06, 3.726E-06, 3.894E-06, 4.026E-06, 4.152E-06, 4.250E-06,
     $ 4.310E-06, 4.360E-06, 4.402E-06, 4.442E-06, 4.482E-06, 4.498E-06,
     $ 4.502E-06, 4.516E-06, 4.510E-06, 4.469E-06, 4.416E-06, 4.359E-06,
     $ 4.293E-06, 4.247E-06, 4.242E-06, 4.251E-06, 4.259E-06, 4.262E-06,
     $ 4.234E-06, 4.191E-06, 4.185E-06, 4.222E-06, 4.308E-06, 4.455E-06,
     $ 4.619E-06, 4.756E-06, 4.863E-06, 4.929E-06, 4.948E-06, 4.937E-06,
     $ 4.908E-06, 4.863E-06, 4.805E-06, 4.753E-06, 4.713E-06, 4.674E-06,
     $ 4.630E-06, 4.568E-06, 4.476E-06, 4.361E-06, 4.231E-06, 4.111E-06,
     $ 4.046E-06, 4.024E-06, 4.026E-06, 4.087E-06, 4.194E-06, 4.290E-06,
     $ 4.348E-06, 4.344E-06, 4.254E-06, 4.111E-06, 3.961E-06, 3.872E-06,
     $ 3.908E-06, 4.042E-06, 4.206E-06, 4.368E-06, 4.511E-06, 4.606E-06,
     $ 4.635E-06, 4.616E-06, 4.579E-06, 4.505E-06, 4.391E-06, 4.295E-06,
     $ 4.230E-06, 4.157E-06, 4.101E-06, 4.097E-06, 4.120E-06, 4.156E-06,
     $ 4.205E-06, 4.241E-06, 4.225E-06, 4.147E-06/
C                                                                       
C     21501 TO 21600 CM-1 DATA.                                         
      DATA (SUN(I),I= 21501, 21600)/                                    
     $ 4.034E-06, 3.920E-06, 3.832E-06, 3.796E-06, 3.843E-06, 3.954E-06,
     $ 4.071E-06, 4.169E-06, 4.244E-06, 4.273E-06, 4.281E-06, 4.311E-06,
     $ 4.326E-06, 4.310E-06, 4.291E-06, 4.255E-06, 4.217E-06, 4.249E-06,
     $ 4.335E-06, 4.409E-06, 4.460E-06, 4.473E-06, 4.432E-06, 4.368E-06,
     $ 4.316E-06, 4.286E-06, 4.290E-06, 4.320E-06, 4.358E-06, 4.422E-06,
     $ 4.522E-06, 4.624E-06, 4.710E-06, 4.785E-06, 4.841E-06, 4.870E-06,
     $ 4.889E-06, 4.908E-06, 4.922E-06, 4.921E-06, 4.885E-06, 4.800E-06,
     $ 4.663E-06, 4.481E-06, 4.279E-06, 4.104E-06, 4.002E-06, 3.994E-06,
     $ 4.064E-06, 4.143E-06, 4.168E-06, 4.110E-06, 3.963E-06, 3.775E-06,
     $ 3.654E-06, 3.660E-06, 3.778E-06, 3.970E-06, 4.151E-06, 4.237E-06,
     $ 4.209E-06, 4.097E-06, 3.961E-06, 3.892E-06, 3.934E-06, 4.067E-06,
     $ 4.254E-06, 4.443E-06, 4.571E-06, 4.616E-06, 4.602E-06, 4.556E-06,
     $ 4.505E-06, 4.448E-06, 4.373E-06, 4.286E-06, 4.179E-06, 4.056E-06,
     $ 3.998E-06, 4.043E-06, 4.141E-06, 4.283E-06, 4.453E-06, 4.574E-06,
     $ 4.624E-06, 4.633E-06, 4.592E-06, 4.492E-06, 4.363E-06, 4.208E-06,
     $ 4.020E-06, 3.857E-06, 3.788E-06, 3.801E-06, 3.880E-06, 4.038E-06,
     $ 4.230E-06, 4.385E-06, 4.486E-06, 4.538E-06/
C                                                                       
C     21601 TO 21700 CM-1 DATA.                                         
      DATA (SUN(I),I= 21601, 21700)/                                    
     $ 4.547E-06, 4.517E-06, 4.459E-06, 4.405E-06, 4.364E-06, 4.310E-06,
     $ 4.260E-06, 4.235E-06, 4.222E-06, 4.223E-06, 4.252E-06, 4.290E-06,
     $ 4.313E-06, 4.307E-06, 4.291E-06, 4.305E-06, 4.343E-06, 4.398E-06,
     $ 4.493E-06, 4.586E-06, 4.620E-06, 4.612E-06, 4.573E-06, 4.504E-06,
     $ 4.436E-06, 4.389E-06, 4.370E-06, 4.391E-06, 4.441E-06, 4.507E-06,
     $ 4.580E-06, 4.623E-06, 4.609E-06, 4.555E-06, 4.478E-06, 4.394E-06,
     $ 4.324E-06, 4.277E-06, 4.245E-06, 4.194E-06, 4.093E-06, 3.971E-06,
     $ 3.870E-06, 3.774E-06, 3.702E-06, 3.725E-06, 3.817E-06, 3.907E-06,
     $ 4.020E-06, 4.166E-06, 4.269E-06, 4.315E-06, 4.340E-06, 4.331E-06,
     $ 4.297E-06, 4.281E-06, 4.312E-06, 4.408E-06, 4.544E-06, 4.664E-06,
     $ 4.735E-06, 4.728E-06, 4.638E-06, 4.508E-06, 4.371E-06, 4.231E-06,
     $ 4.120E-06, 4.053E-06, 4.009E-06, 4.008E-06, 4.107E-06, 4.279E-06,
     $ 4.442E-06, 4.568E-06, 4.608E-06, 4.496E-06, 4.288E-06, 4.084E-06,
     $ 3.924E-06, 3.878E-06, 3.990E-06, 4.165E-06, 4.337E-06, 4.507E-06,
     $ 4.623E-06, 4.671E-06, 4.715E-06, 4.767E-06, 4.806E-06, 4.846E-06,
     $ 4.881E-06, 4.874E-06, 4.803E-06, 4.689E-06, 4.560E-06, 4.425E-06,
     $ 4.331E-06, 4.340E-06, 4.413E-06, 4.476E-06/
C                                                                       
C     21701 TO 21800 CM-1 DATA.                                         
      DATA (SUN(I),I= 21701, 21800)/                                    
     $ 4.516E-06, 4.519E-06, 4.460E-06, 4.369E-06, 4.279E-06, 4.193E-06,
     $ 4.123E-06, 4.071E-06, 4.041E-06, 4.076E-06, 4.180E-06, 4.301E-06,
     $ 4.409E-06, 4.477E-06, 4.451E-06, 4.343E-06, 4.222E-06, 4.118E-06,
     $ 4.059E-06, 4.092E-06, 4.191E-06, 4.280E-06, 4.327E-06, 4.331E-06,
     $ 4.266E-06, 4.124E-06, 3.964E-06, 3.835E-06, 3.752E-06, 3.746E-06,
     $ 3.843E-06, 4.012E-06, 4.218E-06, 4.422E-06, 4.561E-06, 4.611E-06,
     $ 4.561E-06, 4.421E-06, 4.265E-06, 4.156E-06, 4.111E-06, 4.165E-06,
     $ 4.306E-06, 4.448E-06, 4.540E-06, 4.566E-06, 4.513E-06, 4.400E-06,
     $ 4.268E-06, 4.137E-06, 4.021E-06, 3.939E-06, 3.909E-06, 3.924E-06,
     $ 3.993E-06, 4.124E-06, 4.268E-06, 4.388E-06, 4.477E-06, 4.521E-06,
     $ 4.531E-06, 4.554E-06, 4.555E-06, 4.489E-06, 4.391E-06, 4.258E-06,
     $ 4.069E-06, 3.928E-06, 3.913E-06, 3.957E-06, 4.027E-06, 4.124E-06,
     $ 4.195E-06, 4.236E-06, 4.297E-06, 4.362E-06, 4.422E-06, 4.485E-06,
     $ 4.522E-06, 4.530E-06, 4.557E-06, 4.621E-06, 4.683E-06, 4.710E-06,
     $ 4.689E-06, 4.615E-06, 4.478E-06, 4.319E-06, 4.207E-06, 4.144E-06,
     $ 4.112E-06, 4.138E-06, 4.200E-06, 4.247E-06, 4.272E-06, 4.249E-06,
     $ 4.170E-06, 4.086E-06, 4.029E-06, 4.031E-06/
C                                                                       
C     21801 TO 21900 CM-1 DATA.                                         
      DATA (SUN(I),I= 21801, 21900)/                                    
     $ 4.131E-06, 4.282E-06, 4.419E-06, 4.518E-06, 4.524E-06, 4.420E-06,
     $ 4.274E-06, 4.118E-06, 3.963E-06, 3.869E-06, 3.870E-06, 3.923E-06,
     $ 3.992E-06, 4.070E-06, 4.138E-06, 4.134E-06, 4.023E-06, 3.869E-06,
     $ 3.749E-06, 3.667E-06, 3.645E-06, 3.736E-06, 3.868E-06, 3.925E-06,
     $ 3.913E-06, 3.891E-06, 3.872E-06, 3.886E-06, 3.989E-06, 4.135E-06,
     $ 4.238E-06, 4.292E-06, 4.306E-06, 4.273E-06, 4.256E-06, 4.310E-06,
     $ 4.399E-06, 4.494E-06, 4.589E-06, 4.635E-06, 4.594E-06, 4.514E-06,
     $ 4.433E-06, 4.353E-06, 4.316E-06, 4.366E-06, 4.464E-06, 4.556E-06,
     $ 4.624E-06, 4.653E-06, 4.621E-06, 4.541E-06, 4.480E-06, 4.476E-06,
     $ 4.503E-06, 4.552E-06, 4.628E-06, 4.689E-06, 4.713E-06, 4.725E-06,
     $ 4.700E-06, 4.597E-06, 4.438E-06, 4.244E-06, 4.009E-06, 3.790E-06,
     $ 3.670E-06, 3.662E-06, 3.739E-06, 3.896E-06, 4.119E-06, 4.345E-06,
     $ 4.515E-06, 4.626E-06, 4.692E-06, 4.704E-06, 4.660E-06, 4.599E-06,
     $ 4.549E-06, 4.492E-06, 4.439E-06, 4.433E-06, 4.477E-06, 4.547E-06,
     $ 4.628E-06, 4.685E-06, 4.684E-06, 4.617E-06, 4.501E-06, 4.386E-06,
     $ 4.315E-06, 4.260E-06, 4.189E-06, 4.112E-06, 4.023E-06, 3.916E-06,
     $ 3.863E-06, 3.931E-06, 4.084E-06, 4.248E-06/
C                                                                       
C     21901 TO 22000 CM-1 DATA.                                         
      DATA (SUN(I),I= 21901, 22000)/                                    
     $ 4.378E-06, 4.434E-06, 4.405E-06, 4.320E-06, 4.242E-06, 4.229E-06,
     $ 4.286E-06, 4.378E-06, 4.486E-06, 4.594E-06, 4.678E-06, 4.736E-06,
     $ 4.766E-06, 4.766E-06, 4.741E-06, 4.697E-06, 4.637E-06, 4.574E-06,
     $ 4.500E-06, 4.414E-06, 4.333E-06, 4.266E-06, 4.238E-06, 4.287E-06,
     $ 4.381E-06, 4.447E-06, 4.475E-06, 4.458E-06, 4.370E-06, 4.274E-06,
     $ 4.260E-06, 4.312E-06, 4.400E-06, 4.522E-06, 4.627E-06, 4.667E-06,
     $ 4.634E-06, 4.512E-06, 4.302E-06, 4.050E-06, 3.789E-06, 3.569E-06,
     $ 3.463E-06, 3.483E-06, 3.593E-06, 3.754E-06, 3.906E-06, 3.988E-06,
     $ 4.003E-06, 3.990E-06, 3.970E-06, 3.988E-06, 4.097E-06, 4.272E-06,
     $ 4.430E-06, 4.532E-06, 4.579E-06, 4.560E-06, 4.481E-06, 4.411E-06,
     $ 4.414E-06, 4.456E-06, 4.496E-06, 4.550E-06, 4.615E-06, 4.655E-06,
     $ 4.681E-06, 4.696E-06, 4.627E-06, 4.431E-06, 4.156E-06, 3.858E-06,
     $ 3.579E-06, 3.420E-06, 3.466E-06, 3.650E-06, 3.854E-06, 4.035E-06,
     $ 4.186E-06, 4.257E-06, 4.233E-06, 4.184E-06, 4.158E-06, 4.130E-06,
     $ 4.095E-06, 4.095E-06, 4.134E-06, 4.173E-06, 4.187E-06, 4.157E-06,
     $ 4.080E-06, 3.984E-06, 3.875E-06, 3.755E-06, 3.690E-06, 3.700E-06,
     $ 3.733E-06, 3.812E-06, 3.977E-06, 4.158E-06/
C                                                                       
C     22001 TO 22100 CM-1 DATA.                                         
      DATA (SUN(I),I= 22001, 22100)/                                    
     $ 4.317E-06, 4.480E-06, 4.604E-06, 4.641E-06, 4.619E-06, 4.559E-06,
     $ 4.468E-06, 4.368E-06, 4.272E-06, 4.185E-06, 4.108E-06, 4.022E-06,
     $ 3.929E-06, 3.867E-06, 3.849E-06, 3.864E-06, 3.916E-06, 4.016E-06,
     $ 4.141E-06, 4.255E-06, 4.342E-06, 4.402E-06, 4.432E-06, 4.433E-06,
     $ 4.431E-06, 4.447E-06, 4.486E-06, 4.546E-06, 4.610E-06, 4.664E-06,
     $ 4.707E-06, 4.740E-06, 4.757E-06, 4.743E-06, 4.661E-06, 4.471E-06,
     $ 4.174E-06, 3.815E-06, 3.470E-06, 3.231E-06, 3.160E-06, 3.246E-06,
     $ 3.433E-06, 3.628E-06, 3.744E-06, 3.783E-06, 3.789E-06, 3.745E-06,
     $ 3.663E-06, 3.639E-06, 3.674E-06, 3.684E-06, 3.718E-06, 3.860E-06,
     $ 4.040E-06, 4.176E-06, 4.288E-06, 4.350E-06, 4.262E-06, 4.025E-06,
     $ 3.741E-06, 3.491E-06, 3.322E-06, 3.313E-06, 3.489E-06, 3.765E-06,
     $ 4.037E-06, 4.246E-06, 4.342E-06, 4.291E-06, 4.098E-06, 3.820E-06,
     $ 3.543E-06, 3.308E-06, 3.159E-06, 3.181E-06, 3.345E-06, 3.525E-06,
     $ 3.669E-06, 3.759E-06, 3.730E-06, 3.606E-06, 3.499E-06, 3.450E-06,
     $ 3.469E-06, 3.601E-06, 3.819E-06, 4.010E-06, 4.127E-06, 4.176E-06,
     $ 4.131E-06, 4.034E-06, 3.999E-06, 4.056E-06, 4.166E-06, 4.309E-06,
     $ 4.435E-06, 4.500E-06, 4.498E-06, 4.402E-06/
C                                                                       
C     22101 TO 22200 CM-1 DATA.                                         
      DATA (SUN(I),I= 22101, 22200)/                                    
     $ 4.228E-06, 4.046E-06, 3.869E-06, 3.714E-06, 3.670E-06, 3.764E-06,
     $ 3.918E-06, 4.088E-06, 4.276E-06, 4.439E-06, 4.538E-06, 4.578E-06,
     $ 4.557E-06, 4.475E-06, 4.355E-06, 4.233E-06, 4.168E-06, 4.207E-06,
     $ 4.309E-06, 4.382E-06, 4.388E-06, 4.305E-06, 4.118E-06, 3.897E-06,
     $ 3.731E-06, 3.640E-06, 3.638E-06, 3.728E-06, 3.859E-06, 4.012E-06,
     $ 4.185E-06, 4.332E-06, 4.438E-06, 4.523E-06, 4.568E-06, 4.552E-06,
     $ 4.492E-06, 4.412E-06, 4.319E-06, 4.231E-06, 4.182E-06, 4.176E-06,
     $ 4.183E-06, 4.191E-06, 4.202E-06, 4.235E-06, 4.306E-06, 4.384E-06,
     $ 4.440E-06, 4.476E-06, 4.474E-06, 4.420E-06, 4.365E-06, 4.357E-06,
     $ 4.369E-06, 4.382E-06, 4.404E-06, 4.412E-06, 4.374E-06, 4.321E-06,
     $ 4.281E-06, 4.245E-06, 4.237E-06, 4.294E-06, 4.383E-06, 4.459E-06,
     $ 4.531E-06, 4.599E-06, 4.635E-06, 4.629E-06, 4.587E-06, 4.519E-06,
     $ 4.438E-06, 4.353E-06, 4.312E-06, 4.359E-06, 4.451E-06, 4.537E-06,
     $ 4.610E-06, 4.657E-06, 4.658E-06, 4.635E-06, 4.613E-06, 4.600E-06,
     $ 4.591E-06, 4.578E-06, 4.559E-06, 4.531E-06, 4.498E-06, 4.469E-06,
     $ 4.451E-06, 4.465E-06, 4.527E-06, 4.612E-06, 4.692E-06, 4.763E-06,
     $ 4.812E-06, 4.824E-06, 4.799E-06, 4.735E-06/
C                                                                       
C     22201 TO 22300 CM-1 DATA.                                         
      DATA (SUN(I),I= 22201, 22300)/                                    
     $ 4.628E-06, 4.492E-06, 4.355E-06, 4.246E-06, 4.169E-06, 4.115E-06,
     $ 4.078E-06, 4.053E-06, 4.034E-06, 4.045E-06, 4.124E-06, 4.242E-06,
     $ 4.347E-06, 4.437E-06, 4.519E-06, 4.559E-06, 4.547E-06, 4.495E-06,
     $ 4.402E-06, 4.271E-06, 4.139E-06, 4.053E-06, 4.043E-06, 4.112E-06,
     $ 4.219E-06, 4.314E-06, 4.352E-06, 4.327E-06, 4.267E-06, 4.175E-06,
     $ 4.060E-06, 3.981E-06, 3.950E-06, 3.898E-06, 3.839E-06, 3.845E-06,
     $ 3.880E-06, 3.867E-06, 3.833E-06, 3.802E-06, 3.718E-06, 3.599E-06,
     $ 3.556E-06, 3.611E-06, 3.707E-06, 3.845E-06, 4.000E-06, 4.101E-06,
     $ 4.172E-06, 4.256E-06, 4.329E-06, 4.393E-06, 4.461E-06, 4.480E-06,
     $ 4.437E-06, 4.364E-06, 4.256E-06, 4.124E-06, 4.027E-06, 3.957E-06,
     $ 3.868E-06, 3.790E-06, 3.730E-06, 3.643E-06, 3.547E-06, 3.485E-06,
     $ 3.459E-06, 3.487E-06, 3.569E-06, 3.671E-06, 3.787E-06, 3.902E-06,
     $ 3.957E-06, 3.961E-06, 3.979E-06, 4.005E-06, 4.028E-06, 4.089E-06,
     $ 4.200E-06, 4.312E-06, 4.413E-06, 4.491E-06, 4.499E-06, 4.437E-06,
     $ 4.344E-06, 4.244E-06, 4.188E-06, 4.215E-06, 4.269E-06, 4.283E-06,
     $ 4.258E-06, 4.190E-06, 4.083E-06, 4.014E-06, 4.052E-06, 4.148E-06,
     $ 4.236E-06, 4.300E-06, 4.284E-06, 4.120E-06/
C                                                                       
C     22301 TO 22400 CM-1 DATA.                                         
      DATA (SUN(I),I= 22301, 22400)/                                    
     $ 3.886E-06, 3.681E-06, 3.495E-06, 3.359E-06, 3.340E-06, 3.390E-06,
     $ 3.451E-06, 3.553E-06, 3.683E-06, 3.779E-06, 3.813E-06, 3.775E-06,
     $ 3.658E-06, 3.511E-06, 3.433E-06, 3.477E-06, 3.639E-06, 3.905E-06,
     $ 4.200E-06, 4.428E-06, 4.565E-06, 4.627E-06, 4.630E-06, 4.603E-06,
     $ 4.586E-06, 4.593E-06, 4.589E-06, 4.536E-06, 4.448E-06, 4.299E-06,
     $ 4.050E-06, 3.796E-06, 3.630E-06, 3.530E-06, 3.540E-06, 3.719E-06,
     $ 3.947E-06, 4.118E-06, 4.260E-06, 4.357E-06, 4.374E-06, 4.377E-06,
     $ 4.418E-06, 4.466E-06, 4.497E-06, 4.500E-06, 4.452E-06, 4.349E-06,
     $ 4.222E-06, 4.112E-06, 4.064E-06, 4.095E-06, 4.176E-06, 4.261E-06,
     $ 4.315E-06, 4.309E-06, 4.249E-06, 4.166E-06, 4.063E-06, 3.955E-06,
     $ 3.873E-06, 3.816E-06, 3.757E-06, 3.697E-06, 3.648E-06, 3.592E-06,
     $ 3.522E-06, 3.467E-06, 3.476E-06, 3.554E-06, 3.663E-06, 3.795E-06,
     $ 3.975E-06, 4.176E-06, 4.340E-06, 4.445E-06, 4.459E-06, 4.329E-06,
     $ 4.077E-06, 3.801E-06, 3.580E-06, 3.478E-06, 3.548E-06, 3.736E-06,
     $ 3.940E-06, 4.106E-06, 4.183E-06, 4.129E-06, 3.992E-06, 3.850E-06,
     $ 3.752E-06, 3.756E-06, 3.869E-06, 4.030E-06, 4.183E-06, 4.293E-06,
     $ 4.337E-06, 4.319E-06, 4.268E-06, 4.189E-06/
C                                                                       
C     22401 TO 22500 CM-1 DATA.                                         
      DATA (SUN(I),I= 22401, 22500)/                                    
     $ 4.068E-06, 3.879E-06, 3.627E-06, 3.356E-06, 3.106E-06, 2.928E-06,
     $ 2.880E-06, 2.978E-06, 3.159E-06, 3.369E-06, 3.580E-06, 3.733E-06,
     $ 3.796E-06, 3.814E-06, 3.792E-06, 3.696E-06, 3.578E-06, 3.474E-06,
     $ 3.359E-06, 3.279E-06, 3.295E-06, 3.355E-06, 3.393E-06, 3.423E-06,
     $ 3.474E-06, 3.528E-06, 3.559E-06, 3.611E-06, 3.704E-06, 3.768E-06,
     $ 3.759E-06, 3.706E-06, 3.642E-06, 3.560E-06, 3.447E-06, 3.333E-06,
     $ 3.242E-06, 3.110E-06, 2.927E-06, 2.793E-06, 2.767E-06, 2.848E-06,
     $ 3.051E-06, 3.347E-06, 3.622E-06, 3.795E-06, 3.870E-06, 3.863E-06,
     $ 3.799E-06, 3.751E-06, 3.761E-06, 3.810E-06, 3.874E-06, 3.948E-06,
     $ 4.026E-06, 4.079E-06, 4.082E-06, 4.054E-06, 3.987E-06, 3.848E-06,
     $ 3.679E-06, 3.543E-06, 3.466E-06, 3.489E-06, 3.603E-06, 3.744E-06,
     $ 3.890E-06, 4.019E-06, 4.091E-06, 4.146E-06, 4.238E-06, 4.305E-06,
     $ 4.283E-06, 4.212E-06, 4.094E-06, 3.887E-06, 3.670E-06, 3.555E-06,
     $ 3.513E-06, 3.522E-06, 3.633E-06, 3.826E-06, 4.021E-06, 4.187E-06,
     $ 4.316E-06, 4.389E-06, 4.410E-06, 4.401E-06, 4.380E-06, 4.358E-06,
     $ 4.316E-06, 4.214E-06, 4.057E-06, 3.906E-06, 3.764E-06, 3.608E-06,
     $ 3.495E-06, 3.447E-06, 3.373E-06, 3.260E-06/
C                                                                       
C     22501 TO 22600 CM-1 DATA.                                         
      DATA (SUN(I),I= 22501, 22600)/                                    
     $ 3.187E-06, 3.162E-06, 3.142E-06, 3.155E-06, 3.264E-06, 3.426E-06,
     $ 3.564E-06, 3.693E-06, 3.834E-06, 3.917E-06, 3.918E-06, 3.896E-06,
     $ 3.859E-06, 3.813E-06, 3.815E-06, 3.868E-06, 3.954E-06, 4.092E-06,
     $ 4.240E-06, 4.322E-06, 4.350E-06, 4.338E-06, 4.256E-06, 4.144E-06,
     $ 4.092E-06, 4.101E-06, 4.118E-06, 4.135E-06, 4.139E-06, 4.084E-06,
     $ 3.958E-06, 3.839E-06, 3.767E-06, 3.701E-06, 3.650E-06, 3.632E-06,
     $ 3.548E-06, 3.378E-06, 3.232E-06, 3.123E-06, 3.062E-06, 3.157E-06,
     $ 3.383E-06, 3.595E-06, 3.747E-06, 3.808E-06, 3.737E-06, 3.616E-06,
     $ 3.541E-06, 3.525E-06, 3.578E-06, 3.692E-06, 3.797E-06, 3.880E-06,
     $ 3.964E-06, 4.048E-06, 4.141E-06, 4.236E-06, 4.273E-06, 4.209E-06,
     $ 4.037E-06, 3.755E-06, 3.412E-06, 3.118E-06, 2.951E-06, 2.925E-06,
     $ 3.031E-06, 3.238E-06, 3.476E-06, 3.681E-06, 3.861E-06, 4.028E-06,
     $ 4.147E-06, 4.203E-06, 4.214E-06, 4.145E-06, 3.960E-06, 3.721E-06,
     $ 3.515E-06, 3.373E-06, 3.349E-06, 3.488E-06, 3.716E-06, 3.926E-06,
     $ 4.059E-06, 4.062E-06, 3.945E-06, 3.804E-06, 3.694E-06, 3.656E-06,
     $ 3.733E-06, 3.867E-06, 3.956E-06, 3.987E-06, 3.974E-06, 3.912E-06,
     $ 3.834E-06, 3.785E-06, 3.769E-06, 3.732E-06/
C                                                                       
C     22601 TO 22700 CM-1 DATA.                                         
      DATA (SUN(I),I= 22601, 22700)/                                    
     $ 3.639E-06, 3.537E-06, 3.464E-06, 3.408E-06, 3.405E-06, 3.486E-06,
     $ 3.586E-06, 3.678E-06, 3.797E-06, 3.935E-06, 4.072E-06, 4.213E-06,
     $ 4.333E-06, 4.382E-06, 4.357E-06, 4.294E-06, 4.222E-06, 4.155E-06,
     $ 4.139E-06, 4.197E-06, 4.277E-06, 4.336E-06, 4.378E-06, 4.389E-06,
     $ 4.335E-06, 4.221E-06, 4.095E-06, 3.973E-06, 3.838E-06, 3.710E-06,
     $ 3.629E-06, 3.585E-06, 3.567E-06, 3.600E-06, 3.687E-06, 3.780E-06,
     $ 3.822E-06, 3.759E-06, 3.544E-06, 3.195E-06, 2.817E-06, 2.518E-06,
     $ 2.369E-06, 2.428E-06, 2.663E-06, 2.954E-06, 3.209E-06, 3.410E-06,
     $ 3.564E-06, 3.672E-06, 3.765E-06, 3.880E-06, 3.996E-06, 4.064E-06,
     $ 4.080E-06, 4.064E-06, 4.041E-06, 4.034E-06, 4.035E-06, 4.049E-06,
     $ 4.085E-06, 4.101E-06, 4.081E-06, 4.068E-06, 4.066E-06, 4.040E-06,
     $ 4.008E-06, 3.979E-06, 3.922E-06, 3.843E-06, 3.783E-06, 3.725E-06,
     $ 3.634E-06, 3.533E-06, 3.457E-06, 3.359E-06, 3.226E-06, 3.150E-06,
     $ 3.160E-06, 3.199E-06, 3.280E-06, 3.435E-06, 3.599E-06, 3.709E-06,
     $ 3.767E-06, 3.783E-06, 3.776E-06, 3.759E-06, 3.728E-06, 3.678E-06,
     $ 3.565E-06, 3.323E-06, 2.966E-06, 2.562E-06, 2.191E-06, 1.962E-06,
     $ 1.962E-06, 2.183E-06, 2.540E-06, 2.936E-06/
C                                                                       
C     22701 TO 22800 CM-1 DATA.                                         
      DATA (SUN(I),I= 22701, 22800)/                                    
     $ 3.291E-06, 3.547E-06, 3.698E-06, 3.795E-06, 3.893E-06, 4.010E-06,
     $ 4.139E-06, 4.231E-06, 4.209E-06, 4.046E-06, 3.778E-06, 3.453E-06,
     $ 3.166E-06, 3.020E-06, 3.012E-06, 3.075E-06, 3.144E-06, 3.153E-06,
     $ 3.102E-06, 3.057E-06, 3.047E-06, 3.112E-06, 3.286E-06, 3.504E-06,
     $ 3.680E-06, 3.793E-06, 3.835E-06, 3.829E-06, 3.823E-06, 3.833E-06,
     $ 3.865E-06, 3.898E-06, 3.878E-06, 3.803E-06, 3.711E-06, 3.615E-06,
     $ 3.552E-06, 3.554E-06, 3.584E-06, 3.600E-06, 3.583E-06, 3.498E-06,
     $ 3.330E-06, 3.140E-06, 3.011E-06, 2.990E-06, 3.099E-06, 3.298E-06,
     $ 3.479E-06, 3.561E-06, 3.541E-06, 3.460E-06, 3.390E-06, 3.402E-06,
     $ 3.515E-06, 3.670E-06, 3.788E-06, 3.831E-06, 3.787E-06, 3.667E-06,
     $ 3.533E-06, 3.454E-06, 3.426E-06, 3.432E-06, 3.453E-06, 3.433E-06,
     $ 3.352E-06, 3.249E-06, 3.140E-06, 3.044E-06, 2.998E-06, 2.975E-06,
     $ 2.954E-06, 2.981E-06, 3.067E-06, 3.176E-06, 3.295E-06, 3.429E-06,
     $ 3.529E-06, 3.534E-06, 3.466E-06, 3.386E-06, 3.291E-06, 3.187E-06,
     $ 3.130E-06, 3.149E-06, 3.220E-06, 3.314E-06, 3.427E-06, 3.561E-06,
     $ 3.676E-06, 3.711E-06, 3.652E-06, 3.509E-06, 3.259E-06, 2.912E-06,
     $ 2.571E-06, 2.311E-06, 2.130E-06, 2.033E-06/
C                                                                       
C     22801 TO 22900 CM-1 DATA.                                         
      DATA (SUN(I),I= 22801, 22900)/                                    
     $ 1.991E-06, 1.922E-06, 1.787E-06, 1.613E-06, 1.433E-06, 1.309E-06,
     $ 1.317E-06, 1.476E-06, 1.756E-06, 2.127E-06, 2.555E-06, 2.989E-06,
     $ 3.384E-06, 3.711E-06, 3.946E-06, 4.060E-06, 4.043E-06, 3.940E-06,
     $ 3.798E-06, 3.647E-06, 3.555E-06, 3.565E-06, 3.637E-06, 3.727E-06,
     $ 3.824E-06, 3.890E-06, 3.903E-06, 3.880E-06, 3.840E-06, 3.812E-06,
     $ 3.808E-06, 3.797E-06, 3.781E-06, 3.773E-06, 3.735E-06, 3.663E-06,
     $ 3.592E-06, 3.526E-06, 3.495E-06, 3.526E-06, 3.555E-06, 3.529E-06,
     $ 3.462E-06, 3.329E-06, 3.128E-06, 2.956E-06, 2.884E-06, 2.895E-06,
     $ 2.962E-06, 3.038E-06, 3.087E-06, 3.117E-06, 3.112E-06, 3.091E-06,
     $ 3.137E-06, 3.243E-06, 3.327E-06, 3.400E-06, 3.481E-06, 3.509E-06,
     $ 3.485E-06, 3.494E-06, 3.558E-06, 3.628E-06, 3.680E-06, 3.693E-06,
     $ 3.627E-06, 3.491E-06, 3.347E-06, 3.266E-06, 3.284E-06, 3.385E-06,
     $ 3.489E-06, 3.516E-06, 3.458E-06, 3.351E-06, 3.246E-06, 3.244E-06,
     $ 3.405E-06, 3.653E-06, 3.893E-06, 4.078E-06, 4.136E-06, 4.018E-06,
     $ 3.773E-06, 3.484E-06, 3.206E-06, 2.998E-06, 2.939E-06, 3.025E-06,
     $ 3.177E-06, 3.347E-06, 3.500E-06, 3.590E-06, 3.653E-06, 3.761E-06,
     $ 3.890E-06, 4.015E-06, 4.153E-06, 4.269E-06/
C                                                                       
C     22901 TO 23000 CM-1 DATA.                                         
      DATA (SUN(I),I= 22901, 23000)/                                    
     $ 4.323E-06, 4.348E-06, 4.355E-06, 4.314E-06, 4.241E-06, 4.138E-06,
     $ 3.986E-06, 3.824E-06, 3.691E-06, 3.567E-06, 3.457E-06, 3.403E-06,
     $ 3.410E-06, 3.454E-06, 3.534E-06, 3.666E-06, 3.835E-06, 3.996E-06,
     $ 4.137E-06, 4.249E-06, 4.299E-06, 4.276E-06, 4.185E-06, 4.037E-06,
     $ 3.887E-06, 3.751E-06, 3.586E-06, 3.421E-06, 3.309E-06, 3.223E-06,
     $ 3.152E-06, 3.144E-06, 3.189E-06, 3.231E-06, 3.250E-06, 3.275E-06,
     $ 3.359E-06, 3.510E-06, 3.691E-06, 3.906E-06, 4.134E-06, 4.281E-06,
     $ 4.311E-06, 4.255E-06, 4.112E-06, 3.895E-06, 3.671E-06, 3.496E-06,
     $ 3.398E-06, 3.372E-06, 3.390E-06, 3.433E-06, 3.454E-06, 3.404E-06,
     $ 3.338E-06, 3.309E-06, 3.299E-06, 3.341E-06, 3.456E-06, 3.561E-06,
     $ 3.617E-06, 3.626E-06, 3.535E-06, 3.354E-06, 3.173E-06, 2.997E-06,
     $ 2.799E-06, 2.622E-06, 2.473E-06, 2.311E-06, 2.160E-06, 2.089E-06,
     $ 2.123E-06, 2.256E-06, 2.467E-06, 2.707E-06, 2.935E-06, 3.132E-06,
     $ 3.291E-06, 3.424E-06, 3.552E-06, 3.678E-06, 3.761E-06, 3.779E-06,
     $ 3.755E-06, 3.684E-06, 3.561E-06, 3.439E-06, 3.337E-06, 3.234E-06,
     $ 3.160E-06, 3.139E-06, 3.158E-06, 3.238E-06, 3.362E-06, 3.467E-06,
     $ 3.542E-06, 3.587E-06, 3.572E-06, 3.538E-06/
C                                                                       
C     23001 TO 23100 CM-1 DATA.                                         
      DATA (SUN(I),I= 23001, 23100)/                                    
     $ 3.557E-06, 3.622E-06, 3.704E-06, 3.810E-06, 3.936E-06, 4.013E-06,
     $ 3.987E-06, 3.891E-06, 3.751E-06, 3.544E-06, 3.321E-06, 3.188E-06,
     $ 3.112E-06, 3.033E-06, 2.996E-06, 3.009E-06, 3.020E-06, 3.064E-06,
     $ 3.180E-06, 3.299E-06, 3.369E-06, 3.386E-06, 3.313E-06, 3.147E-06,
     $ 2.948E-06, 2.757E-06, 2.573E-06, 2.399E-06, 2.240E-06, 2.088E-06,
     $ 1.953E-06, 1.865E-06, 1.845E-06, 1.890E-06, 1.983E-06, 2.104E-06,
     $ 2.228E-06, 2.358E-06, 2.503E-06, 2.634E-06, 2.726E-06, 2.787E-06,
     $ 2.809E-06, 2.777E-06, 2.736E-06, 2.703E-06, 2.659E-06, 2.640E-06,
     $ 2.690E-06, 2.793E-06, 2.974E-06, 3.265E-06, 3.592E-06, 3.875E-06,
     $ 4.084E-06, 4.189E-06, 4.184E-06, 4.102E-06, 3.986E-06, 3.898E-06,
     $ 3.863E-06, 3.849E-06, 3.844E-06, 3.842E-06, 3.823E-06, 3.780E-06,
     $ 3.729E-06, 3.694E-06, 3.687E-06, 3.677E-06, 3.656E-06, 3.659E-06,
     $ 3.694E-06, 3.748E-06, 3.824E-06, 3.910E-06, 3.977E-06, 3.986E-06,
     $ 3.915E-06, 3.787E-06, 3.644E-06, 3.486E-06, 3.334E-06, 3.266E-06,
     $ 3.304E-06, 3.400E-06, 3.541E-06, 3.708E-06, 3.847E-06, 3.923E-06,
     $ 3.940E-06, 3.924E-06, 3.913E-06, 3.896E-06, 3.838E-06, 3.772E-06,
     $ 3.728E-06, 3.673E-06, 3.611E-06, 3.577E-06/
C                                                                       
C     23101 TO 23200 CM-1 DATA.                                         
      DATA (SUN(I),I= 23101, 23200)/                                    
     $ 3.536E-06, 3.424E-06, 3.250E-06, 3.050E-06, 2.834E-06, 2.587E-06,
     $ 2.310E-06, 2.032E-06, 1.771E-06, 1.549E-06, 1.434E-06, 1.481E-06,
     $ 1.652E-06, 1.870E-06, 2.106E-06, 2.309E-06, 2.404E-06, 2.397E-06,
     $ 2.328E-06, 2.197E-06, 2.050E-06, 1.967E-06, 1.981E-06, 2.117E-06,
     $ 2.396E-06, 2.783E-06, 3.219E-06, 3.632E-06, 3.953E-06, 4.157E-06,
     $ 4.243E-06, 4.206E-06, 4.075E-06, 3.901E-06, 3.703E-06, 3.506E-06,
     $ 3.373E-06, 3.355E-06, 3.448E-06, 3.619E-06, 3.826E-06, 4.022E-06,
     $ 4.152E-06, 4.176E-06, 4.105E-06, 3.992E-06, 3.873E-06, 3.773E-06,
     $ 3.771E-06, 3.904E-06, 4.089E-06, 4.253E-06, 4.367E-06, 4.379E-06,
     $ 4.270E-06, 4.109E-06, 3.965E-06, 3.861E-06, 3.821E-06, 3.852E-06,
     $ 3.898E-06, 3.927E-06, 3.910E-06, 3.779E-06, 3.538E-06, 3.283E-06,
     $ 3.055E-06, 2.870E-06, 2.794E-06, 2.831E-06, 2.880E-06, 2.896E-06,
     $ 2.943E-06, 3.032E-06, 3.070E-06, 3.046E-06, 3.004E-06, 2.879E-06,
     $ 2.629E-06, 2.386E-06, 2.247E-06, 2.159E-06, 2.100E-06, 2.099E-06,
     $ 2.103E-06, 2.044E-06, 1.973E-06, 1.933E-06, 1.894E-06, 1.869E-06,
     $ 1.874E-06, 1.865E-06, 1.837E-06, 1.813E-06, 1.773E-06, 1.705E-06,
     $ 1.648E-06, 1.629E-06, 1.622E-06, 1.619E-06/
C                                                                       
C     23201 TO 23300 CM-1 DATA.                                         
      DATA (SUN(I),I= 23201, 23300)/                                    
     $ 1.633E-06, 1.614E-06, 1.504E-06, 1.352E-06, 1.224E-06, 1.153E-06,
     $ 1.200E-06, 1.379E-06, 1.626E-06, 1.904E-06, 2.173E-06, 2.347E-06,
     $ 2.432E-06, 2.482E-06, 2.453E-06, 2.315E-06, 2.165E-06, 2.059E-06,
     $ 1.962E-06, 1.887E-06, 1.871E-06, 1.893E-06, 1.917E-06, 1.929E-06,
     $ 1.940E-06, 1.975E-06, 1.995E-06, 1.960E-06, 1.923E-06, 1.895E-06,
     $ 1.827E-06, 1.737E-06, 1.662E-06, 1.593E-06, 1.544E-06, 1.578E-06,
     $ 1.733E-06, 1.960E-06, 2.179E-06, 2.358E-06, 2.427E-06, 2.318E-06,
     $ 2.110E-06, 1.908E-06, 1.728E-06, 1.610E-06, 1.595E-06, 1.627E-06,
     $ 1.652E-06, 1.666E-06, 1.651E-06, 1.607E-06, 1.589E-06, 1.642E-06,
     $ 1.754E-06, 1.920E-06, 2.136E-06, 2.326E-06, 2.424E-06, 2.460E-06,
     $ 2.456E-06, 2.392E-06, 2.298E-06, 2.252E-06, 2.289E-06, 2.397E-06,
     $ 2.570E-06, 2.800E-06, 3.031E-06, 3.185E-06, 3.216E-06, 3.147E-06,
     $ 3.027E-06, 2.876E-06, 2.739E-06, 2.673E-06, 2.657E-06, 2.661E-06,
     $ 2.687E-06, 2.710E-06, 2.759E-06, 2.871E-06, 2.983E-06, 3.068E-06,
     $ 3.159E-06, 3.205E-06, 3.174E-06, 3.121E-06, 3.068E-06, 2.996E-06,
     $ 2.913E-06, 2.848E-06, 2.793E-06, 2.697E-06, 2.555E-06, 2.420E-06,
     $ 2.301E-06, 2.219E-06, 2.235E-06, 2.299E-06/
C                                                                       
C     23301 TO 23400 CM-1 DATA.                                         
      DATA (SUN(I),I= 23301, 23400)/                                    
     $ 2.316E-06, 2.294E-06, 2.243E-06, 2.132E-06, 2.030E-06, 2.019E-06,
     $ 2.090E-06, 2.243E-06, 2.472E-06, 2.713E-06, 2.925E-06, 3.088E-06,
     $ 3.158E-06, 3.169E-06, 3.197E-06, 3.220E-06, 3.204E-06, 3.166E-06,
     $ 3.092E-06, 2.957E-06, 2.795E-06, 2.647E-06, 2.537E-06, 2.465E-06,
     $ 2.442E-06, 2.492E-06, 2.566E-06, 2.628E-06, 2.726E-06, 2.815E-06,
     $ 2.842E-06, 2.900E-06, 3.035E-06, 3.190E-06, 3.393E-06, 3.664E-06,
     $ 3.874E-06, 3.925E-06, 3.831E-06, 3.590E-06, 3.233E-06, 2.902E-06,
     $ 2.707E-06, 2.657E-06, 2.747E-06, 2.948E-06, 3.156E-06, 3.284E-06,
     $ 3.310E-06, 3.232E-06, 3.056E-06, 2.831E-06, 2.629E-06, 2.467E-06,
     $ 2.340E-06, 2.278E-06, 2.296E-06, 2.378E-06, 2.528E-06, 2.747E-06,
     $ 3.016E-06, 3.289E-06, 3.500E-06, 3.651E-06, 3.770E-06, 3.812E-06,
     $ 3.752E-06, 3.662E-06, 3.567E-06, 3.422E-06, 3.265E-06, 3.170E-06,
     $ 3.136E-06, 3.144E-06, 3.203E-06, 3.314E-06, 3.428E-06, 3.463E-06,
     $ 3.392E-06, 3.242E-06, 3.012E-06, 2.726E-06, 2.485E-06, 2.359E-06,
     $ 2.319E-06, 2.342E-06, 2.431E-06, 2.531E-06, 2.556E-06, 2.509E-06,
     $ 2.471E-06, 2.491E-06, 2.579E-06, 2.757E-06, 3.009E-06, 3.217E-06,
     $ 3.276E-06, 3.159E-06, 2.874E-06, 2.475E-06/
C                                                                       
C     23401 TO 23500 CM-1 DATA.                                         
      DATA (SUN(I),I= 23401, 23500)/                                    
     $ 2.046E-06, 1.658E-06, 1.406E-06, 1.368E-06, 1.518E-06, 1.809E-06,
     $ 2.208E-06, 2.603E-06, 2.858E-06, 2.944E-06, 2.913E-06, 2.821E-06,
     $ 2.754E-06, 2.803E-06, 2.971E-06, 3.194E-06, 3.412E-06, 3.558E-06,
     $ 3.576E-06, 3.481E-06, 3.327E-06, 3.134E-06, 2.951E-06, 2.847E-06,
     $ 2.835E-06, 2.884E-06, 2.981E-06, 3.108E-06, 3.244E-06, 3.388E-06,
     $ 3.540E-06, 3.688E-06, 3.810E-06, 3.853E-06, 3.822E-06, 3.764E-06,
     $ 3.678E-06, 3.570E-06, 3.478E-06, 3.379E-06, 3.248E-06, 3.133E-06,
     $ 3.072E-06, 3.087E-06, 3.189E-06, 3.344E-06, 3.521E-06, 3.696E-06,
     $ 3.830E-06, 3.927E-06, 4.014E-06, 4.052E-06, 3.998E-06, 3.869E-06,
     $ 3.658E-06, 3.370E-06, 3.086E-06, 2.893E-06, 2.789E-06, 2.718E-06,
     $ 2.633E-06, 2.503E-06, 2.279E-06, 2.003E-06, 1.828E-06, 1.829E-06,
     $ 1.968E-06, 2.228E-06, 2.547E-06, 2.776E-06, 2.851E-06, 2.820E-06,
     $ 2.729E-06, 2.631E-06, 2.608E-06, 2.702E-06, 2.905E-06, 3.193E-06,
     $ 3.515E-06, 3.811E-06, 4.058E-06, 4.237E-06, 4.324E-06, 4.305E-06,
     $ 4.194E-06, 4.011E-06, 3.756E-06, 3.459E-06, 3.195E-06, 2.989E-06,
     $ 2.817E-06, 2.723E-06, 2.727E-06, 2.734E-06, 2.711E-06, 2.711E-06,
     $ 2.694E-06, 2.623E-06, 2.601E-06, 2.681E-06/
C                                                                       
C     23501 TO 23600 CM-1 DATA.                                         
      DATA (SUN(I),I= 23501, 23600)/                                    
     $ 2.795E-06, 2.938E-06, 3.121E-06, 3.278E-06, 3.387E-06, 3.487E-06,
     $ 3.592E-06, 3.708E-06, 3.847E-06, 3.982E-06, 4.076E-06, 4.113E-06,
     $ 4.047E-06, 3.830E-06, 3.503E-06, 3.140E-06, 2.750E-06, 2.388E-06,
     $ 2.182E-06, 2.129E-06, 2.122E-06, 2.185E-06, 2.352E-06, 2.518E-06,
     $ 2.633E-06, 2.753E-06, 2.859E-06, 2.877E-06, 2.839E-06, 2.823E-06,
     $ 2.840E-06, 2.858E-06, 2.876E-06, 2.909E-06, 2.909E-06, 2.834E-06,
     $ 2.769E-06, 2.813E-06, 2.914E-06, 3.026E-06, 3.199E-06, 3.401E-06,
     $ 3.530E-06, 3.562E-06, 3.543E-06, 3.489E-06, 3.394E-06, 3.292E-06,
     $ 3.269E-06, 3.362E-06, 3.521E-06, 3.682E-06, 3.808E-06, 3.874E-06,
     $ 3.827E-06, 3.652E-06, 3.448E-06, 3.280E-06, 3.114E-06, 2.979E-06,
     $ 2.901E-06, 2.815E-06, 2.727E-06, 2.728E-06, 2.846E-06, 3.085E-06,
     $ 3.414E-06, 3.726E-06, 3.932E-06, 3.995E-06, 3.889E-06, 3.663E-06,
     $ 3.433E-06, 3.224E-06, 2.998E-06, 2.814E-06, 2.721E-06, 2.649E-06,
     $ 2.610E-06, 2.665E-06, 2.748E-06, 2.808E-06, 2.885E-06, 2.960E-06,
     $ 3.012E-06, 3.079E-06, 3.154E-06, 3.215E-06, 3.255E-06, 3.249E-06,
     $ 3.193E-06, 3.094E-06, 2.939E-06, 2.755E-06, 2.595E-06, 2.437E-06,
     $ 2.260E-06, 2.118E-06, 2.052E-06, 2.040E-06/
C                                                                       
C     23601 TO 23700 CM-1 DATA.                                         
      DATA (SUN(I),I= 23601, 23700)/                                    
     $ 2.114E-06, 2.336E-06, 2.651E-06, 2.966E-06, 3.285E-06, 3.603E-06,
     $ 3.841E-06, 3.976E-06, 4.014E-06, 3.917E-06, 3.685E-06, 3.365E-06,
     $ 3.021E-06, 2.747E-06, 2.605E-06, 2.598E-06, 2.720E-06, 2.926E-06,
     $ 3.150E-06, 3.341E-06, 3.458E-06, 3.520E-06, 3.552E-06, 3.538E-06,
     $ 3.512E-06, 3.523E-06, 3.527E-06, 3.540E-06, 3.613E-06, 3.672E-06,
     $ 3.651E-06, 3.576E-06, 3.420E-06, 3.160E-06, 2.910E-06, 2.762E-06,
     $ 2.703E-06, 2.750E-06, 2.916E-06, 3.118E-06, 3.278E-06, 3.401E-06,
     $ 3.449E-06, 3.353E-06, 3.137E-06, 2.857E-06, 2.507E-06, 2.109E-06,
     $ 1.746E-06, 1.444E-06, 1.206E-06, 1.081E-06, 1.093E-06, 1.210E-06,
     $ 1.398E-06, 1.632E-06, 1.885E-06, 2.139E-06, 2.382E-06, 2.611E-06,
     $ 2.797E-06, 2.892E-06, 2.912E-06, 2.930E-06, 2.950E-06, 2.974E-06,
     $ 3.052E-06, 3.163E-06, 3.225E-06, 3.264E-06, 3.342E-06, 3.424E-06,
     $ 3.465E-06, 3.484E-06, 3.489E-06, 3.454E-06, 3.399E-06, 3.401E-06,
     $ 3.488E-06, 3.605E-06, 3.728E-06, 3.874E-06, 3.979E-06, 3.970E-06,
     $ 3.884E-06, 3.758E-06, 3.590E-06, 3.437E-06, 3.355E-06, 3.309E-06,
     $ 3.281E-06, 3.260E-06, 3.223E-06, 3.203E-06, 3.230E-06, 3.278E-06,
     $ 3.354E-06, 3.465E-06, 3.533E-06, 3.531E-06/
C                                                                       
C     23701 TO 23800 CM-1 DATA.                                         
      DATA (SUN(I),I= 23701, 23800)/                                    
     $ 3.477E-06, 3.363E-06, 3.220E-06, 3.126E-06, 3.104E-06, 3.143E-06,
     $ 3.210E-06, 3.220E-06, 3.144E-06, 2.991E-06, 2.752E-06, 2.502E-06,
     $ 2.351E-06, 2.303E-06, 2.355E-06, 2.561E-06, 2.844E-06, 3.065E-06,
     $ 3.211E-06, 3.281E-06, 3.221E-06, 3.086E-06, 2.989E-06, 2.937E-06,
     $ 2.924E-06, 2.978E-06, 3.070E-06, 3.154E-06, 3.230E-06, 3.289E-06,
     $ 3.321E-06, 3.361E-06, 3.414E-06, 3.465E-06, 3.525E-06, 3.591E-06,
     $ 3.629E-06, 3.630E-06, 3.591E-06, 3.481E-06, 3.326E-06, 3.191E-06,
     $ 3.079E-06, 3.014E-06, 3.058E-06, 3.196E-06, 3.345E-06, 3.483E-06,
     $ 3.612E-06, 3.695E-06, 3.720E-06, 3.727E-06, 3.753E-06, 3.804E-06,
     $ 3.889E-06, 3.985E-06, 4.028E-06, 3.977E-06, 3.834E-06, 3.594E-06,
     $ 3.276E-06, 3.005E-06, 2.881E-06, 2.875E-06, 2.984E-06, 3.236E-06,
     $ 3.498E-06, 3.633E-06, 3.662E-06, 3.594E-06, 3.412E-06, 3.222E-06,
     $ 3.136E-06, 3.144E-06, 3.202E-06, 3.283E-06, 3.339E-06, 3.301E-06,
     $ 3.171E-06, 3.027E-06, 2.927E-06, 2.885E-06, 2.921E-06, 3.014E-06,
     $ 3.087E-06, 3.075E-06, 2.944E-06, 2.704E-06, 2.405E-06, 2.149E-06,
     $ 2.046E-06, 2.135E-06, 2.357E-06, 2.612E-06, 2.802E-06, 2.856E-06,
     $ 2.783E-06, 2.658E-06, 2.580E-06, 2.613E-06/
C                                                                       
C     23801 TO 23900 CM-1 DATA.                                         
      DATA (SUN(I),I= 23801, 23900)/                                    
     $ 2.740E-06, 2.904E-06, 3.060E-06, 3.149E-06, 3.121E-06, 2.971E-06,
     $ 2.725E-06, 2.443E-06, 2.192E-06, 2.019E-06, 1.974E-06, 2.084E-06,
     $ 2.326E-06, 2.638E-06, 2.932E-06, 3.138E-06, 3.214E-06, 3.140E-06,
     $ 2.948E-06, 2.710E-06, 2.502E-06, 2.385E-06, 2.359E-06, 2.377E-06,
     $ 2.422E-06, 2.472E-06, 2.465E-06, 2.411E-06, 2.404E-06, 2.466E-06,
     $ 2.549E-06, 2.657E-06, 2.798E-06, 2.906E-06, 2.940E-06, 2.957E-06,
     $ 3.007E-06, 3.087E-06, 3.211E-06, 3.384E-06, 3.551E-06, 3.663E-06,
     $ 3.701E-06, 3.648E-06, 3.525E-06, 3.366E-06, 3.155E-06, 2.925E-06,
     $ 2.755E-06, 2.672E-06, 2.693E-06, 2.860E-06, 3.125E-06, 3.366E-06,
     $ 3.525E-06, 3.607E-06, 3.591E-06, 3.470E-06, 3.317E-06, 3.176E-06,
     $ 3.012E-06, 2.862E-06, 2.821E-06, 2.890E-06, 3.027E-06, 3.241E-06,
     $ 3.452E-06, 3.510E-06, 3.395E-06, 3.174E-06, 2.874E-06, 2.557E-06,
     $ 2.359E-06, 2.304E-06, 2.292E-06, 2.306E-06, 2.382E-06, 2.477E-06,
     $ 2.568E-06, 2.709E-06, 2.907E-06, 3.103E-06, 3.263E-06, 3.361E-06,
     $ 3.376E-06, 3.319E-06, 3.204E-06, 3.065E-06, 2.994E-06, 3.042E-06,
     $ 3.165E-06, 3.324E-06, 3.493E-06, 3.595E-06, 3.581E-06, 3.478E-06,
     $ 3.338E-06, 3.211E-06, 3.106E-06, 3.038E-06/
C                                                                       
C     23901 TO 24000 CM-1 DATA.                                         
      DATA (SUN(I),I= 23901, 24000)/                                    
     $ 3.031E-06, 3.029E-06, 2.971E-06, 2.903E-06, 2.829E-06, 2.723E-06,
     $ 2.658E-06, 2.683E-06, 2.760E-06, 2.865E-06, 2.998E-06, 3.144E-06,
     $ 3.291E-06, 3.430E-06, 3.552E-06, 3.643E-06, 3.682E-06, 3.641E-06,
     $ 3.528E-06, 3.400E-06, 3.300E-06, 3.225E-06, 3.202E-06, 3.239E-06,
     $ 3.247E-06, 3.170E-06, 3.024E-06, 2.827E-06, 2.634E-06, 2.532E-06,
     $ 2.554E-06, 2.666E-06, 2.813E-06, 2.953E-06, 3.055E-06, 3.110E-06,
     $ 3.140E-06, 3.148E-06, 3.112E-06, 3.027E-06, 2.898E-06, 2.762E-06,
     $ 2.682E-06, 2.668E-06, 2.712E-06, 2.828E-06, 2.960E-06, 3.034E-06,
     $ 3.042E-06, 2.965E-06, 2.816E-06, 2.688E-06, 2.592E-06, 2.504E-06,
     $ 2.490E-06, 2.551E-06, 2.570E-06, 2.529E-06, 2.498E-06, 2.475E-06,
     $ 2.434E-06, 2.441E-06, 2.565E-06, 2.750E-06, 2.910E-06, 3.034E-06,
     $ 3.118E-06, 3.147E-06, 3.172E-06, 3.254E-06, 3.345E-06, 3.383E-06,
     $ 3.373E-06, 3.317E-06, 3.214E-06, 3.143E-06, 3.168E-06, 3.235E-06,
     $ 3.286E-06, 3.320E-06, 3.319E-06, 3.251E-06, 3.142E-06, 3.018E-06,
     $ 2.863E-06, 2.679E-06, 2.525E-06, 2.431E-06, 2.407E-06, 2.499E-06,
     $ 2.705E-06, 2.959E-06, 3.224E-06, 3.473E-06, 3.645E-06, 3.715E-06,
     $ 3.700E-06, 3.616E-06, 3.494E-06, 3.377E-06/
C                                                                       
C     24001 TO 24100 CM-1 DATA.                                         
      DATA (SUN(I),I= 24001, 24100)/                                    
     $ 3.303E-06, 3.282E-06, 3.293E-06, 3.320E-06, 3.356E-06, 3.356E-06,
     $ 3.314E-06, 3.287E-06, 3.282E-06, 3.274E-06, 3.291E-06, 3.345E-06,
     $ 3.385E-06, 3.392E-06, 3.407E-06, 3.447E-06, 3.498E-06, 3.541E-06,
     $ 3.554E-06, 3.504E-06, 3.379E-06, 3.208E-06, 3.062E-06, 2.997E-06,
     $ 3.022E-06, 3.130E-06, 3.290E-06, 3.439E-06, 3.555E-06, 3.650E-06,
     $ 3.704E-06, 3.703E-06, 3.676E-06, 3.608E-06, 3.475E-06, 3.331E-06,
     $ 3.217E-06, 3.114E-06, 3.043E-06, 3.012E-06, 2.970E-06, 2.929E-06,
     $ 2.940E-06, 3.005E-06, 3.102E-06, 3.197E-06, 3.232E-06, 3.167E-06,
     $ 3.008E-06, 2.833E-06, 2.752E-06, 2.796E-06, 2.948E-06, 3.184E-06,
     $ 3.436E-06, 3.619E-06, 3.689E-06, 3.640E-06, 3.472E-06, 3.201E-06,
     $ 2.880E-06, 2.567E-06, 2.314E-06, 2.176E-06, 2.162E-06, 2.232E-06,
     $ 2.404E-06, 2.682E-06, 2.982E-06, 3.261E-06, 3.522E-06, 3.685E-06,
     $ 3.678E-06, 3.547E-06, 3.369E-06, 3.186E-06, 3.074E-06, 3.106E-06,
     $ 3.259E-06, 3.443E-06, 3.601E-06, 3.684E-06, 3.625E-06, 3.448E-06,
     $ 3.254E-06, 3.069E-06, 2.894E-06, 2.792E-06, 2.741E-06, 2.657E-06,
     $ 2.579E-06, 2.574E-06, 2.629E-06, 2.774E-06, 3.023E-06, 3.290E-06,
     $ 3.507E-06, 3.628E-06, 3.599E-06, 3.445E-06/
C                                                                       
C     24101 TO 24200 CM-1 DATA.                                         
      DATA (SUN(I),I= 24101, 24200)/                                    
     $ 3.231E-06, 3.004E-06, 2.848E-06, 2.837E-06, 2.951E-06, 3.143E-06,
     $ 3.357E-06, 3.503E-06, 3.540E-06, 3.496E-06, 3.390E-06, 3.252E-06,
     $ 3.142E-06, 3.084E-06, 3.062E-06, 3.081E-06, 3.153E-06, 3.242E-06,
     $ 3.292E-06, 3.251E-06, 3.083E-06, 2.790E-06, 2.403E-06, 1.999E-06,
     $ 1.713E-06, 1.624E-06, 1.715E-06, 1.952E-06, 2.265E-06, 2.531E-06,
     $ 2.688E-06, 2.752E-06, 2.742E-06, 2.709E-06, 2.723E-06, 2.794E-06,
     $ 2.902E-06, 3.048E-06, 3.196E-06, 3.285E-06, 3.302E-06, 3.272E-06,
     $ 3.193E-06, 3.065E-06, 2.951E-06, 2.902E-06, 2.905E-06, 2.958E-06,
     $ 3.092E-06, 3.264E-06, 3.403E-06, 3.505E-06, 3.570E-06, 3.573E-06,
     $ 3.529E-06, 3.479E-06, 3.435E-06, 3.390E-06, 3.330E-06, 3.261E-06,
     $ 3.182E-06, 3.082E-06, 2.983E-06, 2.920E-06, 2.922E-06, 3.004E-06,
     $ 3.136E-06, 3.281E-06, 3.424E-06, 3.502E-06, 3.478E-06, 3.398E-06,
     $ 3.296E-06, 3.158E-06, 2.988E-06, 2.795E-06, 2.580E-06, 2.363E-06,
     $ 2.186E-06, 2.103E-06, 2.158E-06, 2.333E-06, 2.563E-06, 2.795E-06,
     $ 2.985E-06, 3.075E-06, 3.046E-06, 2.922E-06, 2.730E-06, 2.488E-06,
     $ 2.232E-06, 2.035E-06, 1.945E-06, 1.981E-06, 2.170E-06, 2.480E-06,
     $ 2.807E-06, 3.069E-06, 3.229E-06, 3.282E-06/
C                                                                       
C     24201 TO 24300 CM-1 DATA.                                         
      DATA (SUN(I),I= 24201, 24300)/                                    
     $ 3.257E-06, 3.194E-06, 3.157E-06, 3.172E-06, 3.188E-06, 3.171E-06,
     $ 3.134E-06, 3.074E-06, 2.990E-06, 2.920E-06, 2.909E-06, 2.951E-06,
     $ 2.995E-06, 3.013E-06, 2.979E-06, 2.858E-06, 2.690E-06, 2.555E-06,
     $ 2.494E-06, 2.545E-06, 2.713E-06, 2.936E-06, 3.139E-06, 3.264E-06,
     $ 3.283E-06, 3.217E-06, 3.093E-06, 2.947E-06, 2.857E-06, 2.865E-06,
     $ 2.947E-06, 3.090E-06, 3.280E-06, 3.439E-06, 3.515E-06, 3.528E-06,
     $ 3.498E-06, 3.418E-06, 3.295E-06, 3.147E-06, 2.981E-06, 2.808E-06,
     $ 2.694E-06, 2.697E-06, 2.780E-06, 2.881E-06, 2.977E-06, 3.025E-06,
     $ 2.986E-06, 2.916E-06, 2.886E-06, 2.880E-06, 2.854E-06, 2.840E-06,
     $ 2.869E-06, 2.918E-06, 3.007E-06, 3.179E-06, 3.358E-06, 3.457E-06,
     $ 3.487E-06, 3.461E-06, 3.372E-06, 3.294E-06, 3.295E-06, 3.336E-06,
     $ 3.348E-06, 3.299E-06, 3.169E-06, 2.946E-06, 2.686E-06, 2.505E-06,
     $ 2.476E-06, 2.598E-06, 2.832E-06, 3.117E-06, 3.375E-06, 3.547E-06,
     $ 3.624E-06, 3.625E-06, 3.570E-06, 3.478E-06, 3.399E-06, 3.366E-06,
     $ 3.356E-06, 3.383E-06, 3.457E-06, 3.507E-06, 3.501E-06, 3.461E-06,
     $ 3.382E-06, 3.273E-06, 3.169E-06, 3.081E-06, 3.039E-06, 3.061E-06,
     $ 3.115E-06, 3.211E-06, 3.367E-06, 3.504E-06/
C                                                                       
C     24301 TO 24400 CM-1 DATA.                                         
      DATA (SUN(I),I= 24301, 24400)/                                    
     $ 3.553E-06, 3.517E-06, 3.383E-06, 3.161E-06, 2.933E-06, 2.775E-06,
     $ 2.720E-06, 2.761E-06, 2.845E-06, 2.933E-06, 3.014E-06, 3.065E-06,
     $ 3.079E-06, 3.086E-06, 3.100E-06, 3.112E-06, 3.126E-06, 3.164E-06,
     $ 3.242E-06, 3.308E-06, 3.317E-06, 3.290E-06, 3.233E-06, 3.126E-06,
     $ 3.019E-06, 2.976E-06, 2.980E-06, 2.989E-06, 2.996E-06, 3.017E-06,
     $ 3.040E-06, 3.047E-06, 3.074E-06, 3.117E-06, 3.117E-06, 3.081E-06,
     $ 3.038E-06, 2.977E-06, 2.939E-06, 2.964E-06, 2.989E-06, 2.974E-06,
     $ 2.952E-06, 2.923E-06, 2.897E-06, 2.950E-06, 3.097E-06, 3.247E-06,
     $ 3.321E-06, 3.300E-06, 3.186E-06, 3.003E-06, 2.834E-06, 2.747E-06,
     $ 2.726E-06, 2.729E-06, 2.731E-06, 2.702E-06, 2.646E-06, 2.607E-06,
     $ 2.573E-06, 2.519E-06, 2.485E-06, 2.462E-06, 2.404E-06, 2.340E-06,
     $ 2.305E-06, 2.241E-06, 2.110E-06, 1.947E-06, 1.767E-06, 1.582E-06,
     $ 1.460E-06, 1.441E-06, 1.492E-06, 1.595E-06, 1.741E-06, 1.871E-06,
     $ 1.973E-06, 2.081E-06, 2.185E-06, 2.294E-06, 2.442E-06, 2.601E-06,
     $ 2.745E-06, 2.886E-06, 2.979E-06, 2.979E-06, 2.922E-06, 2.832E-06,
     $ 2.701E-06, 2.588E-06, 2.560E-06, 2.604E-06, 2.690E-06, 2.796E-06,
     $ 2.875E-06, 2.885E-06, 2.836E-06, 2.768E-06/
C                                                                       
C     24401 TO 24500 CM-1 DATA.                                         
      DATA (SUN(I),I= 24401, 24500)/                                    
     $ 2.711E-06, 2.678E-06, 2.649E-06, 2.612E-06, 2.572E-06, 2.538E-06,
     $ 2.536E-06, 2.600E-06, 2.705E-06, 2.801E-06, 2.882E-06, 2.952E-06,
     $ 3.015E-06, 3.107E-06, 3.253E-06, 3.423E-06, 3.582E-06, 3.712E-06,
     $ 3.800E-06, 3.844E-06, 3.844E-06, 3.787E-06, 3.651E-06, 3.422E-06,
     $ 3.119E-06, 2.798E-06, 2.538E-06, 2.408E-06, 2.432E-06, 2.576E-06,
     $ 2.790E-06, 3.009E-06, 3.159E-06, 3.237E-06, 3.280E-06, 3.265E-06,
     $ 3.200E-06, 3.142E-06, 3.087E-06, 3.044E-06, 3.068E-06, 3.157E-06,
     $ 3.271E-06, 3.378E-06, 3.436E-06, 3.418E-06, 3.330E-06, 3.218E-06,
     $ 3.139E-06, 3.115E-06, 3.151E-06, 3.254E-06, 3.392E-06, 3.520E-06,
     $ 3.605E-06, 3.607E-06, 3.514E-06, 3.349E-06, 3.135E-06, 2.931E-06,
     $ 2.807E-06, 2.758E-06, 2.753E-06, 2.802E-06, 2.886E-06, 2.954E-06,
     $ 2.988E-06, 2.986E-06, 2.918E-06, 2.789E-06, 2.648E-06, 2.525E-06,
     $ 2.454E-06, 2.468E-06, 2.515E-06, 2.531E-06, 2.537E-06, 2.535E-06,
     $ 2.502E-06, 2.475E-06, 2.509E-06, 2.608E-06, 2.708E-06, 2.758E-06,
     $ 2.771E-06, 2.758E-06, 2.714E-06, 2.708E-06, 2.812E-06, 3.008E-06,
     $ 3.243E-06, 3.461E-06, 3.607E-06, 3.659E-06, 3.637E-06, 3.572E-06,
     $ 3.488E-06, 3.410E-06, 3.338E-06, 3.238E-06/
C                                                                       
C     24501 TO 24600 CM-1 DATA.                                         
      DATA (SUN(I),I= 24501, 24600)/                                    
     $ 3.105E-06, 2.965E-06, 2.807E-06, 2.653E-06, 2.568E-06, 2.549E-06,
     $ 2.570E-06, 2.635E-06, 2.717E-06, 2.765E-06, 2.747E-06, 2.653E-06,
     $ 2.513E-06, 2.354E-06, 2.162E-06, 1.984E-06, 1.890E-06, 1.848E-06,
     $ 1.807E-06, 1.804E-06, 1.829E-06, 1.829E-06, 1.863E-06, 2.005E-06,
     $ 2.220E-06, 2.479E-06, 2.772E-06, 3.024E-06, 3.166E-06, 3.180E-06,
     $ 3.100E-06, 2.988E-06, 2.886E-06, 2.838E-06, 2.893E-06, 3.007E-06,
     $ 3.100E-06, 3.159E-06, 3.181E-06, 3.164E-06, 3.152E-06, 3.169E-06,
     $ 3.181E-06, 3.153E-06, 3.079E-06, 2.950E-06, 2.754E-06, 2.500E-06,
     $ 2.215E-06, 1.904E-06, 1.599E-06, 1.381E-06, 1.310E-06, 1.391E-06,
     $ 1.599E-06, 1.881E-06, 2.150E-06, 2.362E-06, 2.534E-06, 2.671E-06,
     $ 2.783E-06, 2.907E-06, 3.032E-06, 3.087E-06, 3.076E-06, 3.037E-06,
     $ 2.949E-06, 2.845E-06, 2.821E-06, 2.862E-06, 2.884E-06, 2.900E-06,
     $ 2.924E-06, 2.887E-06, 2.792E-06, 2.719E-06, 2.645E-06, 2.523E-06,
     $ 2.397E-06, 2.296E-06, 2.211E-06, 2.175E-06, 2.208E-06, 2.297E-06,
     $ 2.434E-06, 2.575E-06, 2.682E-06, 2.755E-06, 2.769E-06, 2.733E-06,
     $ 2.718E-06, 2.730E-06, 2.727E-06, 2.715E-06, 2.667E-06, 2.516E-06,
     $ 2.273E-06, 1.994E-06, 1.695E-06, 1.412E-06/
C                                                                       
C     24601 TO 24700 CM-1 DATA.                                         
      DATA (SUN(I),I= 24601, 24700)/                                    
     $ 1.225E-06, 1.182E-06, 1.279E-06, 1.482E-06, 1.732E-06, 1.976E-06,
     $ 2.190E-06, 2.361E-06, 2.520E-06, 2.722E-06, 2.952E-06, 3.149E-06,
     $ 3.309E-06, 3.446E-06, 3.529E-06, 3.560E-06, 3.579E-06, 3.581E-06,
     $ 3.549E-06, 3.478E-06, 3.359E-06, 3.208E-06, 3.059E-06, 2.926E-06,
     $ 2.829E-06, 2.768E-06, 2.719E-06, 2.688E-06, 2.659E-06, 2.603E-06,
     $ 2.578E-06, 2.617E-06, 2.644E-06, 2.614E-06, 2.557E-06, 2.468E-06,
     $ 2.344E-06, 2.261E-06, 2.306E-06, 2.465E-06, 2.660E-06, 2.826E-06,
     $ 2.918E-06, 2.915E-06, 2.854E-06, 2.795E-06, 2.753E-06, 2.723E-06,
     $ 2.665E-06, 2.509E-06, 2.272E-06, 2.055E-06, 1.915E-06, 1.881E-06,
     $ 1.996E-06, 2.227E-06, 2.462E-06, 2.657E-06, 2.823E-06, 2.950E-06,
     $ 3.047E-06, 3.146E-06, 3.215E-06, 3.226E-06, 3.188E-06, 3.092E-06,
     $ 2.942E-06, 2.788E-06, 2.670E-06, 2.611E-06, 2.629E-06, 2.708E-06,
     $ 2.844E-06, 3.007E-06, 3.126E-06, 3.201E-06, 3.271E-06, 3.334E-06,
     $ 3.389E-06, 3.464E-06, 3.532E-06, 3.526E-06, 3.428E-06, 3.258E-06,
     $ 3.053E-06, 2.866E-06, 2.743E-06, 2.677E-06, 2.647E-06, 2.643E-06,
     $ 2.634E-06, 2.630E-06, 2.677E-06, 2.763E-06, 2.844E-06, 2.905E-06,
     $ 2.915E-06, 2.876E-06, 2.830E-06, 2.779E-06/
C                                                                       
C     24701 TO 24800 CM-1 DATA.                                         
      DATA (SUN(I),I= 24701, 24800)/                                    
     $ 2.734E-06, 2.722E-06, 2.690E-06, 2.573E-06, 2.368E-06, 2.079E-06,
     $ 1.713E-06, 1.344E-06, 1.065E-06, 9.409E-07, 1.005E-06, 1.226E-06,
     $ 1.507E-06, 1.782E-06, 2.027E-06, 2.192E-06, 2.260E-06, 2.308E-06,
     $ 2.370E-06, 2.407E-06, 2.428E-06, 2.478E-06, 2.543E-06, 2.604E-06,
     $ 2.672E-06, 2.774E-06, 2.911E-06, 3.041E-06, 3.122E-06, 3.156E-06,
     $ 3.147E-06, 3.067E-06, 2.924E-06, 2.802E-06, 2.729E-06, 2.642E-06,
     $ 2.543E-06, 2.471E-06, 2.393E-06, 2.302E-06, 2.244E-06, 2.236E-06,
     $ 2.289E-06, 2.415E-06, 2.578E-06, 2.763E-06, 2.976E-06, 3.165E-06,
     $ 3.272E-06, 3.301E-06, 3.271E-06, 3.168E-06, 3.006E-06, 2.872E-06,
     $ 2.821E-06, 2.843E-06, 2.952E-06, 3.140E-06, 3.337E-06, 3.487E-06,
     $ 3.579E-06, 3.595E-06, 3.535E-06, 3.434E-06, 3.325E-06, 3.218E-06,
     $ 3.110E-06, 3.009E-06, 2.924E-06, 2.847E-06, 2.781E-06, 2.765E-06,
     $ 2.818E-06, 2.879E-06, 2.880E-06, 2.809E-06, 2.664E-06, 2.461E-06,
     $ 2.291E-06, 2.248E-06, 2.351E-06, 2.547E-06, 2.716E-06, 2.765E-06,
     $ 2.697E-06, 2.522E-06, 2.286E-06, 2.150E-06, 2.212E-06, 2.382E-06,
     $ 2.580E-06, 2.789E-06, 2.930E-06, 2.930E-06, 2.828E-06, 2.704E-06,
     $ 2.554E-06, 2.330E-06, 2.067E-06, 1.836E-06/
C                                                                       
C     24801 TO 24900 CM-1 DATA.                                         
      DATA (SUN(I),I= 24801, 24900)/                                    
     $ 1.653E-06, 1.553E-06, 1.622E-06, 1.842E-06, 2.121E-06, 2.415E-06,
     $ 2.694E-06, 2.902E-06, 3.065E-06, 3.235E-06, 3.402E-06, 3.533E-06,
     $ 3.602E-06, 3.594E-06, 3.494E-06, 3.305E-06, 3.096E-06, 2.957E-06,
     $ 2.876E-06, 2.808E-06, 2.771E-06, 2.761E-06, 2.727E-06, 2.666E-06,
     $ 2.638E-06, 2.659E-06, 2.687E-06, 2.715E-06, 2.781E-06, 2.881E-06,
     $ 2.981E-06, 3.061E-06, 3.102E-06, 3.076E-06, 2.959E-06, 2.760E-06,
     $ 2.561E-06, 2.438E-06, 2.361E-06, 2.331E-06, 2.383E-06, 2.447E-06,
     $ 2.462E-06, 2.504E-06, 2.608E-06, 2.723E-06, 2.841E-06, 2.960E-06,
     $ 3.050E-06, 3.083E-06, 3.062E-06, 3.024E-06, 2.972E-06, 2.879E-06,
     $ 2.774E-06, 2.706E-06, 2.696E-06, 2.765E-06, 2.892E-06, 3.041E-06,
     $ 3.159E-06, 3.173E-06, 3.086E-06, 2.965E-06, 2.832E-06, 2.727E-06,
     $ 2.716E-06, 2.780E-06, 2.857E-06, 2.920E-06, 2.952E-06, 2.967E-06,
     $ 2.995E-06, 3.039E-06, 3.076E-06, 3.071E-06, 2.980E-06, 2.790E-06,
     $ 2.555E-06, 2.366E-06, 2.267E-06, 2.247E-06, 2.300E-06, 2.394E-06,
     $ 2.463E-06, 2.487E-06, 2.494E-06, 2.504E-06, 2.535E-06, 2.591E-06,
     $ 2.686E-06, 2.834E-06, 2.981E-06, 3.088E-06, 3.189E-06, 3.275E-06,
     $ 3.296E-06, 3.255E-06, 3.174E-06, 3.054E-06/
C                                                                       
C     24901 TO 25000 CM-1 DATA.                                         
      DATA (SUN(I),I= 24901, 25000)/                                    
     $ 2.909E-06, 2.779E-06, 2.696E-06, 2.663E-06, 2.666E-06, 2.685E-06,
     $ 2.728E-06, 2.822E-06, 2.952E-06, 3.057E-06, 3.096E-06, 3.037E-06,
     $ 2.858E-06, 2.606E-06, 2.360E-06, 2.197E-06, 2.161E-06, 2.208E-06,
     $ 2.295E-06, 2.422E-06, 2.543E-06, 2.641E-06, 2.781E-06, 2.940E-06,
     $ 3.058E-06, 3.163E-06, 3.231E-06, 3.176E-06, 3.036E-06, 2.906E-06,
     $ 2.797E-06, 2.715E-06, 2.725E-06, 2.840E-06, 2.973E-06, 3.069E-06,
     $ 3.151E-06, 3.211E-06, 3.207E-06, 3.175E-06, 3.161E-06, 3.143E-06,
     $ 3.112E-06, 3.080E-06, 3.022E-06, 2.911E-06, 2.768E-06, 2.623E-06,
     $ 2.490E-06, 2.394E-06, 2.364E-06, 2.396E-06, 2.453E-06, 2.503E-06,
     $ 2.504E-06, 2.398E-06, 2.172E-06, 1.865E-06, 1.562E-06, 1.386E-06,
     $ 1.421E-06, 1.666E-06, 2.078E-06, 2.549E-06, 2.923E-06, 3.143E-06,
     $ 3.237E-06, 3.236E-06, 3.211E-06, 3.250E-06, 3.340E-06, 3.418E-06,
     $ 3.466E-06, 3.481E-06, 3.448E-06, 3.380E-06, 3.324E-06, 3.276E-06,
     $ 3.187E-06, 3.075E-06, 2.977E-06, 2.861E-06, 2.750E-06, 2.715E-06,
     $ 2.713E-06, 2.685E-06, 2.679E-06, 2.693E-06, 2.676E-06, 2.670E-06,
     $ 2.725E-06, 2.825E-06, 2.952E-06, 3.066E-06, 3.123E-06, 3.111E-06,
     $ 3.008E-06, 2.827E-06, 2.674E-06, 2.585E-06/
C                                                                       
C     25001 TO 25100 CM-1 DATA.                                         
      DATA (SUN(I),I= 25001, 25100)/                                    
     $ 2.505E-06, 2.464E-06, 2.485E-06, 2.463E-06, 2.369E-06, 2.315E-06,
     $ 2.301E-06, 2.239E-06, 2.199E-06, 2.255E-06, 2.317E-06, 2.362E-06,
     $ 2.453E-06, 2.542E-06, 2.570E-06, 2.577E-06, 2.568E-06, 2.515E-06,
     $ 2.467E-06, 2.463E-06, 2.465E-06, 2.458E-06, 2.489E-06, 2.559E-06,
     $ 2.590E-06, 2.551E-06, 2.504E-06, 2.466E-06, 2.412E-06, 2.409E-06,
     $ 2.551E-06, 2.798E-06, 3.041E-06, 3.230E-06, 3.334E-06, 3.311E-06,
     $ 3.188E-06, 3.055E-06, 2.986E-06, 2.996E-06, 3.051E-06, 3.112E-06,
     $ 3.139E-06, 3.092E-06, 2.989E-06, 2.906E-06, 2.861E-06, 2.829E-06,
     $ 2.823E-06, 2.833E-06, 2.788E-06, 2.648E-06, 2.448E-06, 2.228E-06,
     $ 2.015E-06, 1.860E-06, 1.844E-06, 2.009E-06, 2.306E-06, 2.642E-06,
     $ 2.956E-06, 3.205E-06, 3.336E-06, 3.351E-06, 3.321E-06, 3.282E-06,
     $ 3.221E-06, 3.163E-06, 3.120E-06, 3.035E-06, 2.893E-06, 2.728E-06,
     $ 2.548E-06, 2.374E-06, 2.246E-06, 2.193E-06, 2.226E-06, 2.305E-06,
     $ 2.402E-06, 2.527E-06, 2.636E-06, 2.678E-06, 2.663E-06, 2.610E-06,
     $ 2.557E-06, 2.548E-06, 2.565E-06, 2.588E-06, 2.586E-06, 2.505E-06,
     $ 2.370E-06, 2.268E-06, 2.229E-06, 2.267E-06, 2.380E-06, 2.498E-06,
     $ 2.557E-06, 2.547E-06, 2.496E-06, 2.444E-06/
C                                                                       
C     25101 TO 25200 CM-1 DATA.                                         
      DATA (SUN(I),I= 25101, 25200)/                                    
     $ 2.404E-06, 2.357E-06, 2.298E-06, 2.219E-06, 2.108E-06, 1.999E-06,
     $ 1.945E-06, 1.982E-06, 2.109E-06, 2.277E-06, 2.441E-06, 2.599E-06,
     $ 2.728E-06, 2.810E-06, 2.872E-06, 2.919E-06, 2.913E-06, 2.853E-06,
     $ 2.755E-06, 2.627E-06, 2.518E-06, 2.475E-06, 2.475E-06, 2.493E-06,
     $ 2.527E-06, 2.536E-06, 2.500E-06, 2.437E-06, 2.353E-06, 2.272E-06,
     $ 2.220E-06, 2.188E-06, 2.196E-06, 2.261E-06, 2.306E-06, 2.279E-06,
     $ 2.217E-06, 2.129E-06, 2.023E-06, 1.973E-06, 2.018E-06, 2.110E-06,
     $ 2.201E-06, 2.251E-06, 2.244E-06, 2.200E-06, 2.114E-06, 1.985E-06,
     $ 1.850E-06, 1.717E-06, 1.566E-06, 1.438E-06, 1.381E-06, 1.370E-06,
     $ 1.371E-06, 1.390E-06, 1.403E-06, 1.384E-06, 1.367E-06, 1.380E-06,
     $ 1.392E-06, 1.387E-06, 1.369E-06, 1.322E-06, 1.246E-06, 1.176E-06,
     $ 1.133E-06, 1.110E-06, 1.093E-06, 1.069E-06, 1.029E-06, 9.720E-07,
     $ 9.117E-07, 8.637E-07, 8.257E-07, 7.925E-07, 7.610E-07, 7.216E-07,
     $ 6.724E-07, 6.245E-07, 5.795E-07, 5.319E-07, 4.837E-07, 4.362E-07,
     $ 3.857E-07, 3.337E-07, 2.868E-07, 2.459E-07, 2.092E-07, 1.801E-07,
     $ 1.657E-07, 1.705E-07, 1.938E-07, 2.321E-07, 2.811E-07, 3.363E-07,
     $ 3.906E-07, 4.397E-07, 4.818E-07, 5.156E-07/
C                                                                       
C     25201 TO 25300 CM-1 DATA.                                         
      DATA (SUN(I),I= 25201, 25300)/                                    
     $ 5.440E-07, 5.661E-07, 5.825E-07, 6.070E-07, 6.442E-07, 6.836E-07,
     $ 7.325E-07, 8.037E-07, 8.851E-07, 9.698E-07, 1.063E-06, 1.149E-06,
     $ 1.203E-06, 1.228E-06, 1.235E-06, 1.237E-06, 1.248E-06, 1.278E-06,
     $ 1.325E-06, 1.365E-06, 1.367E-06, 1.337E-06, 1.302E-06, 1.275E-06,
     $ 1.276E-06, 1.321E-06, 1.390E-06, 1.447E-06, 1.465E-06, 1.429E-06,
     $ 1.341E-06, 1.214E-06, 1.071E-06, 9.458E-07, 8.737E-07, 8.879E-07,
     $ 1.003E-06, 1.199E-06, 1.432E-06, 1.662E-06, 1.863E-06, 2.015E-06,
     $ 2.122E-06, 2.217E-06, 2.313E-06, 2.398E-06, 2.470E-06, 2.535E-06,
     $ 2.585E-06, 2.620E-06, 2.642E-06, 2.627E-06, 2.557E-06, 2.451E-06,
     $ 2.322E-06, 2.171E-06, 2.058E-06, 2.039E-06, 2.071E-06, 2.107E-06,
     $ 2.155E-06, 2.171E-06, 2.079E-06, 1.907E-06, 1.743E-06, 1.606E-06,
     $ 1.511E-06, 1.531E-06, 1.690E-06, 1.893E-06, 2.072E-06, 2.248E-06,
     $ 2.396E-06, 2.470E-06, 2.520E-06, 2.597E-06, 2.667E-06, 2.711E-06,
     $ 2.743E-06, 2.758E-06, 2.735E-06, 2.663E-06, 2.548E-06, 2.394E-06,
     $ 2.196E-06, 1.977E-06, 1.774E-06, 1.584E-06, 1.419E-06, 1.344E-06,
     $ 1.370E-06, 1.466E-06, 1.635E-06, 1.856E-06, 2.045E-06, 2.177E-06,
     $ 2.271E-06, 2.314E-06, 2.325E-06, 2.339E-06/
C                                                                       
C     25301 TO 25400 CM-1 DATA.                                         
      DATA (SUN(I),I= 25301, 25400)/                                    
     $ 2.346E-06, 2.350E-06, 2.372E-06, 2.383E-06, 2.339E-06, 2.256E-06,
     $ 2.183E-06, 2.129E-06, 2.101E-06, 2.136E-06, 2.212E-06, 2.240E-06,
     $ 2.172E-06, 2.039E-06, 1.890E-06, 1.759E-06, 1.679E-06, 1.684E-06,
     $ 1.753E-06, 1.799E-06, 1.791E-06, 1.774E-06, 1.768E-06, 1.759E-06,
     $ 1.778E-06, 1.871E-06, 1.996E-06, 2.091E-06, 2.174E-06, 2.257E-06,
     $ 2.298E-06, 2.304E-06, 2.327E-06, 2.368E-06, 2.391E-06, 2.371E-06,
     $ 2.289E-06, 2.124E-06, 1.895E-06, 1.671E-06, 1.512E-06, 1.422E-06,
     $ 1.383E-06, 1.358E-06, 1.300E-06, 1.212E-06, 1.130E-06, 1.102E-06,
     $ 1.168E-06, 1.323E-06, 1.501E-06, 1.665E-06, 1.793E-06, 1.837E-06,
     $ 1.809E-06, 1.771E-06, 1.736E-06, 1.695E-06, 1.675E-06, 1.656E-06,
     $ 1.601E-06, 1.535E-06, 1.478E-06, 1.416E-06, 1.387E-06, 1.417E-06,
     $ 1.462E-06, 1.513E-06, 1.583E-06, 1.645E-06, 1.675E-06, 1.689E-06,
     $ 1.692E-06, 1.675E-06, 1.639E-06, 1.595E-06, 1.545E-06, 1.483E-06,
     $ 1.407E-06, 1.320E-06, 1.229E-06, 1.141E-06, 1.060E-06, 9.981E-07,
     $ 9.700E-07, 9.620E-07, 9.512E-07, 9.379E-07, 9.210E-07, 8.878E-07,
     $ 8.494E-07, 8.249E-07, 8.075E-07, 7.875E-07, 7.643E-07, 7.300E-07,
     $ 6.808E-07, 6.252E-07, 5.698E-07, 5.215E-07/
C                                                                       
C     25401 TO 25500 CM-1 DATA.                                         
      DATA (SUN(I),I= 25401, 25500)/                                    
     $ 4.898E-07, 4.732E-07, 4.622E-07, 4.517E-07, 4.380E-07, 4.155E-07,
     $ 3.839E-07, 3.471E-07, 3.063E-07, 2.615E-07, 2.158E-07, 1.744E-07,
     $ 1.425E-07, 1.258E-07, 1.276E-07, 1.466E-07, 1.773E-07, 2.152E-07,
     $ 2.564E-07, 2.962E-07, 3.341E-07, 3.733E-07, 4.129E-07, 4.512E-07,
     $ 4.890E-07, 5.239E-07, 5.522E-07, 5.754E-07, 5.961E-07, 6.135E-07,
     $ 6.246E-07, 6.255E-07, 6.183E-07, 6.070E-07, 5.942E-07, 5.957E-07,
     $ 6.293E-07, 6.864E-07, 7.500E-07, 8.182E-07, 8.858E-07, 9.351E-07,
     $ 9.654E-07, 9.923E-07, 1.008E-06, 9.872E-07, 9.303E-07, 8.538E-07,
     $ 7.724E-07, 7.172E-07, 7.278E-07, 8.213E-07, 9.852E-07, 1.182E-06,
     $ 1.371E-06, 1.524E-06, 1.627E-06, 1.684E-06, 1.702E-06, 1.683E-06,
     $ 1.636E-06, 1.564E-06, 1.475E-06, 1.399E-06, 1.370E-06, 1.400E-06,
     $ 1.495E-06, 1.636E-06, 1.776E-06, 1.901E-06, 2.002E-06, 2.059E-06,
     $ 2.087E-06, 2.127E-06, 2.180E-06, 2.224E-06, 2.255E-06, 2.261E-06,
     $ 2.191E-06, 2.023E-06, 1.789E-06, 1.533E-06, 1.311E-06, 1.196E-06,
     $ 1.228E-06, 1.387E-06, 1.611E-06, 1.813E-06, 1.927E-06, 1.946E-06,
     $ 1.873E-06, 1.737E-06, 1.608E-06, 1.516E-06, 1.434E-06, 1.360E-06,
     $ 1.291E-06, 1.211E-06, 1.147E-06, 1.136E-06/
C                                                                       
C     25501 TO 25600 CM-1 DATA.                                         
      DATA (SUN(I),I= 25501, 25600)/                                    
     $ 1.201E-06, 1.368E-06, 1.612E-06, 1.845E-06, 2.012E-06, 2.113E-06,
     $ 2.122E-06, 2.016E-06, 1.864E-06, 1.733E-06, 1.623E-06, 1.570E-06,
     $ 1.650E-06, 1.860E-06, 2.143E-06, 2.417E-06, 2.601E-06, 2.665E-06,
     $ 2.615E-06, 2.452E-06, 2.257E-06, 2.129E-06, 2.059E-06, 2.022E-06,
     $ 2.041E-06, 2.077E-06, 2.072E-06, 2.043E-06, 2.025E-06, 2.039E-06,
     $ 2.132E-06, 2.310E-06, 2.521E-06, 2.697E-06, 2.764E-06, 2.683E-06,
     $ 2.498E-06, 2.275E-06, 2.081E-06, 1.981E-06, 1.967E-06, 1.990E-06,
     $ 2.035E-06, 2.069E-06, 2.090E-06, 2.159E-06, 2.285E-06, 2.406E-06,
     $ 2.511E-06, 2.618E-06, 2.685E-06, 2.691E-06, 2.702E-06, 2.760E-06,
     $ 2.816E-06, 2.845E-06, 2.858E-06, 2.808E-06, 2.647E-06, 2.408E-06,
     $ 2.139E-06, 1.884E-06, 1.733E-06, 1.708E-06, 1.747E-06, 1.830E-06,
     $ 1.946E-06, 2.034E-06, 2.112E-06, 2.262E-06, 2.451E-06, 2.596E-06,
     $ 2.680E-06, 2.689E-06, 2.607E-06, 2.498E-06, 2.430E-06, 2.389E-06,
     $ 2.365E-06, 2.353E-06, 2.316E-06, 2.271E-06, 2.268E-06, 2.279E-06,
     $ 2.272E-06, 2.243E-06, 2.138E-06, 1.962E-06, 1.800E-06, 1.677E-06,
     $ 1.594E-06, 1.582E-06, 1.584E-06, 1.517E-06, 1.407E-06, 1.316E-06,
     $ 1.266E-06, 1.302E-06, 1.466E-06, 1.718E-06/
C                                                                       
C     25601 TO 25700 CM-1 DATA.                                         
      DATA (SUN(I),I= 25601, 25700)/                                    
     $ 1.974E-06, 2.179E-06, 2.296E-06, 2.280E-06, 2.138E-06, 1.933E-06,
     $ 1.728E-06, 1.568E-06, 1.483E-06, 1.447E-06, 1.406E-06, 1.346E-06,
     $ 1.278E-06, 1.228E-06, 1.252E-06, 1.376E-06, 1.551E-06, 1.730E-06,
     $ 1.902E-06, 2.047E-06, 2.165E-06, 2.294E-06, 2.436E-06, 2.567E-06,
     $ 2.646E-06, 2.627E-06, 2.516E-06, 2.368E-06, 2.208E-06, 2.056E-06,
     $ 1.944E-06, 1.841E-06, 1.707E-06, 1.567E-06, 1.452E-06, 1.402E-06,
     $ 1.474E-06, 1.664E-06, 1.890E-06, 2.106E-06, 2.291E-06, 2.359E-06,
     $ 2.260E-06, 2.084E-06, 1.915E-06, 1.748E-06, 1.651E-06, 1.728E-06,
     $ 1.929E-06, 2.148E-06, 2.379E-06, 2.598E-06, 2.735E-06, 2.790E-06,
     $ 2.801E-06, 2.770E-06, 2.670E-06, 2.480E-06, 2.214E-06, 1.903E-06,
     $ 1.572E-06, 1.278E-06, 1.118E-06, 1.132E-06, 1.288E-06, 1.551E-06,
     $ 1.888E-06, 2.194E-06, 2.352E-06, 2.378E-06, 2.333E-06, 2.205E-06,
     $ 2.028E-06, 1.920E-06, 1.866E-06, 1.773E-06, 1.691E-06, 1.692E-06,
     $ 1.739E-06, 1.842E-06, 2.053E-06, 2.291E-06, 2.449E-06, 2.530E-06,
     $ 2.537E-06, 2.467E-06, 2.385E-06, 2.347E-06, 2.326E-06, 2.288E-06,
     $ 2.229E-06, 2.133E-06, 1.997E-06, 1.866E-06, 1.778E-06, 1.713E-06,
     $ 1.670E-06, 1.648E-06, 1.612E-06, 1.540E-06/
C                                                                       
C     25701 TO 25800 CM-1 DATA.                                         
      DATA (SUN(I),I= 25701, 25800)/                                    
     $ 1.450E-06, 1.351E-06, 1.236E-06, 1.115E-06, 9.998E-07, 9.016E-07,
     $ 8.414E-07, 8.431E-07, 9.186E-07, 1.073E-06, 1.290E-06, 1.523E-06,
     $ 1.719E-06, 1.833E-06, 1.836E-06, 1.738E-06, 1.563E-06, 1.342E-06,
     $ 1.127E-06, 9.531E-07, 8.191E-07, 7.246E-07, 6.742E-07, 6.676E-07,
     $ 7.076E-07, 7.874E-07, 8.889E-07, 1.015E-06, 1.173E-06, 1.336E-06,
     $ 1.485E-06, 1.631E-06, 1.735E-06, 1.766E-06, 1.787E-06, 1.856E-06,
     $ 1.975E-06, 2.166E-06, 2.379E-06, 2.478E-06, 2.398E-06, 2.148E-06,
     $ 1.754E-06, 1.315E-06, 9.622E-07, 7.435E-07, 6.476E-07, 6.439E-07,
     $ 6.941E-07, 7.638E-07, 8.316E-07, 8.977E-07, 9.802E-07, 1.072E-06,
     $ 1.153E-06, 1.232E-06, 1.312E-06, 1.388E-06, 1.456E-06, 1.509E-06,
     $ 1.530E-06, 1.532E-06, 1.529E-06, 1.520E-06, 1.534E-06, 1.588E-06,
     $ 1.643E-06, 1.668E-06, 1.671E-06, 1.611E-06, 1.462E-06, 1.269E-06,
     $ 1.047E-06, 8.073E-07, 6.065E-07, 4.926E-07, 4.760E-07, 5.544E-07,
     $ 7.088E-07, 9.189E-07, 1.139E-06, 1.305E-06, 1.414E-06, 1.496E-06,
     $ 1.542E-06, 1.577E-06, 1.653E-06, 1.740E-06, 1.784E-06, 1.806E-06,
     $ 1.820E-06, 1.807E-06, 1.799E-06, 1.838E-06, 1.896E-06, 1.913E-06,
     $ 1.884E-06, 1.852E-06, 1.853E-06, 1.880E-06/
C                                                                       
C     25801 TO 25900 CM-1 DATA.                                         
      DATA (SUN(I),I= 25801, 25900)/                                    
     $ 1.910E-06, 1.948E-06, 1.958E-06, 1.869E-06, 1.719E-06, 1.624E-06,
     $ 1.600E-06, 1.591E-06, 1.590E-06, 1.572E-06, 1.454E-06, 1.238E-06,
     $ 1.024E-06, 8.701E-07, 7.933E-07, 8.097E-07, 8.961E-07, 9.859E-07,
     $ 1.028E-06, 1.005E-06, 9.331E-07, 8.451E-07, 7.647E-07, 7.139E-07,
     $ 7.092E-07, 7.444E-07, 8.044E-07, 8.824E-07, 9.844E-07, 1.105E-06,
     $ 1.211E-06, 1.287E-06, 1.340E-06, 1.355E-06, 1.341E-06, 1.350E-06,
     $ 1.390E-06, 1.439E-06, 1.509E-06, 1.595E-06, 1.648E-06, 1.656E-06,
     $ 1.647E-06, 1.625E-06, 1.599E-06, 1.585E-06, 1.590E-06, 1.621E-06,
     $ 1.653E-06, 1.657E-06, 1.668E-06, 1.715E-06, 1.772E-06, 1.835E-06,
     $ 1.901E-06, 1.942E-06, 1.923E-06, 1.821E-06, 1.671E-06, 1.523E-06,
     $ 1.380E-06, 1.283E-06, 1.315E-06, 1.457E-06, 1.644E-06, 1.857E-06,
     $ 2.043E-06, 2.140E-06, 2.145E-06, 2.082E-06, 1.968E-06, 1.835E-06,
     $ 1.718E-06, 1.650E-06, 1.652E-06, 1.717E-06, 1.825E-06, 1.927E-06,
     $ 1.969E-06, 1.970E-06, 1.973E-06, 1.982E-06, 1.997E-06, 2.013E-06,
     $ 1.969E-06, 1.813E-06, 1.564E-06, 1.287E-06, 1.053E-06, 9.015E-07,
     $ 8.398E-07, 8.509E-07, 8.838E-07, 8.840E-07, 8.392E-07, 7.612E-07,
     $ 6.604E-07, 5.607E-07, 4.922E-07, 4.666E-07/
C                                                                       
C     25901 TO 26000 CM-1 DATA.                                         
      DATA (SUN(I),I= 25901, 26000)/                                    
     $ 4.864E-07, 5.473E-07, 6.254E-07, 6.981E-07, 7.615E-07, 8.031E-07,
     $ 8.152E-07, 8.333E-07, 8.781E-07, 9.255E-07, 9.884E-07, 1.098E-06,
     $ 1.221E-06, 1.332E-06, 1.460E-06, 1.600E-06, 1.693E-06, 1.712E-06,
     $ 1.653E-06, 1.508E-06, 1.297E-06, 1.074E-06, 9.080E-07, 8.391E-07,
     $ 8.661E-07, 9.652E-07, 1.115E-06, 1.303E-06, 1.503E-06, 1.677E-06,
     $ 1.805E-06, 1.863E-06, 1.801E-06, 1.632E-06, 1.435E-06, 1.273E-06,
     $ 1.182E-06, 1.182E-06, 1.253E-06, 1.343E-06, 1.410E-06, 1.455E-06,
     $ 1.513E-06, 1.592E-06, 1.656E-06, 1.697E-06, 1.715E-06, 1.684E-06,
     $ 1.645E-06, 1.675E-06, 1.766E-06, 1.873E-06, 1.969E-06, 1.999E-06,
     $ 1.938E-06, 1.822E-06, 1.678E-06, 1.532E-06, 1.427E-06, 1.346E-06,
     $ 1.270E-06, 1.212E-06, 1.161E-06, 1.094E-06, 1.024E-06, 9.676E-07,
     $ 9.599E-07, 1.036E-06, 1.168E-06, 1.320E-06, 1.492E-06, 1.651E-06,
     $ 1.748E-06, 1.812E-06, 1.882E-06, 1.918E-06, 1.897E-06, 1.873E-06,
     $ 1.881E-06, 1.892E-06, 1.918E-06, 1.986E-06, 2.021E-06, 1.943E-06,
     $ 1.794E-06, 1.614E-06, 1.410E-06, 1.261E-06, 1.244E-06, 1.323E-06,
     $ 1.448E-06, 1.592E-06, 1.694E-06, 1.712E-06, 1.661E-06, 1.567E-06,
     $ 1.471E-06, 1.425E-06, 1.449E-06, 1.542E-06/
C                                                                       
C     26001 TO 26100 CM-1 DATA.                                         
      DATA (SUN(I),I= 26001, 26100)/                                    
     $ 1.688E-06, 1.825E-06, 1.903E-06, 1.911E-06, 1.848E-06, 1.747E-06,
     $ 1.654E-06, 1.579E-06, 1.513E-06, 1.450E-06, 1.376E-06, 1.311E-06,
     $ 1.304E-06, 1.375E-06, 1.523E-06, 1.707E-06, 1.848E-06, 1.888E-06,
     $ 1.824E-06, 1.682E-06, 1.509E-06, 1.350E-06, 1.212E-06, 1.084E-06,
     $ 9.515E-07, 8.096E-07, 6.764E-07, 5.796E-07, 5.371E-07, 5.500E-07,
     $ 6.135E-07, 7.184E-07, 8.440E-07, 9.624E-07, 1.046E-06, 1.080E-06,
     $ 1.076E-06, 1.042E-06, 9.810E-07, 9.197E-07, 8.638E-07, 7.862E-07,
     $ 6.902E-07, 6.033E-07, 5.349E-07, 5.047E-07, 5.419E-07, 6.411E-07,
     $ 7.773E-07, 9.304E-07, 1.076E-06, 1.194E-06, 1.273E-06, 1.305E-06,
     $ 1.300E-06, 1.274E-06, 1.231E-06, 1.187E-06, 1.178E-06, 1.196E-06,
     $ 1.209E-06, 1.210E-06, 1.185E-06, 1.129E-06, 1.069E-06, 1.032E-06,
     $ 1.019E-06, 1.018E-06, 9.950E-07, 9.241E-07, 8.122E-07, 6.879E-07,
     $ 5.925E-07, 5.663E-07, 6.095E-07, 6.923E-07, 7.915E-07, 8.720E-07,
     $ 9.010E-07, 8.905E-07, 8.595E-07, 7.985E-07, 7.197E-07, 6.501E-07,
     $ 5.915E-07, 5.445E-07, 5.331E-07, 5.797E-07, 6.812E-07, 8.154E-07,
     $ 9.645E-07, 1.109E-06, 1.209E-06, 1.249E-06, 1.267E-06, 1.307E-06,
     $ 1.382E-06, 1.494E-06, 1.620E-06, 1.698E-06/
C                                                                       
C     26101 TO 26200 CM-1 DATA.                                         
      DATA (SUN(I),I= 26101, 26200)/                                    
     $ 1.675E-06, 1.542E-06, 1.321E-06, 1.069E-06, 8.689E-07, 7.796E-07,
     $ 8.112E-07, 9.394E-07, 1.117E-06, 1.273E-06, 1.339E-06, 1.299E-06,
     $ 1.181E-06, 1.014E-06, 8.448E-07, 7.353E-07, 7.252E-07, 8.094E-07,
     $ 9.511E-07, 1.097E-06, 1.197E-06, 1.222E-06, 1.164E-06, 1.058E-06,
     $ 9.495E-07, 8.486E-07, 7.441E-07, 6.465E-07, 5.670E-07, 5.081E-07,
     $ 4.958E-07, 5.524E-07, 6.578E-07, 7.805E-07, 8.910E-07, 9.461E-07,
     $ 9.306E-07, 8.741E-07, 8.008E-07, 7.392E-07, 7.428E-07, 8.251E-07,
     $ 9.579E-07, 1.140E-06, 1.357E-06, 1.546E-06, 1.676E-06, 1.761E-06,
     $ 1.797E-06, 1.786E-06, 1.771E-06, 1.779E-06, 1.773E-06, 1.707E-06,
     $ 1.598E-06, 1.473E-06, 1.334E-06, 1.215E-06, 1.159E-06, 1.136E-06,
     $ 1.088E-06, 1.002E-06, 8.865E-07, 7.446E-07, 5.968E-07, 4.815E-07,
     $ 4.241E-07, 4.266E-07, 4.789E-07, 5.710E-07, 6.900E-07, 8.120E-07,
     $ 9.331E-07, 1.083E-06, 1.271E-06, 1.479E-06, 1.693E-06, 1.878E-06,
     $ 1.989E-06, 2.031E-06, 2.019E-06, 1.962E-06, 1.897E-06, 1.862E-06,
     $ 1.850E-06, 1.865E-06, 1.922E-06, 1.999E-06, 2.052E-06, 2.054E-06,
     $ 1.982E-06, 1.832E-06, 1.625E-06, 1.377E-06, 1.111E-06, 8.755E-07,
     $ 6.995E-07, 5.934E-07, 5.920E-07, 7.150E-07/
C                                                                       
C     26201 TO 26300 CM-1 DATA.                                         
      DATA (SUN(I),I= 26201, 26300)/                                    
     $ 9.140E-07, 1.132E-06, 1.325E-06, 1.436E-06, 1.459E-06, 1.451E-06,
     $ 1.438E-06, 1.435E-06, 1.482E-06, 1.547E-06, 1.560E-06, 1.521E-06,
     $ 1.454E-06, 1.330E-06, 1.168E-06, 1.050E-06, 1.016E-06, 1.063E-06,
     $ 1.219E-06, 1.481E-06, 1.743E-06, 1.906E-06, 1.972E-06, 1.954E-06,
     $ 1.847E-06, 1.728E-06, 1.683E-06, 1.686E-06, 1.691E-06, 1.707E-06,
     $ 1.736E-06, 1.773E-06, 1.852E-06, 2.000E-06, 2.203E-06, 2.410E-06,
     $ 2.541E-06, 2.542E-06, 2.429E-06, 2.262E-06, 2.089E-06, 1.974E-06,
     $ 1.969E-06, 2.019E-06, 2.056E-06, 2.084E-06, 2.078E-06, 2.019E-06,
     $ 1.975E-06, 1.962E-06, 1.936E-06, 1.906E-06, 1.881E-06, 1.809E-06,
     $ 1.676E-06, 1.543E-06, 1.436E-06, 1.331E-06, 1.257E-06, 1.244E-06,
     $ 1.245E-06, 1.253E-06, 1.311E-06, 1.415E-06, 1.559E-06, 1.733E-06,
     $ 1.878E-06, 1.969E-06, 2.019E-06, 2.022E-06, 1.995E-06, 2.003E-06,
     $ 2.067E-06, 2.149E-06, 2.225E-06, 2.302E-06, 2.370E-06, 2.410E-06,
     $ 2.426E-06, 2.445E-06, 2.478E-06, 2.484E-06, 2.430E-06, 2.344E-06,
     $ 2.242E-06, 2.134E-06, 2.084E-06, 2.114E-06, 2.176E-06, 2.232E-06,
     $ 2.219E-06, 2.085E-06, 1.866E-06, 1.621E-06, 1.404E-06, 1.300E-06,
     $ 1.353E-06, 1.521E-06, 1.751E-06, 2.004E-06/
C                                                                       
C     26301 TO 26400 CM-1 DATA.                                         
      DATA (SUN(I),I= 26301, 26400)/                                    
     $ 2.217E-06, 2.338E-06, 2.381E-06, 2.368E-06, 2.289E-06, 2.140E-06,
     $ 1.927E-06, 1.664E-06, 1.387E-06, 1.142E-06, 9.862E-07, 9.564E-07,
     $ 1.026E-06, 1.130E-06, 1.210E-06, 1.229E-06, 1.170E-06, 1.060E-06,
     $ 9.530E-07, 8.875E-07, 8.591E-07, 8.552E-07, 8.774E-07, 9.178E-07,
     $ 9.669E-07, 1.039E-06, 1.149E-06, 1.291E-06, 1.451E-06, 1.611E-06,
     $ 1.749E-06, 1.835E-06, 1.862E-06, 1.846E-06, 1.812E-06, 1.783E-06,
     $ 1.768E-06, 1.735E-06, 1.649E-06, 1.512E-06, 1.348E-06, 1.192E-06,
     $ 1.085E-06, 1.067E-06, 1.146E-06, 1.271E-06, 1.384E-06, 1.482E-06,
     $ 1.535E-06, 1.488E-06, 1.378E-06, 1.289E-06, 1.237E-06, 1.236E-06,
     $ 1.337E-06, 1.514E-06, 1.671E-06, 1.767E-06, 1.814E-06, 1.822E-06,
     $ 1.807E-06, 1.807E-06, 1.846E-06, 1.895E-06, 1.907E-06, 1.894E-06,
     $ 1.880E-06, 1.846E-06, 1.795E-06, 1.757E-06, 1.702E-06, 1.593E-06,
     $ 1.472E-06, 1.371E-06, 1.274E-06, 1.193E-06, 1.186E-06, 1.252E-06,
     $ 1.338E-06, 1.428E-06, 1.514E-06, 1.539E-06, 1.494E-06, 1.445E-06,
     $ 1.437E-06, 1.477E-06, 1.553E-06, 1.612E-06, 1.605E-06, 1.541E-06,
     $ 1.447E-06, 1.368E-06, 1.355E-06, 1.419E-06, 1.518E-06, 1.599E-06,
     $ 1.643E-06, 1.681E-06, 1.704E-06, 1.676E-06/
C                                                                       
C     26401 TO 26500 CM-1 DATA.                                         
      DATA (SUN(I),I= 26401, 26500)/                                    
     $ 1.613E-06, 1.530E-06, 1.386E-06, 1.230E-06, 1.168E-06, 1.226E-06,
     $ 1.401E-06, 1.683E-06, 2.008E-06, 2.307E-06, 2.544E-06, 2.687E-06,
     $ 2.746E-06, 2.760E-06, 2.746E-06, 2.724E-06, 2.710E-06, 2.671E-06,
     $ 2.554E-06, 2.362E-06, 2.153E-06, 1.984E-06, 1.920E-06, 2.018E-06,
     $ 2.225E-06, 2.428E-06, 2.551E-06, 2.554E-06, 2.436E-06, 2.283E-06,
     $ 2.172E-06, 2.120E-06, 2.137E-06, 2.201E-06, 2.259E-06, 2.300E-06,
     $ 2.348E-06, 2.394E-06, 2.448E-06, 2.532E-06, 2.615E-06, 2.682E-06,
     $ 2.761E-06, 2.836E-06, 2.879E-06, 2.879E-06, 2.796E-06, 2.618E-06,
     $ 2.406E-06, 2.230E-06, 2.150E-06, 2.191E-06, 2.296E-06, 2.361E-06,
     $ 2.326E-06, 2.189E-06, 1.996E-06, 1.839E-06, 1.806E-06, 1.885E-06,
     $ 2.001E-06, 2.118E-06, 2.200E-06, 2.199E-06, 2.161E-06, 2.171E-06,
     $ 2.209E-06, 2.230E-06, 2.263E-06, 2.284E-06, 2.224E-06, 2.122E-06,
     $ 2.047E-06, 1.959E-06, 1.843E-06, 1.778E-06, 1.779E-06, 1.822E-06,
     $ 1.921E-06, 2.057E-06, 2.157E-06, 2.174E-06, 2.103E-06, 1.993E-06,
     $ 1.925E-06, 1.931E-06, 2.006E-06, 2.131E-06, 2.247E-06, 2.301E-06,
     $ 2.296E-06, 2.270E-06, 2.261E-06, 2.293E-06, 2.350E-06, 2.391E-06,
     $ 2.398E-06, 2.351E-06, 2.245E-06, 2.130E-06/
C                                                                       
C     26501 TO 26600 CM-1 DATA.                                         
      DATA (SUN(I),I= 26501, 26600)/                                    
     $ 2.047E-06, 1.966E-06, 1.888E-06, 1.835E-06, 1.770E-06, 1.689E-06,
     $ 1.636E-06, 1.603E-06, 1.554E-06, 1.481E-06, 1.383E-06, 1.264E-06,
     $ 1.148E-06, 1.061E-06, 1.027E-06, 1.065E-06, 1.158E-06, 1.281E-06,
     $ 1.442E-06, 1.632E-06, 1.815E-06, 1.976E-06, 2.112E-06, 2.196E-06,
     $ 2.210E-06, 2.152E-06, 2.038E-06, 1.898E-06, 1.759E-06, 1.635E-06,
     $ 1.542E-06, 1.467E-06, 1.368E-06, 1.219E-06, 1.050E-06, 8.946E-07,
     $ 7.837E-07, 7.713E-07, 8.770E-07, 1.054E-06, 1.260E-06, 1.481E-06,
     $ 1.669E-06, 1.769E-06, 1.788E-06, 1.758E-06, 1.686E-06, 1.606E-06,
     $ 1.604E-06, 1.716E-06, 1.889E-06, 2.071E-06, 2.219E-06, 2.258E-06,
     $ 2.146E-06, 1.914E-06, 1.601E-06, 1.252E-06, 9.429E-07, 7.347E-07,
     $ 6.509E-07, 7.048E-07, 8.841E-07, 1.136E-06, 1.391E-06, 1.595E-06,
     $ 1.723E-06, 1.773E-06, 1.763E-06, 1.736E-06, 1.719E-06, 1.721E-06,
     $ 1.741E-06, 1.733E-06, 1.666E-06, 1.586E-06, 1.523E-06, 1.483E-06,
     $ 1.521E-06, 1.642E-06, 1.773E-06, 1.873E-06, 1.912E-06, 1.865E-06,
     $ 1.790E-06, 1.728E-06, 1.663E-06, 1.606E-06, 1.560E-06, 1.465E-06,
     $ 1.322E-06, 1.195E-06, 1.105E-06, 1.061E-06, 1.059E-06, 1.050E-06,
     $ 9.877E-07, 8.739E-07, 7.305E-07, 5.977E-07/
C                                                                       
C     26601 TO 26700 CM-1 DATA.                                         
      DATA (SUN(I),I= 26601, 26700)/                                    
     $ 5.272E-07, 5.469E-07, 6.500E-07, 8.084E-07, 9.828E-07, 1.150E-06,
     $ 1.316E-06, 1.481E-06, 1.642E-06, 1.828E-06, 2.035E-06, 2.204E-06,
     $ 2.319E-06, 2.399E-06, 2.417E-06, 2.384E-06, 2.360E-06, 2.349E-06,
     $ 2.340E-06, 2.365E-06, 2.436E-06, 2.505E-06, 2.539E-06, 2.529E-06,
     $ 2.454E-06, 2.315E-06, 2.178E-06, 2.093E-06, 2.033E-06, 1.991E-06,
     $ 1.963E-06, 1.906E-06, 1.819E-06, 1.759E-06, 1.736E-06, 1.739E-06,
     $ 1.759E-06, 1.759E-06, 1.734E-06, 1.712E-06, 1.685E-06, 1.665E-06,
     $ 1.694E-06, 1.737E-06, 1.738E-06, 1.717E-06, 1.687E-06, 1.627E-06,
     $ 1.556E-06, 1.495E-06, 1.433E-06, 1.364E-06, 1.289E-06, 1.212E-06,
     $ 1.133E-06, 1.047E-06, 9.506E-07, 8.417E-07, 7.189E-07, 5.939E-07,
     $ 4.845E-07, 3.996E-07, 3.538E-07, 3.575E-07, 3.935E-07, 4.401E-07,
     $ 4.866E-07, 5.136E-07, 5.115E-07, 5.024E-07, 5.116E-07, 5.557E-07,
     $ 6.563E-07, 8.158E-07, 9.956E-07, 1.150E-06, 1.261E-06, 1.318E-06,
     $ 1.302E-06, 1.236E-06, 1.185E-06, 1.157E-06, 1.106E-06, 1.036E-06,
     $ 9.573E-07, 8.318E-07, 6.602E-07, 5.097E-07, 4.179E-07, 3.908E-07,
     $ 4.504E-07, 6.053E-07, 8.177E-07, 1.041E-06, 1.255E-06, 1.426E-06,
     $ 1.513E-06, 1.528E-06, 1.491E-06, 1.396E-06/
C                                                                       
C     26701 TO 26800 CM-1 DATA.                                         
      DATA (SUN(I),I= 26701, 26800)/                                    
     $ 1.253E-06, 1.097E-06, 9.410E-07, 8.068E-07, 7.302E-07, 7.459E-07,
     $ 8.514E-07, 1.018E-06, 1.233E-06, 1.460E-06, 1.641E-06, 1.798E-06,
     $ 1.963E-06, 2.073E-06, 2.103E-06, 2.109E-06, 2.083E-06, 1.989E-06,
     $ 1.901E-06, 1.901E-06, 1.959E-06, 2.024E-06, 2.112E-06, 2.193E-06,
     $ 2.190E-06, 2.123E-06, 2.048E-06, 1.961E-06, 1.889E-06, 1.854E-06,
     $ 1.801E-06, 1.698E-06, 1.571E-06, 1.444E-06, 1.352E-06, 1.341E-06,
     $ 1.412E-06, 1.507E-06, 1.564E-06, 1.552E-06, 1.480E-06, 1.378E-06,
     $ 1.284E-06, 1.210E-06, 1.140E-06, 1.046E-06, 9.109E-07, 7.430E-07,
     $ 5.704E-07, 4.324E-07, 3.649E-07, 3.814E-07, 4.744E-07, 6.191E-07,
     $ 7.768E-07, 9.131E-07, 1.005E-06, 1.040E-06, 1.023E-06, 9.653E-07,
     $ 8.777E-07, 7.654E-07, 6.375E-07, 5.117E-07, 4.081E-07, 3.382E-07,
     $ 3.124E-07, 3.398E-07, 4.125E-07, 5.145E-07, 6.348E-07, 7.568E-07,
     $ 8.508E-07, 8.915E-07, 8.797E-07, 8.394E-07, 7.968E-07, 7.866E-07,
     $ 8.467E-07, 9.603E-07, 1.076E-06, 1.182E-06, 1.272E-06, 1.328E-06,
     $ 1.395E-06, 1.516E-06, 1.649E-06, 1.758E-06, 1.844E-06, 1.864E-06,
     $ 1.784E-06, 1.657E-06, 1.542E-06, 1.437E-06, 1.345E-06, 1.323E-06,
     $ 1.387E-06, 1.480E-06, 1.592E-06, 1.754E-06/
C                                                                       
C     26801 TO 26900 CM-1 DATA.                                         
      DATA (SUN(I),I= 26801, 26900)/                                    
     $ 1.916E-06, 2.025E-06, 2.103E-06, 2.171E-06, 2.202E-06, 2.180E-06,
     $ 2.128E-06, 2.065E-06, 1.994E-06, 1.935E-06, 1.908E-06, 1.899E-06,
     $ 1.869E-06, 1.778E-06, 1.604E-06, 1.367E-06, 1.119E-06, 9.068E-07,
     $ 7.643E-07, 7.189E-07, 7.743E-07, 8.960E-07, 1.059E-06, 1.274E-06,
     $ 1.524E-06, 1.764E-06, 1.975E-06, 2.140E-06, 2.221E-06, 2.212E-06,
     $ 2.151E-06, 2.059E-06, 1.959E-06, 1.897E-06, 1.878E-06, 1.859E-06,
     $ 1.826E-06, 1.768E-06, 1.669E-06, 1.556E-06, 1.479E-06, 1.454E-06,
     $ 1.486E-06, 1.560E-06, 1.645E-06, 1.729E-06, 1.800E-06, 1.844E-06,
     $ 1.858E-06, 1.821E-06, 1.700E-06, 1.503E-06, 1.263E-06, 1.020E-06,
     $ 8.231E-07, 7.234E-07, 7.265E-07, 7.845E-07, 8.532E-07, 9.024E-07,
     $ 9.014E-07, 8.622E-07, 8.364E-07, 8.485E-07, 9.014E-07, 9.888E-07,
     $ 1.066E-06, 1.084E-06, 1.031E-06, 9.124E-07, 7.499E-07, 5.858E-07,
     $ 4.570E-07, 3.828E-07, 3.768E-07, 4.374E-07, 5.445E-07, 6.850E-07,
     $ 8.540E-07, 1.030E-06, 1.187E-06, 1.320E-06, 1.431E-06, 1.517E-06,
     $ 1.585E-06, 1.667E-06, 1.789E-06, 1.928E-06, 2.044E-06, 2.133E-06,
     $ 2.199E-06, 2.223E-06, 2.229E-06, 2.261E-06, 2.284E-06, 2.255E-06,
     $ 2.196E-06, 2.114E-06, 1.998E-06, 1.907E-06/
C                                                                       
C     26901 TO 27000 CM-1 DATA.                                         
      DATA (SUN(I),I= 26901, 27000)/                                    
     $ 1.898E-06, 1.925E-06, 1.947E-06, 1.992E-06, 2.045E-06, 2.069E-06,
     $ 2.097E-06, 2.162E-06, 2.245E-06, 2.341E-06, 2.442E-06, 2.532E-06,
     $ 2.608E-06, 2.660E-06, 2.667E-06, 2.642E-06, 2.601E-06, 2.538E-06,
     $ 2.470E-06, 2.410E-06, 2.345E-06, 2.263E-06, 2.180E-06, 2.092E-06,
     $ 2.013E-06, 1.983E-06, 1.992E-06, 2.005E-06, 2.018E-06, 2.022E-06,
     $ 1.989E-06, 1.917E-06, 1.822E-06, 1.715E-06, 1.606E-06, 1.513E-06,
     $ 1.482E-06, 1.540E-06, 1.639E-06, 1.727E-06, 1.803E-06, 1.842E-06,
     $ 1.813E-06, 1.761E-06, 1.715E-06, 1.629E-06, 1.485E-06, 1.298E-06,
     $ 1.077E-06, 8.732E-07, 7.461E-07, 7.221E-07, 8.109E-07, 9.867E-07,
     $ 1.185E-06, 1.358E-06, 1.470E-06, 1.482E-06, 1.400E-06, 1.261E-06,
     $ 1.096E-06, 9.645E-07, 9.119E-07, 9.256E-07, 1.005E-06, 1.157E-06,
     $ 1.341E-06, 1.525E-06, 1.703E-06, 1.816E-06, 1.806E-06, 1.681E-06,
     $ 1.466E-06, 1.193E-06, 9.343E-07, 7.453E-07, 6.412E-07, 6.243E-07,
     $ 6.977E-07, 8.448E-07, 1.026E-06, 1.201E-06, 1.336E-06, 1.420E-06,
     $ 1.454E-06, 1.442E-06, 1.412E-06, 1.374E-06, 1.294E-06, 1.183E-06,
     $ 1.110E-06, 1.105E-06, 1.191E-06, 1.398E-06, 1.687E-06, 1.956E-06,
     $ 2.137E-06, 2.215E-06, 2.187E-06, 2.073E-06/
C                                                                       
C     27001 TO 27100 CM-1 DATA.                                         
      DATA (SUN(I),I= 27001, 27100)/                                    
     $ 1.936E-06, 1.835E-06, 1.779E-06, 1.783E-06, 1.858E-06, 1.960E-06,
     $ 2.031E-06, 2.047E-06, 1.998E-06, 1.877E-06, 1.741E-06, 1.677E-06,
     $ 1.693E-06, 1.758E-06, 1.856E-06, 1.952E-06, 2.007E-06, 2.022E-06,
     $ 2.032E-06, 2.072E-06, 2.112E-06, 2.104E-06, 2.071E-06, 2.021E-06,
     $ 1.911E-06, 1.791E-06, 1.758E-06, 1.767E-06, 1.748E-06, 1.734E-06,
     $ 1.731E-06, 1.681E-06, 1.590E-06, 1.531E-06, 1.529E-06, 1.562E-06,
     $ 1.620E-06, 1.722E-06, 1.862E-06, 1.983E-06, 2.046E-06, 2.068E-06,
     $ 2.071E-06, 2.038E-06, 1.978E-06, 1.940E-06, 1.934E-06, 1.905E-06,
     $ 1.862E-06, 1.856E-06, 1.847E-06, 1.810E-06, 1.812E-06, 1.866E-06,
     $ 1.923E-06, 2.007E-06, 2.124E-06, 2.184E-06, 2.122E-06, 1.953E-06,
     $ 1.715E-06, 1.458E-06, 1.257E-06, 1.179E-06, 1.213E-06, 1.298E-06,
     $ 1.399E-06, 1.502E-06, 1.585E-06, 1.673E-06, 1.791E-06, 1.906E-06,
     $ 2.006E-06, 2.094E-06, 2.132E-06, 2.135E-06, 2.153E-06, 2.175E-06,
     $ 2.197E-06, 2.228E-06, 2.223E-06, 2.146E-06, 2.009E-06, 1.836E-06,
     $ 1.667E-06, 1.549E-06, 1.514E-06, 1.561E-06, 1.648E-06, 1.737E-06,
     $ 1.796E-06, 1.776E-06, 1.674E-06, 1.560E-06, 1.463E-06, 1.379E-06,
     $ 1.361E-06, 1.448E-06, 1.551E-06, 1.609E-06/
C                                                                       
C     27101 TO 27200 CM-1 DATA.                                         
      DATA (SUN(I),I= 27101, 27200)/                                    
     $ 1.671E-06, 1.725E-06, 1.698E-06, 1.643E-06, 1.613E-06, 1.539E-06,
     $ 1.391E-06, 1.222E-06, 1.037E-06, 8.497E-07, 7.400E-07, 7.505E-07,
     $ 8.693E-07, 1.087E-06, 1.354E-06, 1.586E-06, 1.743E-06, 1.805E-06,
     $ 1.766E-06, 1.663E-06, 1.549E-06, 1.459E-06, 1.399E-06, 1.336E-06,
     $ 1.273E-06, 1.248E-06, 1.258E-06, 1.304E-06, 1.432E-06, 1.620E-06,
     $ 1.760E-06, 1.810E-06, 1.810E-06, 1.768E-06, 1.673E-06, 1.599E-06,
     $ 1.621E-06, 1.679E-06, 1.711E-06, 1.744E-06, 1.777E-06, 1.759E-06,
     $ 1.707E-06, 1.685E-06, 1.667E-06, 1.588E-06, 1.477E-06, 1.373E-06,
     $ 1.268E-06, 1.210E-06, 1.273E-06, 1.436E-06, 1.642E-06, 1.872E-06,
     $ 2.093E-06, 2.231E-06, 2.261E-06, 2.204E-06, 2.063E-06, 1.851E-06,
     $ 1.625E-06, 1.418E-06, 1.225E-06, 1.068E-06, 9.661E-07, 9.237E-07,
     $ 9.658E-07, 1.109E-06, 1.303E-06, 1.474E-06, 1.602E-06, 1.688E-06,
     $ 1.732E-06, 1.773E-06, 1.851E-06, 1.933E-06, 1.959E-06, 1.891E-06,
     $ 1.718E-06, 1.480E-06, 1.240E-06, 1.045E-06, 9.603E-07, 1.008E-06,
     $ 1.136E-06, 1.313E-06, 1.518E-06, 1.677E-06, 1.762E-06, 1.798E-06,
     $ 1.787E-06, 1.743E-06, 1.705E-06, 1.692E-06, 1.710E-06, 1.745E-06,
     $ 1.784E-06, 1.854E-06, 1.952E-06, 2.025E-06/
C                                                                       
C     27201 TO 27300 CM-1 DATA.                                         
      DATA (SUN(I),I= 27201, 27300)/                                    
     $ 2.067E-06, 2.099E-06, 2.096E-06, 2.038E-06, 1.951E-06, 1.864E-06,
     $ 1.772E-06, 1.658E-06, 1.544E-06, 1.473E-06, 1.452E-06, 1.466E-06,
     $ 1.521E-06, 1.626E-06, 1.748E-06, 1.849E-06, 1.937E-06, 2.023E-06,
     $ 2.075E-06, 2.091E-06, 2.113E-06, 2.149E-06, 2.163E-06, 2.138E-06,
     $ 2.096E-06, 2.045E-06, 1.967E-06, 1.905E-06, 1.916E-06, 1.956E-06,
     $ 1.972E-06, 1.963E-06, 1.904E-06, 1.803E-06, 1.701E-06, 1.602E-06,
     $ 1.537E-06, 1.528E-06, 1.503E-06, 1.444E-06, 1.390E-06, 1.299E-06,
     $ 1.159E-06, 1.051E-06, 1.010E-06, 1.019E-06, 1.092E-06, 1.232E-06,
     $ 1.383E-06, 1.482E-06, 1.529E-06, 1.563E-06, 1.601E-06, 1.656E-06,
     $ 1.735E-06, 1.819E-06, 1.862E-06, 1.835E-06, 1.738E-06, 1.626E-06,
     $ 1.548E-06, 1.511E-06, 1.509E-06, 1.537E-06, 1.587E-06, 1.634E-06,
     $ 1.680E-06, 1.772E-06, 1.933E-06, 2.118E-06, 2.292E-06, 2.439E-06,
     $ 2.516E-06, 2.491E-06, 2.372E-06, 2.172E-06, 1.933E-06, 1.709E-06,
     $ 1.519E-06, 1.377E-06, 1.317E-06, 1.325E-06, 1.356E-06, 1.396E-06,
     $ 1.454E-06, 1.507E-06, 1.536E-06, 1.544E-06, 1.532E-06, 1.516E-06,
     $ 1.515E-06, 1.533E-06, 1.554E-06, 1.571E-06, 1.558E-06, 1.504E-06,
     $ 1.440E-06, 1.426E-06, 1.488E-06, 1.610E-06/
C                                                                       
C     27301 TO 27400 CM-1 DATA.                                         
      DATA (SUN(I),I= 27301, 27400)/                                    
     $ 1.780E-06, 1.956E-06, 2.081E-06, 2.152E-06, 2.194E-06, 2.199E-06,
     $ 2.165E-06, 2.116E-06, 2.054E-06, 1.984E-06, 1.935E-06, 1.906E-06,
     $ 1.868E-06, 1.809E-06, 1.739E-06, 1.682E-06, 1.674E-06, 1.755E-06,
     $ 1.925E-06, 2.122E-06, 2.274E-06, 2.362E-06, 2.383E-06, 2.325E-06,
     $ 2.197E-06, 2.048E-06, 1.902E-06, 1.755E-06, 1.652E-06, 1.665E-06,
     $ 1.774E-06, 1.904E-06, 2.035E-06, 2.147E-06, 2.197E-06, 2.212E-06,
     $ 2.242E-06, 2.254E-06, 2.221E-06, 2.158E-06, 2.049E-06, 1.905E-06,
     $ 1.799E-06, 1.739E-06, 1.680E-06, 1.649E-06, 1.666E-06, 1.704E-06,
     $ 1.789E-06, 1.927E-06, 2.042E-06, 2.082E-06, 2.065E-06, 2.007E-06,
     $ 1.939E-06, 1.911E-06, 1.932E-06, 1.954E-06, 1.919E-06, 1.825E-06,
     $ 1.726E-06, 1.660E-06, 1.653E-06, 1.749E-06, 1.916E-06, 2.053E-06,
     $ 2.122E-06, 2.138E-06, 2.106E-06, 2.053E-06, 2.018E-06, 1.986E-06,
     $ 1.919E-06, 1.788E-06, 1.605E-06, 1.428E-06, 1.299E-06, 1.248E-06,
     $ 1.315E-06, 1.463E-06, 1.606E-06, 1.714E-06, 1.765E-06, 1.715E-06,
     $ 1.588E-06, 1.462E-06, 1.381E-06, 1.339E-06, 1.326E-06, 1.328E-06,
     $ 1.296E-06, 1.207E-06, 1.110E-06, 1.063E-06, 1.090E-06, 1.193E-06,
     $ 1.344E-06, 1.487E-06, 1.566E-06, 1.542E-06/
C                                                                       
C     27401 TO 27500 CM-1 DATA.                                         
      DATA (SUN(I),I= 27401, 27500)/                                    
     $ 1.406E-06, 1.191E-06, 9.488E-07, 7.218E-07, 5.573E-07, 5.048E-07,
     $ 5.770E-07, 7.457E-07, 9.870E-07, 1.268E-06, 1.518E-06, 1.687E-06,
     $ 1.769E-06, 1.762E-06, 1.681E-06, 1.570E-06, 1.460E-06, 1.371E-06,
     $ 1.309E-06, 1.251E-06, 1.185E-06, 1.132E-06, 1.084E-06, 1.038E-06,
     $ 1.018E-06, 1.025E-06, 1.032E-06, 1.031E-06, 1.052E-06, 1.119E-06,
     $ 1.212E-06, 1.302E-06, 1.381E-06, 1.427E-06, 1.417E-06, 1.366E-06,
     $ 1.333E-06, 1.335E-06, 1.315E-06, 1.246E-06, 1.167E-06, 1.078E-06,
     $ 9.780E-07, 9.488E-07, 1.043E-06, 1.207E-06, 1.379E-06, 1.551E-06,
     $ 1.688E-06, 1.720E-06, 1.666E-06, 1.617E-06, 1.589E-06, 1.581E-06,
     $ 1.660E-06, 1.817E-06, 1.929E-06, 1.960E-06, 1.955E-06, 1.906E-06,
     $ 1.809E-06, 1.736E-06, 1.737E-06, 1.766E-06, 1.777E-06, 1.794E-06,
     $ 1.841E-06, 1.884E-06, 1.913E-06, 1.971E-06, 2.053E-06, 2.112E-06,
     $ 2.130E-06, 2.102E-06, 2.012E-06, 1.852E-06, 1.641E-06, 1.462E-06,
     $ 1.385E-06, 1.384E-06, 1.426E-06, 1.507E-06, 1.555E-06, 1.507E-06,
     $ 1.413E-06, 1.322E-06, 1.223E-06, 1.128E-06, 1.043E-06, 9.658E-07,
     $ 9.247E-07, 9.413E-07, 1.036E-06, 1.215E-06, 1.402E-06, 1.522E-06,
     $ 1.577E-06, 1.546E-06, 1.421E-06, 1.300E-06/
C                                                                       
C     27501 TO 27600 CM-1 DATA.                                         
      DATA (SUN(I),I= 27501, 27600)/                                    
     $ 1.235E-06, 1.197E-06, 1.206E-06, 1.276E-06, 1.367E-06, 1.456E-06,
     $ 1.543E-06, 1.623E-06, 1.695E-06, 1.752E-06, 1.789E-06, 1.807E-06,
     $ 1.780E-06, 1.692E-06, 1.571E-06, 1.434E-06, 1.301E-06, 1.233E-06,
     $ 1.242E-06, 1.273E-06, 1.295E-06, 1.301E-06, 1.245E-06, 1.107E-06,
     $ 9.346E-07, 7.650E-07, 6.021E-07, 4.650E-07, 3.882E-07, 3.736E-07,
     $ 4.075E-07, 4.977E-07, 6.307E-07, 7.632E-07, 8.935E-07, 1.019E-06,
     $ 1.100E-06, 1.145E-06, 1.182E-06, 1.183E-06, 1.155E-06, 1.142E-06,
     $ 1.147E-06, 1.186E-06, 1.278E-06, 1.400E-06, 1.543E-06, 1.703E-06,
     $ 1.844E-06, 1.956E-06, 2.047E-06, 2.086E-06, 2.043E-06, 1.945E-06,
     $ 1.827E-06, 1.697E-06, 1.591E-06, 1.563E-06, 1.599E-06, 1.678E-06,
     $ 1.810E-06, 1.966E-06, 2.118E-06, 2.267E-06, 2.376E-06, 2.422E-06,
     $ 2.441E-06, 2.438E-06, 2.410E-06, 2.402E-06, 2.414E-06, 2.390E-06,
     $ 2.304E-06, 2.167E-06, 1.958E-06, 1.684E-06, 1.440E-06, 1.289E-06,
     $ 1.211E-06, 1.211E-06, 1.292E-06, 1.382E-06, 1.412E-06, 1.406E-06,
     $ 1.401E-06, 1.394E-06, 1.387E-06, 1.403E-06, 1.435E-06, 1.464E-06,
     $ 1.513E-06, 1.608E-06, 1.737E-06, 1.862E-06, 1.951E-06, 1.957E-06,
     $ 1.853E-06, 1.699E-06, 1.558E-06, 1.427E-06/
C                                                                       
C     27601 TO 27700 CM-1 DATA.                                         
      DATA (SUN(I),I= 27601, 27700)/                                    
     $ 1.323E-06, 1.278E-06, 1.246E-06, 1.195E-06, 1.168E-06, 1.184E-06,
     $ 1.225E-06, 1.286E-06, 1.335E-06, 1.353E-06, 1.350E-06, 1.313E-06,
     $ 1.239E-06, 1.167E-06, 1.097E-06, 9.956E-07, 8.733E-07, 7.611E-07,
     $ 6.554E-07, 5.520E-07, 4.693E-07, 4.140E-07, 3.746E-07, 3.431E-07,
     $ 3.252E-07, 3.321E-07, 3.646E-07, 4.076E-07, 4.619E-07, 5.449E-07,
     $ 6.541E-07, 7.845E-07, 9.550E-07, 1.168E-06, 1.390E-06, 1.599E-06,
     $ 1.794E-06, 1.961E-06, 2.082E-06, 2.148E-06, 2.150E-06, 2.064E-06,
     $ 1.907E-06, 1.729E-06, 1.564E-06, 1.449E-06, 1.434E-06, 1.498E-06,
     $ 1.578E-06, 1.674E-06, 1.765E-06, 1.792E-06, 1.781E-06, 1.774E-06,
     $ 1.740E-06, 1.708E-06, 1.741E-06, 1.805E-06, 1.854E-06, 1.894E-06,
     $ 1.905E-06, 1.841E-06, 1.728E-06, 1.621E-06, 1.521E-06, 1.416E-06,
     $ 1.319E-06, 1.226E-06, 1.145E-06, 1.128E-06, 1.181E-06, 1.265E-06,
     $ 1.360E-06, 1.431E-06, 1.433E-06, 1.372E-06, 1.309E-06, 1.298E-06,
     $ 1.346E-06, 1.422E-06, 1.514E-06, 1.614E-06, 1.670E-06, 1.635E-06,
     $ 1.537E-06, 1.402E-06, 1.205E-06, 9.716E-07, 7.880E-07, 6.871E-07,
     $ 6.660E-07, 7.352E-07, 8.601E-07, 9.696E-07, 1.027E-06, 1.013E-06,
     $ 9.151E-07, 7.728E-07, 6.360E-07, 5.227E-07/
C                                                                       
C     27701 TO 27800 CM-1 DATA.                                         
      DATA (SUN(I),I= 27701, 27800)/                                    
     $ 4.562E-07, 4.595E-07, 5.235E-07, 6.415E-07, 8.186E-07, 1.037E-06,
     $ 1.266E-06, 1.484E-06, 1.669E-06, 1.803E-06, 1.879E-06, 1.907E-06,
     $ 1.894E-06, 1.816E-06, 1.659E-06, 1.457E-06, 1.253E-06, 1.099E-06,
     $ 1.057E-06, 1.144E-06, 1.324E-06, 1.525E-06, 1.653E-06, 1.652E-06,
     $ 1.524E-06, 1.300E-06, 1.047E-06, 8.439E-07, 7.379E-07, 7.401E-07,
     $ 8.267E-07, 9.408E-07, 1.058E-06, 1.195E-06, 1.334E-06, 1.437E-06,
     $ 1.508E-06, 1.533E-06, 1.474E-06, 1.340E-06, 1.194E-06, 1.094E-06,
     $ 1.058E-06, 1.065E-06, 1.092E-06, 1.124E-06, 1.119E-06, 1.062E-06,
     $ 9.964E-07, 9.456E-07, 9.228E-07, 9.607E-07, 1.059E-06, 1.198E-06,
     $ 1.374E-06, 1.546E-06, 1.681E-06, 1.788E-06, 1.854E-06, 1.865E-06,
     $ 1.840E-06, 1.786E-06, 1.707E-06, 1.649E-06, 1.660E-06, 1.747E-06,
     $ 1.898E-06, 2.053E-06, 2.148E-06, 2.154E-06, 2.075E-06, 1.939E-06,
     $ 1.815E-06, 1.754E-06, 1.739E-06, 1.737E-06, 1.745E-06, 1.762E-06,
     $ 1.779E-06, 1.805E-06, 1.866E-06, 1.929E-06, 1.930E-06, 1.861E-06,
     $ 1.757E-06, 1.647E-06, 1.565E-06, 1.549E-06, 1.602E-06, 1.673E-06,
     $ 1.710E-06, 1.701E-06, 1.667E-06, 1.613E-06, 1.533E-06, 1.438E-06,
     $ 1.345E-06, 1.255E-06, 1.183E-06, 1.168E-06/
C                                                                       
C     27801 TO 27900 CM-1 DATA.                                         
      DATA (SUN(I),I= 27801, 27900)/                                    
     $ 1.216E-06, 1.303E-06, 1.407E-06, 1.492E-06, 1.529E-06, 1.522E-06,
     $ 1.486E-06, 1.435E-06, 1.411E-06, 1.445E-06, 1.537E-06, 1.682E-06,
     $ 1.834E-06, 1.927E-06, 1.925E-06, 1.807E-06, 1.588E-06, 1.344E-06,
     $ 1.151E-06, 1.047E-06, 1.060E-06, 1.178E-06, 1.326E-06, 1.454E-06,
     $ 1.571E-06, 1.674E-06, 1.751E-06, 1.838E-06, 1.952E-06, 2.044E-06,
     $ 2.079E-06, 2.057E-06, 1.977E-06, 1.852E-06, 1.714E-06, 1.607E-06,
     $ 1.577E-06, 1.615E-06, 1.662E-06, 1.685E-06, 1.661E-06, 1.565E-06,
     $ 1.416E-06, 1.266E-06, 1.150E-06, 1.066E-06, 1.006E-06, 9.765E-07,
     $ 9.687E-07, 9.666E-07, 9.782E-07, 1.009E-06, 1.033E-06, 1.036E-06,
     $ 1.050E-06, 1.091E-06, 1.137E-06, 1.190E-06, 1.263E-06, 1.313E-06,
     $ 1.303E-06, 1.248E-06, 1.162E-06, 1.046E-06, 9.180E-07, 7.940E-07,
     $ 6.768E-07, 5.705E-07, 4.804E-07, 4.344E-07, 4.676E-07, 5.727E-07,
     $ 7.114E-07, 8.558E-07, 9.608E-07, 9.625E-07, 8.650E-07, 7.298E-07,
     $ 5.867E-07, 4.528E-07, 3.680E-07, 3.371E-07, 3.270E-07, 3.264E-07,
     $ 3.428E-07, 3.739E-07, 4.193E-07, 4.879E-07, 5.854E-07, 7.059E-07,
     $ 8.317E-07, 9.451E-07, 1.037E-06, 1.097E-06, 1.119E-06, 1.127E-06,
     $ 1.148E-06, 1.182E-06, 1.227E-06, 1.272E-06/
C                                                                       
C     27901 TO 28000 CM-1 DATA.                                         
      DATA (SUN(I),I= 27901, 28000)/                                    
     $ 1.290E-06, 1.268E-06, 1.198E-06, 1.091E-06, 9.906E-07, 9.087E-07,
     $ 8.264E-07, 7.583E-07, 7.060E-07, 6.322E-07, 5.362E-07, 4.466E-07,
     $ 3.658E-07, 2.938E-07, 2.518E-07, 2.543E-07, 3.008E-07, 3.905E-07,
     $ 5.186E-07, 6.681E-07, 8.144E-07, 9.371E-07, 1.035E-06, 1.117E-06,
     $ 1.180E-06, 1.231E-06, 1.291E-06, 1.348E-06, 1.372E-06, 1.364E-06,
     $ 1.322E-06, 1.226E-06, 1.094E-06, 9.679E-07, 8.802E-07, 8.634E-07,
     $ 9.184E-07, 1.025E-06, 1.172E-06, 1.336E-06, 1.483E-06, 1.609E-06,
     $ 1.710E-06, 1.749E-06, 1.700E-06, 1.584E-06, 1.454E-06, 1.352E-06,
     $ 1.290E-06, 1.293E-06, 1.363E-06, 1.424E-06, 1.435E-06, 1.449E-06,
     $ 1.486E-06, 1.512E-06, 1.527E-06, 1.530E-06, 1.469E-06, 1.312E-06,
     $ 1.111E-06, 9.579E-07, 9.102E-07, 9.773E-07, 1.139E-06, 1.352E-06,
     $ 1.538E-06, 1.611E-06, 1.554E-06, 1.429E-06, 1.278E-06, 1.120E-06,
     $ 1.027E-06, 1.046E-06, 1.143E-06, 1.284E-06, 1.449E-06, 1.575E-06,
     $ 1.614E-06, 1.574E-06, 1.470E-06, 1.331E-06, 1.211E-06, 1.130E-06,
     $ 1.074E-06, 1.029E-06, 9.836E-07, 9.565E-07, 9.700E-07, 1.012E-06,
     $ 1.084E-06, 1.186E-06, 1.264E-06, 1.290E-06, 1.283E-06, 1.229E-06,
     $ 1.112E-06, 9.511E-07, 7.681E-07, 5.790E-07/
C                                                                       
C     28001 TO 28100 CM-1 DATA.                                         
      DATA (SUN(I),I= 28001, 28100)/                                    
     $ 4.220E-07, 3.300E-07, 3.016E-07, 3.232E-07, 3.942E-07, 4.966E-07,
     $ 5.955E-07, 6.956E-07, 8.171E-07, 9.367E-07, 1.037E-06, 1.149E-06,
     $ 1.283E-06, 1.409E-06, 1.513E-06, 1.606E-06, 1.659E-06, 1.640E-06,
     $ 1.566E-06, 1.460E-06, 1.349E-06, 1.271E-06, 1.232E-06, 1.225E-06,
     $ 1.245E-06, 1.249E-06, 1.207E-06, 1.127E-06, 1.010E-06, 8.659E-07,
     $ 7.377E-07, 6.534E-07, 6.123E-07, 5.992E-07, 5.907E-07, 5.666E-07,
     $ 5.209E-07, 4.656E-07, 4.353E-07, 4.643E-07, 5.476E-07, 6.601E-07,
     $ 8.024E-07, 9.665E-07, 1.113E-06, 1.248E-06, 1.395E-06, 1.509E-06,
     $ 1.573E-06, 1.637E-06, 1.701E-06, 1.751E-06, 1.830E-06, 1.936E-06,
     $ 2.017E-06, 2.062E-06, 2.064E-06, 2.015E-06, 1.944E-06, 1.870E-06,
     $ 1.796E-06, 1.750E-06, 1.710E-06, 1.617E-06, 1.490E-06, 1.372E-06,
     $ 1.270E-06, 1.223E-06, 1.283E-06, 1.402E-06, 1.496E-06, 1.532E-06,
     $ 1.492E-06, 1.380E-06, 1.254E-06, 1.177E-06, 1.159E-06, 1.192E-06,
     $ 1.255E-06, 1.331E-06, 1.399E-06, 1.446E-06, 1.488E-06, 1.521E-06,
     $ 1.527E-06, 1.529E-06, 1.541E-06, 1.522E-06, 1.465E-06, 1.381E-06,
     $ 1.267E-06, 1.153E-06, 1.098E-06, 1.142E-06, 1.288E-06, 1.499E-06,
     $ 1.725E-06, 1.930E-06, 2.080E-06, 2.156E-06/
C                                                                       
C     28101 TO 28200 CM-1 DATA.                                         
      DATA (SUN(I),I= 28101, 28200)/                                    
     $ 2.159E-06, 2.078E-06, 1.907E-06, 1.662E-06, 1.386E-06, 1.143E-06,
     $ 9.983E-07, 9.866E-07, 1.105E-06, 1.306E-06, 1.522E-06, 1.709E-06,
     $ 1.838E-06, 1.887E-06, 1.882E-06, 1.837E-06, 1.730E-06, 1.570E-06,
     $ 1.393E-06, 1.198E-06, 1.006E-06, 8.796E-07, 8.381E-07, 8.513E-07,
     $ 9.197E-07, 1.041E-06, 1.155E-06, 1.221E-06, 1.249E-06, 1.232E-06,
     $ 1.170E-06, 1.120E-06, 1.111E-06, 1.120E-06, 1.139E-06, 1.169E-06,
     $ 1.192E-06, 1.219E-06, 1.287E-06, 1.391E-06, 1.491E-06, 1.569E-06,
     $ 1.614E-06, 1.608E-06, 1.574E-06, 1.560E-06, 1.562E-06, 1.559E-06,
     $ 1.582E-06, 1.640E-06, 1.686E-06, 1.715E-06, 1.754E-06, 1.785E-06,
     $ 1.775E-06, 1.755E-06, 1.750E-06, 1.730E-06, 1.689E-06, 1.664E-06,
     $ 1.651E-06, 1.642E-06, 1.660E-06, 1.687E-06, 1.673E-06, 1.632E-06,
     $ 1.599E-06, 1.568E-06, 1.538E-06, 1.531E-06, 1.513E-06, 1.425E-06,
     $ 1.261E-06, 1.064E-06, 8.773E-07, 7.524E-07, 7.421E-07, 8.468E-07,
     $ 1.016E-06, 1.203E-06, 1.369E-06, 1.468E-06, 1.504E-06, 1.533E-06,
     $ 1.577E-06, 1.614E-06, 1.656E-06, 1.725E-06, 1.778E-06, 1.766E-06,
     $ 1.709E-06, 1.635E-06, 1.538E-06, 1.438E-06, 1.382E-06, 1.386E-06,
     $ 1.434E-06, 1.496E-06, 1.548E-06, 1.582E-06/
C                                                                       
C     28201 TO 28300 CM-1 DATA.                                         
      DATA (SUN(I),I= 28201, 28300)/                                    
     $ 1.612E-06, 1.638E-06, 1.664E-06, 1.718E-06, 1.812E-06, 1.893E-06,
     $ 1.924E-06, 1.927E-06, 1.899E-06, 1.824E-06, 1.751E-06, 1.719E-06,
     $ 1.711E-06, 1.717E-06, 1.731E-06, 1.720E-06, 1.677E-06, 1.604E-06,
     $ 1.480E-06, 1.321E-06, 1.162E-06, 1.023E-06, 9.462E-07, 9.743E-07,
     $ 1.109E-06, 1.303E-06, 1.474E-06, 1.566E-06, 1.578E-06, 1.504E-06,
     $ 1.372E-06, 1.285E-06, 1.292E-06, 1.345E-06, 1.420E-06, 1.518E-06,
     $ 1.577E-06, 1.571E-06, 1.555E-06, 1.570E-06, 1.618E-06, 1.710E-06,
     $ 1.836E-06, 1.953E-06, 2.029E-06, 2.053E-06, 2.021E-06, 1.943E-06,
     $ 1.837E-06, 1.708E-06, 1.572E-06, 1.443E-06, 1.315E-06, 1.190E-06,
     $ 1.089E-06, 1.016E-06, 9.711E-07, 9.824E-07, 1.061E-06, 1.182E-06,
     $ 1.317E-06, 1.438E-06, 1.493E-06, 1.449E-06, 1.338E-06, 1.206E-06,
     $ 1.084E-06, 1.027E-06, 1.076E-06, 1.185E-06, 1.288E-06, 1.373E-06,
     $ 1.416E-06, 1.403E-06, 1.369E-06, 1.336E-06, 1.299E-06, 1.271E-06,
     $ 1.235E-06, 1.181E-06, 1.174E-06, 1.249E-06, 1.370E-06, 1.540E-06,
     $ 1.743E-06, 1.903E-06, 1.980E-06, 1.980E-06, 1.909E-06, 1.768E-06,
     $ 1.570E-06, 1.338E-06, 1.114E-06, 9.472E-07, 8.738E-07, 9.218E-07,
     $ 1.083E-06, 1.301E-06, 1.502E-06, 1.634E-06/
C                                                                       
C     28301 TO 28400 CM-1 DATA.                                         
      DATA (SUN(I),I= 28301, 28400)/                                    
     $ 1.665E-06, 1.598E-06, 1.471E-06, 1.343E-06, 1.263E-06, 1.265E-06,
     $ 1.351E-06, 1.482E-06, 1.613E-06, 1.719E-06, 1.764E-06, 1.723E-06,
     $ 1.633E-06, 1.542E-06, 1.469E-06, 1.434E-06, 1.447E-06, 1.474E-06,
     $ 1.472E-06, 1.425E-06, 1.354E-06, 1.305E-06, 1.315E-06, 1.377E-06,
     $ 1.472E-06, 1.575E-06, 1.648E-06, 1.688E-06, 1.736E-06, 1.794E-06,
     $ 1.831E-06, 1.825E-06, 1.738E-06, 1.564E-06, 1.363E-06, 1.182E-06,
     $ 1.058E-06, 1.059E-06, 1.183E-06, 1.338E-06, 1.467E-06, 1.536E-06,
     $ 1.488E-06, 1.309E-06, 1.057E-06, 8.048E-07, 5.905E-07, 4.313E-07,
     $ 3.423E-07, 3.363E-07, 4.105E-07, 5.613E-07, 7.856E-07, 1.056E-06,
     $ 1.325E-06, 1.540E-06, 1.663E-06, 1.679E-06, 1.589E-06, 1.408E-06,
     $ 1.171E-06, 9.178E-07, 6.850E-07, 5.109E-07, 4.303E-07, 4.394E-07,
     $ 5.125E-07, 6.332E-07, 7.577E-07, 8.335E-07, 8.657E-07, 8.748E-07,
     $ 8.601E-07, 8.582E-07, 9.124E-07, 1.020E-06, 1.167E-06, 1.331E-06,
     $ 1.479E-06, 1.598E-06, 1.662E-06, 1.647E-06, 1.582E-06, 1.492E-06,
     $ 1.360E-06, 1.206E-06, 1.074E-06, 9.817E-07, 9.344E-07, 9.355E-07,
     $ 9.952E-07, 1.114E-06, 1.254E-06, 1.380E-06, 1.478E-06, 1.530E-06,
     $ 1.518E-06, 1.439E-06, 1.316E-06, 1.213E-06/
C                                                                       
C     28401 TO 28500 CM-1 DATA.                                         
      DATA (SUN(I),I= 28401, 28500)/                                    
     $ 1.175E-06, 1.204E-06, 1.314E-06, 1.510E-06, 1.714E-06, 1.847E-06,
     $ 1.886E-06, 1.835E-06, 1.704E-06, 1.539E-06, 1.404E-06, 1.346E-06,
     $ 1.372E-06, 1.457E-06, 1.590E-06, 1.746E-06, 1.872E-06, 1.931E-06,
     $ 1.917E-06, 1.842E-06, 1.731E-06, 1.622E-06, 1.569E-06, 1.580E-06,
     $ 1.602E-06, 1.602E-06, 1.569E-06, 1.484E-06, 1.378E-06, 1.324E-06,
     $ 1.340E-06, 1.412E-06, 1.515E-06, 1.597E-06, 1.607E-06, 1.530E-06,
     $ 1.368E-06, 1.151E-06, 9.234E-07, 7.237E-07, 5.994E-07, 5.867E-07,
     $ 6.803E-07, 8.527E-07, 1.050E-06, 1.193E-06, 1.234E-06, 1.170E-06,
     $ 1.020E-06, 8.502E-07, 7.502E-07, 7.460E-07, 8.042E-07, 9.083E-07,
     $ 1.022E-06, 1.074E-06, 1.063E-06, 1.057E-06, 1.068E-06, 1.087E-06,
     $ 1.158E-06, 1.262E-06, 1.321E-06, 1.325E-06, 1.308E-06, 1.266E-06,
     $ 1.223E-06, 1.240E-06, 1.331E-06, 1.444E-06, 1.524E-06, 1.568E-06,
     $ 1.558E-06, 1.453E-06, 1.280E-06, 1.113E-06, 9.691E-07, 8.478E-07,
     $ 7.848E-07, 8.101E-07, 9.103E-07, 1.046E-06, 1.205E-06, 1.389E-06,
     $ 1.557E-06, 1.672E-06, 1.758E-06, 1.817E-06, 1.822E-06, 1.773E-06,
     $ 1.677E-06, 1.532E-06, 1.375E-06, 1.278E-06, 1.274E-06, 1.332E-06,
     $ 1.428E-06, 1.525E-06, 1.551E-06, 1.491E-06/
C                                                                       
C     28501 TO 28600 CM-1 DATA.                                         
      DATA (SUN(I),I= 28501, 28600)/                                    
     $ 1.399E-06, 1.312E-06, 1.246E-06, 1.224E-06, 1.226E-06, 1.230E-06,
     $ 1.213E-06, 1.150E-06, 1.068E-06, 1.022E-06, 1.027E-06, 1.089E-06,
     $ 1.215E-06, 1.362E-06, 1.479E-06, 1.561E-06, 1.611E-06, 1.608E-06,
     $ 1.555E-06, 1.477E-06, 1.385E-06, 1.288E-06, 1.228E-06, 1.239E-06,
     $ 1.307E-06, 1.393E-06, 1.494E-06, 1.605E-06, 1.686E-06, 1.714E-06,
     $ 1.705E-06, 1.663E-06, 1.598E-06, 1.552E-06, 1.557E-06, 1.618E-06,
     $ 1.699E-06, 1.731E-06, 1.684E-06, 1.563E-06, 1.386E-06, 1.220E-06,
     $ 1.152E-06, 1.186E-06, 1.291E-06, 1.449E-06, 1.611E-06, 1.718E-06,
     $ 1.773E-06, 1.807E-06, 1.802E-06, 1.732E-06, 1.624E-06, 1.500E-06,
     $ 1.341E-06, 1.173E-06, 1.073E-06, 1.050E-06, 1.066E-06, 1.127E-06,
     $ 1.230E-06, 1.329E-06, 1.394E-06, 1.447E-06, 1.507E-06, 1.563E-06,
     $ 1.607E-06, 1.653E-06, 1.681E-06, 1.651E-06, 1.589E-06, 1.536E-06,
     $ 1.491E-06, 1.465E-06, 1.475E-06, 1.462E-06, 1.372E-06, 1.220E-06,
     $ 1.039E-06, 8.599E-07, 7.430E-07, 7.046E-07, 7.136E-07, 7.470E-07,
     $ 7.684E-07, 7.548E-07, 7.471E-07, 7.701E-07, 7.993E-07, 8.356E-07,
     $ 8.842E-07, 9.143E-07, 9.135E-07, 9.025E-07, 9.016E-07, 9.104E-07,
     $ 9.090E-07, 9.091E-07, 9.475E-07, 1.016E-06/
C                                                                       
C     28601 TO 28700 CM-1 DATA.                                         
      DATA (SUN(I),I= 28601, 28700)/                                    
     $ 1.096E-06, 1.209E-06, 1.336E-06, 1.413E-06, 1.432E-06, 1.415E-06,
     $ 1.385E-06, 1.381E-06, 1.408E-06, 1.433E-06, 1.433E-06, 1.382E-06,
     $ 1.252E-06, 1.072E-06, 9.052E-07, 7.697E-07, 6.562E-07, 5.775E-07,
     $ 5.491E-07, 5.709E-07, 6.537E-07, 8.136E-07, 1.035E-06, 1.266E-06,
     $ 1.457E-06, 1.584E-06, 1.653E-06, 1.674E-06, 1.660E-06, 1.631E-06,
     $ 1.591E-06, 1.513E-06, 1.382E-06, 1.220E-06, 1.044E-06, 8.549E-07,
     $ 6.792E-07, 5.517E-07, 4.813E-07, 4.744E-07, 5.393E-07, 6.568E-07,
     $ 7.815E-07, 8.823E-07, 9.462E-07, 9.707E-07, 9.811E-07, 1.021E-06,
     $ 1.105E-06, 1.229E-06, 1.373E-06, 1.490E-06, 1.561E-06, 1.586E-06,
     $ 1.542E-06, 1.453E-06, 1.370E-06, 1.286E-06, 1.203E-06, 1.151E-06,
     $ 1.137E-06, 1.164E-06, 1.235E-06, 1.342E-06, 1.485E-06, 1.647E-06,
     $ 1.781E-06, 1.871E-06, 1.909E-06, 1.884E-06, 1.821E-06, 1.760E-06,
     $ 1.719E-06, 1.703E-06, 1.692E-06, 1.662E-06, 1.616E-06, 1.551E-06,
     $ 1.473E-06, 1.422E-06, 1.395E-06, 1.345E-06, 1.274E-06, 1.221E-06,
     $ 1.185E-06, 1.157E-06, 1.173E-06, 1.241E-06, 1.303E-06, 1.337E-06,
     $ 1.358E-06, 1.334E-06, 1.255E-06, 1.155E-06, 1.042E-06, 9.454E-07,
     $ 9.191E-07, 9.474E-07, 9.901E-07, 1.048E-06/
C                                                                       
C     28701 TO 28800 CM-1 DATA.                                         
      DATA (SUN(I),I= 28701, 28800)/                                    
     $ 1.102E-06, 1.124E-06, 1.155E-06, 1.246E-06, 1.389E-06, 1.543E-06,
     $ 1.686E-06, 1.804E-06, 1.874E-06, 1.885E-06, 1.864E-06, 1.825E-06,
     $ 1.747E-06, 1.626E-06, 1.489E-06, 1.359E-06, 1.263E-06, 1.231E-06,
     $ 1.263E-06, 1.349E-06, 1.462E-06, 1.541E-06, 1.563E-06, 1.545E-06,
     $ 1.479E-06, 1.386E-06, 1.322E-06, 1.292E-06, 1.274E-06, 1.277E-06,
     $ 1.294E-06, 1.287E-06, 1.258E-06, 1.230E-06, 1.200E-06, 1.159E-06,
     $ 1.121E-06, 1.101E-06, 1.108E-06, 1.135E-06, 1.166E-06, 1.223E-06,
     $ 1.294E-06, 1.329E-06, 1.341E-06, 1.350E-06, 1.316E-06, 1.227E-06,
     $ 1.106E-06, 9.494E-07, 7.705E-07, 6.155E-07, 5.045E-07, 4.506E-07,
     $ 4.815E-07, 5.867E-07, 7.156E-07, 8.346E-07, 9.174E-07, 9.164E-07,
     $ 8.160E-07, 6.616E-07, 5.075E-07, 3.953E-07, 3.590E-07, 4.046E-07,
     $ 5.185E-07, 6.834E-07, 8.627E-07, 1.029E-06, 1.175E-06, 1.260E-06,
     $ 1.253E-06, 1.193E-06, 1.115E-06, 1.036E-06, 1.011E-06, 1.067E-06,
     $ 1.148E-06, 1.219E-06, 1.288E-06, 1.334E-06, 1.338E-06, 1.313E-06,
     $ 1.258E-06, 1.172E-06, 1.084E-06, 1.023E-06, 1.010E-06, 1.073E-06,
     $ 1.195E-06, 1.316E-06, 1.404E-06, 1.439E-06, 1.391E-06, 1.268E-06,
     $ 1.131E-06, 1.034E-06, 1.012E-06, 1.078E-06/
C                                                                       
C     28801 TO 28900 CM-1 DATA.                                         
      DATA (SUN(I),I= 28801, 28900)/                                    
     $ 1.213E-06, 1.371E-06, 1.504E-06, 1.586E-06, 1.629E-06, 1.641E-06,
     $ 1.606E-06, 1.539E-06, 1.452E-06, 1.322E-06, 1.181E-06, 1.100E-06,
     $ 1.079E-06, 1.080E-06, 1.112E-06, 1.160E-06, 1.163E-06, 1.128E-06,
     $ 1.113E-06, 1.136E-06, 1.198E-06, 1.300E-06, 1.415E-06, 1.501E-06,
     $ 1.527E-06, 1.480E-06, 1.369E-06, 1.232E-06, 1.098E-06, 9.947E-07,
     $ 9.606E-07, 1.003E-06, 1.084E-06, 1.173E-06, 1.247E-06, 1.266E-06,
     $ 1.227E-06, 1.166E-06, 1.091E-06, 9.940E-07, 8.829E-07, 7.646E-07,
     $ 6.455E-07, 5.639E-07, 5.597E-07, 6.422E-07, 8.010E-07, 9.964E-07,
     $ 1.169E-06, 1.293E-06, 1.362E-06, 1.365E-06, 1.343E-06, 1.334E-06,
     $ 1.314E-06, 1.285E-06, 1.291E-06, 1.313E-06, 1.336E-06, 1.403E-06,
     $ 1.506E-06, 1.578E-06, 1.599E-06, 1.580E-06, 1.494E-06, 1.358E-06,
     $ 1.245E-06, 1.189E-06, 1.170E-06, 1.187E-06, 1.254E-06, 1.327E-06,
     $ 1.351E-06, 1.333E-06, 1.277E-06, 1.151E-06, 9.688E-07, 7.995E-07,
     $ 6.816E-07, 6.311E-07, 6.788E-07, 8.197E-07, 9.875E-07, 1.135E-06,
     $ 1.250E-06, 1.294E-06, 1.258E-06, 1.196E-06, 1.125E-06, 1.037E-06,
     $ 9.928E-07, 1.021E-06, 1.077E-06, 1.154E-06, 1.263E-06, 1.350E-06,
     $ 1.366E-06, 1.342E-06, 1.307E-06, 1.248E-06/
C                                                                       
C     28901 TO 29000 CM-1 DATA.                                         
      DATA (SUN(I),I= 28901, 29000)/                                    
     $ 1.164E-06, 1.073E-06, 9.723E-07, 8.530E-07, 7.403E-07, 6.859E-07,
     $ 7.249E-07, 8.581E-07, 1.051E-06, 1.259E-06, 1.447E-06, 1.584E-06,
     $ 1.645E-06, 1.639E-06, 1.601E-06, 1.541E-06, 1.459E-06, 1.392E-06,
     $ 1.372E-06, 1.384E-06, 1.416E-06, 1.462E-06, 1.501E-06, 1.528E-06,
     $ 1.555E-06, 1.584E-06, 1.622E-06, 1.667E-06, 1.689E-06, 1.675E-06,
     $ 1.630E-06, 1.548E-06, 1.454E-06, 1.384E-06, 1.340E-06, 1.322E-06,
     $ 1.322E-06, 1.323E-06, 1.325E-06, 1.327E-06, 1.329E-06, 1.337E-06,
     $ 1.336E-06, 1.291E-06, 1.205E-06, 1.102E-06, 9.876E-07, 8.755E-07,
     $ 7.937E-07, 7.406E-07, 6.976E-07, 6.797E-07, 7.015E-07, 7.412E-07,
     $ 7.806E-07, 8.105E-07, 8.127E-07, 7.970E-07, 7.941E-07, 8.179E-07,
     $ 8.904E-07, 1.024E-06, 1.182E-06, 1.336E-06, 1.482E-06, 1.584E-06,
     $ 1.612E-06, 1.592E-06, 1.543E-06, 1.459E-06, 1.373E-06, 1.318E-06,
     $ 1.285E-06, 1.271E-06, 1.308E-06, 1.395E-06, 1.487E-06, 1.560E-06,
     $ 1.605E-06, 1.585E-06, 1.489E-06, 1.361E-06, 1.241E-06, 1.155E-06,
     $ 1.139E-06, 1.203E-06, 1.328E-06, 1.495E-06, 1.655E-06, 1.771E-06,
     $ 1.843E-06, 1.869E-06, 1.850E-06, 1.810E-06, 1.740E-06, 1.621E-06,
     $ 1.468E-06, 1.291E-06, 1.106E-06, 9.726E-07/
C                                                                       
C     29001 TO 29100 CM-1 DATA.                                         
      DATA (SUN(I),I= 29001, 29100)/                                    
     $ 9.324E-07, 9.599E-07, 1.016E-06, 1.067E-06, 1.066E-06, 9.864E-07,
     $ 8.654E-07, 7.604E-07, 7.196E-07, 7.692E-07, 8.969E-07, 1.068E-06,
     $ 1.230E-06, 1.322E-06, 1.335E-06, 1.301E-06, 1.239E-06, 1.192E-06,
     $ 1.216E-06, 1.283E-06, 1.323E-06, 1.325E-06, 1.270E-06, 1.119E-06,
     $ 9.108E-07, 7.217E-07, 5.741E-07, 4.792E-07, 4.547E-07, 4.961E-07,
     $ 5.772E-07, 6.556E-07, 7.081E-07, 7.443E-07, 7.513E-07, 7.295E-07,
     $ 7.297E-07, 7.664E-07, 8.165E-07, 8.760E-07, 9.320E-07, 9.675E-07,
     $ 9.879E-07, 9.975E-07, 1.005E-06, 1.017E-06, 1.004E-06, 9.395E-07,
     $ 8.318E-07, 6.974E-07, 5.480E-07, 4.069E-07, 3.042E-07, 2.493E-07,
     $ 2.340E-07, 2.576E-07, 3.266E-07, 4.412E-07, 5.959E-07, 7.705E-07,
     $ 9.430E-07, 1.103E-06, 1.227E-06, 1.279E-06, 1.257E-06, 1.189E-06,
     $ 1.100E-06, 1.030E-06, 1.036E-06, 1.147E-06, 1.336E-06, 1.520E-06,
     $ 1.634E-06, 1.646E-06, 1.557E-06, 1.413E-06, 1.293E-06, 1.246E-06,
     $ 1.257E-06, 1.273E-06, 1.247E-06, 1.163E-06, 1.015E-06, 8.466E-07,
     $ 7.420E-07, 7.474E-07, 8.571E-07, 1.055E-06, 1.286E-06, 1.462E-06,
     $ 1.543E-06, 1.540E-06, 1.464E-06, 1.349E-06, 1.250E-06, 1.179E-06,
     $ 1.128E-06, 1.118E-06, 1.153E-06, 1.209E-06/
C                                                                       
C     29101 TO 29200 CM-1 DATA.                                         
      DATA (SUN(I),I= 29101, 29200)/                                    
     $ 1.279E-06, 1.359E-06, 1.427E-06, 1.473E-06, 1.502E-06, 1.516E-06,
     $ 1.506E-06, 1.479E-06, 1.450E-06, 1.415E-06, 1.356E-06, 1.266E-06,
     $ 1.139E-06, 9.711E-07, 7.956E-07, 6.639E-07, 6.154E-07, 6.604E-07,
     $ 7.765E-07, 9.370E-07, 1.121E-06, 1.286E-06, 1.414E-06, 1.512E-06,
     $ 1.556E-06, 1.515E-06, 1.417E-06, 1.288E-06, 1.143E-06, 1.035E-06,
     $ 1.002E-06, 1.030E-06, 1.095E-06, 1.178E-06, 1.242E-06, 1.287E-06,
     $ 1.323E-06, 1.340E-06, 1.355E-06, 1.392E-06, 1.430E-06, 1.458E-06,
     $ 1.500E-06, 1.544E-06, 1.568E-06, 1.579E-06, 1.593E-06, 1.624E-06,
     $ 1.681E-06, 1.747E-06, 1.794E-06, 1.800E-06, 1.742E-06, 1.625E-06,
     $ 1.481E-06, 1.332E-06, 1.187E-06, 1.064E-06, 9.693E-07, 9.074E-07,
     $ 9.125E-07, 9.947E-07, 1.129E-06, 1.291E-06, 1.438E-06, 1.498E-06,
     $ 1.457E-06, 1.343E-06, 1.182E-06, 1.009E-06, 8.886E-07, 8.519E-07,
     $ 8.522E-07, 8.517E-07, 8.700E-07, 8.919E-07, 8.968E-07, 9.401E-07,
     $ 1.035E-06, 1.120E-06, 1.193E-06, 1.256E-06, 1.264E-06, 1.231E-06,
     $ 1.204E-06, 1.175E-06, 1.141E-06, 1.128E-06, 1.126E-06, 1.117E-06,
     $ 1.093E-06, 1.054E-06, 1.014E-06, 9.694E-07, 9.212E-07, 8.759E-07,
     $ 8.325E-07, 7.974E-07, 7.908E-07, 8.362E-07/
C                                                                       
C     29201 TO 29300 CM-1 DATA.                                         
      DATA (SUN(I),I= 29201, 29300)/                                    
     $ 9.453E-07, 1.083E-06, 1.180E-06, 1.198E-06, 1.131E-06, 9.997E-07,
     $ 8.668E-07, 8.043E-07, 8.463E-07, 9.702E-07, 1.129E-06, 1.292E-06,
     $ 1.425E-06, 1.497E-06, 1.525E-06, 1.512E-06, 1.434E-06, 1.325E-06,
     $ 1.230E-06, 1.151E-06, 1.107E-06, 1.123E-06, 1.165E-06, 1.186E-06,
     $ 1.183E-06, 1.179E-06, 1.197E-06, 1.265E-06, 1.386E-06, 1.528E-06,
     $ 1.658E-06, 1.747E-06, 1.773E-06, 1.754E-06, 1.729E-06, 1.707E-06,
     $ 1.683E-06, 1.658E-06, 1.621E-06, 1.564E-06, 1.502E-06, 1.453E-06,
     $ 1.423E-06, 1.422E-06, 1.442E-06, 1.442E-06, 1.409E-06, 1.365E-06,
     $ 1.328E-06, 1.311E-06, 1.323E-06, 1.334E-06, 1.305E-06, 1.222E-06,
     $ 1.113E-06, 1.017E-06, 9.823E-07, 1.029E-06, 1.121E-06, 1.209E-06,
     $ 1.266E-06, 1.266E-06, 1.201E-06, 1.108E-06, 1.015E-06, 9.409E-07,
     $ 9.080E-07, 9.251E-07, 9.795E-07, 1.044E-06, 1.082E-06, 1.059E-06,
     $ 9.661E-07, 8.252E-07, 6.850E-07, 6.013E-07, 6.161E-07, 7.253E-07,
     $ 8.794E-07, 1.030E-06, 1.140E-06, 1.168E-06, 1.120E-06, 1.049E-06,
     $ 9.715E-07, 8.745E-07, 7.853E-07, 7.327E-07, 6.996E-07, 6.813E-07,
     $ 7.083E-07, 7.758E-07, 8.464E-07, 9.253E-07, 1.035E-06, 1.143E-06,
     $ 1.227E-06, 1.311E-06, 1.387E-06, 1.427E-06/
C                                                                       
C     29301 TO 29400 CM-1 DATA.                                         
      DATA (SUN(I),I= 29301, 29400)/                                    
     $ 1.441E-06, 1.445E-06, 1.429E-06, 1.382E-06, 1.305E-06, 1.237E-06,
     $ 1.215E-06, 1.230E-06, 1.294E-06, 1.413E-06, 1.523E-06, 1.566E-06,
     $ 1.547E-06, 1.457E-06, 1.302E-06, 1.139E-06, 1.008E-06, 9.301E-07,
     $ 9.150E-07, 9.375E-07, 9.735E-07, 1.011E-06, 1.007E-06, 9.575E-07,
     $ 9.283E-07, 9.457E-07, 9.993E-07, 1.110E-06, 1.274E-06, 1.433E-06,
     $ 1.548E-06, 1.619E-06, 1.648E-06, 1.621E-06, 1.522E-06, 1.365E-06,
     $ 1.172E-06, 9.689E-07, 8.047E-07, 7.184E-07, 7.162E-07, 7.807E-07,
     $ 8.594E-07, 9.197E-07, 9.799E-07, 1.028E-06, 1.053E-06, 1.100E-06,
     $ 1.170E-06, 1.224E-06, 1.275E-06, 1.329E-06, 1.367E-06, 1.383E-06,
     $ 1.358E-06, 1.282E-06, 1.171E-06, 1.056E-06, 9.782E-07, 9.665E-07,
     $ 1.010E-06, 1.083E-06, 1.159E-06, 1.215E-06, 1.258E-06, 1.309E-06,
     $ 1.383E-06, 1.455E-06, 1.477E-06, 1.432E-06, 1.327E-06, 1.197E-06,
     $ 1.091E-06, 1.039E-06, 1.053E-06, 1.113E-06, 1.149E-06, 1.114E-06,
     $ 1.023E-06, 9.088E-07, 8.154E-07, 7.985E-07, 8.777E-07, 1.033E-06,
     $ 1.215E-06, 1.343E-06, 1.381E-06, 1.361E-06, 1.301E-06, 1.234E-06,
     $ 1.235E-06, 1.323E-06, 1.446E-06, 1.576E-06, 1.702E-06, 1.780E-06,
     $ 1.791E-06, 1.786E-06, 1.804E-06, 1.832E-06/
C                                                                       
C     29401 TO 29500 CM-1 DATA.                                         
      DATA (SUN(I),I= 29401, 29500)/                                    
     $ 1.863E-06, 1.915E-06, 1.951E-06, 1.915E-06, 1.799E-06, 1.642E-06,
     $ 1.467E-06, 1.296E-06, 1.171E-06, 1.124E-06, 1.133E-06, 1.147E-06,
     $ 1.152E-06, 1.181E-06, 1.259E-06, 1.373E-06, 1.513E-06, 1.661E-06,
     $ 1.743E-06, 1.710E-06, 1.594E-06, 1.456E-06, 1.340E-06, 1.282E-06,
     $ 1.279E-06, 1.298E-06, 1.331E-06, 1.376E-06, 1.431E-06, 1.500E-06,
     $ 1.566E-06, 1.587E-06, 1.542E-06, 1.439E-06, 1.311E-06, 1.210E-06,
     $ 1.170E-06, 1.184E-06, 1.212E-06, 1.234E-06, 1.246E-06, 1.227E-06,
     $ 1.192E-06, 1.203E-06, 1.244E-06, 1.255E-06, 1.241E-06, 1.204E-06,
     $ 1.108E-06, 9.986E-07, 9.462E-07, 9.416E-07, 9.682E-07, 1.022E-06,
     $ 1.059E-06, 1.054E-06, 1.039E-06, 1.023E-06, 9.950E-07, 9.530E-07,
     $ 8.868E-07, 7.824E-07, 6.535E-07, 5.445E-07, 4.840E-07, 4.768E-07,
     $ 5.267E-07, 6.116E-07, 6.922E-07, 7.702E-07, 8.468E-07, 8.988E-07,
     $ 9.384E-07, 9.765E-07, 9.885E-07, 9.655E-07, 9.200E-07, 8.695E-07,
     $ 8.380E-07, 8.318E-07, 8.694E-07, 9.828E-07, 1.142E-06, 1.297E-06,
     $ 1.439E-06, 1.551E-06, 1.589E-06, 1.551E-06, 1.498E-06, 1.479E-06,
     $ 1.502E-06, 1.566E-06, 1.667E-06, 1.757E-06, 1.775E-06, 1.706E-06,
     $ 1.571E-06, 1.406E-06, 1.240E-06, 1.096E-06/
C                                                                       
C     29501 TO 29600 CM-1 DATA.                                         
      DATA (SUN(I),I= 29501, 29600)/                                    
     $ 9.957E-07, 9.451E-07, 9.245E-07, 9.047E-07, 8.765E-07, 8.631E-07,
     $ 8.802E-07, 9.067E-07, 9.478E-07, 1.028E-06, 1.106E-06, 1.137E-06,
     $ 1.161E-06, 1.215E-06, 1.268E-06, 1.314E-06, 1.372E-06, 1.419E-06,
     $ 1.419E-06, 1.386E-06, 1.343E-06, 1.283E-06, 1.218E-06, 1.170E-06,
     $ 1.150E-06, 1.155E-06, 1.172E-06, 1.188E-06, 1.205E-06, 1.218E-06,
     $ 1.219E-06, 1.235E-06, 1.290E-06, 1.363E-06, 1.428E-06, 1.490E-06,
     $ 1.540E-06, 1.524E-06, 1.421E-06, 1.262E-06, 1.055E-06, 8.251E-07,
     $ 6.503E-07, 5.798E-07, 6.191E-07, 7.681E-07, 9.834E-07, 1.194E-06,
     $ 1.354E-06, 1.431E-06, 1.410E-06, 1.305E-06, 1.156E-06, 1.018E-06,
     $ 9.273E-07, 8.983E-07, 9.528E-07, 1.092E-06, 1.278E-06, 1.465E-06,
     $ 1.616E-06, 1.691E-06, 1.666E-06, 1.543E-06, 1.351E-06, 1.132E-06,
     $ 9.140E-07, 7.160E-07, 5.556E-07, 4.377E-07, 3.551E-07, 3.139E-07,
     $ 3.292E-07, 3.893E-07, 4.847E-07, 6.348E-07, 8.226E-07, 9.928E-07,
     $ 1.130E-06, 1.230E-06, 1.250E-06, 1.186E-06, 1.100E-06, 1.026E-06,
     $ 9.578E-07, 9.289E-07, 9.604E-07, 1.003E-06, 1.053E-06, 1.161E-06,
     $ 1.305E-06, 1.448E-06, 1.599E-06, 1.707E-06, 1.697E-06, 1.584E-06,
     $ 1.428E-06, 1.271E-06, 1.175E-06, 1.189E-06/
C                                                                       
C     29601 TO 29700 CM-1 DATA.                                         
      DATA (SUN(I),I= 29601, 29700)/                                    
     $ 1.294E-06, 1.432E-06, 1.560E-06, 1.646E-06, 1.658E-06, 1.613E-06,
     $ 1.554E-06, 1.494E-06, 1.464E-06, 1.507E-06, 1.590E-06, 1.655E-06,
     $ 1.701E-06, 1.713E-06, 1.659E-06, 1.579E-06, 1.522E-06, 1.464E-06,
     $ 1.381E-06, 1.283E-06, 1.180E-06, 1.087E-06, 1.008E-06, 9.550E-07,
     $ 9.355E-07, 9.087E-07, 8.638E-07, 8.645E-07, 9.221E-07, 9.955E-07,
     $ 1.086E-06, 1.176E-06, 1.203E-06, 1.168E-06, 1.106E-06, 1.024E-06,
     $ 9.294E-07, 8.384E-07, 7.522E-07, 6.848E-07, 6.518E-07, 6.353E-07,
     $ 6.127E-07, 5.916E-07, 5.753E-07, 5.620E-07, 5.774E-07, 6.342E-07,
     $ 6.994E-07, 7.418E-07, 7.551E-07, 7.331E-07, 6.845E-07, 6.357E-07,
     $ 6.046E-07, 5.944E-07, 6.057E-07, 6.419E-07, 6.975E-07, 7.558E-07,
     $ 8.089E-07, 8.525E-07, 8.720E-07, 8.544E-07, 8.003E-07, 7.232E-07,
     $ 6.373E-07, 5.538E-07, 4.910E-07, 4.654E-07, 4.724E-07, 5.002E-07,
     $ 5.500E-07, 6.332E-07, 7.511E-07, 8.794E-07, 9.932E-07, 1.074E-06,
     $ 1.088E-06, 1.030E-06, 9.556E-07, 9.103E-07, 9.017E-07, 9.520E-07,
     $ 1.057E-06, 1.144E-06, 1.185E-06, 1.202E-06, 1.179E-06, 1.128E-06,
     $ 1.118E-06, 1.149E-06, 1.189E-06, 1.238E-06, 1.257E-06, 1.208E-06,
     $ 1.125E-06, 1.034E-06, 9.557E-07, 9.398E-07/
C                                                                       
C     29701 TO 29800 CM-1 DATA.                                         
      DATA (SUN(I),I= 29701, 29800)/                                    
     $ 9.760E-07, 1.021E-06, 1.086E-06, 1.168E-06, 1.243E-06, 1.338E-06,
     $ 1.458E-06, 1.549E-06, 1.598E-06, 1.616E-06, 1.572E-06, 1.493E-06,
     $ 1.447E-06, 1.419E-06, 1.379E-06, 1.351E-06, 1.311E-06, 1.238E-06,
     $ 1.182E-06, 1.157E-06, 1.168E-06, 1.240E-06, 1.319E-06, 1.348E-06,
     $ 1.346E-06, 1.313E-06, 1.244E-06, 1.181E-06, 1.142E-06, 1.124E-06,
     $ 1.105E-06, 1.040E-06, 9.327E-07, 8.213E-07, 7.054E-07, 5.872E-07,
     $ 5.056E-07, 4.607E-07, 4.150E-07, 3.631E-07, 3.253E-07, 3.055E-07,
     $ 3.009E-07, 3.164E-07, 3.518E-07, 3.934E-07, 4.189E-07, 4.216E-07,
     $ 4.111E-07, 3.901E-07, 3.606E-07, 3.424E-07, 3.469E-07, 3.645E-07,
     $ 3.881E-07, 4.170E-07, 4.436E-07, 4.630E-07, 4.807E-07, 4.957E-07,
     $ 5.081E-07, 5.212E-07, 5.278E-07, 5.285E-07, 5.360E-07, 5.530E-07,
     $ 5.919E-07, 6.709E-07, 7.732E-07, 8.896E-07, 1.033E-06, 1.167E-06,
     $ 1.245E-06, 1.292E-06, 1.337E-06, 1.369E-06, 1.414E-06, 1.502E-06,
     $ 1.598E-06, 1.645E-06, 1.615E-06, 1.505E-06, 1.354E-06, 1.215E-06,
     $ 1.138E-06, 1.152E-06, 1.241E-06, 1.366E-06, 1.478E-06, 1.537E-06,
     $ 1.537E-06, 1.495E-06, 1.421E-06, 1.355E-06, 1.345E-06, 1.383E-06,
     $ 1.453E-06, 1.538E-06, 1.585E-06, 1.556E-06/
C                                                                       
C     29801 TO 29900 CM-1 DATA.                                         
      DATA (SUN(I),I= 29801, 29900)/                                    
     $ 1.466E-06, 1.343E-06, 1.222E-06, 1.136E-06, 1.081E-06, 1.063E-06,
     $ 1.101E-06, 1.158E-06, 1.204E-06, 1.268E-06, 1.335E-06, 1.353E-06,
     $ 1.346E-06, 1.360E-06, 1.383E-06, 1.400E-06, 1.443E-06, 1.508E-06,
     $ 1.541E-06, 1.538E-06, 1.524E-06, 1.467E-06, 1.354E-06, 1.240E-06,
     $ 1.167E-06, 1.139E-06, 1.174E-06, 1.275E-06, 1.391E-06, 1.474E-06,
     $ 1.515E-06, 1.521E-06, 1.491E-06, 1.440E-06, 1.376E-06, 1.278E-06,
     $ 1.149E-06, 1.030E-06, 9.474E-07, 9.129E-07, 9.266E-07, 9.435E-07,
     $ 9.126E-07, 8.301E-07, 7.124E-07, 5.771E-07, 4.640E-07, 4.106E-07,
     $ 4.156E-07, 4.685E-07, 5.786E-07, 7.510E-07, 9.697E-07, 1.201E-06,
     $ 1.396E-06, 1.507E-06, 1.510E-06, 1.409E-06, 1.240E-06, 1.069E-06,
     $ 9.531E-07, 9.268E-07, 9.919E-07, 1.112E-06, 1.243E-06, 1.343E-06,
     $ 1.375E-06, 1.330E-06, 1.245E-06, 1.168E-06, 1.132E-06, 1.147E-06,
     $ 1.198E-06, 1.262E-06, 1.309E-06, 1.308E-06, 1.261E-06, 1.200E-06,
     $ 1.136E-06, 1.086E-06, 1.089E-06, 1.148E-06, 1.224E-06, 1.298E-06,
     $ 1.361E-06, 1.382E-06, 1.363E-06, 1.343E-06, 1.333E-06, 1.311E-06,
     $ 1.294E-06, 1.307E-06, 1.307E-06, 1.277E-06, 1.252E-06, 1.219E-06,
     $ 1.151E-06, 1.083E-06, 1.051E-06, 1.041E-06/
C                                                                       
C     29901 TO 30000 CM-1 DATA.                                         
      DATA (SUN(I),I= 29901, 30000)/                                    
     $ 1.050E-06, 1.099E-06, 1.179E-06, 1.254E-06, 1.319E-06, 1.360E-06,
     $ 1.336E-06, 1.255E-06, 1.166E-06, 1.060E-06, 9.372E-07, 8.572E-07,
     $ 8.277E-07, 8.165E-07, 8.598E-07, 9.863E-07, 1.153E-06, 1.315E-06,
     $ 1.455E-06, 1.552E-06, 1.581E-06, 1.535E-06, 1.440E-06, 1.315E-06,
     $ 1.173E-06, 1.059E-06, 1.015E-06, 1.029E-06, 1.084E-06, 1.160E-06,
     $ 1.203E-06, 1.193E-06, 1.167E-06, 1.146E-06, 1.124E-06, 1.109E-06,
     $ 1.110E-06, 1.099E-06, 1.072E-06, 1.056E-06, 1.054E-06, 1.058E-06,
     $ 1.073E-06, 1.091E-06, 1.115E-06, 1.149E-06, 1.167E-06, 1.156E-06,
     $ 1.137E-06, 1.113E-06, 1.092E-06, 1.101E-06, 1.137E-06, 1.169E-06,
     $ 1.174E-06, 1.129E-06, 1.030E-06, 9.068E-07, 7.888E-07, 6.808E-07,
     $ 5.926E-07, 5.528E-07, 5.655E-07, 6.017E-07, 6.537E-07, 7.413E-07,
     $ 8.410E-07, 9.008E-07, 9.254E-07, 9.365E-07, 9.167E-07, 8.758E-07,
     $ 8.696E-07, 9.151E-07, 1.004E-06, 1.123E-06, 1.236E-06, 1.300E-06,
     $ 1.295E-06, 1.234E-06, 1.170E-06, 1.137E-06, 1.134E-06, 1.186E-06,
     $ 1.291E-06, 1.374E-06, 1.399E-06, 1.397E-06, 1.361E-06, 1.272E-06,
     $ 1.176E-06, 1.123E-06, 1.108E-06, 1.128E-06, 1.175E-06, 1.226E-06,
     $ 1.248E-06, 1.214E-06, 1.135E-06, 1.050E-06/
C                                                                       
C     30001 TO 30100 CM-1 DATA.                                         
      DATA (SUN(I),I= 30001, 30100)/                                    
     $ 9.786E-07, 9.398E-07, 9.636E-07, 1.044E-06, 1.153E-06, 1.280E-06,
     $ 1.409E-06, 1.513E-06, 1.564E-06, 1.555E-06, 1.500E-06, 1.414E-06,
     $ 1.330E-06, 1.272E-06, 1.237E-06, 1.228E-06, 1.227E-06, 1.193E-06,
     $ 1.132E-06, 1.072E-06, 9.870E-07, 8.785E-07, 7.988E-07, 7.505E-07,
     $ 7.111E-07, 7.070E-07, 7.561E-07, 8.165E-07, 8.684E-07, 9.397E-07,
     $ 1.023E-06, 1.084E-06, 1.139E-06, 1.205E-06, 1.242E-06, 1.225E-06,
     $ 1.200E-06, 1.190E-06, 1.163E-06, 1.134E-06, 1.145E-06, 1.177E-06,
     $ 1.198E-06, 1.215E-06, 1.218E-06, 1.175E-06, 1.073E-06, 9.396E-07,
     $ 8.238E-07, 7.618E-07, 7.946E-07, 9.398E-07, 1.144E-06, 1.343E-06,
     $ 1.512E-06, 1.620E-06, 1.635E-06, 1.580E-06, 1.503E-06, 1.407E-06,
     $ 1.295E-06, 1.209E-06, 1.185E-06, 1.221E-06, 1.308E-06, 1.430E-06,
     $ 1.549E-06, 1.629E-06, 1.654E-06, 1.619E-06, 1.539E-06, 1.445E-06,
     $ 1.347E-06, 1.240E-06, 1.145E-06, 1.087E-06, 1.044E-06, 1.014E-06,
     $ 1.011E-06, 9.952E-07, 9.416E-07, 8.736E-07, 7.958E-07, 7.091E-07,
     $ 6.565E-07, 6.524E-07, 6.627E-07, 6.905E-07, 7.599E-07, 8.510E-07,
     $ 9.449E-07, 1.053E-06, 1.149E-06, 1.200E-06, 1.230E-06, 1.269E-06,
     $ 1.321E-06, 1.399E-06, 1.482E-06, 1.509E-06/
C                                                                       
C     30101 TO 30200 CM-1 DATA.                                         
      DATA (SUN(I),I= 30101, 30200)/                                    
     $ 1.457E-06, 1.337E-06, 1.176E-06, 1.015E-06, 8.929E-07, 8.364E-07,
     $ 8.564E-07, 9.174E-07, 9.887E-07, 1.100E-06, 1.243E-06, 1.358E-06,
     $ 1.448E-06, 1.536E-06, 1.561E-06, 1.490E-06, 1.382E-06, 1.270E-06,
     $ 1.155E-06, 1.091E-06, 1.105E-06, 1.157E-06, 1.219E-06, 1.280E-06,
     $ 1.292E-06, 1.242E-06, 1.178E-06, 1.130E-06, 1.110E-06, 1.157E-06,
     $ 1.276E-06, 1.403E-06, 1.474E-06, 1.468E-06, 1.385E-06, 1.257E-06,
     $ 1.139E-06, 1.068E-06, 1.052E-06, 1.064E-06, 1.072E-06, 1.074E-06,
     $ 1.088E-06, 1.123E-06, 1.193E-06, 1.280E-06, 1.333E-06, 1.337E-06,
     $ 1.297E-06, 1.200E-06, 1.075E-06, 9.900E-07, 9.507E-07, 9.351E-07,
     $ 9.486E-07, 9.804E-07, 9.896E-07, 9.542E-07, 8.969E-07, 8.498E-07,
     $ 8.043E-07, 7.571E-07, 7.369E-07, 7.360E-07, 7.227E-07, 7.195E-07,
     $ 7.562E-07, 8.203E-07, 8.993E-07, 9.911E-07, 1.073E-06, 1.123E-06,
     $ 1.136E-06, 1.119E-06, 1.102E-06, 1.119E-06, 1.162E-06, 1.207E-06,
     $ 1.251E-06, 1.268E-06, 1.218E-06, 1.123E-06, 1.039E-06, 9.780E-07,
     $ 9.379E-07, 9.329E-07, 9.679E-07, 1.016E-06, 1.059E-06, 1.111E-06,
     $ 1.177E-06, 1.238E-06, 1.281E-06, 1.299E-06, 1.280E-06, 1.217E-06,
     $ 1.108E-06, 9.886E-07, 9.151E-07, 8.956E-07/
C                                                                       
C     30201 TO 30300 CM-1 DATA.                                         
      DATA (SUN(I),I= 30201, 30300)/                                    
     $ 9.204E-07, 9.931E-07, 1.082E-06, 1.144E-06, 1.186E-06, 1.225E-06,
     $ 1.268E-06, 1.320E-06, 1.353E-06, 1.332E-06, 1.281E-06, 1.227E-06,
     $ 1.162E-06, 1.122E-06, 1.136E-06, 1.151E-06, 1.135E-06, 1.111E-06,
     $ 1.084E-06, 1.054E-06, 1.053E-06, 1.084E-06, 1.116E-06, 1.130E-06,
     $ 1.122E-06, 1.075E-06, 1.001E-06, 9.420E-07, 9.113E-07, 8.950E-07,
     $ 8.851E-07, 8.549E-07, 7.784E-07, 6.742E-07, 5.663E-07, 4.731E-07,
     $ 4.232E-07, 4.247E-07, 4.737E-07, 5.882E-07, 7.696E-07, 9.807E-07,
     $ 1.179E-06, 1.316E-06, 1.347E-06, 1.270E-06, 1.154E-06, 1.073E-06,
     $ 1.062E-06, 1.143E-06, 1.294E-06, 1.444E-06, 1.550E-06, 1.609E-06,
     $ 1.607E-06, 1.547E-06, 1.457E-06, 1.325E-06, 1.157E-06, 1.006E-06,
     $ 9.118E-07, 8.817E-07, 9.067E-07, 9.642E-07, 1.021E-06, 1.037E-06,
     $ 1.005E-06, 9.622E-07, 9.243E-07, 8.755E-07, 8.247E-07, 7.957E-07,
     $ 7.956E-07, 8.274E-07, 8.978E-07, 1.005E-06, 1.132E-06, 1.252E-06,
     $ 1.344E-06, 1.428E-06, 1.515E-06, 1.592E-06, 1.671E-06, 1.764E-06,
     $ 1.834E-06, 1.868E-06, 1.882E-06, 1.866E-06, 1.828E-06, 1.793E-06,
     $ 1.760E-06, 1.705E-06, 1.625E-06, 1.522E-06, 1.393E-06, 1.255E-06,
     $ 1.135E-06, 1.051E-06, 1.012E-06, 1.029E-06/
C                                                                       
C     30301 TO 30400 CM-1 DATA.                                         
      DATA (SUN(I),I= 30301, 30400)/                                    
     $ 1.079E-06, 1.128E-06, 1.185E-06, 1.260E-06, 1.320E-06, 1.358E-06,
     $ 1.389E-06, 1.391E-06, 1.339E-06, 1.264E-06, 1.230E-06, 1.275E-06,
     $ 1.390E-06, 1.544E-06, 1.687E-06, 1.745E-06, 1.681E-06, 1.524E-06,
     $ 1.312E-06, 1.089E-06, 9.157E-07, 8.061E-07, 7.318E-07, 6.957E-07,
     $ 7.034E-07, 7.249E-07, 7.532E-07, 8.004E-07, 8.534E-07, 9.076E-07,
     $ 9.594E-07, 9.892E-07, 1.009E-06, 1.034E-06, 1.061E-06, 1.111E-06,
     $ 1.193E-06, 1.267E-06, 1.308E-06, 1.315E-06, 1.286E-06, 1.243E-06,
     $ 1.236E-06, 1.298E-06, 1.409E-06, 1.525E-06, 1.629E-06, 1.702E-06,
     $ 1.697E-06, 1.643E-06, 1.606E-06, 1.575E-06, 1.529E-06, 1.513E-06,
     $ 1.524E-06, 1.514E-06, 1.491E-06, 1.472E-06, 1.431E-06, 1.369E-06,
     $ 1.317E-06, 1.282E-06, 1.265E-06, 1.270E-06, 1.274E-06, 1.244E-06,
     $ 1.192E-06, 1.163E-06, 1.172E-06, 1.216E-06, 1.301E-06, 1.387E-06,
     $ 1.398E-06, 1.334E-06, 1.232E-06, 1.098E-06, 9.740E-07, 9.082E-07,
     $ 8.924E-07, 9.118E-07, 9.778E-07, 1.086E-06, 1.209E-06, 1.328E-06,
     $ 1.442E-06, 1.548E-06, 1.609E-06, 1.615E-06, 1.597E-06, 1.559E-06,
     $ 1.483E-06, 1.388E-06, 1.311E-06, 1.231E-06, 1.111E-06, 9.830E-07,
     $ 8.873E-07, 8.236E-07, 7.974E-07, 8.243E-07/
C                                                                       
C     30401 TO 30500 CM-1 DATA.                                         
      DATA (SUN(I),I= 30401, 30500)/                                    
     $ 8.940E-07, 9.750E-07, 1.027E-06, 1.047E-06, 1.077E-06, 1.122E-06,
     $ 1.150E-06, 1.172E-06, 1.205E-06, 1.201E-06, 1.122E-06, 9.927E-07,
     $ 8.511E-07, 7.111E-07, 5.956E-07, 5.466E-07, 5.833E-07, 6.679E-07,
     $ 7.557E-07, 8.520E-07, 9.610E-07, 1.060E-06, 1.153E-06, 1.251E-06,
     $ 1.314E-06, 1.306E-06, 1.239E-06, 1.142E-06, 1.052E-06, 1.013E-06,
     $ 1.024E-06, 1.054E-06, 1.075E-06, 1.061E-06, 1.004E-06, 9.398E-07,
     $ 8.960E-07, 8.706E-07, 8.607E-07, 8.686E-07, 8.933E-07, 9.310E-07,
     $ 9.816E-07, 1.045E-06, 1.098E-06, 1.115E-06, 1.103E-06, 1.071E-06,
     $ 1.003E-06, 9.094E-07, 8.263E-07, 7.609E-07, 7.185E-07, 7.359E-07,
     $ 8.215E-07, 9.228E-07, 9.989E-07, 1.051E-06, 1.072E-06, 1.063E-06,
     $ 1.069E-06, 1.111E-06, 1.163E-06, 1.204E-06, 1.214E-06, 1.171E-06,
     $ 1.100E-06, 1.049E-06, 1.034E-06, 1.061E-06, 1.125E-06, 1.186E-06,
     $ 1.210E-06, 1.182E-06, 1.100E-06, 9.969E-07, 9.038E-07, 8.333E-07,
     $ 8.118E-07, 8.586E-07, 9.407E-07, 1.026E-06, 1.109E-06, 1.155E-06,
     $ 1.121E-06, 1.030E-06, 9.377E-07, 8.547E-07, 7.983E-07, 7.973E-07,
     $ 8.397E-07, 8.967E-07, 9.573E-07, 1.021E-06, 1.095E-06, 1.182E-06,
     $ 1.253E-06, 1.281E-06, 1.255E-06, 1.167E-06/
C                                                                       
C     30501 TO 30600 CM-1 DATA.                                         
      DATA (SUN(I),I= 30501, 30600)/                                    
     $ 1.041E-06, 9.187E-07, 8.312E-07, 8.069E-07, 8.466E-07, 9.131E-07,
     $ 9.759E-07, 1.028E-06, 1.066E-06, 1.085E-06, 1.087E-06, 1.093E-06,
     $ 1.104E-06, 1.096E-06, 1.083E-06, 1.082E-06, 1.076E-06, 1.057E-06,
     $ 1.040E-06, 1.038E-06, 1.057E-06, 1.098E-06, 1.160E-06, 1.237E-06,
     $ 1.296E-06, 1.303E-06, 1.269E-06, 1.214E-06, 1.144E-06, 1.066E-06,
     $ 9.912E-07, 9.299E-07, 8.774E-07, 8.286E-07, 8.026E-07, 8.245E-07,
     $ 8.906E-07, 9.874E-07, 1.105E-06, 1.226E-06, 1.336E-06, 1.422E-06,
     $ 1.483E-06, 1.537E-06, 1.599E-06, 1.654E-06, 1.683E-06, 1.669E-06,
     $ 1.598E-06, 1.479E-06, 1.331E-06, 1.180E-06, 1.063E-06, 9.986E-07,
     $ 9.603E-07, 9.305E-07, 9.124E-07, 8.847E-07, 8.310E-07, 7.729E-07,
     $ 7.271E-07, 7.090E-07, 7.463E-07, 8.331E-07, 9.425E-07, 1.056E-06,
     $ 1.134E-06, 1.149E-06, 1.121E-06, 1.071E-06, 1.016E-06, 9.861E-07,
     $ 9.782E-07, 9.749E-07, 9.707E-07, 9.490E-07, 9.079E-07, 8.850E-07,
     $ 9.029E-07, 9.650E-07, 1.075E-06, 1.211E-06, 1.326E-06, 1.386E-06,
     $ 1.372E-06, 1.304E-06, 1.230E-06, 1.176E-06, 1.151E-06, 1.163E-06,
     $ 1.202E-06, 1.236E-06, 1.223E-06, 1.174E-06, 1.119E-06, 1.037E-06,
     $ 9.322E-07, 8.680E-07, 8.623E-07, 8.833E-07/
C                                                                       
C     30601 TO 30700 CM-1 DATA.                                         
      DATA (SUN(I),I= 30601, 30700)/                                    
     $ 9.378E-07, 1.029E-06, 1.119E-06, 1.185E-06, 1.244E-06, 1.302E-06,
     $ 1.350E-06, 1.369E-06, 1.340E-06, 1.260E-06, 1.158E-06, 1.069E-06,
     $ 1.017E-06, 1.023E-06, 1.078E-06, 1.129E-06, 1.121E-06, 1.062E-06,
     $ 1.005E-06, 9.674E-07, 9.496E-07, 9.818E-07, 1.052E-06, 1.093E-06,
     $ 1.089E-06, 1.081E-06, 1.077E-06, 1.077E-06, 1.087E-06, 1.094E-06,
     $ 1.091E-06, 1.085E-06, 1.079E-06, 1.082E-06, 1.122E-06, 1.184E-06,
     $ 1.231E-06, 1.268E-06, 1.297E-06, 1.293E-06, 1.279E-06, 1.280E-06,
     $ 1.274E-06, 1.268E-06, 1.289E-06, 1.296E-06, 1.257E-06, 1.208E-06,
     $ 1.150E-06, 1.066E-06, 9.938E-07, 9.735E-07, 9.947E-07, 1.031E-06,
     $ 1.068E-06, 1.094E-06, 1.095E-06, 1.065E-06, 1.012E-06, 9.544E-07,
     $ 9.105E-07, 8.713E-07, 8.322E-07, 8.056E-07, 7.958E-07, 8.056E-07,
     $ 8.454E-07, 9.229E-07, 1.046E-06, 1.189E-06, 1.301E-06, 1.363E-06,
     $ 1.366E-06, 1.291E-06, 1.176E-06, 1.080E-06, 1.011E-06, 9.834E-07,
     $ 1.024E-06, 1.097E-06, 1.157E-06, 1.205E-06, 1.222E-06, 1.178E-06,
     $ 1.093E-06, 1.020E-06, 9.717E-07, 9.331E-07, 9.218E-07, 9.495E-07,
     $ 9.861E-07, 1.035E-06, 1.127E-06, 1.243E-06, 1.346E-06, 1.427E-06,
     $ 1.461E-06, 1.430E-06, 1.365E-06, 1.275E-06/
C                                                                       
C     30701 TO 30800 CM-1 DATA.                                         
      DATA (SUN(I),I= 30701, 30800)/                                    
     $ 1.148E-06, 1.023E-06, 9.319E-07, 8.691E-07, 8.573E-07, 9.213E-07,
     $ 1.031E-06, 1.154E-06, 1.278E-06, 1.379E-06, 1.431E-06, 1.433E-06,
     $ 1.396E-06, 1.309E-06, 1.168E-06, 1.006E-06, 8.415E-07, 6.731E-07,
     $ 5.331E-07, 4.542E-07, 4.255E-07, 4.304E-07, 4.763E-07, 5.661E-07,
     $ 6.756E-07, 7.796E-07, 8.708E-07, 9.191E-07, 8.816E-07, 7.786E-07,
     $ 6.682E-07, 5.763E-07, 5.366E-07, 5.950E-07, 7.314E-07, 8.895E-07,
     $ 1.043E-06, 1.150E-06, 1.166E-06, 1.111E-06, 1.027E-06, 9.460E-07,
     $ 9.087E-07, 9.323E-07, 9.874E-07, 1.037E-06, 1.061E-06, 1.051E-06,
     $ 1.000E-06, 9.162E-07, 8.231E-07, 7.313E-07, 6.499E-07, 6.162E-07,
     $ 6.495E-07, 7.210E-07, 8.136E-07, 9.235E-07, 1.008E-06, 1.035E-06,
     $ 1.024E-06, 9.850E-07, 9.093E-07, 8.228E-07, 7.656E-07, 7.544E-07,
     $ 7.884E-07, 8.452E-07, 8.887E-07, 8.857E-07, 8.290E-07, 7.340E-07,
     $ 6.342E-07, 5.807E-07, 6.048E-07, 6.848E-07, 7.913E-07, 9.086E-07,
     $ 9.857E-07, 9.839E-07, 9.190E-07, 8.003E-07, 6.433E-07, 5.010E-07,
     $ 4.111E-07, 3.930E-07, 4.686E-07, 6.207E-07, 8.071E-07, 1.003E-06,
     $ 1.177E-06, 1.301E-06, 1.370E-06, 1.381E-06, 1.334E-06, 1.238E-06,
     $ 1.115E-06, 1.000E-06, 9.282E-07, 9.135E-07/
C                                                                       
C     30801 TO 30900 CM-1 DATA.                                         
      DATA (SUN(I),I= 30801, 30900)/                                    
     $ 9.534E-07, 1.017E-06, 1.075E-06, 1.131E-06, 1.190E-06, 1.242E-06,
     $ 1.288E-06, 1.328E-06, 1.327E-06, 1.253E-06, 1.119E-06, 9.647E-07,
     $ 8.194E-07, 6.964E-07, 6.149E-07, 5.874E-07, 6.014E-07, 6.271E-07,
     $ 6.579E-07, 7.089E-07, 7.590E-07, 7.698E-07, 7.619E-07, 7.688E-07,
     $ 7.827E-07, 8.287E-07, 9.502E-07, 1.115E-06, 1.256E-06, 1.342E-06,
     $ 1.342E-06, 1.229E-06, 1.034E-06, 8.243E-07, 6.516E-07, 5.455E-07,
     $ 5.170E-07, 5.561E-07, 6.462E-07, 7.585E-07, 8.655E-07, 9.794E-07,
     $ 1.096E-06, 1.164E-06, 1.177E-06, 1.174E-06, 1.138E-06, 1.055E-06,
     $ 9.789E-07, 9.279E-07, 8.674E-07, 8.172E-07, 8.012E-07, 7.899E-07,
     $ 7.808E-07, 7.737E-07, 7.313E-07, 6.611E-07, 5.958E-07, 5.247E-07,
     $ 4.566E-07, 4.214E-07, 3.988E-07, 3.724E-07, 3.769E-07, 4.271E-07,
     $ 5.058E-07, 6.224E-07, 7.704E-07, 8.857E-07, 9.293E-07, 9.142E-07,
     $ 8.472E-07, 7.588E-07, 7.086E-07, 7.136E-07, 7.616E-07, 8.385E-07,
     $ 9.016E-07, 9.253E-07, 9.293E-07, 9.139E-07, 8.619E-07, 7.839E-07,
     $ 6.955E-07, 5.953E-07, 4.942E-07, 4.242E-07, 4.133E-07, 4.531E-07,
     $ 5.146E-07, 5.870E-07, 6.611E-07, 7.149E-07, 7.425E-07, 7.621E-07,
     $ 7.940E-07, 8.407E-07, 8.785E-07, 8.932E-07/
C                                                                       
C     30901 TO 31000 CM-1 DATA.                                         
      DATA (SUN(I),I= 30901, 31000)/                                    
     $ 8.913E-07, 8.534E-07, 7.614E-07, 6.444E-07, 5.307E-07, 4.269E-07,
     $ 3.551E-07, 3.304E-07, 3.470E-07, 3.956E-07, 4.492E-07, 4.925E-07,
     $ 5.532E-07, 6.386E-07, 7.235E-07, 8.063E-07, 8.708E-07, 8.642E-07,
     $ 7.753E-07, 6.472E-07, 5.304E-07, 4.797E-07, 5.357E-07, 6.810E-07,
     $ 8.706E-07, 1.065E-06, 1.206E-06, 1.260E-06, 1.267E-06, 1.251E-06,
     $ 1.188E-06, 1.101E-06, 1.014E-06, 9.046E-07, 8.004E-07, 7.526E-07,
     $ 7.409E-07, 7.415E-07, 7.612E-07, 7.661E-07, 7.332E-07, 7.040E-07,
     $ 7.041E-07, 7.169E-07, 7.302E-07, 7.277E-07, 6.857E-07, 6.071E-07,
     $ 5.212E-07, 4.555E-07, 4.218E-07, 4.164E-07, 4.224E-07, 4.186E-07,
     $ 4.006E-07, 3.874E-07, 3.882E-07, 4.060E-07, 4.542E-07, 5.287E-07,
     $ 6.134E-07, 7.029E-07, 7.768E-07, 8.119E-07, 8.103E-07, 7.650E-07,
     $ 6.710E-07, 5.568E-07, 4.522E-07, 3.696E-07, 3.259E-07, 3.382E-07,
     $ 4.023E-07, 4.881E-07, 5.626E-07, 6.068E-07, 6.005E-07, 5.452E-07,
     $ 4.806E-07, 4.364E-07, 4.226E-07, 4.524E-07, 5.107E-07, 5.530E-07,
     $ 5.631E-07, 5.409E-07, 4.806E-07, 4.033E-07, 3.511E-07, 3.480E-07,
     $ 4.020E-07, 5.078E-07, 6.372E-07, 7.467E-07, 7.966E-07, 7.755E-07,
     $ 7.092E-07, 6.413E-07, 6.152E-07, 6.650E-07/
C                                                                       
C     31001 TO 31100 CM-1 DATA.                                         
      DATA (SUN(I),I= 31001, 31100)/                                    
     $ 7.827E-07, 9.209E-07, 1.043E-06, 1.126E-06, 1.144E-06, 1.110E-06,
     $ 1.075E-06, 1.040E-06, 9.821E-07, 9.166E-07, 8.589E-07, 8.014E-07,
     $ 7.522E-07, 7.320E-07, 7.341E-07, 7.253E-07, 6.952E-07, 6.717E-07,
     $ 6.708E-07, 6.998E-07, 7.721E-07, 8.565E-07, 8.920E-07, 8.660E-07,
     $ 7.956E-07, 6.856E-07, 5.691E-07, 5.043E-07, 4.967E-07, 5.060E-07,
     $ 5.296E-07, 5.877E-07, 6.673E-07, 7.638E-07, 9.064E-07, 1.084E-06,
     $ 1.233E-06, 1.309E-06, 1.295E-06, 1.188E-06, 1.018E-06, 8.623E-07,
     $ 7.689E-07, 7.333E-07, 7.401E-07, 7.546E-07, 7.226E-07, 6.440E-07,
     $ 5.724E-07, 5.362E-07, 5.468E-07, 6.287E-07, 7.659E-07, 8.935E-07,
     $ 9.868E-07, 1.063E-06, 1.103E-06, 1.094E-06, 1.077E-06, 1.062E-06,
     $ 1.028E-06, 9.894E-07, 9.609E-07, 9.362E-07, 9.322E-07, 9.472E-07,
     $ 9.462E-07, 9.276E-07, 9.034E-07, 8.425E-07, 7.422E-07, 6.506E-07,
     $ 5.790E-07, 5.019E-07, 4.324E-07, 4.065E-07, 4.299E-07, 5.028E-07,
     $ 6.309E-07, 7.977E-07, 9.558E-07, 1.056E-06, 1.084E-06, 1.065E-06,
     $ 1.034E-06, 1.033E-06, 1.091E-06, 1.185E-06, 1.259E-06, 1.279E-06,
     $ 1.224E-06, 1.094E-06, 9.348E-07, 8.008E-07, 7.174E-07, 6.755E-07,
     $ 6.581E-07, 6.515E-07, 6.229E-07, 5.451E-07/
C                                                                       
C     31101 TO 31200 CM-1 DATA.                                         
      DATA (SUN(I),I= 31101, 31200)/                                    
     $ 4.473E-07, 3.649E-07, 2.968E-07, 2.570E-07, 2.682E-07, 3.060E-07,
     $ 3.326E-07, 3.448E-07, 3.486E-07, 3.461E-07, 3.503E-07, 3.853E-07,
     $ 4.654E-07, 5.793E-07, 7.072E-07, 8.461E-07, 9.819E-07, 1.077E-06,
     $ 1.110E-06, 1.078E-06, 9.767E-07, 8.175E-07, 6.383E-07, 4.756E-07,
     $ 3.630E-07, 3.251E-07, 3.599E-07, 4.462E-07, 5.660E-07, 6.944E-07,
     $ 7.809E-07, 7.995E-07, 7.752E-07, 7.201E-07, 6.275E-07, 5.349E-07,
     $ 4.779E-07, 4.378E-07, 4.054E-07, 4.021E-07, 4.229E-07, 4.458E-07,
     $ 4.768E-07, 5.265E-07, 5.776E-07, 6.110E-07, 6.274E-07, 6.225E-07,
     $ 5.972E-07, 5.822E-07, 6.088E-07, 6.850E-07, 7.906E-07, 8.814E-07,
     $ 9.220E-07, 9.052E-07, 8.446E-07, 7.792E-07, 7.581E-07, 8.038E-07,
     $ 8.980E-07, 1.006E-06, 1.112E-06, 1.202E-06, 1.248E-06, 1.257E-06,
     $ 1.251E-06, 1.210E-06, 1.132E-06, 1.039E-06, 9.404E-07, 8.607E-07,
     $ 8.358E-07, 8.647E-07, 9.353E-07, 1.036E-06, 1.130E-06, 1.180E-06,
     $ 1.185E-06, 1.157E-06, 1.111E-06, 1.052E-06, 9.925E-07, 9.405E-07,
     $ 8.883E-07, 8.310E-07, 7.749E-07, 7.359E-07, 7.358E-07, 7.787E-07,
     $ 8.567E-07, 9.705E-07, 1.107E-06, 1.228E-06, 1.306E-06, 1.342E-06,
     $ 1.331E-06, 1.263E-06, 1.167E-06, 1.087E-06/
C                                                                       
C     31201 TO 31300 CM-1 DATA.                                         
      DATA (SUN(I),I= 31201, 31300)/                                    
     $ 1.028E-06, 9.795E-07, 9.509E-07, 9.360E-07, 9.037E-07, 8.456E-07,
     $ 7.915E-07, 7.548E-07, 7.230E-07, 6.934E-07, 6.639E-07, 6.148E-07,
     $ 5.445E-07, 4.740E-07, 4.201E-07, 4.015E-07, 4.299E-07, 4.882E-07,
     $ 5.576E-07, 6.453E-07, 7.444E-07, 8.341E-07, 9.259E-07, 1.020E-06,
     $ 1.085E-06, 1.121E-06, 1.146E-06, 1.139E-06, 1.100E-06, 1.056E-06,
     $ 9.922E-07, 8.984E-07, 7.936E-07, 6.865E-07, 5.765E-07, 4.858E-07,
     $ 4.364E-07, 4.333E-07, 4.846E-07, 5.755E-07, 6.592E-07, 7.129E-07,
     $ 7.381E-07, 7.243E-07, 6.864E-07, 6.728E-07, 7.103E-07, 7.968E-07,
     $ 9.152E-07, 1.050E-06, 1.196E-06, 1.327E-06, 1.407E-06, 1.439E-06,
     $ 1.441E-06, 1.405E-06, 1.336E-06, 1.263E-06, 1.194E-06, 1.106E-06,
     $ 9.968E-07, 8.903E-07, 8.089E-07, 7.610E-07, 7.476E-07, 7.525E-07,
     $ 7.368E-07, 6.797E-07, 5.982E-07, 5.262E-07, 4.938E-07, 5.186E-07,
     $ 5.895E-07, 6.713E-07, 7.280E-07, 7.474E-07, 7.453E-07, 7.273E-07,
     $ 6.942E-07, 6.761E-07, 6.926E-07, 7.209E-07, 7.508E-07, 7.964E-07,
     $ 8.413E-07, 8.484E-07, 8.156E-07, 7.760E-07, 7.462E-07, 7.178E-07,
     $ 6.985E-07, 7.032E-07, 7.114E-07, 6.992E-07, 6.836E-07, 6.736E-07,
     $ 6.457E-07, 5.954E-07, 5.527E-07, 5.352E-07/
C                                                                       
C     31301 TO 31400 CM-1 DATA.                                         
      DATA (SUN(I),I= 31301, 31400)/                                    
     $ 5.425E-07, 5.810E-07, 6.448E-07, 6.947E-07, 6.902E-07, 6.264E-07,
     $ 5.272E-07, 4.217E-07, 3.340E-07, 2.869E-07, 2.901E-07, 3.298E-07,
     $ 3.866E-07, 4.428E-07, 4.793E-07, 4.931E-07, 4.911E-07, 4.726E-07,
     $ 4.551E-07, 4.643E-07, 4.901E-07, 5.217E-07, 5.641E-07, 5.982E-07,
     $ 6.017E-07, 5.813E-07, 5.399E-07, 4.832E-07, 4.425E-07, 4.469E-07,
     $ 5.086E-07, 6.299E-07, 7.857E-07, 9.213E-07, 1.006E-06, 1.044E-06,
     $ 1.043E-06, 1.035E-06, 1.073E-06, 1.154E-06, 1.239E-06, 1.308E-06,
     $ 1.353E-06, 1.364E-06, 1.352E-06, 1.345E-06, 1.359E-06, 1.368E-06,
     $ 1.331E-06, 1.248E-06, 1.126E-06, 9.668E-07, 8.047E-07, 6.915E-07,
     $ 6.502E-07, 6.766E-07, 7.374E-07, 8.008E-07, 8.595E-07, 8.898E-07,
     $ 8.754E-07, 8.547E-07, 8.611E-07, 8.718E-07, 8.596E-07, 8.263E-07,
     $ 7.675E-07, 6.748E-07, 5.659E-07, 4.761E-07, 4.307E-07, 4.345E-07,
     $ 4.665E-07, 5.104E-07, 5.765E-07, 6.578E-07, 7.290E-07, 7.964E-07,
     $ 8.712E-07, 9.167E-07, 9.023E-07, 8.499E-07, 7.757E-07, 6.741E-07,
     $ 5.748E-07, 5.163E-07, 4.854E-07, 4.701E-07, 4.874E-07, 5.266E-07,
     $ 5.588E-07, 5.851E-07, 6.031E-07, 5.915E-07, 5.635E-07, 5.550E-07,
     $ 5.740E-07, 6.118E-07, 6.691E-07, 7.190E-07/
C                                                                       
C     31401 TO 31500 CM-1 DATA.                                         
      DATA (SUN(I),I= 31401, 31500)/                                    
     $ 7.117E-07, 6.431E-07, 5.460E-07, 4.399E-07, 3.481E-07, 3.083E-07,
     $ 3.325E-07, 4.013E-07, 4.930E-07, 5.895E-07, 6.618E-07, 6.781E-07,
     $ 6.406E-07, 5.713E-07, 4.823E-07, 3.968E-07, 3.411E-07, 3.135E-07,
     $ 2.991E-07, 2.910E-07, 2.845E-07, 2.870E-07, 3.151E-07, 3.759E-07,
     $ 4.613E-07, 5.524E-07, 6.247E-07, 6.550E-07, 6.398E-07, 6.028E-07,
     $ 5.667E-07, 5.390E-07, 5.252E-07, 5.170E-07, 5.038E-07, 4.990E-07,
     $ 5.039E-07, 5.028E-07, 5.002E-07, 4.912E-07, 4.534E-07, 3.970E-07,
     $ 3.520E-07, 3.356E-07, 3.642E-07, 4.439E-07, 5.540E-07, 6.712E-07,
     $ 7.886E-07, 8.933E-07, 9.611E-07, 9.845E-07, 9.740E-07, 9.289E-07,
     $ 8.549E-07, 7.818E-07, 7.361E-07, 7.239E-07, 7.284E-07, 7.274E-07,
     $ 7.297E-07, 7.560E-07, 8.063E-07, 8.896E-07, 1.023E-06, 1.178E-06,
     $ 1.308E-06, 1.385E-06, 1.392E-06, 1.324E-06, 1.212E-06, 1.094E-06,
     $ 9.984E-07, 9.640E-07, 1.006E-06, 1.087E-06, 1.166E-06, 1.221E-06,
     $ 1.218E-06, 1.144E-06, 1.032E-06, 9.123E-07, 8.102E-07, 7.583E-07,
     $ 7.529E-07, 7.627E-07, 7.873E-07, 8.195E-07, 8.328E-07, 8.403E-07,
     $ 8.638E-07, 8.959E-07, 9.413E-07, 1.006E-06, 1.067E-06, 1.094E-06,
     $ 1.074E-06, 1.008E-06, 9.022E-07, 7.797E-07/
C                                                                       
C     31501 TO 31600 CM-1 DATA.                                         
      DATA (SUN(I),I= 31501, 31600)/                                    
     $ 6.824E-07, 6.248E-07, 5.981E-07, 6.143E-07, 6.769E-07, 7.732E-07,
     $ 9.088E-07, 1.077E-06, 1.227E-06, 1.325E-06, 1.355E-06, 1.303E-06,
     $ 1.188E-06, 1.061E-06, 9.434E-07, 8.541E-07, 8.252E-07, 8.330E-07,
     $ 8.422E-07, 8.756E-07, 9.381E-07, 9.899E-07, 1.033E-06, 1.089E-06,
     $ 1.131E-06, 1.140E-06, 1.126E-06, 1.091E-06, 1.037E-06, 9.850E-07,
     $ 9.477E-07, 9.324E-07, 9.534E-07, 1.000E-06, 1.038E-06, 1.042E-06,
     $ 1.006E-06, 9.264E-07, 8.191E-07, 7.078E-07, 6.177E-07, 5.598E-07,
     $ 5.208E-07, 4.989E-07, 4.990E-07, 4.961E-07, 4.776E-07, 4.736E-07,
     $ 4.957E-07, 5.289E-07, 5.801E-07, 6.559E-07, 7.198E-07, 7.302E-07,
     $ 6.949E-07, 6.437E-07, 5.854E-07, 5.445E-07, 5.585E-07, 6.147E-07,
     $ 6.786E-07, 7.404E-07, 7.834E-07, 7.864E-07, 7.581E-07, 7.144E-07,
     $ 6.594E-07, 5.942E-07, 5.206E-07, 4.618E-07, 4.431E-07, 4.576E-07,
     $ 4.925E-07, 5.551E-07, 6.282E-07, 6.654E-07, 6.669E-07, 6.741E-07,
     $ 6.889E-07, 6.858E-07, 6.713E-07, 6.522E-07, 6.053E-07, 5.231E-07,
     $ 4.374E-07, 3.784E-07, 3.520E-07, 3.626E-07, 4.175E-07, 5.039E-07,
     $ 5.931E-07, 6.637E-07, 7.077E-07, 7.249E-07, 7.226E-07, 7.286E-07,
     $ 7.670E-07, 8.288E-07, 8.981E-07, 9.618E-07/
C                                                                       
C     31601 TO 31700 CM-1 DATA.                                         
      DATA (SUN(I),I= 31601, 31700)/                                    
     $ 9.860E-07, 9.577E-07, 9.027E-07, 8.324E-07, 7.527E-07, 6.811E-07,
     $ 6.151E-07, 5.435E-07, 4.790E-07, 4.440E-07, 4.519E-07, 4.956E-07,
     $ 5.528E-07, 6.006E-07, 6.092E-07, 5.629E-07, 4.878E-07, 4.179E-07,
     $ 3.632E-07, 3.317E-07, 3.300E-07, 3.451E-07, 3.602E-07, 3.740E-07,
     $ 3.840E-07, 3.817E-07, 3.777E-07, 3.877E-07, 4.134E-07, 4.625E-07,
     $ 5.344E-07, 5.951E-07, 6.282E-07, 6.499E-07, 6.550E-07, 6.363E-07,
     $ 6.138E-07, 5.884E-07, 5.393E-07, 4.758E-07, 4.176E-07, 3.671E-07,
     $ 3.271E-07, 2.982E-07, 2.714E-07, 2.453E-07, 2.255E-07, 2.201E-07,
     $ 2.454E-07, 3.078E-07, 3.924E-07, 4.786E-07, 5.475E-07, 5.776E-07,
     $ 5.612E-07, 5.147E-07, 4.606E-07, 4.104E-07, 3.786E-07, 3.738E-07,
     $ 3.763E-07, 3.717E-07, 3.708E-07, 3.706E-07, 3.655E-07, 3.787E-07,
     $ 4.186E-07, 4.698E-07, 5.209E-07, 5.607E-07, 5.943E-07, 6.346E-07,
     $ 6.693E-07, 6.967E-07, 7.248E-07, 7.225E-07, 6.816E-07, 6.493E-07,
     $ 6.485E-07, 6.762E-07, 7.432E-07, 8.399E-07, 9.294E-07, 9.899E-07,
     $ 1.025E-06, 1.031E-06, 9.880E-07, 9.012E-07, 8.061E-07, 7.099E-07,
     $ 6.163E-07, 5.646E-07, 5.688E-07, 6.088E-07, 6.964E-07, 8.468E-07,
     $ 1.033E-06, 1.211E-06, 1.339E-06, 1.378E-06/
C                                                                       
C     31701 TO 31800 CM-1 DATA.                                         
      DATA (SUN(I),I= 31701, 31800)/                                    
     $ 1.311E-06, 1.162E-06, 9.823E-07, 8.349E-07, 7.590E-07, 7.664E-07,
     $ 8.397E-07, 9.312E-07, 9.958E-07, 1.010E-06, 9.572E-07, 8.493E-07,
     $ 7.223E-07, 6.058E-07, 5.263E-07, 4.996E-07, 5.245E-07, 5.918E-07,
     $ 6.747E-07, 7.440E-07, 7.969E-07, 8.203E-07, 8.095E-07, 8.013E-07,
     $ 8.127E-07, 8.340E-07, 8.753E-07, 9.319E-07, 9.698E-07, 9.781E-07,
     $ 9.503E-07, 8.822E-07, 7.939E-07, 7.062E-07, 6.365E-07, 6.091E-07,
     $ 6.221E-07, 6.588E-07, 7.198E-07, 7.913E-07, 8.599E-07, 9.395E-07,
     $ 1.031E-06, 1.106E-06, 1.155E-06, 1.185E-06, 1.186E-06, 1.145E-06,
     $ 1.085E-06, 1.020E-06, 9.348E-07, 8.247E-07, 7.227E-07, 6.458E-07,
     $ 5.830E-07, 5.349E-07, 5.088E-07, 4.903E-07, 4.631E-07, 4.320E-07,
     $ 4.067E-07, 3.870E-07, 3.718E-07, 3.736E-07, 4.064E-07, 4.628E-07,
     $ 5.281E-07, 6.053E-07, 6.835E-07, 7.375E-07, 7.862E-07, 8.560E-07,
     $ 9.216E-07, 9.611E-07, 9.778E-07, 9.504E-07, 8.634E-07, 7.427E-07,
     $ 6.165E-07, 5.098E-07, 4.425E-07, 4.087E-07, 3.993E-07, 4.128E-07,
     $ 4.293E-07, 4.283E-07, 4.184E-07, 4.040E-07, 3.734E-07, 3.264E-07,
     $ 2.789E-07, 2.370E-07, 1.988E-07, 1.685E-07, 1.492E-07, 1.359E-07,
     $ 1.237E-07, 1.147E-07, 1.189E-07, 1.436E-07/
C                                                                       
C     31801 TO 31900 CM-1 DATA.                                         
      DATA (SUN(I),I= 31801, 31900)/                                    
     $ 1.872E-07, 2.504E-07, 3.273E-07, 3.955E-07, 4.480E-07, 4.933E-07,
     $ 5.244E-07, 5.400E-07, 5.614E-07, 5.967E-07, 6.263E-07, 6.423E-07,
     $ 6.605E-07, 6.813E-07, 6.934E-07, 7.186E-07, 7.775E-07, 8.489E-07,
     $ 9.150E-07, 9.710E-07, 9.935E-07, 9.749E-07, 9.417E-07, 9.154E-07,
     $ 8.986E-07, 8.927E-07, 9.061E-07, 9.270E-07, 9.180E-07, 8.755E-07,
     $ 8.313E-07, 7.808E-07, 7.104E-07, 6.517E-07, 6.223E-07, 5.964E-07,
     $ 5.687E-07, 5.651E-07, 6.011E-07, 6.688E-07, 7.557E-07, 8.449E-07,
     $ 9.056E-07, 9.109E-07, 8.703E-07, 8.218E-07, 7.951E-07, 7.949E-07,
     $ 8.136E-07, 8.465E-07, 8.831E-07, 9.152E-07, 9.523E-07, 1.002E-06,
     $ 1.047E-06, 1.072E-06, 1.072E-06, 1.055E-06, 1.032E-06, 1.009E-06,
     $ 9.927E-07, 9.951E-07, 1.006E-06, 9.988E-07, 9.724E-07, 9.288E-07,
     $ 8.391E-07, 7.035E-07, 5.734E-07, 4.823E-07, 4.323E-07, 4.399E-07,
     $ 5.072E-07, 5.948E-07, 6.675E-07, 7.171E-07, 7.474E-07, 7.732E-07,
     $ 8.028E-07, 8.270E-07, 8.535E-07, 8.879E-07, 9.099E-07, 9.132E-07,
     $ 9.140E-07, 9.116E-07, 8.868E-07, 8.344E-07, 7.641E-07, 6.835E-07,
     $ 5.879E-07, 4.890E-07, 4.067E-07, 3.359E-07, 2.753E-07, 2.471E-07,
     $ 2.666E-07, 3.376E-07, 4.604E-07, 6.133E-07/
C                                                                       
C     31901 TO 32000 CM-1 DATA.                                         
      DATA (SUN(I),I= 31901, 32000)/                                    
     $ 7.544E-07, 8.416E-07, 8.543E-07, 8.094E-07, 7.438E-07, 6.917E-07,
     $ 6.875E-07, 7.387E-07, 8.066E-07, 8.533E-07, 8.726E-07, 8.502E-07,
     $ 7.765E-07, 6.866E-07, 6.129E-07, 5.625E-07, 5.511E-07, 5.817E-07,
     $ 6.324E-07, 6.843E-07, 7.151E-07, 7.179E-07, 7.230E-07, 7.460E-07,
     $ 7.706E-07, 7.851E-07, 7.763E-07, 7.266E-07, 6.393E-07, 5.464E-07,
     $ 4.830E-07, 4.505E-07, 4.328E-07, 4.349E-07, 4.607E-07, 5.005E-07,
     $ 5.649E-07, 6.688E-07, 7.928E-07, 9.074E-07, 9.988E-07, 1.051E-06,
     $ 1.053E-06, 1.015E-06, 9.559E-07, 8.851E-07, 8.196E-07, 7.682E-07,
     $ 7.141E-07, 6.480E-07, 5.815E-07, 5.195E-07, 4.731E-07, 4.683E-07,
     $ 5.097E-07, 5.869E-07, 6.827E-07, 7.598E-07, 7.898E-07, 7.813E-07,
     $ 7.488E-07, 7.112E-07, 7.066E-07, 7.577E-07, 8.448E-07, 9.361E-07,
     $ 1.015E-06, 1.068E-06, 1.076E-06, 1.037E-06, 9.723E-07, 8.966E-07,
     $ 8.154E-07, 7.390E-07, 6.861E-07, 6.622E-07, 6.548E-07, 6.615E-07,
     $ 6.845E-07, 7.044E-07, 7.048E-07, 6.925E-07, 6.628E-07, 6.198E-07,
     $ 5.884E-07, 5.626E-07, 5.243E-07, 4.907E-07, 4.748E-07, 4.690E-07,
     $ 4.918E-07, 5.684E-07, 6.895E-07, 8.276E-07, 9.584E-07, 1.060E-06,
     $ 1.113E-06, 1.102E-06, 1.040E-06, 9.555E-07/
C                                                                       
C     32001 TO 32100 CM-1 DATA.                                         
      DATA (SUN(I),I= 32001, 32100)/                                    
     $ 8.763E-07, 8.086E-07, 7.471E-07, 6.850E-07, 6.210E-07, 5.603E-07,
     $ 5.142E-07, 5.027E-07, 5.399E-07, 6.026E-07, 6.472E-07, 6.606E-07,
     $ 6.436E-07, 5.793E-07, 4.871E-07, 4.219E-07, 3.945E-07, 3.890E-07,
     $ 4.144E-07, 4.595E-07, 4.843E-07, 4.850E-07, 4.860E-07, 5.008E-07,
     $ 5.349E-07, 5.884E-07, 6.599E-07, 7.417E-07, 8.113E-07, 8.607E-07,
     $ 9.103E-07, 9.496E-07, 9.389E-07, 8.728E-07, 7.709E-07, 6.437E-07,
     $ 5.146E-07, 4.313E-07, 4.168E-07, 4.430E-07, 4.725E-07, 4.862E-07,
     $ 4.664E-07, 4.157E-07, 3.699E-07, 3.537E-07, 3.755E-07, 4.351E-07,
     $ 5.008E-07, 5.386E-07, 5.448E-07, 5.154E-07, 4.521E-07, 3.823E-07,
     $ 3.312E-07, 3.082E-07, 3.240E-07, 3.850E-07, 4.780E-07, 5.717E-07,
     $ 6.353E-07, 6.572E-07, 6.450E-07, 6.251E-07, 6.271E-07, 6.629E-07,
     $ 7.224E-07, 7.743E-07, 7.810E-07, 7.406E-07, 6.814E-07, 6.104E-07,
     $ 5.357E-07, 4.932E-07, 4.932E-07, 5.172E-07, 5.770E-07, 6.911E-07,
     $ 8.325E-07, 9.583E-07, 1.052E-06, 1.108E-06, 1.112E-06, 1.061E-06,
     $ 9.797E-07, 8.969E-07, 8.288E-07, 7.795E-07, 7.544E-07, 7.610E-07,
     $ 7.766E-07, 7.612E-07, 7.218E-07, 6.957E-07, 6.788E-07, 6.641E-07,
     $ 6.780E-07, 7.046E-07, 6.950E-07, 6.665E-07/
C                                                                       
C     32101 TO 32200 CM-1 DATA.                                         
      DATA (SUN(I),I= 32101, 32200)/                                    
     $ 6.648E-07, 6.888E-07, 7.359E-07, 8.073E-07, 8.585E-07, 8.496E-07,
     $ 7.989E-07, 7.431E-07, 7.101E-07, 7.309E-07, 8.139E-07, 9.263E-07,
     $ 1.037E-06, 1.138E-06, 1.222E-06, 1.280E-06, 1.307E-06, 1.286E-06,
     $ 1.204E-06, 1.068E-06, 9.025E-07, 7.378E-07, 6.129E-07, 5.582E-07,
     $ 5.794E-07, 6.553E-07, 7.599E-07, 8.660E-07, 9.356E-07, 9.470E-07,
     $ 9.109E-07, 8.468E-07, 7.746E-07, 7.153E-07, 6.726E-07, 6.445E-07,
     $ 6.387E-07, 6.505E-07, 6.647E-07, 6.791E-07, 6.940E-07, 6.969E-07,
     $ 6.991E-07, 7.356E-07, 8.110E-07, 9.015E-07, 9.853E-07, 1.038E-06,
     $ 1.040E-06, 1.009E-06, 9.761E-07, 9.678E-07, 9.962E-07, 1.041E-06,
     $ 1.068E-06, 1.061E-06, 1.027E-06, 9.643E-07, 8.844E-07, 8.332E-07,
     $ 8.302E-07, 8.496E-07, 8.827E-07, 9.294E-07, 9.523E-07, 9.244E-07,
     $ 8.604E-07, 7.812E-07, 7.082E-07, 6.720E-07, 6.887E-07, 7.464E-07,
     $ 8.206E-07, 8.907E-07, 9.364E-07, 9.398E-07, 9.164E-07, 8.986E-07,
     $ 8.771E-07, 8.360E-07, 7.994E-07, 7.676E-07, 7.161E-07, 6.727E-07,
     $ 6.632E-07, 6.607E-07, 6.530E-07, 6.404E-07, 6.065E-07, 5.564E-07,
     $ 5.119E-07, 4.891E-07, 5.024E-07, 5.423E-07, 5.939E-07, 6.594E-07,
     $ 7.194E-07, 7.559E-07, 7.786E-07, 7.844E-07/
C                                                                       
C     32201 TO 32300 CM-1 DATA.                                         
      DATA (SUN(I),I= 32201, 32300)/                                    
     $ 7.746E-07, 7.722E-07, 7.710E-07, 7.541E-07, 7.296E-07, 6.982E-07,
     $ 6.594E-07, 6.311E-07, 6.252E-07, 6.394E-07, 6.643E-07, 6.858E-07,
     $ 7.017E-07, 7.318E-07, 7.900E-07, 8.615E-07, 9.249E-07, 9.790E-07,
     $ 1.008E-06, 9.738E-07, 8.823E-07, 7.697E-07, 6.400E-07, 4.969E-07,
     $ 3.768E-07, 2.972E-07, 2.425E-07, 2.019E-07, 1.753E-07, 1.636E-07,
     $ 1.630E-07, 1.776E-07, 2.198E-07, 2.810E-07, 3.336E-07, 3.651E-07,
     $ 3.692E-07, 3.359E-07, 2.791E-07, 2.243E-07, 1.789E-07, 1.475E-07,
     $ 1.361E-07, 1.326E-07, 1.237E-07, 1.144E-07, 1.113E-07, 1.141E-07,
     $ 1.256E-07, 1.502E-07, 1.820E-07, 2.100E-07, 2.285E-07, 2.392E-07,
     $ 2.530E-07, 2.845E-07, 3.358E-07, 4.015E-07, 4.750E-07, 5.348E-07,
     $ 5.626E-07, 5.678E-07, 5.628E-07, 5.500E-07, 5.465E-07, 5.678E-07,
     $ 6.072E-07, 6.667E-07, 7.507E-07, 8.320E-07, 8.763E-07, 8.756E-07,
     $ 8.266E-07, 7.279E-07, 6.041E-07, 4.849E-07, 3.753E-07, 2.790E-07,
     $ 2.135E-07, 1.847E-07, 1.878E-07, 2.198E-07, 2.728E-07, 3.261E-07,
     $ 3.603E-07, 3.801E-07, 4.035E-07, 4.381E-07, 4.873E-07, 5.667E-07,
     $ 6.610E-07, 7.430E-07, 7.860E-07, 7.942E-07, 7.702E-07, 7.262E-07,
     $ 6.741E-07, 6.578E-07, 6.803E-07, 6.997E-07/
C                                                                       
C     32301 TO 32400 CM-1 DATA.                                         
      DATA (SUN(I),I= 32301, 32400)/                                    
     $ 7.191E-07, 7.503E-07, 7.579E-07, 7.145E-07, 6.710E-07, 6.274E-07,
     $ 5.716E-07, 5.157E-07, 4.859E-07, 4.692E-07, 4.510E-07, 4.321E-07,
     $ 4.269E-07, 4.246E-07, 4.137E-07, 3.929E-07, 3.643E-07, 3.157E-07,
     $ 2.593E-07, 1.960E-07, 1.477E-07, 1.216E-07, 1.197E-07, 1.343E-07,
     $ 1.850E-07, 2.636E-07, 3.517E-07, 4.470E-07, 5.484E-07, 6.214E-07,
     $ 6.546E-07, 6.532E-07, 6.117E-07, 5.400E-07, 4.629E-07, 3.925E-07,
     $ 3.388E-07, 3.066E-07, 2.892E-07, 2.864E-07, 3.016E-07, 3.426E-07,
     $ 4.146E-07, 4.945E-07, 5.678E-07, 6.199E-07, 6.308E-07, 6.122E-07,
     $ 6.031E-07, 6.016E-07, 6.004E-07, 6.108E-07, 5.985E-07, 5.466E-07,
     $ 4.843E-07, 4.481E-07, 4.470E-07, 4.948E-07, 5.775E-07, 6.767E-07,
     $ 7.583E-07, 7.858E-07, 7.761E-07, 7.586E-07, 7.383E-07, 7.085E-07,
     $ 7.062E-07, 7.008E-07, 6.623E-07, 5.829E-07, 5.051E-07, 4.221E-07,
     $ 3.649E-07, 3.619E-07, 4.044E-07, 4.572E-07, 5.170E-07, 5.754E-07,
     $ 5.948E-07, 6.006E-07, 6.163E-07, 6.178E-07, 5.938E-07, 5.863E-07,
     $ 5.746E-07, 5.406E-07, 5.304E-07, 5.438E-07, 5.646E-07, 6.105E-07,
     $ 6.882E-07, 7.621E-07, 8.306E-07, 8.779E-07, 9.052E-07, 9.063E-07,
     $ 8.742E-07, 8.275E-07, 7.861E-07, 7.401E-07/
C                                                                       
C     32401 TO 32500 CM-1 DATA.                                         
      DATA (SUN(I),I= 32401, 32500)/                                    
     $ 6.909E-07, 6.708E-07, 6.839E-07, 7.286E-07, 7.847E-07, 8.566E-07,
     $ 9.277E-07, 9.753E-07, 9.886E-07, 9.859E-07, 9.613E-07, 9.199E-07,
     $ 8.547E-07, 7.648E-07, 6.569E-07, 5.496E-07, 4.496E-07, 3.841E-07,
     $ 3.598E-07, 3.645E-07, 3.864E-07, 4.139E-07, 4.453E-07, 4.869E-07,
     $ 5.465E-07, 5.986E-07, 6.483E-07, 6.764E-07, 6.757E-07, 6.321E-07,
     $ 5.798E-07, 5.137E-07, 4.496E-07, 3.936E-07, 3.626E-07, 3.494E-07,
     $ 3.531E-07, 3.649E-07, 3.850E-07, 4.021E-07, 4.302E-07, 4.813E-07,
     $ 5.338E-07, 5.818E-07, 6.303E-07, 6.484E-07, 6.314E-07, 6.252E-07,
     $ 6.200E-07, 6.314E-07, 6.697E-07, 7.093E-07, 7.141E-07, 7.032E-07,
     $ 6.776E-07, 6.508E-07, 6.373E-07, 6.541E-07, 7.051E-07, 7.440E-07,
     $ 7.635E-07, 7.934E-07, 8.303E-07, 8.477E-07, 8.754E-07, 8.966E-07,
     $ 8.690E-07, 7.875E-07, 6.752E-07, 5.428E-07, 4.201E-07, 3.451E-07,
     $ 3.306E-07, 3.484E-07, 4.024E-07, 4.712E-07, 5.219E-07, 5.358E-07,
     $ 5.513E-07, 5.626E-07, 5.758E-07, 6.063E-07, 6.511E-07, 6.999E-07,
     $ 7.228E-07, 7.227E-07, 6.985E-07, 6.880E-07, 6.828E-07, 7.071E-07,
     $ 7.407E-07, 7.940E-07, 8.343E-07, 8.560E-07, 8.506E-07, 8.308E-07,
     $ 7.774E-07, 6.991E-07, 5.943E-07, 4.790E-07/
C                                                                       
C     32501 TO 32600 CM-1 DATA.                                         
      DATA (SUN(I),I= 32501, 32600)/                                    
     $ 3.756E-07, 2.980E-07, 2.460E-07, 2.252E-07, 2.267E-07, 2.405E-07,
     $ 2.720E-07, 3.295E-07, 4.214E-07, 5.331E-07, 6.509E-07, 7.492E-07,
     $ 7.993E-07, 8.021E-07, 7.773E-07, 7.119E-07, 6.286E-07, 5.748E-07,
     $ 5.343E-07, 5.127E-07, 5.365E-07, 6.043E-07, 6.792E-07, 7.664E-07,
     $ 8.376E-07, 8.765E-07, 8.622E-07, 7.979E-07, 6.947E-07, 5.950E-07,
     $ 5.248E-07, 5.057E-07, 5.399E-07, 6.057E-07, 6.510E-07, 6.535E-07,
     $ 6.020E-07, 5.126E-07, 4.127E-07, 3.585E-07, 3.500E-07, 3.907E-07,
     $ 4.753E-07, 5.858E-07, 6.717E-07, 7.297E-07, 7.541E-07, 7.432E-07,
     $ 7.106E-07, 6.806E-07, 6.677E-07, 6.820E-07, 7.156E-07, 7.428E-07,
     $ 7.498E-07, 7.341E-07, 6.939E-07, 6.445E-07, 6.085E-07, 6.018E-07,
     $ 6.142E-07, 6.663E-07, 7.154E-07, 7.562E-07, 7.805E-07, 7.894E-07,
     $ 7.508E-07, 7.170E-07, 6.843E-07, 6.711E-07, 6.846E-07, 7.205E-07,
     $ 7.386E-07, 7.410E-07, 7.111E-07, 6.549E-07, 6.014E-07, 5.650E-07,
     $ 5.431E-07, 5.447E-07, 5.518E-07, 5.418E-07, 5.328E-07, 5.281E-07,
     $ 5.032E-07, 4.784E-07, 4.556E-07, 4.184E-07, 3.672E-07, 3.186E-07,
     $ 2.673E-07, 2.347E-07, 2.345E-07, 2.709E-07, 3.390E-07, 4.239E-07,
     $ 4.867E-07, 5.086E-07, 4.829E-07, 4.186E-07/
C                                                                       
C     32601 TO 32700 CM-1 DATA.                                         
      DATA (SUN(I),I= 32601, 32700)/                                    
     $ 3.401E-07, 2.806E-07, 2.680E-07, 3.087E-07, 3.972E-07, 5.077E-07,
     $ 6.347E-07, 7.379E-07, 7.972E-07, 8.201E-07, 8.167E-07, 7.714E-07,
     $ 7.055E-07, 6.482E-07, 5.887E-07, 5.220E-07, 4.705E-07, 4.479E-07,
     $ 4.338E-07, 4.225E-07, 4.287E-07, 4.487E-07, 4.454E-07, 4.326E-07,
     $ 4.306E-07, 4.302E-07, 4.226E-07, 4.272E-07, 4.453E-07, 4.701E-07,
     $ 4.933E-07, 5.067E-07, 5.399E-07, 5.796E-07, 5.959E-07, 6.204E-07,
     $ 6.661E-07, 6.984E-07, 7.157E-07, 7.639E-07, 7.999E-07, 8.000E-07,
     $ 7.712E-07, 7.397E-07, 6.804E-07, 6.170E-07, 5.920E-07, 6.062E-07,
     $ 6.218E-07, 6.525E-07, 7.060E-07, 7.560E-07, 7.939E-07, 8.353E-07,
     $ 8.516E-07, 8.472E-07, 8.099E-07, 7.534E-07, 6.805E-07, 6.211E-07,
     $ 5.552E-07, 5.106E-07, 4.876E-07, 4.936E-07, 5.116E-07, 5.459E-07,
     $ 5.843E-07, 6.026E-07, 5.963E-07, 5.800E-07, 5.439E-07, 4.847E-07,
     $ 4.330E-07, 3.796E-07, 3.142E-07, 2.575E-07, 2.155E-07, 1.820E-07,
     $ 1.680E-07, 1.817E-07, 2.122E-07, 2.547E-07, 2.989E-07, 3.483E-07,
     $ 3.901E-07, 4.138E-07, 4.222E-07, 4.231E-07, 3.960E-07, 3.488E-07,
     $ 3.037E-07, 2.589E-07, 2.072E-07, 1.690E-07, 1.482E-07, 1.389E-07,
     $ 1.484E-07, 1.883E-07, 2.510E-07, 3.165E-07/
C                                                                       
C     32701 TO 32800 CM-1 DATA.                                         
      DATA (SUN(I),I= 32701, 32800)/                                    
     $ 3.807E-07, 4.377E-07, 4.783E-07, 5.064E-07, 5.352E-07, 5.616E-07,
     $ 5.880E-07, 6.143E-07, 6.391E-07, 6.753E-07, 7.191E-07, 7.468E-07,
     $ 7.714E-07, 7.841E-07, 7.644E-07, 7.164E-07, 6.757E-07, 6.231E-07,
     $ 5.757E-07, 5.464E-07, 5.498E-07, 5.650E-07, 5.897E-07, 6.087E-07,
     $ 6.207E-07, 6.032E-07, 5.600E-07, 5.126E-07, 4.686E-07, 4.338E-07,
     $ 4.225E-07, 4.351E-07, 4.547E-07, 4.710E-07, 4.825E-07, 4.833E-07,
     $ 4.772E-07, 4.849E-07, 5.178E-07, 5.448E-07, 5.804E-07, 6.389E-07,
     $ 6.893E-07, 7.230E-07, 7.790E-07, 8.361E-07, 8.651E-07, 8.890E-07,
     $ 9.039E-07, 8.921E-07, 8.796E-07, 8.858E-07, 8.938E-07, 9.142E-07,
     $ 9.519E-07, 9.849E-07, 9.998E-07, 9.964E-07, 9.832E-07, 9.564E-07,
     $ 9.126E-07, 8.510E-07, 7.856E-07, 6.955E-07, 5.817E-07, 4.644E-07,
     $ 3.686E-07, 3.023E-07, 2.867E-07, 3.254E-07, 4.021E-07, 4.791E-07,
     $ 5.494E-07, 6.086E-07, 6.509E-07, 6.831E-07, 7.388E-07, 7.902E-07,
     $ 8.253E-07, 8.350E-07, 8.300E-07, 7.975E-07, 7.720E-07, 7.435E-07,
     $ 7.278E-07, 7.007E-07, 6.711E-07, 6.301E-07, 5.963E-07, 5.653E-07,
     $ 5.540E-07, 5.409E-07, 5.223E-07, 5.001E-07, 4.798E-07, 4.446E-07,
     $ 4.061E-07, 3.623E-07, 3.107E-07, 2.504E-07/
C                                                                       
C     32801 TO 32900 CM-1 DATA.                                         
      DATA (SUN(I),I= 32801, 32900)/                                    
     $ 1.998E-07, 1.669E-07, 1.599E-07, 1.787E-07, 2.122E-07, 2.535E-07,
     $ 2.983E-07, 3.374E-07, 3.625E-07, 3.980E-07, 4.481E-07, 5.086E-07,
     $ 5.797E-07, 6.769E-07, 7.640E-07, 8.261E-07, 8.632E-07, 8.763E-07,
     $ 8.498E-07, 8.038E-07, 7.575E-07, 7.169E-07, 6.937E-07, 6.999E-07,
     $ 7.249E-07, 7.377E-07, 7.268E-07, 6.924E-07, 6.339E-07, 5.786E-07,
     $ 5.583E-07, 5.772E-07, 6.269E-07, 6.922E-07, 7.351E-07, 7.575E-07,
     $ 7.562E-07, 7.141E-07, 6.517E-07, 6.062E-07, 5.767E-07, 5.726E-07,
     $ 6.036E-07, 6.597E-07, 7.149E-07, 7.541E-07, 7.696E-07, 7.807E-07,
     $ 7.808E-07, 7.603E-07, 7.148E-07, 6.544E-07, 5.658E-07, 4.617E-07,
     $ 3.897E-07, 3.583E-07, 3.671E-07, 3.994E-07, 4.393E-07, 4.479E-07,
     $ 4.302E-07, 3.745E-07, 3.114E-07, 2.706E-07, 2.562E-07, 2.754E-07,
     $ 3.421E-07, 4.391E-07, 5.267E-07, 5.962E-07, 6.251E-07, 6.079E-07,
     $ 5.596E-07, 4.977E-07, 4.420E-07, 4.035E-07, 3.821E-07, 3.694E-07,
     $ 3.842E-07, 4.277E-07, 5.048E-07, 6.014E-07, 6.836E-07, 7.314E-07,
     $ 7.315E-07, 6.945E-07, 6.350E-07, 5.910E-07, 5.762E-07, 5.966E-07,
     $ 6.091E-07, 6.213E-07, 6.410E-07, 6.344E-07, 6.153E-07, 6.216E-07,
     $ 6.307E-07, 6.249E-07, 6.283E-07, 6.212E-07/
C                                                                       
C     32901 TO 33000 CM-1 DATA.                                         
      DATA (SUN(I),I= 32901, 33000)/                                    
     $ 5.908E-07, 5.461E-07, 4.821E-07, 4.126E-07, 3.405E-07, 2.745E-07,
     $ 2.228E-07, 1.951E-07, 1.728E-07, 1.597E-07, 1.507E-07, 1.436E-07,
     $ 1.411E-07, 1.588E-07, 1.972E-07, 2.521E-07, 3.284E-07, 4.197E-07,
     $ 5.036E-07, 5.727E-07, 6.355E-07, 6.752E-07, 6.916E-07, 7.064E-07,
     $ 7.260E-07, 7.333E-07, 7.279E-07, 7.276E-07, 7.209E-07, 7.069E-07,
     $ 6.959E-07, 7.138E-07, 7.303E-07, 7.488E-07, 7.653E-07, 7.875E-07,
     $ 7.969E-07, 8.042E-07, 7.928E-07, 7.606E-07, 7.025E-07, 6.381E-07,
     $ 5.798E-07, 5.317E-07, 5.208E-07, 5.533E-07, 5.959E-07, 6.194E-07,
     $ 6.631E-07, 6.972E-07, 7.026E-07, 6.847E-07, 6.844E-07, 6.768E-07,
     $ 6.707E-07, 6.652E-07, 6.885E-07, 7.018E-07, 6.983E-07, 6.893E-07,
     $ 7.044E-07, 7.195E-07, 7.532E-07, 8.042E-07, 8.536E-07, 8.838E-07,
     $ 9.019E-07, 9.100E-07, 8.886E-07, 8.425E-07, 7.672E-07, 6.612E-07,
     $ 5.332E-07, 4.258E-07, 3.396E-07, 2.823E-07, 2.617E-07, 2.670E-07,
     $ 2.770E-07, 3.040E-07, 3.538E-07, 4.182E-07, 4.832E-07, 5.582E-07,
     $ 6.326E-07, 6.803E-07, 6.857E-07, 6.685E-07, 6.244E-07, 5.556E-07,
     $ 4.953E-07, 4.662E-07, 4.685E-07, 4.963E-07, 5.460E-07, 5.874E-07,
     $ 6.132E-07, 6.095E-07, 5.784E-07, 5.237E-07/
C                                                                       
C     33001 TO 33100 CM-1 DATA.                                         
      DATA (SUN(I),I= 33001, 33100)/                                    
     $ 4.741E-07, 4.483E-07, 4.610E-07, 5.004E-07, 5.681E-07, 6.444E-07,
     $ 7.112E-07, 7.532E-07, 7.851E-07, 7.882E-07, 7.675E-07, 7.335E-07,
     $ 7.034E-07, 6.729E-07, 6.679E-07, 6.924E-07, 7.299E-07, 7.658E-07,
     $ 8.087E-07, 8.480E-07, 8.707E-07, 8.713E-07, 8.566E-07, 8.185E-07,
     $ 7.607E-07, 6.830E-07, 6.062E-07, 5.240E-07, 4.450E-07, 3.702E-07,
     $ 3.204E-07, 2.887E-07, 2.781E-07, 2.740E-07, 2.662E-07, 2.450E-07,
     $ 2.124E-07, 1.821E-07, 1.709E-07, 1.846E-07, 2.176E-07, 2.776E-07,
     $ 3.453E-07, 4.005E-07, 4.501E-07, 4.945E-07, 5.207E-07, 5.360E-07,
     $ 5.594E-07, 5.744E-07, 5.764E-07, 5.660E-07, 5.399E-07, 4.836E-07,
     $ 4.139E-07, 3.565E-07, 3.182E-07, 3.052E-07, 3.359E-07, 4.026E-07,
     $ 4.793E-07, 5.558E-07, 6.275E-07, 6.757E-07, 6.941E-07, 7.003E-07,
     $ 6.968E-07, 6.772E-07, 6.526E-07, 6.322E-07, 6.049E-07, 5.719E-07,
     $ 5.445E-07, 5.198E-07, 5.016E-07, 4.857E-07, 4.746E-07, 4.665E-07,
     $ 4.578E-07, 4.376E-07, 4.066E-07, 3.670E-07, 3.204E-07, 2.699E-07,
     $ 2.221E-07, 1.849E-07, 1.549E-07, 1.301E-07, 1.113E-07, 9.751E-08,
     $ 8.663E-08, 7.909E-08, 7.290E-08, 6.909E-08, 6.951E-08, 7.626E-08,
     $ 8.959E-08, 1.083E-07, 1.295E-07, 1.529E-07/
C                                                                       
C     33101 TO 33200 CM-1 DATA.                                         
      DATA (SUN(I),I= 33101, 33200)/                                    
     $ 1.778E-07, 2.060E-07, 2.428E-07, 2.863E-07, 3.289E-07, 3.584E-07,
     $ 3.698E-07, 3.552E-07, 3.171E-07, 2.655E-07, 2.183E-07, 1.869E-07,
     $ 1.817E-07, 2.024E-07, 2.375E-07, 2.882E-07, 3.394E-07, 3.777E-07,
     $ 4.032E-07, 4.305E-07, 4.374E-07, 4.287E-07, 4.129E-07, 3.887E-07,
     $ 3.418E-07, 2.930E-07, 2.511E-07, 2.207E-07, 2.026E-07, 2.159E-07,
     $ 2.593E-07, 3.246E-07, 3.868E-07, 4.502E-07, 5.040E-07, 5.383E-07,
     $ 5.455E-07, 5.582E-07, 5.735E-07, 5.666E-07, 5.351E-07, 5.041E-07,
     $ 4.535E-07, 3.948E-07, 3.698E-07, 3.854E-07, 4.221E-07, 4.794E-07,
     $ 5.447E-07, 5.925E-07, 6.111E-07, 6.039E-07, 5.944E-07, 5.669E-07,
     $ 5.187E-07, 4.706E-07, 4.314E-07, 3.867E-07, 3.679E-07, 3.906E-07,
     $ 4.408E-07, 5.009E-07, 5.479E-07, 5.714E-07, 5.742E-07, 5.636E-07,
     $ 5.413E-07, 5.292E-07, 5.193E-07, 4.996E-07, 4.721E-07, 4.534E-07,
     $ 4.574E-07, 4.814E-07, 5.106E-07, 5.336E-07, 5.481E-07, 5.446E-07,
     $ 5.322E-07, 5.425E-07, 5.753E-07, 6.056E-07, 6.245E-07, 6.272E-07,
     $ 5.939E-07, 5.293E-07, 4.615E-07, 3.898E-07, 3.221E-07, 2.722E-07,
     $ 2.530E-07, 2.549E-07, 2.741E-07, 3.038E-07, 3.405E-07, 3.707E-07,
     $ 4.024E-07, 4.510E-07, 5.086E-07, 5.690E-07/
C                                                                       
C     33201 TO 33300 CM-1 DATA.                                         
      DATA (SUN(I),I= 33201, 33300)/                                    
     $ 6.303E-07, 6.759E-07, 6.992E-07, 7.069E-07, 7.032E-07, 6.871E-07,
     $ 6.654E-07, 6.398E-07, 6.149E-07, 5.824E-07, 5.483E-07, 5.140E-07,
     $ 4.668E-07, 4.063E-07, 3.469E-07, 2.962E-07, 2.583E-07, 2.455E-07,
     $ 2.561E-07, 2.861E-07, 3.237E-07, 3.640E-07, 4.030E-07, 4.358E-07,
     $ 4.462E-07, 4.350E-07, 4.049E-07, 3.591E-07, 3.007E-07, 2.468E-07,
     $ 2.048E-07, 1.799E-07, 1.752E-07, 1.949E-07, 2.343E-07, 2.838E-07,
     $ 3.300E-07, 3.582E-07, 3.643E-07, 3.455E-07, 3.190E-07, 2.964E-07,
     $ 2.877E-07, 2.959E-07, 3.242E-07, 3.466E-07, 3.564E-07, 3.664E-07,
     $ 3.745E-07, 3.786E-07, 3.966E-07, 4.303E-07, 4.582E-07, 4.838E-07,
     $ 5.021E-07, 5.098E-07, 5.111E-07, 5.193E-07, 5.257E-07, 5.333E-07,
     $ 5.427E-07, 5.486E-07, 5.356E-07, 5.172E-07, 5.109E-07, 5.126E-07,
     $ 5.149E-07, 5.355E-07, 5.652E-07, 5.832E-07, 5.891E-07, 5.914E-07,
     $ 5.862E-07, 5.688E-07, 5.436E-07, 5.092E-07, 4.692E-07, 4.186E-07,
     $ 3.608E-07, 3.011E-07, 2.565E-07, 2.271E-07, 2.209E-07, 2.380E-07,
     $ 2.638E-07, 2.832E-07, 2.921E-07, 2.819E-07, 2.549E-07, 2.283E-07,
     $ 2.020E-07, 1.747E-07, 1.532E-07, 1.460E-07, 1.510E-07, 1.738E-07,
     $ 2.139E-07, 2.647E-07, 3.119E-07, 3.488E-07/
C                                                                       
C     33301 TO 33400 CM-1 DATA.                                         
      DATA (SUN(I),I= 33301, 33400)/                                    
     $ 3.735E-07, 3.885E-07, 3.927E-07, 3.918E-07, 3.830E-07, 3.615E-07,
     $ 3.257E-07, 2.793E-07, 2.260E-07, 1.780E-07, 1.430E-07, 1.232E-07,
     $ 1.197E-07, 1.293E-07, 1.458E-07, 1.681E-07, 1.977E-07, 2.321E-07,
     $ 2.707E-07, 3.086E-07, 3.390E-07, 3.527E-07, 3.489E-07, 3.254E-07,
     $ 2.878E-07, 2.424E-07, 2.020E-07, 1.744E-07, 1.710E-07, 1.862E-07,
     $ 2.152E-07, 2.472E-07, 2.840E-07, 3.190E-07, 3.579E-07, 4.015E-07,
     $ 4.568E-07, 5.095E-07, 5.506E-07, 5.759E-07, 5.919E-07, 5.918E-07,
     $ 5.869E-07, 5.869E-07, 5.970E-07, 6.152E-07, 6.467E-07, 6.776E-07,
     $ 6.894E-07, 6.832E-07, 6.646E-07, 6.356E-07, 6.102E-07, 6.102E-07,
     $ 6.270E-07, 6.425E-07, 6.400E-07, 6.220E-07, 5.841E-07, 5.365E-07,
     $ 4.992E-07, 4.954E-07, 5.058E-07, 5.266E-07, 5.545E-07, 5.693E-07,
     $ 5.653E-07, 5.614E-07, 5.591E-07, 5.474E-07, 5.430E-07, 5.316E-07,
     $ 5.051E-07, 4.682E-07, 4.339E-07, 3.887E-07, 3.482E-07, 3.166E-07,
     $ 2.902E-07, 2.584E-07, 2.301E-07, 1.987E-07, 1.676E-07, 1.387E-07,
     $ 1.219E-07, 1.210E-07, 1.405E-07, 1.718E-07, 2.105E-07, 2.590E-07,
     $ 3.112E-07, 3.595E-07, 4.055E-07, 4.498E-07, 4.818E-07, 5.057E-07,
     $ 5.218E-07, 5.377E-07, 5.584E-07, 5.824E-07/
C                                                                       
C     33401 TO 33500 CM-1 DATA.                                         
      DATA (SUN(I),I= 33401, 33500)/                                    
     $ 5.929E-07, 5.869E-07, 5.619E-07, 5.090E-07, 4.449E-07, 4.034E-07,
     $ 3.991E-07, 4.221E-07, 4.770E-07, 5.322E-07, 5.562E-07, 5.455E-07,
     $ 5.068E-07, 4.566E-07, 4.307E-07, 4.408E-07, 4.763E-07, 5.312E-07,
     $ 5.721E-07, 5.962E-07, 5.968E-07, 5.914E-07, 5.943E-07, 6.215E-07,
     $ 6.463E-07, 6.660E-07, 6.646E-07, 6.455E-07, 6.180E-07, 5.972E-07,
     $ 6.068E-07, 6.495E-07, 6.954E-07, 7.222E-07, 7.248E-07, 7.006E-07,
     $ 6.551E-07, 6.076E-07, 5.723E-07, 5.600E-07, 5.528E-07, 5.365E-07,
     $ 5.123E-07, 4.906E-07, 4.665E-07, 4.360E-07, 4.211E-07, 4.211E-07,
     $ 4.339E-07, 4.623E-07, 5.074E-07, 5.464E-07, 5.738E-07, 5.763E-07,
     $ 5.454E-07, 4.916E-07, 4.288E-07, 3.683E-07, 3.135E-07, 2.685E-07,
     $ 2.336E-07, 2.125E-07, 2.016E-07, 2.028E-07, 2.309E-07, 2.885E-07,
     $ 3.666E-07, 4.391E-07, 5.009E-07, 5.236E-07, 5.075E-07, 4.578E-07,
     $ 4.189E-07, 3.883E-07, 3.809E-07, 3.816E-07, 3.858E-07, 3.692E-07,
     $ 3.429E-07, 3.072E-07, 2.730E-07, 2.486E-07, 2.325E-07, 2.287E-07,
     $ 2.422E-07, 2.664E-07, 2.856E-07, 2.997E-07, 2.949E-07, 2.699E-07,
     $ 2.368E-07, 2.134E-07, 2.109E-07, 2.331E-07, 2.698E-07, 3.041E-07,
     $ 3.278E-07, 3.312E-07, 3.148E-07, 2.839E-07/
C                                                                       
C     33501 TO 33600 CM-1 DATA.                                         
      DATA (SUN(I),I= 33501, 33600)/                                    
     $ 2.554E-07, 2.242E-07, 1.906E-07, 1.607E-07, 1.398E-07, 1.258E-07,
     $ 1.283E-07, 1.530E-07, 1.935E-07, 2.464E-07, 3.037E-07, 3.595E-07,
     $ 4.089E-07, 4.535E-07, 4.820E-07, 4.976E-07, 4.984E-07, 4.870E-07,
     $ 4.606E-07, 4.314E-07, 3.987E-07, 3.671E-07, 3.310E-07, 2.927E-07,
     $ 2.560E-07, 2.205E-07, 1.891E-07, 1.692E-07, 1.709E-07, 1.940E-07,
     $ 2.356E-07, 2.881E-07, 3.463E-07, 3.917E-07, 4.179E-07, 4.264E-07,
     $ 4.266E-07, 4.216E-07, 4.338E-07, 4.512E-07, 4.925E-07, 5.409E-07,
     $ 5.817E-07, 5.924E-07, 5.884E-07, 5.513E-07, 5.054E-07, 4.719E-07,
     $ 4.518E-07, 4.387E-07, 4.416E-07, 4.382E-07, 4.182E-07, 4.081E-07,
     $ 4.208E-07, 4.362E-07, 4.681E-07, 5.160E-07, 5.514E-07, 5.627E-07,
     $ 5.770E-07, 5.850E-07, 5.883E-07, 6.028E-07, 6.229E-07, 6.377E-07,
     $ 6.531E-07, 6.765E-07, 6.950E-07, 7.244E-07, 7.456E-07, 7.662E-07,
     $ 7.828E-07, 8.018E-07, 8.172E-07, 8.494E-07, 8.737E-07, 8.720E-07,
     $ 8.599E-07, 8.237E-07, 7.581E-07, 6.732E-07, 6.094E-07, 5.500E-07,
     $ 5.157E-07, 4.920E-07, 4.960E-07, 5.004E-07, 4.883E-07, 4.580E-07,
     $ 4.509E-07, 4.460E-07, 4.445E-07, 4.658E-07, 5.006E-07, 5.166E-07,
     $ 5.334E-07, 5.545E-07, 5.798E-07, 6.043E-07/
C                                                                       
C     33601 TO 33700 CM-1 DATA.                                         
      DATA (SUN(I),I= 33601, 33700)/                                    
     $ 6.339E-07, 6.493E-07, 6.437E-07, 6.266E-07, 6.138E-07, 6.024E-07,
     $ 6.056E-07, 6.209E-07, 6.335E-07, 6.321E-07, 6.197E-07, 5.934E-07,
     $ 5.639E-07, 5.315E-07, 4.951E-07, 4.559E-07, 4.121E-07, 3.582E-07,
     $ 3.019E-07, 2.464E-07, 1.936E-07, 1.500E-07, 1.224E-07, 1.124E-07,
     $ 1.242E-07, 1.571E-07, 2.050E-07, 2.627E-07, 3.202E-07, 3.653E-07,
     $ 4.003E-07, 4.304E-07, 4.486E-07, 4.536E-07, 4.596E-07, 4.588E-07,
     $ 4.429E-07, 4.300E-07, 4.396E-07, 4.705E-07, 5.189E-07, 5.767E-07,
     $ 6.210E-07, 6.397E-07, 6.229E-07, 5.837E-07, 5.429E-07, 5.108E-07,
     $ 4.767E-07, 4.428E-07, 4.057E-07, 3.505E-07, 2.912E-07, 2.374E-07,
     $ 1.950E-07, 1.632E-07, 1.517E-07, 1.554E-07, 1.777E-07, 2.129E-07,
     $ 2.542E-07, 2.871E-07, 2.976E-07, 2.914E-07, 2.765E-07, 2.704E-07,
     $ 2.878E-07, 3.371E-07, 4.036E-07, 4.723E-07, 5.263E-07, 5.592E-07,
     $ 5.600E-07, 5.285E-07, 4.929E-07, 4.615E-07, 4.376E-07, 4.366E-07,
     $ 4.720E-07, 5.171E-07, 5.605E-07, 5.882E-07, 5.966E-07, 5.764E-07,
     $ 5.318E-07, 4.739E-07, 4.197E-07, 3.682E-07, 3.163E-07, 2.680E-07,
     $ 2.212E-07, 1.780E-07, 1.410E-07, 1.171E-07, 1.104E-07, 1.243E-07,
     $ 1.509E-07, 1.818E-07, 2.126E-07, 2.418E-07/
C                                                                       
C     33701 TO 33800 CM-1 DATA.                                         
      DATA (SUN(I),I= 33701, 33800)/                                    
     $ 2.618E-07, 2.772E-07, 2.878E-07, 3.009E-07, 3.145E-07, 3.366E-07,
     $ 3.555E-07, 3.771E-07, 3.882E-07, 3.794E-07, 3.472E-07, 3.009E-07,
     $ 2.521E-07, 2.168E-07, 2.107E-07, 2.244E-07, 2.542E-07, 2.910E-07,
     $ 3.366E-07, 3.826E-07, 4.310E-07, 4.802E-07, 5.258E-07, 5.564E-07,
     $ 5.731E-07, 5.899E-07, 6.085E-07, 6.184E-07, 6.114E-07, 5.899E-07,
     $ 5.649E-07, 5.472E-07, 5.581E-07, 6.015E-07, 6.701E-07, 7.350E-07,
     $ 7.857E-07, 8.026E-07, 7.969E-07, 7.723E-07, 7.381E-07, 6.924E-07,
     $ 6.603E-07, 6.403E-07, 6.209E-07, 6.145E-07, 6.384E-07, 6.685E-07,
     $ 6.899E-07, 7.178E-07, 7.326E-07, 7.156E-07, 6.694E-07, 6.108E-07,
     $ 5.435E-07, 4.745E-07, 4.128E-07, 3.856E-07, 3.978E-07, 4.431E-07,
     $ 5.087E-07, 5.814E-07, 6.212E-07, 6.159E-07, 5.772E-07, 5.224E-07,
     $ 4.762E-07, 4.646E-07, 4.734E-07, 4.836E-07, 5.078E-07, 5.191E-07,
     $ 4.965E-07, 4.670E-07, 4.534E-07, 4.393E-07, 4.234E-07, 4.382E-07,
     $ 4.853E-07, 5.344E-07, 5.742E-07, 6.320E-07, 6.855E-07, 7.053E-07,
     $ 7.134E-07, 7.284E-07, 7.238E-07, 7.073E-07, 6.984E-07, 6.877E-07,
     $ 6.689E-07, 6.635E-07, 6.689E-07, 6.842E-07, 7.057E-07, 7.247E-07,
     $ 7.218E-07, 6.854E-07, 6.114E-07, 5.084E-07/
C                                                                       
C     33801 TO 33900 CM-1 DATA.                                         
      DATA (SUN(I),I= 33801, 33900)/                                    
     $ 3.942E-07, 2.941E-07, 2.311E-07, 2.135E-07, 2.409E-07, 2.912E-07,
     $ 3.424E-07, 3.752E-07, 3.864E-07, 3.880E-07, 4.035E-07, 4.317E-07,
     $ 4.884E-07, 5.486E-07, 5.850E-07, 5.904E-07, 5.845E-07, 5.462E-07,
     $ 5.182E-07, 5.134E-07, 5.268E-07, 5.493E-07, 5.966E-07, 6.459E-07,
     $ 6.929E-07, 7.289E-07, 7.457E-07, 7.365E-07, 7.076E-07, 6.683E-07,
     $ 6.201E-07, 5.728E-07, 5.465E-07, 5.234E-07, 4.954E-07, 4.845E-07,
     $ 4.771E-07, 4.409E-07, 3.916E-07, 3.400E-07, 2.722E-07, 2.029E-07,
     $ 1.579E-07, 1.356E-07, 1.308E-07, 1.472E-07, 1.920E-07, 2.571E-07,
     $ 3.420E-07, 4.411E-07, 5.459E-07, 6.294E-07, 6.899E-07, 7.274E-07,
     $ 7.465E-07, 7.561E-07, 7.691E-07, 7.707E-07, 7.606E-07, 7.368E-07,
     $ 6.886E-07, 6.293E-07, 5.868E-07, 5.687E-07, 5.803E-07, 6.195E-07,
     $ 6.601E-07, 6.845E-07, 6.770E-07, 6.424E-07, 5.926E-07, 5.522E-07,
     $ 5.293E-07, 5.267E-07, 5.332E-07, 5.556E-07, 5.779E-07, 5.975E-07,
     $ 6.231E-07, 6.353E-07, 6.168E-07, 5.772E-07, 5.189E-07, 4.501E-07,
     $ 4.112E-07, 4.124E-07, 4.382E-07, 4.744E-07, 5.090E-07, 5.190E-07,
     $ 4.985E-07, 4.612E-07, 4.173E-07, 3.617E-07, 3.057E-07, 2.557E-07,
     $ 2.226E-07, 2.128E-07, 2.260E-07, 2.611E-07/
C                                                                       
C     33901 TO 34000 CM-1 DATA.                                         
      DATA (SUN(I),I= 33901, 34000)/                                    
     $ 3.125E-07, 3.485E-07, 3.694E-07, 3.806E-07, 3.671E-07, 3.346E-07,
     $ 3.071E-07, 2.706E-07, 2.286E-07, 1.939E-07, 1.621E-07, 1.330E-07,
     $ 1.210E-07, 1.236E-07, 1.378E-07, 1.714E-07, 2.168E-07, 2.668E-07,
     $ 3.232E-07, 3.806E-07, 4.247E-07, 4.587E-07, 4.866E-07, 5.076E-07,
     $ 5.352E-07, 5.802E-07, 6.405E-07, 7.058E-07, 7.612E-07, 8.036E-07,
     $ 8.197E-07, 8.037E-07, 7.642E-07, 7.232E-07, 6.779E-07, 6.362E-07,
     $ 6.141E-07, 6.027E-07, 5.886E-07, 5.594E-07, 5.230E-07, 4.788E-07,
     $ 4.527E-07, 4.541E-07, 4.879E-07, 5.332E-07, 5.642E-07, 5.531E-07,
     $ 4.964E-07, 4.136E-07, 3.426E-07, 3.087E-07, 3.163E-07, 3.509E-07,
     $ 3.983E-07, 4.388E-07, 4.520E-07, 4.451E-07, 4.559E-07, 4.819E-07,
     $ 5.022E-07, 5.380E-07, 5.835E-07, 6.054E-07, 6.029E-07, 6.092E-07,
     $ 6.133E-07, 6.192E-07, 6.262E-07, 6.444E-07, 6.506E-07, 6.491E-07,
     $ 6.473E-07, 6.506E-07, 6.403E-07, 6.118E-07, 5.691E-07, 5.082E-07,
     $ 4.441E-07, 3.998E-07, 3.918E-07, 3.968E-07, 4.019E-07, 3.949E-07,
     $ 3.615E-07, 3.128E-07, 2.780E-07, 2.707E-07, 2.954E-07, 3.590E-07,
     $ 4.293E-07, 4.837E-07, 5.130E-07, 5.130E-07, 4.779E-07, 4.285E-07,
     $ 3.959E-07, 3.973E-07, 4.328E-07, 4.996E-07/
C                                                                       
C     34001 TO 34100 CM-1 DATA.                                         
      DATA (SUN(I),I= 34001, 34100)/                                    
     $ 5.838E-07, 6.637E-07, 7.150E-07, 7.318E-07, 7.093E-07, 6.620E-07,
     $ 5.827E-07, 4.838E-07, 3.808E-07, 2.975E-07, 2.362E-07, 2.188E-07,
     $ 2.460E-07, 3.018E-07, 3.732E-07, 4.484E-07, 4.895E-07, 4.983E-07,
     $ 4.915E-07, 4.702E-07, 4.401E-07, 4.336E-07, 4.457E-07, 4.585E-07,
     $ 4.599E-07, 4.485E-07, 4.310E-07, 4.095E-07, 3.922E-07, 3.985E-07,
     $ 4.183E-07, 4.284E-07, 4.238E-07, 4.043E-07, 3.572E-07, 2.975E-07,
     $ 2.363E-07, 1.841E-07, 1.455E-07, 1.244E-07, 1.171E-07, 1.261E-07,
     $ 1.475E-07, 1.789E-07, 2.133E-07, 2.488E-07, 2.873E-07, 3.284E-07,
     $ 3.751E-07, 4.415E-07, 5.228E-07, 6.029E-07, 6.797E-07, 7.391E-07,
     $ 7.708E-07, 7.731E-07, 7.602E-07, 7.372E-07, 7.170E-07, 7.099E-07,
     $ 7.266E-07, 7.518E-07, 7.654E-07, 7.557E-07, 7.089E-07, 6.373E-07,
     $ 5.691E-07, 5.171E-07, 4.933E-07, 5.025E-07, 5.224E-07, 5.218E-07,
     $ 5.237E-07, 5.239E-07, 5.220E-07, 5.295E-07, 5.632E-07, 5.859E-07,
     $ 5.925E-07, 5.843E-07, 5.488E-07, 4.882E-07, 4.315E-07, 3.921E-07,
     $ 3.775E-07, 3.992E-07, 4.521E-07, 5.133E-07, 5.773E-07, 6.486E-07,
     $ 7.163E-07, 7.593E-07, 7.928E-07, 8.073E-07, 7.828E-07, 7.275E-07,
     $ 6.736E-07, 6.191E-07, 5.684E-07, 5.458E-07/
C                                                                       
C     34101 TO 34200 CM-1 DATA.                                         
      DATA (SUN(I),I= 34101, 34200)/                                    
     $ 5.468E-07, 5.646E-07, 5.862E-07, 6.233E-07, 6.366E-07, 6.212E-07,
     $ 5.784E-07, 5.314E-07, 4.797E-07, 4.571E-07, 4.749E-07, 5.224E-07,
     $ 5.828E-07, 6.383E-07, 6.798E-07, 7.138E-07, 7.373E-07, 7.480E-07,
     $ 7.594E-07, 7.552E-07, 7.215E-07, 6.694E-07, 6.157E-07, 5.441E-07,
     $ 4.793E-07, 4.196E-07, 3.607E-07, 2.935E-07, 2.408E-07, 1.949E-07,
     $ 1.648E-07, 1.551E-07, 1.709E-07, 2.051E-07, 2.473E-07, 2.923E-07,
     $ 3.313E-07, 3.534E-07, 3.586E-07, 3.599E-07, 3.681E-07, 3.924E-07,
     $ 4.254E-07, 4.521E-07, 4.887E-07, 5.162E-07, 5.348E-07, 5.587E-07,
     $ 5.997E-07, 6.173E-07, 6.269E-07, 6.144E-07, 5.813E-07, 5.220E-07,
     $ 4.597E-07, 3.884E-07, 3.265E-07, 2.813E-07, 2.648E-07, 2.752E-07,
     $ 3.160E-07, 3.687E-07, 4.094E-07, 4.293E-07, 4.271E-07, 3.958E-07,
     $ 3.486E-07, 3.135E-07, 2.971E-07, 2.944E-07, 3.186E-07, 3.677E-07,
     $ 4.132E-07, 4.585E-07, 5.149E-07, 5.561E-07, 5.736E-07, 5.766E-07,
     $ 5.539E-07, 5.069E-07, 4.581E-07, 4.322E-07, 4.437E-07, 4.762E-07,
     $ 5.016E-07, 5.239E-07, 5.116E-07, 4.591E-07, 3.965E-07, 3.613E-07,
     $ 3.348E-07, 3.257E-07, 3.220E-07, 3.178E-07, 2.963E-07, 2.840E-07,
     $ 3.038E-07, 3.631E-07, 4.515E-07, 5.651E-07/
C                                                                       
C     34201 TO 34300 CM-1 DATA.                                         
      DATA (SUN(I),I= 34201, 34300)/                                    
     $ 6.590E-07, 7.042E-07, 7.083E-07, 6.741E-07, 6.101E-07, 5.540E-07,
     $ 5.175E-07, 4.898E-07, 4.822E-07, 4.942E-07, 5.057E-07, 5.121E-07,
     $ 5.250E-07, 5.348E-07, 5.364E-07, 5.546E-07, 5.890E-07, 6.131E-07,
     $ 6.301E-07, 6.307E-07, 5.953E-07, 5.513E-07, 5.316E-07, 5.115E-07,
     $ 5.006E-07, 5.275E-07, 5.535E-07, 5.420E-07, 5.335E-07, 5.399E-07,
     $ 5.189E-07, 4.865E-07, 4.737E-07, 4.622E-07, 4.368E-07, 4.306E-07,
     $ 4.408E-07, 4.692E-07, 5.221E-07, 5.957E-07, 6.581E-07, 6.992E-07,
     $ 7.142E-07, 6.839E-07, 6.209E-07, 5.462E-07, 4.909E-07, 4.477E-07,
     $ 4.350E-07, 4.495E-07, 4.964E-07, 5.357E-07, 5.645E-07, 5.745E-07,
     $ 5.580E-07, 4.992E-07, 4.428E-07, 3.951E-07, 3.721E-07, 3.795E-07,
     $ 4.212E-07, 4.618E-07, 4.933E-07, 4.962E-07, 4.840E-07, 4.618E-07,
     $ 4.460E-07, 4.553E-07, 4.845E-07, 5.081E-07, 5.381E-07, 5.704E-07,
     $ 5.821E-07, 5.886E-07, 6.130E-07, 6.322E-07, 6.357E-07, 6.281E-07,
     $ 6.149E-07, 5.766E-07, 5.314E-07, 4.980E-07, 4.917E-07, 4.869E-07,
     $ 4.893E-07, 4.793E-07, 4.507E-07, 3.997E-07, 3.522E-07, 3.248E-07,
     $ 3.371E-07, 3.830E-07, 4.484E-07, 5.249E-07, 5.881E-07, 6.126E-07,
     $ 6.015E-07, 5.795E-07, 5.436E-07, 4.932E-07/
C                                                                       
C     34301 TO 34400 CM-1 DATA.                                         
      DATA (SUN(I),I= 34301, 34400)/                                    
     $ 4.593E-07, 4.602E-07, 4.619E-07, 4.669E-07, 5.058E-07, 5.527E-07,
     $ 5.655E-07, 5.726E-07, 5.770E-07, 5.587E-07, 5.462E-07, 5.704E-07,
     $ 6.127E-07, 6.516E-07, 6.940E-07, 7.232E-07, 7.344E-07, 7.439E-07,
     $ 7.763E-07, 8.102E-07, 8.350E-07, 8.436E-07, 8.179E-07, 7.436E-07,
     $ 6.384E-07, 5.245E-07, 4.189E-07, 3.519E-07, 3.393E-07, 3.694E-07,
     $ 4.268E-07, 4.955E-07, 5.554E-07, 5.966E-07, 6.332E-07, 6.546E-07,
     $ 6.516E-07, 6.243E-07, 5.723E-07, 5.059E-07, 4.484E-07, 4.192E-07,
     $ 4.159E-07, 4.503E-07, 4.850E-07, 5.149E-07, 5.471E-07, 5.812E-07,
     $ 5.820E-07, 5.769E-07, 5.606E-07, 5.201E-07, 4.701E-07, 4.507E-07,
     $ 4.641E-07, 4.970E-07, 5.422E-07, 5.776E-07, 5.945E-07, 5.889E-07,
     $ 5.781E-07, 5.662E-07, 5.621E-07, 5.403E-07, 5.014E-07, 4.701E-07,
     $ 4.508E-07, 4.391E-07, 4.646E-07, 5.159E-07, 5.487E-07, 5.592E-07,
     $ 5.656E-07, 5.493E-07, 5.170E-07, 4.943E-07, 4.912E-07, 4.914E-07,
     $ 4.990E-07, 5.085E-07, 5.215E-07, 5.200E-07, 5.066E-07, 5.068E-07,
     $ 5.392E-07, 5.767E-07, 6.244E-07, 6.840E-07, 7.190E-07, 7.059E-07,
     $ 6.643E-07, 5.953E-07, 5.134E-07, 4.510E-07, 4.203E-07, 4.172E-07,
     $ 4.604E-07, 5.198E-07, 5.679E-07, 6.035E-07/
C                                                                       
C     34401 TO 34500 CM-1 DATA.                                         
      DATA (SUN(I),I= 34401, 34500)/                                    
     $ 6.347E-07, 6.288E-07, 6.045E-07, 5.732E-07, 5.396E-07, 5.013E-07,
     $ 4.818E-07, 4.904E-07, 5.202E-07, 5.707E-07, 6.341E-07, 7.029E-07,
     $ 7.488E-07, 7.809E-07, 7.861E-07, 7.710E-07, 7.341E-07, 6.921E-07,
     $ 6.343E-07, 5.795E-07, 5.255E-07, 4.896E-07, 4.771E-07, 5.024E-07,
     $ 5.469E-07, 6.108E-07, 6.726E-07, 7.260E-07, 7.625E-07, 7.864E-07,
     $ 7.839E-07, 7.543E-07, 7.103E-07, 6.518E-07, 5.963E-07, 5.659E-07,
     $ 5.649E-07, 5.685E-07, 5.755E-07, 5.709E-07, 5.472E-07, 5.232E-07,
     $ 5.122E-07, 5.176E-07, 5.238E-07, 5.250E-07, 5.038E-07, 4.720E-07,
     $ 4.339E-07, 4.084E-07, 4.013E-07, 4.098E-07, 4.178E-07, 4.310E-07,
     $ 4.574E-07, 4.932E-07, 5.354E-07, 5.814E-07, 6.182E-07, 6.417E-07,
     $ 6.598E-07, 6.863E-07, 7.176E-07, 7.482E-07, 7.692E-07, 7.616E-07,
     $ 7.237E-07, 6.857E-07, 6.540E-07, 6.289E-07, 6.356E-07, 6.679E-07,
     $ 6.884E-07, 6.953E-07, 6.847E-07, 6.441E-07, 5.868E-07, 5.249E-07,
     $ 4.661E-07, 4.423E-07, 4.571E-07, 4.775E-07, 5.151E-07, 5.611E-07,
     $ 5.778E-07, 5.587E-07, 5.408E-07, 5.151E-07, 4.844E-07, 4.658E-07,
     $ 4.643E-07, 4.612E-07, 4.652E-07, 4.752E-07, 4.786E-07, 4.713E-07,
     $ 4.590E-07, 4.440E-07, 4.323E-07, 4.352E-07/
C                                                                       
C     34501 TO 34600 CM-1 DATA.                                         
      DATA (SUN(I),I= 34501, 34600)/                                    
     $ 4.581E-07, 4.910E-07, 5.211E-07, 5.354E-07, 5.396E-07, 5.380E-07,
     $ 5.412E-07, 5.349E-07, 5.425E-07, 5.458E-07, 5.339E-07, 5.079E-07,
     $ 4.937E-07, 4.669E-07, 4.464E-07, 4.421E-07, 4.419E-07, 4.458E-07,
     $ 4.673E-07, 4.948E-07, 5.152E-07, 5.465E-07, 5.774E-07, 6.069E-07,
     $ 6.274E-07, 6.357E-07, 6.225E-07, 5.827E-07, 5.175E-07, 4.477E-07,
     $ 3.899E-07, 3.493E-07, 3.427E-07, 3.523E-07, 3.644E-07, 3.840E-07,
     $ 3.919E-07, 3.778E-07, 3.691E-07, 3.699E-07, 3.560E-07, 3.452E-07,
     $ 3.472E-07, 3.573E-07, 3.756E-07, 4.099E-07, 4.435E-07, 4.631E-07,
     $ 4.485E-07, 4.081E-07, 3.697E-07, 3.506E-07, 3.509E-07, 3.751E-07,
     $ 4.055E-07, 4.041E-07, 3.758E-07, 3.332E-07, 2.875E-07, 2.565E-07,
     $ 2.597E-07, 2.863E-07, 3.381E-07, 4.109E-07, 4.686E-07, 5.062E-07,
     $ 5.181E-07, 4.880E-07, 4.290E-07, 3.904E-07, 3.645E-07, 3.514E-07,
     $ 3.670E-07, 3.869E-07, 3.750E-07, 3.533E-07, 3.385E-07, 3.151E-07,
     $ 2.986E-07, 3.090E-07, 3.290E-07, 3.429E-07, 3.621E-07, 3.852E-07,
     $ 4.080E-07, 4.290E-07, 4.513E-07, 4.651E-07, 4.578E-07, 4.244E-07,
     $ 3.867E-07, 3.471E-07, 3.107E-07, 2.909E-07, 2.991E-07, 3.091E-07,
     $ 3.127E-07, 3.252E-07, 3.477E-07, 3.532E-07/
C                                                                       
C     34601 TO 34700 CM-1 DATA.                                         
      DATA (SUN(I),I= 34601, 34700)/                                    
     $ 3.498E-07, 3.656E-07, 3.765E-07, 3.740E-07, 3.863E-07, 4.122E-07,
     $ 4.240E-07, 4.367E-07, 4.476E-07, 4.458E-07, 4.300E-07, 4.057E-07,
     $ 3.691E-07, 3.281E-07, 2.911E-07, 2.756E-07, 2.815E-07, 3.036E-07,
     $ 3.403E-07, 3.734E-07, 3.899E-07, 3.906E-07, 3.840E-07, 3.690E-07,
     $ 3.675E-07, 3.735E-07, 3.878E-07, 3.995E-07, 4.156E-07, 4.140E-07,
     $ 3.979E-07, 3.704E-07, 3.488E-07, 3.292E-07, 3.184E-07, 3.179E-07,
     $ 3.312E-07, 3.444E-07, 3.541E-07, 3.708E-07, 3.924E-07, 4.131E-07,
     $ 4.270E-07, 4.354E-07, 4.371E-07, 4.361E-07, 4.352E-07, 4.462E-07,
     $ 4.616E-07, 4.642E-07, 4.614E-07, 4.504E-07, 4.303E-07, 4.105E-07,
     $ 4.104E-07, 4.144E-07, 4.153E-07, 4.037E-07, 3.854E-07, 3.553E-07,
     $ 3.220E-07, 2.919E-07, 2.736E-07, 2.562E-07, 2.413E-07, 2.272E-07,
     $ 2.210E-07, 2.249E-07, 2.391E-07, 2.544E-07, 2.711E-07, 2.805E-07,
     $ 2.775E-07, 2.663E-07, 2.526E-07, 2.357E-07, 2.182E-07, 2.013E-07,
     $ 1.860E-07, 1.716E-07, 1.594E-07, 1.495E-07, 1.431E-07, 1.366E-07,
     $ 1.305E-07, 1.235E-07, 1.153E-07, 1.040E-07, 9.251E-08, 8.030E-08,
     $ 6.979E-08, 6.231E-08, 5.998E-08, 6.223E-08, 6.953E-08, 8.007E-08,
     $ 9.063E-08, 9.863E-08, 1.039E-07, 1.069E-07/
C                                                                       
C     34701 TO 34800 CM-1 DATA.                                         
      DATA (SUN(I),I= 34701, 34800)/                                    
     $ 1.074E-07, 1.101E-07, 1.187E-07, 1.314E-07, 1.476E-07, 1.690E-07,
     $ 1.885E-07, 2.010E-07, 2.131E-07, 2.235E-07, 2.297E-07, 2.383E-07,
     $ 2.525E-07, 2.600E-07, 2.607E-07, 2.570E-07, 2.443E-07, 2.229E-07,
     $ 2.034E-07, 1.924E-07, 1.844E-07, 1.858E-07, 1.963E-07, 2.080E-07,
     $ 2.129E-07, 2.214E-07, 2.252E-07, 2.269E-07, 2.395E-07, 2.647E-07,
     $ 2.911E-07, 3.233E-07, 3.486E-07, 3.614E-07, 3.677E-07, 3.699E-07,
     $ 3.685E-07, 3.783E-07, 3.835E-07, 3.735E-07, 3.538E-07, 3.337E-07,
     $ 3.148E-07, 3.135E-07, 3.306E-07, 3.623E-07, 3.864E-07, 3.901E-07,
     $ 3.741E-07, 3.468E-07, 3.143E-07, 2.914E-07, 2.787E-07, 2.687E-07,
     $ 2.656E-07, 2.582E-07, 2.422E-07, 2.366E-07, 2.466E-07, 2.562E-07,
     $ 2.740E-07, 3.075E-07, 3.327E-07, 3.408E-07, 3.381E-07, 3.298E-07,
     $ 3.135E-07, 2.977E-07, 2.961E-07, 3.083E-07, 3.260E-07, 3.456E-07,
     $ 3.716E-07, 3.951E-07, 4.199E-07, 4.388E-07, 4.406E-07, 4.201E-07,
     $ 3.791E-07, 3.271E-07, 2.805E-07, 2.520E-07, 2.440E-07, 2.615E-07,
     $ 2.821E-07, 2.876E-07, 2.780E-07, 2.621E-07, 2.412E-07, 2.331E-07,
     $ 2.532E-07, 3.033E-07, 3.648E-07, 4.228E-07, 4.688E-07, 4.912E-07,
     $ 4.822E-07, 4.554E-07, 4.173E-07, 3.682E-07/
C                                                                       
C     34801 TO 34900 CM-1 DATA.                                         
      DATA (SUN(I),I= 34801, 34900)/                                    
     $ 3.195E-07, 2.884E-07, 2.774E-07, 2.900E-07, 3.267E-07, 3.849E-07,
     $ 4.414E-07, 4.809E-07, 4.983E-07, 5.054E-07, 4.908E-07, 4.689E-07,
     $ 4.558E-07, 4.536E-07, 4.392E-07, 4.234E-07, 4.087E-07, 3.914E-07,
     $ 3.789E-07, 3.894E-07, 4.168E-07, 4.398E-07, 4.511E-07, 4.418E-07,
     $ 4.167E-07, 3.884E-07, 3.726E-07, 3.683E-07, 3.807E-07, 3.868E-07,
     $ 3.738E-07, 3.486E-07, 3.213E-07, 2.965E-07, 2.899E-07, 2.986E-07,
     $ 3.057E-07, 3.062E-07, 2.891E-07, 2.537E-07, 2.156E-07, 1.901E-07,
     $ 1.758E-07, 1.779E-07, 1.977E-07, 2.225E-07, 2.439E-07, 2.652E-07,
     $ 2.900E-07, 3.034E-07, 3.063E-07, 3.085E-07, 3.122E-07, 3.039E-07,
     $ 2.987E-07, 3.046E-07, 3.036E-07, 2.866E-07, 2.711E-07, 2.580E-07,
     $ 2.381E-07, 2.331E-07, 2.490E-07, 2.667E-07, 2.814E-07, 3.036E-07,
     $ 3.127E-07, 3.020E-07, 2.886E-07, 2.694E-07, 2.452E-07, 2.325E-07,
     $ 2.379E-07, 2.571E-07, 2.910E-07, 3.302E-07, 3.680E-07, 4.049E-07,
     $ 4.340E-07, 4.598E-07, 4.744E-07, 4.723E-07, 4.528E-07, 4.214E-07,
     $ 3.719E-07, 3.209E-07, 2.775E-07, 2.393E-07, 2.089E-07, 1.929E-07,
     $ 1.919E-07, 2.040E-07, 2.360E-07, 2.812E-07, 3.338E-07, 3.792E-07,
     $ 4.098E-07, 4.237E-07, 4.296E-07, 4.261E-07/
C                                                                       
C     34901 TO 35000 CM-1 DATA.                                         
      DATA (SUN(I),I= 34901, 35000)/                                    
     $ 4.219E-07, 4.232E-07, 4.159E-07, 3.923E-07, 3.621E-07, 3.281E-07,
     $ 2.918E-07, 2.694E-07, 2.606E-07, 2.643E-07, 2.753E-07, 2.916E-07,
     $ 3.068E-07, 3.271E-07, 3.451E-07, 3.601E-07, 3.674E-07, 3.689E-07,
     $ 3.537E-07, 3.231E-07, 2.835E-07, 2.426E-07, 2.090E-07, 1.989E-07,
     $ 2.139E-07, 2.392E-07, 2.704E-07, 2.974E-07, 3.113E-07, 3.124E-07,
     $ 3.185E-07, 3.336E-07, 3.559E-07, 3.763E-07, 3.913E-07, 3.915E-07,
     $ 3.722E-07, 3.407E-07, 3.044E-07, 2.687E-07, 2.425E-07, 2.309E-07,
     $ 2.249E-07, 2.300E-07, 2.483E-07, 2.676E-07, 2.850E-07, 3.051E-07,
     $ 3.217E-07, 3.305E-07, 3.374E-07, 3.391E-07, 3.359E-07, 3.325E-07,
     $ 3.272E-07, 3.207E-07, 3.155E-07, 3.095E-07, 3.047E-07, 3.032E-07,
     $ 3.035E-07, 3.046E-07, 3.086E-07, 3.028E-07, 2.851E-07, 2.607E-07,
     $ 2.330E-07, 2.018E-07, 1.824E-07, 1.778E-07, 1.755E-07, 1.754E-07,
     $ 1.833E-07, 1.875E-07, 1.852E-07, 1.879E-07, 1.950E-07, 1.951E-07,
     $ 1.969E-07, 2.037E-07, 2.116E-07, 2.155E-07, 2.200E-07, 2.198E-07,
     $ 2.148E-07, 2.045E-07, 1.948E-07, 1.895E-07, 1.873E-07, 1.855E-07,
     $ 1.845E-07, 1.826E-07, 1.774E-07, 1.722E-07, 1.681E-07, 1.669E-07,
     $ 1.666E-07, 1.650E-07, 1.626E-07, 1.599E-07/
C                                                                       
C     35001 TO 35100 CM-1 DATA.                                         
      DATA (SUN(I),I= 35001, 35100)/                                    
     $ 1.564E-07, 1.520E-07, 1.482E-07, 1.424E-07, 1.351E-07, 1.262E-07,
     $ 1.184E-07, 1.135E-07, 1.138E-07, 1.168E-07, 1.206E-07, 1.253E-07,
     $ 1.274E-07, 1.275E-07, 1.260E-07, 1.243E-07, 1.212E-07, 1.185E-07,
     $ 1.150E-07, 1.114E-07, 1.078E-07, 1.050E-07, 1.024E-07, 9.965E-08,
     $ 9.719E-08, 9.522E-08, 9.207E-08, 8.793E-08, 8.421E-08, 8.074E-08,
     $ 7.707E-08, 7.439E-08, 7.313E-08, 7.192E-08, 7.059E-08, 6.932E-08,
     $ 6.761E-08, 6.496E-08, 6.169E-08, 5.808E-08, 5.423E-08, 5.049E-08,
     $ 4.716E-08, 4.441E-08, 4.141E-08, 3.838E-08, 3.514E-08, 3.158E-08,
     $ 2.841E-08, 2.615E-08, 2.469E-08, 2.467E-08, 2.576E-08, 2.760E-08,
     $ 3.017E-08, 3.361E-08, 3.701E-08, 4.117E-08, 4.513E-08, 4.910E-08,
     $ 5.294E-08, 5.664E-08, 5.947E-08, 6.252E-08, 6.570E-08, 6.850E-08,
     $ 7.134E-08, 7.437E-08, 7.738E-08, 7.993E-08, 8.248E-08, 8.508E-08,
     $ 8.805E-08, 9.063E-08, 9.142E-08, 9.057E-08, 8.915E-08, 8.642E-08,
     $ 8.355E-08, 8.396E-08, 8.726E-08, 9.161E-08, 9.787E-08, 1.054E-07,
     $ 1.119E-07, 1.179E-07, 1.229E-07, 1.273E-07, 1.292E-07, 1.299E-07,
     $ 1.300E-07, 1.311E-07, 1.288E-07, 1.266E-07, 1.248E-07, 1.221E-07,
     $ 1.164E-07, 1.150E-07, 1.180E-07, 1.231E-07/
C                                                                       
C     35101 TO 35200 CM-1 DATA.                                         
      DATA (SUN(I),I= 35101, 35200)/                                    
     $ 1.298E-07, 1.416E-07, 1.533E-07, 1.624E-07, 1.693E-07, 1.769E-07,
     $ 1.806E-07, 1.837E-07, 1.878E-07, 1.934E-07, 1.961E-07, 1.969E-07,
     $ 1.927E-07, 1.816E-07, 1.675E-07, 1.556E-07, 1.480E-07, 1.496E-07,
     $ 1.623E-07, 1.796E-07, 2.002E-07, 2.219E-07, 2.387E-07, 2.477E-07,
     $ 2.504E-07, 2.409E-07, 2.224E-07, 1.991E-07, 1.784E-07, 1.611E-07,
     $ 1.564E-07, 1.670E-07, 1.931E-07, 2.235E-07, 2.593E-07, 2.939E-07,
     $ 3.183E-07, 3.284E-07, 3.309E-07, 3.257E-07, 3.162E-07, 3.079E-07,
     $ 3.046E-07, 3.047E-07, 3.084E-07, 3.093E-07, 3.012E-07, 2.813E-07,
     $ 2.531E-07, 2.166E-07, 1.808E-07, 1.532E-07, 1.397E-07, 1.335E-07,
     $ 1.354E-07, 1.373E-07, 1.385E-07, 1.346E-07, 1.333E-07, 1.346E-07,
     $ 1.433E-07, 1.625E-07, 1.888E-07, 2.122E-07, 2.340E-07, 2.602E-07,
     $ 2.760E-07, 2.847E-07, 3.002E-07, 3.175E-07, 3.202E-07, 3.233E-07,
     $ 3.255E-07, 3.187E-07, 3.081E-07, 3.085E-07, 3.165E-07, 3.319E-07,
     $ 3.476E-07, 3.540E-07, 3.464E-07, 3.251E-07, 2.982E-07, 2.764E-07,
     $ 2.642E-07, 2.602E-07, 2.648E-07, 2.638E-07, 2.528E-07, 2.404E-07,
     $ 2.295E-07, 2.093E-07, 1.930E-07, 1.894E-07, 1.913E-07, 1.921E-07,
     $ 2.038E-07, 2.228E-07, 2.388E-07, 2.487E-07/
C                                                                       
C     35201 TO 35300 CM-1 DATA.                                         
      DATA (SUN(I),I= 35201, 35300)/                                    
     $ 2.638E-07, 2.825E-07, 2.984E-07, 3.085E-07, 3.223E-07, 3.294E-07,
     $ 3.233E-07, 3.101E-07, 3.047E-07, 2.929E-07, 2.793E-07, 2.781E-07,
     $ 2.867E-07, 2.952E-07, 3.151E-07, 3.430E-07, 3.612E-07, 3.746E-07,
     $ 3.743E-07, 3.555E-07, 3.220E-07, 2.906E-07, 2.543E-07, 2.279E-07,
     $ 2.222E-07, 2.380E-07, 2.636E-07, 3.013E-07, 3.468E-07, 3.846E-07,
     $ 4.032E-07, 4.055E-07, 3.913E-07, 3.595E-07, 3.227E-07, 3.021E-07,
     $ 2.959E-07, 3.014E-07, 3.228E-07, 3.459E-07, 3.494E-07, 3.400E-07,
     $ 3.216E-07, 2.896E-07, 2.542E-07, 2.353E-07, 2.222E-07, 2.136E-07,
     $ 2.110E-07, 2.098E-07, 1.926E-07, 1.702E-07, 1.464E-07, 1.205E-07,
     $ 1.006E-07, 9.788E-08, 1.107E-07, 1.369E-07, 1.760E-07, 2.170E-07,
     $ 2.560E-07, 2.825E-07, 2.961E-07, 2.964E-07, 2.895E-07, 2.754E-07,
     $ 2.674E-07, 2.624E-07, 2.581E-07, 2.585E-07, 2.650E-07, 2.691E-07,
     $ 2.700E-07, 2.769E-07, 2.891E-07, 3.044E-07, 3.212E-07, 3.410E-07,
     $ 3.537E-07, 3.505E-07, 3.359E-07, 3.173E-07, 3.095E-07, 3.212E-07,
     $ 3.526E-07, 3.931E-07, 4.399E-07, 4.684E-07, 4.705E-07, 4.462E-07,
     $ 4.016E-07, 3.396E-07, 2.759E-07, 2.190E-07, 1.848E-07, 1.774E-07,
     $ 1.886E-07, 2.129E-07, 2.475E-07, 2.770E-07/
C                                                                       
C     35301 TO 35400 CM-1 DATA.                                         
      DATA (SUN(I),I= 35301, 35400)/                                    
     $ 2.934E-07, 2.989E-07, 3.025E-07, 3.055E-07, 3.094E-07, 3.235E-07,
     $ 3.553E-07, 3.841E-07, 3.983E-07, 3.992E-07, 3.858E-07, 3.501E-07,
     $ 3.144E-07, 2.887E-07, 2.722E-07, 2.576E-07, 2.535E-07, 2.473E-07,
     $ 2.445E-07, 2.479E-07, 2.585E-07, 2.727E-07, 2.927E-07, 3.111E-07,
     $ 3.274E-07, 3.495E-07, 3.665E-07, 3.790E-07, 3.837E-07, 3.745E-07,
     $ 3.481E-07, 3.236E-07, 3.048E-07, 2.947E-07, 3.008E-07, 3.138E-07,
     $ 3.175E-07, 3.047E-07, 2.816E-07, 2.526E-07, 2.313E-07, 2.284E-07,
     $ 2.438E-07, 2.717E-07, 2.974E-07, 3.162E-07, 3.147E-07, 3.044E-07,
     $ 2.860E-07, 2.675E-07, 2.444E-07, 2.331E-07, 2.230E-07, 2.167E-07,
     $ 2.171E-07, 2.310E-07, 2.449E-07, 2.643E-07, 2.851E-07, 3.029E-07,
     $ 3.112E-07, 3.157E-07, 3.139E-07, 3.059E-07, 2.911E-07, 2.772E-07,
     $ 2.681E-07, 2.646E-07, 2.637E-07, 2.679E-07, 2.672E-07, 2.618E-07,
     $ 2.490E-07, 2.314E-07, 2.085E-07, 1.890E-07, 1.649E-07, 1.424E-07,
     $ 1.293E-07, 1.271E-07, 1.333E-07, 1.552E-07, 1.875E-07, 2.225E-07,
     $ 2.593E-07, 2.964E-07, 3.236E-07, 3.368E-07, 3.399E-07, 3.335E-07,
     $ 3.147E-07, 2.937E-07, 2.823E-07, 2.769E-07, 2.748E-07, 2.821E-07,
     $ 2.971E-07, 3.113E-07, 3.245E-07, 3.395E-07/
C                                                                       
C     35401 TO 35500 CM-1 DATA.                                         
      DATA (SUN(I),I= 35401, 35500)/                                    
     $ 3.532E-07, 3.599E-07, 3.581E-07, 3.483E-07, 3.247E-07, 2.902E-07,
     $ 2.544E-07, 2.261E-07, 2.084E-07, 2.110E-07, 2.276E-07, 2.463E-07,
     $ 2.584E-07, 2.627E-07, 2.536E-07, 2.376E-07, 2.216E-07, 2.134E-07,
     $ 2.111E-07, 2.172E-07, 2.283E-07, 2.444E-07, 2.585E-07, 2.705E-07,
     $ 2.789E-07, 2.825E-07, 2.815E-07, 2.778E-07, 2.727E-07, 2.638E-07,
     $ 2.514E-07, 2.397E-07, 2.321E-07, 2.258E-07, 2.226E-07, 2.297E-07,
     $ 2.357E-07, 2.368E-07, 2.394E-07, 2.469E-07, 2.496E-07, 2.565E-07,
     $ 2.649E-07, 2.704E-07, 2.674E-07, 2.666E-07, 2.645E-07, 2.669E-07,
     $ 2.713E-07, 2.800E-07, 2.853E-07, 2.891E-07, 2.870E-07, 2.812E-07,
     $ 2.718E-07, 2.556E-07, 2.358E-07, 2.174E-07, 2.080E-07, 2.068E-07,
     $ 2.188E-07, 2.351E-07, 2.499E-07, 2.550E-07, 2.530E-07, 2.466E-07,
     $ 2.409E-07, 2.390E-07, 2.436E-07, 2.536E-07, 2.630E-07, 2.662E-07,
     $ 2.639E-07, 2.550E-07, 2.372E-07, 2.173E-07, 2.024E-07, 1.923E-07,
     $ 1.856E-07, 1.842E-07, 1.831E-07, 1.838E-07, 1.874E-07, 1.941E-07,
     $ 2.014E-07, 2.121E-07, 2.178E-07, 2.162E-07, 2.103E-07, 2.030E-07,
     $ 1.935E-07, 1.878E-07, 1.873E-07, 1.915E-07, 1.969E-07, 2.036E-07,
     $ 2.092E-07, 2.147E-07, 2.170E-07, 2.198E-07/
C                                                                       
C     35501 TO 35600 CM-1 DATA.                                         
      DATA (SUN(I),I= 35501, 35600)/                                    
     $ 2.220E-07, 2.241E-07, 2.208E-07, 2.170E-07, 2.101E-07, 2.020E-07,
     $ 1.978E-07, 2.043E-07, 2.118E-07, 2.212E-07, 2.318E-07, 2.383E-07,
     $ 2.378E-07, 2.394E-07, 2.426E-07, 2.447E-07, 2.438E-07, 2.415E-07,
     $ 2.355E-07, 2.282E-07, 2.230E-07, 2.205E-07, 2.190E-07, 2.181E-07,
     $ 2.155E-07, 2.087E-07, 2.002E-07, 1.908E-07, 1.791E-07, 1.659E-07,
     $ 1.513E-07, 1.369E-07, 1.223E-07, 1.103E-07, 1.035E-07, 1.051E-07,
     $ 1.124E-07, 1.248E-07, 1.399E-07, 1.537E-07, 1.628E-07, 1.672E-07,
     $ 1.670E-07, 1.622E-07, 1.564E-07, 1.520E-07, 1.466E-07, 1.419E-07,
     $ 1.403E-07, 1.387E-07, 1.347E-07, 1.340E-07, 1.361E-07, 1.372E-07,
     $ 1.395E-07, 1.435E-07, 1.449E-07, 1.427E-07, 1.404E-07, 1.364E-07,
     $ 1.315E-07, 1.283E-07, 1.276E-07, 1.285E-07, 1.324E-07, 1.395E-07,
     $ 1.472E-07, 1.538E-07, 1.569E-07, 1.546E-07, 1.482E-07, 1.408E-07,
     $ 1.351E-07, 1.331E-07, 1.368E-07, 1.414E-07, 1.453E-07, 1.481E-07,
     $ 1.488E-07, 1.478E-07, 1.491E-07, 1.519E-07, 1.534E-07, 1.541E-07,
     $ 1.533E-07, 1.485E-07, 1.420E-07, 1.355E-07, 1.306E-07, 1.260E-07,
     $ 1.253E-07, 1.260E-07, 1.270E-07, 1.259E-07, 1.256E-07, 1.232E-07,
     $ 1.201E-07, 1.177E-07, 1.181E-07, 1.180E-07/
C                                                                       
C     35601 TO 35700 CM-1 DATA.                                         
      DATA (SUN(I),I= 35601, 35700)/                                    
     $ 1.181E-07, 1.180E-07, 1.183E-07, 1.177E-07, 1.175E-07, 1.174E-07,
     $ 1.162E-07, 1.130E-07, 1.086E-07, 1.019E-07, 9.357E-08, 8.791E-08,
     $ 8.521E-08, 8.400E-08, 8.602E-08, 9.116E-08, 9.439E-08, 9.616E-08,
     $ 9.773E-08, 9.848E-08, 9.769E-08, 9.749E-08, 9.634E-08, 9.464E-08,
     $ 9.225E-08, 8.965E-08, 8.746E-08, 8.641E-08, 8.556E-08, 8.505E-08,
     $ 8.492E-08, 8.405E-08, 8.274E-08, 8.096E-08, 7.858E-08, 7.630E-08,
     $ 7.416E-08, 7.150E-08, 6.918E-08, 6.820E-08, 6.701E-08, 6.507E-08,
     $ 6.373E-08, 6.275E-08, 6.049E-08, 5.794E-08, 5.748E-08, 5.729E-08,
     $ 5.631E-08, 5.574E-08, 5.550E-08, 5.382E-08, 5.172E-08, 4.993E-08,
     $ 4.797E-08, 4.571E-08, 4.322E-08, 4.047E-08, 3.802E-08, 3.592E-08,
     $ 3.522E-08, 3.728E-08, 4.403E-08, 5.458E-08, 6.886E-08, 8.492E-08,
     $ 1.017E-07, 1.147E-07, 1.232E-07, 1.254E-07, 1.219E-07, 1.111E-07,
     $ 9.576E-08, 7.867E-08, 6.335E-08, 5.128E-08, 4.367E-08, 4.072E-08,
     $ 4.081E-08, 4.173E-08, 4.284E-08, 4.426E-08, 4.520E-08, 4.592E-08,
     $ 4.688E-08, 4.728E-08, 4.696E-08, 4.714E-08, 4.744E-08, 4.726E-08,
     $ 4.838E-08, 5.061E-08, 5.283E-08, 5.494E-08, 5.784E-08, 5.999E-08,
     $ 6.199E-08, 6.347E-08, 6.497E-08, 6.645E-08/
C                                                                       
C     35701 TO 35800 CM-1 DATA.                                         
      DATA (SUN(I),I= 35701, 35800)/                                    
     $ 6.780E-08, 6.836E-08, 6.898E-08, 6.909E-08, 6.826E-08, 6.719E-08,
     $ 6.695E-08, 6.697E-08, 6.768E-08, 6.884E-08, 6.990E-08, 6.995E-08,
     $ 6.977E-08, 6.918E-08, 6.856E-08, 6.867E-08, 6.877E-08, 6.837E-08,
     $ 6.782E-08, 6.734E-08, 6.570E-08, 6.370E-08, 6.130E-08, 5.853E-08,
     $ 5.439E-08, 4.988E-08, 4.620E-08, 4.406E-08, 4.237E-08, 4.259E-08,
     $ 4.478E-08, 4.760E-08, 4.977E-08, 5.201E-08, 5.308E-08, 5.309E-08,
     $ 5.227E-08, 5.112E-08, 5.001E-08, 4.935E-08, 4.860E-08, 4.765E-08,
     $ 4.673E-08, 4.532E-08, 4.353E-08, 4.157E-08, 3.938E-08, 3.696E-08,
     $ 3.477E-08, 3.266E-08, 3.105E-08, 3.109E-08, 3.467E-08, 4.390E-08,
     $ 5.937E-08, 7.936E-08, 1.015E-07, 1.235E-07, 1.420E-07, 1.543E-07,
     $ 1.603E-07, 1.599E-07, 1.512E-07, 1.334E-07, 1.102E-07, 8.477E-08,
     $ 6.113E-08, 4.269E-08, 3.181E-08, 2.702E-08, 2.717E-08, 2.914E-08,
     $ 3.193E-08, 3.504E-08, 3.820E-08, 4.028E-08, 4.211E-08, 4.372E-08,
     $ 4.465E-08, 4.541E-08, 4.667E-08, 4.788E-08, 4.889E-08, 5.033E-08,
     $ 5.175E-08, 5.315E-08, 5.459E-08, 5.634E-08, 5.818E-08, 6.002E-08,
     $ 6.176E-08, 6.359E-08, 6.500E-08, 6.594E-08, 6.648E-08, 6.633E-08,
     $ 6.590E-08, 6.560E-08, 6.580E-08, 6.634E-08/
C                                                                       
C     35801 TO 35900 CM-1 DATA.                                         
      DATA (SUN(I),I= 35801, 35900)/                                    
     $ 6.750E-08, 6.921E-08, 7.092E-08, 7.190E-08, 7.258E-08, 7.294E-08,
     $ 7.343E-08, 7.421E-08, 7.495E-08, 7.582E-08, 7.706E-08, 7.748E-08,
     $ 7.796E-08, 7.969E-08, 8.221E-08, 8.449E-08, 8.573E-08, 8.482E-08,
     $ 8.184E-08, 7.809E-08, 7.444E-08, 7.339E-08, 7.529E-08, 7.982E-08,
     $ 8.422E-08, 8.903E-08, 9.303E-08, 9.615E-08, 9.710E-08, 9.763E-08,
     $ 9.720E-08, 9.493E-08, 9.257E-08, 9.095E-08, 9.059E-08, 9.079E-08,
     $ 9.339E-08, 9.574E-08, 9.905E-08, 1.021E-07, 1.056E-07, 1.081E-07,
     $ 1.115E-07, 1.142E-07, 1.167E-07, 1.190E-07, 1.214E-07, 1.220E-07,
     $ 1.221E-07, 1.209E-07, 1.169E-07, 1.092E-07, 1.003E-07, 8.993E-08,
     $ 7.992E-08, 7.503E-08, 7.707E-08, 8.336E-08, 9.365E-08, 1.068E-07,
     $ 1.179E-07, 1.255E-07, 1.304E-07, 1.325E-07, 1.324E-07, 1.322E-07,
     $ 1.336E-07, 1.364E-07, 1.400E-07, 1.435E-07, 1.465E-07, 1.470E-07,
     $ 1.459E-07, 1.453E-07, 1.450E-07, 1.435E-07, 1.427E-07, 1.434E-07,
     $ 1.442E-07, 1.445E-07, 1.475E-07, 1.510E-07, 1.514E-07, 1.503E-07,
     $ 1.500E-07, 1.483E-07, 1.479E-07, 1.512E-07, 1.538E-07, 1.529E-07,
     $ 1.493E-07, 1.430E-07, 1.352E-07, 1.308E-07, 1.325E-07, 1.383E-07,
     $ 1.466E-07, 1.535E-07, 1.578E-07, 1.576E-07/
C                                                                       
C     35901 TO 36000 CM-1 DATA.                                         
      DATA (SUN(I),I= 35901, 36000)/                                    
     $ 1.542E-07, 1.500E-07, 1.487E-07, 1.479E-07, 1.480E-07, 1.514E-07,
     $ 1.550E-07, 1.537E-07, 1.488E-07, 1.442E-07, 1.359E-07, 1.268E-07,
     $ 1.221E-07, 1.228E-07, 1.238E-07, 1.267E-07, 1.288E-07, 1.263E-07,
     $ 1.194E-07, 1.119E-07, 1.044E-07, 9.940E-08, 1.030E-07, 1.138E-07,
     $ 1.282E-07, 1.438E-07, 1.585E-07, 1.677E-07, 1.720E-07, 1.714E-07,
     $ 1.687E-07, 1.670E-07, 1.638E-07, 1.598E-07, 1.600E-07, 1.627E-07,
     $ 1.629E-07, 1.626E-07, 1.597E-07, 1.487E-07, 1.316E-07, 1.161E-07,
     $ 1.061E-07, 1.035E-07, 1.092E-07, 1.203E-07, 1.316E-07, 1.370E-07,
     $ 1.391E-07, 1.384E-07, 1.390E-07, 1.410E-07, 1.471E-07, 1.529E-07,
     $ 1.605E-07, 1.650E-07, 1.630E-07, 1.563E-07, 1.451E-07, 1.275E-07,
     $ 1.074E-07, 9.181E-08, 8.317E-08, 8.417E-08, 9.475E-08, 1.102E-07,
     $ 1.263E-07, 1.384E-07, 1.461E-07, 1.494E-07, 1.531E-07, 1.552E-07,
     $ 1.557E-07, 1.558E-07, 1.561E-07, 1.540E-07, 1.546E-07, 1.572E-07,
     $ 1.545E-07, 1.440E-07, 1.308E-07, 1.131E-07, 9.546E-08, 8.574E-08,
     $ 8.651E-08, 9.275E-08, 1.053E-07, 1.199E-07, 1.361E-07, 1.532E-07,
     $ 1.736E-07, 1.929E-07, 2.126E-07, 2.304E-07, 2.466E-07, 2.561E-07,
     $ 2.599E-07, 2.543E-07, 2.361E-07, 2.060E-07/
C                                                                       
C     36001 TO 36100 CM-1 DATA.                                         
      DATA (SUN(I),I= 36001, 36100)/                                    
     $ 1.725E-07, 1.402E-07, 1.143E-07, 1.029E-07, 1.055E-07, 1.129E-07,
     $ 1.282E-07, 1.526E-07, 1.766E-07, 1.949E-07, 2.132E-07, 2.241E-07,
     $ 2.216E-07, 2.144E-07, 2.104E-07, 2.072E-07, 2.032E-07, 2.037E-07,
     $ 2.038E-07, 2.042E-07, 2.083E-07, 2.141E-07, 2.203E-07, 2.251E-07,
     $ 2.202E-07, 2.067E-07, 1.997E-07, 1.972E-07, 2.003E-07, 2.178E-07,
     $ 2.405E-07, 2.532E-07, 2.581E-07, 2.577E-07, 2.469E-07, 2.338E-07,
     $ 2.280E-07, 2.273E-07, 2.287E-07, 2.370E-07, 2.511E-07, 2.605E-07,
     $ 2.671E-07, 2.710E-07, 2.647E-07, 2.538E-07, 2.471E-07, 2.444E-07,
     $ 2.509E-07, 2.650E-07, 2.733E-07, 2.740E-07, 2.679E-07, 2.496E-07,
     $ 2.304E-07, 2.180E-07, 2.060E-07, 1.919E-07, 1.787E-07, 1.600E-07,
     $ 1.379E-07, 1.218E-07, 1.147E-07, 1.204E-07, 1.383E-07, 1.638E-07,
     $ 1.909E-07, 2.164E-07, 2.347E-07, 2.473E-07, 2.533E-07, 2.569E-07,
     $ 2.606E-07, 2.658E-07, 2.722E-07, 2.815E-07, 2.911E-07, 2.931E-07,
     $ 2.847E-07, 2.658E-07, 2.425E-07, 2.176E-07, 2.040E-07, 2.060E-07,
     $ 2.233E-07, 2.437E-07, 2.623E-07, 2.686E-07, 2.643E-07, 2.500E-07,
     $ 2.314E-07, 2.141E-07, 2.075E-07, 2.012E-07, 1.929E-07, 1.892E-07,
     $ 1.850E-07, 1.740E-07, 1.631E-07, 1.566E-07/
C                                                                       
C     36101 TO 36200 CM-1 DATA.                                         
      DATA (SUN(I),I= 36101, 36200)/                                    
     $ 1.474E-07, 1.415E-07, 1.390E-07, 1.417E-07, 1.482E-07, 1.578E-07,
     $ 1.628E-07, 1.643E-07, 1.657E-07, 1.664E-07, 1.658E-07, 1.738E-07,
     $ 1.902E-07, 2.040E-07, 2.172E-07, 2.345E-07, 2.414E-07, 2.348E-07,
     $ 2.193E-07, 1.961E-07, 1.689E-07, 1.506E-07, 1.504E-07, 1.707E-07,
     $ 2.030E-07, 2.315E-07, 2.527E-07, 2.613E-07, 2.538E-07, 2.333E-07,
     $ 2.128E-07, 1.903E-07, 1.639E-07, 1.407E-07, 1.296E-07, 1.286E-07,
     $ 1.383E-07, 1.586E-07, 1.847E-07, 2.091E-07, 2.342E-07, 2.585E-07,
     $ 2.763E-07, 2.871E-07, 2.911E-07, 2.797E-07, 2.622E-07, 2.528E-07,
     $ 2.429E-07, 2.375E-07, 2.490E-07, 2.621E-07, 2.685E-07, 2.783E-07,
     $ 2.841E-07, 2.826E-07, 2.840E-07, 2.906E-07, 3.037E-07, 3.157E-07,
     $ 3.151E-07, 2.987E-07, 2.669E-07, 2.201E-07, 1.795E-07, 1.540E-07,
     $ 1.452E-07, 1.555E-07, 1.774E-07, 1.980E-07, 2.164E-07, 2.304E-07,
     $ 2.372E-07, 2.414E-07, 2.458E-07, 2.501E-07, 2.492E-07, 2.442E-07,
     $ 2.351E-07, 2.191E-07, 1.984E-07, 1.809E-07, 1.610E-07, 1.393E-07,
     $ 1.212E-07, 1.088E-07, 1.021E-07, 1.066E-07, 1.207E-07, 1.375E-07,
     $ 1.489E-07, 1.519E-07, 1.455E-07, 1.293E-07, 1.095E-07, 9.660E-08,
     $ 9.186E-08, 9.522E-08, 1.100E-07, 1.310E-07/
C                                                                       
C     36201 TO 36300 CM-1 DATA.                                         
      DATA (SUN(I),I= 36201, 36300)/                                    
     $ 1.510E-07, 1.716E-07, 1.950E-07, 2.165E-07, 2.352E-07, 2.497E-07,
     $ 2.571E-07, 2.564E-07, 2.471E-07, 2.365E-07, 2.321E-07, 2.307E-07,
     $ 2.275E-07, 2.308E-07, 2.360E-07, 2.351E-07, 2.307E-07, 2.295E-07,
     $ 2.211E-07, 2.067E-07, 1.926E-07, 1.828E-07, 1.744E-07, 1.718E-07,
     $ 1.768E-07, 1.830E-07, 1.881E-07, 1.947E-07, 2.061E-07, 2.168E-07,
     $ 2.312E-07, 2.474E-07, 2.587E-07, 2.630E-07, 2.674E-07, 2.729E-07,
     $ 2.786E-07, 2.910E-07, 3.081E-07, 3.237E-07, 3.354E-07, 3.416E-07,
     $ 3.387E-07, 3.275E-07, 3.074E-07, 2.786E-07, 2.460E-07, 2.127E-07,
     $ 1.796E-07, 1.537E-07, 1.361E-07, 1.251E-07, 1.186E-07, 1.171E-07,
     $ 1.153E-07, 1.131E-07, 1.132E-07, 1.150E-07, 1.160E-07, 1.194E-07,
     $ 1.254E-07, 1.296E-07, 1.312E-07, 1.299E-07, 1.224E-07, 1.084E-07,
     $ 9.224E-08, 7.708E-08, 6.488E-08, 5.816E-08, 5.668E-08, 5.650E-08,
     $ 5.524E-08, 5.319E-08, 4.994E-08, 4.625E-08, 4.505E-08, 4.788E-08,
     $ 5.425E-08, 6.266E-08, 7.250E-08, 8.265E-08, 9.107E-08, 9.698E-08,
     $ 1.035E-07, 1.114E-07, 1.199E-07, 1.288E-07, 1.394E-07, 1.469E-07,
     $ 1.493E-07, 1.483E-07, 1.469E-07, 1.459E-07, 1.469E-07, 1.479E-07,
     $ 1.475E-07, 1.453E-07, 1.369E-07, 1.241E-07/
C                                                                       
C     36301 TO 36400 CM-1 DATA.                                         
      DATA (SUN(I),I= 36301, 36400)/                                    
     $ 1.139E-07, 1.099E-07, 1.119E-07, 1.208E-07, 1.339E-07, 1.449E-07,
     $ 1.483E-07, 1.433E-07, 1.358E-07, 1.332E-07, 1.367E-07, 1.467E-07,
     $ 1.641E-07, 1.847E-07, 2.010E-07, 2.161E-07, 2.316E-07, 2.435E-07,
     $ 2.523E-07, 2.568E-07, 2.529E-07, 2.443E-07, 2.336E-07, 2.169E-07,
     $ 1.975E-07, 1.823E-07, 1.692E-07, 1.565E-07, 1.530E-07, 1.612E-07,
     $ 1.717E-07, 1.793E-07, 1.867E-07, 1.874E-07, 1.788E-07, 1.669E-07,
     $ 1.558E-07, 1.431E-07, 1.316E-07, 1.201E-07, 1.080E-07, 9.836E-08,
     $ 9.282E-08, 9.066E-08, 9.138E-08, 9.122E-08, 8.730E-08, 7.985E-08,
     $ 7.052E-08, 6.201E-08, 5.811E-08, 5.929E-08, 6.359E-08, 6.790E-08,
     $ 6.945E-08, 6.694E-08, 6.045E-08, 5.189E-08, 4.307E-08, 3.647E-08,
     $ 3.279E-08, 3.216E-08, 3.498E-08, 4.159E-08, 5.082E-08, 6.230E-08,
     $ 7.620E-08, 9.076E-08, 1.044E-07, 1.162E-07, 1.247E-07, 1.294E-07,
     $ 1.313E-07, 1.322E-07, 1.339E-07, 1.385E-07, 1.453E-07, 1.525E-07,
     $ 1.568E-07, 1.560E-07, 1.492E-07, 1.376E-07, 1.241E-07, 1.119E-07,
     $ 1.029E-07, 9.742E-08, 9.277E-08, 8.658E-08, 7.841E-08, 6.865E-08,
     $ 5.825E-08, 5.000E-08, 4.568E-08, 4.416E-08, 4.370E-08, 4.343E-08,
     $ 4.318E-08, 4.291E-08, 4.418E-08, 4.872E-08/
C                                                                       
C     36401 TO 36500 CM-1 DATA.                                         
      DATA (SUN(I),I= 36401, 36500)/                                    
     $ 5.643E-08, 6.561E-08, 7.519E-08, 8.376E-08, 9.136E-08, 9.883E-08,
     $ 1.081E-07, 1.197E-07, 1.342E-07, 1.492E-07, 1.630E-07, 1.749E-07,
     $ 1.839E-07, 1.870E-07, 1.844E-07, 1.771E-07, 1.653E-07, 1.512E-07,
     $ 1.419E-07, 1.386E-07, 1.383E-07, 1.387E-07, 1.398E-07, 1.361E-07,
     $ 1.271E-07, 1.179E-07, 1.098E-07, 9.930E-08, 8.937E-08, 8.254E-08,
     $ 7.748E-08, 7.521E-08, 7.795E-08, 8.151E-08, 8.293E-08, 8.238E-08,
     $ 7.925E-08, 7.400E-08, 6.939E-08, 6.573E-08, 6.165E-08, 5.814E-08,
     $ 5.681E-08, 5.860E-08, 6.391E-08, 7.195E-08, 8.034E-08, 8.612E-08,
     $ 8.681E-08, 8.204E-08, 7.352E-08, 6.340E-08, 5.398E-08, 4.771E-08,
     $ 4.547E-08, 4.801E-08, 5.651E-08, 7.005E-08, 8.669E-08, 1.064E-07,
     $ 1.253E-07, 1.398E-07, 1.482E-07, 1.498E-07, 1.460E-07, 1.406E-07,
     $ 1.333E-07, 1.255E-07, 1.210E-07, 1.170E-07, 1.136E-07, 1.141E-07,
     $ 1.189E-07, 1.252E-07, 1.337E-07, 1.409E-07, 1.450E-07, 1.468E-07,
     $ 1.451E-07, 1.398E-07, 1.329E-07, 1.248E-07, 1.150E-07, 1.049E-07,
     $ 9.551E-08, 8.717E-08, 7.880E-08, 6.974E-08, 6.084E-08, 5.286E-08,
     $ 4.662E-08, 4.390E-08, 4.583E-08, 5.180E-08, 6.098E-08, 7.232E-08,
     $ 8.475E-08, 9.808E-08, 1.121E-07, 1.257E-07/
C                                                                       
C     36501 TO 36600 CM-1 DATA.                                         
      DATA (SUN(I),I= 36501, 36600)/                                    
     $ 1.375E-07, 1.460E-07, 1.511E-07, 1.532E-07, 1.511E-07, 1.481E-07,
     $ 1.502E-07, 1.559E-07, 1.629E-07, 1.724E-07, 1.803E-07, 1.804E-07,
     $ 1.714E-07, 1.562E-07, 1.387E-07, 1.203E-07, 1.013E-07, 8.634E-08,
     $ 7.517E-08, 6.536E-08, 5.755E-08, 5.407E-08, 5.291E-08, 5.282E-08,
     $ 5.384E-08, 5.678E-08, 6.017E-08, 6.309E-08, 6.798E-08, 7.621E-08,
     $ 8.680E-08, 1.011E-07, 1.224E-07, 1.479E-07, 1.741E-07, 2.000E-07,
     $ 2.252E-07, 2.427E-07, 2.485E-07, 2.415E-07, 2.224E-07, 1.915E-07,
     $ 1.554E-07, 1.226E-07, 1.007E-07, 9.384E-08, 1.010E-07, 1.156E-07,
     $ 1.335E-07, 1.482E-07, 1.548E-07, 1.582E-07, 1.647E-07, 1.711E-07,
     $ 1.816E-07, 1.937E-07, 2.004E-07, 1.987E-07, 1.945E-07, 1.864E-07,
     $ 1.771E-07, 1.662E-07, 1.571E-07, 1.487E-07, 1.376E-07, 1.251E-07,
     $ 1.158E-07, 1.057E-07, 9.301E-08, 8.160E-08, 7.288E-08, 6.831E-08,
     $ 7.265E-08, 8.808E-08, 1.131E-07, 1.426E-07, 1.696E-07, 1.890E-07,
     $ 1.969E-07, 1.972E-07, 1.958E-07, 1.977E-07, 2.011E-07, 2.092E-07,
     $ 2.160E-07, 2.199E-07, 2.194E-07, 2.183E-07, 2.112E-07, 1.998E-07,
     $ 1.851E-07, 1.732E-07, 1.695E-07, 1.817E-07, 2.083E-07, 2.419E-07,
     $ 2.693E-07, 2.814E-07, 2.780E-07, 2.637E-07/
C                                                                       
C     36601 TO 36700 CM-1 DATA.                                         
      DATA (SUN(I),I= 36601, 36700)/                                    
     $ 2.422E-07, 2.225E-07, 2.094E-07, 1.950E-07, 1.745E-07, 1.523E-07,
     $ 1.319E-07, 1.144E-07, 1.062E-07, 1.119E-07, 1.293E-07, 1.519E-07,
     $ 1.762E-07, 1.982E-07, 2.171E-07, 2.355E-07, 2.533E-07, 2.698E-07,
     $ 2.894E-07, 3.088E-07, 3.195E-07, 3.236E-07, 3.252E-07, 3.243E-07,
     $ 3.234E-07, 3.284E-07, 3.369E-07, 3.398E-07, 3.296E-07, 3.047E-07,
     $ 2.682E-07, 2.263E-07, 1.899E-07, 1.720E-07, 1.750E-07, 1.917E-07,
     $ 2.154E-07, 2.418E-07, 2.583E-07, 2.600E-07, 2.483E-07, 2.272E-07,
     $ 2.000E-07, 1.729E-07, 1.498E-07, 1.340E-07, 1.221E-07, 1.093E-07,
     $ 9.565E-08, 8.217E-08, 6.998E-08, 6.337E-08, 6.655E-08, 7.995E-08,
     $ 1.024E-07, 1.298E-07, 1.579E-07, 1.803E-07, 1.931E-07, 1.962E-07,
     $ 1.923E-07, 1.821E-07, 1.742E-07, 1.730E-07, 1.753E-07, 1.761E-07,
     $ 1.785E-07, 1.734E-07, 1.584E-07, 1.404E-07, 1.273E-07, 1.174E-07,
     $ 1.186E-07, 1.292E-07, 1.452E-07, 1.660E-07, 1.926E-07, 2.124E-07,
     $ 2.279E-07, 2.407E-07, 2.389E-07, 2.202E-07, 1.973E-07, 1.711E-07,
     $ 1.385E-07, 1.120E-07, 9.680E-08, 9.300E-08, 1.010E-07, 1.178E-07,
     $ 1.352E-07, 1.507E-07, 1.607E-07, 1.623E-07, 1.624E-07, 1.655E-07,
     $ 1.703E-07, 1.720E-07, 1.698E-07, 1.619E-07/
C                                                                       
C     36701 TO 36800 CM-1 DATA.                                         
      DATA (SUN(I),I= 36701, 36800)/                                    
     $ 1.477E-07, 1.266E-07, 1.044E-07, 8.567E-08, 7.271E-08, 6.645E-08,
     $ 6.903E-08, 8.045E-08, 9.803E-08, 1.193E-07, 1.445E-07, 1.704E-07,
     $ 1.894E-07, 2.013E-07, 2.062E-07, 2.018E-07, 1.928E-07, 1.865E-07,
     $ 1.809E-07, 1.754E-07, 1.711E-07, 1.636E-07, 1.532E-07, 1.460E-07,
     $ 1.432E-07, 1.412E-07, 1.454E-07, 1.558E-07, 1.658E-07, 1.739E-07,
     $ 1.840E-07, 1.890E-07, 1.871E-07, 1.793E-07, 1.654E-07, 1.449E-07,
     $ 1.227E-07, 1.001E-07, 7.923E-08, 6.355E-08, 5.386E-08, 4.995E-08,
     $ 5.139E-08, 5.790E-08, 6.733E-08, 7.728E-08, 8.537E-08, 9.217E-08,
     $ 9.681E-08, 9.898E-08, 1.015E-07, 1.064E-07, 1.117E-07, 1.164E-07,
     $ 1.208E-07, 1.221E-07, 1.191E-07, 1.128E-07, 1.048E-07, 9.471E-08,
     $ 8.373E-08, 7.276E-08, 6.250E-08, 5.306E-08, 4.579E-08, 4.141E-08,
     $ 4.065E-08, 4.362E-08, 4.974E-08, 5.714E-08, 6.359E-08, 6.842E-08,
     $ 7.263E-08, 7.791E-08, 8.639E-08, 1.006E-07, 1.199E-07, 1.411E-07,
     $ 1.589E-07, 1.710E-07, 1.802E-07, 1.871E-07, 1.888E-07, 1.905E-07,
     $ 1.935E-07, 1.895E-07, 1.814E-07, 1.772E-07, 1.757E-07, 1.788E-07,
     $ 1.944E-07, 2.138E-07, 2.302E-07, 2.416E-07, 2.444E-07, 2.375E-07,
     $ 2.299E-07, 2.234E-07, 2.228E-07, 2.249E-07/
C                                                                       
C     36801 TO 36900 CM-1 DATA.                                         
      DATA (SUN(I),I= 36801, 36900)/                                    
     $ 2.216E-07, 2.114E-07, 1.999E-07, 1.830E-07, 1.720E-07, 1.783E-07,
     $ 1.930E-07, 2.060E-07, 2.194E-07, 2.227E-07, 2.072E-07, 1.830E-07,
     $ 1.597E-07, 1.410E-07, 1.331E-07, 1.375E-07, 1.519E-07, 1.733E-07,
     $ 1.908E-07, 1.961E-07, 1.947E-07, 1.859E-07, 1.661E-07, 1.450E-07,
     $ 1.288E-07, 1.119E-07, 9.459E-08, 8.138E-08, 7.064E-08, 6.324E-08,
     $ 6.243E-08, 6.973E-08, 8.368E-08, 1.030E-07, 1.254E-07, 1.511E-07,
     $ 1.770E-07, 2.001E-07, 2.167E-07, 2.267E-07, 2.262E-07, 2.199E-07,
     $ 2.148E-07, 2.179E-07, 2.274E-07, 2.478E-07, 2.713E-07, 2.916E-07,
     $ 3.042E-07, 3.143E-07, 3.200E-07, 3.242E-07, 3.198E-07, 3.060E-07,
     $ 2.843E-07, 2.561E-07, 2.289E-07, 2.180E-07, 2.269E-07, 2.438E-07,
     $ 2.581E-07, 2.601E-07, 2.416E-07, 2.027E-07, 1.576E-07, 1.201E-07,
     $ 9.900E-08, 9.782E-08, 1.111E-07, 1.334E-07, 1.569E-07, 1.748E-07,
     $ 1.870E-07, 2.033E-07, 2.225E-07, 2.422E-07, 2.594E-07, 2.686E-07,
     $ 2.591E-07, 2.319E-07, 1.988E-07, 1.712E-07, 1.554E-07, 1.547E-07,
     $ 1.653E-07, 1.792E-07, 1.906E-07, 1.969E-07, 1.994E-07, 2.040E-07,
     $ 2.151E-07, 2.306E-07, 2.422E-07, 2.491E-07, 2.543E-07, 2.511E-07,
     $ 2.387E-07, 2.279E-07, 2.235E-07, 2.153E-07/
C                                                                       
C     36901 TO 37000 CM-1 DATA.                                         
      DATA (SUN(I),I= 36901, 37000)/                                    
     $ 2.033E-07, 1.907E-07, 1.778E-07, 1.574E-07, 1.366E-07, 1.219E-07,
     $ 1.146E-07, 1.142E-07, 1.259E-07, 1.464E-07, 1.691E-07, 1.905E-07,
     $ 2.093E-07, 2.201E-07, 2.235E-07, 2.274E-07, 2.309E-07, 2.306E-07,
     $ 2.290E-07, 2.260E-07, 2.193E-07, 2.157E-07, 2.188E-07, 2.285E-07,
     $ 2.399E-07, 2.461E-07, 2.425E-07, 2.264E-07, 2.037E-07, 1.841E-07,
     $ 1.687E-07, 1.544E-07, 1.454E-07, 1.400E-07, 1.383E-07, 1.476E-07,
     $ 1.699E-07, 1.949E-07, 2.124E-07, 2.147E-07, 2.000E-07, 1.750E-07,
     $ 1.533E-07, 1.425E-07, 1.494E-07, 1.679E-07, 1.873E-07, 2.019E-07,
     $ 2.171E-07, 2.234E-07, 2.232E-07, 2.289E-07, 2.398E-07, 2.484E-07,
     $ 2.647E-07, 2.905E-07, 3.106E-07, 3.253E-07, 3.340E-07, 3.288E-07,
     $ 3.133E-07, 3.034E-07, 2.975E-07, 2.957E-07, 3.052E-07, 3.158E-07,
     $ 3.135E-07, 2.978E-07, 2.718E-07, 2.319E-07, 1.894E-07, 1.569E-07,
     $ 1.378E-07, 1.299E-07, 1.335E-07, 1.430E-07, 1.538E-07, 1.659E-07,
     $ 1.828E-07, 2.059E-07, 2.332E-07, 2.600E-07, 2.860E-07, 3.066E-07,
     $ 3.160E-07, 3.174E-07, 3.127E-07, 2.963E-07, 2.716E-07, 2.480E-07,
     $ 2.231E-07, 1.980E-07, 1.825E-07, 1.798E-07, 1.794E-07, 1.807E-07,
     $ 1.852E-07, 1.884E-07, 1.789E-07, 1.656E-07/
C                                                                       
C     37001 TO 37100 CM-1 DATA.                                         
      DATA (SUN(I),I= 37001, 37100)/                                    
     $ 1.555E-07, 1.465E-07, 1.384E-07, 1.453E-07, 1.635E-07, 1.811E-07,
     $ 1.967E-07, 2.073E-07, 2.012E-07, 1.793E-07, 1.591E-07, 1.488E-07,
     $ 1.509E-07, 1.687E-07, 2.036E-07, 2.430E-07, 2.768E-07, 3.025E-07,
     $ 3.216E-07, 3.317E-07, 3.313E-07, 3.298E-07, 3.333E-07, 3.402E-07,
     $ 3.443E-07, 3.486E-07, 3.454E-07, 3.273E-07, 2.980E-07, 2.696E-07,
     $ 2.445E-07, 2.234E-07, 2.130E-07, 2.064E-07, 1.967E-07, 1.848E-07,
     $ 1.734E-07, 1.582E-07, 1.459E-07, 1.374E-07, 1.328E-07, 1.310E-07,
     $ 1.331E-07, 1.367E-07, 1.454E-07, 1.532E-07, 1.541E-07, 1.521E-07,
     $ 1.506E-07, 1.439E-07, 1.378E-07, 1.439E-07, 1.576E-07, 1.734E-07,
     $ 1.936E-07, 2.111E-07, 2.156E-07, 2.111E-07, 2.006E-07, 1.846E-07,
     $ 1.732E-07, 1.709E-07, 1.722E-07, 1.783E-07, 1.879E-07, 1.948E-07,
     $ 2.002E-07, 2.134E-07, 2.276E-07, 2.381E-07, 2.434E-07, 2.411E-07,
     $ 2.206E-07, 1.892E-07, 1.605E-07, 1.387E-07, 1.228E-07, 1.174E-07,
     $ 1.208E-07, 1.245E-07, 1.287E-07, 1.341E-07, 1.382E-07, 1.381E-07,
     $ 1.349E-07, 1.251E-07, 1.127E-07, 1.021E-07, 9.492E-08, 9.053E-08,
     $ 9.020E-08, 9.514E-08, 1.050E-07, 1.214E-07, 1.425E-07, 1.644E-07,
     $ 1.801E-07, 1.852E-07, 1.801E-07, 1.722E-07/
C                                                                       
C     37101 TO 37200 CM-1 DATA.                                         
      DATA (SUN(I),I= 37101, 37200)/                                    
     $ 1.695E-07, 1.736E-07, 1.897E-07, 2.133E-07, 2.363E-07, 2.518E-07,
     $ 2.621E-07, 2.627E-07, 2.549E-07, 2.440E-07, 2.325E-07, 2.219E-07,
     $ 2.174E-07, 2.217E-07, 2.302E-07, 2.413E-07, 2.508E-07, 2.522E-07,
     $ 2.447E-07, 2.295E-07, 2.098E-07, 1.896E-07, 1.710E-07, 1.513E-07,
     $ 1.368E-07, 1.318E-07, 1.349E-07, 1.470E-07, 1.689E-07, 1.940E-07,
     $ 2.137E-07, 2.258E-07, 2.317E-07, 2.366E-07, 2.376E-07, 2.369E-07,
     $ 2.371E-07, 2.370E-07, 2.297E-07, 2.229E-07, 2.175E-07, 2.118E-07,
     $ 2.047E-07, 1.991E-07, 1.891E-07, 1.766E-07, 1.619E-07, 1.475E-07,
     $ 1.365E-07, 1.359E-07, 1.432E-07, 1.562E-07, 1.715E-07, 1.855E-07,
     $ 1.922E-07, 1.910E-07, 1.861E-07, 1.790E-07, 1.700E-07, 1.602E-07,
     $ 1.500E-07, 1.346E-07, 1.207E-07, 1.118E-07, 1.109E-07, 1.170E-07,
     $ 1.298E-07, 1.425E-07, 1.498E-07, 1.448E-07, 1.335E-07, 1.247E-07,
     $ 1.198E-07, 1.228E-07, 1.400E-07, 1.651E-07, 1.876E-07, 2.061E-07,
     $ 2.186E-07, 2.216E-07, 2.175E-07, 2.125E-07, 2.055E-07, 1.948E-07,
     $ 1.859E-07, 1.797E-07, 1.722E-07, 1.648E-07, 1.607E-07, 1.539E-07,
     $ 1.440E-07, 1.394E-07, 1.453E-07, 1.590E-07, 1.792E-07, 2.027E-07,
     $ 2.235E-07, 2.347E-07, 2.338E-07, 2.246E-07/
C                                                                       
C     37201 TO 37300 CM-1 DATA.                                         
      DATA (SUN(I),I= 37201, 37300)/                                    
     $ 2.137E-07, 2.016E-07, 1.929E-07, 1.923E-07, 1.988E-07, 2.072E-07,
     $ 2.133E-07, 2.145E-07, 2.117E-07, 2.083E-07, 2.077E-07, 2.130E-07,
     $ 2.208E-07, 2.281E-07, 2.338E-07, 2.332E-07, 2.253E-07, 2.192E-07,
     $ 2.164E-07, 2.132E-07, 2.143E-07, 2.214E-07, 2.268E-07, 2.300E-07,
     $ 2.337E-07, 2.338E-07, 2.277E-07, 2.197E-07, 2.090E-07, 1.949E-07,
     $ 1.795E-07, 1.653E-07, 1.505E-07, 1.392E-07, 1.311E-07, 1.277E-07,
     $ 1.346E-07, 1.525E-07, 1.747E-07, 1.998E-07, 2.223E-07, 2.293E-07,
     $ 2.190E-07, 1.956E-07, 1.661E-07, 1.397E-07, 1.260E-07, 1.280E-07,
     $ 1.448E-07, 1.685E-07, 1.907E-07, 2.084E-07, 2.199E-07, 2.230E-07,
     $ 2.208E-07, 2.152E-07, 2.052E-07, 1.900E-07, 1.725E-07, 1.576E-07,
     $ 1.517E-07, 1.559E-07, 1.691E-07, 1.895E-07, 2.115E-07, 2.266E-07,
     $ 2.338E-07, 2.342E-07, 2.297E-07, 2.213E-07, 2.124E-07, 2.056E-07,
     $ 2.041E-07, 2.072E-07, 2.107E-07, 2.117E-07, 2.073E-07, 1.969E-07,
     $ 1.806E-07, 1.671E-07, 1.621E-07, 1.698E-07, 1.882E-07, 2.131E-07,
     $ 2.352E-07, 2.486E-07, 2.496E-07, 2.388E-07, 2.211E-07, 2.052E-07,
     $ 1.961E-07, 1.907E-07, 1.881E-07, 1.862E-07, 1.793E-07, 1.641E-07,
     $ 1.507E-07, 1.449E-07, 1.456E-07, 1.532E-07/
C                                                                       
C     37301 TO 37400 CM-1 DATA.                                         
      DATA (SUN(I),I= 37301, 37400)/                                    
     $ 1.680E-07, 1.818E-07, 1.880E-07, 1.916E-07, 1.937E-07, 1.964E-07,
     $ 2.009E-07, 2.029E-07, 1.977E-07, 1.866E-07, 1.662E-07, 1.401E-07,
     $ 1.191E-07, 1.038E-07, 9.304E-08, 9.146E-08, 9.565E-08, 9.835E-08,
     $ 1.051E-07, 1.207E-07, 1.394E-07, 1.594E-07, 1.810E-07, 1.958E-07,
     $ 1.979E-07, 1.904E-07, 1.809E-07, 1.729E-07, 1.660E-07, 1.631E-07,
     $ 1.689E-07, 1.777E-07, 1.881E-07, 2.054E-07, 2.235E-07, 2.314E-07,
     $ 2.266E-07, 2.085E-07, 1.779E-07, 1.436E-07, 1.150E-07, 9.690E-08,
     $ 9.468E-08, 1.081E-07, 1.313E-07, 1.603E-07, 1.920E-07, 2.213E-07,
     $ 2.459E-07, 2.672E-07, 2.853E-07, 3.000E-07, 3.041E-07, 2.940E-07,
     $ 2.714E-07, 2.420E-07, 2.126E-07, 1.935E-07, 1.898E-07, 1.990E-07,
     $ 2.144E-07, 2.274E-07, 2.390E-07, 2.480E-07, 2.508E-07, 2.494E-07,
     $ 2.499E-07, 2.468E-07, 2.389E-07, 2.362E-07, 2.404E-07, 2.447E-07,
     $ 2.465E-07, 2.503E-07, 2.519E-07, 2.476E-07, 2.425E-07, 2.487E-07,
     $ 2.623E-07, 2.739E-07, 2.829E-07, 2.912E-07, 2.873E-07, 2.731E-07,
     $ 2.636E-07, 2.604E-07, 2.543E-07, 2.497E-07, 2.452E-07, 2.316E-07,
     $ 2.127E-07, 1.971E-07, 1.823E-07, 1.672E-07, 1.552E-07, 1.464E-07,
     $ 1.405E-07, 1.368E-07, 1.366E-07, 1.407E-07/
C                                                                       
C     37401 TO 37500 CM-1 DATA.                                         
      DATA (SUN(I),I= 37401, 37500)/                                    
     $ 1.429E-07, 1.375E-07, 1.294E-07, 1.209E-07, 1.089E-07, 9.730E-08,
     $ 9.198E-08, 9.202E-08, 9.434E-08, 9.855E-08, 1.035E-07, 1.061E-07,
     $ 1.053E-07, 1.066E-07, 1.138E-07, 1.279E-07, 1.528E-07, 1.853E-07,
     $ 2.176E-07, 2.480E-07, 2.758E-07, 2.954E-07, 3.074E-07, 3.141E-07,
     $ 3.148E-07, 3.045E-07, 2.853E-07, 2.652E-07, 2.481E-07, 2.323E-07,
     $ 2.255E-07, 2.286E-07, 2.317E-07, 2.298E-07, 2.258E-07, 2.157E-07,
     $ 2.001E-07, 1.855E-07, 1.743E-07, 1.658E-07, 1.608E-07, 1.581E-07,
     $ 1.522E-07, 1.417E-07, 1.276E-07, 1.128E-07, 1.007E-07, 9.797E-08,
     $ 1.058E-07, 1.214E-07, 1.431E-07, 1.642E-07, 1.767E-07, 1.835E-07,
     $ 1.868E-07, 1.801E-07, 1.703E-07, 1.658E-07, 1.643E-07, 1.678E-07,
     $ 1.835E-07, 2.048E-07, 2.218E-07, 2.293E-07, 2.245E-07, 2.080E-07,
     $ 1.834E-07, 1.588E-07, 1.446E-07, 1.459E-07, 1.600E-07, 1.887E-07,
     $ 2.281E-07, 2.679E-07, 2.961E-07, 3.103E-07, 3.089E-07, 2.959E-07,
     $ 2.762E-07, 2.547E-07, 2.324E-07, 2.095E-07, 1.811E-07, 1.485E-07,
     $ 1.196E-07, 9.825E-08, 8.529E-08, 8.239E-08, 8.547E-08, 9.301E-08,
     $ 1.048E-07, 1.174E-07, 1.304E-07, 1.441E-07, 1.511E-07, 1.494E-07,
     $ 1.428E-07, 1.372E-07, 1.398E-07, 1.530E-07/
C                                                                       
C     37501 TO 37600 CM-1 DATA.                                         
      DATA (SUN(I),I= 37501, 37600)/                                    
     $ 1.725E-07, 1.985E-07, 2.238E-07, 2.375E-07, 2.406E-07, 2.407E-07,
     $ 2.356E-07, 2.248E-07, 2.193E-07, 2.232E-07, 2.307E-07, 2.371E-07,
     $ 2.430E-07, 2.403E-07, 2.253E-07, 2.045E-07, 1.880E-07, 1.824E-07,
     $ 1.899E-07, 2.032E-07, 2.141E-07, 2.153E-07, 2.009E-07, 1.753E-07,
     $ 1.511E-07, 1.326E-07, 1.209E-07, 1.157E-07, 1.127E-07, 1.047E-07,
     $ 9.267E-08, 8.171E-08, 7.625E-08, 7.738E-08, 8.673E-08, 1.053E-07,
     $ 1.272E-07, 1.494E-07, 1.744E-07, 2.029E-07, 2.269E-07, 2.470E-07,
     $ 2.585E-07, 2.590E-07, 2.483E-07, 2.329E-07, 2.155E-07, 2.047E-07,
     $ 1.987E-07, 1.920E-07, 1.864E-07, 1.843E-07, 1.789E-07, 1.682E-07,
     $ 1.590E-07, 1.506E-07, 1.388E-07, 1.260E-07, 1.190E-07, 1.164E-07,
     $ 1.148E-07, 1.150E-07, 1.211E-07, 1.341E-07, 1.544E-07, 1.824E-07,
     $ 2.160E-07, 2.453E-07, 2.641E-07, 2.704E-07, 2.660E-07, 2.508E-07,
     $ 2.295E-07, 2.052E-07, 1.840E-07, 1.692E-07, 1.631E-07, 1.703E-07,
     $ 1.899E-07, 2.128E-07, 2.312E-07, 2.462E-07, 2.525E-07, 2.506E-07,
     $ 2.447E-07, 2.397E-07, 2.339E-07, 2.306E-07, 2.275E-07, 2.251E-07,
     $ 2.248E-07, 2.253E-07, 2.224E-07, 2.185E-07, 2.148E-07, 2.102E-07,
     $ 2.053E-07, 2.011E-07, 1.969E-07, 1.870E-07/
C                                                                       
C     37601 TO 37700 CM-1 DATA.                                         
      DATA (SUN(I),I= 37601, 37700)/                                    
     $ 1.715E-07, 1.567E-07, 1.462E-07, 1.409E-07, 1.434E-07, 1.500E-07,
     $ 1.563E-07, 1.614E-07, 1.651E-07, 1.718E-07, 1.866E-07, 2.054E-07,
     $ 2.265E-07, 2.467E-07, 2.570E-07, 2.539E-07, 2.433E-07, 2.272E-07,
     $ 2.110E-07, 2.034E-07, 2.069E-07, 2.171E-07, 2.296E-07, 2.399E-07,
     $ 2.424E-07, 2.370E-07, 2.293E-07, 2.260E-07, 2.299E-07, 2.402E-07,
     $ 2.498E-07, 2.506E-07, 2.389E-07, 2.140E-07, 1.841E-07, 1.616E-07,
     $ 1.489E-07, 1.441E-07, 1.498E-07, 1.603E-07, 1.660E-07, 1.695E-07,
     $ 1.748E-07, 1.810E-07, 1.897E-07, 2.058E-07, 2.281E-07, 2.503E-07,
     $ 2.685E-07, 2.831E-07, 2.920E-07, 2.941E-07, 2.959E-07, 2.991E-07,
     $ 2.987E-07, 2.959E-07, 2.932E-07, 2.865E-07, 2.753E-07, 2.624E-07,
     $ 2.462E-07, 2.267E-07, 2.087E-07, 1.965E-07, 1.930E-07, 1.996E-07,
     $ 2.108E-07, 2.202E-07, 2.215E-07, 2.104E-07, 1.894E-07, 1.668E-07,
     $ 1.490E-07, 1.393E-07, 1.405E-07, 1.491E-07, 1.577E-07, 1.642E-07,
     $ 1.723E-07, 1.814E-07, 1.924E-07, 2.090E-07, 2.276E-07, 2.380E-07,
     $ 2.373E-07, 2.264E-07, 2.087E-07, 1.889E-07, 1.754E-07, 1.703E-07,
     $ 1.700E-07, 1.690E-07, 1.657E-07, 1.602E-07, 1.555E-07, 1.532E-07,
     $ 1.534E-07, 1.543E-07, 1.579E-07, 1.632E-07/
C                                                                       
C     37701 TO 37800 CM-1 DATA.                                         
      DATA (SUN(I),I= 37701, 37800)/                                    
     $ 1.697E-07, 1.742E-07, 1.772E-07, 1.725E-07, 1.588E-07, 1.424E-07,
     $ 1.331E-07, 1.327E-07, 1.424E-07, 1.582E-07, 1.720E-07, 1.763E-07,
     $ 1.704E-07, 1.563E-07, 1.417E-07, 1.316E-07, 1.270E-07, 1.308E-07,
     $ 1.438E-07, 1.603E-07, 1.754E-07, 1.895E-07, 1.960E-07, 1.914E-07,
     $ 1.793E-07, 1.663E-07, 1.554E-07, 1.497E-07, 1.503E-07, 1.542E-07,
     $ 1.568E-07, 1.551E-07, 1.510E-07, 1.431E-07, 1.352E-07, 1.303E-07,
     $ 1.291E-07, 1.292E-07, 1.309E-07, 1.310E-07, 1.280E-07, 1.206E-07,
     $ 1.115E-07, 1.047E-07, 1.009E-07, 9.848E-08, 9.817E-08, 9.862E-08,
     $ 9.806E-08, 9.893E-08, 1.039E-07, 1.140E-07, 1.286E-07, 1.442E-07,
     $ 1.553E-07, 1.591E-07, 1.571E-07, 1.497E-07, 1.416E-07, 1.372E-07,
     $ 1.392E-07, 1.454E-07, 1.556E-07, 1.676E-07, 1.806E-07, 1.928E-07,
     $ 2.041E-07, 2.113E-07, 2.117E-07, 2.070E-07, 1.984E-07, 1.837E-07,
     $ 1.676E-07, 1.559E-07, 1.443E-07, 1.325E-07, 1.256E-07, 1.241E-07,
     $ 1.261E-07, 1.330E-07, 1.442E-07, 1.572E-07, 1.691E-07, 1.795E-07,
     $ 1.907E-07, 2.003E-07, 2.042E-07, 2.052E-07, 2.028E-07, 1.945E-07,
     $ 1.856E-07, 1.808E-07, 1.779E-07, 1.774E-07, 1.794E-07, 1.813E-07,
     $ 1.855E-07, 1.903E-07, 1.950E-07, 2.030E-07/
C                                                                       
C     37801 TO 37900 CM-1 DATA.                                         
      DATA (SUN(I),I= 37801, 37900)/                                    
     $ 2.142E-07, 2.203E-07, 2.212E-07, 2.186E-07, 2.096E-07, 1.934E-07,
     $ 1.755E-07, 1.624E-07, 1.549E-07, 1.538E-07, 1.640E-07, 1.877E-07,
     $ 2.166E-07, 2.438E-07, 2.678E-07, 2.843E-07, 2.894E-07, 2.881E-07,
     $ 2.854E-07, 2.828E-07, 2.808E-07, 2.799E-07, 2.800E-07, 2.818E-07,
     $ 2.838E-07, 2.859E-07, 2.896E-07, 2.955E-07, 3.014E-07, 3.067E-07,
     $ 3.077E-07, 3.019E-07, 2.868E-07, 2.639E-07, 2.357E-07, 2.128E-07,
     $ 1.990E-07, 1.929E-07, 1.920E-07, 1.932E-07, 1.875E-07, 1.723E-07,
     $ 1.531E-07, 1.364E-07, 1.281E-07, 1.295E-07, 1.380E-07, 1.479E-07,
     $ 1.552E-07, 1.573E-07, 1.561E-07, 1.575E-07, 1.650E-07, 1.761E-07,
     $ 1.866E-07, 1.941E-07, 1.963E-07, 1.930E-07, 1.860E-07, 1.773E-07,
     $ 1.698E-07, 1.649E-07, 1.618E-07, 1.611E-07, 1.626E-07, 1.652E-07,
     $ 1.684E-07, 1.721E-07, 1.740E-07, 1.753E-07, 1.772E-07, 1.753E-07,
     $ 1.710E-07, 1.721E-07, 1.787E-07, 1.841E-07, 1.911E-07, 1.990E-07,
     $ 2.012E-07, 1.989E-07, 2.014E-07, 2.072E-07, 2.150E-07, 2.243E-07,
     $ 2.336E-07, 2.400E-07, 2.470E-07, 2.539E-07, 2.604E-07, 2.618E-07,
     $ 2.547E-07, 2.416E-07, 2.280E-07, 2.144E-07, 2.076E-07, 2.131E-07,
     $ 2.205E-07, 2.192E-07, 2.142E-07, 2.074E-07/
C                                                                       
C     37901 TO 38000 CM-1 DATA.                                         
      DATA (SUN(I),I= 37901, 38000)/                                    
     $ 1.949E-07, 1.857E-07, 1.884E-07, 1.957E-07, 2.004E-07, 2.015E-07,
     $ 1.945E-07, 1.791E-07, 1.610E-07, 1.449E-07, 1.326E-07, 1.271E-07,
     $ 1.280E-07, 1.314E-07, 1.342E-07, 1.390E-07, 1.465E-07, 1.550E-07,
     $ 1.660E-07, 1.812E-07, 1.938E-07, 2.003E-07, 1.992E-07, 1.882E-07,
     $ 1.689E-07, 1.471E-07, 1.235E-07, 1.031E-07, 9.088E-08, 8.634E-08,
     $ 8.623E-08, 9.006E-08, 9.574E-08, 1.014E-07, 1.065E-07, 1.136E-07,
     $ 1.227E-07, 1.316E-07, 1.371E-07, 1.381E-07, 1.351E-07, 1.310E-07,
     $ 1.289E-07, 1.300E-07, 1.348E-07, 1.399E-07, 1.426E-07, 1.411E-07,
     $ 1.368E-07, 1.306E-07, 1.256E-07, 1.210E-07, 1.177E-07, 1.153E-07,
     $ 1.137E-07, 1.111E-07, 1.089E-07, 1.067E-07, 1.046E-07, 1.032E-07,
     $ 1.029E-07, 1.032E-07, 1.036E-07, 1.021E-07, 9.668E-08, 8.881E-08,
     $ 7.984E-08, 7.125E-08, 6.522E-08, 6.232E-08, 6.232E-08, 6.315E-08,
     $ 6.302E-08, 6.185E-08, 6.047E-08, 5.786E-08, 5.543E-08, 5.469E-08,
     $ 5.539E-08, 5.676E-08, 5.824E-08, 5.881E-08, 5.764E-08, 5.427E-08,
     $ 4.916E-08, 4.335E-08, 3.789E-08, 3.328E-08, 3.023E-08, 2.837E-08,
     $ 2.714E-08, 2.631E-08, 2.601E-08, 2.586E-08, 2.608E-08, 2.760E-08,
     $ 3.025E-08, 3.366E-08, 3.780E-08, 4.268E-08/
C                                                                       
C     38001 TO 38100 CM-1 DATA.                                         
      DATA (SUN(I),I= 38001, 38100)/                                    
     $ 4.759E-08, 5.246E-08, 5.683E-08, 6.039E-08, 6.286E-08, 6.347E-08,
     $ 6.244E-08, 6.140E-08, 6.088E-08, 6.063E-08, 6.212E-08, 6.506E-08,
     $ 6.658E-08, 6.654E-08, 6.672E-08, 6.703E-08, 6.757E-08, 7.091E-08,
     $ 7.604E-08, 8.064E-08, 8.403E-08, 8.601E-08, 8.559E-08, 8.390E-08,
     $ 8.174E-08, 7.864E-08, 7.481E-08, 7.031E-08, 6.495E-08, 5.884E-08,
     $ 5.278E-08, 4.672E-08, 4.112E-08, 3.627E-08, 3.270E-08, 3.098E-08,
     $ 3.178E-08, 3.480E-08, 3.976E-08, 4.617E-08, 5.273E-08, 5.828E-08,
     $ 6.292E-08, 6.705E-08, 7.057E-08, 7.442E-08, 7.935E-08, 8.348E-08,
     $ 8.517E-08, 8.501E-08, 8.293E-08, 7.962E-08, 7.798E-08, 7.953E-08,
     $ 8.277E-08, 8.611E-08, 8.773E-08, 8.634E-08, 8.162E-08, 7.561E-08,
     $ 7.068E-08, 6.799E-08, 6.745E-08, 6.913E-08, 7.100E-08, 7.149E-08,
     $ 7.009E-08, 6.687E-08, 6.182E-08, 5.613E-08, 5.037E-08, 4.547E-08,
     $ 4.173E-08, 3.913E-08, 3.803E-08, 3.878E-08, 4.097E-08, 4.472E-08,
     $ 5.033E-08, 5.712E-08, 6.479E-08, 7.277E-08, 7.964E-08, 8.452E-08,
     $ 8.772E-08, 8.946E-08, 9.076E-08, 9.364E-08, 9.935E-08, 1.075E-07,
     $ 1.170E-07, 1.254E-07, 1.298E-07, 1.294E-07, 1.256E-07, 1.204E-07,
     $ 1.163E-07, 1.150E-07, 1.144E-07, 1.123E-07/
C                                                                       
C     38101 TO 38200 CM-1 DATA.                                         
      DATA (SUN(I),I= 38101, 38200)/                                    
     $ 1.053E-07, 9.360E-08, 7.984E-08, 6.743E-08, 5.958E-08, 5.978E-08,
     $ 6.593E-08, 7.507E-08, 8.545E-08, 9.363E-08, 9.608E-08, 9.600E-08,
     $ 9.590E-08, 9.702E-08, 1.012E-07, 1.108E-07, 1.218E-07, 1.307E-07,
     $ 1.353E-07, 1.344E-07, 1.286E-07, 1.201E-07, 1.102E-07, 9.993E-08,
     $ 9.102E-08, 8.141E-08, 7.128E-08, 6.163E-08, 5.315E-08, 4.548E-08,
     $ 4.056E-08, 3.901E-08, 4.126E-08, 4.659E-08, 5.506E-08, 6.553E-08,
     $ 7.685E-08, 8.746E-08, 9.703E-08, 1.038E-07, 1.066E-07, 1.047E-07,
     $ 9.940E-08, 9.189E-08, 8.342E-08, 7.578E-08, 7.068E-08, 6.735E-08,
     $ 6.486E-08, 6.387E-08, 6.530E-08, 6.840E-08, 7.258E-08, 7.875E-08,
     $ 8.710E-08, 9.512E-08, 1.022E-07, 1.098E-07, 1.158E-07, 1.186E-07,
     $ 1.205E-07, 1.223E-07, 1.218E-07, 1.202E-07, 1.185E-07, 1.138E-07,
     $ 1.056E-07, 9.686E-08, 8.796E-08, 7.974E-08, 7.402E-08, 7.103E-08,
     $ 6.916E-08, 6.860E-08, 6.869E-08, 6.945E-08, 7.085E-08, 7.228E-08,
     $ 7.296E-08, 7.234E-08, 6.975E-08, 6.559E-08, 6.046E-08, 5.483E-08,
     $ 4.972E-08, 4.560E-08, 4.238E-08, 3.968E-08, 3.723E-08, 3.481E-08,
     $ 3.280E-08, 3.161E-08, 3.234E-08, 3.505E-08, 3.922E-08, 4.439E-08,
     $ 5.048E-08, 5.666E-08, 6.271E-08, 6.862E-08/
C                                                                       
C     38201 TO 38300 CM-1 DATA.                                         
      DATA (SUN(I),I= 38201, 38300)/                                    
     $ 7.467E-08, 8.012E-08, 8.514E-08, 8.965E-08, 9.374E-08, 9.574E-08,
     $ 9.594E-08, 9.414E-08, 9.116E-08, 8.748E-08, 8.512E-08, 8.341E-08,
     $ 8.250E-08, 8.156E-08, 8.084E-08, 8.044E-08, 8.187E-08, 8.472E-08,
     $ 8.901E-08, 9.290E-08, 9.522E-08, 9.564E-08, 9.463E-08, 9.303E-08,
     $ 9.289E-08, 9.383E-08, 9.382E-08, 9.286E-08, 9.066E-08, 8.622E-08,
     $ 8.106E-08, 7.705E-08, 7.367E-08, 7.018E-08, 6.690E-08, 6.304E-08,
     $ 5.879E-08, 5.485E-08, 5.152E-08, 4.872E-08, 4.596E-08, 4.248E-08,
     $ 3.836E-08, 3.411E-08, 3.009E-08, 2.759E-08, 2.695E-08, 2.849E-08,
     $ 3.145E-08, 3.540E-08, 3.951E-08, 4.397E-08, 4.799E-08, 5.214E-08,
     $ 5.626E-08, 6.019E-08, 6.243E-08, 6.261E-08, 6.084E-08, 5.773E-08,
     $ 5.364E-08, 5.057E-08, 4.924E-08, 4.860E-08, 4.797E-08, 4.714E-08,
     $ 4.516E-08, 4.191E-08, 3.839E-08, 3.503E-08, 3.220E-08, 2.999E-08,
     $ 2.877E-08, 2.827E-08, 2.846E-08, 2.923E-08, 3.074E-08, 3.251E-08,
     $ 3.441E-08, 3.658E-08, 3.863E-08, 3.997E-08, 4.063E-08, 4.110E-08,
     $ 4.152E-08, 4.225E-08, 4.396E-08, 4.668E-08, 5.028E-08, 5.377E-08,
     $ 5.706E-08, 6.027E-08, 6.375E-08, 6.657E-08, 6.878E-08, 6.994E-08,
     $ 7.088E-08, 7.136E-08, 7.248E-08, 7.469E-08/
C                                                                       
C     38301 TO 38400 CM-1 DATA.                                         
      DATA (SUN(I),I= 38301, 38400)/                                    
     $ 7.822E-08, 8.161E-08, 8.457E-08, 8.592E-08, 8.529E-08, 8.362E-08,
     $ 8.075E-08, 7.726E-08, 7.507E-08, 7.494E-08, 7.517E-08, 7.598E-08,
     $ 7.653E-08, 7.558E-08, 7.337E-08, 7.076E-08, 6.861E-08, 6.725E-08,
     $ 6.620E-08, 6.476E-08, 6.409E-08, 6.374E-08, 6.349E-08, 6.435E-08,
     $ 6.685E-08, 6.885E-08, 7.002E-08, 7.125E-08, 7.169E-08, 7.062E-08,
     $ 6.934E-08, 6.808E-08, 6.568E-08, 6.260E-08, 5.982E-08, 5.704E-08,
     $ 5.400E-08, 5.094E-08, 4.773E-08, 4.386E-08, 3.941E-08, 3.465E-08,
     $ 3.048E-08, 2.736E-08, 2.519E-08, 2.406E-08, 2.433E-08, 2.558E-08,
     $ 2.700E-08, 2.886E-08, 3.131E-08, 3.395E-08, 3.627E-08, 3.915E-08,
     $ 4.249E-08, 4.558E-08, 4.843E-08, 5.170E-08, 5.437E-08, 5.560E-08,
     $ 5.537E-08, 5.323E-08, 4.854E-08, 4.272E-08, 3.752E-08, 3.396E-08,
     $ 3.298E-08, 3.536E-08, 4.068E-08, 4.754E-08, 5.450E-08, 6.144E-08,
     $ 6.723E-08, 7.052E-08, 7.138E-08, 7.108E-08, 6.912E-08, 6.741E-08,
     $ 6.790E-08, 7.152E-08, 7.747E-08, 8.584E-08, 9.471E-08, 1.023E-07,
     $ 1.065E-07, 1.073E-07, 1.044E-07, 9.817E-08, 8.907E-08, 7.914E-08,
     $ 7.046E-08, 6.382E-08, 5.956E-08, 5.821E-08, 5.970E-08, 6.271E-08,
     $ 6.751E-08, 7.446E-08, 8.301E-08, 9.167E-08/
C                                                                       
C     38401 TO 38500 CM-1 DATA.                                         
      DATA (SUN(I),I= 38401, 38500)/                                    
     $ 9.918E-08, 1.040E-07, 1.059E-07, 1.055E-07, 1.035E-07, 1.012E-07,
     $ 9.915E-08, 9.637E-08, 9.205E-08, 8.782E-08, 8.411E-08, 8.165E-08,
     $ 8.196E-08, 8.571E-08, 9.108E-08, 9.644E-08, 1.007E-07, 1.030E-07,
     $ 1.036E-07, 1.027E-07, 1.011E-07, 9.895E-08, 9.649E-08, 9.328E-08,
     $ 8.960E-08, 8.574E-08, 8.267E-08, 8.087E-08, 7.940E-08, 7.836E-08,
     $ 7.738E-08, 7.588E-08, 7.376E-08, 7.184E-08, 7.004E-08, 6.858E-08,
     $ 6.713E-08, 6.544E-08, 6.345E-08, 6.098E-08, 5.781E-08, 5.447E-08,
     $ 5.075E-08, 4.693E-08, 4.343E-08, 4.069E-08, 3.838E-08, 3.701E-08,
     $ 3.600E-08, 3.487E-08, 3.325E-08, 3.130E-08, 2.868E-08, 2.590E-08,
     $ 2.340E-08, 2.153E-08, 2.042E-08, 2.025E-08, 2.081E-08, 2.185E-08,
     $ 2.308E-08, 2.417E-08, 2.518E-08, 2.609E-08, 2.699E-08, 2.781E-08,
     $ 2.868E-08, 2.928E-08, 2.945E-08, 2.899E-08, 2.790E-08, 2.620E-08,
     $ 2.461E-08, 2.337E-08, 2.293E-08, 2.380E-08, 2.575E-08, 2.807E-08,
     $ 3.067E-08, 3.333E-08, 3.576E-08, 3.853E-08, 4.180E-08, 4.555E-08,
     $ 4.902E-08, 5.207E-08, 5.433E-08, 5.608E-08, 5.687E-08, 5.789E-08,
     $ 5.939E-08, 6.156E-08, 6.400E-08, 6.755E-08, 7.143E-08, 7.494E-08,
     $ 7.678E-08, 7.694E-08, 7.532E-08, 7.229E-08/
C                                                                       
C     38501 TO 38600 CM-1 DATA.                                         
      DATA (SUN(I),I= 38501, 38600)/                                    
     $ 6.940E-08, 6.896E-08, 7.107E-08, 7.453E-08, 7.880E-08, 8.188E-08,
     $ 8.238E-08, 8.114E-08, 7.892E-08, 7.626E-08, 7.502E-08, 7.526E-08,
     $ 7.590E-08, 7.754E-08, 8.016E-08, 8.192E-08, 8.319E-08, 8.507E-08,
     $ 8.783E-08, 9.111E-08, 9.510E-08, 9.920E-08, 1.011E-07, 9.968E-08,
     $ 9.590E-08, 9.142E-08, 8.606E-08, 8.106E-08, 7.719E-08, 7.437E-08,
     $ 7.171E-08, 6.945E-08, 6.792E-08, 6.625E-08, 6.323E-08, 5.864E-08,
     $ 5.301E-08, 4.657E-08, 4.004E-08, 3.431E-08, 2.997E-08, 2.739E-08,
     $ 2.711E-08, 2.955E-08, 3.374E-08, 3.920E-08, 4.545E-08, 5.117E-08,
     $ 5.514E-08, 5.799E-08, 6.041E-08, 6.165E-08, 6.236E-08, 6.452E-08,
     $ 6.893E-08, 7.344E-08, 7.939E-08, 8.763E-08, 9.484E-08, 9.891E-08,
     $ 1.030E-07, 1.074E-07, 1.097E-07, 1.120E-07, 1.158E-07, 1.175E-07,
     $ 1.141E-07, 1.069E-07, 9.570E-08, 8.126E-08, 6.644E-08, 5.381E-08,
     $ 4.451E-08, 3.961E-08, 3.808E-08, 4.006E-08, 4.560E-08, 5.336E-08,
     $ 6.180E-08, 7.029E-08, 7.719E-08, 8.183E-08, 8.498E-08, 8.655E-08,
     $ 8.754E-08, 8.841E-08, 8.941E-08, 9.061E-08, 9.240E-08, 9.425E-08,
     $ 9.714E-08, 1.010E-07, 1.041E-07, 1.079E-07, 1.132E-07, 1.200E-07,
     $ 1.264E-07, 1.318E-07, 1.342E-07, 1.347E-07/
C                                                                       
C     38601 TO 38700 CM-1 DATA.                                         
      DATA (SUN(I),I= 38601, 38700)/                                    
     $ 1.332E-07, 1.327E-07, 1.361E-07, 1.444E-07, 1.537E-07, 1.619E-07,
     $ 1.669E-07, 1.681E-07, 1.648E-07, 1.583E-07, 1.496E-07, 1.399E-07,
     $ 1.285E-07, 1.182E-07, 1.100E-07, 1.053E-07, 1.037E-07, 1.044E-07,
     $ 1.033E-07, 9.953E-08, 9.202E-08, 8.158E-08, 7.054E-08, 6.127E-08,
     $ 5.447E-08, 5.125E-08, 5.194E-08, 5.555E-08, 6.216E-08, 7.163E-08,
     $ 8.195E-08, 9.141E-08, 9.862E-08, 1.018E-07, 1.010E-07, 9.700E-08,
     $ 9.035E-08, 8.280E-08, 7.691E-08, 7.318E-08, 7.217E-08, 7.373E-08,
     $ 7.608E-08, 7.760E-08, 7.793E-08, 7.636E-08, 7.302E-08, 6.862E-08,
     $ 6.386E-08, 5.838E-08, 5.303E-08, 4.830E-08, 4.461E-08, 4.117E-08,
     $ 3.828E-08, 3.553E-08, 3.260E-08, 2.967E-08, 2.748E-08, 2.630E-08,
     $ 2.619E-08, 2.732E-08, 2.933E-08, 3.209E-08, 3.494E-08, 3.795E-08,
     $ 4.111E-08, 4.478E-08, 4.894E-08, 5.377E-08, 5.928E-08, 6.525E-08,
     $ 7.078E-08, 7.483E-08, 7.709E-08, 7.613E-08, 7.200E-08, 6.638E-08,
     $ 6.035E-08, 5.434E-08, 5.085E-08, 5.030E-08, 5.084E-08, 5.302E-08,
     $ 5.891E-08, 6.753E-08, 7.776E-08, 9.034E-08, 1.037E-07, 1.145E-07,
     $ 1.229E-07, 1.301E-07, 1.339E-07, 1.344E-07, 1.330E-07, 1.277E-07,
     $ 1.183E-07, 1.076E-07, 9.758E-08, 8.876E-08/
C                                                                       
C     38701 TO 38800 CM-1 DATA.                                         
      DATA (SUN(I),I= 38701, 38800)/                                    
     $ 8.209E-08, 7.731E-08, 7.387E-08, 6.962E-08, 6.353E-08, 5.671E-08,
     $ 5.038E-08, 4.470E-08, 4.107E-08, 4.003E-08, 4.088E-08, 4.351E-08,
     $ 4.929E-08, 5.949E-08, 7.513E-08, 9.520E-08, 1.160E-07, 1.323E-07,
     $ 1.432E-07, 1.483E-07, 1.480E-07, 1.462E-07, 1.502E-07, 1.585E-07,
     $ 1.686E-07, 1.796E-07, 1.891E-07, 1.914E-07, 1.860E-07, 1.751E-07,
     $ 1.616E-07, 1.482E-07, 1.362E-07, 1.257E-07, 1.165E-07, 1.073E-07,
     $ 9.830E-08, 8.869E-08, 8.010E-08, 7.465E-08, 7.516E-08, 8.057E-08,
     $ 9.054E-08, 1.040E-07, 1.194E-07, 1.301E-07, 1.341E-07, 1.368E-07,
     $ 1.401E-07, 1.397E-07, 1.379E-07, 1.380E-07, 1.334E-07, 1.226E-07,
     $ 1.109E-07, 9.961E-08, 8.697E-08, 7.757E-08, 7.252E-08, 7.107E-08,
     $ 7.376E-08, 8.102E-08, 8.889E-08, 9.558E-08, 1.003E-07, 1.028E-07,
     $ 1.031E-07, 1.040E-07, 1.063E-07, 1.093E-07, 1.116E-07, 1.128E-07,
     $ 1.129E-07, 1.105E-07, 1.048E-07, 9.715E-08, 8.695E-08, 7.482E-08,
     $ 6.379E-08, 5.649E-08, 5.452E-08, 5.900E-08, 6.775E-08, 7.686E-08,
     $ 8.462E-08, 8.884E-08, 8.788E-08, 8.313E-08, 7.954E-08, 7.745E-08,
     $ 7.604E-08, 7.601E-08, 7.743E-08, 7.561E-08, 7.061E-08, 6.544E-08,
     $ 6.091E-08, 5.676E-08, 5.493E-08, 5.525E-08/
C                                                                       
C     38801 TO 38900 CM-1 DATA.                                         
      DATA (SUN(I),I= 38801, 38900)/                                    
     $ 5.504E-08, 5.297E-08, 4.884E-08, 4.294E-08, 3.644E-08, 3.080E-08,
     $ 2.755E-08, 2.720E-08, 2.950E-08, 3.372E-08, 3.899E-08, 4.378E-08,
     $ 4.751E-08, 4.989E-08, 5.095E-08, 5.117E-08, 5.086E-08, 5.013E-08,
     $ 4.943E-08, 4.772E-08, 4.509E-08, 4.398E-08, 4.608E-08, 5.095E-08,
     $ 5.884E-08, 6.909E-08, 7.818E-08, 8.290E-08, 8.288E-08, 8.019E-08,
     $ 7.586E-08, 7.236E-08, 7.292E-08, 7.838E-08, 8.611E-08, 9.618E-08,
     $ 1.071E-07, 1.146E-07, 1.182E-07, 1.197E-07, 1.169E-07, 1.116E-07,
     $ 1.089E-07, 1.092E-07, 1.103E-07, 1.127E-07, 1.153E-07, 1.171E-07,
     $ 1.170E-07, 1.156E-07, 1.158E-07, 1.153E-07, 1.103E-07, 1.029E-07,
     $ 9.537E-08, 8.619E-08, 7.917E-08, 7.693E-08, 7.739E-08, 7.814E-08,
     $ 7.848E-08, 7.640E-08, 7.308E-08, 7.121E-08, 7.410E-08, 8.205E-08,
     $ 9.340E-08, 1.044E-07, 1.117E-07, 1.128E-07, 1.073E-07, 9.852E-08,
     $ 9.116E-08, 8.725E-08, 8.662E-08, 9.080E-08, 9.860E-08, 1.060E-07,
     $ 1.099E-07, 1.096E-07, 1.034E-07, 9.131E-08, 7.714E-08, 6.602E-08,
     $ 5.885E-08, 5.617E-08, 5.728E-08, 5.978E-08, 6.165E-08, 6.437E-08,
     $ 7.002E-08, 8.069E-08, 9.642E-08, 1.152E-07, 1.324E-07, 1.435E-07,
     $ 1.458E-07, 1.384E-07, 1.233E-07, 1.067E-07/
C                                                                       
C     38901 TO 39000 CM-1 DATA.                                         
      DATA (SUN(I),I= 38901, 39000)/                                    
     $ 9.181E-08, 8.081E-08, 7.628E-08, 7.734E-08, 7.888E-08, 8.171E-08,
     $ 8.469E-08, 8.614E-08, 8.654E-08, 8.871E-08, 9.097E-08, 9.216E-08,
     $ 9.264E-08, 9.385E-08, 9.393E-08, 9.173E-08, 8.994E-08, 8.810E-08,
     $ 8.288E-08, 7.645E-08, 7.291E-08, 7.101E-08, 7.012E-08, 7.182E-08,
     $ 7.463E-08, 7.462E-08, 7.100E-08, 6.534E-08, 5.970E-08, 5.650E-08,
     $ 5.835E-08, 6.667E-08, 8.044E-08, 9.528E-08, 1.063E-07, 1.117E-07,
     $ 1.111E-07, 1.047E-07, 9.583E-08, 8.801E-08, 8.124E-08, 7.344E-08,
     $ 6.556E-08, 5.824E-08, 5.215E-08, 4.797E-08, 4.780E-08, 5.033E-08,
     $ 5.404E-08, 5.804E-08, 6.376E-08, 7.046E-08, 7.788E-08, 8.730E-08,
     $ 9.770E-08, 1.056E-07, 1.109E-07, 1.146E-07, 1.134E-07, 1.081E-07,
     $ 1.028E-07, 9.785E-08, 9.255E-08, 8.944E-08, 8.787E-08, 8.413E-08,
     $ 7.879E-08, 7.359E-08, 6.857E-08, 6.346E-08, 5.979E-08, 5.701E-08,
     $ 5.418E-08, 5.092E-08, 4.913E-08, 4.984E-08, 5.237E-08, 5.581E-08,
     $ 6.065E-08, 6.488E-08, 6.772E-08, 7.034E-08, 7.300E-08, 7.402E-08,
     $ 7.296E-08, 6.987E-08, 6.497E-08, 5.926E-08, 5.410E-08, 5.063E-08,
     $ 4.812E-08, 4.536E-08, 4.180E-08, 3.725E-08, 3.264E-08, 2.932E-08,
     $ 2.790E-08, 2.873E-08, 3.175E-08, 3.609E-08/
C                                                                       
C     39001 TO 39100 CM-1 DATA.                                         
      DATA (SUN(I),I= 39001, 39100)/                                    
     $ 4.050E-08, 4.513E-08, 4.916E-08, 5.200E-08, 5.267E-08, 5.138E-08,
     $ 4.753E-08, 4.187E-08, 3.568E-08, 3.064E-08, 2.735E-08, 2.612E-08,
     $ 2.653E-08, 2.784E-08, 2.934E-08, 3.145E-08, 3.444E-08, 3.795E-08,
     $ 4.208E-08, 4.638E-08, 4.942E-08, 5.124E-08, 5.304E-08, 5.470E-08,
     $ 5.606E-08, 5.761E-08, 5.884E-08, 5.852E-08, 5.752E-08, 5.750E-08,
     $ 5.829E-08, 5.979E-08, 6.279E-08, 6.624E-08, 6.831E-08, 6.935E-08,
     $ 7.031E-08, 7.079E-08, 6.975E-08, 6.769E-08, 6.575E-08, 6.309E-08,
     $ 5.922E-08, 5.647E-08, 5.639E-08, 5.771E-08, 6.001E-08, 6.398E-08,
     $ 6.750E-08, 6.796E-08, 6.523E-08, 6.090E-08, 5.603E-08, 5.353E-08,
     $ 5.426E-08, 5.742E-08, 6.100E-08, 6.392E-08, 6.383E-08, 6.176E-08,
     $ 5.957E-08, 6.042E-08, 6.538E-08, 7.368E-08, 8.314E-08, 9.282E-08,
     $ 9.949E-08, 1.001E-07, 9.575E-08, 8.860E-08, 7.955E-08, 6.958E-08,
     $ 6.075E-08, 5.428E-08, 5.035E-08, 4.792E-08, 4.736E-08, 4.862E-08,
     $ 5.141E-08, 5.410E-08, 5.654E-08, 5.913E-08, 6.220E-08, 6.429E-08,
     $ 6.524E-08, 6.582E-08, 6.451E-08, 6.038E-08, 5.409E-08, 4.784E-08,
     $ 4.193E-08, 3.740E-08, 3.479E-08, 3.498E-08, 3.605E-08, 3.770E-08,
     $ 4.010E-08, 4.343E-08, 4.639E-08, 4.941E-08/
C                                                                       
C     39101 TO 39200 CM-1 DATA.                                         
      DATA (SUN(I),I= 39101, 39200)/                                    
     $ 5.222E-08, 5.446E-08, 5.498E-08, 5.460E-08, 5.447E-08, 5.482E-08,
     $ 5.573E-08, 5.768E-08, 6.063E-08, 6.361E-08, 6.507E-08, 6.503E-08,
     $ 6.430E-08, 6.237E-08, 5.862E-08, 5.482E-08, 5.081E-08, 4.668E-08,
     $ 4.288E-08, 4.045E-08, 3.934E-08, 3.928E-08, 3.991E-08, 4.096E-08,
     $ 4.225E-08, 4.379E-08, 4.620E-08, 4.861E-08, 5.102E-08, 5.311E-08,
     $ 5.479E-08, 5.592E-08, 5.777E-08, 6.017E-08, 6.342E-08, 6.679E-08,
     $ 7.005E-08, 7.270E-08, 7.571E-08, 7.765E-08, 7.812E-08, 7.709E-08,
     $ 7.466E-08, 7.099E-08, 6.763E-08, 6.522E-08, 6.358E-08, 6.168E-08,
     $ 5.820E-08, 5.304E-08, 4.727E-08, 4.181E-08, 3.830E-08, 3.721E-08,
     $ 3.815E-08, 3.971E-08, 4.090E-08, 4.076E-08, 3.946E-08, 3.753E-08,
     $ 3.671E-08, 3.775E-08, 4.006E-08, 4.421E-08, 5.015E-08, 5.573E-08,
     $ 6.096E-08, 6.753E-08, 7.303E-08, 7.605E-08, 7.778E-08, 7.793E-08,
     $ 7.587E-08, 7.414E-08, 7.365E-08, 7.383E-08, 7.391E-08, 7.322E-08,
     $ 7.107E-08, 6.773E-08, 6.304E-08, 5.783E-08, 5.270E-08, 4.781E-08,
     $ 4.420E-08, 4.287E-08, 4.335E-08, 4.500E-08, 4.718E-08, 4.761E-08,
     $ 4.593E-08, 4.336E-08, 4.098E-08, 3.987E-08, 4.118E-08, 4.466E-08,
     $ 4.865E-08, 5.187E-08, 5.259E-08, 5.077E-08/
C                                                                       
C     39201 TO 39300 CM-1 DATA.                                         
      DATA (SUN(I),I= 39201, 39300)/                                    
     $ 4.693E-08, 4.281E-08, 3.895E-08, 3.648E-08, 3.493E-08, 3.337E-08,
     $ 3.070E-08, 2.743E-08, 2.359E-08, 2.048E-08, 1.893E-08, 1.932E-08,
     $ 2.131E-08, 2.463E-08, 2.815E-08, 3.152E-08, 3.396E-08, 3.542E-08,
     $ 3.596E-08, 3.548E-08, 3.413E-08, 3.304E-08, 3.214E-08, 3.178E-08,
     $ 3.247E-08, 3.358E-08, 3.466E-08, 3.603E-08, 3.650E-08, 3.630E-08,
     $ 3.614E-08, 3.586E-08, 3.484E-08, 3.508E-08, 3.621E-08, 3.785E-08,
     $ 4.018E-08, 4.372E-08, 4.647E-08, 4.813E-08, 4.862E-08, 4.769E-08,
     $ 4.530E-08, 4.261E-08, 4.037E-08, 3.913E-08, 3.891E-08, 3.897E-08,
     $ 3.897E-08, 3.868E-08, 3.739E-08, 3.540E-08, 3.386E-08, 3.333E-08,
     $ 3.314E-08, 3.386E-08, 3.515E-08, 3.625E-08, 3.612E-08, 3.488E-08,
     $ 3.248E-08, 2.910E-08, 2.512E-08, 2.189E-08, 2.040E-08, 2.084E-08,
     $ 2.340E-08, 2.726E-08, 3.120E-08, 3.455E-08, 3.766E-08, 3.996E-08,
     $ 4.160E-08, 4.317E-08, 4.496E-08, 4.519E-08, 4.406E-08, 4.336E-08,
     $ 4.267E-08, 4.089E-08, 3.907E-08, 3.777E-08, 3.622E-08, 3.500E-08,
     $ 3.473E-08, 3.601E-08, 3.851E-08, 4.055E-08, 4.237E-08, 4.467E-08,
     $ 4.611E-08, 4.613E-08, 4.580E-08, 4.434E-08, 4.152E-08, 3.876E-08,
     $ 3.716E-08, 3.764E-08, 3.989E-08, 4.262E-08/
C                                                                       
C     39301 TO 39400 CM-1 DATA.                                         
      DATA (SUN(I),I= 39301, 39400)/                                    
     $ 4.470E-08, 4.588E-08, 4.564E-08, 4.498E-08, 4.481E-08, 4.650E-08,
     $ 4.931E-08, 5.173E-08, 5.268E-08, 5.256E-08, 5.026E-08, 4.611E-08,
     $ 4.207E-08, 3.972E-08, 3.886E-08, 3.949E-08, 4.124E-08, 4.286E-08,
     $ 4.308E-08, 4.175E-08, 3.916E-08, 3.639E-08, 3.409E-08, 3.203E-08,
     $ 3.022E-08, 2.948E-08, 2.979E-08, 3.088E-08, 3.335E-08, 3.771E-08,
     $ 4.272E-08, 4.663E-08, 4.914E-08, 5.024E-08, 4.893E-08, 4.552E-08,
     $ 4.143E-08, 3.705E-08, 3.250E-08, 2.840E-08, 2.515E-08, 2.277E-08,
     $ 2.164E-08, 2.132E-08, 2.196E-08, 2.341E-08, 2.527E-08, 2.726E-08,
     $ 3.000E-08, 3.294E-08, 3.539E-08, 3.776E-08, 4.062E-08, 4.314E-08,
     $ 4.523E-08, 4.765E-08, 4.978E-08, 5.002E-08, 4.921E-08, 4.837E-08,
     $ 4.732E-08, 4.582E-08, 4.525E-08, 4.524E-08, 4.462E-08, 4.342E-08,
     $ 4.292E-08, 4.221E-08, 4.095E-08, 3.984E-08, 3.836E-08, 3.555E-08,
     $ 3.223E-08, 2.927E-08, 2.686E-08, 2.589E-08, 2.647E-08, 2.792E-08,
     $ 2.962E-08, 3.105E-08, 3.204E-08, 3.278E-08, 3.343E-08, 3.454E-08,
     $ 3.617E-08, 3.740E-08, 3.811E-08, 3.874E-08, 3.860E-08, 3.828E-08,
     $ 3.891E-08, 4.086E-08, 4.339E-08, 4.597E-08, 4.765E-08, 4.749E-08,
     $ 4.494E-08, 4.058E-08, 3.586E-08, 3.206E-08/
C                                                                       
C     39401 TO 39500 CM-1 DATA.                                         
      DATA (SUN(I),I= 39401, 39500)/                                    
     $ 3.008E-08, 2.980E-08, 3.072E-08, 3.181E-08, 3.179E-08, 2.989E-08,
     $ 2.753E-08, 2.571E-08, 2.454E-08, 2.481E-08, 2.656E-08, 2.839E-08,
     $ 2.965E-08, 3.126E-08, 3.296E-08, 3.454E-08, 3.580E-08, 3.668E-08,
     $ 3.629E-08, 3.450E-08, 3.179E-08, 2.887E-08, 2.583E-08, 2.289E-08,
     $ 2.027E-08, 1.862E-08, 1.828E-08, 1.939E-08, 2.177E-08, 2.538E-08,
     $ 2.962E-08, 3.360E-08, 3.687E-08, 3.998E-08, 4.219E-08, 4.315E-08,
     $ 4.282E-08, 4.156E-08, 3.894E-08, 3.573E-08, 3.203E-08, 2.904E-08,
     $ 2.751E-08, 2.741E-08, 2.875E-08, 3.176E-08, 3.494E-08, 3.713E-08,
     $ 3.796E-08, 3.707E-08, 3.455E-08, 3.148E-08, 2.813E-08, 2.574E-08,
     $ 2.529E-08, 2.689E-08, 2.997E-08, 3.421E-08, 3.792E-08, 4.002E-08,
     $ 4.021E-08, 3.878E-08, 3.613E-08, 3.360E-08, 3.185E-08, 3.113E-08,
     $ 3.166E-08, 3.381E-08, 3.679E-08, 3.986E-08, 4.221E-08, 4.274E-08,
     $ 4.140E-08, 3.868E-08, 3.529E-08, 3.224E-08, 3.083E-08, 3.100E-08,
     $ 3.256E-08, 3.476E-08, 3.732E-08, 4.001E-08, 4.249E-08, 4.427E-08,
     $ 4.561E-08, 4.634E-08, 4.564E-08, 4.355E-08, 4.089E-08, 3.845E-08,
     $ 3.685E-08, 3.658E-08, 3.747E-08, 3.965E-08, 4.257E-08, 4.501E-08,
     $ 4.682E-08, 4.809E-08, 4.770E-08, 4.558E-08/
C                                                                       
C     39501 TO 39600 CM-1 DATA.                                         
      DATA (SUN(I),I= 39501, 39600)/                                    
     $ 4.272E-08, 3.927E-08, 3.609E-08, 3.424E-08, 3.374E-08, 3.398E-08,
     $ 3.478E-08, 3.515E-08, 3.468E-08, 3.356E-08, 3.223E-08, 3.072E-08,
     $ 2.932E-08, 2.797E-08, 2.639E-08, 2.466E-08, 2.332E-08, 2.230E-08,
     $ 2.199E-08, 2.238E-08, 2.300E-08, 2.327E-08, 2.316E-08, 2.213E-08,
     $ 2.074E-08, 1.943E-08, 1.854E-08, 1.841E-08, 1.916E-08, 2.016E-08,
     $ 2.089E-08, 2.103E-08, 2.029E-08, 1.882E-08, 1.696E-08, 1.557E-08,
     $ 1.512E-08, 1.557E-08, 1.693E-08, 1.908E-08, 2.111E-08, 2.266E-08,
     $ 2.384E-08, 2.477E-08, 2.513E-08, 2.518E-08, 2.504E-08, 2.453E-08,
     $ 2.332E-08, 2.172E-08, 2.016E-08, 1.850E-08, 1.720E-08, 1.654E-08,
     $ 1.670E-08, 1.758E-08, 1.961E-08, 2.214E-08, 2.492E-08, 2.774E-08,
     $ 3.002E-08, 3.132E-08, 3.213E-08, 3.291E-08, 3.351E-08, 3.415E-08,
     $ 3.438E-08, 3.390E-08, 3.267E-08, 3.113E-08, 2.945E-08, 2.894E-08,
     $ 2.987E-08, 3.141E-08, 3.309E-08, 3.507E-08, 3.613E-08, 3.564E-08,
     $ 3.452E-08, 3.301E-08, 3.076E-08, 2.812E-08, 2.657E-08, 2.569E-08,
     $ 2.552E-08, 2.614E-08, 2.756E-08, 2.831E-08, 2.876E-08, 2.909E-08,
     $ 2.948E-08, 2.992E-08, 3.064E-08, 3.109E-08, 3.076E-08, 2.963E-08,
     $ 2.792E-08, 2.602E-08, 2.408E-08, 2.223E-08/
C                                                                       
C     39601 TO 39700 CM-1 DATA.                                         
      DATA (SUN(I),I= 39601, 39700)/                                    
     $ 2.029E-08, 1.831E-08, 1.669E-08, 1.556E-08, 1.517E-08, 1.595E-08,
     $ 1.752E-08, 1.922E-08, 2.085E-08, 2.238E-08, 2.350E-08, 2.442E-08,
     $ 2.523E-08, 2.609E-08, 2.657E-08, 2.668E-08, 2.652E-08, 2.611E-08,
     $ 2.531E-08, 2.420E-08, 2.266E-08, 2.073E-08, 1.859E-08, 1.679E-08,
     $ 1.589E-08, 1.607E-08, 1.711E-08, 1.893E-08, 2.099E-08, 2.297E-08,
     $ 2.479E-08, 2.614E-08, 2.730E-08, 2.825E-08, 2.881E-08, 2.886E-08,
     $ 2.889E-08, 2.834E-08, 2.744E-08, 2.683E-08, 2.673E-08, 2.738E-08,
     $ 2.900E-08, 3.120E-08, 3.285E-08, 3.389E-08, 3.420E-08, 3.365E-08,
     $ 3.256E-08, 3.160E-08, 3.086E-08, 2.983E-08, 2.891E-08, 2.828E-08,
     $ 2.840E-08, 2.888E-08, 2.999E-08, 3.144E-08, 3.297E-08, 3.438E-08,
     $ 3.582E-08, 3.718E-08, 3.807E-08, 3.880E-08, 3.857E-08, 3.780E-08,
     $ 3.654E-08, 3.577E-08, 3.478E-08, 3.405E-08, 3.315E-08, 3.225E-08,
     $ 3.025E-08, 2.766E-08, 2.515E-08, 2.296E-08, 2.089E-08, 1.979E-08,
     $ 1.937E-08, 1.865E-08, 1.738E-08, 1.599E-08, 1.439E-08, 1.341E-08,
     $ 1.365E-08, 1.523E-08, 1.786E-08, 2.116E-08, 2.431E-08, 2.724E-08,
     $ 2.971E-08, 3.131E-08, 3.211E-08, 3.226E-08, 3.134E-08, 2.954E-08,
     $ 2.728E-08, 2.485E-08, 2.263E-08, 2.124E-08/
C                                                                       
C     39701 TO 39800 CM-1 DATA.                                         
      DATA (SUN(I),I= 39701, 39800)/                                    
     $ 2.084E-08, 2.165E-08, 2.321E-08, 2.454E-08, 2.559E-08, 2.642E-08,
     $ 2.657E-08, 2.654E-08, 2.740E-08, 2.841E-08, 2.880E-08, 2.915E-08,
     $ 2.921E-08, 2.837E-08, 2.728E-08, 2.687E-08, 2.664E-08, 2.648E-08,
     $ 2.664E-08, 2.673E-08, 2.612E-08, 2.517E-08, 2.402E-08, 2.238E-08,
     $ 2.066E-08, 1.926E-08, 1.791E-08, 1.657E-08, 1.562E-08, 1.483E-08,
     $ 1.444E-08, 1.448E-08, 1.519E-08, 1.658E-08, 1.867E-08, 2.101E-08,
     $ 2.354E-08, 2.595E-08, 2.791E-08, 2.941E-08, 3.044E-08, 3.117E-08,
     $ 3.176E-08, 3.247E-08, 3.297E-08, 3.324E-08, 3.309E-08, 3.262E-08,
     $ 3.124E-08, 2.962E-08, 2.814E-08, 2.655E-08, 2.478E-08, 2.335E-08,
     $ 2.191E-08, 2.011E-08, 1.869E-08, 1.772E-08, 1.718E-08, 1.750E-08,
     $ 1.879E-08, 2.050E-08, 2.234E-08, 2.420E-08, 2.572E-08, 2.702E-08,
     $ 2.800E-08, 2.894E-08, 3.006E-08, 3.102E-08, 3.130E-08, 3.131E-08,
     $ 3.124E-08, 3.087E-08, 3.068E-08, 3.143E-08, 3.268E-08, 3.403E-08,
     $ 3.572E-08, 3.767E-08, 3.917E-08, 4.072E-08, 4.206E-08, 4.275E-08,
     $ 4.264E-08, 4.208E-08, 4.026E-08, 3.761E-08, 3.471E-08, 3.218E-08,
     $ 3.020E-08, 2.973E-08, 3.099E-08, 3.329E-08, 3.572E-08, 3.738E-08,
     $ 3.816E-08, 3.785E-08, 3.742E-08, 3.715E-08/
C                                                                       
C     39801 TO 39900 CM-1 DATA.                                         
      DATA (SUN(I),I= 39801, 39900)/                                    
     $ 3.823E-08, 3.977E-08, 4.139E-08, 4.227E-08, 4.256E-08, 4.198E-08,
     $ 4.101E-08, 3.969E-08, 3.786E-08, 3.512E-08, 3.115E-08, 2.668E-08,
     $ 2.252E-08, 1.959E-08, 1.845E-08, 1.934E-08, 2.173E-08, 2.503E-08,
     $ 2.843E-08, 3.166E-08, 3.494E-08, 3.814E-08, 4.115E-08, 4.434E-08,
     $ 4.757E-08, 4.984E-08, 5.097E-08, 5.156E-08, 5.142E-08, 5.121E-08,
     $ 5.168E-08, 5.300E-08, 5.418E-08, 5.516E-08, 5.500E-08, 5.398E-08,
     $ 5.209E-08, 4.987E-08, 4.752E-08, 4.586E-08, 4.414E-08, 4.269E-08,
     $ 4.190E-08, 4.159E-08, 4.100E-08, 4.109E-08, 4.181E-08, 4.235E-08,
     $ 4.293E-08, 4.432E-08, 4.580E-08, 4.679E-08, 4.802E-08, 4.932E-08,
     $ 5.003E-08, 4.998E-08, 4.923E-08, 4.701E-08, 4.376E-08, 3.999E-08,
     $ 3.589E-08, 3.233E-08, 3.000E-08, 2.841E-08, 2.755E-08, 2.759E-08,
     $ 2.780E-08, 2.805E-08, 2.825E-08, 2.800E-08, 2.725E-08, 2.612E-08,
     $ 2.415E-08, 2.174E-08, 1.944E-08, 1.762E-08, 1.629E-08, 1.624E-08,
     $ 1.711E-08, 1.829E-08, 1.935E-08, 2.058E-08, 2.139E-08, 2.214E-08,
     $ 2.317E-08, 2.430E-08, 2.526E-08, 2.657E-08, 2.819E-08, 2.998E-08,
     $ 3.242E-08, 3.521E-08, 3.730E-08, 3.834E-08, 3.852E-08, 3.730E-08,
     $ 3.519E-08, 3.337E-08, 3.220E-08, 3.125E-08/
C                                                                       
C     39901 TO 40000 CM-1 DATA.                                         
      DATA (SUN(I),I= 39901, 40000)/                                    
     $ 3.115E-08, 3.168E-08, 3.207E-08, 3.242E-08, 3.377E-08, 3.576E-08,
     $ 3.873E-08, 4.303E-08, 4.750E-08, 5.076E-08, 5.274E-08, 5.324E-08,
     $ 5.214E-08, 5.071E-08, 4.979E-08, 4.987E-08, 5.013E-08, 5.066E-08,
     $ 5.165E-08, 5.246E-08, 5.193E-08, 5.121E-08, 5.063E-08, 4.994E-08,
     $ 4.928E-08, 4.930E-08, 4.904E-08, 4.776E-08, 4.510E-08, 4.156E-08,
     $ 3.808E-08, 3.579E-08, 3.478E-08, 3.512E-08, 3.684E-08, 3.911E-08,
     $ 4.127E-08, 4.358E-08, 4.589E-08, 4.785E-08, 4.934E-08, 4.983E-08,
     $ 4.902E-08, 4.703E-08, 4.391E-08, 4.006E-08, 3.677E-08, 3.462E-08,
     $ 3.418E-08, 3.540E-08, 3.798E-08, 4.110E-08, 4.396E-08, 4.587E-08,
     $ 4.680E-08, 4.620E-08, 4.371E-08, 4.010E-08, 3.589E-08, 3.152E-08,
     $ 2.800E-08, 2.622E-08, 2.549E-08, 2.514E-08, 2.451E-08, 2.329E-08,
     $ 2.090E-08, 1.862E-08, 1.686E-08, 1.620E-08, 1.674E-08, 1.906E-08,
     $ 2.191E-08, 2.498E-08, 2.811E-08, 3.109E-08, 3.290E-08, 3.416E-08,
     $ 3.573E-08, 3.728E-08, 3.837E-08, 3.996E-08, 4.214E-08, 4.400E-08,
     $ 4.587E-08, 4.887E-08, 5.218E-08, 5.492E-08, 5.718E-08, 5.829E-08,
     $ 5.767E-08, 5.636E-08, 5.477E-08, 5.311E-08, 5.249E-08, 5.238E-08,
     $ 5.168E-08, 5.088E-08, 5.009E-08, 4.852E-08/
C                                                                       
C     40001 TO 40100 CM-1 DATA.                                         
      DATA (SUN(I),I= 40001, 40100)/                                    
     $ 4.642E-08, 4.372E-08, 4.002E-08, 3.596E-08, 3.217E-08, 2.967E-08,
     $ 3.032E-08, 3.436E-08, 4.007E-08, 4.653E-08, 5.212E-08, 5.499E-08,
     $ 5.428E-08, 5.141E-08, 4.710E-08, 4.289E-08, 3.902E-08, 3.631E-08,
     $ 3.409E-08, 3.246E-08, 3.109E-08, 3.101E-08, 3.244E-08, 3.582E-08,
     $ 4.101E-08, 4.722E-08, 5.251E-08, 5.690E-08, 5.998E-08, 6.134E-08,
     $ 6.095E-08, 6.002E-08, 5.808E-08, 5.495E-08, 5.055E-08, 4.582E-08,
     $ 4.142E-08, 3.718E-08, 3.349E-08, 3.129E-08, 3.053E-08, 3.008E-08,
     $ 3.040E-08, 3.164E-08, 3.256E-08, 3.258E-08, 3.264E-08, 3.269E-08,
     $ 3.231E-08, 3.237E-08, 3.348E-08, 3.535E-08, 3.786E-08, 4.123E-08,
     $ 4.494E-08, 4.841E-08, 5.099E-08, 5.226E-08, 5.239E-08, 5.181E-08,
     $ 5.092E-08, 5.015E-08, 5.031E-08, 5.156E-08, 5.369E-08, 5.560E-08,
     $ 5.657E-08, 5.601E-08, 5.396E-08, 5.063E-08, 4.725E-08, 4.488E-08,
     $ 4.400E-08, 4.380E-08, 4.364E-08, 4.299E-08, 4.179E-08, 3.949E-08,
     $ 3.635E-08, 3.328E-08, 3.087E-08, 2.911E-08, 2.857E-08, 2.990E-08,
     $ 3.249E-08, 3.561E-08, 3.856E-08, 4.133E-08, 4.299E-08, 4.333E-08,
     $ 4.220E-08, 3.967E-08, 3.569E-08, 3.145E-08, 2.808E-08, 2.664E-08,
     $ 2.769E-08, 3.047E-08, 3.389E-08, 3.682E-08/
C                                                                       
C     40101 TO 40200 CM-1 DATA.                                         
      DATA (SUN(I),I= 40101, 40200)/                                    
     $ 3.821E-08, 3.768E-08, 3.613E-08, 3.409E-08, 3.177E-08, 2.981E-08,
     $ 2.846E-08, 2.732E-08, 2.606E-08, 2.507E-08, 2.450E-08, 2.424E-08,
     $ 2.434E-08, 2.517E-08, 2.662E-08, 2.800E-08, 2.906E-08, 2.976E-08,
     $ 2.985E-08, 2.887E-08, 2.729E-08, 2.548E-08, 2.364E-08, 2.174E-08,
     $ 1.989E-08, 1.815E-08, 1.647E-08, 1.472E-08, 1.339E-08, 1.293E-08,
     $ 1.296E-08, 1.326E-08, 1.379E-08, 1.374E-08, 1.295E-08, 1.179E-08,
     $ 1.071E-08, 1.004E-08, 1.047E-08, 1.207E-08, 1.456E-08, 1.738E-08,
     $ 2.009E-08, 2.220E-08, 2.318E-08, 2.306E-08, 2.202E-08, 2.025E-08,
     $ 1.827E-08, 1.665E-08, 1.567E-08, 1.542E-08, 1.581E-08, 1.657E-08,
     $ 1.749E-08, 1.857E-08, 1.975E-08, 2.108E-08, 2.235E-08, 2.337E-08,
     $ 2.384E-08, 2.393E-08, 2.386E-08, 2.384E-08, 2.426E-08, 2.532E-08,
     $ 2.649E-08, 2.732E-08, 2.778E-08, 2.745E-08, 2.610E-08, 2.418E-08,
     $ 2.189E-08, 1.915E-08, 1.614E-08, 1.341E-08, 1.122E-08, 9.937E-09,
     $ 9.813E-09, 1.123E-08, 1.357E-08, 1.656E-08, 1.991E-08, 2.335E-08,
     $ 2.605E-08, 2.814E-08, 2.902E-08, 2.913E-08, 2.889E-08, 2.861E-08,
     $ 2.822E-08, 2.864E-08, 2.915E-08, 2.929E-08, 2.987E-08, 3.126E-08,
     $ 3.236E-08, 3.330E-08, 3.447E-08, 3.504E-08/
C                                                                       
C     40201 TO 40300 CM-1 DATA.                                         
      DATA (SUN(I),I= 40201, 40300)/                                    
     $ 3.446E-08, 3.358E-08, 3.243E-08, 3.092E-08, 2.947E-08, 2.921E-08,
     $ 2.999E-08, 3.173E-08, 3.388E-08, 3.609E-08, 3.733E-08, 3.785E-08,
     $ 3.830E-08, 3.895E-08, 3.983E-08, 4.122E-08, 4.250E-08, 4.261E-08,
     $ 4.171E-08, 3.978E-08, 3.693E-08, 3.397E-08, 3.160E-08, 3.010E-08,
     $ 2.959E-08, 2.985E-08, 3.047E-08, 3.160E-08, 3.261E-08, 3.328E-08,
     $ 3.319E-08, 3.245E-08, 3.075E-08, 2.854E-08, 2.607E-08, 2.401E-08,
     $ 2.231E-08, 2.096E-08, 1.988E-08, 1.895E-08, 1.836E-08, 1.825E-08,
     $ 1.859E-08, 1.918E-08, 2.022E-08, 2.116E-08, 2.154E-08, 2.128E-08,
     $ 2.052E-08, 1.908E-08, 1.728E-08, 1.522E-08, 1.322E-08, 1.170E-08,
     $ 1.048E-08, 9.672E-09, 9.859E-09, 1.075E-08, 1.180E-08, 1.350E-08,
     $ 1.544E-08, 1.691E-08, 1.809E-08, 1.931E-08, 2.027E-08, 2.120E-08,
     $ 2.253E-08, 2.417E-08, 2.572E-08, 2.684E-08, 2.790E-08, 2.847E-08,
     $ 2.849E-08, 2.854E-08, 2.887E-08, 2.885E-08, 2.917E-08, 3.032E-08,
     $ 3.163E-08, 3.306E-08, 3.465E-08, 3.556E-08, 3.533E-08, 3.467E-08,
     $ 3.403E-08, 3.373E-08, 3.424E-08, 3.578E-08, 3.758E-08, 3.890E-08,
     $ 4.001E-08, 4.083E-08, 4.126E-08, 4.167E-08, 4.233E-08, 4.280E-08,
     $ 4.332E-08, 4.368E-08, 4.385E-08, 4.409E-08/
C                                                                       
C     40301 TO 40400 CM-1 DATA.                                         
      DATA (SUN(I),I= 40301, 40400)/                                    
     $ 4.396E-08, 4.296E-08, 4.132E-08, 3.876E-08, 3.541E-08, 3.230E-08,
     $ 2.973E-08, 2.741E-08, 2.597E-08, 2.476E-08, 2.310E-08, 2.100E-08,
     $ 1.900E-08, 1.696E-08, 1.564E-08, 1.527E-08, 1.599E-08, 1.749E-08,
     $ 1.968E-08, 2.226E-08, 2.504E-08, 2.755E-08, 2.955E-08, 3.111E-08,
     $ 3.199E-08, 3.245E-08, 3.239E-08, 3.229E-08, 3.150E-08, 3.013E-08,
     $ 2.824E-08, 2.685E-08, 2.557E-08, 2.514E-08, 2.564E-08, 2.631E-08,
     $ 2.649E-08, 2.666E-08, 2.716E-08, 2.771E-08, 2.924E-08, 3.151E-08,
     $ 3.412E-08, 3.623E-08, 3.833E-08, 3.987E-08, 4.090E-08, 4.119E-08,
     $ 4.066E-08, 3.890E-08, 3.662E-08, 3.461E-08, 3.367E-08, 3.471E-08,
     $ 3.780E-08, 4.153E-08, 4.476E-08, 4.654E-08, 4.603E-08, 4.324E-08,
     $ 3.971E-08, 3.631E-08, 3.306E-08, 3.062E-08, 2.927E-08, 2.849E-08,
     $ 2.818E-08, 2.959E-08, 3.203E-08, 3.472E-08, 3.738E-08, 3.989E-08,
     $ 4.119E-08, 4.141E-08, 4.132E-08, 4.169E-08, 4.223E-08, 4.260E-08,
     $ 4.310E-08, 4.419E-08, 4.476E-08, 4.492E-08, 4.539E-08, 4.622E-08,
     $ 4.620E-08, 4.565E-08, 4.443E-08, 4.278E-08, 4.036E-08, 3.771E-08,
     $ 3.503E-08, 3.333E-08, 3.228E-08, 3.228E-08, 3.362E-08, 3.623E-08,
     $ 3.892E-08, 4.140E-08, 4.351E-08, 4.484E-08/
C                                                                       
C     40401 TO 40500 CM-1 DATA.                                         
      DATA (SUN(I),I= 40401, 40500)/                                    
     $ 4.556E-08, 4.609E-08, 4.655E-08, 4.678E-08, 4.690E-08, 4.711E-08,
     $ 4.711E-08, 4.696E-08, 4.690E-08, 4.710E-08, 4.705E-08, 4.708E-08,
     $ 4.685E-08, 4.569E-08, 4.328E-08, 3.996E-08, 3.572E-08, 3.098E-08,
     $ 2.684E-08, 2.368E-08, 2.109E-08, 1.892E-08, 1.738E-08, 1.621E-08,
     $ 1.541E-08, 1.539E-08, 1.651E-08, 1.836E-08, 2.005E-08, 2.103E-08,
     $ 2.126E-08, 2.079E-08, 1.990E-08, 1.987E-08, 2.109E-08, 2.347E-08,
     $ 2.667E-08, 3.074E-08, 3.445E-08, 3.770E-08, 4.026E-08, 4.176E-08,
     $ 4.180E-08, 4.124E-08, 4.034E-08, 3.955E-08, 3.944E-08, 4.034E-08,
     $ 4.181E-08, 4.356E-08, 4.537E-08, 4.669E-08, 4.692E-08, 4.593E-08,
     $ 4.404E-08, 4.086E-08, 3.698E-08, 3.351E-08, 3.090E-08, 2.913E-08,
     $ 2.908E-08, 3.018E-08, 3.159E-08, 3.300E-08, 3.396E-08, 3.368E-08,
     $ 3.334E-08, 3.327E-08, 3.345E-08, 3.376E-08, 3.428E-08, 3.409E-08,
     $ 3.323E-08, 3.191E-08, 3.083E-08, 3.051E-08, 3.091E-08, 3.171E-08,
     $ 3.274E-08, 3.385E-08, 3.459E-08, 3.554E-08, 3.663E-08, 3.799E-08,
     $ 3.930E-08, 4.005E-08, 3.948E-08, 3.789E-08, 3.557E-08, 3.312E-08,
     $ 3.163E-08, 3.198E-08, 3.384E-08, 3.639E-08, 3.895E-08, 4.061E-08,
     $ 4.046E-08, 3.899E-08, 3.669E-08, 3.432E-08/
C                                                                       
C     40501 TO 40600 CM-1 DATA.                                         
      DATA (SUN(I),I= 40501, 40600)/                                    
     $ 3.245E-08, 3.145E-08, 3.170E-08, 3.314E-08, 3.462E-08, 3.561E-08,
     $ 3.657E-08, 3.657E-08, 3.545E-08, 3.415E-08, 3.370E-08, 3.372E-08,
     $ 3.422E-08, 3.563E-08, 3.753E-08, 3.900E-08, 3.991E-08, 4.036E-08,
     $ 3.984E-08, 3.816E-08, 3.551E-08, 3.211E-08, 2.845E-08, 2.517E-08,
     $ 2.300E-08, 2.234E-08, 2.337E-08, 2.545E-08, 2.795E-08, 3.029E-08,
     $ 3.214E-08, 3.282E-08, 3.279E-08, 3.239E-08, 3.158E-08, 3.008E-08,
     $ 2.859E-08, 2.749E-08, 2.692E-08, 2.745E-08, 2.904E-08, 3.119E-08,
     $ 3.300E-08, 3.412E-08, 3.407E-08, 3.304E-08, 3.126E-08, 2.876E-08,
     $ 2.618E-08, 2.398E-08, 2.265E-08, 2.211E-08, 2.308E-08, 2.469E-08,
     $ 2.621E-08, 2.725E-08, 2.803E-08, 2.856E-08, 2.897E-08, 3.001E-08,
     $ 3.161E-08, 3.369E-08, 3.569E-08, 3.730E-08, 3.778E-08, 3.744E-08,
     $ 3.603E-08, 3.351E-08, 3.093E-08, 2.904E-08, 2.732E-08, 2.598E-08,
     $ 2.540E-08, 2.510E-08, 2.463E-08, 2.474E-08, 2.577E-08, 2.743E-08,
     $ 2.924E-08, 3.091E-08, 3.187E-08, 3.197E-08, 3.147E-08, 3.090E-08,
     $ 3.051E-08, 3.018E-08, 2.947E-08, 2.823E-08, 2.622E-08, 2.393E-08,
     $ 2.142E-08, 1.895E-08, 1.704E-08, 1.606E-08, 1.582E-08, 1.652E-08,
     $ 1.803E-08, 1.929E-08, 1.997E-08, 2.016E-08/
C                                                                       
C     40601 TO 40700 CM-1 DATA.                                         
      DATA (SUN(I),I= 40601, 40700)/                                    
     $ 2.019E-08, 2.043E-08, 2.151E-08, 2.332E-08, 2.542E-08, 2.722E-08,
     $ 2.799E-08, 2.826E-08, 2.843E-08, 2.876E-08, 2.918E-08, 3.018E-08,
     $ 3.068E-08, 3.048E-08, 2.955E-08, 2.832E-08, 2.688E-08, 2.615E-08,
     $ 2.614E-08, 2.653E-08, 2.720E-08, 2.814E-08, 2.901E-08, 2.946E-08,
     $ 2.977E-08, 3.013E-08, 3.012E-08, 2.976E-08, 2.948E-08, 2.921E-08,
     $ 2.891E-08, 2.900E-08, 2.939E-08, 3.019E-08, 3.153E-08, 3.324E-08,
     $ 3.500E-08, 3.683E-08, 3.827E-08, 3.917E-08, 3.956E-08, 3.963E-08,
     $ 3.935E-08, 3.865E-08, 3.752E-08, 3.590E-08, 3.397E-08, 3.164E-08,
     $ 2.951E-08, 2.767E-08, 2.621E-08, 2.505E-08, 2.449E-08, 2.401E-08,
     $ 2.375E-08, 2.412E-08, 2.460E-08, 2.499E-08, 2.628E-08, 2.822E-08,
     $ 3.013E-08, 3.261E-08, 3.589E-08, 3.863E-08, 4.065E-08, 4.228E-08,
     $ 4.328E-08, 4.326E-08, 4.279E-08, 4.232E-08, 4.151E-08, 4.021E-08,
     $ 3.826E-08, 3.595E-08, 3.332E-08, 3.110E-08, 2.980E-08, 3.022E-08,
     $ 3.169E-08, 3.339E-08, 3.468E-08, 3.522E-08, 3.449E-08, 3.345E-08,
     $ 3.249E-08, 3.164E-08, 3.070E-08, 2.983E-08, 2.822E-08, 2.626E-08,
     $ 2.454E-08, 2.363E-08, 2.340E-08, 2.402E-08, 2.542E-08, 2.656E-08,
     $ 2.706E-08, 2.711E-08, 2.699E-08, 2.647E-08/
C                                                                       
C     40701 TO 40800 CM-1 DATA.                                         
      DATA (SUN(I),I= 40701, 40800)/                                    
     $ 2.649E-08, 2.699E-08, 2.793E-08, 2.893E-08, 3.000E-08, 3.072E-08,
     $ 3.118E-08, 3.099E-08, 3.073E-08, 3.085E-08, 3.141E-08, 3.237E-08,
     $ 3.390E-08, 3.508E-08, 3.573E-08, 3.598E-08, 3.589E-08, 3.553E-08,
     $ 3.552E-08, 3.558E-08, 3.541E-08, 3.502E-08, 3.413E-08, 3.274E-08,
     $ 3.113E-08, 3.000E-08, 2.938E-08, 2.971E-08, 3.075E-08, 3.202E-08,
     $ 3.276E-08, 3.256E-08, 3.139E-08, 2.955E-08, 2.745E-08, 2.537E-08,
     $ 2.419E-08, 2.404E-08, 2.462E-08, 2.567E-08, 2.694E-08, 2.775E-08,
     $ 2.779E-08, 2.760E-08, 2.760E-08, 2.834E-08, 2.987E-08, 3.191E-08,
     $ 3.388E-08, 3.521E-08, 3.535E-08, 3.415E-08, 3.242E-08, 3.037E-08,
     $ 2.868E-08, 2.757E-08, 2.756E-08, 2.804E-08, 2.894E-08, 2.961E-08,
     $ 3.018E-08, 3.038E-08, 2.991E-08, 2.846E-08, 2.630E-08, 2.381E-08,
     $ 2.122E-08, 1.938E-08, 1.902E-08, 2.031E-08, 2.230E-08, 2.434E-08,
     $ 2.612E-08, 2.762E-08, 2.855E-08, 2.934E-08, 3.011E-08, 3.051E-08,
     $ 2.999E-08, 2.868E-08, 2.699E-08, 2.554E-08, 2.458E-08, 2.442E-08,
     $ 2.519E-08, 2.659E-08, 2.836E-08, 3.051E-08, 3.290E-08, 3.491E-08,
     $ 3.623E-08, 3.642E-08, 3.563E-08, 3.408E-08, 3.254E-08, 3.114E-08,
     $ 3.048E-08, 3.039E-08, 3.036E-08, 2.987E-08/
C                                                                       
C     40801 TO 40900 CM-1 DATA.                                         
      DATA (SUN(I),I= 40801, 40900)/                                    
     $ 2.960E-08, 2.934E-08, 2.894E-08, 2.880E-08, 2.937E-08, 2.986E-08,
     $ 3.032E-08, 3.122E-08, 3.285E-08, 3.483E-08, 3.715E-08, 3.933E-08,
     $ 4.063E-08, 4.039E-08, 3.888E-08, 3.661E-08, 3.447E-08, 3.280E-08,
     $ 3.202E-08, 3.198E-08, 3.247E-08, 3.286E-08, 3.330E-08, 3.383E-08,
     $ 3.413E-08, 3.390E-08, 3.327E-08, 3.236E-08, 3.106E-08, 2.999E-08,
     $ 2.943E-08, 2.936E-08, 2.948E-08, 2.972E-08, 2.949E-08, 2.869E-08,
     $ 2.723E-08, 2.537E-08, 2.371E-08, 2.270E-08, 2.282E-08, 2.430E-08,
     $ 2.644E-08, 2.846E-08, 3.003E-08, 3.086E-08, 3.095E-08, 3.135E-08,
     $ 3.226E-08, 3.365E-08, 3.551E-08, 3.771E-08, 3.952E-08, 4.084E-08,
     $ 4.195E-08, 4.220E-08, 4.106E-08, 3.904E-08, 3.681E-08, 3.468E-08,
     $ 3.357E-08, 3.405E-08, 3.552E-08, 3.683E-08, 3.764E-08, 3.802E-08,
     $ 3.812E-08, 3.840E-08, 3.924E-08, 4.013E-08, 4.057E-08, 3.999E-08,
     $ 3.835E-08, 3.649E-08, 3.536E-08, 3.517E-08, 3.666E-08, 3.952E-08,
     $ 4.259E-08, 4.482E-08, 4.595E-08, 4.558E-08, 4.444E-08, 4.340E-08,
     $ 4.277E-08, 4.291E-08, 4.344E-08, 4.376E-08, 4.351E-08, 4.287E-08,
     $ 4.131E-08, 3.917E-08, 3.717E-08, 3.570E-08, 3.509E-08, 3.600E-08,
     $ 3.848E-08, 4.133E-08, 4.350E-08, 4.463E-08/
C                                                                       
C     40901 TO 41000 CM-1 DATA.                                         
      DATA (SUN(I),I= 40901, 41000)/                                    
     $ 4.452E-08, 4.263E-08, 3.935E-08, 3.588E-08, 3.285E-08, 3.043E-08,
     $ 2.942E-08, 3.026E-08, 3.218E-08, 3.388E-08, 3.462E-08, 3.401E-08,
     $ 3.265E-08, 3.121E-08, 3.106E-08, 3.287E-08, 3.641E-08, 4.055E-08,
     $ 4.436E-08, 4.700E-08, 4.864E-08, 4.943E-08, 4.948E-08, 4.842E-08,
     $ 4.648E-08, 4.374E-08, 4.110E-08, 3.935E-08, 4.000E-08, 4.292E-08,
     $ 4.715E-08, 5.135E-08, 5.487E-08, 5.731E-08, 5.859E-08, 5.889E-08,
     $ 5.820E-08, 5.648E-08, 5.324E-08, 4.847E-08, 4.316E-08, 3.881E-08,
     $ 3.621E-08, 3.569E-08, 3.836E-08, 4.337E-08, 4.899E-08, 5.363E-08,
     $ 5.663E-08, 5.658E-08, 5.375E-08, 4.974E-08, 4.631E-08, 4.464E-08,
     $ 4.491E-08, 4.673E-08, 4.902E-08, 5.098E-08, 5.154E-08, 5.114E-08,
     $ 4.999E-08, 4.834E-08, 4.615E-08, 4.368E-08, 4.095E-08, 3.834E-08,
     $ 3.636E-08, 3.505E-08, 3.478E-08, 3.514E-08, 3.573E-08, 3.525E-08,
     $ 3.348E-08, 3.047E-08, 2.768E-08, 2.573E-08, 2.546E-08, 2.650E-08,
     $ 2.816E-08, 2.932E-08, 2.929E-08, 2.824E-08, 2.710E-08, 2.696E-08,
     $ 2.780E-08, 2.955E-08, 3.138E-08, 3.278E-08, 3.321E-08, 3.269E-08,
     $ 3.192E-08, 3.211E-08, 3.365E-08, 3.617E-08, 3.903E-08, 4.166E-08,
     $ 4.328E-08, 4.367E-08, 4.336E-08, 4.354E-08/
C                                                                       
C     41001 TO 41100 CM-1 DATA.                                         
      DATA (SUN(I),I= 41001, 41100)/                                    
     $ 4.355E-08, 4.311E-08, 4.241E-08, 4.133E-08, 3.957E-08, 3.853E-08,
     $ 3.976E-08, 4.360E-08, 4.923E-08, 5.515E-08, 6.030E-08, 6.279E-08,
     $ 6.090E-08, 5.539E-08, 4.895E-08, 4.253E-08, 3.733E-08, 3.502E-08,
     $ 3.558E-08, 3.681E-08, 3.801E-08, 3.866E-08, 3.800E-08, 3.632E-08,
     $ 3.493E-08, 3.392E-08, 3.351E-08, 3.400E-08, 3.472E-08, 3.468E-08,
     $ 3.419E-08, 3.368E-08, 3.311E-08, 3.304E-08, 3.380E-08, 3.448E-08,
     $ 3.448E-08, 3.438E-08, 3.413E-08, 3.380E-08, 3.478E-08, 3.699E-08,
     $ 3.918E-08, 4.051E-08, 4.091E-08, 3.942E-08, 3.619E-08, 3.176E-08,
     $ 2.723E-08, 2.291E-08, 1.916E-08, 1.647E-08, 1.542E-08, 1.566E-08,
     $ 1.664E-08, 1.822E-08, 2.028E-08, 2.239E-08, 2.432E-08, 2.630E-08,
     $ 2.837E-08, 2.983E-08, 3.045E-08, 3.064E-08, 3.140E-08, 3.292E-08,
     $ 3.514E-08, 3.797E-08, 4.086E-08, 4.298E-08, 4.458E-08, 4.678E-08,
     $ 4.962E-08, 5.307E-08, 5.562E-08, 5.600E-08, 5.335E-08, 4.877E-08,
     $ 4.283E-08, 3.797E-08, 3.519E-08, 3.445E-08, 3.432E-08, 3.464E-08,
     $ 3.485E-08, 3.458E-08, 3.372E-08, 3.313E-08, 3.280E-08, 3.233E-08,
     $ 3.211E-08, 3.291E-08, 3.402E-08, 3.535E-08, 3.627E-08, 3.630E-08,
     $ 3.481E-08, 3.256E-08, 2.968E-08, 2.788E-08/
C                                                                       
C     41101 TO 41200 CM-1 DATA.                                         
      DATA (SUN(I),I= 41101, 41200)/                                    
     $ 2.796E-08, 3.013E-08, 3.362E-08, 3.767E-08, 4.059E-08, 4.140E-08,
     $ 4.041E-08, 3.855E-08, 3.660E-08, 3.551E-08, 3.634E-08, 3.871E-08,
     $ 4.170E-08, 4.490E-08, 4.774E-08, 4.963E-08, 5.021E-08, 4.968E-08,
     $ 4.840E-08, 4.642E-08, 4.351E-08, 4.100E-08, 4.033E-08, 4.141E-08,
     $ 4.417E-08, 4.839E-08, 5.272E-08, 5.570E-08, 5.704E-08, 5.716E-08,
     $ 5.676E-08, 5.529E-08, 5.270E-08, 4.907E-08, 4.468E-08, 3.979E-08,
     $ 3.650E-08, 3.489E-08, 3.531E-08, 3.758E-08, 4.119E-08, 4.499E-08,
     $ 4.904E-08, 5.250E-08, 5.393E-08, 5.284E-08, 4.952E-08, 4.483E-08,
     $ 4.014E-08, 3.668E-08, 3.488E-08, 3.417E-08, 3.408E-08, 3.376E-08,
     $ 3.344E-08, 3.376E-08, 3.522E-08, 3.700E-08, 3.917E-08, 4.135E-08,
     $ 4.241E-08, 4.130E-08, 3.878E-08, 3.585E-08, 3.329E-08, 3.170E-08,
     $ 3.180E-08, 3.339E-08, 3.548E-08, 3.688E-08, 3.761E-08, 3.836E-08,
     $ 3.939E-08, 4.044E-08, 4.203E-08, 4.447E-08, 4.718E-08, 4.945E-08,
     $ 5.117E-08, 5.241E-08, 5.219E-08, 5.075E-08, 4.915E-08, 4.828E-08,
     $ 4.791E-08, 4.868E-08, 5.078E-08, 5.391E-08, 5.774E-08, 6.216E-08,
     $ 6.686E-08, 7.067E-08, 7.259E-08, 7.145E-08, 6.753E-08, 6.139E-08,
     $ 5.414E-08, 4.712E-08, 4.261E-08, 4.099E-08/
C                                                                       
C     41201 TO 41300 CM-1 DATA.                                         
      DATA (SUN(I),I= 41201, 41300)/                                    
     $ 4.139E-08, 4.350E-08, 4.673E-08, 4.884E-08, 4.889E-08, 4.756E-08,
     $ 4.515E-08, 4.139E-08, 3.730E-08, 3.419E-08, 3.253E-08, 3.213E-08,
     $ 3.280E-08, 3.437E-08, 3.664E-08, 3.857E-08, 3.992E-08, 4.153E-08,
     $ 4.364E-08, 4.474E-08, 4.445E-08, 4.285E-08, 4.017E-08, 3.683E-08,
     $ 3.401E-08, 3.263E-08, 3.260E-08, 3.308E-08, 3.341E-08, 3.330E-08,
     $ 3.267E-08, 3.214E-08, 3.179E-08, 3.121E-08, 3.032E-08, 2.919E-08,
     $ 2.757E-08, 2.595E-08, 2.544E-08, 2.693E-08, 3.056E-08, 3.571E-08,
     $ 4.102E-08, 4.478E-08, 4.615E-08, 4.489E-08, 4.155E-08, 3.767E-08,
     $ 3.494E-08, 3.342E-08, 3.271E-08, 3.260E-08, 3.259E-08, 3.208E-08,
     $ 3.110E-08, 3.043E-08, 3.058E-08, 3.187E-08, 3.414E-08, 3.698E-08,
     $ 3.939E-08, 4.062E-08, 4.033E-08, 3.928E-08, 3.868E-08, 3.967E-08,
     $ 4.285E-08, 4.767E-08, 5.293E-08, 5.775E-08, 6.130E-08, 6.289E-08,
     $ 6.271E-08, 6.123E-08, 5.837E-08, 5.431E-08, 4.966E-08, 4.581E-08,
     $ 4.375E-08, 4.369E-08, 4.593E-08, 4.981E-08, 5.382E-08, 5.567E-08,
     $ 5.502E-08, 5.158E-08, 4.617E-08, 3.980E-08, 3.492E-08, 3.246E-08,
     $ 3.282E-08, 3.561E-08, 3.947E-08, 4.296E-08, 4.523E-08, 4.550E-08,
     $ 4.350E-08, 4.085E-08, 3.849E-08, 3.738E-08/
C                                                                       
C     41301 TO 41400 CM-1 DATA.                                         
      DATA (SUN(I),I= 41301, 41400)/                                    
     $ 3.816E-08, 4.080E-08, 4.430E-08, 4.775E-08, 4.926E-08, 4.843E-08,
     $ 4.577E-08, 4.162E-08, 3.690E-08, 3.332E-08, 3.164E-08, 3.266E-08,
     $ 3.624E-08, 4.103E-08, 4.561E-08, 4.862E-08, 4.802E-08, 4.413E-08,
     $ 3.878E-08, 3.348E-08, 2.935E-08, 2.782E-08, 2.846E-08, 2.981E-08,
     $ 3.116E-08, 3.233E-08, 3.296E-08, 3.325E-08, 3.393E-08, 3.527E-08,
     $ 3.734E-08, 3.957E-08, 4.189E-08, 4.421E-08, 4.631E-08, 4.779E-08,
     $ 4.918E-08, 5.017E-08, 4.991E-08, 4.832E-08, 4.560E-08, 4.187E-08,
     $ 3.770E-08, 3.416E-08, 3.099E-08, 2.892E-08, 2.815E-08, 2.793E-08,
     $ 2.779E-08, 2.844E-08, 2.905E-08, 2.942E-08, 3.022E-08, 3.150E-08,
     $ 3.304E-08, 3.478E-08, 3.609E-08, 3.665E-08, 3.656E-08, 3.612E-08,
     $ 3.540E-08, 3.515E-08, 3.604E-08, 3.814E-08, 4.026E-08, 4.263E-08,
     $ 4.491E-08, 4.623E-08, 4.628E-08, 4.531E-08, 4.310E-08, 3.996E-08,
     $ 3.624E-08, 3.230E-08, 2.968E-08, 2.883E-08, 2.895E-08, 2.980E-08,
     $ 3.126E-08, 3.224E-08, 3.261E-08, 3.331E-08, 3.454E-08, 3.588E-08,
     $ 3.650E-08, 3.600E-08, 3.437E-08, 3.143E-08, 2.775E-08, 2.485E-08,
     $ 2.323E-08, 2.257E-08, 2.338E-08, 2.571E-08, 2.879E-08, 3.221E-08,
     $ 3.570E-08, 3.853E-08, 4.006E-08, 3.995E-08/
C                                                                       
C     41401 TO 41500 CM-1 DATA.                                         
      DATA (SUN(I),I= 41401, 41500)/                                    
     $ 3.833E-08, 3.568E-08, 3.270E-08, 3.048E-08, 2.951E-08, 2.944E-08,
     $ 2.972E-08, 2.993E-08, 2.916E-08, 2.758E-08, 2.591E-08, 2.454E-08,
     $ 2.317E-08, 2.222E-08, 2.134E-08, 2.020E-08, 1.896E-08, 1.797E-08,
     $ 1.690E-08, 1.586E-08, 1.488E-08, 1.381E-08, 1.295E-08, 1.278E-08,
     $ 1.328E-08, 1.448E-08, 1.645E-08, 1.861E-08, 2.062E-08, 2.238E-08,
     $ 2.376E-08, 2.456E-08, 2.533E-08, 2.605E-08, 2.690E-08, 2.795E-08,
     $ 2.936E-08, 3.038E-08, 3.099E-08, 3.120E-08, 3.087E-08, 3.003E-08,
     $ 2.915E-08, 2.846E-08, 2.776E-08, 2.699E-08, 2.582E-08, 2.440E-08,
     $ 2.260E-08, 2.063E-08, 1.894E-08, 1.807E-08, 1.785E-08, 1.837E-08,
     $ 1.918E-08, 1.974E-08, 1.959E-08, 1.882E-08, 1.736E-08, 1.572E-08,
     $ 1.436E-08, 1.350E-08, 1.322E-08, 1.341E-08, 1.387E-08, 1.404E-08,
     $ 1.392E-08, 1.328E-08, 1.251E-08, 1.171E-08, 1.149E-08, 1.177E-08,
     $ 1.274E-08, 1.408E-08, 1.560E-08, 1.719E-08, 1.881E-08, 2.028E-08,
     $ 2.174E-08, 2.316E-08, 2.412E-08, 2.476E-08, 2.538E-08, 2.554E-08,
     $ 2.562E-08, 2.600E-08, 2.643E-08, 2.662E-08, 2.716E-08, 2.761E-08,
     $ 2.795E-08, 2.831E-08, 2.876E-08, 2.879E-08, 2.880E-08, 2.866E-08,
     $ 2.831E-08, 2.757E-08, 2.683E-08, 2.594E-08/
C                                                                       
C     41501 TO 41600 CM-1 DATA.                                         
      DATA (SUN(I),I= 41501, 41600)/                                    
     $ 2.519E-08, 2.509E-08, 2.575E-08, 2.684E-08, 2.839E-08, 3.013E-08,
     $ 3.162E-08, 3.308E-08, 3.418E-08, 3.450E-08, 3.399E-08, 3.257E-08,
     $ 3.037E-08, 2.812E-08, 2.635E-08, 2.496E-08, 2.398E-08, 2.316E-08,
     $ 2.253E-08, 2.193E-08, 2.170E-08, 2.182E-08, 2.196E-08, 2.177E-08,
     $ 2.134E-08, 2.061E-08, 1.966E-08, 1.898E-08, 1.849E-08, 1.785E-08,
     $ 1.695E-08, 1.580E-08, 1.428E-08, 1.249E-08, 1.092E-08, 9.614E-09,
     $ 8.681E-09, 8.557E-09, 9.265E-09, 1.056E-08, 1.234E-08, 1.446E-08,
     $ 1.626E-08, 1.764E-08, 1.872E-08, 1.967E-08, 2.049E-08, 2.137E-08,
     $ 2.239E-08, 2.335E-08, 2.393E-08, 2.406E-08, 2.370E-08, 2.294E-08,
     $ 2.190E-08, 2.094E-08, 2.002E-08, 1.925E-08, 1.852E-08, 1.776E-08,
     $ 1.656E-08, 1.524E-08, 1.392E-08, 1.257E-08, 1.109E-08, 1.010E-08,
     $ 9.337E-09, 8.820E-09, 8.668E-09, 9.233E-09, 1.012E-08, 1.122E-08,
     $ 1.223E-08, 1.313E-08, 1.363E-08, 1.386E-08, 1.398E-08, 1.421E-08,
     $ 1.446E-08, 1.497E-08, 1.561E-08, 1.647E-08, 1.757E-08, 1.886E-08,
     $ 2.017E-08, 2.154E-08, 2.296E-08, 2.418E-08, 2.519E-08, 2.601E-08,
     $ 2.659E-08, 2.676E-08, 2.693E-08, 2.727E-08, 2.806E-08, 2.909E-08,
     $ 3.032E-08, 3.152E-08, 3.249E-08, 3.275E-08/
C                                                                       
C     41601 TO 41700 CM-1 DATA.                                         
      DATA (SUN(I),I= 41601, 41700)/                                    
     $ 3.272E-08, 3.244E-08, 3.183E-08, 3.076E-08, 2.944E-08, 2.754E-08,
     $ 2.549E-08, 2.365E-08, 2.266E-08, 2.289E-08, 2.425E-08, 2.595E-08,
     $ 2.745E-08, 2.805E-08, 2.751E-08, 2.677E-08, 2.622E-08, 2.604E-08,
     $ 2.652E-08, 2.767E-08, 2.836E-08, 2.880E-08, 2.910E-08, 2.940E-08,
     $ 2.928E-08, 2.939E-08, 2.958E-08, 3.018E-08, 3.086E-08, 3.155E-08,
     $ 3.159E-08, 3.126E-08, 3.011E-08, 2.879E-08, 2.809E-08, 2.851E-08,
     $ 2.968E-08, 3.163E-08, 3.360E-08, 3.503E-08, 3.601E-08, 3.621E-08,
     $ 3.560E-08, 3.435E-08, 3.279E-08, 3.074E-08, 2.914E-08, 2.817E-08,
     $ 2.817E-08, 2.857E-08, 2.927E-08, 2.976E-08, 2.991E-08, 2.941E-08,
     $ 2.877E-08, 2.788E-08, 2.655E-08, 2.487E-08, 2.304E-08, 2.093E-08,
     $ 1.881E-08, 1.699E-08, 1.531E-08, 1.388E-08, 1.278E-08, 1.198E-08,
     $ 1.146E-08, 1.151E-08, 1.203E-08, 1.309E-08, 1.465E-08, 1.641E-08,
     $ 1.815E-08, 1.954E-08, 2.032E-08, 2.064E-08, 2.079E-08, 2.086E-08,
     $ 2.135E-08, 2.220E-08, 2.322E-08, 2.441E-08, 2.585E-08, 2.704E-08,
     $ 2.817E-08, 2.922E-08, 2.999E-08, 3.027E-08, 3.056E-08, 3.092E-08,
     $ 3.130E-08, 3.188E-08, 3.262E-08, 3.291E-08, 3.238E-08, 3.128E-08,
     $ 2.961E-08, 2.769E-08, 2.587E-08, 2.473E-08/
C                                                                       
C     41701 TO 41800 CM-1 DATA.                                         
      DATA (SUN(I),I= 41701, 41800)/                                    
     $ 2.399E-08, 2.357E-08, 2.326E-08, 2.343E-08, 2.333E-08, 2.305E-08,
     $ 2.245E-08, 2.147E-08, 1.983E-08, 1.830E-08, 1.708E-08, 1.637E-08,
     $ 1.620E-08, 1.642E-08, 1.663E-08, 1.668E-08, 1.661E-08, 1.641E-08,
     $ 1.605E-08, 1.550E-08, 1.479E-08, 1.385E-08, 1.279E-08, 1.183E-08,
     $ 1.089E-08, 1.007E-08, 9.382E-09, 8.775E-09, 8.290E-09, 8.318E-09,
     $ 8.707E-09, 9.466E-09, 1.054E-08, 1.175E-08, 1.272E-08, 1.346E-08,
     $ 1.393E-08, 1.422E-08, 1.431E-08, 1.438E-08, 1.461E-08, 1.498E-08,
     $ 1.550E-08, 1.613E-08, 1.656E-08, 1.662E-08, 1.658E-08, 1.636E-08,
     $ 1.631E-08, 1.669E-08, 1.756E-08, 1.868E-08, 1.989E-08, 2.115E-08,
     $ 2.240E-08, 2.341E-08, 2.428E-08, 2.521E-08, 2.590E-08, 2.649E-08,
     $ 2.739E-08, 2.849E-08, 2.961E-08, 3.095E-08, 3.239E-08, 3.367E-08,
     $ 3.478E-08, 3.555E-08, 3.564E-08, 3.490E-08, 3.322E-08, 3.053E-08,
     $ 2.767E-08, 2.536E-08, 2.421E-08, 2.464E-08, 2.655E-08, 2.877E-08,
     $ 3.057E-08, 3.149E-08, 3.169E-08, 3.186E-08, 3.271E-08, 3.460E-08,
     $ 3.716E-08, 3.923E-08, 3.994E-08, 3.934E-08, 3.740E-08, 3.452E-08,
     $ 3.159E-08, 2.927E-08, 2.770E-08, 2.711E-08, 2.744E-08, 2.823E-08,
     $ 2.893E-08, 2.907E-08, 2.817E-08, 2.627E-08/
C                                                                       
C     41801 TO 41900 CM-1 DATA.                                         
      DATA (SUN(I),I= 41801, 41900)/                                    
     $ 2.424E-08, 2.293E-08, 2.295E-08, 2.438E-08, 2.688E-08, 2.966E-08,
     $ 3.222E-08, 3.421E-08, 3.585E-08, 3.771E-08, 3.990E-08, 4.219E-08,
     $ 4.415E-08, 4.536E-08, 4.548E-08, 4.478E-08, 4.340E-08, 4.180E-08,
     $ 4.065E-08, 3.993E-08, 3.931E-08, 3.859E-08, 3.728E-08, 3.500E-08,
     $ 3.210E-08, 2.895E-08, 2.616E-08, 2.458E-08, 2.448E-08, 2.540E-08,
     $ 2.660E-08, 2.725E-08, 2.700E-08, 2.579E-08, 2.408E-08, 2.252E-08,
     $ 2.198E-08, 2.223E-08, 2.275E-08, 2.304E-08, 2.278E-08, 2.139E-08,
     $ 1.917E-08, 1.666E-08, 1.431E-08, 1.243E-08, 1.130E-08, 1.080E-08,
     $ 1.069E-08, 1.091E-08, 1.137E-08, 1.197E-08, 1.271E-08, 1.362E-08,
     $ 1.451E-08, 1.546E-08, 1.658E-08, 1.769E-08, 1.886E-08, 2.010E-08,
     $ 2.102E-08, 2.130E-08, 2.126E-08, 2.101E-08, 2.075E-08, 2.072E-08,
     $ 2.114E-08, 2.163E-08, 2.211E-08, 2.225E-08, 2.228E-08, 2.249E-08,
     $ 2.334E-08, 2.444E-08, 2.619E-08, 2.837E-08, 3.051E-08, 3.245E-08,
     $ 3.458E-08, 3.635E-08, 3.737E-08, 3.764E-08, 3.688E-08, 3.483E-08,
     $ 3.200E-08, 2.955E-08, 2.734E-08, 2.536E-08, 2.430E-08, 2.416E-08,
     $ 2.397E-08, 2.439E-08, 2.607E-08, 2.816E-08, 3.006E-08, 3.194E-08,
     $ 3.333E-08, 3.338E-08, 3.262E-08, 3.185E-08/
C                                                                       
C     41901 TO 42000 CM-1 DATA.                                         
      DATA (SUN(I),I= 41901, 42000)/                                    
     $ 3.114E-08, 3.028E-08, 3.008E-08, 3.041E-08, 3.061E-08, 3.072E-08,
     $ 3.118E-08, 3.170E-08, 3.199E-08, 3.225E-08, 3.229E-08, 3.160E-08,
     $ 3.001E-08, 2.780E-08, 2.525E-08, 2.299E-08, 2.173E-08, 2.155E-08,
     $ 2.236E-08, 2.396E-08, 2.544E-08, 2.609E-08, 2.575E-08, 2.441E-08,
     $ 2.232E-08, 2.029E-08, 1.884E-08, 1.815E-08, 1.831E-08, 1.886E-08,
     $ 1.946E-08, 1.983E-08, 2.006E-08, 2.008E-08, 2.016E-08, 2.012E-08,
     $ 2.005E-08, 1.985E-08, 1.917E-08, 1.791E-08, 1.634E-08, 1.460E-08,
     $ 1.268E-08, 1.137E-08, 1.078E-08, 1.062E-08, 1.084E-08, 1.134E-08,
     $ 1.172E-08, 1.199E-08, 1.246E-08, 1.293E-08, 1.356E-08, 1.418E-08,
     $ 1.468E-08, 1.495E-08, 1.496E-08, 1.473E-08, 1.450E-08, 1.427E-08,
     $ 1.398E-08, 1.371E-08, 1.349E-08, 1.319E-08, 1.280E-08, 1.256E-08,
     $ 1.250E-08, 1.237E-08, 1.219E-08, 1.209E-08, 1.181E-08, 1.148E-08,
     $ 1.152E-08, 1.195E-08, 1.257E-08, 1.341E-08, 1.437E-08, 1.504E-08,
     $ 1.548E-08, 1.586E-08, 1.609E-08, 1.621E-08, 1.630E-08, 1.634E-08,
     $ 1.612E-08, 1.571E-08, 1.507E-08, 1.458E-08, 1.438E-08, 1.463E-08,
     $ 1.535E-08, 1.654E-08, 1.766E-08, 1.871E-08, 1.976E-08, 2.099E-08,
     $ 2.249E-08, 2.438E-08, 2.635E-08, 2.801E-08/
C                                                                       
C     42001 TO 42100 CM-1 DATA.                                         
      DATA (SUN(I),I= 42001, 42100)/                                    
     $ 2.923E-08, 2.970E-08, 2.944E-08, 2.845E-08, 2.707E-08, 2.544E-08,
     $ 2.383E-08, 2.257E-08, 2.181E-08, 2.143E-08, 2.120E-08, 2.086E-08,
     $ 2.022E-08, 1.936E-08, 1.850E-08, 1.769E-08, 1.731E-08, 1.738E-08,
     $ 1.814E-08, 1.952E-08, 2.144E-08, 2.367E-08, 2.570E-08, 2.664E-08,
     $ 2.646E-08, 2.549E-08, 2.385E-08, 2.243E-08, 2.206E-08, 2.274E-08,
     $ 2.409E-08, 2.605E-08, 2.812E-08, 2.995E-08, 3.117E-08, 3.149E-08,
     $ 3.072E-08, 2.916E-08, 2.695E-08, 2.517E-08, 2.493E-08, 2.665E-08,
     $ 3.013E-08, 3.499E-08, 3.976E-08, 4.317E-08, 4.474E-08, 4.424E-08,
     $ 4.194E-08, 3.926E-08, 3.720E-08, 3.596E-08, 3.560E-08, 3.650E-08,
     $ 3.791E-08, 3.910E-08, 4.005E-08, 4.136E-08, 4.267E-08, 4.344E-08,
     $ 4.370E-08, 4.328E-08, 4.146E-08, 3.819E-08, 3.441E-08, 3.117E-08,
     $ 2.911E-08, 2.851E-08, 2.904E-08, 2.994E-08, 3.035E-08, 2.980E-08,
     $ 2.878E-08, 2.800E-08, 2.798E-08, 2.848E-08, 2.945E-08, 3.029E-08,
     $ 3.020E-08, 2.902E-08, 2.724E-08, 2.496E-08, 2.228E-08, 1.986E-08,
     $ 1.793E-08, 1.655E-08, 1.577E-08, 1.600E-08, 1.717E-08, 1.887E-08,
     $ 2.107E-08, 2.345E-08, 2.556E-08, 2.724E-08, 2.858E-08, 2.903E-08,
     $ 2.877E-08, 2.802E-08, 2.698E-08, 2.606E-08/
C                                                                       
C     42101 TO 42200 CM-1 DATA.                                         
      DATA (SUN(I),I= 42101, 42200)/                                    
     $ 2.578E-08, 2.600E-08, 2.662E-08, 2.709E-08, 2.689E-08, 2.593E-08,
     $ 2.449E-08, 2.254E-08, 2.046E-08, 1.851E-08, 1.675E-08, 1.498E-08,
     $ 1.332E-08, 1.209E-08, 1.134E-08, 1.109E-08, 1.152E-08, 1.232E-08,
     $ 1.316E-08, 1.393E-08, 1.445E-08, 1.463E-08, 1.494E-08, 1.555E-08,
     $ 1.656E-08, 1.812E-08, 1.994E-08, 2.188E-08, 2.360E-08, 2.494E-08,
     $ 2.593E-08, 2.744E-08, 2.922E-08, 3.131E-08, 3.370E-08, 3.626E-08,
     $ 3.809E-08, 3.947E-08, 4.017E-08, 3.995E-08, 3.915E-08, 3.848E-08,
     $ 3.760E-08, 3.715E-08, 3.781E-08, 3.923E-08, 4.068E-08, 4.219E-08,
     $ 4.375E-08, 4.457E-08, 4.394E-08, 4.211E-08, 3.988E-08, 3.713E-08,
     $ 3.467E-08, 3.365E-08, 3.431E-08, 3.568E-08, 3.754E-08, 3.957E-08,
     $ 4.148E-08, 4.270E-08, 4.305E-08, 4.224E-08, 4.021E-08, 3.666E-08,
     $ 3.214E-08, 2.752E-08, 2.359E-08, 2.056E-08, 1.908E-08, 1.936E-08,
     $ 2.133E-08, 2.444E-08, 2.789E-08, 3.072E-08, 3.234E-08, 3.249E-08,
     $ 3.134E-08, 2.982E-08, 2.852E-08, 2.809E-08, 2.883E-08, 3.017E-08,
     $ 3.142E-08, 3.256E-08, 3.313E-08, 3.241E-08, 3.111E-08, 3.023E-08,
     $ 2.996E-08, 3.022E-08, 3.130E-08, 3.294E-08, 3.416E-08, 3.442E-08,
     $ 3.342E-08, 3.134E-08, 2.845E-08, 2.505E-08/
C                                                                       
C     42201 TO 42300 CM-1 DATA.                                         
      DATA (SUN(I),I= 42201, 42300)/                                    
     $ 2.151E-08, 1.855E-08, 1.629E-08, 1.481E-08, 1.447E-08, 1.545E-08,
     $ 1.730E-08, 1.973E-08, 2.227E-08, 2.436E-08, 2.556E-08, 2.619E-08,
     $ 2.629E-08, 2.604E-08, 2.548E-08, 2.475E-08, 2.362E-08, 2.242E-08,
     $ 2.137E-08, 2.099E-08, 2.144E-08, 2.252E-08, 2.369E-08, 2.456E-08,
     $ 2.488E-08, 2.460E-08, 2.398E-08, 2.334E-08, 2.273E-08, 2.177E-08,
     $ 2.042E-08, 1.889E-08, 1.724E-08, 1.594E-08, 1.530E-08, 1.505E-08,
     $ 1.500E-08, 1.510E-08, 1.512E-08, 1.503E-08, 1.540E-08, 1.635E-08,
     $ 1.791E-08, 2.017E-08, 2.270E-08, 2.502E-08, 2.681E-08, 2.774E-08,
     $ 2.769E-08, 2.723E-08, 2.671E-08, 2.667E-08, 2.739E-08, 2.863E-08,
     $ 3.005E-08, 3.123E-08, 3.159E-08, 3.094E-08, 3.000E-08, 2.912E-08,
     $ 2.839E-08, 2.802E-08, 2.813E-08, 2.802E-08, 2.719E-08, 2.567E-08,
     $ 2.375E-08, 2.150E-08, 1.920E-08, 1.717E-08, 1.560E-08, 1.424E-08,
     $ 1.315E-08, 1.247E-08, 1.243E-08, 1.299E-08, 1.412E-08, 1.572E-08,
     $ 1.756E-08, 1.948E-08, 2.150E-08, 2.375E-08, 2.608E-08, 2.838E-08,
     $ 3.001E-08, 3.086E-08, 3.059E-08, 2.895E-08, 2.636E-08, 2.376E-08,
     $ 2.129E-08, 1.961E-08, 1.961E-08, 2.094E-08, 2.276E-08, 2.483E-08,
     $ 2.698E-08, 2.866E-08, 3.000E-08, 3.131E-08/
C                                                                       
C     42301 TO 42400 CM-1 DATA.                                         
      DATA (SUN(I),I= 42301, 42400)/                                    
     $ 3.288E-08, 3.444E-08, 3.617E-08, 3.793E-08, 4.006E-08, 4.219E-08,
     $ 4.418E-08, 4.532E-08, 4.547E-08, 4.444E-08, 4.257E-08, 4.018E-08,
     $ 3.798E-08, 3.635E-08, 3.515E-08, 3.407E-08, 3.256E-08, 3.029E-08,
     $ 2.744E-08, 2.428E-08, 2.107E-08, 1.863E-08, 1.759E-08, 1.750E-08,
     $ 1.825E-08, 1.982E-08, 2.143E-08, 2.240E-08, 2.307E-08, 2.350E-08,
     $ 2.355E-08, 2.403E-08, 2.515E-08, 2.669E-08, 2.817E-08, 2.945E-08,
     $ 3.018E-08, 3.049E-08, 3.014E-08, 2.966E-08, 2.919E-08, 2.845E-08,
     $ 2.708E-08, 2.540E-08, 2.333E-08, 2.095E-08, 1.866E-08, 1.674E-08,
     $ 1.532E-08, 1.426E-08, 1.359E-08, 1.307E-08, 1.285E-08, 1.271E-08,
     $ 1.272E-08, 1.276E-08, 1.296E-08, 1.317E-08, 1.351E-08, 1.418E-08,
     $ 1.525E-08, 1.645E-08, 1.768E-08, 1.877E-08, 1.953E-08, 1.982E-08,
     $ 2.000E-08, 2.000E-08, 1.964E-08, 1.883E-08, 1.765E-08, 1.604E-08,
     $ 1.436E-08, 1.311E-08, 1.239E-08, 1.215E-08, 1.249E-08, 1.341E-08,
     $ 1.459E-08, 1.602E-08, 1.804E-08, 2.049E-08, 2.290E-08, 2.532E-08,
     $ 2.800E-08, 3.037E-08, 3.195E-08, 3.289E-08, 3.343E-08, 3.334E-08,
     $ 3.316E-08, 3.347E-08, 3.442E-08, 3.528E-08, 3.575E-08, 3.539E-08,
     $ 3.446E-08, 3.298E-08, 3.151E-08, 3.044E-08/
C                                                                       
C     42401 TO 42500 CM-1 DATA.                                         
      DATA (SUN(I),I= 42401, 42500)/                                    
     $ 3.030E-08, 3.098E-08, 3.248E-08, 3.477E-08, 3.762E-08, 4.012E-08,
     $ 4.125E-08, 4.070E-08, 3.858E-08, 3.517E-08, 3.121E-08, 2.825E-08,
     $ 2.710E-08, 2.779E-08, 2.990E-08, 3.281E-08, 3.547E-08, 3.698E-08,
     $ 3.671E-08, 3.501E-08, 3.286E-08, 3.058E-08, 2.858E-08, 2.784E-08,
     $ 2.895E-08, 3.151E-08, 3.543E-08, 4.023E-08, 4.465E-08, 4.736E-08,
     $ 4.799E-08, 4.635E-08, 4.318E-08, 3.995E-08, 3.753E-08, 3.612E-08,
     $ 3.573E-08, 3.609E-08, 3.591E-08, 3.451E-08, 3.207E-08, 2.907E-08,
     $ 2.560E-08, 2.230E-08, 1.995E-08, 1.842E-08, 1.731E-08, 1.658E-08,
     $ 1.621E-08, 1.609E-08, 1.633E-08, 1.706E-08, 1.822E-08, 1.940E-08,
     $ 2.019E-08, 2.045E-08, 2.047E-08, 2.055E-08, 2.143E-08, 2.328E-08,
     $ 2.583E-08, 2.824E-08, 3.019E-08, 3.138E-08, 3.233E-08, 3.343E-08,
     $ 3.495E-08, 3.642E-08, 3.701E-08, 3.609E-08, 3.379E-08, 3.075E-08,
     $ 2.770E-08, 2.540E-08, 2.373E-08, 2.273E-08, 2.247E-08, 2.325E-08,
     $ 2.559E-08, 2.988E-08, 3.519E-08, 4.030E-08, 4.380E-08, 4.447E-08,
     $ 4.275E-08, 4.010E-08, 3.766E-08, 3.676E-08, 3.800E-08, 4.030E-08,
     $ 4.199E-08, 4.247E-08, 4.127E-08, 3.850E-08, 3.478E-08, 3.144E-08,
     $ 2.931E-08, 2.877E-08, 2.974E-08, 3.200E-08/
C                                                                       
C     42501 TO 42600 CM-1 DATA.                                         
      DATA (SUN(I),I= 42501, 42600)/                                    
     $ 3.442E-08, 3.563E-08, 3.523E-08, 3.361E-08, 3.129E-08, 2.921E-08,
     $ 2.863E-08, 2.960E-08, 3.134E-08, 3.313E-08, 3.443E-08, 3.453E-08,
     $ 3.329E-08, 3.077E-08, 2.793E-08, 2.565E-08, 2.426E-08, 2.412E-08,
     $ 2.572E-08, 2.773E-08, 2.922E-08, 3.018E-08, 3.028E-08, 2.915E-08,
     $ 2.810E-08, 2.730E-08, 2.618E-08, 2.507E-08, 2.445E-08, 2.388E-08,
     $ 2.360E-08, 2.454E-08, 2.646E-08, 2.891E-08, 3.124E-08, 3.319E-08,
     $ 3.420E-08, 3.435E-08, 3.361E-08, 3.268E-08, 3.163E-08, 3.050E-08,
     $ 2.936E-08, 2.837E-08, 2.748E-08, 2.686E-08, 2.641E-08, 2.583E-08,
     $ 2.531E-08, 2.461E-08, 2.365E-08, 2.294E-08, 2.276E-08, 2.269E-08,
     $ 2.290E-08, 2.331E-08, 2.324E-08, 2.243E-08, 2.122E-08, 1.970E-08,
     $ 1.792E-08, 1.640E-08, 1.541E-08, 1.479E-08, 1.434E-08, 1.394E-08,
     $ 1.343E-08, 1.269E-08, 1.191E-08, 1.129E-08, 1.095E-08, 1.091E-08,
     $ 1.118E-08, 1.150E-08, 1.181E-08, 1.219E-08, 1.277E-08, 1.350E-08,
     $ 1.448E-08, 1.542E-08, 1.598E-08, 1.567E-08, 1.471E-08, 1.345E-08,
     $ 1.253E-08, 1.253E-08, 1.396E-08, 1.650E-08, 1.936E-08, 2.172E-08,
     $ 2.318E-08, 2.368E-08, 2.361E-08, 2.362E-08, 2.408E-08, 2.475E-08,
     $ 2.510E-08, 2.457E-08, 2.299E-08, 2.086E-08/
C                                                                       
C     42601 TO 42700 CM-1 DATA.                                         
      DATA (SUN(I),I= 42601, 42700)/                                    
     $ 1.869E-08, 1.717E-08, 1.673E-08, 1.718E-08, 1.793E-08, 1.867E-08,
     $ 1.912E-08, 1.920E-08, 1.922E-08, 1.920E-08, 1.915E-08, 1.915E-08,
     $ 1.910E-08, 1.892E-08, 1.880E-08, 1.855E-08, 1.810E-08, 1.744E-08,
     $ 1.639E-08, 1.496E-08, 1.351E-08, 1.215E-08, 1.121E-08, 1.095E-08,
     $ 1.138E-08, 1.250E-08, 1.395E-08, 1.531E-08, 1.657E-08, 1.763E-08,
     $ 1.830E-08, 1.903E-08, 1.988E-08, 2.041E-08, 2.051E-08, 2.023E-08,
     $ 1.943E-08, 1.819E-08, 1.693E-08, 1.563E-08, 1.440E-08, 1.334E-08,
     $ 1.258E-08, 1.193E-08, 1.167E-08, 1.163E-08, 1.167E-08, 1.159E-08,
     $ 1.156E-08, 1.129E-08, 1.092E-08, 1.045E-08, 9.936E-09, 9.287E-09,
     $ 8.751E-09, 8.396E-09, 8.286E-09, 8.366E-09, 8.748E-09, 9.450E-09,
     $ 1.027E-08, 1.102E-08, 1.185E-08, 1.268E-08, 1.331E-08, 1.387E-08,
     $ 1.461E-08, 1.543E-08, 1.634E-08, 1.737E-08, 1.840E-08, 1.920E-08,
     $ 1.988E-08, 2.055E-08, 2.126E-08, 2.197E-08, 2.266E-08, 2.330E-08,
     $ 2.376E-08, 2.421E-08, 2.493E-08, 2.602E-08, 2.716E-08, 2.829E-08,
     $ 2.928E-08, 2.998E-08, 3.067E-08, 3.160E-08, 3.245E-08, 3.307E-08,
     $ 3.371E-08, 3.402E-08, 3.383E-08, 3.390E-08, 3.387E-08, 3.292E-08,
     $ 3.122E-08, 2.930E-08, 2.672E-08, 2.416E-08/
C                                                                       
C     42701 TO 42800 CM-1 DATA.                                         
      DATA (SUN(I),I= 42701, 42800)/                                    
     $ 2.261E-08, 2.211E-08, 2.203E-08, 2.220E-08, 2.256E-08, 2.276E-08,
     $ 2.270E-08, 2.271E-08, 2.306E-08, 2.354E-08, 2.408E-08, 2.429E-08,
     $ 2.411E-08, 2.380E-08, 2.359E-08, 2.326E-08, 2.329E-08, 2.369E-08,
     $ 2.422E-08, 2.456E-08, 2.478E-08, 2.482E-08, 2.452E-08, 2.348E-08,
     $ 2.195E-08, 2.034E-08, 1.858E-08, 1.695E-08, 1.587E-08, 1.537E-08,
     $ 1.528E-08, 1.566E-08, 1.627E-08, 1.722E-08, 1.810E-08, 1.865E-08,
     $ 1.886E-08, 1.898E-08, 1.868E-08, 1.846E-08, 1.849E-08, 1.853E-08,
     $ 1.827E-08, 1.798E-08, 1.733E-08, 1.621E-08, 1.500E-08, 1.410E-08,
     $ 1.341E-08, 1.306E-08, 1.327E-08, 1.373E-08, 1.399E-08, 1.400E-08,
     $ 1.384E-08, 1.327E-08, 1.248E-08, 1.175E-08, 1.134E-08, 1.126E-08,
     $ 1.166E-08, 1.251E-08, 1.353E-08, 1.434E-08, 1.495E-08, 1.530E-08,
     $ 1.546E-08, 1.568E-08, 1.595E-08, 1.599E-08, 1.588E-08, 1.570E-08,
     $ 1.566E-08, 1.610E-08, 1.733E-08, 1.910E-08, 2.109E-08, 2.272E-08,
     $ 2.384E-08, 2.443E-08, 2.470E-08, 2.482E-08, 2.516E-08, 2.554E-08,
     $ 2.600E-08, 2.634E-08, 2.665E-08, 2.723E-08, 2.825E-08, 2.923E-08,
     $ 3.040E-08, 3.192E-08, 3.349E-08, 3.482E-08, 3.619E-08, 3.758E-08,
     $ 3.829E-08, 3.798E-08, 3.734E-08, 3.705E-08/
C                                                                       
C     42801 TO 42900 CM-1 DATA.                                         
      DATA (SUN(I),I= 42801, 42900)/                                    
     $ 3.709E-08, 3.791E-08, 3.986E-08, 4.170E-08, 4.218E-08, 4.129E-08,
     $ 3.925E-08, 3.625E-08, 3.358E-08, 3.205E-08, 3.128E-08, 3.059E-08,
     $ 2.955E-08, 2.781E-08, 2.532E-08, 2.280E-08, 2.069E-08, 1.927E-08,
     $ 1.838E-08, 1.817E-08, 1.839E-08, 1.930E-08, 2.077E-08, 2.254E-08,
     $ 2.423E-08, 2.571E-08, 2.664E-08, 2.708E-08, 2.753E-08, 2.815E-08,
     $ 2.865E-08, 2.901E-08, 2.915E-08, 2.882E-08, 2.811E-08, 2.746E-08,
     $ 2.684E-08, 2.629E-08, 2.579E-08, 2.524E-08, 2.447E-08, 2.359E-08,
     $ 2.282E-08, 2.198E-08, 2.083E-08, 1.938E-08, 1.768E-08, 1.568E-08,
     $ 1.357E-08, 1.186E-08, 1.070E-08, 1.004E-08, 9.889E-09, 1.038E-08,
     $ 1.113E-08, 1.220E-08, 1.352E-08, 1.500E-08, 1.644E-08, 1.811E-08,
     $ 1.965E-08, 2.104E-08, 2.225E-08, 2.322E-08, 2.366E-08, 2.375E-08,
     $ 2.338E-08, 2.257E-08, 2.132E-08, 1.999E-08, 1.878E-08, 1.788E-08,
     $ 1.737E-08, 1.725E-08, 1.703E-08, 1.642E-08, 1.548E-08, 1.438E-08,
     $ 1.335E-08, 1.267E-08, 1.266E-08, 1.340E-08, 1.476E-08, 1.649E-08,
     $ 1.883E-08, 2.155E-08, 2.416E-08, 2.652E-08, 2.866E-08, 3.024E-08,
     $ 3.127E-08, 3.204E-08, 3.230E-08, 3.209E-08, 3.164E-08, 3.102E-08,
     $ 3.015E-08, 2.933E-08, 2.860E-08, 2.734E-08/
C                                                                       
C     42901 TO 43000 CM-1 DATA.                                         
      DATA (SUN(I),I= 42901, 43000)/                                    
     $ 2.525E-08, 2.280E-08, 2.048E-08, 1.866E-08, 1.805E-08, 1.905E-08,
     $ 2.104E-08, 2.350E-08, 2.628E-08, 2.937E-08, 3.254E-08, 3.602E-08,
     $ 3.949E-08, 4.236E-08, 4.416E-08, 4.477E-08, 4.398E-08, 4.210E-08,
     $ 3.957E-08, 3.641E-08, 3.300E-08, 2.983E-08, 2.716E-08, 2.536E-08,
     $ 2.489E-08, 2.537E-08, 2.635E-08, 2.735E-08, 2.796E-08, 2.807E-08,
     $ 2.823E-08, 2.910E-08, 3.104E-08, 3.380E-08, 3.670E-08, 3.904E-08,
     $ 3.998E-08, 3.910E-08, 3.643E-08, 3.280E-08, 2.900E-08, 2.587E-08,
     $ 2.381E-08, 2.303E-08, 2.293E-08, 2.276E-08, 2.196E-08, 2.043E-08,
     $ 1.834E-08, 1.609E-08, 1.409E-08, 1.262E-08, 1.183E-08, 1.167E-08,
     $ 1.220E-08, 1.339E-08, 1.508E-08, 1.701E-08, 1.903E-08, 2.094E-08,
     $ 2.265E-08, 2.419E-08, 2.573E-08, 2.726E-08, 2.861E-08, 2.925E-08,
     $ 2.891E-08, 2.758E-08, 2.524E-08, 2.238E-08, 1.991E-08, 1.826E-08,
     $ 1.725E-08, 1.674E-08, 1.652E-08, 1.641E-08, 1.620E-08, 1.595E-08,
     $ 1.565E-08, 1.527E-08, 1.445E-08, 1.342E-08, 1.254E-08, 1.203E-08,
     $ 1.192E-08, 1.260E-08, 1.395E-08, 1.556E-08, 1.738E-08, 1.927E-08,
     $ 2.074E-08, 2.144E-08, 2.158E-08, 2.142E-08, 2.138E-08, 2.189E-08,
     $ 2.334E-08, 2.577E-08, 2.850E-08, 3.065E-08/
C                                                                       
C     43001 TO 43100 CM-1 DATA.                                         
      DATA (SUN(I),I= 43001, 43100)/                                    
     $ 3.171E-08, 3.172E-08, 3.092E-08, 3.023E-08, 3.031E-08, 3.103E-08,
     $ 3.164E-08, 3.147E-08, 2.992E-08, 2.737E-08, 2.529E-08, 2.530E-08,
     $ 2.777E-08, 3.270E-08, 3.937E-08, 4.630E-08, 5.179E-08, 5.517E-08,
     $ 5.613E-08, 5.542E-08, 5.389E-08, 5.200E-08, 5.036E-08, 4.975E-08,
     $ 4.946E-08, 4.885E-08, 4.809E-08, 4.683E-08, 4.474E-08, 4.211E-08,
     $ 3.939E-08, 3.705E-08, 3.650E-08, 3.740E-08, 3.889E-08, 4.013E-08,
     $ 4.061E-08, 3.955E-08, 3.766E-08, 3.640E-08, 3.674E-08, 3.829E-08,
     $ 4.005E-08, 4.138E-08, 4.149E-08, 4.028E-08, 3.840E-08, 3.645E-08,
     $ 3.412E-08, 3.129E-08, 2.805E-08, 2.454E-08, 2.142E-08, 1.945E-08,
     $ 1.871E-08, 1.867E-08, 1.873E-08, 1.827E-08, 1.698E-08, 1.513E-08,
     $ 1.310E-08, 1.134E-08, 1.025E-08, 1.012E-08, 1.099E-08, 1.278E-08,
     $ 1.508E-08, 1.742E-08, 1.957E-08, 2.132E-08, 2.277E-08, 2.426E-08,
     $ 2.576E-08, 2.714E-08, 2.850E-08, 2.934E-08, 2.925E-08, 2.826E-08,
     $ 2.637E-08, 2.344E-08, 2.015E-08, 1.696E-08, 1.427E-08, 1.231E-08,
     $ 1.112E-08, 1.027E-08, 9.653E-09, 9.184E-09, 8.868E-09, 8.918E-09,
     $ 9.550E-09, 1.053E-08, 1.171E-08, 1.302E-08, 1.426E-08, 1.525E-08,
     $ 1.618E-08, 1.714E-08, 1.825E-08, 1.944E-08/
C                                                                       
C     43101 TO 43200 CM-1 DATA.                                         
      DATA (SUN(I),I= 43101, 43200)/                                    
     $ 2.082E-08, 2.225E-08, 2.343E-08, 2.408E-08, 2.466E-08, 2.524E-08,
     $ 2.625E-08, 2.779E-08, 2.988E-08, 3.232E-08, 3.494E-08, 3.675E-08,
     $ 3.765E-08, 3.771E-08, 3.650E-08, 3.369E-08, 3.065E-08, 2.831E-08,
     $ 2.648E-08, 2.533E-08, 2.579E-08, 2.721E-08, 2.851E-08, 2.979E-08,
     $ 3.105E-08, 3.148E-08, 3.122E-08, 3.100E-08, 3.120E-08, 3.207E-08,
     $ 3.369E-08, 3.534E-08, 3.629E-08, 3.617E-08, 3.479E-08, 3.223E-08,
     $ 2.895E-08, 2.534E-08, 2.164E-08, 1.813E-08, 1.524E-08, 1.339E-08,
     $ 1.297E-08, 1.394E-08, 1.609E-08, 1.906E-08, 2.239E-08, 2.587E-08,
     $ 2.931E-08, 3.254E-08, 3.532E-08, 3.757E-08, 3.881E-08, 3.911E-08,
     $ 3.850E-08, 3.726E-08, 3.535E-08, 3.287E-08, 2.966E-08, 2.594E-08,
     $ 2.191E-08, 1.829E-08, 1.572E-08, 1.487E-08, 1.578E-08, 1.826E-08,
     $ 2.153E-08, 2.473E-08, 2.728E-08, 2.934E-08, 3.110E-08, 3.326E-08,
     $ 3.660E-08, 4.095E-08, 4.572E-08, 5.015E-08, 5.338E-08, 5.443E-08,
     $ 5.315E-08, 4.938E-08, 4.402E-08, 3.803E-08, 3.233E-08, 2.775E-08,
     $ 2.524E-08, 2.456E-08, 2.541E-08, 2.776E-08, 3.114E-08, 3.487E-08,
     $ 3.828E-08, 4.070E-08, 4.141E-08, 4.044E-08, 3.778E-08, 3.391E-08,
     $ 2.923E-08, 2.437E-08, 1.962E-08, 1.562E-08/
C                                                                       
C     43201 TO 43300 CM-1 DATA.                                         
      DATA (SUN(I),I= 43201, 43300)/                                    
     $ 1.283E-08, 1.145E-08, 1.121E-08, 1.169E-08, 1.223E-08, 1.244E-08,
     $ 1.257E-08, 1.302E-08, 1.398E-08, 1.552E-08, 1.735E-08, 1.882E-08,
     $ 1.927E-08, 1.867E-08, 1.747E-08, 1.612E-08, 1.508E-08, 1.477E-08,
     $ 1.547E-08, 1.696E-08, 1.892E-08, 2.090E-08, 2.268E-08, 2.365E-08,
     $ 2.344E-08, 2.221E-08, 2.037E-08, 1.801E-08, 1.568E-08, 1.380E-08,
     $ 1.254E-08, 1.198E-08, 1.229E-08, 1.320E-08, 1.457E-08, 1.613E-08,
     $ 1.778E-08, 1.943E-08, 2.116E-08, 2.259E-08, 2.345E-08, 2.344E-08,
     $ 2.254E-08, 2.085E-08, 1.908E-08, 1.775E-08, 1.704E-08, 1.671E-08,
     $ 1.660E-08, 1.628E-08, 1.561E-08, 1.458E-08, 1.334E-08, 1.187E-08,
     $ 1.045E-08, 9.299E-09, 8.668E-09, 8.711E-09, 9.681E-09, 1.130E-08,
     $ 1.334E-08, 1.558E-08, 1.794E-08, 2.013E-08, 2.222E-08, 2.412E-08,
     $ 2.583E-08, 2.703E-08, 2.763E-08, 2.743E-08, 2.652E-08, 2.506E-08,
     $ 2.366E-08, 2.265E-08, 2.218E-08, 2.230E-08, 2.273E-08, 2.294E-08,
     $ 2.282E-08, 2.252E-08, 2.175E-08, 2.061E-08, 1.950E-08, 1.870E-08,
     $ 1.848E-08, 1.930E-08, 2.117E-08, 2.362E-08, 2.582E-08, 2.708E-08,
     $ 2.687E-08, 2.520E-08, 2.261E-08, 2.005E-08, 1.836E-08, 1.812E-08,
     $ 1.966E-08, 2.277E-08, 2.666E-08, 3.027E-08/
C                                                                       
C     43301 TO 43400 CM-1 DATA.                                         
      DATA (SUN(I),I= 43301, 43400)/                                    
     $ 3.312E-08, 3.495E-08, 3.571E-08, 3.590E-08, 3.620E-08, 3.671E-08,
     $ 3.690E-08, 3.652E-08, 3.576E-08, 3.496E-08, 3.415E-08, 3.371E-08,
     $ 3.333E-08, 3.212E-08, 2.956E-08, 2.636E-08, 2.343E-08, 2.210E-08,
     $ 2.313E-08, 2.624E-08, 3.040E-08, 3.403E-08, 3.559E-08, 3.483E-08,
     $ 3.244E-08, 2.896E-08, 2.604E-08, 2.537E-08, 2.702E-08, 3.046E-08,
     $ 3.551E-08, 4.098E-08, 4.513E-08, 4.784E-08, 4.952E-08, 4.969E-08,
     $ 4.811E-08, 4.571E-08, 4.289E-08, 3.935E-08, 3.551E-08, 3.284E-08,
     $ 3.196E-08, 3.233E-08, 3.360E-08, 3.613E-08, 3.902E-08, 4.089E-08,
     $ 4.195E-08, 4.336E-08, 4.525E-08, 4.715E-08, 4.933E-08, 5.148E-08,
     $ 5.248E-08, 5.184E-08, 5.032E-08, 4.834E-08, 4.655E-08, 4.543E-08,
     $ 4.455E-08, 4.314E-08, 4.109E-08, 3.833E-08, 3.505E-08, 3.196E-08,
     $ 2.950E-08, 2.801E-08, 2.752E-08, 2.744E-08, 2.737E-08, 2.739E-08,
     $ 2.716E-08, 2.644E-08, 2.569E-08, 2.530E-08, 2.568E-08, 2.687E-08,
     $ 2.860E-08, 3.029E-08, 3.170E-08, 3.211E-08, 3.181E-08, 3.130E-08,
     $ 3.100E-08, 3.086E-08, 3.112E-08, 3.111E-08, 3.033E-08, 2.889E-08,
     $ 2.737E-08, 2.583E-08, 2.440E-08, 2.327E-08, 2.217E-08, 2.059E-08,
     $ 1.859E-08, 1.667E-08, 1.531E-08, 1.457E-08/
C                                                                       
C     43401 TO 43500 CM-1 DATA.                                         
      DATA (SUN(I),I= 43401, 43500)/                                    
     $ 1.454E-08, 1.497E-08, 1.529E-08, 1.494E-08, 1.395E-08, 1.257E-08,
     $ 1.140E-08, 1.111E-08, 1.201E-08, 1.404E-08, 1.691E-08, 2.006E-08,
     $ 2.281E-08, 2.492E-08, 2.655E-08, 2.792E-08, 2.924E-08, 3.081E-08,
     $ 3.265E-08, 3.421E-08, 3.492E-08, 3.451E-08, 3.339E-08, 3.200E-08,
     $ 3.106E-08, 3.105E-08, 3.189E-08, 3.244E-08, 3.196E-08, 3.007E-08,
     $ 2.688E-08, 2.305E-08, 1.988E-08, 1.795E-08, 1.755E-08, 1.864E-08,
     $ 2.065E-08, 2.270E-08, 2.456E-08, 2.600E-08, 2.667E-08, 2.665E-08,
     $ 2.642E-08, 2.609E-08, 2.522E-08, 2.386E-08, 2.218E-08, 2.022E-08,
     $ 1.812E-08, 1.662E-08, 1.608E-08, 1.634E-08, 1.712E-08, 1.811E-08,
     $ 1.894E-08, 1.915E-08, 1.871E-08, 1.768E-08, 1.623E-08, 1.499E-08,
     $ 1.463E-08, 1.539E-08, 1.718E-08, 1.954E-08, 2.147E-08, 2.235E-08,
     $ 2.208E-08, 2.101E-08, 2.005E-08, 1.992E-08, 2.045E-08, 2.146E-08,
     $ 2.278E-08, 2.355E-08, 2.313E-08, 2.207E-08, 2.065E-08, 1.881E-08,
     $ 1.703E-08, 1.591E-08, 1.546E-08, 1.573E-08, 1.687E-08, 1.853E-08,
     $ 2.031E-08, 2.180E-08, 2.248E-08, 2.217E-08, 2.114E-08, 1.996E-08,
     $ 1.899E-08, 1.823E-08, 1.744E-08, 1.653E-08, 1.508E-08, 1.310E-08,
     $ 1.120E-08, 1.005E-08, 9.731E-09, 1.041E-08/
C                                                                       
C     43501 TO 43600 CM-1 DATA.                                         
      DATA (SUN(I),I= 43501, 43600)/                                    
     $ 1.172E-08, 1.300E-08, 1.375E-08, 1.407E-08, 1.391E-08, 1.370E-08,
     $ 1.384E-08, 1.430E-08, 1.472E-08, 1.507E-08, 1.521E-08, 1.521E-08,
     $ 1.530E-08, 1.562E-08, 1.583E-08, 1.576E-08, 1.547E-08, 1.498E-08,
     $ 1.431E-08, 1.393E-08, 1.401E-08, 1.429E-08, 1.456E-08, 1.491E-08,
     $ 1.505E-08, 1.477E-08, 1.413E-08, 1.381E-08, 1.417E-08, 1.549E-08,
     $ 1.795E-08, 2.141E-08, 2.482E-08, 2.747E-08, 2.885E-08, 2.898E-08,
     $ 2.858E-08, 2.878E-08, 3.018E-08, 3.334E-08, 3.806E-08, 4.320E-08,
     $ 4.766E-08, 5.072E-08, 5.181E-08, 5.057E-08, 4.737E-08, 4.278E-08,
     $ 3.759E-08, 3.245E-08, 2.846E-08, 2.614E-08, 2.552E-08, 2.588E-08,
     $ 2.664E-08, 2.731E-08, 2.762E-08, 2.727E-08, 2.671E-08, 2.656E-08,
     $ 2.672E-08, 2.695E-08, 2.726E-08, 2.757E-08, 2.729E-08, 2.620E-08,
     $ 2.441E-08, 2.268E-08, 2.154E-08, 2.129E-08, 2.238E-08, 2.492E-08,
     $ 2.767E-08, 2.948E-08, 2.991E-08, 2.863E-08, 2.573E-08, 2.230E-08,
     $ 1.953E-08, 1.835E-08, 1.923E-08, 2.177E-08, 2.541E-08, 2.908E-08,
     $ 3.152E-08, 3.185E-08, 3.082E-08, 2.897E-08, 2.688E-08, 2.500E-08,
     $ 2.403E-08, 2.374E-08, 2.386E-08, 2.443E-08, 2.586E-08, 2.804E-08,
     $ 3.029E-08, 3.206E-08, 3.310E-08, 3.306E-08/
C                                                                       
C     43601 TO 43700 CM-1 DATA.                                         
      DATA (SUN(I),I= 43601, 43700)/                                    
     $ 3.158E-08, 2.899E-08, 2.579E-08, 2.231E-08, 1.918E-08, 1.724E-08,
     $ 1.691E-08, 1.806E-08, 2.030E-08, 2.275E-08, 2.444E-08, 2.500E-08,
     $ 2.470E-08, 2.386E-08, 2.285E-08, 2.229E-08, 2.255E-08, 2.305E-08,
     $ 2.336E-08, 2.372E-08, 2.417E-08, 2.412E-08, 2.407E-08, 2.474E-08,
     $ 2.582E-08, 2.673E-08, 2.770E-08, 2.823E-08, 2.748E-08, 2.553E-08,
     $ 2.297E-08, 2.019E-08, 1.785E-08, 1.685E-08, 1.713E-08, 1.825E-08,
     $ 1.982E-08, 2.165E-08, 2.292E-08, 2.337E-08, 2.321E-08, 2.257E-08,
     $ 2.148E-08, 2.078E-08, 2.099E-08, 2.215E-08, 2.391E-08, 2.562E-08,
     $ 2.638E-08, 2.569E-08, 2.355E-08, 2.042E-08, 1.709E-08, 1.446E-08,
     $ 1.325E-08, 1.359E-08, 1.504E-08, 1.696E-08, 1.871E-08, 1.981E-08,
     $ 2.022E-08, 2.038E-08, 2.081E-08, 2.178E-08, 2.321E-08, 2.490E-08,
     $ 2.667E-08, 2.819E-08, 2.878E-08, 2.828E-08, 2.678E-08, 2.451E-08,
     $ 2.207E-08, 2.051E-08, 2.043E-08, 2.183E-08, 2.417E-08, 2.677E-08,
     $ 2.927E-08, 3.113E-08, 3.201E-08, 3.216E-08, 3.211E-08, 3.219E-08,
     $ 3.281E-08, 3.457E-08, 3.707E-08, 3.935E-08, 4.022E-08, 3.954E-08,
     $ 3.734E-08, 3.430E-08, 3.107E-08, 2.853E-08, 2.633E-08, 2.396E-08,
     $ 2.127E-08, 1.892E-08, 1.686E-08, 1.540E-08/
C                                                                       
C     43701 TO 43800 CM-1 DATA.                                         
      DATA (SUN(I),I= 43701, 43800)/                                    
     $ 1.484E-08, 1.507E-08, 1.506E-08, 1.464E-08, 1.390E-08, 1.286E-08,
     $ 1.160E-08, 1.076E-08, 1.059E-08, 1.094E-08, 1.168E-08, 1.286E-08,
     $ 1.437E-08, 1.609E-08, 1.819E-08, 2.072E-08, 2.347E-08, 2.585E-08,
     $ 2.731E-08, 2.750E-08, 2.648E-08, 2.445E-08, 2.199E-08, 1.976E-08,
     $ 1.794E-08, 1.655E-08, 1.578E-08, 1.594E-08, 1.713E-08, 1.930E-08,
     $ 2.229E-08, 2.570E-08, 2.908E-08, 3.224E-08, 3.533E-08, 3.805E-08,
     $ 4.002E-08, 4.094E-08, 4.082E-08, 4.014E-08, 3.982E-08, 4.028E-08,
     $ 4.160E-08, 4.344E-08, 4.473E-08, 4.479E-08, 4.350E-08, 4.087E-08,
     $ 3.720E-08, 3.321E-08, 2.949E-08, 2.680E-08, 2.579E-08, 2.666E-08,
     $ 2.920E-08, 3.264E-08, 3.579E-08, 3.795E-08, 3.886E-08, 3.816E-08,
     $ 3.587E-08, 3.279E-08, 2.920E-08, 2.493E-08, 2.064E-08, 1.731E-08,
     $ 1.524E-08, 1.499E-08, 1.707E-08, 2.086E-08, 2.506E-08, 2.860E-08,
     $ 3.069E-08, 3.086E-08, 2.958E-08, 2.815E-08, 2.717E-08, 2.624E-08,
     $ 2.546E-08, 2.470E-08, 2.331E-08, 2.130E-08, 1.965E-08, 1.886E-08,
     $ 1.877E-08, 1.907E-08, 1.980E-08, 2.074E-08, 2.128E-08, 2.151E-08,
     $ 2.229E-08, 2.380E-08, 2.590E-08, 2.874E-08, 3.243E-08, 3.630E-08,
     $ 3.962E-08, 4.208E-08, 4.382E-08, 4.447E-08/
C                                                                       
C     43801 TO 43900 CM-1 DATA.                                         
      DATA (SUN(I),I= 43801, 43900)/                                    
     $ 4.414E-08, 4.352E-08, 4.285E-08, 4.168E-08, 4.013E-08, 3.846E-08,
     $ 3.642E-08, 3.437E-08, 3.297E-08, 3.221E-08, 3.158E-08, 3.088E-08,
     $ 2.983E-08, 2.853E-08, 2.735E-08, 2.693E-08, 2.760E-08, 2.910E-08,
     $ 3.083E-08, 3.235E-08, 3.347E-08, 3.383E-08, 3.345E-08, 3.261E-08,
     $ 3.161E-08, 3.048E-08, 2.952E-08, 2.913E-08, 2.942E-08, 3.039E-08,
     $ 3.179E-08, 3.355E-08, 3.561E-08, 3.731E-08, 3.790E-08, 3.722E-08,
     $ 3.494E-08, 3.087E-08, 2.589E-08, 2.123E-08, 1.747E-08, 1.500E-08,
     $ 1.393E-08, 1.372E-08, 1.372E-08, 1.369E-08, 1.376E-08, 1.408E-08,
     $ 1.485E-08, 1.580E-08, 1.678E-08, 1.766E-08, 1.844E-08, 1.949E-08,
     $ 2.153E-08, 2.465E-08, 2.835E-08, 3.176E-08, 3.400E-08, 3.464E-08,
     $ 3.376E-08, 3.181E-08, 2.968E-08, 2.770E-08, 2.563E-08, 2.328E-08,
     $ 2.082E-08, 1.833E-08, 1.643E-08, 1.587E-08, 1.692E-08, 1.931E-08,
     $ 2.246E-08, 2.530E-08, 2.681E-08, 2.688E-08, 2.580E-08, 2.434E-08,
     $ 2.343E-08, 2.383E-08, 2.532E-08, 2.735E-08, 2.920E-08, 3.021E-08,
     $ 2.987E-08, 2.816E-08, 2.541E-08, 2.211E-08, 1.910E-08, 1.701E-08,
     $ 1.630E-08, 1.699E-08, 1.867E-08, 2.039E-08, 2.156E-08, 2.194E-08,
     $ 2.140E-08, 2.009E-08, 1.878E-08, 1.826E-08/
C                                                                       
C     43901 TO 44000 CM-1 DATA.                                         
      DATA (SUN(I),I= 43901, 44000)/                                    
     $ 1.871E-08, 2.031E-08, 2.312E-08, 2.651E-08, 2.912E-08, 3.047E-08,
     $ 3.038E-08, 2.874E-08, 2.595E-08, 2.306E-08, 2.072E-08, 1.909E-08,
     $ 1.840E-08, 1.863E-08, 1.922E-08, 1.963E-08, 1.958E-08, 1.876E-08,
     $ 1.719E-08, 1.540E-08, 1.378E-08, 1.270E-08, 1.233E-08, 1.266E-08,
     $ 1.329E-08, 1.389E-08, 1.425E-08, 1.453E-08, 1.468E-08, 1.480E-08,
     $ 1.521E-08, 1.585E-08, 1.640E-08, 1.687E-08, 1.731E-08, 1.760E-08,
     $ 1.814E-08, 1.936E-08, 2.134E-08, 2.403E-08, 2.707E-08, 2.968E-08,
     $ 3.109E-08, 3.080E-08, 2.887E-08, 2.583E-08, 2.235E-08, 1.924E-08,
     $ 1.738E-08, 1.697E-08, 1.760E-08, 1.891E-08, 2.058E-08, 2.179E-08,
     $ 2.191E-08, 2.107E-08, 1.959E-08, 1.751E-08, 1.524E-08, 1.341E-08,
     $ 1.225E-08, 1.159E-08, 1.138E-08, 1.161E-08, 1.213E-08, 1.285E-08,
     $ 1.385E-08, 1.513E-08, 1.654E-08, 1.790E-08, 1.899E-08, 1.970E-08,
     $ 2.011E-08, 2.032E-08, 2.045E-08, 2.080E-08, 2.155E-08, 2.235E-08,
     $ 2.288E-08, 2.292E-08, 2.219E-08, 2.049E-08, 1.831E-08, 1.637E-08,
     $ 1.543E-08, 1.583E-08, 1.749E-08, 2.000E-08, 2.257E-08, 2.411E-08,
     $ 2.422E-08, 2.318E-08, 2.118E-08, 1.875E-08, 1.657E-08, 1.492E-08,
     $ 1.370E-08, 1.301E-08, 1.271E-08, 1.267E-08/
C                                                                       
C     44001 TO 44100 CM-1 DATA.                                         
      DATA (SUN(I),I= 44001, 44100)/                                    
     $ 1.299E-08, 1.365E-08, 1.457E-08, 1.580E-08, 1.719E-08, 1.831E-08,
     $ 1.896E-08, 1.906E-08, 1.860E-08, 1.769E-08, 1.672E-08, 1.594E-08,
     $ 1.559E-08, 1.577E-08, 1.652E-08, 1.765E-08, 1.889E-08, 1.969E-08,
     $ 1.981E-08, 1.925E-08, 1.815E-08, 1.680E-08, 1.577E-08, 1.534E-08,
     $ 1.532E-08, 1.554E-08, 1.580E-08, 1.584E-08, 1.535E-08, 1.443E-08,
     $ 1.322E-08, 1.195E-08, 1.080E-08, 1.004E-08, 9.852E-09, 1.039E-08,
     $ 1.151E-08, 1.307E-08, 1.478E-08, 1.648E-08, 1.786E-08, 1.897E-08,
     $ 1.969E-08, 2.018E-08, 2.031E-08, 2.014E-08, 1.974E-08, 1.927E-08,
     $ 1.869E-08, 1.805E-08, 1.731E-08, 1.625E-08, 1.484E-08, 1.322E-08,
     $ 1.172E-08, 1.069E-08, 1.027E-08, 1.040E-08, 1.093E-08, 1.159E-08,
     $ 1.220E-08, 1.287E-08, 1.362E-08, 1.434E-08, 1.491E-08, 1.522E-08,
     $ 1.526E-08, 1.529E-08, 1.554E-08, 1.617E-08, 1.695E-08, 1.750E-08,
     $ 1.763E-08, 1.746E-08, 1.717E-08, 1.710E-08, 1.764E-08, 1.865E-08,
     $ 1.962E-08, 2.018E-08, 2.019E-08, 1.946E-08, 1.806E-08, 1.632E-08,
     $ 1.446E-08, 1.267E-08, 1.141E-08, 1.092E-08, 1.125E-08, 1.230E-08,
     $ 1.362E-08, 1.463E-08, 1.494E-08, 1.466E-08, 1.404E-08, 1.339E-08,
     $ 1.313E-08, 1.363E-08, 1.458E-08, 1.583E-08/
C                                                                       
C     44101 TO 44200 CM-1 DATA.                                         
      DATA (SUN(I),I= 44101, 44200)/                                    
     $ 1.752E-08, 1.947E-08, 2.115E-08, 2.252E-08, 2.351E-08, 2.366E-08,
     $ 2.284E-08, 2.152E-08, 2.007E-08, 1.867E-08, 1.765E-08, 1.723E-08,
     $ 1.713E-08, 1.698E-08, 1.658E-08, 1.594E-08, 1.510E-08, 1.435E-08,
     $ 1.403E-08, 1.422E-08, 1.466E-08, 1.514E-08, 1.569E-08, 1.612E-08,
     $ 1.637E-08, 1.660E-08, 1.702E-08, 1.740E-08, 1.773E-08, 1.799E-08,
     $ 1.812E-08, 1.779E-08, 1.700E-08, 1.577E-08, 1.440E-08, 1.327E-08,
     $ 1.292E-08, 1.328E-08, 1.423E-08, 1.531E-08, 1.598E-08, 1.572E-08,
     $ 1.462E-08, 1.290E-08, 1.100E-08, 9.497E-09, 8.992E-09, 9.772E-09,
     $ 1.188E-08, 1.502E-08, 1.857E-08, 2.185E-08, 2.450E-08, 2.643E-08,
     $ 2.751E-08, 2.778E-08, 2.736E-08, 2.631E-08, 2.459E-08, 2.242E-08,
     $ 2.022E-08, 1.818E-08, 1.631E-08, 1.470E-08, 1.350E-08, 1.272E-08,
     $ 1.255E-08, 1.311E-08, 1.424E-08, 1.572E-08, 1.768E-08, 1.975E-08,
     $ 2.153E-08, 2.310E-08, 2.449E-08, 2.505E-08, 2.470E-08, 2.372E-08,
     $ 2.221E-08, 2.029E-08, 1.864E-08, 1.771E-08, 1.777E-08, 1.880E-08,
     $ 2.045E-08, 2.224E-08, 2.398E-08, 2.554E-08, 2.683E-08, 2.815E-08,
     $ 2.968E-08, 3.143E-08, 3.311E-08, 3.446E-08, 3.521E-08, 3.517E-08,
     $ 3.400E-08, 3.169E-08, 2.882E-08, 2.586E-08/
C                                                                       
C     44201 TO 44300 CM-1 DATA.                                         
      DATA (SUN(I),I= 44201, 44300)/                                    
     $ 2.309E-08, 2.094E-08, 1.982E-08, 1.968E-08, 2.029E-08, 2.146E-08,
     $ 2.296E-08, 2.448E-08, 2.547E-08, 2.589E-08, 2.594E-08, 2.561E-08,
     $ 2.464E-08, 2.318E-08, 2.130E-08, 1.933E-08, 1.780E-08, 1.714E-08,
     $ 1.736E-08, 1.841E-08, 1.978E-08, 2.087E-08, 2.157E-08, 2.196E-08,
     $ 2.171E-08, 2.064E-08, 1.906E-08, 1.709E-08, 1.493E-08, 1.317E-08,
     $ 1.224E-08, 1.210E-08, 1.271E-08, 1.411E-08, 1.591E-08, 1.774E-08,
     $ 1.906E-08, 1.951E-08, 1.869E-08, 1.685E-08, 1.463E-08, 1.294E-08,
     $ 1.234E-08, 1.304E-08, 1.513E-08, 1.827E-08, 2.182E-08, 2.544E-08,
     $ 2.914E-08, 3.257E-08, 3.536E-08, 3.741E-08, 3.854E-08, 3.873E-08,
     $ 3.816E-08, 3.716E-08, 3.622E-08, 3.594E-08, 3.627E-08, 3.685E-08,
     $ 3.732E-08, 3.712E-08, 3.592E-08, 3.396E-08, 3.148E-08, 2.868E-08,
     $ 2.600E-08, 2.343E-08, 2.054E-08, 1.769E-08, 1.570E-08, 1.477E-08,
     $ 1.487E-08, 1.599E-08, 1.756E-08, 1.858E-08, 1.864E-08, 1.802E-08,
     $ 1.760E-08, 1.820E-08, 2.029E-08, 2.387E-08, 2.834E-08, 3.273E-08,
     $ 3.623E-08, 3.845E-08, 3.952E-08, 3.977E-08, 3.928E-08, 3.803E-08,
     $ 3.616E-08, 3.377E-08, 3.103E-08, 2.828E-08, 2.584E-08, 2.420E-08,
     $ 2.331E-08, 2.293E-08, 2.313E-08, 2.388E-08/
C                                                                       
C     44301 TO 44400 CM-1 DATA.                                         
      DATA (SUN(I),I= 44301, 44400)/                                    
     $ 2.441E-08, 2.448E-08, 2.414E-08, 2.348E-08, 2.279E-08, 2.237E-08,
     $ 2.212E-08, 2.195E-08, 2.136E-08, 1.982E-08, 1.768E-08, 1.547E-08,
     $ 1.340E-08, 1.183E-08, 1.114E-08, 1.155E-08, 1.340E-08, 1.684E-08,
     $ 2.147E-08, 2.644E-08, 3.062E-08, 3.280E-08, 3.242E-08, 2.984E-08,
     $ 2.612E-08, 2.252E-08, 2.014E-08, 1.954E-08, 2.064E-08, 2.269E-08,
     $ 2.460E-08, 2.538E-08, 2.497E-08, 2.419E-08, 2.397E-08, 2.527E-08,
     $ 2.852E-08, 3.298E-08, 3.690E-08, 3.907E-08, 3.930E-08, 3.807E-08,
     $ 3.608E-08, 3.449E-08, 3.383E-08, 3.345E-08, 3.255E-08, 3.104E-08,
     $ 2.860E-08, 2.547E-08, 2.220E-08, 1.914E-08, 1.629E-08, 1.405E-08,
     $ 1.248E-08, 1.152E-08, 1.131E-08, 1.212E-08, 1.379E-08, 1.606E-08,
     $ 1.866E-08, 2.094E-08, 2.203E-08, 2.166E-08, 2.007E-08, 1.782E-08,
     $ 1.571E-08, 1.457E-08, 1.467E-08, 1.590E-08, 1.777E-08, 1.991E-08,
     $ 2.229E-08, 2.509E-08, 2.814E-08, 3.144E-08, 3.488E-08, 3.790E-08,
     $ 3.988E-08, 4.079E-08, 4.091E-08, 4.057E-08, 4.024E-08, 4.026E-08,
     $ 4.081E-08, 4.163E-08, 4.237E-08, 4.248E-08, 4.138E-08, 3.882E-08,
     $ 3.520E-08, 3.120E-08, 2.751E-08, 2.500E-08, 2.385E-08, 2.333E-08,
     $ 2.255E-08, 2.121E-08, 1.955E-08, 1.820E-08/
C                                                                       
C     44401 TO 44500 CM-1 DATA.                                         
      DATA (SUN(I),I= 44401, 44500)/                                    
     $ 1.792E-08, 1.912E-08, 2.151E-08, 2.417E-08, 2.605E-08, 2.674E-08,
     $ 2.609E-08, 2.436E-08, 2.187E-08, 1.918E-08, 1.650E-08, 1.438E-08,
     $ 1.339E-08, 1.406E-08, 1.640E-08, 2.036E-08, 2.518E-08, 3.000E-08,
     $ 3.394E-08, 3.657E-08, 3.772E-08, 3.757E-08, 3.602E-08, 3.333E-08,
     $ 2.988E-08, 2.602E-08, 2.227E-08, 1.942E-08, 1.794E-08, 1.807E-08,
     $ 1.961E-08, 2.193E-08, 2.459E-08, 2.731E-08, 2.960E-08, 3.151E-08,
     $ 3.346E-08, 3.546E-08, 3.714E-08, 3.812E-08, 3.800E-08, 3.643E-08,
     $ 3.326E-08, 2.894E-08, 2.422E-08, 1.978E-08, 1.624E-08, 1.414E-08,
     $ 1.341E-08, 1.356E-08, 1.428E-08, 1.527E-08, 1.615E-08, 1.685E-08,
     $ 1.777E-08, 1.885E-08, 1.975E-08, 2.079E-08, 2.240E-08, 2.428E-08,
     $ 2.616E-08, 2.822E-08, 3.025E-08, 3.174E-08, 3.273E-08, 3.404E-08,
     $ 3.599E-08, 3.819E-08, 4.045E-08, 4.289E-08, 4.524E-08, 4.675E-08,
     $ 4.727E-08, 4.700E-08, 4.617E-08, 4.447E-08, 4.231E-08, 4.036E-08,
     $ 3.911E-08, 3.831E-08, 3.776E-08, 3.740E-08, 3.723E-08, 3.737E-08,
     $ 3.774E-08, 3.833E-08, 3.886E-08, 3.890E-08, 3.757E-08, 3.513E-08,
     $ 3.289E-08, 3.199E-08, 3.267E-08, 3.465E-08, 3.710E-08, 3.868E-08,
     $ 3.867E-08, 3.727E-08, 3.541E-08, 3.354E-08/
C                                                                       
C     44501 TO 44600 CM-1 DATA.                                         
      DATA (SUN(I),I= 44501, 44600)/                                    
     $ 3.170E-08, 2.971E-08, 2.766E-08, 2.570E-08, 2.408E-08, 2.326E-08,
     $ 2.368E-08, 2.513E-08, 2.740E-08, 3.039E-08, 3.367E-08, 3.625E-08,
     $ 3.746E-08, 3.727E-08, 3.580E-08, 3.356E-08, 3.196E-08, 3.201E-08,
     $ 3.340E-08, 3.577E-08, 3.897E-08, 4.143E-08, 4.193E-08, 4.067E-08,
     $ 3.846E-08, 3.544E-08, 3.253E-08, 3.073E-08, 3.013E-08, 2.995E-08,
     $ 2.986E-08, 2.978E-08, 2.925E-08, 2.781E-08, 2.531E-08, 2.194E-08,
     $ 1.824E-08, 1.518E-08, 1.359E-08, 1.378E-08, 1.552E-08, 1.816E-08,
     $ 2.063E-08, 2.228E-08, 2.332E-08, 2.410E-08, 2.459E-08, 2.465E-08,
     $ 2.426E-08, 2.320E-08, 2.139E-08, 1.932E-08, 1.777E-08, 1.709E-08,
     $ 1.758E-08, 1.920E-08, 2.140E-08, 2.349E-08, 2.526E-08, 2.627E-08,
     $ 2.617E-08, 2.556E-08, 2.525E-08, 2.543E-08, 2.601E-08, 2.734E-08,
     $ 2.890E-08, 2.969E-08, 2.929E-08, 2.815E-08, 2.628E-08, 2.408E-08,
     $ 2.214E-08, 2.076E-08, 1.991E-08, 1.992E-08, 2.078E-08, 2.250E-08,
     $ 2.505E-08, 2.819E-08, 3.118E-08, 3.336E-08, 3.420E-08, 3.385E-08,
     $ 3.247E-08, 3.038E-08, 2.809E-08, 2.608E-08, 2.433E-08, 2.293E-08,
     $ 2.212E-08, 2.201E-08, 2.244E-08, 2.365E-08, 2.556E-08, 2.748E-08,
     $ 2.886E-08, 2.963E-08, 2.940E-08, 2.783E-08/
C                                                                       
C     44601 TO 44700 CM-1 DATA.                                         
      DATA (SUN(I),I= 44601, 44700)/                                    
     $ 2.538E-08, 2.282E-08, 2.083E-08, 1.958E-08, 1.955E-08, 2.087E-08,
     $ 2.312E-08, 2.558E-08, 2.823E-08, 3.057E-08, 3.211E-08, 3.253E-08,
     $ 3.177E-08, 2.981E-08, 2.732E-08, 2.510E-08, 2.384E-08, 2.349E-08,
     $ 2.362E-08, 2.375E-08, 2.361E-08, 2.332E-08, 2.365E-08, 2.519E-08,
     $ 2.786E-08, 3.116E-08, 3.438E-08, 3.697E-08, 3.872E-08, 3.983E-08,
     $ 4.060E-08, 4.116E-08, 4.134E-08, 4.132E-08, 4.104E-08, 4.066E-08,
     $ 4.066E-08, 4.135E-08, 4.229E-08, 4.323E-08, 4.366E-08, 4.301E-08,
     $ 4.140E-08, 3.925E-08, 3.689E-08, 3.481E-08, 3.330E-08, 3.187E-08,
     $ 3.060E-08, 2.979E-08, 2.928E-08, 2.886E-08, 2.865E-08, 2.815E-08,
     $ 2.689E-08, 2.500E-08, 2.278E-08, 2.059E-08, 1.897E-08, 1.806E-08,
     $ 1.771E-08, 1.777E-08, 1.808E-08, 1.851E-08, 1.929E-08, 2.071E-08,
     $ 2.256E-08, 2.436E-08, 2.562E-08, 2.576E-08, 2.459E-08, 2.264E-08,
     $ 2.070E-08, 1.941E-08, 1.931E-08, 2.064E-08, 2.314E-08, 2.639E-08,
     $ 3.019E-08, 3.402E-08, 3.706E-08, 3.876E-08, 3.904E-08, 3.821E-08,
     $ 3.693E-08, 3.622E-08, 3.680E-08, 3.852E-08, 4.031E-08, 4.101E-08,
     $ 4.003E-08, 3.732E-08, 3.360E-08, 3.031E-08, 2.852E-08, 2.836E-08,
     $ 2.940E-08, 3.064E-08, 3.088E-08, 2.990E-08/
C                                                                       
C     44701 TO 44800 CM-1 DATA.                                         
      DATA (SUN(I),I= 44701, 44800)/                                    
     $ 2.825E-08, 2.675E-08, 2.645E-08, 2.815E-08, 3.176E-08, 3.648E-08,
     $ 4.126E-08, 4.541E-08, 4.821E-08, 4.910E-08, 4.816E-08, 4.609E-08,
     $ 4.312E-08, 3.985E-08, 3.728E-08, 3.610E-08, 3.614E-08, 3.710E-08,
     $ 3.851E-08, 3.984E-08, 4.051E-08, 4.054E-08, 4.049E-08, 4.098E-08,
     $ 4.211E-08, 4.339E-08, 4.429E-08, 4.432E-08, 4.329E-08, 4.135E-08,
     $ 3.943E-08, 3.848E-08, 3.858E-08, 3.886E-08, 3.888E-08, 3.802E-08,
     $ 3.582E-08, 3.289E-08, 3.052E-08, 2.918E-08, 2.921E-08, 3.054E-08,
     $ 3.258E-08, 3.441E-08, 3.557E-08, 3.567E-08, 3.466E-08, 3.244E-08,
     $ 2.951E-08, 2.708E-08, 2.627E-08, 2.755E-08, 3.119E-08, 3.693E-08,
     $ 4.336E-08, 4.887E-08, 5.279E-08, 5.481E-08, 5.505E-08, 5.407E-08,
     $ 5.260E-08, 5.090E-08, 4.932E-08, 4.790E-08, 4.643E-08, 4.487E-08,
     $ 4.358E-08, 4.236E-08, 4.104E-08, 3.988E-08, 3.931E-08, 3.918E-08,
     $ 3.949E-08, 4.021E-08, 4.107E-08, 4.140E-08, 4.098E-08, 4.002E-08,
     $ 3.887E-08, 3.786E-08, 3.741E-08, 3.723E-08, 3.663E-08, 3.549E-08,
     $ 3.401E-08, 3.224E-08, 3.084E-08, 3.068E-08, 3.165E-08, 3.301E-08,
     $ 3.436E-08, 3.512E-08, 3.489E-08, 3.367E-08, 3.178E-08, 2.943E-08,
     $ 2.699E-08, 2.458E-08, 2.223E-08, 2.004E-08/
C                                                                       
C     44801 TO 44900 CM-1 DATA.                                         
      DATA (SUN(I),I= 44801, 44900)/                                    
     $ 1.809E-08, 1.634E-08, 1.483E-08, 1.359E-08, 1.267E-08, 1.205E-08,
     $ 1.166E-08, 1.153E-08, 1.189E-08, 1.280E-08, 1.432E-08, 1.643E-08,
     $ 1.878E-08, 2.092E-08, 2.252E-08, 2.346E-08, 2.380E-08, 2.398E-08,
     $ 2.429E-08, 2.492E-08, 2.570E-08, 2.645E-08, 2.671E-08, 2.605E-08,
     $ 2.445E-08, 2.241E-08, 2.047E-08, 1.940E-08, 1.990E-08, 2.195E-08,
     $ 2.481E-08, 2.746E-08, 2.893E-08, 2.871E-08, 2.710E-08, 2.489E-08,
     $ 2.294E-08, 2.178E-08, 2.170E-08, 2.231E-08, 2.315E-08, 2.419E-08,
     $ 2.561E-08, 2.692E-08, 2.796E-08, 2.900E-08, 3.004E-08, 3.036E-08,
     $ 3.011E-08, 2.959E-08, 2.844E-08, 2.639E-08, 2.450E-08, 2.340E-08,
     $ 2.319E-08, 2.406E-08, 2.624E-08, 2.908E-08, 3.182E-08, 3.404E-08,
     $ 3.534E-08, 3.508E-08, 3.320E-08, 3.050E-08, 2.786E-08, 2.603E-08,
     $ 2.568E-08, 2.660E-08, 2.759E-08, 2.762E-08, 2.643E-08, 2.414E-08,
     $ 2.131E-08, 1.901E-08, 1.798E-08, 1.810E-08, 1.877E-08, 1.973E-08,
     $ 2.052E-08, 2.090E-08, 2.077E-08, 2.036E-08, 1.966E-08, 1.896E-08,
     $ 1.823E-08, 1.759E-08, 1.733E-08, 1.755E-08, 1.794E-08, 1.836E-08,
     $ 1.893E-08, 1.965E-08, 2.047E-08, 2.149E-08, 2.267E-08, 2.357E-08,
     $ 2.368E-08, 2.276E-08, 2.084E-08, 1.816E-08/
C                                                                       
C     44901 TO 45000 CM-1 DATA.                                         
      DATA (SUN(I),I= 44901, 45000)/                                    
     $ 1.546E-08, 1.346E-08, 1.269E-08, 1.334E-08, 1.543E-08, 1.837E-08,
     $ 2.156E-08, 2.419E-08, 2.598E-08, 2.672E-08, 2.637E-08, 2.514E-08,
     $ 2.386E-08, 2.307E-08, 2.302E-08, 2.416E-08, 2.652E-08, 2.917E-08,
     $ 3.106E-08, 3.194E-08, 3.171E-08, 3.073E-08, 2.966E-08, 2.925E-08,
     $ 2.930E-08, 2.924E-08, 2.826E-08, 2.626E-08, 2.327E-08, 1.984E-08,
     $ 1.675E-08, 1.484E-08, 1.436E-08, 1.534E-08, 1.720E-08, 1.911E-08,
     $ 2.033E-08, 2.047E-08, 1.942E-08, 1.794E-08, 1.721E-08, 1.779E-08,
     $ 1.978E-08, 2.310E-08, 2.704E-08, 3.062E-08, 3.358E-08, 3.586E-08,
     $ 3.731E-08, 3.775E-08, 3.728E-08, 3.602E-08, 3.420E-08, 3.226E-08,
     $ 3.069E-08, 2.952E-08, 2.831E-08, 2.681E-08, 2.492E-08, 2.287E-08,
     $ 2.129E-08, 2.079E-08, 2.120E-08, 2.225E-08, 2.324E-08, 2.338E-08,
     $ 2.223E-08, 2.010E-08, 1.732E-08, 1.452E-08, 1.231E-08, 1.116E-08,
     $ 1.113E-08, 1.208E-08, 1.372E-08, 1.590E-08, 1.810E-08, 1.991E-08,
     $ 2.139E-08, 2.269E-08, 2.375E-08, 2.501E-08, 2.672E-08, 2.860E-08,
     $ 3.011E-08, 3.094E-08, 3.067E-08, 2.924E-08, 2.689E-08, 2.417E-08,
     $ 2.167E-08, 2.030E-08, 2.059E-08, 2.261E-08, 2.624E-08, 3.090E-08,
     $ 3.520E-08, 3.812E-08, 3.944E-08, 3.897E-08/
C                                                                       
C     45001 TO 45100 CM-1 DATA.                                         
      DATA (SUN(I),I= 45001, 45100)/                                    
     $ 3.696E-08, 3.422E-08, 3.140E-08, 2.862E-08, 2.636E-08, 2.497E-08,
     $ 2.440E-08, 2.451E-08, 2.540E-08, 2.678E-08, 2.829E-08, 2.986E-08,
     $ 3.163E-08, 3.352E-08, 3.515E-08, 3.603E-08, 3.590E-08, 3.446E-08,
     $ 3.154E-08, 2.755E-08, 2.353E-08, 2.020E-08, 1.810E-08, 1.750E-08,
     $ 1.823E-08, 1.959E-08, 2.106E-08, 2.213E-08, 2.259E-08, 2.251E-08,
     $ 2.225E-08, 2.198E-08, 2.192E-08, 2.234E-08, 2.344E-08, 2.504E-08,
     $ 2.682E-08, 2.878E-08, 3.061E-08, 3.193E-08, 3.261E-08, 3.285E-08,
     $ 3.256E-08, 3.207E-08, 3.154E-08, 3.104E-08, 3.048E-08, 2.970E-08,
     $ 2.829E-08, 2.620E-08, 2.361E-08, 2.084E-08, 1.851E-08, 1.730E-08,
     $ 1.742E-08, 1.880E-08, 2.102E-08, 2.337E-08, 2.509E-08, 2.584E-08,
     $ 2.546E-08, 2.409E-08, 2.198E-08, 1.961E-08, 1.727E-08, 1.518E-08,
     $ 1.327E-08, 1.159E-08, 1.020E-08, 9.170E-09, 8.567E-09, 8.576E-09,
     $ 9.087E-09, 9.828E-09, 1.061E-08, 1.135E-08, 1.188E-08, 1.244E-08,
     $ 1.317E-08, 1.395E-08, 1.474E-08, 1.555E-08, 1.612E-08, 1.630E-08,
     $ 1.622E-08, 1.587E-08, 1.529E-08, 1.462E-08, 1.392E-08, 1.312E-08,
     $ 1.231E-08, 1.153E-08, 1.074E-08, 9.940E-09, 9.136E-09, 8.315E-09,
     $ 7.460E-09, 6.642E-09, 5.907E-09, 5.385E-09/
C                                                                       
C     45101 TO 45200 CM-1 DATA.                                         
      DATA (SUN(I),I= 45101, 45200)/                                    
     $ 5.151E-09, 5.225E-09, 5.627E-09, 6.417E-09, 7.510E-09, 8.782E-09,
     $ 1.012E-08, 1.141E-08, 1.257E-08, 1.358E-08, 1.457E-08, 1.561E-08,
     $ 1.666E-08, 1.764E-08, 1.836E-08, 1.871E-08, 1.877E-08, 1.871E-08,
     $ 1.867E-08, 1.899E-08, 1.968E-08, 2.056E-08, 2.136E-08, 2.194E-08,
     $ 2.230E-08, 2.245E-08, 2.246E-08, 2.267E-08, 2.347E-08, 2.471E-08,
     $ 2.619E-08, 2.772E-08, 2.898E-08, 2.968E-08, 2.967E-08, 2.896E-08,
     $ 2.796E-08, 2.682E-08, 2.512E-08, 2.313E-08, 2.129E-08, 1.961E-08,
     $ 1.809E-08, 1.746E-08, 1.772E-08, 1.842E-08, 1.923E-08, 2.006E-08,
     $ 2.030E-08, 1.964E-08, 1.837E-08, 1.684E-08, 1.519E-08, 1.367E-08,
     $ 1.264E-08, 1.218E-08, 1.225E-08, 1.292E-08, 1.443E-08, 1.696E-08,
     $ 2.040E-08, 2.437E-08, 2.844E-08, 3.190E-08, 3.388E-08, 3.434E-08,
     $ 3.366E-08, 3.239E-08, 3.134E-08, 3.108E-08, 3.125E-08, 3.153E-08,
     $ 3.172E-08, 3.151E-08, 3.103E-08, 3.060E-08, 3.016E-08, 2.947E-08,
     $ 2.846E-08, 2.696E-08, 2.504E-08, 2.305E-08, 2.126E-08, 1.961E-08,
     $ 1.813E-08, 1.675E-08, 1.535E-08, 1.401E-08, 1.303E-08, 1.248E-08,
     $ 1.240E-08, 1.277E-08, 1.329E-08, 1.351E-08, 1.325E-08, 1.245E-08,
     $ 1.120E-08, 9.934E-09, 9.045E-09, 8.774E-09/
C                                                                       
C     45201 TO 45300 CM-1 DATA.                                         
      DATA (SUN(I),I= 45201, 45300)/                                    
     $ 9.083E-09, 9.738E-09, 1.040E-08, 1.082E-08, 1.076E-08, 1.036E-08,
     $ 9.861E-09, 9.332E-09, 8.825E-09, 8.500E-09, 8.254E-09, 7.898E-09,
     $ 7.396E-09, 6.851E-09, 6.300E-09, 5.847E-09, 5.619E-09, 5.791E-09,
     $ 6.379E-09, 7.287E-09, 8.366E-09, 9.510E-09, 1.043E-08, 1.087E-08,
     $ 1.085E-08, 1.053E-08, 1.005E-08, 9.638E-09, 9.423E-09, 9.257E-09,
     $ 9.047E-09, 8.785E-09, 8.626E-09, 8.826E-09, 9.616E-09, 1.088E-08,
     $ 1.233E-08, 1.372E-08, 1.484E-08, 1.559E-08, 1.614E-08, 1.675E-08,
     $ 1.741E-08, 1.805E-08, 1.872E-08, 1.969E-08, 2.106E-08, 2.291E-08,
     $ 2.524E-08, 2.769E-08, 2.950E-08, 3.017E-08, 2.985E-08, 2.872E-08,
     $ 2.706E-08, 2.532E-08, 2.386E-08, 2.230E-08, 2.036E-08, 1.823E-08,
     $ 1.625E-08, 1.451E-08, 1.336E-08, 1.299E-08, 1.327E-08, 1.384E-08,
     $ 1.446E-08, 1.491E-08, 1.514E-08, 1.506E-08, 1.457E-08, 1.366E-08,
     $ 1.246E-08, 1.100E-08, 9.513E-09, 8.307E-09, 7.651E-09, 7.679E-09,
     $ 8.492E-09, 1.005E-08, 1.219E-08, 1.478E-08, 1.770E-08, 2.070E-08,
     $ 2.349E-08, 2.587E-08, 2.773E-08, 2.891E-08, 2.932E-08, 2.898E-08,
     $ 2.800E-08, 2.657E-08, 2.508E-08, 2.386E-08, 2.319E-08, 2.296E-08,
     $ 2.269E-08, 2.182E-08, 2.011E-08, 1.773E-08/
C                                                                       
C     45301 TO 45400 CM-1 DATA.                                         
      DATA (SUN(I),I= 45301, 45400)/                                    
     $ 1.514E-08, 1.314E-08, 1.235E-08, 1.289E-08, 1.447E-08, 1.670E-08,
     $ 1.885E-08, 2.045E-08, 2.121E-08, 2.114E-08, 2.055E-08, 2.007E-08,
     $ 2.028E-08, 2.146E-08, 2.337E-08, 2.536E-08, 2.684E-08, 2.759E-08,
     $ 2.779E-08, 2.799E-08, 2.844E-08, 2.892E-08, 2.920E-08, 2.926E-08,
     $ 2.922E-08, 2.975E-08, 3.149E-08, 3.427E-08, 3.724E-08, 3.962E-08,
     $ 4.076E-08, 4.025E-08, 3.838E-08, 3.610E-08, 3.403E-08, 3.216E-08,
     $ 3.080E-08, 2.983E-08, 2.848E-08, 2.621E-08, 2.315E-08, 1.959E-08,
     $ 1.622E-08, 1.387E-08, 1.314E-08, 1.418E-08, 1.655E-08, 1.956E-08,
     $ 2.266E-08, 2.552E-08, 2.780E-08, 2.924E-08, 2.970E-08, 2.935E-08,
     $ 2.852E-08, 2.750E-08, 2.679E-08, 2.713E-08, 2.852E-08, 3.059E-08,
     $ 3.325E-08, 3.636E-08, 3.912E-08, 4.089E-08, 4.142E-08, 4.059E-08,
     $ 3.818E-08, 3.480E-08, 3.173E-08, 2.992E-08, 2.983E-08, 3.177E-08,
     $ 3.521E-08, 3.877E-08, 4.109E-08, 4.153E-08, 4.016E-08, 3.761E-08,
     $ 3.482E-08, 3.263E-08, 3.135E-08, 3.063E-08, 3.001E-08, 2.932E-08,
     $ 2.856E-08, 2.781E-08, 2.714E-08, 2.661E-08, 2.628E-08, 2.633E-08,
     $ 2.677E-08, 2.752E-08, 2.856E-08, 2.962E-08, 3.046E-08, 3.104E-08,
     $ 3.150E-08, 3.195E-08, 3.258E-08, 3.330E-08/
C                                                                       
C     45401 TO 45500 CM-1 DATA.                                         
      DATA (SUN(I),I= 45401, 45500)/                                    
     $ 3.383E-08, 3.399E-08, 3.343E-08, 3.173E-08, 2.878E-08, 2.498E-08,
     $ 2.068E-08, 1.646E-08, 1.303E-08, 1.089E-08, 9.993E-09, 1.024E-08,
     $ 1.129E-08, 1.263E-08, 1.386E-08, 1.489E-08, 1.561E-08, 1.612E-08,
     $ 1.659E-08, 1.694E-08, 1.684E-08, 1.619E-08, 1.496E-08, 1.331E-08,
     $ 1.160E-08, 1.029E-08, 9.585E-09, 9.363E-09, 9.303E-09, 9.063E-09,
     $ 8.642E-09, 8.165E-09, 7.896E-09, 8.212E-09, 9.286E-09, 1.096E-08,
     $ 1.293E-08, 1.511E-08, 1.739E-08, 1.991E-08, 2.253E-08, 2.505E-08,
     $ 2.695E-08, 2.784E-08, 2.743E-08, 2.585E-08, 2.372E-08, 2.193E-08,
     $ 2.097E-08, 2.099E-08, 2.222E-08, 2.441E-08, 2.688E-08, 2.894E-08,
     $ 3.035E-08, 3.084E-08, 3.047E-08, 2.957E-08, 2.886E-08, 2.878E-08,
     $ 2.936E-08, 3.023E-08, 3.099E-08, 3.111E-08, 3.025E-08, 2.854E-08,
     $ 2.664E-08, 2.528E-08, 2.500E-08, 2.583E-08, 2.734E-08, 2.869E-08,
     $ 2.931E-08, 2.912E-08, 2.875E-08, 2.867E-08, 2.935E-08, 3.102E-08,
     $ 3.325E-08, 3.512E-08, 3.636E-08, 3.673E-08, 3.582E-08, 3.381E-08,
     $ 3.131E-08, 2.874E-08, 2.673E-08, 2.616E-08, 2.710E-08, 2.896E-08,
     $ 3.084E-08, 3.175E-08, 3.097E-08, 2.853E-08, 2.511E-08, 2.189E-08,
     $ 1.973E-08, 1.887E-08, 1.918E-08, 2.026E-08/
C                                                                       
C     45501 TO 45600 CM-1 DATA.                                         
      DATA (SUN(I),I= 45501, 45600)/                                    
     $ 2.147E-08, 2.237E-08, 2.292E-08, 2.323E-08, 2.347E-08, 2.366E-08,
     $ 2.391E-08, 2.416E-08, 2.424E-08, 2.382E-08, 2.295E-08, 2.174E-08,
     $ 2.047E-08, 1.932E-08, 1.856E-08, 1.812E-08, 1.765E-08, 1.667E-08,
     $ 1.515E-08, 1.326E-08, 1.135E-08, 9.853E-09, 9.217E-09, 9.418E-09,
     $ 1.014E-08, 1.104E-08, 1.180E-08, 1.222E-08, 1.233E-08, 1.230E-08,
     $ 1.239E-08, 1.277E-08, 1.364E-08, 1.498E-08, 1.671E-08, 1.859E-08,
     $ 2.029E-08, 2.146E-08, 2.201E-08, 2.183E-08, 2.106E-08, 2.007E-08,
     $ 1.899E-08, 1.792E-08, 1.701E-08, 1.638E-08, 1.600E-08, 1.603E-08,
     $ 1.648E-08, 1.719E-08, 1.787E-08, 1.843E-08, 1.900E-08, 1.976E-08,
     $ 2.094E-08, 2.277E-08, 2.509E-08, 2.731E-08, 2.908E-08, 3.043E-08,
     $ 3.145E-08, 3.241E-08, 3.382E-08, 3.558E-08, 3.711E-08, 3.794E-08,
     $ 3.762E-08, 3.570E-08, 3.234E-08, 2.823E-08, 2.421E-08, 2.106E-08,
     $ 1.925E-08, 1.905E-08, 2.032E-08, 2.225E-08, 2.428E-08, 2.643E-08,
     $ 2.870E-08, 3.092E-08, 3.349E-08, 3.651E-08, 3.967E-08, 4.236E-08,
     $ 4.413E-08, 4.448E-08, 4.354E-08, 4.171E-08, 3.970E-08, 3.821E-08,
     $ 3.739E-08, 3.666E-08, 3.526E-08, 3.301E-08, 2.995E-08, 2.650E-08,
     $ 2.333E-08, 2.104E-08, 1.953E-08, 1.862E-08/
C                                                                       
C     45601 TO 45700 CM-1 DATA.                                         
      DATA (SUN(I),I= 45601, 45700)/                                    
     $ 1.822E-08, 1.811E-08, 1.797E-08, 1.754E-08, 1.656E-08, 1.492E-08,
     $ 1.280E-08, 1.055E-08, 8.627E-09, 7.438E-09, 7.192E-09, 7.837E-09,
     $ 9.300E-09, 1.139E-08, 1.383E-08, 1.622E-08, 1.836E-08, 2.005E-08,
     $ 2.100E-08, 2.106E-08, 2.064E-08, 2.008E-08, 1.969E-08, 1.989E-08,
     $ 2.080E-08, 2.189E-08, 2.249E-08, 2.215E-08, 2.074E-08, 1.860E-08,
     $ 1.646E-08, 1.506E-08, 1.497E-08, 1.637E-08, 1.903E-08, 2.237E-08,
     $ 2.564E-08, 2.813E-08, 2.936E-08, 2.897E-08, 2.702E-08, 2.413E-08,
     $ 2.103E-08, 1.856E-08, 1.755E-08, 1.848E-08, 2.114E-08, 2.493E-08,
     $ 2.902E-08, 3.240E-08, 3.419E-08, 3.414E-08, 3.244E-08, 2.941E-08,
     $ 2.574E-08, 2.212E-08, 1.891E-08, 1.627E-08, 1.429E-08, 1.299E-08,
     $ 1.229E-08, 1.209E-08, 1.227E-08, 1.265E-08, 1.285E-08, 1.273E-08,
     $ 1.245E-08, 1.205E-08, 1.161E-08, 1.140E-08, 1.148E-08, 1.169E-08,
     $ 1.212E-08, 1.284E-08, 1.393E-08, 1.541E-08, 1.739E-08, 1.967E-08,
     $ 2.218E-08, 2.469E-08, 2.711E-08, 2.925E-08, 3.102E-08, 3.218E-08,
     $ 3.241E-08, 3.158E-08, 3.000E-08, 2.783E-08, 2.544E-08, 2.367E-08,
     $ 2.277E-08, 2.218E-08, 2.173E-08, 2.150E-08, 2.093E-08, 1.985E-08,
     $ 1.876E-08, 1.795E-08, 1.719E-08, 1.644E-08/
C                                                                       
C     45701 TO 45800 CM-1 DATA.                                         
      DATA (SUN(I),I= 45701, 45800)/                                    
     $ 1.562E-08, 1.460E-08, 1.321E-08, 1.155E-08, 9.819E-09, 8.402E-09,
     $ 7.410E-09, 6.877E-09, 6.719E-09, 6.778E-09, 6.850E-09, 6.921E-09,
     $ 7.125E-09, 7.509E-09, 8.060E-09, 8.608E-09, 8.927E-09, 8.763E-09,
     $ 8.222E-09, 7.558E-09, 7.101E-09, 7.012E-09, 7.475E-09, 8.543E-09,
     $ 1.016E-08, 1.222E-08, 1.469E-08, 1.742E-08, 2.010E-08, 2.255E-08,
     $ 2.470E-08, 2.672E-08, 2.866E-08, 3.058E-08, 3.231E-08, 3.357E-08,
     $ 3.377E-08, 3.267E-08, 3.047E-08, 2.785E-08, 2.549E-08, 2.435E-08,
     $ 2.479E-08, 2.638E-08, 2.829E-08, 2.997E-08, 3.077E-08, 3.077E-08,
     $ 3.058E-08, 3.050E-08, 3.049E-08, 3.053E-08, 3.024E-08, 2.917E-08,
     $ 2.726E-08, 2.464E-08, 2.146E-08, 1.806E-08, 1.493E-08, 1.261E-08,
     $ 1.152E-08, 1.195E-08, 1.369E-08, 1.624E-08, 1.898E-08, 2.126E-08,
     $ 2.253E-08, 2.294E-08, 2.270E-08, 2.183E-08, 2.052E-08, 1.901E-08,
     $ 1.708E-08, 1.486E-08, 1.287E-08, 1.148E-08, 1.080E-08, 1.096E-08,
     $ 1.175E-08, 1.262E-08, 1.318E-08, 1.329E-08, 1.303E-08, 1.279E-08,
     $ 1.305E-08, 1.409E-08, 1.601E-08, 1.884E-08, 2.220E-08, 2.561E-08,
     $ 2.891E-08, 3.180E-08, 3.383E-08, 3.476E-08, 3.468E-08, 3.368E-08,
     $ 3.225E-08, 3.081E-08, 2.959E-08, 2.881E-08/
C                                                                       
C     45801 TO 45900 CM-1 DATA.                                         
      DATA (SUN(I),I= 45801, 45900)/                                    
     $ 2.854E-08, 2.835E-08, 2.794E-08, 2.740E-08, 2.665E-08, 2.567E-08,
     $ 2.482E-08, 2.482E-08, 2.608E-08, 2.846E-08, 3.147E-08, 3.449E-08,
     $ 3.675E-08, 3.769E-08, 3.756E-08, 3.675E-08, 3.554E-08, 3.384E-08,
     $ 3.158E-08, 2.870E-08, 2.541E-08, 2.225E-08, 1.982E-08, 1.845E-08,
     $ 1.806E-08, 1.860E-08, 1.994E-08, 2.205E-08, 2.465E-08, 2.723E-08,
     $ 2.935E-08, 3.058E-08, 3.075E-08, 3.014E-08, 2.935E-08, 2.850E-08,
     $ 2.778E-08, 2.727E-08, 2.709E-08, 2.730E-08, 2.814E-08, 2.922E-08,
     $ 2.995E-08, 2.978E-08, 2.860E-08, 2.673E-08, 2.482E-08, 2.326E-08,
     $ 2.237E-08, 2.214E-08, 2.219E-08, 2.211E-08, 2.193E-08, 2.170E-08,
     $ 2.135E-08, 2.108E-08, 2.112E-08, 2.184E-08, 2.354E-08, 2.625E-08,
     $ 2.958E-08, 3.321E-08, 3.641E-08, 3.827E-08, 3.818E-08, 3.606E-08,
     $ 3.208E-08, 2.694E-08, 2.186E-08, 1.821E-08, 1.682E-08, 1.800E-08,
     $ 2.131E-08, 2.561E-08, 2.934E-08, 3.138E-08, 3.115E-08, 2.890E-08,
     $ 2.533E-08, 2.151E-08, 1.862E-08, 1.729E-08, 1.732E-08, 1.829E-08,
     $ 1.972E-08, 2.076E-08, 2.097E-08, 2.039E-08, 1.933E-08, 1.797E-08,
     $ 1.653E-08, 1.507E-08, 1.358E-08, 1.194E-08, 1.017E-08, 8.485E-09,
     $ 7.097E-09, 6.198E-09, 5.980E-09, 6.446E-09/
C                                                                       
C     45901 TO 46000 CM-1 DATA.                                         
      DATA (SUN(I),I= 45901, 46000)/                                    
     $ 7.417E-09, 8.658E-09, 9.939E-09, 1.099E-08, 1.163E-08, 1.184E-08,
     $ 1.169E-08, 1.123E-08, 1.052E-08, 9.789E-09, 9.330E-09, 9.337E-09,
     $ 9.961E-09, 1.120E-08, 1.268E-08, 1.386E-08, 1.438E-08, 1.422E-08,
     $ 1.350E-08, 1.247E-08, 1.171E-08, 1.161E-08, 1.197E-08, 1.268E-08,
     $ 1.401E-08, 1.571E-08, 1.727E-08, 1.863E-08, 1.970E-08, 2.006E-08,
     $ 1.964E-08, 1.887E-08, 1.818E-08, 1.794E-08, 1.836E-08, 1.925E-08,
     $ 2.020E-08, 2.068E-08, 2.025E-08, 1.887E-08, 1.716E-08, 1.568E-08,
     $ 1.496E-08, 1.525E-08, 1.644E-08, 1.792E-08, 1.905E-08, 1.936E-08,
     $ 1.871E-08, 1.731E-08, 1.559E-08, 1.416E-08, 1.329E-08, 1.292E-08,
     $ 1.269E-08, 1.241E-08, 1.197E-08, 1.154E-08, 1.143E-08, 1.176E-08,
     $ 1.238E-08, 1.291E-08, 1.296E-08, 1.233E-08, 1.119E-08, 9.798E-09,
     $ 8.511E-09, 7.562E-09, 7.160E-09, 7.355E-09, 8.196E-09, 9.500E-09,
     $ 1.105E-08, 1.261E-08, 1.386E-08, 1.438E-08, 1.411E-08, 1.318E-08,
     $ 1.179E-08, 1.029E-08, 9.207E-09, 8.838E-09, 9.203E-09, 1.022E-08,
     $ 1.163E-08, 1.304E-08, 1.431E-08, 1.550E-08, 1.645E-08, 1.708E-08,
     $ 1.751E-08, 1.778E-08, 1.764E-08, 1.716E-08, 1.653E-08, 1.570E-08,
     $ 1.457E-08, 1.346E-08, 1.283E-08, 1.282E-08/
C                                                                       
C     46001 TO 46100 CM-1 DATA.                                         
      DATA (SUN(I),I= 46001, 46100)/                                    
     $ 1.350E-08, 1.468E-08, 1.607E-08, 1.716E-08, 1.784E-08, 1.830E-08,
     $ 1.881E-08, 1.925E-08, 1.939E-08, 1.899E-08, 1.798E-08, 1.673E-08,
     $ 1.592E-08, 1.612E-08, 1.746E-08, 1.959E-08, 2.174E-08, 2.304E-08,
     $ 2.314E-08, 2.219E-08, 2.064E-08, 1.902E-08, 1.801E-08, 1.802E-08,
     $ 1.887E-08, 2.009E-08, 2.142E-08, 2.251E-08, 2.302E-08, 2.302E-08,
     $ 2.280E-08, 2.230E-08, 2.152E-08, 2.058E-08, 1.938E-08, 1.785E-08,
     $ 1.612E-08, 1.431E-08, 1.235E-08, 1.049E-08, 8.996E-09, 8.036E-09,
     $ 7.733E-09, 8.251E-09, 9.593E-09, 1.166E-08, 1.440E-08, 1.755E-08,
     $ 2.060E-08, 2.294E-08, 2.420E-08, 2.407E-08, 2.256E-08, 2.023E-08,
     $ 1.801E-08, 1.655E-08, 1.620E-08, 1.724E-08, 1.935E-08, 2.167E-08,
     $ 2.328E-08, 2.386E-08, 2.338E-08, 2.216E-08, 2.065E-08, 1.937E-08,
     $ 1.848E-08, 1.766E-08, 1.656E-08, 1.527E-08, 1.397E-08, 1.285E-08,
     $ 1.202E-08, 1.160E-08, 1.140E-08, 1.119E-08, 1.090E-08, 1.059E-08,
     $ 1.042E-08, 1.048E-08, 1.072E-08, 1.098E-08, 1.110E-08, 1.085E-08,
     $ 1.021E-08, 9.376E-09, 8.582E-09, 8.024E-09, 7.762E-09, 7.752E-09,
     $ 7.867E-09, 8.020E-09, 8.312E-09, 9.051E-09, 1.039E-08, 1.229E-08,
     $ 1.464E-08, 1.699E-08, 1.865E-08, 1.925E-08/
C                                                                       
C     46101 TO 46200 CM-1 DATA.                                         
      DATA (SUN(I),I= 46101, 46200)/                                    
     $ 1.888E-08, 1.781E-08, 1.671E-08, 1.627E-08, 1.669E-08, 1.768E-08,
     $ 1.900E-08, 2.006E-08, 2.043E-08, 2.022E-08, 1.982E-08, 1.913E-08,
     $ 1.811E-08, 1.703E-08, 1.616E-08, 1.528E-08, 1.453E-08, 1.420E-08,
     $ 1.406E-08, 1.362E-08, 1.291E-08, 1.213E-08, 1.130E-08, 1.066E-08,
     $ 1.044E-08, 1.053E-08, 1.068E-08, 1.071E-08, 1.045E-08, 9.837E-09,
     $ 8.966E-09, 7.926E-09, 6.830E-09, 5.816E-09, 4.999E-09, 4.439E-09,
     $ 4.204E-09, 4.327E-09, 4.718E-09, 5.295E-09, 6.055E-09, 6.930E-09,
     $ 7.843E-09, 8.686E-09, 9.324E-09, 9.626E-09, 9.712E-09, 9.678E-09,
     $ 9.677E-09, 9.811E-09, 1.008E-08, 1.024E-08, 1.005E-08, 9.605E-09,
     $ 9.112E-09, 8.699E-09, 8.498E-09, 8.524E-09, 8.572E-09, 8.368E-09,
     $ 7.938E-09, 7.435E-09, 7.191E-09, 7.406E-09, 8.137E-09, 9.201E-09,
     $ 1.041E-08, 1.143E-08, 1.213E-08, 1.264E-08, 1.334E-08, 1.445E-08,
     $ 1.607E-08, 1.829E-08, 2.094E-08, 2.353E-08, 2.569E-08, 2.719E-08,
     $ 2.772E-08, 2.697E-08, 2.495E-08, 2.196E-08, 1.861E-08, 1.547E-08,
     $ 1.304E-08, 1.170E-08, 1.155E-08, 1.236E-08, 1.397E-08, 1.639E-08,
     $ 1.932E-08, 2.210E-08, 2.400E-08, 2.447E-08, 2.321E-08, 2.043E-08,
     $ 1.680E-08, 1.323E-08, 1.059E-08, 9.203E-09/
C                                                                       
C     46201 TO 46300 CM-1 DATA.                                         
      DATA (SUN(I),I= 46201, 46300)/                                    
     $ 8.995E-09, 9.805E-09, 1.137E-08, 1.307E-08, 1.452E-08, 1.551E-08,
     $ 1.604E-08, 1.615E-08, 1.622E-08, 1.665E-08, 1.783E-08, 1.958E-08,
     $ 2.144E-08, 2.305E-08, 2.429E-08, 2.499E-08, 2.524E-08, 2.541E-08,
     $ 2.563E-08, 2.558E-08, 2.507E-08, 2.432E-08, 2.345E-08, 2.232E-08,
     $ 2.117E-08, 2.023E-08, 1.925E-08, 1.807E-08, 1.683E-08, 1.557E-08,
     $ 1.424E-08, 1.301E-08, 1.199E-08, 1.125E-08, 1.084E-08, 1.076E-08,
     $ 1.104E-08, 1.175E-08, 1.308E-08, 1.515E-08, 1.778E-08, 2.052E-08,
     $ 2.278E-08, 2.388E-08, 2.343E-08, 2.177E-08, 1.964E-08, 1.782E-08,
     $ 1.699E-08, 1.739E-08, 1.850E-08, 1.944E-08, 1.967E-08, 1.890E-08,
     $ 1.728E-08, 1.534E-08, 1.385E-08, 1.335E-08, 1.402E-08, 1.561E-08,
     $ 1.778E-08, 2.005E-08, 2.201E-08, 2.340E-08, 2.442E-08, 2.536E-08,
     $ 2.642E-08, 2.743E-08, 2.810E-08, 2.813E-08, 2.746E-08, 2.624E-08,
     $ 2.479E-08, 2.356E-08, 2.279E-08, 2.248E-08, 2.245E-08, 2.275E-08,
     $ 2.325E-08, 2.347E-08, 2.286E-08, 2.129E-08, 1.880E-08, 1.586E-08,
     $ 1.324E-08, 1.146E-08, 1.061E-08, 1.045E-08, 1.050E-08, 1.032E-08,
     $ 9.967E-09, 9.794E-09, 1.012E-08, 1.105E-08, 1.259E-08, 1.437E-08,
     $ 1.575E-08, 1.613E-08, 1.542E-08, 1.386E-08/
C                                                                       
C     46301 TO 46400 CM-1 DATA.                                         
      DATA (SUN(I),I= 46301, 46400)/                                    
     $ 1.194E-08, 1.017E-08, 9.131E-09, 8.936E-09, 9.298E-09, 9.845E-09,
     $ 1.039E-08, 1.056E-08, 1.020E-08, 9.472E-09, 8.596E-09, 7.677E-09,
     $ 7.002E-09, 6.682E-09, 6.675E-09, 6.949E-09, 7.476E-09, 8.080E-09,
     $ 8.855E-09, 9.884E-09, 1.103E-08, 1.204E-08, 1.286E-08, 1.323E-08,
     $ 1.292E-08, 1.199E-08, 1.076E-08, 9.478E-09, 8.452E-09, 7.983E-09,
     $ 8.129E-09, 8.674E-09, 9.319E-09, 9.836E-09, 1.000E-08, 9.791E-09,
     $ 9.314E-09, 8.836E-09, 8.500E-09, 8.431E-09, 8.618E-09, 9.008E-09,
     $ 9.441E-09, 9.853E-09, 1.019E-08, 1.044E-08, 1.058E-08, 1.073E-08,
     $ 1.094E-08, 1.124E-08, 1.164E-08, 1.207E-08, 1.231E-08, 1.236E-08,
     $ 1.233E-08, 1.243E-08, 1.287E-08, 1.392E-08, 1.540E-08, 1.694E-08,
     $ 1.814E-08, 1.883E-08, 1.882E-08, 1.824E-08, 1.723E-08, 1.593E-08,
     $ 1.448E-08, 1.327E-08, 1.248E-08, 1.210E-08, 1.215E-08, 1.264E-08,
     $ 1.344E-08, 1.451E-08, 1.618E-08, 1.852E-08, 2.113E-08, 2.317E-08,
     $ 2.397E-08, 2.317E-08, 2.080E-08, 1.742E-08, 1.414E-08, 1.178E-08,
     $ 1.070E-08, 1.099E-08, 1.252E-08, 1.489E-08, 1.775E-08, 2.059E-08,
     $ 2.276E-08, 2.412E-08, 2.469E-08, 2.438E-08, 2.351E-08, 2.243E-08,
     $ 2.100E-08, 1.907E-08, 1.694E-08, 1.501E-08/
C                                                                       
C     46401 TO 46500 CM-1 DATA.                                         
      DATA (SUN(I),I= 46401, 46500)/                                    
     $ 1.377E-08, 1.349E-08, 1.400E-08, 1.481E-08, 1.534E-08, 1.523E-08,
     $ 1.463E-08, 1.404E-08, 1.397E-08, 1.481E-08, 1.666E-08, 1.931E-08,
     $ 2.255E-08, 2.593E-08, 2.878E-08, 3.061E-08, 3.136E-08, 3.111E-08,
     $ 3.032E-08, 2.961E-08, 2.932E-08, 2.943E-08, 2.977E-08, 3.002E-08,
     $ 2.998E-08, 2.957E-08, 2.861E-08, 2.690E-08, 2.440E-08, 2.133E-08,
     $ 1.803E-08, 1.513E-08, 1.323E-08, 1.283E-08, 1.384E-08, 1.590E-08,
     $ 1.843E-08, 2.079E-08, 2.239E-08, 2.307E-08, 2.285E-08, 2.185E-08,
     $ 2.042E-08, 1.875E-08, 1.685E-08, 1.489E-08, 1.319E-08, 1.203E-08,
     $ 1.172E-08, 1.253E-08, 1.427E-08, 1.632E-08, 1.793E-08, 1.865E-08,
     $ 1.820E-08, 1.674E-08, 1.479E-08, 1.297E-08, 1.162E-08, 1.099E-08,
     $ 1.136E-08, 1.279E-08, 1.504E-08, 1.780E-08, 2.061E-08, 2.278E-08,
     $ 2.387E-08, 2.376E-08, 2.246E-08, 2.020E-08, 1.746E-08, 1.475E-08,
     $ 1.233E-08, 1.052E-08, 9.494E-09, 9.044E-09, 8.782E-09, 8.491E-09,
     $ 7.973E-09, 7.164E-09, 6.364E-09, 5.811E-09, 5.599E-09, 5.751E-09,
     $ 6.247E-09, 6.939E-09, 7.818E-09, 8.856E-09, 1.002E-08, 1.112E-08,
     $ 1.211E-08, 1.308E-08, 1.430E-08, 1.600E-08, 1.843E-08, 2.149E-08,
     $ 2.465E-08, 2.752E-08, 2.984E-08, 3.134E-08/
C                                                                       
C     46501 TO 46600 CM-1 DATA.                                         
      DATA (SUN(I),I= 46501, 46600)/                                    
     $ 3.181E-08, 3.159E-08, 3.091E-08, 2.986E-08, 2.853E-08, 2.743E-08,
     $ 2.660E-08, 2.576E-08, 2.481E-08, 2.380E-08, 2.241E-08, 2.044E-08,
     $ 1.823E-08, 1.606E-08, 1.420E-08, 1.321E-08, 1.357E-08, 1.515E-08,
     $ 1.772E-08, 2.096E-08, 2.415E-08, 2.656E-08, 2.770E-08, 2.729E-08,
     $ 2.527E-08, 2.201E-08, 1.816E-08, 1.462E-08, 1.227E-08, 1.156E-08,
     $ 1.249E-08, 1.483E-08, 1.809E-08, 2.136E-08, 2.398E-08, 2.564E-08,
     $ 2.603E-08, 2.500E-08, 2.297E-08, 2.031E-08, 1.738E-08, 1.466E-08,
     $ 1.264E-08, 1.140E-08, 1.105E-08, 1.149E-08, 1.244E-08, 1.354E-08,
     $ 1.453E-08, 1.536E-08, 1.627E-08, 1.741E-08, 1.865E-08, 1.986E-08,
     $ 2.074E-08, 2.080E-08, 1.991E-08, 1.835E-08, 1.657E-08, 1.496E-08,
     $ 1.378E-08, 1.304E-08, 1.264E-08, 1.236E-08, 1.203E-08, 1.174E-08,
     $ 1.184E-08, 1.262E-08, 1.407E-08, 1.599E-08, 1.795E-08, 1.943E-08,
     $ 1.993E-08, 1.941E-08, 1.820E-08, 1.691E-08, 1.601E-08, 1.566E-08,
     $ 1.575E-08, 1.596E-08, 1.585E-08, 1.523E-08, 1.436E-08, 1.367E-08,
     $ 1.352E-08, 1.403E-08, 1.501E-08, 1.603E-08, 1.669E-08, 1.659E-08,
     $ 1.569E-08, 1.428E-08, 1.282E-08, 1.177E-08, 1.151E-08, 1.209E-08,
     $ 1.316E-08, 1.418E-08, 1.472E-08, 1.469E-08/
C                                                                       
C     46601 TO 46700 CM-1 DATA.                                         
      DATA (SUN(I),I= 46601, 46700)/                                    
     $ 1.428E-08, 1.398E-08, 1.432E-08, 1.551E-08, 1.738E-08, 1.964E-08,
     $ 2.202E-08, 2.408E-08, 2.553E-08, 2.623E-08, 2.603E-08, 2.475E-08,
     $ 2.256E-08, 1.980E-08, 1.678E-08, 1.401E-08, 1.219E-08, 1.161E-08,
     $ 1.235E-08, 1.432E-08, 1.712E-08, 2.001E-08, 2.250E-08, 2.432E-08,
     $ 2.533E-08, 2.537E-08, 2.476E-08, 2.394E-08, 2.323E-08, 2.286E-08,
     $ 2.321E-08, 2.418E-08, 2.510E-08, 2.541E-08, 2.509E-08, 2.429E-08,
     $ 2.315E-08, 2.200E-08, 2.131E-08, 2.125E-08, 2.161E-08, 2.248E-08,
     $ 2.407E-08, 2.600E-08, 2.739E-08, 2.776E-08, 2.691E-08, 2.490E-08,
     $ 2.216E-08, 1.961E-08, 1.799E-08, 1.759E-08, 1.825E-08, 1.984E-08,
     $ 2.190E-08, 2.372E-08, 2.464E-08, 2.437E-08, 2.287E-08, 2.061E-08,
     $ 1.837E-08, 1.688E-08, 1.658E-08, 1.748E-08, 1.903E-08, 2.057E-08,
     $ 2.158E-08, 2.160E-08, 2.077E-08, 1.987E-08, 1.942E-08, 1.951E-08,
     $ 2.022E-08, 2.102E-08, 2.124E-08, 2.073E-08, 1.997E-08, 1.932E-08,
     $ 1.913E-08, 1.945E-08, 2.007E-08, 2.065E-08, 2.141E-08, 2.252E-08,
     $ 2.421E-08, 2.644E-08, 2.878E-08, 3.030E-08, 3.059E-08, 2.971E-08,
     $ 2.813E-08, 2.653E-08, 2.579E-08, 2.634E-08, 2.776E-08, 2.919E-08,
     $ 3.007E-08, 3.011E-08, 2.905E-08, 2.715E-08/
C                                                                       
C     46701 TO 46800 CM-1 DATA.                                         
      DATA (SUN(I),I= 46701, 46800)/                                    
     $ 2.508E-08, 2.352E-08, 2.252E-08, 2.225E-08, 2.270E-08, 2.371E-08,
     $ 2.457E-08, 2.489E-08, 2.431E-08, 2.290E-08, 2.078E-08, 1.846E-08,
     $ 1.635E-08, 1.475E-08, 1.366E-08, 1.292E-08, 1.215E-08, 1.126E-08,
     $ 1.028E-08, 9.162E-09, 8.072E-09, 7.344E-09, 7.201E-09, 7.738E-09,
     $ 8.953E-09, 1.049E-08, 1.207E-08, 1.330E-08, 1.381E-08, 1.357E-08,
     $ 1.294E-08, 1.212E-08, 1.130E-08, 1.069E-08, 1.037E-08, 1.026E-08,
     $ 1.027E-08, 1.032E-08, 1.031E-08, 1.011E-08, 9.620E-09, 8.835E-09,
     $ 7.872E-09, 6.842E-09, 5.940E-09, 5.401E-09, 5.329E-09, 5.776E-09,
     $ 6.720E-09, 8.032E-09, 9.397E-09, 1.061E-08, 1.140E-08, 1.158E-08,
     $ 1.116E-08, 1.054E-08, 1.006E-08, 9.981E-09, 1.039E-08, 1.120E-08,
     $ 1.228E-08, 1.355E-08, 1.502E-08, 1.686E-08, 1.916E-08, 2.152E-08,
     $ 2.357E-08, 2.499E-08, 2.559E-08, 2.532E-08, 2.467E-08, 2.396E-08,
     $ 2.348E-08, 2.340E-08, 2.372E-08, 2.400E-08, 2.388E-08, 2.340E-08,
     $ 2.276E-08, 2.202E-08, 2.156E-08, 2.168E-08, 2.219E-08, 2.261E-08,
     $ 2.268E-08, 2.217E-08, 2.090E-08, 1.898E-08, 1.686E-08, 1.500E-08,
     $ 1.375E-08, 1.312E-08, 1.287E-08, 1.266E-08, 1.224E-08, 1.155E-08,
     $ 1.076E-08, 1.016E-08, 9.941E-09, 1.017E-08/
C                                                                       
C     46801 TO 46900 CM-1 DATA.                                         
      DATA (SUN(I),I= 46801, 46900)/                                    
     $ 1.081E-08, 1.191E-08, 1.339E-08, 1.508E-08, 1.680E-08, 1.840E-08,
     $ 1.960E-08, 2.028E-08, 2.029E-08, 1.951E-08, 1.789E-08, 1.567E-08,
     $ 1.321E-08, 1.114E-08, 9.986E-09, 9.933E-09, 1.075E-08, 1.206E-08,
     $ 1.333E-08, 1.405E-08, 1.398E-08, 1.328E-08, 1.215E-08, 1.074E-08,
     $ 9.268E-09, 8.034E-09, 7.147E-09, 6.583E-09, 6.329E-09, 6.430E-09,
     $ 6.781E-09, 7.362E-09, 8.276E-09, 9.561E-09, 1.104E-08, 1.251E-08,
     $ 1.359E-08, 1.391E-08, 1.337E-08, 1.221E-08, 1.084E-08, 9.744E-09,
     $ 9.312E-09, 9.904E-09, 1.143E-08, 1.343E-08, 1.548E-08, 1.736E-08,
     $ 1.864E-08, 1.925E-08, 1.948E-08, 1.960E-08, 1.939E-08, 1.879E-08,
     $ 1.781E-08, 1.645E-08, 1.482E-08, 1.351E-08, 1.308E-08, 1.365E-08,
     $ 1.513E-08, 1.726E-08, 1.935E-08, 2.065E-08, 2.077E-08, 1.980E-08,
     $ 1.812E-08, 1.628E-08, 1.480E-08, 1.388E-08, 1.333E-08, 1.272E-08,
     $ 1.188E-08, 1.095E-08, 1.021E-08, 9.876E-09, 1.007E-08, 1.059E-08,
     $ 1.115E-08, 1.146E-08, 1.152E-08, 1.147E-08, 1.153E-08, 1.168E-08,
     $ 1.184E-08, 1.176E-08, 1.145E-08, 1.101E-08, 1.068E-08, 1.074E-08,
     $ 1.153E-08, 1.297E-08, 1.480E-08, 1.688E-08, 1.890E-08, 2.041E-08,
     $ 2.114E-08, 2.118E-08, 2.057E-08, 1.942E-08/
C                                                                       
C     46901 TO 47000 CM-1 DATA.                                         
      DATA (SUN(I),I= 46901, 47000)/                                    
     $ 1.802E-08, 1.663E-08, 1.524E-08, 1.389E-08, 1.281E-08, 1.215E-08,
     $ 1.185E-08, 1.179E-08, 1.174E-08, 1.159E-08, 1.134E-08, 1.120E-08,
     $ 1.141E-08, 1.208E-08, 1.298E-08, 1.374E-08, 1.404E-08, 1.380E-08,
     $ 1.300E-08, 1.184E-08, 1.065E-08, 9.756E-09, 9.210E-09, 8.986E-09,
     $ 9.037E-09, 9.245E-09, 9.428E-09, 9.667E-09, 1.007E-08, 1.060E-08,
     $ 1.108E-08, 1.134E-08, 1.115E-08, 1.045E-08, 9.470E-09, 8.506E-09,
     $ 7.712E-09, 7.206E-09, 7.027E-09, 7.014E-09, 7.158E-09, 7.708E-09,
     $ 8.824E-09, 1.052E-08, 1.283E-08, 1.551E-08, 1.806E-08, 1.996E-08,
     $ 2.095E-08, 2.104E-08, 2.058E-08, 2.013E-08, 2.017E-08, 2.098E-08,
     $ 2.217E-08, 2.308E-08, 2.321E-08, 2.243E-08, 2.068E-08, 1.833E-08,
     $ 1.602E-08, 1.415E-08, 1.274E-08, 1.179E-08, 1.138E-08, 1.152E-08,
     $ 1.198E-08, 1.272E-08, 1.392E-08, 1.552E-08, 1.730E-08, 1.917E-08,
     $ 2.092E-08, 2.195E-08, 2.184E-08, 2.054E-08, 1.823E-08, 1.546E-08,
     $ 1.319E-08, 1.213E-08, 1.246E-08, 1.392E-08, 1.589E-08, 1.758E-08,
     $ 1.840E-08, 1.833E-08, 1.772E-08, 1.692E-08, 1.626E-08, 1.588E-08,
     $ 1.570E-08, 1.546E-08, 1.528E-08, 1.526E-08, 1.544E-08, 1.570E-08,
     $ 1.598E-08, 1.607E-08, 1.579E-08, 1.516E-08/
C                                                                       
C     47001 TO 47100 CM-1 DATA.                                         
      DATA (SUN(I),I= 47001, 47100)/                                    
     $ 1.448E-08, 1.404E-08, 1.396E-08, 1.427E-08, 1.492E-08, 1.580E-08,
     $ 1.678E-08, 1.781E-08, 1.899E-08, 2.040E-08, 2.190E-08, 2.332E-08,
     $ 2.433E-08, 2.463E-08, 2.408E-08, 2.279E-08, 2.085E-08, 1.870E-08,
     $ 1.672E-08, 1.494E-08, 1.333E-08, 1.215E-08, 1.147E-08, 1.136E-08,
     $ 1.190E-08, 1.299E-08, 1.412E-08, 1.491E-08, 1.514E-08, 1.476E-08,
     $ 1.407E-08, 1.352E-08, 1.327E-08, 1.320E-08, 1.327E-08, 1.330E-08,
     $ 1.310E-08, 1.263E-08, 1.204E-08, 1.134E-08, 1.055E-08, 9.692E-09,
     $ 8.919E-09, 8.280E-09, 7.751E-09, 7.389E-09, 7.286E-09, 7.332E-09,
     $ 7.420E-09, 7.578E-09, 7.724E-09, 7.707E-09, 7.489E-09, 7.150E-09,
     $ 6.690E-09, 6.175E-09, 5.687E-09, 5.252E-09, 4.812E-09, 4.373E-09,
     $ 3.954E-09, 3.591E-09, 3.323E-09, 3.228E-09, 3.351E-09, 3.648E-09,
     $ 4.071E-09, 4.616E-09, 5.192E-09, 5.725E-09, 6.197E-09, 6.605E-09,
     $ 6.908E-09, 7.135E-09, 7.249E-09, 7.237E-09, 7.071E-09, 6.798E-09,
     $ 6.464E-09, 6.186E-09, 6.046E-09, 6.104E-09, 6.317E-09, 6.602E-09,
     $ 6.854E-09, 7.017E-09, 7.121E-09, 7.205E-09, 7.339E-09, 7.626E-09,
     $ 8.129E-09, 8.823E-09, 9.671E-09, 1.068E-08, 1.179E-08, 1.288E-08,
     $ 1.378E-08, 1.451E-08, 1.507E-08, 1.550E-08/
C                                                                       
C     47101 TO 47200 CM-1 DATA.                                         
      DATA (SUN(I),I= 47101, 47200)/                                    
     $ 1.577E-08, 1.592E-08, 1.579E-08, 1.531E-08, 1.452E-08, 1.374E-08,
     $ 1.321E-08, 1.312E-08, 1.330E-08, 1.348E-08, 1.333E-08, 1.281E-08,
     $ 1.220E-08, 1.194E-08, 1.235E-08, 1.340E-08, 1.469E-08, 1.574E-08,
     $ 1.627E-08, 1.615E-08, 1.551E-08, 1.470E-08, 1.400E-08, 1.339E-08,
     $ 1.278E-08, 1.212E-08, 1.142E-08, 1.059E-08, 9.746E-09, 9.367E-09,
     $ 9.792E-09, 1.106E-08, 1.308E-08, 1.558E-08, 1.780E-08, 1.909E-08,
     $ 1.935E-08, 1.886E-08, 1.817E-08, 1.796E-08, 1.861E-08, 2.004E-08,
     $ 2.189E-08, 2.371E-08, 2.521E-08, 2.631E-08, 2.706E-08, 2.766E-08,
     $ 2.812E-08, 2.850E-08, 2.885E-08, 2.919E-08, 2.938E-08, 2.926E-08,
     $ 2.878E-08, 2.798E-08, 2.695E-08, 2.577E-08, 2.472E-08, 2.387E-08,
     $ 2.317E-08, 2.264E-08, 2.249E-08, 2.277E-08, 2.341E-08, 2.404E-08,
     $ 2.411E-08, 2.332E-08, 2.165E-08, 1.924E-08, 1.660E-08, 1.440E-08,
     $ 1.292E-08, 1.226E-08, 1.261E-08, 1.391E-08, 1.595E-08, 1.842E-08,
     $ 2.071E-08, 2.216E-08, 2.246E-08, 2.155E-08, 1.960E-08, 1.720E-08,
     $ 1.500E-08, 1.329E-08, 1.199E-08, 1.103E-08, 1.027E-08, 9.489E-09,
     $ 8.675E-09, 8.183E-09, 8.350E-09, 9.232E-09, 1.071E-08, 1.251E-08,
     $ 1.430E-08, 1.571E-08, 1.652E-08, 1.691E-08/
C                                                                       
C     47201 TO 47300 CM-1 DATA.                                         
      DATA (SUN(I),I= 47201, 47300)/                                    
     $ 1.731E-08, 1.785E-08, 1.865E-08, 1.983E-08, 2.110E-08, 2.191E-08,
     $ 2.201E-08, 2.141E-08, 2.040E-08, 1.948E-08, 1.926E-08, 2.005E-08,
     $ 2.169E-08, 2.366E-08, 2.544E-08, 2.641E-08, 2.620E-08, 2.485E-08,
     $ 2.268E-08, 2.016E-08, 1.800E-08, 1.685E-08, 1.689E-08, 1.804E-08,
     $ 1.992E-08, 2.182E-08, 2.308E-08, 2.355E-08, 2.325E-08, 2.249E-08,
     $ 2.173E-08, 2.134E-08, 2.133E-08, 2.172E-08, 2.227E-08, 2.261E-08,
     $ 2.249E-08, 2.190E-08, 2.077E-08, 1.944E-08, 1.839E-08, 1.796E-08,
     $ 1.834E-08, 1.936E-08, 2.054E-08, 2.134E-08, 2.153E-08, 2.101E-08,
     $ 2.014E-08, 1.929E-08, 1.875E-08, 1.855E-08, 1.852E-08, 1.831E-08,
     $ 1.778E-08, 1.689E-08, 1.562E-08, 1.413E-08, 1.270E-08, 1.141E-08,
     $ 1.021E-08, 9.199E-09, 8.401E-09, 7.774E-09, 7.306E-09, 7.036E-09,
     $ 6.941E-09, 6.934E-09, 6.906E-09, 6.717E-09, 6.376E-09, 5.983E-09,
     $ 5.599E-09, 5.321E-09, 5.315E-09, 5.671E-09, 6.397E-09, 7.568E-09,
     $ 9.143E-09, 1.099E-08, 1.284E-08, 1.444E-08, 1.550E-08, 1.605E-08,
     $ 1.613E-08, 1.597E-08, 1.577E-08, 1.576E-08, 1.603E-08, 1.668E-08,
     $ 1.760E-08, 1.852E-08, 1.920E-08, 1.937E-08, 1.878E-08, 1.749E-08,
     $ 1.594E-08, 1.445E-08, 1.334E-08, 1.273E-08/
C                                                                       
C     47301 TO 47400 CM-1 DATA.                                         
      DATA (SUN(I),I= 47301, 47400)/                                    
     $ 1.261E-08, 1.263E-08, 1.248E-08, 1.200E-08, 1.119E-08, 1.009E-08,
     $ 8.848E-09, 7.715E-09, 6.917E-09, 6.554E-09, 6.595E-09, 6.954E-09,
     $ 7.535E-09, 8.206E-09, 8.861E-09, 9.612E-09, 1.075E-08, 1.234E-08,
     $ 1.428E-08, 1.651E-08, 1.886E-08, 2.098E-08, 2.264E-08, 2.379E-08,
     $ 2.435E-08, 2.426E-08, 2.354E-08, 2.245E-08, 2.133E-08, 2.063E-08,
     $ 2.058E-08, 2.122E-08, 2.228E-08, 2.313E-08, 2.311E-08, 2.198E-08,
     $ 1.999E-08, 1.764E-08, 1.574E-08, 1.492E-08, 1.519E-08, 1.609E-08,
     $ 1.719E-08, 1.796E-08, 1.811E-08, 1.771E-08, 1.718E-08, 1.672E-08,
     $ 1.636E-08, 1.618E-08, 1.635E-08, 1.660E-08, 1.666E-08, 1.656E-08,
     $ 1.642E-08, 1.604E-08, 1.544E-08, 1.477E-08, 1.406E-08, 1.325E-08,
     $ 1.238E-08, 1.173E-08, 1.132E-08, 1.101E-08, 1.075E-08, 1.060E-08,
     $ 1.037E-08, 1.005E-08, 9.757E-09, 9.544E-09, 9.259E-09, 8.940E-09,
     $ 8.685E-09, 8.429E-09, 8.034E-09, 7.551E-09, 7.014E-09, 6.488E-09,
     $ 6.130E-09, 6.121E-09, 6.479E-09, 7.039E-09, 7.609E-09, 8.116E-09,
     $ 8.553E-09, 8.914E-09, 9.440E-09, 1.025E-08, 1.122E-08, 1.207E-08,
     $ 1.272E-08, 1.291E-08, 1.256E-08, 1.173E-08, 1.072E-08, 9.647E-09,
     $ 8.615E-09, 7.690E-09, 7.004E-09, 6.552E-09/
C                                                                       
C     47401 TO 47500 CM-1 DATA.                                         
      DATA (SUN(I),I= 47401, 47500)/                                    
     $ 6.350E-09, 6.402E-09, 6.633E-09, 6.836E-09, 6.849E-09, 6.648E-09,
     $ 6.359E-09, 6.140E-09, 6.150E-09, 6.491E-09, 7.063E-09, 7.649E-09,
     $ 8.097E-09, 8.328E-09, 8.274E-09, 8.062E-09, 7.954E-09, 8.114E-09,
     $ 8.582E-09, 9.374E-09, 1.036E-08, 1.132E-08, 1.201E-08, 1.234E-08,
     $ 1.249E-08, 1.273E-08, 1.313E-08, 1.382E-08, 1.472E-08, 1.555E-08,
     $ 1.604E-08, 1.623E-08, 1.629E-08, 1.640E-08, 1.670E-08, 1.697E-08,
     $ 1.689E-08, 1.611E-08, 1.464E-08, 1.285E-08, 1.132E-08, 1.066E-08,
     $ 1.116E-08, 1.274E-08, 1.478E-08, 1.658E-08, 1.761E-08, 1.775E-08,
     $ 1.703E-08, 1.600E-08, 1.526E-08, 1.506E-08, 1.526E-08, 1.560E-08,
     $ 1.565E-08, 1.497E-08, 1.351E-08, 1.160E-08, 9.638E-09, 8.064E-09,
     $ 7.284E-09, 7.356E-09, 8.039E-09, 9.146E-09, 1.051E-08, 1.188E-08,
     $ 1.313E-08, 1.431E-08, 1.534E-08, 1.611E-08, 1.673E-08, 1.733E-08,
     $ 1.804E-08, 1.892E-08, 1.973E-08, 2.016E-08, 2.021E-08, 1.987E-08,
     $ 1.913E-08, 1.830E-08, 1.775E-08, 1.744E-08, 1.720E-08, 1.718E-08,
     $ 1.736E-08, 1.767E-08, 1.807E-08, 1.857E-08, 1.910E-08, 1.962E-08,
     $ 1.993E-08, 1.991E-08, 1.943E-08, 1.849E-08, 1.727E-08, 1.612E-08,
     $ 1.528E-08, 1.501E-08, 1.519E-08, 1.539E-08/
C                                                                       
C     47501 TO 47600 CM-1 DATA.                                         
      DATA (SUN(I),I= 47501, 47600)/                                    
     $ 1.530E-08, 1.485E-08, 1.411E-08, 1.334E-08, 1.287E-08, 1.281E-08,
     $ 1.302E-08, 1.319E-08, 1.307E-08, 1.256E-08, 1.175E-08, 1.079E-08,
     $ 9.934E-09, 9.288E-09, 8.833E-09, 8.485E-09, 8.128E-09, 7.594E-09,
     $ 6.965E-09, 6.333E-09, 5.848E-09, 5.625E-09, 5.737E-09, 6.042E-09,
     $ 6.413E-09, 6.699E-09, 6.849E-09, 6.812E-09, 6.682E-09, 6.515E-09,
     $ 6.355E-09, 6.154E-09, 5.996E-09, 5.880E-09, 5.772E-09, 5.619E-09,
     $ 5.549E-09, 5.660E-09, 5.975E-09, 6.590E-09, 7.593E-09, 8.850E-09,
     $ 9.999E-09, 1.088E-08, 1.139E-08, 1.141E-08, 1.095E-08, 1.026E-08,
     $ 9.490E-09, 8.751E-09, 8.294E-09, 8.363E-09, 9.054E-09, 1.038E-08,
     $ 1.228E-08, 1.447E-08, 1.671E-08, 1.878E-08, 2.055E-08, 2.193E-08,
     $ 2.292E-08, 2.347E-08, 2.353E-08, 2.312E-08, 2.228E-08, 2.115E-08,
     $ 1.988E-08, 1.860E-08, 1.736E-08, 1.624E-08, 1.523E-08, 1.443E-08,
     $ 1.400E-08, 1.409E-08, 1.456E-08, 1.536E-08, 1.623E-08, 1.684E-08,
     $ 1.689E-08, 1.653E-08, 1.567E-08, 1.440E-08, 1.287E-08, 1.134E-08,
     $ 9.806E-09, 8.486E-09, 7.559E-09, 7.212E-09, 7.466E-09, 8.229E-09,
     $ 9.258E-09, 1.037E-08, 1.128E-08, 1.174E-08, 1.183E-08, 1.161E-08,
     $ 1.116E-08, 1.056E-08, 9.895E-09, 9.134E-09/
C                                                                       
C     47601 TO 47700 CM-1 DATA.                                         
      DATA (SUN(I),I= 47601, 47700)/                                    
     $ 8.373E-09, 7.642E-09, 7.008E-09, 6.478E-09, 6.047E-09, 5.700E-09,
     $ 5.407E-09, 5.174E-09, 5.095E-09, 5.253E-09, 5.649E-09, 6.241E-09,
     $ 6.961E-09, 7.678E-09, 8.367E-09, 9.008E-09, 9.696E-09, 1.044E-08,
     $ 1.123E-08, 1.185E-08, 1.220E-08, 1.214E-08, 1.163E-08, 1.076E-08,
     $ 9.727E-09, 8.772E-09, 7.988E-09, 7.435E-09, 7.090E-09, 6.931E-09,
     $ 6.807E-09, 6.749E-09, 6.867E-09, 7.250E-09, 7.923E-09, 8.912E-09,
     $ 1.010E-08, 1.130E-08, 1.238E-08, 1.323E-08, 1.368E-08, 1.372E-08,
     $ 1.353E-08, 1.322E-08, 1.291E-08, 1.267E-08, 1.257E-08, 1.246E-08,
     $ 1.231E-08, 1.221E-08, 1.236E-08, 1.286E-08, 1.360E-08, 1.425E-08,
     $ 1.448E-08, 1.406E-08, 1.294E-08, 1.143E-08, 1.013E-08, 9.563E-09,
     $ 9.895E-09, 1.102E-08, 1.259E-08, 1.394E-08, 1.447E-08, 1.403E-08,
     $ 1.280E-08, 1.113E-08, 9.557E-09, 8.501E-09, 8.028E-09, 7.988E-09,
     $ 8.137E-09, 8.208E-09, 8.069E-09, 7.686E-09, 7.090E-09, 6.440E-09,
     $ 5.905E-09, 5.558E-09, 5.523E-09, 5.845E-09, 6.484E-09, 7.301E-09,
     $ 8.163E-09, 8.902E-09, 9.486E-09, 9.811E-09, 9.954E-09, 1.001E-08,
     $ 1.008E-08, 1.019E-08, 1.042E-08, 1.071E-08, 1.096E-08, 1.105E-08,
     $ 1.092E-08, 1.059E-08, 1.025E-08, 1.013E-08/
C                                                                       
C     47701 TO 47800 CM-1 DATA.                                         
      DATA (SUN(I),I= 47701, 47800)/                                    
     $ 1.041E-08, 1.105E-08, 1.182E-08, 1.251E-08, 1.297E-08, 1.314E-08,
     $ 1.321E-08, 1.335E-08, 1.348E-08, 1.336E-08, 1.288E-08, 1.195E-08,
     $ 1.066E-08, 9.273E-09, 8.094E-09, 7.239E-09, 6.710E-09, 6.398E-09,
     $ 6.228E-09, 6.150E-09, 6.171E-09, 6.317E-09, 6.651E-09, 7.187E-09,
     $ 7.941E-09, 8.893E-09, 9.980E-09, 1.103E-08, 1.182E-08, 1.213E-08,
     $ 1.182E-08, 1.092E-08, 9.648E-09, 8.257E-09, 6.985E-09, 6.051E-09,
     $ 5.480E-09, 5.234E-09, 5.283E-09, 5.558E-09, 5.956E-09, 6.353E-09,
     $ 6.610E-09, 6.633E-09, 6.424E-09, 6.042E-09, 5.671E-09, 5.483E-09,
     $ 5.510E-09, 5.708E-09, 6.071E-09, 6.577E-09, 7.269E-09, 8.221E-09,
     $ 9.493E-09, 1.099E-08, 1.247E-08, 1.371E-08, 1.468E-08, 1.529E-08,
     $ 1.563E-08, 1.580E-08, 1.580E-08, 1.552E-08, 1.507E-08, 1.445E-08,
     $ 1.379E-08, 1.324E-08, 1.282E-08, 1.239E-08, 1.192E-08, 1.146E-08,
     $ 1.107E-08, 1.088E-08, 1.099E-08, 1.135E-08, 1.165E-08, 1.166E-08,
     $ 1.132E-08, 1.066E-08, 9.767E-09, 8.893E-09, 8.156E-09, 7.556E-09,
     $ 6.990E-09, 6.473E-09, 5.968E-09, 5.533E-09, 5.224E-09, 5.103E-09,
     $ 5.162E-09, 5.412E-09, 5.864E-09, 6.479E-09, 7.223E-09, 8.061E-09,
     $ 8.922E-09, 9.737E-09, 1.044E-08, 1.101E-08/
C                                                                       
C     47801 TO 47900 CM-1 DATA.                                         
      DATA (SUN(I),I= 47801, 47900)/                                    
     $ 1.132E-08, 1.134E-08, 1.099E-08, 1.035E-08, 9.480E-09, 8.599E-09,
     $ 7.840E-09, 7.361E-09, 7.166E-09, 7.238E-09, 7.491E-09, 7.859E-09,
     $ 8.250E-09, 8.604E-09, 8.840E-09, 8.971E-09, 9.020E-09, 8.934E-09,
     $ 8.680E-09, 8.326E-09, 7.871E-09, 7.313E-09, 6.773E-09, 6.348E-09,
     $ 6.010E-09, 5.749E-09, 5.576E-09, 5.505E-09, 5.518E-09, 5.626E-09,
     $ 5.799E-09, 6.009E-09, 6.192E-09, 6.372E-09, 6.584E-09, 6.842E-09,
     $ 7.084E-09, 7.321E-09, 7.568E-09, 7.777E-09, 7.968E-09, 8.221E-09,
     $ 8.473E-09, 8.582E-09, 8.511E-09, 8.251E-09, 7.762E-09, 7.133E-09,
     $ 6.499E-09, 5.952E-09, 5.499E-09, 5.200E-09, 5.035E-09, 4.941E-09,
     $ 4.907E-09, 4.960E-09, 5.061E-09, 5.183E-09, 5.338E-09, 5.482E-09,
     $ 5.599E-09, 5.752E-09, 6.013E-09, 6.419E-09, 7.005E-09, 7.746E-09,
     $ 8.543E-09, 9.375E-09, 1.018E-08, 1.088E-08, 1.144E-08, 1.183E-08,
     $ 1.200E-08, 1.197E-08, 1.181E-08, 1.161E-08, 1.147E-08, 1.139E-08,
     $ 1.134E-08, 1.130E-08, 1.117E-08, 1.082E-08, 1.016E-08, 9.246E-09,
     $ 8.140E-09, 7.001E-09, 6.019E-09, 5.386E-09, 5.106E-09, 5.094E-09,
     $ 5.220E-09, 5.382E-09, 5.494E-09, 5.565E-09, 5.607E-09, 5.613E-09,
     $ 5.558E-09, 5.459E-09, 5.361E-09, 5.313E-09/
C                                                                       
C     47901 TO 48000 CM-1 DATA.                                         
      DATA (SUN(I),I= 47901, 48000)/                                    
     $ 5.373E-09, 5.564E-09, 5.858E-09, 6.173E-09, 6.526E-09, 6.940E-09,
     $ 7.466E-09, 8.097E-09, 8.788E-09, 9.413E-09, 9.874E-09, 1.007E-08,
     $ 9.967E-09, 9.584E-09, 8.966E-09, 8.185E-09, 7.375E-09, 6.647E-09,
     $ 6.131E-09, 5.907E-09, 6.001E-09, 6.360E-09, 6.909E-09, 7.564E-09,
     $ 8.244E-09, 8.784E-09, 9.102E-09, 9.174E-09, 8.994E-09, 8.593E-09,
     $ 8.151E-09, 7.741E-09, 7.417E-09, 7.147E-09, 6.905E-09, 6.632E-09,
     $ 6.323E-09, 5.941E-09, 5.573E-09, 5.301E-09, 5.170E-09, 5.178E-09,
     $ 5.347E-09, 5.634E-09, 5.978E-09, 6.283E-09, 6.564E-09, 6.811E-09,
     $ 7.018E-09, 7.171E-09, 7.331E-09, 7.467E-09, 7.529E-09, 7.478E-09,
     $ 7.257E-09, 6.817E-09, 6.210E-09, 5.575E-09, 5.002E-09, 4.654E-09,
     $ 4.604E-09, 4.747E-09, 4.885E-09, 4.923E-09, 4.797E-09, 4.529E-09,
     $ 4.285E-09, 4.239E-09, 4.438E-09, 4.829E-09, 5.298E-09, 5.649E-09,
     $ 5.750E-09, 5.634E-09, 5.346E-09, 4.989E-09, 4.742E-09, 4.748E-09,
     $ 4.980E-09, 5.404E-09, 5.940E-09, 6.468E-09, 6.902E-09, 7.205E-09,
     $ 7.380E-09, 7.449E-09, 7.454E-09, 7.375E-09, 7.251E-09, 7.109E-09,
     $ 6.980E-09, 6.866E-09, 6.775E-09, 6.670E-09, 6.544E-09, 6.409E-09,
     $ 6.244E-09, 6.112E-09, 6.054E-09, 6.040E-09/
C                                                                       
C     48001 TO 48100 CM-1 DATA.                                         
      DATA (SUN(I),I= 48001, 48100)/                                    
     $ 5.989E-09, 5.925E-09, 5.799E-09, 5.632E-09, 5.468E-09, 5.388E-09,
     $ 5.414E-09, 5.556E-09, 5.761E-09, 5.978E-09, 6.144E-09, 6.181E-09,
     $ 6.061E-09, 5.826E-09, 5.554E-09, 5.342E-09, 5.283E-09, 5.442E-09,
     $ 5.762E-09, 6.151E-09, 6.453E-09, 6.594E-09, 6.537E-09, 6.330E-09,
     $ 6.041E-09, 5.784E-09, 5.592E-09, 5.432E-09, 5.299E-09, 5.175E-09,
     $ 5.098E-09, 5.088E-09, 5.174E-09, 5.319E-09, 5.513E-09, 5.660E-09,
     $ 5.723E-09, 5.694E-09, 5.602E-09, 5.489E-09, 5.425E-09, 5.398E-09,
     $ 5.455E-09, 5.635E-09, 5.871E-09, 6.086E-09, 6.308E-09, 6.461E-09,
     $ 6.454E-09, 6.322E-09, 6.112E-09, 5.813E-09, 5.496E-09, 5.232E-09,
     $ 5.053E-09, 4.996E-09, 5.111E-09, 5.388E-09, 5.776E-09, 6.186E-09,
     $ 6.569E-09, 6.837E-09, 6.927E-09, 6.874E-09, 6.740E-09, 6.509E-09,
     $ 6.220E-09, 5.939E-09, 5.694E-09, 5.502E-09, 5.427E-09, 5.493E-09,
     $ 5.722E-09, 6.051E-09, 6.425E-09, 6.787E-09, 7.106E-09, 7.276E-09,
     $ 7.309E-09, 7.213E-09, 7.019E-09, 6.734E-09, 6.417E-09, 6.097E-09,
     $ 5.791E-09, 5.477E-09, 5.172E-09, 4.924E-09, 4.753E-09, 4.690E-09,
     $ 4.758E-09, 4.945E-09, 5.195E-09, 5.462E-09, 5.700E-09, 5.917E-09,
     $ 6.080E-09, 6.169E-09, 6.168E-09, 6.080E-09/
C                                                                       
C     48101 TO 48200 CM-1 DATA.                                         
      DATA (SUN(I),I= 48101, 48200)/                                    
     $ 5.867E-09, 5.599E-09, 5.370E-09, 5.231E-09, 5.226E-09, 5.375E-09,
     $ 5.639E-09, 5.929E-09, 6.184E-09, 6.341E-09, 6.367E-09, 6.239E-09,
     $ 5.969E-09, 5.637E-09, 5.295E-09, 5.014E-09, 4.852E-09, 4.845E-09,
     $ 4.965E-09, 5.213E-09, 5.527E-09, 5.858E-09, 6.159E-09, 6.397E-09,
     $ 6.507E-09, 6.525E-09, 6.498E-09, 6.457E-09, 6.401E-09, 6.430E-09,
     $ 6.491E-09, 6.513E-09, 6.505E-09, 6.496E-09, 6.431E-09, 6.366E-09,
     $ 6.349E-09, 6.356E-09, 6.357E-09, 6.341E-09, 6.321E-09, 6.292E-09,
     $ 6.257E-09, 6.264E-09, 6.312E-09, 6.333E-09, 6.296E-09, 6.239E-09,
     $ 6.122E-09, 5.965E-09, 5.851E-09, 5.798E-09, 5.778E-09, 5.834E-09,
     $ 5.888E-09, 5.893E-09, 5.861E-09, 5.806E-09, 5.713E-09, 5.684E-09,
     $ 5.731E-09, 5.856E-09, 6.017E-09, 6.175E-09, 6.279E-09, 6.352E-09,
     $ 6.376E-09, 6.354E-09, 6.285E-09, 6.207E-09, 6.100E-09, 5.964E-09,
     $ 5.884E-09, 5.891E-09, 5.947E-09, 6.014E-09, 6.079E-09, 6.082E-09,
     $ 6.006E-09, 5.884E-09, 5.760E-09, 5.652E-09, 5.528E-09, 5.429E-09,
     $ 5.341E-09, 5.253E-09, 5.210E-09, 5.238E-09, 5.276E-09, 5.314E-09,
     $ 5.346E-09, 5.294E-09, 5.229E-09, 5.219E-09, 5.293E-09, 5.426E-09,
     $ 5.673E-09, 5.925E-09, 6.106E-09, 6.178E-09/
C                                                                       
C     48201 TO 48300 CM-1 DATA.                                         
      DATA (SUN(I),I= 48201, 48300)/                                    
     $ 6.234E-09, 6.240E-09, 6.227E-09, 6.248E-09, 6.337E-09, 6.384E-09,
     $ 6.405E-09, 6.425E-09, 6.434E-09, 6.397E-09, 6.362E-09, 6.312E-09,
     $ 6.229E-09, 6.115E-09, 5.942E-09, 5.723E-09, 5.523E-09, 5.371E-09,
     $ 5.260E-09, 5.277E-09, 5.401E-09, 5.524E-09, 5.607E-09, 5.651E-09,
     $ 5.599E-09, 5.484E-09, 5.394E-09, 5.324E-09, 5.305E-09, 5.363E-09,
     $ 5.454E-09, 5.561E-09, 5.710E-09, 5.832E-09, 5.919E-09, 5.934E-09,
     $ 5.845E-09, 5.648E-09, 5.396E-09, 5.090E-09, 4.840E-09, 4.674E-09,
     $ 4.605E-09, 4.625E-09, 4.737E-09, 4.874E-09, 4.975E-09, 5.012E-09,
     $ 5.000E-09, 4.943E-09, 4.853E-09, 4.827E-09, 4.868E-09, 4.915E-09,
     $ 4.931E-09, 4.943E-09, 4.914E-09, 4.870E-09, 4.857E-09, 4.918E-09,
     $ 5.012E-09, 5.137E-09, 5.284E-09, 5.422E-09, 5.506E-09, 5.591E-09,
     $ 5.638E-09, 5.641E-09, 5.654E-09, 5.732E-09, 5.783E-09, 5.848E-09,
     $ 5.889E-09, 5.855E-09, 5.755E-09, 5.657E-09, 5.566E-09, 5.542E-09,
     $ 5.596E-09, 5.638E-09, 5.646E-09, 5.621E-09, 5.519E-09, 5.349E-09,
     $ 5.206E-09, 5.070E-09, 4.985E-09, 4.983E-09, 5.028E-09, 5.054E-09,
     $ 5.099E-09, 5.081E-09, 5.018E-09, 4.982E-09, 4.968E-09, 4.977E-09,
     $ 5.011E-09, 5.019E-09, 4.947E-09, 4.866E-09/
C                                                                       
C     48301 TO 48400 CM-1 DATA.                                         
      DATA (SUN(I),I= 48301, 48400)/                                    
     $ 4.751E-09, 4.669E-09, 4.635E-09, 4.692E-09, 4.808E-09, 4.978E-09,
     $ 5.121E-09, 5.258E-09, 5.350E-09, 5.345E-09, 5.244E-09, 5.093E-09,
     $ 4.910E-09, 4.718E-09, 4.612E-09, 4.624E-09, 4.738E-09, 4.874E-09,
     $ 4.987E-09, 5.006E-09, 4.923E-09, 4.766E-09, 4.612E-09, 4.505E-09,
     $ 4.464E-09, 4.500E-09, 4.560E-09, 4.610E-09, 4.692E-09, 4.809E-09,
     $ 4.948E-09, 5.126E-09, 5.308E-09, 5.408E-09, 5.472E-09, 5.420E-09,
     $ 5.285E-09, 5.137E-09, 5.027E-09, 4.886E-09, 4.852E-09, 4.902E-09,
     $ 5.018E-09, 5.139E-09, 5.279E-09, 5.378E-09, 5.454E-09, 5.432E-09,
     $ 5.359E-09, 5.226E-09, 5.020E-09, 4.757E-09, 4.579E-09, 4.505E-09,
     $ 4.587E-09, 4.796E-09, 5.090E-09, 5.340E-09, 5.516E-09, 5.572E-09,
     $ 5.576E-09, 5.532E-09, 5.492E-09, 5.456E-09, 5.459E-09, 5.441E-09,
     $ 5.433E-09, 5.403E-09, 5.394E-09, 5.376E-09, 5.357E-09, 5.287E-09,
     $ 5.203E-09, 5.081E-09, 4.949E-09, 4.843E-09, 4.825E-09, 4.905E-09,
     $ 5.034E-09, 5.178E-09, 5.314E-09, 5.385E-09, 5.319E-09, 5.187E-09,
     $ 5.002E-09, 4.796E-09, 4.623E-09, 4.549E-09, 4.535E-09, 4.587E-09,
     $ 4.624E-09, 4.602E-09, 4.507E-09, 4.320E-09, 4.034E-09, 3.782E-09,
     $ 3.597E-09, 3.503E-09, 3.537E-09, 3.737E-09/
C                                                                       
C     48401 TO 48500 CM-1 DATA.                                         
      DATA (SUN(I),I= 48401, 48500)/                                    
     $ 3.979E-09, 4.256E-09, 4.544E-09, 4.838E-09, 5.065E-09, 5.274E-09,
     $ 5.429E-09, 5.529E-09, 5.573E-09, 5.597E-09, 5.618E-09, 5.649E-09,
     $ 5.675E-09, 5.684E-09, 5.688E-09, 5.645E-09, 5.576E-09, 5.502E-09,
     $ 5.433E-09, 5.317E-09, 5.203E-09, 5.094E-09, 5.013E-09, 4.960E-09,
     $ 4.973E-09, 5.035E-09, 5.142E-09, 5.240E-09, 5.326E-09, 5.412E-09,
     $ 5.489E-09, 5.510E-09, 5.482E-09, 5.382E-09, 5.188E-09, 4.906E-09,
     $ 4.608E-09, 4.362E-09, 4.248E-09, 4.271E-09, 4.428E-09, 4.652E-09,
     $ 4.855E-09, 4.940E-09, 4.913E-09, 4.780E-09, 4.581E-09, 4.419E-09,
     $ 4.369E-09, 4.438E-09, 4.614E-09, 4.875E-09, 5.127E-09, 5.317E-09,
     $ 5.447E-09, 5.476E-09, 5.436E-09, 5.346E-09, 5.250E-09, 5.156E-09,
     $ 5.165E-09, 5.231E-09, 5.338E-09, 5.469E-09, 5.554E-09, 5.521E-09,
     $ 5.386E-09, 5.189E-09, 4.906E-09, 4.609E-09, 4.342E-09, 4.163E-09,
     $ 4.068E-09, 4.038E-09, 4.046E-09, 4.001E-09, 3.841E-09, 3.592E-09,
     $ 3.373E-09, 3.217E-09, 3.221E-09, 3.375E-09, 3.630E-09, 3.826E-09,
     $ 3.896E-09, 3.829E-09, 3.658E-09, 3.400E-09, 3.199E-09, 3.126E-09,
     $ 3.189E-09, 3.407E-09, 3.765E-09, 4.113E-09, 4.398E-09, 4.569E-09,
     $ 4.577E-09, 4.457E-09, 4.354E-09, 4.312E-09/
C                                                                       
C     48501 TO 48600 CM-1 DATA.                                         
      DATA (SUN(I),I= 48501, 48600)/                                    
     $ 4.368E-09, 4.534E-09, 4.772E-09, 5.003E-09, 5.189E-09, 5.289E-09,
     $ 5.311E-09, 5.286E-09, 5.239E-09, 5.209E-09, 5.228E-09, 5.284E-09,
     $ 5.372E-09, 5.457E-09, 5.530E-09, 5.582E-09, 5.620E-09, 5.565E-09,
     $ 5.472E-09, 5.319E-09, 5.159E-09, 4.989E-09, 4.926E-09, 4.935E-09,
     $ 4.958E-09, 4.900E-09, 4.796E-09, 4.629E-09, 4.472E-09, 4.428E-09,
     $ 4.528E-09, 4.743E-09, 4.985E-09, 5.184E-09, 5.276E-09, 5.302E-09,
     $ 5.293E-09, 5.320E-09, 5.335E-09, 5.420E-09, 5.548E-09, 5.640E-09,
     $ 5.675E-09, 5.760E-09, 5.779E-09, 5.752E-09, 5.690E-09, 5.594E-09,
     $ 5.406E-09, 5.173E-09, 4.889E-09, 4.644E-09, 4.471E-09, 4.356E-09,
     $ 4.334E-09, 4.401E-09, 4.487E-09, 4.533E-09, 4.561E-09, 4.553E-09,
     $ 4.536E-09, 4.511E-09, 4.494E-09, 4.486E-09, 4.442E-09, 4.292E-09,
     $ 4.035E-09, 3.691E-09, 3.307E-09, 2.972E-09, 2.790E-09, 2.805E-09,
     $ 3.013E-09, 3.358E-09, 3.749E-09, 4.104E-09, 4.398E-09, 4.625E-09,
     $ 4.783E-09, 4.932E-09, 5.054E-09, 5.126E-09, 5.156E-09, 5.155E-09,
     $ 5.041E-09, 4.860E-09, 4.668E-09, 4.459E-09, 4.267E-09, 4.182E-09,
     $ 4.222E-09, 4.351E-09, 4.545E-09, 4.750E-09, 4.930E-09, 5.065E-09,
     $ 5.115E-09, 5.143E-09, 5.176E-09, 5.222E-09/
C                                                                       
C     48601 TO 48700 CM-1 DATA.                                         
      DATA (SUN(I),I= 48601, 48700)/                                    
     $ 5.285E-09, 5.393E-09, 5.461E-09, 5.488E-09, 5.494E-09, 5.449E-09,
     $ 5.362E-09, 5.317E-09, 5.309E-09, 5.278E-09, 5.271E-09, 5.302E-09,
     $ 5.341E-09, 5.373E-09, 5.432E-09, 5.484E-09, 5.510E-09, 5.485E-09,
     $ 5.406E-09, 5.256E-09, 5.037E-09, 4.752E-09, 4.413E-09, 4.080E-09,
     $ 3.796E-09, 3.569E-09, 3.392E-09, 3.253E-09, 3.118E-09, 2.962E-09,
     $ 2.815E-09, 2.718E-09, 2.739E-09, 2.851E-09, 3.024E-09, 3.238E-09,
     $ 3.482E-09, 3.717E-09, 3.963E-09, 4.241E-09, 4.535E-09, 4.772E-09,
     $ 4.908E-09, 4.956E-09, 4.922E-09, 4.806E-09, 4.664E-09, 4.543E-09,
     $ 4.438E-09, 4.427E-09, 4.496E-09, 4.610E-09, 4.719E-09, 4.800E-09,
     $ 4.793E-09, 4.743E-09, 4.678E-09, 4.670E-09, 4.745E-09, 4.825E-09,
     $ 4.906E-09, 5.022E-09, 5.103E-09, 5.136E-09, 5.190E-09, 5.210E-09,
     $ 5.162E-09, 5.097E-09, 5.013E-09, 4.940E-09, 4.876E-09, 4.843E-09,
     $ 4.802E-09, 4.786E-09, 4.764E-09, 4.800E-09, 4.866E-09, 4.992E-09,
     $ 5.125E-09, 5.229E-09, 5.256E-09, 5.205E-09, 5.069E-09, 4.893E-09,
     $ 4.725E-09, 4.596E-09, 4.516E-09, 4.516E-09, 4.574E-09, 4.685E-09,
     $ 4.828E-09, 4.996E-09, 5.162E-09, 5.306E-09, 5.392E-09, 5.413E-09,
     $ 5.403E-09, 5.340E-09, 5.231E-09, 5.120E-09/
C                                                                       
C     48701 TO 48800 CM-1 DATA.                                         
      DATA (SUN(I),I= 48701, 48800)/                                    
     $ 5.029E-09, 4.926E-09, 4.830E-09, 4.790E-09, 4.782E-09, 4.793E-09,
     $ 4.835E-09, 4.911E-09, 4.938E-09, 4.899E-09, 4.793E-09, 4.649E-09,
     $ 4.490E-09, 4.362E-09, 4.347E-09, 4.445E-09, 4.609E-09, 4.761E-09,
     $ 4.933E-09, 5.045E-09, 5.110E-09, 5.126E-09, 5.146E-09, 5.138E-09,
     $ 5.122E-09, 5.081E-09, 5.021E-09, 4.959E-09, 4.897E-09, 4.849E-09,
     $ 4.828E-09, 4.853E-09, 4.892E-09, 4.928E-09, 4.922E-09, 4.873E-09,
     $ 4.791E-09, 4.688E-09, 4.546E-09, 4.439E-09, 4.359E-09, 4.285E-09,
     $ 4.249E-09, 4.307E-09, 4.405E-09, 4.545E-09, 4.680E-09, 4.784E-09,
     $ 4.856E-09, 4.887E-09, 4.870E-09, 4.879E-09, 4.889E-09, 4.905E-09,
     $ 4.941E-09, 4.965E-09, 4.968E-09, 4.995E-09, 4.958E-09, 4.880E-09,
     $ 4.864E-09, 4.871E-09, 4.868E-09, 4.942E-09, 5.037E-09, 5.057E-09,
     $ 5.030E-09, 4.985E-09, 4.885E-09, 4.786E-09, 4.726E-09, 4.705E-09,
     $ 4.663E-09, 4.614E-09, 4.531E-09, 4.419E-09, 4.299E-09, 4.225E-09,
     $ 4.197E-09, 4.228E-09, 4.287E-09, 4.333E-09, 4.362E-09, 4.375E-09,
     $ 4.369E-09, 4.360E-09, 4.380E-09, 4.433E-09, 4.505E-09, 4.574E-09,
     $ 4.683E-09, 4.761E-09, 4.816E-09, 4.829E-09, 4.842E-09, 4.760E-09,
     $ 4.711E-09, 4.675E-09, 4.666E-09, 4.681E-09/
C                                                                       
C     48801 TO 48900 CM-1 DATA.                                         
      DATA (SUN(I),I= 48801, 48900)/                                    
     $ 4.784E-09, 4.844E-09, 4.886E-09, 4.923E-09, 4.917E-09, 4.854E-09,
     $ 4.812E-09, 4.741E-09, 4.666E-09, 4.634E-09, 4.625E-09, 4.612E-09,
     $ 4.622E-09, 4.598E-09, 4.534E-09, 4.493E-09, 4.478E-09, 4.456E-09,
     $ 4.455E-09, 4.445E-09, 4.332E-09, 4.112E-09, 3.844E-09, 3.541E-09,
     $ 3.270E-09, 3.107E-09, 3.084E-09, 3.193E-09, 3.401E-09, 3.625E-09,
     $ 3.832E-09, 4.012E-09, 4.141E-09, 4.264E-09, 4.416E-09, 4.616E-09,
     $ 4.831E-09, 5.065E-09, 5.269E-09, 5.386E-09, 5.402E-09, 5.326E-09,
     $ 5.186E-09, 5.019E-09, 4.892E-09, 4.828E-09, 4.839E-09, 4.895E-09,
     $ 4.976E-09, 5.059E-09, 5.115E-09, 5.130E-09, 5.118E-09, 5.091E-09,
     $ 5.058E-09, 5.018E-09, 4.967E-09, 4.908E-09, 4.850E-09, 4.824E-09,
     $ 4.827E-09, 4.897E-09, 5.017E-09, 5.167E-09, 5.290E-09, 5.416E-09,
     $ 5.504E-09, 5.556E-09, 5.561E-09, 5.504E-09, 5.382E-09, 5.228E-09,
     $ 5.052E-09, 4.877E-09, 4.783E-09, 4.745E-09, 4.746E-09, 4.753E-09,
     $ 4.755E-09, 4.708E-09, 4.620E-09, 4.486E-09, 4.356E-09, 4.254E-09,
     $ 4.215E-09, 4.234E-09, 4.278E-09, 4.317E-09, 4.327E-09, 4.266E-09,
     $ 4.188E-09, 4.155E-09, 4.181E-09, 4.274E-09, 4.402E-09, 4.503E-09,
     $ 4.570E-09, 4.588E-09, 4.565E-09, 4.568E-09/
C                                                                       
C     48901 TO 49000 CM-1 DATA.                                         
      DATA (SUN(I),I= 48901, 49000)/                                    
     $ 4.575E-09, 4.558E-09, 4.532E-09, 4.490E-09, 4.385E-09, 4.304E-09,
     $ 4.238E-09, 4.134E-09, 4.008E-09, 3.907E-09, 3.787E-09, 3.702E-09,
     $ 3.723E-09, 3.835E-09, 3.987E-09, 4.160E-09, 4.327E-09, 4.435E-09,
     $ 4.486E-09, 4.471E-09, 4.409E-09, 4.309E-09, 4.245E-09, 4.204E-09,
     $ 4.216E-09, 4.296E-09, 4.404E-09, 4.484E-09, 4.570E-09, 4.683E-09,
     $ 4.811E-09, 4.951E-09, 5.102E-09, 5.210E-09, 5.243E-09, 5.190E-09,
     $ 5.083E-09, 4.887E-09, 4.680E-09, 4.491E-09, 4.367E-09, 4.304E-09,
     $ 4.397E-09, 4.565E-09, 4.772E-09, 4.958E-09, 5.117E-09, 5.194E-09,
     $ 5.242E-09, 5.257E-09, 5.248E-09, 5.244E-09, 5.245E-09, 5.207E-09,
     $ 5.151E-09, 5.088E-09, 4.986E-09, 4.844E-09, 4.703E-09, 4.561E-09,
     $ 4.448E-09, 4.369E-09, 4.325E-09, 4.329E-09, 4.373E-09, 4.423E-09,
     $ 4.500E-09, 4.651E-09, 4.790E-09, 4.923E-09, 5.041E-09, 5.086E-09,
     $ 4.967E-09, 4.804E-09, 4.602E-09, 4.387E-09, 4.220E-09, 4.175E-09,
     $ 4.195E-09, 4.253E-09, 4.343E-09, 4.432E-09, 4.441E-09, 4.383E-09,
     $ 4.322E-09, 4.273E-09, 4.234E-09, 4.272E-09, 4.385E-09, 4.509E-09,
     $ 4.603E-09, 4.692E-09, 4.759E-09, 4.773E-09, 4.705E-09, 4.586E-09,
     $ 4.445E-09, 4.284E-09, 4.116E-09, 4.004E-09/
C                                                                       
C     49001 TO 49100 CM-1 DATA.                                         
      DATA (SUN(I),I= 49001, 49100)/                                    
     $ 3.933E-09, 3.805E-09, 3.632E-09, 3.448E-09, 3.288E-09, 3.178E-09,
     $ 3.178E-09, 3.274E-09, 3.429E-09, 3.578E-09, 3.687E-09, 3.731E-09,
     $ 3.730E-09, 3.701E-09, 3.630E-09, 3.539E-09, 3.467E-09, 3.403E-09,
     $ 3.360E-09, 3.357E-09, 3.404E-09, 3.476E-09, 3.550E-09, 3.611E-09,
     $ 3.683E-09, 3.743E-09, 3.824E-09, 3.924E-09, 4.005E-09, 4.026E-09,
     $ 3.993E-09, 3.873E-09, 3.694E-09, 3.546E-09, 3.477E-09, 3.501E-09,
     $ 3.610E-09, 3.787E-09, 3.964E-09, 4.109E-09, 4.201E-09, 4.237E-09,
     $ 4.214E-09, 4.164E-09, 4.096E-09, 4.021E-09, 3.991E-09, 4.045E-09,
     $ 4.144E-09, 4.289E-09, 4.454E-09, 4.574E-09, 4.609E-09, 4.612E-09,
     $ 4.584E-09, 4.555E-09, 4.559E-09, 4.624E-09, 4.696E-09, 4.744E-09,
     $ 4.773E-09, 4.780E-09, 4.736E-09, 4.666E-09, 4.603E-09, 4.554E-09,
     $ 4.493E-09, 4.454E-09, 4.406E-09, 4.363E-09, 4.313E-09, 4.304E-09,
     $ 4.257E-09, 4.251E-09, 4.273E-09, 4.312E-09, 4.360E-09, 4.488E-09,
     $ 4.627E-09, 4.725E-09, 4.740E-09, 4.613E-09, 4.359E-09, 4.005E-09,
     $ 3.622E-09, 3.345E-09, 3.252E-09, 3.340E-09, 3.589E-09, 3.971E-09,
     $ 4.357E-09, 4.707E-09, 4.980E-09, 5.198E-09, 5.318E-09, 5.376E-09,
     $ 5.334E-09, 5.183E-09, 4.882E-09, 4.521E-09/
C                                                                       
C     49101 TO 49200 CM-1 DATA.                                         
      DATA (SUN(I),I= 49101, 49200)/                                    
     $ 4.145E-09, 3.827E-09, 3.632E-09, 3.608E-09, 3.735E-09, 3.954E-09,
     $ 4.226E-09, 4.504E-09, 4.752E-09, 4.895E-09, 4.952E-09, 4.943E-09,
     $ 4.857E-09, 4.733E-09, 4.639E-09, 4.571E-09, 4.456E-09, 4.330E-09,
     $ 4.139E-09, 3.897E-09, 3.626E-09, 3.376E-09, 3.189E-09, 3.135E-09,
     $ 3.171E-09, 3.308E-09, 3.565E-09, 3.834E-09, 4.025E-09, 4.121E-09,
     $ 4.072E-09, 3.870E-09, 3.579E-09, 3.264E-09, 3.012E-09, 2.833E-09,
     $ 2.723E-09, 2.683E-09, 2.711E-09, 2.744E-09, 2.825E-09, 2.975E-09,
     $ 3.197E-09, 3.469E-09, 3.754E-09, 4.041E-09, 4.289E-09, 4.453E-09,
     $ 4.512E-09, 4.504E-09, 4.376E-09, 4.158E-09, 3.910E-09, 3.670E-09,
     $ 3.436E-09, 3.242E-09, 3.071E-09, 2.900E-09, 2.712E-09, 2.543E-09,
     $ 2.427E-09, 2.387E-09, 2.417E-09, 2.544E-09, 2.746E-09, 2.986E-09,
     $ 3.201E-09, 3.383E-09, 3.521E-09, 3.601E-09, 3.631E-09, 3.665E-09,
     $ 3.730E-09, 3.794E-09, 3.868E-09, 3.918E-09, 3.958E-09, 3.948E-09,
     $ 3.900E-09, 3.834E-09, 3.791E-09, 3.710E-09, 3.656E-09, 3.635E-09,
     $ 3.626E-09, 3.653E-09, 3.752E-09, 3.893E-09, 4.088E-09, 4.321E-09,
     $ 4.507E-09, 4.628E-09, 4.653E-09, 4.590E-09, 4.473E-09, 4.374E-09,
     $ 4.324E-09, 4.341E-09, 4.391E-09, 4.414E-09/
C                                                                       
C     49201 TO 49300 CM-1 DATA.                                         
      DATA (SUN(I),I= 49201, 49300)/                                    
     $ 4.393E-09, 4.319E-09, 4.206E-09, 4.088E-09, 4.051E-09, 4.112E-09,
     $ 4.248E-09, 4.420E-09, 4.593E-09, 4.690E-09, 4.678E-09, 4.585E-09,
     $ 4.455E-09, 4.344E-09, 4.277E-09, 4.285E-09, 4.346E-09, 4.457E-09,
     $ 4.552E-09, 4.631E-09, 4.686E-09, 4.739E-09, 4.758E-09, 4.753E-09,
     $ 4.714E-09, 4.649E-09, 4.541E-09, 4.431E-09, 4.367E-09, 4.352E-09,
     $ 4.367E-09, 4.388E-09, 4.362E-09, 4.288E-09, 4.153E-09, 3.968E-09,
     $ 3.746E-09, 3.553E-09, 3.385E-09, 3.297E-09, 3.273E-09, 3.336E-09,
     $ 3.447E-09, 3.585E-09, 3.717E-09, 3.857E-09, 4.029E-09, 4.223E-09,
     $ 4.398E-09, 4.509E-09, 4.571E-09, 4.533E-09, 4.428E-09, 4.300E-09,
     $ 4.179E-09, 4.038E-09, 3.867E-09, 3.633E-09, 3.356E-09, 3.067E-09,
     $ 2.834E-09, 2.716E-09, 2.768E-09, 2.975E-09, 3.305E-09, 3.651E-09,
     $ 3.957E-09, 4.145E-09, 4.203E-09, 4.155E-09, 4.051E-09, 3.930E-09,
     $ 3.838E-09, 3.790E-09, 3.760E-09, 3.756E-09, 3.725E-09, 3.672E-09,
     $ 3.596E-09, 3.508E-09, 3.420E-09, 3.391E-09, 3.388E-09, 3.396E-09,
     $ 3.444E-09, 3.528E-09, 3.646E-09, 3.799E-09, 3.986E-09, 4.207E-09,
     $ 4.400E-09, 4.516E-09, 4.561E-09, 4.544E-09, 4.398E-09, 4.214E-09,
     $ 4.038E-09, 3.926E-09, 3.848E-09, 3.855E-09/
C                                                                       
C     49301 TO 49400 CM-1 DATA.                                         
      DATA (SUN(I),I= 49301, 49400)/                                    
     $ 3.890E-09, 3.927E-09, 3.937E-09, 3.984E-09, 4.047E-09, 4.117E-09,
     $ 4.202E-09, 4.277E-09, 4.313E-09, 4.303E-09, 4.244E-09, 4.114E-09,
     $ 3.916E-09, 3.676E-09, 3.442E-09, 3.305E-09, 3.286E-09, 3.407E-09,
     $ 3.574E-09, 3.751E-09, 3.834E-09, 3.807E-09, 3.632E-09, 3.379E-09,
     $ 3.082E-09, 2.817E-09, 2.634E-09, 2.595E-09, 2.681E-09, 2.836E-09,
     $ 2.983E-09, 3.114E-09, 3.185E-09, 3.181E-09, 3.153E-09, 3.138E-09,
     $ 3.074E-09, 2.974E-09, 2.856E-09, 2.680E-09, 2.452E-09, 2.196E-09,
     $ 1.923E-09, 1.682E-09, 1.521E-09, 1.462E-09, 1.510E-09, 1.631E-09,
     $ 1.744E-09, 1.799E-09, 1.753E-09, 1.649E-09, 1.548E-09, 1.516E-09,
     $ 1.590E-09, 1.803E-09, 2.109E-09, 2.455E-09, 2.774E-09, 3.053E-09,
     $ 3.289E-09, 3.490E-09, 3.642E-09, 3.797E-09, 3.942E-09, 4.052E-09,
     $ 4.120E-09, 4.149E-09, 4.096E-09, 3.965E-09, 3.760E-09, 3.510E-09,
     $ 3.276E-09, 3.115E-09, 3.061E-09, 3.116E-09, 3.228E-09, 3.342E-09,
     $ 3.428E-09, 3.459E-09, 3.448E-09, 3.429E-09, 3.432E-09, 3.416E-09,
     $ 3.357E-09, 3.259E-09, 3.168E-09, 3.098E-09, 3.108E-09, 3.246E-09,
     $ 3.484E-09, 3.725E-09, 3.926E-09, 4.056E-09, 4.080E-09, 4.047E-09,
     $ 3.988E-09, 3.932E-09, 3.911E-09, 3.909E-09/
C                                                                       
C     49401 TO 49500 CM-1 DATA.                                         
      DATA (SUN(I),I= 49401, 49500)/                                    
     $ 3.884E-09, 3.905E-09, 3.984E-09, 4.086E-09, 4.238E-09, 4.442E-09,
     $ 4.617E-09, 4.699E-09, 4.690E-09, 4.602E-09, 4.425E-09, 4.192E-09,
     $ 3.978E-09, 3.787E-09, 3.598E-09, 3.444E-09, 3.330E-09, 3.224E-09,
     $ 3.185E-09, 3.232E-09, 3.365E-09, 3.571E-09, 3.815E-09, 3.984E-09,
     $ 4.052E-09, 3.985E-09, 3.762E-09, 3.463E-09, 3.231E-09, 3.079E-09,
     $ 3.067E-09, 3.207E-09, 3.400E-09, 3.526E-09, 3.561E-09, 3.445E-09,
     $ 3.238E-09, 3.021E-09, 2.873E-09, 2.810E-09, 2.860E-09, 2.940E-09,
     $ 3.019E-09, 3.018E-09, 2.988E-09, 2.941E-09, 2.925E-09, 2.922E-09,
     $ 3.003E-09, 3.082E-09, 3.123E-09, 3.135E-09, 3.136E-09, 3.090E-09,
     $ 3.065E-09, 3.106E-09, 3.139E-09, 3.163E-09, 3.190E-09, 3.188E-09,
     $ 3.137E-09, 3.115E-09, 3.141E-09, 3.208E-09, 3.268E-09, 3.313E-09,
     $ 3.339E-09, 3.308E-09, 3.267E-09, 3.320E-09, 3.465E-09, 3.636E-09,
     $ 3.836E-09, 3.983E-09, 4.016E-09, 3.950E-09, 3.859E-09, 3.763E-09,
     $ 3.724E-09, 3.732E-09, 3.757E-09, 3.730E-09, 3.674E-09, 3.594E-09,
     $ 3.514E-09, 3.463E-09, 3.479E-09, 3.517E-09, 3.511E-09, 3.420E-09,
     $ 3.288E-09, 3.161E-09, 3.096E-09, 3.120E-09, 3.300E-09, 3.543E-09,
     $ 3.781E-09, 3.941E-09, 4.057E-09, 4.111E-09/
C                                                                       
C     49501 TO 49600 CM-1 DATA.                                         
      DATA (SUN(I),I= 49501, 49600)/                                    
     $ 4.153E-09, 4.189E-09, 4.255E-09, 4.302E-09, 4.297E-09, 4.211E-09,
     $ 4.037E-09, 3.802E-09, 3.551E-09, 3.335E-09, 3.207E-09, 3.214E-09,
     $ 3.288E-09, 3.388E-09, 3.470E-09, 3.511E-09, 3.484E-09, 3.492E-09,
     $ 3.540E-09, 3.611E-09, 3.664E-09, 3.681E-09, 3.582E-09, 3.433E-09,
     $ 3.273E-09, 3.157E-09, 3.121E-09, 3.177E-09, 3.262E-09, 3.370E-09,
     $ 3.500E-09, 3.635E-09, 3.801E-09, 3.973E-09, 4.117E-09, 4.197E-09,
     $ 4.211E-09, 4.136E-09, 4.034E-09, 3.972E-09, 3.999E-09, 4.099E-09,
     $ 4.276E-09, 4.487E-09, 4.667E-09, 4.738E-09, 4.707E-09, 4.564E-09,
     $ 4.358E-09, 4.114E-09, 3.936E-09, 3.827E-09, 3.788E-09, 3.744E-09,
     $ 3.691E-09, 3.552E-09, 3.331E-09, 3.112E-09, 2.947E-09, 2.866E-09,
     $ 2.918E-09, 3.106E-09, 3.337E-09, 3.612E-09, 3.890E-09, 4.126E-09,
     $ 4.279E-09, 4.336E-09, 4.291E-09, 4.138E-09, 3.893E-09, 3.625E-09,
     $ 3.399E-09, 3.204E-09, 3.107E-09, 3.118E-09, 3.189E-09, 3.314E-09,
     $ 3.490E-09, 3.622E-09, 3.674E-09, 3.642E-09, 3.493E-09, 3.270E-09,
     $ 3.069E-09, 2.960E-09, 2.945E-09, 3.012E-09, 3.122E-09, 3.199E-09,
     $ 3.190E-09, 3.151E-09, 3.131E-09, 3.121E-09, 3.181E-09, 3.313E-09,
     $ 3.444E-09, 3.553E-09, 3.655E-09, 3.692E-09/
C                                                                       
C     49601 TO 49700 CM-1 DATA.                                         
      DATA (SUN(I),I= 49601, 49700)/                                    
     $ 3.685E-09, 3.644E-09, 3.568E-09, 3.458E-09, 3.354E-09, 3.259E-09,
     $ 3.179E-09, 3.121E-09, 3.076E-09, 3.050E-09, 3.029E-09, 3.042E-09,
     $ 3.097E-09, 3.226E-09, 3.372E-09, 3.562E-09, 3.750E-09, 3.882E-09,
     $ 3.935E-09, 3.946E-09, 3.875E-09, 3.749E-09, 3.634E-09, 3.488E-09,
     $ 3.324E-09, 3.148E-09, 2.979E-09, 2.841E-09, 2.793E-09, 2.822E-09,
     $ 2.952E-09, 3.186E-09, 3.431E-09, 3.622E-09, 3.769E-09, 3.851E-09,
     $ 3.827E-09, 3.757E-09, 3.695E-09, 3.612E-09, 3.506E-09, 3.387E-09,
     $ 3.286E-09, 3.187E-09, 3.155E-09, 3.192E-09, 3.310E-09, 3.428E-09,
     $ 3.539E-09, 3.580E-09, 3.564E-09, 3.490E-09, 3.427E-09, 3.406E-09,
     $ 3.465E-09, 3.586E-09, 3.779E-09, 3.958E-09, 4.107E-09, 4.188E-09,
     $ 4.234E-09, 4.195E-09, 4.149E-09, 4.070E-09, 3.996E-09, 3.895E-09,
     $ 3.802E-09, 3.697E-09, 3.611E-09, 3.549E-09, 3.523E-09, 3.551E-09,
     $ 3.628E-09, 3.726E-09, 3.810E-09, 3.857E-09, 3.877E-09, 3.869E-09,
     $ 3.846E-09, 3.827E-09, 3.838E-09, 3.832E-09, 3.784E-09, 3.681E-09,
     $ 3.558E-09, 3.429E-09, 3.345E-09, 3.358E-09, 3.486E-09, 3.645E-09,
     $ 3.782E-09, 3.836E-09, 3.764E-09, 3.569E-09, 3.337E-09, 3.105E-09,
     $ 2.941E-09, 2.874E-09, 2.885E-09, 2.924E-09/
C                                                                       
C     49701 TO 49800 CM-1 DATA.                                         
      DATA (SUN(I),I= 49701, 49800)/                                    
     $ 2.979E-09, 2.986E-09, 2.951E-09, 2.884E-09, 2.761E-09, 2.600E-09,
     $ 2.463E-09, 2.348E-09, 2.284E-09, 2.355E-09, 2.529E-09, 2.727E-09,
     $ 2.913E-09, 3.047E-09, 3.076E-09, 3.040E-09, 2.992E-09, 2.958E-09,
     $ 2.961E-09, 3.013E-09, 3.096E-09, 3.196E-09, 3.303E-09, 3.401E-09,
     $ 3.446E-09, 3.433E-09, 3.399E-09, 3.396E-09, 3.383E-09, 3.411E-09,
     $ 3.462E-09, 3.498E-09, 3.478E-09, 3.453E-09, 3.413E-09, 3.399E-09,
     $ 3.437E-09, 3.483E-09, 3.546E-09, 3.633E-09, 3.722E-09, 3.773E-09,
     $ 3.840E-09, 3.916E-09, 3.977E-09, 4.001E-09, 4.018E-09, 4.011E-09,
     $ 3.938E-09, 3.822E-09, 3.700E-09, 3.546E-09, 3.362E-09, 3.229E-09,
     $ 3.172E-09, 3.197E-09, 3.298E-09, 3.490E-09, 3.681E-09, 3.802E-09,
     $ 3.815E-09, 3.766E-09, 3.622E-09, 3.414E-09, 3.185E-09, 2.939E-09,
     $ 2.679E-09, 2.451E-09, 2.311E-09, 2.316E-09, 2.468E-09, 2.717E-09,
     $ 3.011E-09, 3.282E-09, 3.430E-09, 3.493E-09, 3.494E-09, 3.483E-09,
     $ 3.490E-09, 3.516E-09, 3.541E-09, 3.582E-09, 3.601E-09, 3.571E-09,
     $ 3.531E-09, 3.463E-09, 3.318E-09, 3.132E-09, 2.954E-09, 2.813E-09,
     $ 2.738E-09, 2.776E-09, 2.892E-09, 3.028E-09, 3.155E-09, 3.234E-09,
     $ 3.249E-09, 3.226E-09, 3.189E-09, 3.116E-09/
C                                                                       
C     49801 TO 49900 CM-1 DATA.                                         
      DATA (SUN(I),I= 49801, 49900)/                                    
     $ 3.031E-09, 2.958E-09, 2.884E-09, 2.813E-09, 2.771E-09, 2.777E-09,
     $ 2.819E-09, 2.919E-09, 3.068E-09, 3.287E-09, 3.509E-09, 3.692E-09,
     $ 3.826E-09, 3.913E-09, 3.902E-09, 3.832E-09, 3.721E-09, 3.559E-09,
     $ 3.365E-09, 3.186E-09, 3.016E-09, 2.882E-09, 2.768E-09, 2.686E-09,
     $ 2.639E-09, 2.663E-09, 2.750E-09, 2.922E-09, 3.121E-09, 3.300E-09,
     $ 3.411E-09, 3.450E-09, 3.436E-09, 3.399E-09, 3.362E-09, 3.347E-09,
     $ 3.375E-09, 3.395E-09, 3.412E-09, 3.420E-09, 3.426E-09, 3.409E-09,
     $ 3.415E-09, 3.445E-09, 3.508E-09, 3.609E-09, 3.692E-09, 3.723E-09,
     $ 3.713E-09, 3.694E-09, 3.640E-09, 3.629E-09, 3.703E-09, 3.815E-09,
     $ 3.891E-09, 3.906E-09, 3.852E-09, 3.713E-09, 3.500E-09, 3.300E-09,
     $ 3.176E-09, 3.113E-09, 3.083E-09, 3.135E-09, 3.196E-09, 3.236E-09,
     $ 3.246E-09, 3.241E-09, 3.179E-09, 3.080E-09, 2.943E-09, 2.792E-09,
     $ 2.663E-09, 2.589E-09, 2.606E-09, 2.726E-09, 2.902E-09, 3.104E-09,
     $ 3.288E-09, 3.387E-09, 3.376E-09, 3.300E-09, 3.134E-09, 2.904E-09,
     $ 2.709E-09, 2.607E-09, 2.596E-09, 2.702E-09, 2.917E-09, 3.147E-09,
     $ 3.306E-09, 3.393E-09, 3.437E-09, 3.448E-09, 3.439E-09, 3.492E-09,
     $ 3.578E-09, 3.660E-09, 3.714E-09, 3.777E-09/
C                                                                       
C     49901 TO 50000 CM-1 DATA.                                         
      DATA (SUN(I),I= 49901, 50000)/                                    
     $ 3.790E-09, 3.773E-09, 3.733E-09, 3.660E-09, 3.558E-09, 3.469E-09,
     $ 3.394E-09, 3.323E-09, 3.285E-09, 3.259E-09, 3.179E-09, 3.069E-09,
     $ 2.967E-09, 2.913E-09, 2.903E-09, 2.993E-09, 3.126E-09, 3.265E-09,
     $ 3.326E-09, 3.310E-09, 3.222E-09, 3.143E-09, 3.073E-09, 3.086E-09,
     $ 3.180E-09, 3.322E-09, 3.436E-09, 3.563E-09, 3.619E-09, 3.632E-09,
     $ 3.643E-09, 3.652E-09, 3.591E-09, 3.521E-09, 3.401E-09, 3.224E-09,
     $ 3.052E-09, 2.957E-09, 2.960E-09, 3.100E-09, 3.311E-09, 3.524E-09,
     $ 3.665E-09, 3.694E-09, 3.576E-09, 3.407E-09, 3.236E-09, 3.138E-09,
     $ 3.116E-09, 3.182E-09, 3.308E-09, 3.448E-09, 3.582E-09, 3.707E-09,
     $ 3.828E-09, 3.905E-09, 3.969E-09, 3.992E-09, 3.973E-09, 3.912E-09,
     $ 3.781E-09, 3.596E-09, 3.369E-09, 3.112E-09, 2.823E-09, 2.582E-09,
     $ 2.368E-09, 2.206E-09, 2.099E-09, 2.082E-09, 2.139E-09, 2.280E-09,
     $ 2.494E-09, 2.763E-09, 3.029E-09, 3.235E-09, 3.348E-09, 3.360E-09,
     $ 3.272E-09, 3.272E-09, 3.272E-09, 3.272E-09, 3.272E-09, 3.272E-09,
     $ 3.272E-09, 3.272E-09, 3.272E-09, 3.272E-09, 3.272E-09, 3.272E-09,
     $ 3.272E-09, 3.272E-09, 3.272E-09, 3.272E-09, 3.272E-09, 3.272E-09,
     $ 3.272E-09, 3.272E-09, 3.272E-09, 3.272E-09/
       END
      SUBROUTINE  SURFAC( ALBEDO, DELM0, FBEAM, HLPR, LAMBER,           
     $                    MI, MAZIM, MXCMU, MXUMU, NN, NUMU, NSTR,      
     $                    ONLYFL, UMU, USRANG, YLM0, YLMC, YLMU, BDR,   
     $                    EMU, BEM, RMU )                               
                                                                        
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
C       SPECIFIES USER'S SURFACE BIDIRECTIONAL PROPERTIES, STWJ(21)     
                                                                        
C   I N P U T     V A R I A B L E S:                                    
                                                                        
C       DELM0  :  KRONECKER DELTA, DELTA-SUB-M0                         
C       HLPR   :  LEGENDRE MOMENTS OF SURFACE BIDIRECTIONAL REFLECTIVITY
C                    (WITH 2K+1 FACTOR INCLUDED)                        
C       MAZIM  :  ORDER OF AZIMUTHAL COMPONENT                          
C       NN     :  ORDER OF DOUBLE-GAUSS QUADRATURE (NSTR/2)             
C       YLM0   :  NORMALIZED ASSOCIATED LEGENDRE POLYNOMIAL             
C                 AT THE BEAM ANGLE                                     
C       YLMC   :  NORMALIZED ASSOCIATED LEGENDRE POLYNOMIALS            
C                 AT THE QUADRATURE ANGLES                              
C       YLMU   :  NORMALIZED ASSOCIATED LEGENDRE POLYNOMIALS            
C                 AT THE USER ANGLES                                    
C       (REMAINDER ARE 'DISORT' INPUT VARIABLES)                        
                                                                        
C    O U T P U T     V A R I A B L E S:                                 
                                                                        
C       BDR :  SURFACE BIDIRECTIONAL REFLECTIVITY (COMPUTATIONAL ANGLES)
C       RMU :  SURFACE BIDIRECTIONAL REFLECTIVITY (USER ANGLES)         
C       BEM :  SURFACE DIRECTIONAL EMISSIVITY (COMPUTATIONAL ANGLES)    
C       EMU :  SURFACE DIRECTIONAL EMISSIVITY (USER ANGLES)             
                                                                        
C    I N T E R N A L     V A R I A B L E S:                             
                                                                        
C       DREF      DIRECTIONAL REFLECTIVITY                              
C       NMUG   :  NUMBER OF ANGLE COSINE QUADRATURE POINTS              
C                 ON (0,1) FOR INTEGRATING BIDIRECTIONAL REFLECTIVITY   
C                 TO GET DIRECTIONAL EMISSIVITY (IT IS NECESSARY TO USE 
C                 A QUADRATURE SET DISTINCT FROM THE COMPUTATIONAL      
C                 ANGLES, BECAUSE THE COMPUTATIONAL ANGLES MAY NOT BE   
C                 DENSE ENOUGH -- I.E. 'NSTR' MAY BE TOO SMALL-- TO GIVE
C                 AN ACCURATE APPROXIMATION FOR THE INTEGRATION).       
C       GMU    :  THE 'NMUG' ANGLE COSINE QUADRATURE POINTS ON (0,1)    
C       GWT    :  THE 'NMUG' ANGLE COSINE QUADRATURE WEIGHTS ON (0,1)   
C       YLMG   :  NORMALIZED ASSOCIATED LEGENDRE POLYNOMIALS            
C                 AT THE 'NMUG' QUADRATURE ANGLES                       
C+---------------------------------------------------------------------+
      LOGICAL  LAMBER, ONLYFL, USRANG                                   
      REAL*8     BDR( MI,0:* ), BEM(*), EMU(*),                         
     $         HLPR(0:*), RMU( MXUMU,0:* ), UMU(*),                     
     $         YLM0(0:*), YLMC( 0:MXCMU,* ), YLMU( 0:MXCMU,* )          
      PARAMETER  ( NMUG = 10, MAXSTR = 100 )                            
      LOGICAL  PASS1                                                    
      REAL*8     GMU( NMUG ), GWT( NMUG ), YLMG( 0:MAXSTR, NMUG )       
      SAVE  PASS1, GMU, GWT, YLMG                                       
      DATA  PASS1 / .TRUE. /                                            
                                                                        
                                                                        
      IF ( PASS1 )  THEN                                                
         PASS1 = .FALSE.                                                
         CALL QGAUSN( NMUG, GMU, GWT )                                  
                                                                        
         CALL LEPOLY( NMUG, 0, MAXSTR, MAXSTR, GMU, YLMG )              
C                       ** CONVERT LEGENDRE POLYS. TO NEGATIVE -GMU-    
         SGN  = - 1.0                                                   
         DO 1  K = 0, MAXSTR                                            
            SGN = - SGN                                                 
            DO 1  JG = 1, NMUG                                          
               YLMG( K,JG ) = SGN * YLMG( K,JG )                        
 1       CONTINUE                                                       
                                                                        
      END IF                                                            
                                                                        
      CALL  ZEROIT( BDR, MI*(MI+1) )                                    
      CALL  ZEROIT( BEM, MI )                                           
                                                                        
      IF ( LAMBER .AND. MAZIM.EQ.0 ) THEN                               
                                                                        
         DO 20 IQ = 1, NN                                               
            BEM(IQ) = 1.0 - ALBEDO                                      
            DO 20 JQ = 0, NN                                            
               BDR(IQ,JQ) = ALBEDO                                      
20       CONTINUE                                                       
                                                                        
      ELSE IF ( .NOT.LAMBER ) THEN                                      
C                                  ** COMPUTE SURFACE BIDIRECTIONAL     
C                                  ** PROPERTIES AT COMPUTATIONAL ANGLES
         DO 60 IQ = 1, NN                                               
                                                                        
            DO 40 JQ = 1, NN                                            
              SUM = 0.0                                                 
              DO 30 K = MAZIM, NSTR-1                                   
                 SUM = SUM + HLPR(K) * YLMC(K,IQ) * YLMC(K,JQ+NN)       
30            CONTINUE                                                  
              BDR(IQ,JQ) = (2.-DELM0) * SUM                             
40          CONTINUE                                                    
                                                                        
            IF ( FBEAM.GT.0.0 )  THEN                                   
               SUM = 0.0                                                
               DO 50 K = MAZIM, NSTR-1                                  
                  SUM = SUM + HLPR(K) * YLMC(K,IQ) * YLM0(K)            
50             CONTINUE                                                 
               BDR(IQ,0) = (2.-DELM0) * SUM                             
            ENDIF                                                       
                                                                        
60       CONTINUE                                                       
                                                                        
         IF ( MAZIM.EQ.0 ) THEN                                         
                                                                        
            IF ( NSTR.GT.MAXSTR )  CALL                                 
     $           ERRMSG( 'SURFAC--PARAMETER MAXSTR TOO SMALL', .TRUE. ) 
                                                                        
C                              ** INTEGRATE BIDIRECTIONAL REFLECTIVITY  
C                              ** AT REFLECTION POLAR ANGLES -CMU- AND  
C                              ** INCIDENT ANGLES -GMU- TO GET          
C                              ** DIRECTIONAL EMISSIVITY AT             
C                              ** COMPUTATIONAL ANGLES -CMU-.           
            DO 100  IQ = 1, NN                                          
               DREF = 0.0                                               
               DO 90  JG = 1, NMUG                                      
                  SUM = 0.0                                             
                  DO 80  K = 0, NSTR-1                                  
                     SUM = SUM + HLPR(K) * YLMC(K,IQ) * YLMG(K,JG)      
80                CONTINUE                                              
                  DREF = DREF + 2.* GWT(JG) * GMU(JG) * SUM             
90             CONTINUE                                                 
               BEM(IQ) = 1.0 - DREF                                     
100         CONTINUE                                                    
                                                                        
         END IF                                                         
                                                                        
      END IF                                                            
C                                       ** COMPUTE SURFACE BIDIRECTIONAL
C                                       ** PROPERTIES AT USER ANGLES    
                                                                        
      IF ( .NOT.ONLYFL .AND. USRANG )  THEN                             
                                                                        
         CALL  ZEROIT( EMU, MXUMU )                                     
         CALL  ZEROIT( RMU, MXUMU*(MI+1) )                              
                                                                        
         DO 170 IU = 1, NUMU                                            
            IF ( UMU(IU).GT.0.0 )  THEN                                 
                                                                        
               IF ( LAMBER .AND. MAZIM.EQ.0 )  THEN                     
                  DO 110 IQ = 0, NN                                     
                     RMU(IU,IQ) = ALBEDO                                
110               CONTINUE                                              
                  EMU(IU) = 1.0 - ALBEDO                                
                                                                        
               ELSE IF ( .NOT.LAMBER ) THEN                             
                  DO 130 IQ = 1, NN                                     
                     SUM = 0.0                                          
                     DO 120 K = MAZIM, NSTR-1                           
                        SUM = SUM + HLPR(K) * YLMU(K,IU) * YLMC(K,IQ+NN)
120                  CONTINUE                                           
                     RMU(IU,IQ) = (2.-DELM0) * SUM                      
130               CONTINUE                                              
                                                                        
                  IF ( FBEAM.GT.0.0 )  THEN                             
                     SUM = 0.0                                          
                     DO 140 K = MAZIM, NSTR-1                           
                        SUM = SUM + HLPR(K) * YLMU(K,IU) * YLM0(K)      
140                  CONTINUE                                           
                     RMU(IU,0) = (2.-DELM0) * SUM                       
                  END IF                                                
                                                                        
                  IF ( MAZIM.EQ.0 ) THEN                                
                                                                        
C                               ** INTEGRATE BIDIRECTIONAL REFLECTIVITY 
C                               ** AT REFLECTION ANGLES -UMU- AND       
C                               ** INCIDENT ANGLES -GMU- TO GET         
C                               ** DIRECTIONAL EMISSIVITY AT            
C                               ** USER ANGLES -UMU-.                   
                     DREF = 0.0                                         
                     DO 160 JG = 1, NMUG                                
                        SUM = 0.0                                       
                        DO 150 K = 0, NSTR-1                            
                           SUM = SUM + HLPR(K) * YLMU(K,IU) * YLMG(K,JG)
150                     CONTINUE                                        
                        DREF = DREF + 2.* GWT(JG) * GMU(JG) * SUM       
160                  CONTINUE                                           
                                                                        
                     EMU(IU) = 1.0 - DREF                               
                  END IF                                                
                                                                        
               END IF                                                   
            END IF                                                      
170      CONTINUE                                                       
                                                                        
      END IF                                                            
                                                                        
      RETURN                                                            
      END                                                               
      SUBROUTINE SVSOLA(IPARM,IPH,IDAY,ISOURC,PARM1,PARM2,PARM3,PARM4,  
     $     TIME,G,ANGLEM,                                               
     $     ISAVE1,ISAVE2,ISAVE3,ISAVE4,SAVE1,SAVE2,SAVE3,SAVE4,         
     $     SAVE5,SAVE6,SAVE7)                                           
C                                                                       
C     SAVE THE CURRENT SOLAR PARAMETERS                                 
C                                                                       
C     IMPLICIT UNDEFINED(A-Z)                                           
      INTEGER IPARM,IDAY,ISOURC,ISAVE1,ISAVE2,ISAVE3,IPH,ISAVE4         
      REAL PARM1,PARM2,PARM3,PARM4,TIME,G,ANGLEM,                       
     $     SAVE1,SAVE2,SAVE3,SAVE4,SAVE5,SAVE6,SAVE7                    
      ISAVE1 = IPARM                                                    
      ISAVE2 = IPH                                                      
      ISAVE3 = IDAY                                                     
      ISAVE4 = ISOURC                                                   
      SAVE1 = PARM1                                                     
      SAVE2 = PARM2                                                     
      SAVE3 = PARM3                                                     
      SAVE4 = PARM4                                                     
      SAVE5 = TIME                                                      
      SAVE6 = G                                                         
      SAVE7 = ANGLEM                                                    
      RETURN                                                            
      END                                                               
      FUNCTION   TAB(I1,J1,K1,WC)                                       
C********************************************************************** 
C                                                                       
C          THE INTERNAL DATA:                                           
C                                                                       
      DIMENSION A(9,6,9),ALPHA(9,6,9),A1(5),A2(5),ALPHA1(5),            
     *    MAXI(6,9)                                                     
C                                                                       
C          A(1,J,K),J=1,3 = POWER LAW COEFFICIENT FOR THE ABSORPTION    
C            COEFICIENT FOR THE MARSHALL-PALMER WATER DROP SIZE         
C            DISTRIBUTION FOR TEMPERATURE=10.*(J-2) AND FREQUENCY=FR(K) 
C          A(2,J,K),J=1,3 = THE SAME FOR THE EXTINCTION COEFFICIENT     
C          A(I,J,K),J=1,3,I=3,9 = THE SAME FOR THE LEGENDRE             
C                                      COEFFICIENT #I-2                 
C          A(I,4,K),I=1,9 = THE SAME AS A(I,2,K), BUT FOR ICE           
C                             (NO TEMPERATURE DEPENDENCE)               
C          A(I,5,K),I=1,9 = THE SAME AS A(I,2,K), BUT FOR THE BEST DROP 
C            SIZE DISTRIBUTION (NO TEMPRATURE DEPENDENCE)               
C          A(I,6,K),I=1,9 = THE SAME AS A(I,5,K), BUT FOR ICE           
C          ALPHA(I,J,K) = THE POWER EXPONENET CORRESPONDING TO A(I,J,K) 
C          MAXI(J,K): TAB(I,J,K,WC)=0. IF I.GT.MAXI(J,K)                
C          A1, A2 AND ALPHA1 = THE POWER-LINEAR LAW COEFFICIENTS AND    
C                 EXPONENT FOR THE EXCEPTIONAL CASES                    
C                                                                       
C          THE FORMULA:                                                 
C                                                                       
C          SC=A*WC**ALPHA IF ABS(A).GT.10.**-8,                         
C          SC=A1*WC**ALPHA1+A2*WC IF ABS(A).LE.10.**-8,                 
C                    A1, A2 AND ALPHA1 ARE INDEXED BY INT(ALPHA)        
C                                                                       
C          THE BLOCK-DATA SECTION                                       
C                                                                       
      DATA ((MAXI(J,K),J=1,6),K=1,9)/4*6,14*7,36*9/                     
      DATA (A1(I),A2(I),ALPHA1(I),I=1,5)/.611,-.807,1.18,.655,-.772,1.08
     * ,.958,-1.,.99,.538,-.696,1.27,1.58,-1.50,1.02/                   
      DATA ((A(I,J,1),J=1,6),I=1,7)/.284,.285,.294,.001336,.36,.00146,  
     *.363,.365,.375,.0148,.528,.0317,3*0.,.3147,0.,.438,               
     *.4908,.487,.482,.528,.478,.538,3*.0350,.0470,.0482,.0647,         
     *.002,.00205,.00208,.00285,.0037,.0048,4*0.,.00021,.00016/         
      DATA ((ALPHA(I,J,1),J=1,6),I=1,7)/1.214,1.233,1.25,1.035,1.22,    
     *1.076,1.291,1.31,1.323,1.63,1.334,1.74,3.1,2.1,1.1,5.005,4.1,.555,
     *-.009,-.013,-.016,.028,-.019,.031,.398,.399,.4,.473,.461,.525,    
     *1.06,.97,1.03,1.03,1.18,1.16,4*0.,1.3,1.3/                        
      DATA ((A(I,J,2),J=1,6),I=1,7)/.8,.77,.73,.00344,.76,.0043,        
     *1.28,1.27,1.24,.162,1.43,.332,.254,.172,0.,.93,.32,1.29,          
     *.5,.486,.4706,.69,.481,.8,.0965,.0936,.09,.159,.151,.234,         
     *.0234,.0228,.0221,.034,.057,.065,2*.0037,.0035,.005,.011,.0106/   
      DATA ((ALPHA(I,J,2),J=1,6),I=1,7)/2*1.1,1.09,1.13,1.02,1.19,      
     *2*1.20,1.15,1.66,1.14,1.7,.29,.42,5.1,.39,.66,.44,                
     *0.,-.01,-.0199,.12,-.01,.17,.386,.378,.2,.48,.485,.56,            
     *.92,.91,.90,.97,1.15,1.13,1.32,1.26,1.32,1.41,1.69,1.67/          
      DATA ((A(I,J,3),J=1,6),I=1,7)/1.11,1.07,1.02,.0059,.92,.00775,    
     *1.88,1.89,1.87,.43,1.80,.77,.512,.425,.336,1.25,.677,1.55,        
     *.561,.534,.506,.867,.6,1.07,.175,.165,.156,.300,.292,.49,         
     *.066,.064,.061,.105,.16,.22,                                      
     *.0169,.0162,.0156,.023,.055,.056/                                 
      DATA ((ALPHA(I,J,3),J=1,6),I=1,7)/2*1.01,1.,1.18,.92,1.23,        
     *3*1.1,1.58,1.,1.57,.264,.320,.445,.27,.416,.27,                   
     *.048,.033,.018,.168,.09,.224,.429,.417,.402,.501,.528,.62,        
     *2*.83,.82,.9,1.01,1.11,1.22,1.21,1.2,1.23,1.51,1.53/              
      DATA ((A(I,J,4),J=1,6),I=1,9)/1.51,1.49,1.44,.0163,1.12,.0194,    
     *2.73,2.77,2.79,1.61,2.18,1.9,1.14,1.054,.961,1.57,1.36,1.66,      
     *.99,.93,.87,1.31,1.33,1.63,.594,.557,.516,.77,1.02,1.16,          
     *.352,.334,.315,.43,.73,.8,.171,.163,.154,.18,.47,.43,             
     *.084,.081,.077,.106,.29,.32,.037,.036,.034,.029,.16,.11/          
      DATA ((ALPHA(I,J,4),J=1,6),I=1,9)/.87,.86,.85,1.181,.79,1.16,     
     *.93,.92,.91,1.3,.84,1.18,.188,.21,.24,.09,.21,.06,                
     *2*.2,.19,.175,.275,.2,2*.461,.459,.39,.51,.41,                    
     *2*.66,.65,.58,.70,.64,2*.94,.93,.84,1.03,1.01,                    
     *3*1.22,1.09,1.37,1.4,1.58,1.56,1.54,1.5,1.8,1.9/                  
      DATA ((A(I,J,5),J=1,6),I=1,9)/1.55,1.53,1.49,.0194,1.14,.0225,    
     *2.82,2.87,2.90,1.91,2.22,2.,1.266,1.184,1.093,1.60,1.48,1.65,     
     *1.13,1.07,1.,1.4,1.51,1.69,.74,.698,.649,.87,1.24,1.23,           
     *.465,.444,.418,.52,.94,.91,.248,.238,.225,.24,.65,.53,            
     *.132,.128,.122,.15,.43,.47,.065,.063,.06,.045,.26,.16/            
      DATA ((ALPHA(I,J,5),J=1,6),I=1,9)/.85,.84,.83,1.168,.78,1.15,     
     *.9,.89,.88,1.23,.82,1.11,.172,.191,.216,.071,.181,.04,            
     *.222,.221,.22,.165,.274,.17,.452,.454,.456,.35,.48,.33,           
     *.63,.68,.63,.52,.66,.55,3*.89,.76,.94,.86,                        
     *1.14,1.13,1.12,.96,1.24,1.1,1.44,1.41,1.43,1.31,1.6,1.6/          
      DATA ((A(I,J,6),J=1,6),I=1,9)/2*1.58,1.54,.0248,1.15,.0279,       
     *2.94,2.97,3.,2.34,2.25,2.2,1.447,1.374,1.288,1.62,1.64,1.63,      
     *1.37,1.31,1.234,1.52,1.8,1.77,1.,.96,.898,1.01,1.6,1.3,           
     *.68,.66,.62,.66,1.31,1.07,.41,.4,.38,.33,.99,.66,                 
     *.25,.24,.23,.23,.71,.56,.136,.133,.127,.081,.49,.26/              
      DATA ((ALPHA(I,J,6),J=1,6),I=1,9)/.83,.81,.8,1.145,.762,1.120,    
     *.87,.86,.85,1.14,.799,1.,.149,.165,.184,.046,.148,.014,           
     *.232,.236,.238,.146,.255,.13,.428,.433,.438,.28,.44,.23,          
     *3*.59,.44,.59,.43,3*.81,.64,.83,.66,                              
     *1.02,2*1.01,.81,1.06,.89,2*1.25,1.24,1.07,1.36,1.3/               
      DATA ((A(I,J,7),J=1,6),I=1,9)/1.60,1.59,1.56,.0285,1.16,.0314,    
     *2.98,3.02,3.05,2.6,2.26,2.3,1.546,1.481,1.4,1.63,1.72,1.62,       
     *1.52,1.464,1.388,1.58,1.97,1.8,1.18,1.13,1.07,1.08,1.82,1.33,     
     *.84,.82,.78,.75,1.55,1.16,.54,.53,.5,.4,1.22,.74,                 
     *.34,.33,.32,.3,.93,.67,2*.2,.19,.112,.67,.33/                     
      DATA ((ALPHA(I,J,7),J=1,6),I=1,9)/.81,.80,.788,1.132,.753,1.105,  
     *.85,.84,.83,1.09,.788,.95,.136,.153,.167,.033,.131,.004,          
     *.232,.236,.241,.133,.24,.11,.411,.416,.422,.25,.40,.19,           
     *3*.56,.4,.55,.38,2*.77,.76,.58,.76,.56,                           
     *3*.95,.74,.97,.78,1.17,2*1.16,.98,1.23,1.11/                      
      DATA ((A(I,J,8),J=1,6),I=1,9)/2*1.60,1.58,.045,1.15,.0461,        
     *3.08,3.09,3.1,3.3,2.27,2.32,1.849,1.81,1.75,1.628,1.98,1.606,     
     *2.07,2.04,1.98,1.78,2.5,1.946,1.89,1.86,1.81,1.30,2.6,1.508,      
     *1.58,1.56,1.52,1.11,2.49,1.57,1.22,1.21,1.18,.68,2.2,1.11,        
     *2*.91,.89,.61,2.,1.18,2*.65,.64,.299,1.6,.73/                     
      DATA ((ALPHA(I,J,8),J=1,6),I=1,9)/.777,.764,.752,1.092,.729,1.057,
     *.796,.79,.784,.96,.756,.81,.1,.108,.117,.004,.089,-.006,          
     *.207,.210,.215,.093,.182,.075,2*.34,.35,.15,.30,.122,             
     *3*.46,.3,.41,.28,3*.61,.42,.55,.394,                              
     *3*.75,.56,.7,.55,2*.91,.9,.76,.87,.79/                            
      DATA ((A(I,J,9),J=1,6),I=1,9)/2*1.58,1.56,.0587,1.13,.0579,       
     *3.09,2*3.08,3.39,2.26,2.33,2.009,1.99,1.95,1.624,2.11,1.64,       
     *2.43,2.42,2.38,1.902,2.80,2.078,2*2.42,2.38,1.454,3.09,1.7,       
     *2*2.2,2.17,1.4,3.1,1.91,1.87,1.88,1.85,.94,3.,1.46,               
     *2*1.54,1.52,.93,2.8,1.64,2*1.22,1.21,.53,2.5,1.17/                
      DATA ((ALPHA(I,J,9),J=1,6),I=1,9)/.757,.746,.736,1.06,.717,1.024, 
     *.766,.764,.761,.86,.74,.763,.084,.087,.092,-.0018,.069,.007,      
     *.183,.182,.184,.078,.148,.075,3*.29,.128,.24,.13,                 
     *.4,2*.39,.264,.33,.256,2*.52,.51,.367,.44,.360,                   
     *2*.63,.62,.49,.55,.47,.76,2*.75,.67,.67,.66/                      
      I = I1                                                            
      J = J1                                                            
      K = K1                                                            
C                                                                       
C                                                                       
      IF(I.GT.MAXI(J,K)) THEN                                           
      TAB=0.                                                            
      RETURN                                                            
      END IF                                                            
      IF(ABS(A(I,J,K)).GT.1.E-8) THEN                                   
      TAB=A(I,J,K)*WC**ALPHA(I,J,K)                                     
      ELSE                                                              
      L=ALPHA(I,J,K)                                                    
      TAB=A1(L)*WC**ALPHA1(L)+A2(L)*WC                                  
      END IF                                                            
      RETURN                                                            
      END                                                               
      DOUBLE PRECISION FUNCTION TANHT(CPATH,H1)                         
C                                                                       
C     THIS ROUTINE FINDS THE TANGENT HEIGHT GIVEN                       
C     CPATH (THE PATH CONSTANT). SEE ATMOSPHERIC                        
C     TRANSMITTANCE/RADIANCE:  LOWTRAN 6, AFGL-TR-83-018                
C                                                                       
C     INCLUDE PARAMETERS                                                
      INCLUDE 'PARAM.LST'                                               
C                                                                       
C     LIST COMMONS                                                      
      REAL RE,ZMAX                                                      
      INTEGER IPATH                                                     
      COMMON/PARMTR/RE,ZMAX,IPATH                                       
      REAL ZM,PM,TM,RFNDX,DENSTY                                        
      COMMON/MODEL/ZM(LAYDIM),PM(LAYDIM),TM(LAYDIM),                    
     1  RFNDX(LAYDIM),DENSTY(KMAX,LAYDIM)                               
      INTEGER IKMAX,ML,ISSGEO,IMULT                                     
      COMMON/CNTRL/IKMAX,ML,ISSGEO,IMULT                                
      REAL GNDALT                                                       
      COMMON/GRAUND/GNDALT                                              
C                                                                       
C     DECLARE LOCAL VARIABLES                                           
      INTEGER J,JMAX                                                    
      DOUBLE PRECISION CPATH,H1,X,RX,RATIO,X1,X2                        
C                                                                       
C     DECLARE LOCAL ARRAYS                                              
      DOUBLE PRECISION CP(LAYDIM),R(LAYDIM)                             
C                                                                       
C     DECLARE FUNCTIONS                                                 
      DOUBLE PRECISION RTBIS                                            
      DO 10 J=1,ML                                                      
          R(J)=DBLE(RE+ZM(J))                                           
          X=DBLE(ZM(J))                                                 
          CALL IRFXN(X,RX,RATIO)                                        
          CP(J)=R(J)*RX                                                 
          JMAX=J+1                                                      
          IF(H1.LE.DBLE(ZM(J)))GOTO20                                   
   10 CONTINUE                                                          
   20 CONTINUE                                                          
      DO 30 J=JMAX,2,-1                                                 
          IF(CPATH.LE.CP(J) .AND. CPATH.GE.CP(J-1))THEN                 
              X1=DBLE(ZM(J-1))                                          
              X2=DBLE(ZM(J))                                            
              TANHT=RTBIS(X1,X2,CPATH)                                  
              RETURN                                                    
          ENDIF                                                         
   30 CONTINUE                                                          
      TANHT=DBLE(GNDALT)                                                
      RETURN                                                            
      END                                                               
      SUBROUTINE  TERPEV( CWT, EVECC, GL, GU, MAZIM, MXCMU, MXUMU,      
     $                    NN, NSTR, NUMU, WK, YLMC, YLMU )              
                                                                        
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
C         INTERPOLATE EIGENVECTORS TO USER ANGLES; EQ SD(8)             
                                                                        
      REAL*8  CWT(*), EVECC( MXCMU,* ), GL(0:*), GU(  MXUMU,* ), WK(*), 
     $      YLMC(  0:MXCMU,* ), YLMU(  0:MXCMU,* )                      
                                                                        
                                                                        
      DO 50  IQ = 1, NSTR                                               
                                                                        
         DO 20  L = MAZIM, NSTR-1                                       
C                                       ** INNER SUM IN SD(8) TIMES ALL 
C                                   ** FACTORS IN OUTER SUM BUT PLM(MU) 
            SUM = 0.0                                                   
            DO 10  JQ = 1, NSTR                                         
               SUM = SUM + CWT(JQ) * YLMC(L,JQ) * EVECC(JQ,IQ)          
10          CONTINUE                                                    
            WK(L+1) = 0.5 * GL(L) * SUM                                 
20       CONTINUE                                                       
C                                    ** FINISH OUTER SUM IN SD(8)       
C                                    ** AND STORE EIGENVECTORS          
         DO 40  IU = 1, NUMU                                            
            SUM = 0.                                                    
            DO 30  L = MAZIM, NSTR-1                                    
               SUM = SUM + WK(L+1) * YLMU(L,IU)                         
30          CONTINUE                                                    
            IF ( IQ.LE.NN )  GU( IU, IQ+NN     ) = SUM                  
            IF ( IQ.GT.NN )  GU( IU, NSTR+1-IQ ) = SUM                  
40       CONTINUE                                                       
                                                                        
50    CONTINUE                                                          
                                                                        
      RETURN                                                            
      END                                                               
      SUBROUTINE  TERPSO( CWT, DELM0, FBEAM, GL, MAZIM, MXCMU,          
     $                      PLANK, NUMU, NSTR, OPRIM, PI, YLM0, YLMC,   
     $                      YLMU, PSIX, XR0, XR1, Z0, ZJ, ZBEAM, Z0U,   
     $                      Z1U, Z0UMS, Z1UMS, BEAMMS )                 
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
C       LOWER CASE VARIABLES ADDED                                      
                                                                        
C         INTERPOLATES SOURCE FUNCTIONS TO USER ANGLES                  
                                                                        
C    I N P U T      V A R I A B L E S:                                  
                                                                        
C       CWT    :  WEIGHTS FOR GAUSS QUADRATURE OVER ANGLE COSINE        
C       DELM0  :  KRONECKER DELTA, DELTA-SUB-M0                         
C       GL     :  DELTA-M SCALED LEGENDRE COEFFICIENTS OF PHASE FUNCTION
C                    (INCLUDING FACTORS 2L+1 AND SINGLE-SCATTER ALBEDO) 
C       MAZIM  :  ORDER OF AZIMUTHAL COMPONENT                          
C       OPRIM  :  SINGLE SCATTERING ALBEDO                              
C       XR0    :  EXPANSION OF THERMAL SOURCE FUNCTION                  
C       XR1    :  EXPANSION OF THERMAL SOURCE FUNCTION EQS.SS(14-16)    
C       YLM0   :  NORMALIZED ASSOCIATED LEGENDRE POLYNOMIAL             
C                 AT THE BEAM ANGLE                                     
C       YLMC   :  NORMALIZED ASSOCIATED LEGENDRE POLYNOMIAL             
C                 AT THE QUADRATURE ANGLES                              
C       YLMU   :  NORMALIZED ASSOCIATED LEGENDRE POLYNOMIAL             
C                 AT THE USER ANGLES                                    
C       Z0     :  SOLUTION VECTORS Z-SUB-ZERO OF EQ. SS(16)             
C       ZJ     :  SOLUTION VECTOR CAPITAL -Z-SUB-ZERO AFTER SOLVING     
C                 EQ. SS(19)                                            
C       (REMAINDER ARE 'DISORT' INPUT VARIABLES)                        
                                                                        
C    O U T P U T     V A R I A B L E S:                                 
                                                                        
C       ZBEAM  :  INCIDENT-BEAM SOURCE FUNCTION AT USER ANGLES          
C       Z0U,Z1U:  COMPONENTS OF A LINEAR-IN-OPTICAL-DEPTH-DEPENDENT     
C                    SOURCE (APPROXIMATING THE PLANCK EMISSION SOURCE)  
                                                                        
C   I N T E R N A L       V A R I A B L E S:                            
                                                                        
C       PSIX    :  SUM JUST AFTER SQUARE BRACKET IN  EQ. SD(9)          
C+---------------------------------------------------------------------+
      LOGICAL  PLANK                                                    
      REAL*8   CWT(*), GL(0:*), PSIX(*),  YLM0(0:*), YLMC( 0:MXCMU,* ), 
     $         YLMU( 0:MXCMU,*), Z0(*), ZJ(*), ZBEAM(*), Z0U(*),        
     $         Z1U(*), BEAMMS(*), Z1UMS(*), Z0UMS(*), SUM1              
C              LOWER CASE VARIABLES ADDED                               
                                                                        
                                                                        
      IF ( FBEAM.GT.0.0 )  THEN                                         
C                                  ** BEAM SOURCE TERMS; EQ. SD(9)      
         DO 20  IQ = MAZIM, NSTR-1                                      
            PSUM = 0.                                                   
            DO 10  JQ = 1, NSTR                                         
               PSUM = PSUM + CWT(JQ) * YLMC(IQ,JQ) * ZJ(JQ)             
10          CONTINUE                                                    
            PSIX(IQ+1) = 0.5 * GL(IQ) * PSUM                            
20       CONTINUE                                                       
                                                                        
         FACT = ( 2. - DELM0 ) * FBEAM / (4.0*PI)                       
         DO 40  IU = 1, NUMU                                            
            SUM = 0.                                                    
C             LOWER CASE VARIABLES ADDED                                
              SUM1= 0.                                                  
            DO 30 IQ = MAZIM, NSTR-1                                    
               SUM = SUM + YLMU(IQ,IU) *                                
     $                    ( PSIX(IQ+1) + FACT * GL(IQ) * YLM0(IQ) )     
C                LOWER CASE VARIABLES ADDED                             
                 SUM1 = SUM1 + YLMU(IQ,IU) * ( PSIX(IQ+1) )             
30            CONTINUE                                                  
            ZBEAM(IU) = SUM                                             
C             LOWER CASE VARIABLES ADDED                                
              BEAMMS(IU)=SUM1                                           
40         CONTINUE                                                     
      END IF                                                            
                                                                        
      IF ( PLANK .AND. MAZIM.EQ.0 )  THEN                               
                                                                        
C                                ** THERMAL SOURCE TERMS, STWJ(27C)     
         DO 80  IQ = MAZIM, NSTR-1                                      
            PSUM = 0.0                                                  
            DO 70  JQ = 1, NSTR                                         
               PSUM = PSUM + CWT(JQ) * YLMC(IQ,JQ) * Z0(JQ)             
 70           CONTINUE                                                  
            PSIX(IQ+1) = 0.5 * GL(IQ) * PSUM                            
 80        CONTINUE                                                     
                                                                        
         DO 100  IU = 1, NUMU                                           
            SUM = 0.0                                                   
            DO 90   IQ = MAZIM, NSTR-1                                  
               SUM = SUM + YLMU(IQ,IU) * PSIX(IQ+1)                     
90            CONTINUE                                                  
C             LOWER CASE VARIABLES ADDED                                
              Z0UMS(IU)=SUM                                             
              Z1UMS(IU)=OPRIM*XR1                                       
            Z0U(IU) = SUM + (1.-OPRIM) * XR0                            
            Z1U(IU) = XR1                                               
100        CONTINUE                                                     
                                                                        
      END IF                                                            
                                                                        
      RETURN                                                            
      END                                                               
      BLOCK DATA TITLE                                                  
C>    BLOCK DATA                                                        
C     TITLE INFORMATION                                                 
      CHARACTER*4  HHAZE      ,HSEASN     ,HVULCN     ,BLANK,           
     X            HMET        ,HMODEL     ,HTRRAD                       
      COMMON /TITL/ HHAZE(5,16),HSEASN(5,2),HVULCN(5,8),BLANK,          
     X HMET(5,2),HMODEL(5,8),HTRRAD(6,4)                                
      COMMON /VSBD/ VSB(10)                                             
      DATA VSB /23.,5.,0.,23.,5.,50.,23.,0.2,0.5,0./                    
      DATA BLANK/'    '/                                                
      DATA HHAZE /                                                      
     1 'RURA','L   ','    ','    ','    ',                              
     2 'RURA','L   ','    ','    ','    ',                              
     3 'NAVY',' MAR','ITIM','E   ','    ',                              
     4 'MARI','TIME','    ','    ','    ',                              
     5 'URBA','N   ','    ','    ','    ',                              
     6 'TROP','OSPH','ERIC','    ','    ',                              
     7 'USER',' DEF','INED','    ','    ',                              
     8 'FOG1',' (AD','VECT','TION',')   ',                              
     9 'FOG2','(RAD','IATI','0N) ','    ',                              
     X 'DESE','RT A','EROS','OL  ','    ',                              
     A 'BACK','GROU','ND S','TRAT','O   ',                              
     B 'AGED',' VOL','CANI','C   ','    ',                              
     C 'FRES','H VO','LCAN','IC  ','    ',                              
     D 'AGED',' VOL','CANI','C   ','    ',                              
     E 'FRES','H VO','LCAN','IC  ','    ',                              
     F 'METE','ORIC',' DUS','T   ','    '/                              
      DATA HSEASN /                                                     
     1 'SPRI','NG-S','UMME','R   ','    ',                              
     2 'FALL','-WIN','TER ','    ','    ' /                             
      DATA HVULCN /                                                     
     1 'BACK','GROU','ND S','TRAT','O   ',                              
     2 'MODE','RATE',' VOL','CANI','C   ',                              
     3 'HIGH','    ',' VOL','CANI','C   ',                              
     4 'HIGH','    ',' VOL','CANI','C   ',                              
     5 'MODE','RATE',' VOL','CANI','C   ',                              
     6 'MODE','RATE',' VOL','CANI','C   ',                              
     7 'HIGH','    ',' VOL','CANI','C   ',                              
     8 'EXTR','EME ',' VOL','CANI','C   '/                              
      DATA HMET/                                                        
     1 'NORM','AL  ','    ','    ','    ',                              
     2 'TRAN','SITI','ON  ','    ','    '/                              
      DATA HMODEL /                                                     
     1 'TROP','ICAL',' MOD','EL  ','    ',                              
     2 'MIDL','ATIT','UDE ','SUMM','ER  ',                              
     3 'MIDL','ATIT','UDE ','WINT','ER  ',                              
     4 'SUBA','RCTI','C   ','SUMM','ER  ',                              
     5 'SUBA','RCTI','C   ','WINT','ER  ',                              
     6 '1976',' U S',' STA','NDAR','D   ',                              
     7 '   ','    ','    ','    ','    ',                               
     8 'MODE','L =0','HORI','ZONT','AL  '/                              
      DATA HTRRAD/                                                      
     1 'TRAN','SMIT','TANC','E   ','    ','    ',                       
     2 'RADI','ANCE','    ','    ','    ','    ',                       
     3 'RADI','ANCE','+SOL','AR S','CATT','ERNG',                       
     4 'TRAN','SMIT','TED ','SOLA','R IR','RAD.'/                       
      END                                                               
      FUNCTION TNRAIN(RR,V,TM,RADFLD)                                   
C                                                                       
C       PI       THE CONSTANT PI                                        
C       DEG      NUMBER OF DEGREES IN ONE RADIAN.                       
C       BIGNUM   MAXIMUM SINGLE PRECISION NUMBER.                       
C       BIGEXP   MAXIMUM EXPONENTIAL ARGUMENT WITHOUT OVERFLOW.         
      REAL PI,DEG,BIGNUM,BIGEXP                                         
      COMMON/CNSTNS/PI,DEG,BIGNUM,BIGEXP                                
CCC   CALCULATES TRANSMISSION DUE TO RAIN AS A FUNCTION OF              
CCC   RR=RAIN RATE IN MM/HR                                             
CCC   OR WITHIN 350CM-1 USES THE MICROWAVE TABLE ROUTINE TO             
CCC   OBTAIN THE EXTINCTION DUE TO RAIN                                 
CCC   RANGE=SLANT RANGE KM                                              
CCC                                                                     
CCC   ASSUMES A MARSHALL-PALMER RAIN DROP SIZE DISTRIBUTION             
CCC   N(D)=NZERO*EXP(-A*D)                                              
CCC   NZERO=8.E3 (MM-1)  (M-3)                                          
CCC   A=41.*RR**(-0.21)                                                 
CCC   D=DROP DIAMETER (CM)                                              
CCC                                                                     
      REAL NZERO                                                        
      DATA NZERO /8000./                                                
CCC                                                                     
      A=41./RR**0.21                                                    
CCC                                                                     
      IF(RR.LE.0)TNRAIN=1.                                              
      IF(RR.LE.0)RETURN                                                 
CCC                                                                     
      IF(V.GE.350.0) THEN                                               
       TNRAIN=PI*NZERO/A**3                                             
      ELSE                                                              
       TNRAIN=GMRAIN(V,TM,RR)                                           
       TNRAIN = TNRAIN * RADFLD                                         
      END IF                                                            
      RETURN                                                            
      END                                                               
      SUBROUTINE TRANS(DIS,NSTR,UANG,IPH,ISOURC,IDAY,ANGLEM,            
     1  GROUND,LSALB,IMSMX,KNTRVL,YFLAG,XFLAG,DLIMIT,IPLOT,             
     2  SPECALB,WAVELEN,TRANSMIT,PATHRAD,SKYRAD,IPJ)                    
Calley     1  GROUND,LSALB,IMSMX,KNTRVL,YFLAG,XFLAG,DLIMIT,IPLOT)       
C                                                                       
C     ROUTINE TRANS CALCULATES TRANSMITTANCE AND RADIANCE VALUES        
C     BETWEEN IV1 AND IV2 FOR A GIVEN ATMOSPHERIC SLANT PATH.           
C                                                                       
C     DECLARE ARGUMENTS                                                 
C       YFLAG    Y COORDINATE FLAG FOR plot.dat FILE                    
C                  = "T" FOR TRANSMITTANCE                              
C                  = "R" FOR RADIANCE (IRRADIANCE FOR IEMSCT=3)         
C                  = "N" FOR NO plot.dat OUTPUT                         
C       XFLAG    X COORDINATE FLAG FOR plot.dat FILE                    
C                  = "W" FOR FREQUENCY IN WAVENUMBERS (CM-1) AND        
C                        RADIANCE IN W SR-1 CM-2 / CM-1                 
C                  = "M" FOR WAVELENGTH IN MICRONS AND                  
C                        RADIANCE IN W SR-1 CM-2 / MICRON               
C                  = "N" FOR WAVELENGTH IN MICRONS AND                  
C                        RADIANCE IN MICRO-WATTS SR-1 CM-2 / NANOMETER  
C       DLIMIT   DELIMITER CHARACTER STRING BETWEEN MODTRAN RUNS        
C       IPLOT    UNIT NUMBER FOR plot.dat FILE.                         
      LOGICAL DIS,GROUND                                                
      INTEGER NSTR,IPH,ISOURC,IDAY,LSALB,IMSMX,KNTRVL,IPLOT             
      DOUBLE PRECISION UANG                                             
      REAL ANGLEM                                                       
      REAL SPECALB(50000),WAVELEN(*),TRANSMIT(*),PATHRAD(*),SKYRAD(*)   
      CHARACTER YFLAG*1,XFLAG*1,DLIMIT*8                                
C                                                                       
C     LIST PARAMETERS                                                   
      INCLUDE 'PARAM.LST'                                               
      INTEGER NBINS,IPRINT,MAXV                                         
      PARAMETER(NBINS=99,IPRINT=50,MAXV=50000)                          
C                                                                       
C     INCREASE FIRST DIMENSION IN SLIT TO KMAX TO INSURE THAT ALL       
C     TRANSMITTANCES (TX ARRAY) ARE PASSED THROUGH THE SLIT FUNCTION.   
      REAL WGT(NBINS),SLIT(KMAX,NBINS)                                  
C                                                                       
C     CONVENTION                                                        
C     MMOLX = MAXIMUM NUMBER OF NEW SPECIES (IDENTIFIED BY "X")         
C                                                                       
C     THE ACTUAL NUMBER OF PARAMETERS ARE:                              
C     NSPECX = ACTUAL NUMBER OF "X" SPECIES,     CAN'T EXCEED MMOLX     
C                                                                       
C     PARAMETER KMAX DENOTES THE NUMBER OF MODTRAN "SPECIES".           
C     THIS INCLUDES THE 12 ORIGINAL BAND MODEL PARAMETER MOLECULES      
C     PLUS A HOST OF OTHER ABSORPTION AND/OR SCATTERING SOURCES.        
C                                                                       
      CHARACTER*8 CNAMEX                                                
      COMMON/NAMEX/CNAMEX(MMOLX)                                        
      LOGICAL IVTEST,LOOP0,TRANSM                                       
      INTEGER KPOINT                                                    
      REAL WAVLEN,EXTC,ABSC,ASYM,AWCCON,TX,W,RELHUM,PATM,TBBY,WPATH     
      COMMON/BASE/WAVLEN(MXWVLN),EXTC(NAER,MXWVLN),ABSC(NAER,MXWVLN),   
     1  ASYM(NAER,MXWVLN),AWCCON(NAER),KPOINT(NSPC),TX(KMAX),W(KMAX),   
     2  RELHUM(LAYDIM),PATM(LAYTHR),TBBY(LAYTHR),WPATH(LAYTHR,KMAX)     
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH                               
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                           
      INTEGER MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT                     
      REAL TBOUND,SALB                                                  
      LOGICAL MODTRN                                                    
      COMMON/CARD1/MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB,   
     1  MODTRN                                                          
      INTEGER IV1,IV2,IDV,IFWHM                                         
      COMMON/CARD4/IV1,IV2,IDV,IFWHM                                    
C                                                                       
C       PI       THE CONSTANT PI                                        
C       DEG      NUMBER OF DEGREES IN ONE RADIAN.                       
C       BIGNUM   MAXIMUM SINGLE PRECISION NUMBER.                       
C       BIGEXP   MAXIMUM EXPONENTIAL ARGUMENT WITHOUT OVERFLOW.         
      REAL PI,DEG,BIGNUM,BIGEXP                                         
      COMMON/CNSTNS/PI,DEG,BIGNUM,BIGEXP                                
      INTEGER IKMAX,ML,ISSGEO,IMULT                                     
      COMMON/CNTRL/IKMAX,ML,ISSGEO,IMULT                                
      INTEGER JTURN,LJ                                                  
      REAL ATHETA,ADBETA,PHASFN,AH1,ARH,ANGSUN,TBBYS,PATMS,WPATHS       
      COMMON/SOLS/JTURN,LJ(LAYTWO+1),ATHETA(LAYDIM+1),                  
     1  ADBETA(LAYDIM+1),PHASFN(LAYTWO,4),AH1(LAYTWO),ARH(LAYTWO),      
     2  ANGSUN,TBBYS(LAYTHR,12),PATMS(LAYTHR,12),WPATHS(LAYTHR,KMAX)    
      INTEGER ICALL                                                     
      REAL FPHS,FALB,FORBIT                                             
      COMMON/ICLL/ICALL,FPHS,FALB,FORBIT                                
      LOGICAL LSAME                                                     
      COMMON/SOLAR/LSAME                                                
C                                                                       
C     DECLARE FUNCTIONS                                                 
      REAL BBFN,SOURCE                                                  
C                                                                       
C     DECLARE LOCAL VARIABLES                                           
      INTEGER I,J,IKMX,IDV5,IDVX,MXFREQ,IWIDM1,IV,IVX,IVXMAX,           
     1  IWRITE,IWIDTH,NWGT,NWGTM1,K,IP1,ICOUNT                          
      REAL YPLTMX,SALBS,RADMIN,RADMAX,EMISS,SUMA,RADSUM,SSOL,           
     1  BBG,SUMSSS,SUMSSR,RFLSS,RFSURF,S0,TS0,FACTOR,WNORM,             
     2  SUMTMS,SUMMS,UNIF,TRACE,TRANSX,SUMV,FRAC,V,CONVRT,STORE,        
     3  ALAM,ALTX9,SUMT,VRMAX,VRMIN,TSNOBS,TSNREF,FDNSRT,FDNTRT         
      CHARACTER*175 FRMT                                                
C                                                                       
C     INITIALIZE INDEX FOR THE 4 OUTPUT ARRAYS                          
      INDEX = 1                                                         
C                                                                       
C     INITIALIZE plot.dat FILE MAXIMUM.                                 
      YPLTMX=0.                                                         
C                                                                       
C     INITIALIZE SLIT FUNCTION ARRAY                                    
      SALBS=SALB                                                        
C                                                                       
C     INCREASE DIMENSION IN SLIT FUNCTION INITIALIZATION                
      DO 10 I=1,KMAX                                                    
          DO 10 J=1,NBINS                                               
   10 SLIT(I,J)=0.                                                      
C                                                                       
C     INITIALIZE RADIANCE MINIMUM AND MAXIMUM PARAMETERS                
      RADMIN=BIGNUM                                                     
      RADMAX=0.                                                         
C                                                                       
C     INITIALIZE GROUND EMISSIVITY (ONE MINUS GROUND ALBEDO)            
      EMISS=0.                                                          
      IF(SALB.GE.0. .AND. SALB.LE.1.)EMISS=1.-SALB                      
C                                                                       
C     STORE THE NUMBER OF PATH LAYERS IN IKMX                           
      IKMX=IKMAX                                                        
C                                                                       
C     INITIALIZE INTEGRATED ABSORPTION, RADIANCE, SOLAR IRRADIANCE SUMS.
      SUMA=0.                                                           
      RADSUM=0.                                                         
      SSOL=0.                                                           
C                                                                       
C     INITIALIZE RADIANCE/IRRADIANCE TERMS                              
      BBG=0.                                                            
      SUMSSS=0.                                                         
      SUMSSR=0.                                                         
      RFLSS=0.                                                          
      RFSURF=0.                                                         
      S0=0.                                                             
      TS0=0.                                                            
      TSNOBS=0.                                                         
      TSNREF=0.                                                         
C                                                                       
C     INITIALIZE INTEGRATION WEIGHTING FACTOR                           
      FACTOR=.5                                                         
C                                                                       
C     INITIALIZE ICOUNT, USED TO DETERMINE WHEN HEADER MUST BE PRINTED  
      ICOUNT=IPRINT                                                     
C                                                                       
C     DO NOT PERFORM A MODTRAN CALCULATION IF ALL SOURCES ARE CONTINUUM 
      IF(MODTRN.AND.IV1.LT.22680)THEN                                   
C                                                                       
C         WHEN THE BAND MODEL OR LINE-BY-LINE OPTION IS USED, CALL      
C         ROUTINE "BMDATA" TO INITIALIZE PARAMETERS AND TO SET THE      
C         FREQUENCY STEP SIZE "IDVX" TO THE BAND WIDTH (1 CM-1).        
          IDV5=5                                                        
          CALL BMDATA(IV1,IFWHM,IDVX,IKMX,MXFREQ,IMSMX)                 
          IWIDM1=IFWHM/IDVX-1                                           
          IV=5*((IV1-IWIDM1)/5)                                         
          IF(IV.LT.0)IV=0                                               
          IVX=IV-IDVX                                                   
          IV=IV-5                                                       
      ELSE                                                              
          IDV5=IDV                                                      
          IDVX=IDV5                                                     
          IWIDM1=0                                                      
          IV=IV1-IDV5                                                   
          IVX=IV                                                        
          IF(IDV.LT.5)IDV=5                                             
      ENDIF                                                             
      IVXMAX=IV2+IWIDM1                                                 
      IF(IVXMAX.GT.MAXV)IVXMAX=MAXV                                     
      IWRITE=IV1+IWIDM1                                                 
      IWIDTH=IWIDM1+1                                                   
C                                                                       
C     PERFORM TRIANGULAR SLIT INITIALIZATION.  TRANSMITTANCES AT A      
C     GIVEN FREQUENCY CONTRIBUTE TO 2*IWIDTH-1 TRIANGULAR SLITS.        
C     THESE CONTRIBUTIONS ARE STORED IN ARRAY SLIT.  WGT IS THE         
C     NORMALIZED WEIGHT USED TO DEFINE THE TRIANGLE.                    
      NWGT=2*IWIDTH                                                     
      WNORM=1./(IWIDTH*IWIDTH)                                          
      DO 20 I=1,IWIDTH                                                  
          WGT(I)=I*WNORM                                                
   20 WGT(NWGT-I)=WGT(I)                                                
      NWGT=NWGT-1                                                       
      NWGTM1=NWGT-1                                                     
C                                                                       
C     INITIALIZE ICALL (= 0 FOR INITIAL CALL TO ROUTINE SOURCE)         
      ICALL=0                                                           
C                                                                       
C     INITIALIZE TRANSM (.TRUE. FOR TRANSMITTANCE ONLY CALCULATIONS)    
      TRANSM=.TRUE.                                                     
      IF(IEMSCT.EQ.1 .OR. IEMSCT.EQ.2)TRANSM=.FALSE.                    
C                                                                       
C     PRINT HEADERS                                                     
      IF(IEMSCT.EQ.0)THEN                                               
Calley          WRITE(IPU,'((3A))')                                     
          IF (IPU .GT. 0) WRITE(IPU,'((3A))')                           
     1      '  FREQ TOTAL   H2O  CO2+    O3 TRACE    N2   H2O',         
     2            ' MOLEC   AER  HNO3 AERab  -LOG   CO2    CO',         
     3            '   CH4   N2O    O2   NH3    NO   NO2   SO2',         
     4      '  CM-1 TRANS TRANS TRANS TRANS TRANS  CONT  CONT',         
     5            '  SCAT TRANS TRANS TRANS TOTAL TRANS TRANS',         
     6            ' TRANS TRANS TRANS TRANS TRANS TRANS TRANS'          
          IF (IPJ .GT. 0) WRITE (IPJ,'((3A))')                          
     +       ' FREQ WAVELENGTH  TOTAL  H2O   CO2   CO    CH4 ',         
     +       '  N20   O2    O3    NH3   NO    NO2   SO2  HNO3 N2CON ',  
     +       'H2OCON MSCAT AERO  AERab CFCs'                            
      ELSEIF(IEMSCT.EQ.3)THEN                                           
Calley          WRITE(IPU,'(32H  FREQ   TRANS     SOL TR  SOLAR)')      
          IF (IPU .GT. 0) WRITE(IPU,                                    
     +                    '(32H  FREQ   TRANS     SOL TR  SOLAR)')      
          IF (IPJ .GT. 0) WRITE (IPJ,'(A,/,2A)')                        
     +       '  IRRADIANCE (WATTS/CM2-MICRON)',                         
     +       '    FREQ WAVELENGTH   TRANSMITTED         SOLAR    TRAN', 
     +       ' -ln(TRAN)'                                               
      ELSE                                                              
Calley     WRITE(IPU,'(3A)')'  FREQ   TOT TRANS  PTH THRML  THRML SCT', 
          IF (IPU .GT. 0) WRITE(IPU,                                    
     +               '(3A)')'  FREQ   TOT TRANS  PTH THRML  THRML SCT', 
     1      '  SURF EMIS   SOL SCAT  SING SCAT  GRND RFLT  DRCT RFLT',  
     2      '  TOTAL RAD  REF SOL  SOL@OBS   DEPTH'                     
          IF (IPJ .GT. 0) THEN                                          
              IF (IEMSCT .EQ. 1) THEN                                   
                  WRITE(IPJ,26)                                         
   26             FORMAT('  RADIANCE(WATTS/CM2-STER-MICRON)',/,         
     +                   '    FREQ WAVELENGTH  TRANSMIT PATH RADIANCE', 
     +                   '   TARGET EMIT   TARGET REFL  TOT RADIANCE',  
     +                   '    -ln(t)    ALBEDO   skyrad@grnd')          
              ELSE                                                      
                  WRITE(IPJ,28)                                         
   28             FORMAT('  RADIANCE(WATTS/CM2-STER-MICRON)',/,'  FRE', 
     +                 'Q WAVELENGTH  TRANS   REFL  PATH THRML TARGET', 
     +                   ' EMIT PATH SCATTR TARGET REFL TOT RADIANCE ', 
     +                   '-ln(t)  skyrad@grnd diffsol@grnd')            
              END IF                                                    
          END IF                                                        
      ENDIF                                                             
Calley      IF(NOPRNT.EQ.-1)THEN                                        
      IF(NOPRNT.EQ.-1 .AND. IPR1.GT.0) THEN                             
          IF(IMULT.NE.0)THEN                                            
              WRITE(IPR1,'((3A))')                                      
     1          '  FREQ     ALT        TOTAL    DELTA    THRML UP',     
     2          '    THRML DN   THRML SRC   THRML SUM    SOLAR UP',     
     3          '    SOLAR DN   SOLAR SRC   SOLAR SUM',                 
     4          ' (CM-1)   (KM)  BIN   TRANS    TRANS (          ',     
     5          '       W CM-2 / CM-1               ) (          ',     
     6          '       W CM-2 / CM-1               )'                  
          ELSEIF(IEMSCT.GT.0)THEN                                       
              WRITE(IPR1,'((1X,2A))')                                   
     1          '             ALTITUDES                 B(V,T)        ',
     2          '     TRANSMISSION            RADIANCE',                
     3          '  FREQ  BEGINNING  ENDING  INT   LAYER     BOUNDARY  ',
     4          ' TO BEGIN   IN LAYER    LAYER      TOTAL',             
     5          '(CM-1)    (KM)     (KM)         (W SR-1 CM-2 / CM-1) ',
     6          '                      (W SR-1 CM-2 / CM-1)'            
          ENDIF                                                         
      ENDIF                                                             
C                                                                       
C     INITIALIZE LAYER LOOP VARIABLES                                   
      LOOP0=.TRUE.                                                      
      CALL LOOP(LOOP0,IV,IVX,IKMX,MXFREQ,SUMTMS,SUMMS,TRANSM,           
     1  IPH,SUMSSS,IVTEST,UNIF,TRACE,TRANSX,SUMV,S0,FRAC,UANG,          
     2  DIS,NSTR,GROUND,TSNOBS,TSNREF,FDNTRT,FDNSRT,KNTRVL)             
      LOOP0=.FALSE.                                                     
C                                                                       
C         DETERMINE LAYER LOOP MAXIMUM                                  
          IF(TRANSM)THEN                                                
C                                                                       
C             FOR TRANSMISSION CALCULATIONS, SKIP OVER LAYER LOOP IN TRA
              IKMAX=1                                                   
          ELSEIF(IMULT.NE.0 .AND. .NOT. LSAME)THEN                      
C                                                                       
C             FOR MULTIPLE SCATTERING SET IKMAX TO IMSMX                
              IKMAX=IMSMX                                               
          ELSE                                                          
C                                                                       
C             IF NOT MULTIPLE SCATTERING, RESET IKMAX TO ORIGINAL VALUE 
              IKMAX=IKMX                                                
          ENDIF                                                         
C                                                                       
C     END INITIALIZATION, BEGIN OF FREQUENCY LOOP                       
C                                                                       
C     "IVX" IS THE FREQUENCY AT WHICH TRANSMITTANCE WILL BE CALCULATED. 
C     DURING THE FIRST PASS, "IVX" AND "IV" MUST BE EQUAL.              
   30 IVX=IVX+IDVX                                                      
          SALB = SPECALB(IVX)                                           
          IF(IV.LT.IVX)THEN                                             
              IV=IV+IDV5                                                
              IVTEST=.TRUE.                                             
          ELSE                                                          
              IVTEST=.FALSE.                                            
          ENDIF                                                         
C                                                                       
C         SET INTERPOLATION FRACTION.                                   
          FRAC=FLOAT(IV-IVX)/IDV5                                       
          IF(ICOUNT.EQ.IPRINT)THEN                                      
C                                                                       
C             REINITIALIZE COUNTER AND PRINT HEADER                     
              ICOUNT=0                                                  
              IF(IEMSCT.EQ.0)THEN                                       
Calley            WRITE(IPR,'(1H1,/33H   FREQ WAVELENGTH  TOTAL     H2O,
                  IF (IPR .GT. 0) WRITE(IPR,                            
     +              '(1H1,/33H   FREQ WAVELENGTH  TOTAL     H2O,        
     1              47H     CO2+     OZONE    TRACE  N2 CONT  H2O CONT, 
     2              47H MOL SCAT  AER-HYD  HNO3    AER-HYD  INTEGRATED, 
     3              /43H   1/CM  MICRONS    TRANS    TRANS    TRANS,    
     4              44H    TRANS    TRANS   TRANS    TRANS    TRANS,    
     5              40H     TRANS   TRANS   TAU-ABS  ABSORPTION,/)')    
C                 WRITE(IPR,111)'ALL MINOR SPECIES',                    
C    $                 (CNAMEX(KX),KX=1,11),                            
C    $                 (CNAMEX(KX),KX=12,MIN(22,NSPECX)),               
C    $                 (' ',KX=MIN(22,NSPECX)+1,22),                    
C    $                 ('TRANS',KX=1,12)                                
 111              FORMAT(8X,A,11(1X,A),/,25X,11(1X,A),                  
     $                 /,20X,A,8(4X,A),2(3X,A),4X,A/)                   
              ELSEIF(IEMSCT.EQ.1)THEN                                   
Calley                  WRITE(IPR,'(A,52X,A,3(/3A))')                   
                  IF (IPR .GT. 0) WRITE(IPR,'(A,52X,A,3(/3A))')         
     1              '1','RADIANCE(WATTS/CM2-STER-XXX)',                 
     2              '0  FREQ   WAVLEN   SURF      PATH THERMAL   ',     
     3              'SCAT PART    SURFACE EMISSION   SURFACE REFLECTED',
     4              '     TOTAL RADIANCE   INTEGRAL    TOTAL',          
     5              '  (CM-1) (MICRN) ALBEDO    (CM-1)   (MICRN) ',     
     6              '   (CM-1)    (CM-1)   (MICRN)    (CM-1)   (MICRN)',
     7              '    (CM-1)   (MICRN)    (CM-1)    TRANS'           
              ELSEIF(IEMSCT.EQ.3)THEN                                   
Calley              WRITE(IPR,'(1H1,22X,27HIRRADIANCE (WATTS/CM2-XXXX), 
                  IF (IPR .GT. 0) WRITE(IPR,                            
     +              '(1H1,22X,27HIRRADIANCE (WATTS/CM2-XXXX),           
     1              /7H0  FREQ,T11,6HWAVLEN,T23,11HTRANSMITTED,         
     2              T45,5HSOLAR,T61,10HINTEGRATED,T80,5HTOTAL,          
     3              /2X,6H(CM-1),T10,7H(MICRN),T20,6H(CM-1),            
     4              T30,7H(MICRN),T40,6H(CM-1),T50,7H(MICRN),           
     5              T60,6HTRANS.,T70,5HSOLAR,T80,5HTRANS)')             
              ELSEIF(IMULT.EQ.0)THEN                                    
Calley                  WRITE(IPR,'(A,45X,A,3(/3A))')                   
                  IF (IPR .GT. 0) WRITE(IPR,'(A,45X,A,3(/3A))')         
     1              '1','RADIANCE(WATTS/CM2-STER-XXX)',                 
     2              '0  FREQ   WAVLEN    PATH THERMAL     SURFACE ',    
     3              'EMISSION    SINGLE SCATTER    GROUND REFLECTED ',  
     4              '   TOTAL RADIANCE   INTEGRAL     TOTAL',           
     5              '  (CM-1) (MICRN)    (CM-1)  (MICRN)    (CM-1)',    
     6              '  (MICRN)    (CM-1)  (MICRN)    (CM-1)  (MICRN)',  
     7              '    (CM-1)  (MICRN)  (CM-1)      TRANS'            
              ELSEIF(DIS)THEN                                           
Calley                  WRITE(IPR,'(A,45X,A,/4(/3A))')                  
                  IF (IPR .GT. 0) WRITE(IPR,'(A,45X,A,/4(/3A))')        
     1              '1','RADIANCE(WATTS/CM2-STER-XXX)',                 
     2              '0 FREQ   WAVLEN   PATH THERMAL    SURFACE   ',     
     3              '   PATH SCATTERED SOLAR   GROUND REFLECTED ',      
     4              'RADIANCE   TOTAL RADIANCE   INTEGRAL    TOTAL',    
     5              '                                  EMISSION  ',     
     6              '   TOTAL RAD      SINGLE        TOTAL      ',      
     7              '  DIRECT                                TRANS',    
     8              ' (CM-1) (MICRN)   (CM-1)  (MICRN)   (CM-1)  ',     
     9              ' (CM-1)  (MICRN)   (CM-1)   (CM-1)  (MICRN)',      
     &              '   (CM-1)   (CM-1)  (MICRN)   (CM-1)'              
              ELSE                                                      
Calley                  WRITE(IPR,'(A,52X,A,/4(/3A))')                  
                  IF (IPR .GT. 0) WRITE(IPR,'(A,52X,A,/4(/3A))')        
     1              '1','RADIANCE(WATTS/CM2-STER-XXX)',                 
     2              '0 FREQ   WAVLEN   SURF          PATH THERMAL     ',
     3              ' SURFACE   PATH SCAT SOLAR   GROUND REFLECTED',    
     4              '     TOTAL RADIANCE   INTEGRAL   TOTAL',           
     5              '                ALBEDO       TOTAL      SCATTERED',
     6              ' EMISSION    TOTAL   SINGLE    TOTAL   DIRECT',    
     7              '                                 TRANS',           
     8              ' (CM-1) (MICRN)          (CM-1)  (MICRN)   (CM-1)',
     9              '   (CM-1)   (CM-1)   (CM-1)   (CM-1)   (CM-1)',    
     &              '    (CM-1)   (MICRN)   (CM-1)'                     
              ENDIF                                                     
          ENDIF                                                         
C                                                                       
C         DETERMINE LAYER LOOP MAXIMUM                                  
          IF(TRANSM)THEN                                                
C                                                                       
C             LAYER LOOP IS SKIPPED FOR TRANSMISSION CALCULATIONS.      
              IKMAX=1                                                   
          ELSE                                                          
Calley              IF(SALBS.LT.0)CALL RHOEPS(IVX,LSALB,SALB,EMISS)     
              IF(IMULT.NE.0 .AND. .NOT.LSAME)THEN                       
C                                                                       
C                 FOR MULTIPLE SCATTERING SET IKMAX TO IMSMX.           
                  IKMAX=IMSMX                                           
              ELSE                                                      
C                                                                       
C                 IF NOT MULTIPLE SCATTERING, RESET IKMAX TO IKMX.      
                  IKMAX=IKMX                                            
              ENDIF                                                     
          ENDIF                                                         
          SUMV=0.                                                       
C                                                                       
C         INITIALIZE TRANSMISSION ARRAY                                 
          TX(1)=1.                                                      
          TX(2)=1.                                                      
          TX(3)=1.                                                      
          DO 40 K=4,KMAX                                                
   40     TX(K)=0.                                                      
C                                                                       
C         EXTRA-TERRESTRIAL SOLAR IRRADIANCE                            
          IF(IEMSCT.GE.2)S0=SOURCE(IVX,ISOURC,IDAY,ANGLEM)              
C                                                                       
C         CALL LAYER LOOP ROUTINE                                       
          CALL LOOP(LOOP0,IV,IVX,IKMX,MXFREQ,SUMTMS,SUMMS,TRANSM,       
     1      IPH,SUMSSS,IVTEST,UNIF,TRACE,TRANSX,SUMV,S0,FRAC,UANG,      
     2      DIS,NSTR,GROUND,TSNOBS,TSNREF,FDNTRT,FDNSRT,KNTRVL)         
          IF(IEMSCT.NE.0)THEN                                           
              IF(IEMSCT.EQ.3)THEN                                       
C                                                                       
C                 TRANSMITTED SOLAR IRRADIANCE                          
                  TS0=TX(9)*S0                                          
              ELSE                                                      
                  V=IVX                                                 
                  IF(IVX.EQ.0)V=.5*IDVX                                 
C                                                                       
C                 THERMAL BOUNDARY EMISSION                             
                  IF(TBOUND.GT.0.)BBG=BBFN(TBOUND,V)*TX(9)*(1.-SALB)    
C                                                                       
C                 SURFACE REFLECTED THERMAL SCATTERED RADIANCE          
                  RFSURF=0.                                             
Calley                  IF(IMULT.NE.0 .AND. GROUND)RFSURF=FDNTRT        
                  IF(IMULT.NE.0 .AND. GROUND)RFSURF=FDNTRT*SALB/PI      
                  IF(IEMSCT.EQ.2)THEN                                   
C                                                                       
C                     SINGLE SCATTER SOLAR RADIANCE                     
                      SUMSSS=SUMSSS                                     
C                                                                       
C                     SINGLE + MULTIPLE SOLAR SCATTERED RADIANCE        
                      SUMSSR=SUMSSS+SUMMS                               
C                                                                       
C                     SURFACE REFLECTED SOLAR SCATTER RADIANCES         
                      RFLSS=0.                                          
                      IF(GROUND)THEN                                    
C                                                                       
C                         DIRECT TERM                                   
                          IF(TSNREF.GT.0.)                              
     1                      RFLSS=TSNREF*SALB*COS(ANGSUN/DEG)/PI        
C                                                                       
C                         SOLAR + THERMAL SURFACE REFLECTED RADIANCE    
                          RFSURF=RFSURF+RFLSS                           
Calley                          IF(IMULT.NE.0)RFSURF=RFSURF+FDNSRT      
                          IF(IMULT.NE.0)RFSURF=RFSURF+FDNSRT*SALB/PI    
                      ENDIF                                             
                  ENDIF                                                 
              ENDIF                                                     
          ENDIF                                                         
C                                                                       
C         TRANSMITTANCES, IRRADIANCES [W CM-2 / CM-1], AND RADIANCES    
C         [W SR-1 CM-2 / CM-1] ARE TEMPORARILY STORED IN "TX" SO THAT   
C         THEIR CONVOLUTION OVER THE TRIANGULAR SLIT CAN BE CALCULATED. 
          TX(1)=BBG                                                     
          TX(2)=UNIF                                                    
          TX(3)=TRACE                                                   
          TX(8)=SUMV                                                    
          TX(12)=SUMSSR                                                 
          TX(13)=SUMSSS                                                 
          TX(14)=TSNREF                                                 
          TX(15)=RFSURF                                                 
          TX(18)=TSNOBS                                                 
          TX(19)=RFLSS                                                  
          TX(20)=TS0                                                    
          TX(21)=S0                                                     
          TX(22)=SUMTMS                                                 
          TX(23)=SALB                                                   
          TX(33)=FDNTRT                                                 
          TX(34)=FDNSRT                                                 
          TX(35)=TRANSX                                                 
          DO 60 K=1,KMAX                                                
              IP1=NWGT                                                  
              DO 50 I=NWGTM1,1,-1                                       
                  SLIT(K,IP1)=SLIT(K,I)+WGT(IP1)*TX(K)                  
   50         IP1=I                                                     
              SLIT(K,1)=WGT(1)*TX(K)                                    
   60     TX(K)=SLIT(K,NWGT)                                            
C                                                                       
C         CHECK IF VALUES ARE TO BE PRINTED                             
          IF(IVX.LT.IWRITE)GOTO30                                       
          IWRITE=IWRITE+IDV                                             
          IF(IWRITE.GT.IVXMAX)FACTOR=.5                                 
          ICOUNT=ICOUNT+1                                               
C                                                                       
C         RENORMALIZE IF TRIANGULAR SLIT EXTENDS TO NEGATIVE FREQUENCIES
          IF(IVX.LT.NWGTM1)THEN                                         
              STORE=1.-.5*(NWGTM1-IVX)*(NWGTM1-IVX+1)*WNORM             
              DO 70 K=1,KMAX                                            
   70         TX(K)=TX(K)/STORE                                         
          ENDIF                                                         
          BBG=TX(1)                                                     
          UNIF=TX(2)                                                    
          TRACE=TX(3)                                                   
          SUMV=TX(8)                                                    
          SUMSSR=TX(12)                                                 
          SUMSSS=TX(13)                                                 
          TSNREF=TX(14)                                                 
          RFSURF=TX(15)                                                 
          TSNOBS=TX(18)                                                 
          RFLSS=TX(19)                                                  
          TS0=TX(20)                                                    
          S0=TX(21)                                                     
          SUMTMS=TX(22)                                                 
          SALB=TX(23)                                                   
          FDNTRT=TX(33)                                                 
          FDNSRT=TX(34)                                                 
          TRANSX=TX(35)                                                 
          IF (TX(9) .GT. 0.0) THEN                                      
              DIFFUSETHERM = FDNTRT/TX(9)                               
              DIFFUSESOL = FDNSRT/TX(9)                                 
          ELSE                                                          
              DIFFUSETHERM = 1.0E-10                                    
              DIFFUSESOL = 1.0E-10                                      
          END IF                                                        
          V=FLOAT(IVX-IWIDM1)                                           
          ALAM=10000./(V+.000001)                                       
          SUMA=SUMA+FACTOR*IDV*(1.0-TX(9))                              
C                                                                       
C         ALTX9 IS NOW OUTPUT USING AN F FORMAT WHEN IEMSCT = 1 OR 2,   
C         SO THE MAXIMUM IS REDUCED TO 999.999 (STILL ABSURDLY LARGE)   
          ALTX9=999.9                                                   
          IF(TX(9).GT.0.)ALTX9=-LOG(TX(9))                              
          GOTO(80,90,90,100),IEMSCT+1                                   
C                                                                       
C         TRANSMITTANCE ONLY                                            
   80     CONTINUE                                                      
          TX(7)=TX(7)*TX(16)                                            
Calley        WRITE(IPR,'(F8.0,F8.3,11F9.4,F12.3)')V,ALAM,TX(9),TX(17), 
          IF (IPR .GT. 0) WRITE(IPR,'(F8.0,F8.3,11F9.4,F12.3)') V,ALAM, 
     +                                                    TX(9),TX(17), 
     1      UNIF,TX(31),TRACE,TX(4),TX(5),TX(6),TX(7),TX(11),TX(10),SUMA
C                                                                       
C         KEEP 22 ENTRIES WITHIN 132 CHARACTERS                         
          FRMT(1:47)=  '(1X,I5,1X,F5.3,1X,F5.3,1X,F5.3,1X,F5.3,1X,F5.3,'
          FRMT(48:95)='1X,F5.3,1X,F5.3,1X,F5.3,1X,F5.3,1X,F5.3,1X,F5.3,'
          FRMT(96:135)=       '1X,F5.3,1X,F5.3,1X,F5.3,1X,F5.3,1X,F5.3,'
          FRMT(136:175)=      '1X,F5.3,1X,F5.3,1X,F5.3,1X,F5.3,1X,F5.3)'
          IF(TX(9) .LT..99995)FRMT( 14: 14)='4'                         
          IF(TX(17).LT..99995)FRMT( 22: 22)='4'                         
          IF(UNIF  .LT..99995)FRMT( 30: 30)='4'                         
          IF(TX(31).LT..99995)FRMT( 38: 38)='4'                         
          IF(TRACE .LT..99995)FRMT( 46: 46)='4'                         
          IF(TX( 4).LT..99995)FRMT( 54: 54)='4'                         
          IF(TX( 5).LT..99995)FRMT( 62: 62)='4'                         
          IF(TX( 6).LT..99995)FRMT( 70: 70)='4'                         
          IF(TX( 7).LT..99995)FRMT( 78: 78)='4'                         
          IF(TX(11).LT..99995)FRMT( 86: 86)='4'                         
          IF(TX(10).LT..99995)FRMT( 94: 94)='4'                         
          IF(ALTX9 .LT..99995)THEN                                      
              FRMT(102:102)='4'                                         
          ELSEIF(ALTX9 .LT.9.9995)THEN                                  
              FRMT(102:102)='3'                                         
          ELSEIF(ALTX9 .LT.99.995)THEN                                  
              FRMT(102:102)='2'                                         
          ELSE                                                          
              FRMT(102:102)='1'                                         
          ENDIF                                                         
          IF(TX(36).LT..99995)FRMT(110:110)='4'                         
          IF(TX(44).LT..99995)FRMT(118:118)='4'                         
          IF(TX(46).LT..99995)FRMT(126:126)='4'                         
          IF(TX(47).LT..99995)FRMT(134:134)='4'                         
          IF(TX(50).LT..99995)FRMT(142:142)='4'                         
          IF(TX(52).LT..99995)FRMT(150:150)='4'                         
          IF(TX(54).LT..99995)FRMT(158:158)='4'                         
          IF(TX(64).LT..99995)FRMT(166:166)='4'                         
          IF(TX(65).LT..99995)FRMT(174:174)='4'                         
Calley          WRITE(IPU,FMT=FRMT)INT(V+.5),TX(9),TX(17),UNIF,TX(31),  
          IF (IPU .GT. 0) WRITE(IPU,FMT=FRMT) INT(V+.5),TX(9),TX(17),   
     +                                                    UNIF,TX(31),  
     1      TRACE,TX(4),TX(5),TX(6),TX(7),TX(11),TX(10),ALTX9,TX(36),   
     2      TX(44),TX(46),TX(47),TX(50),TX(52),TX(54),TX(64),TX(65)     
          IF (IPJ.GT.0) WRITE(IPJ,85)NINT(V),ALAM,TX(9),TX(17),TX(36),  
     +         TX(44),TX(46),TX(47),TX(50),TX(31),TX(52),TX(54),TX(64), 
     +         TX(65),TX(11),TX(4),TX(5),TX(6),TX(7),TX(10),TRANSX      
   85     FORMAT(I5,F11.5,F7.4,18F6.3)                                  
          GOTO110                                                       
C                                                                       
C         RADIANCE PATHS                                                
   90     CONTINUE                                                      
C                                                                       
C         CONVRT IS THE CONVERSION FROM (W SR-1 CM-2 / CM-1)            
C         TO (W SR-1 CM-2 / MICRON).                                    
          CONVRT=1.E-4*V**2                                             
          IF(V.EQ.0.)CONVRT=1.E-4*(.5*IDVX)**2                          
          IF(IEMSCT.EQ.1)THEN                                           
C                                                                       
C             SUMT IS THE TOTAL SPECTRAL RADIANCE, I.E. SUMT            
C             EQUALS THE SUM OF THE DIRECT + MULTIPLY SCATTERED         
C             THERMAL PATH RADIANCE (SUMV), THE SURFACE EMISSION        
C             (BBG), AND THE REFLECTED SURFACE TERM (RFSURF).  SUMTMS   
C             IS THE MULTIPLE SCATTERING CONTRIBUTION TO SUMV.  EACH OF 
C             THESE TERMS HAS UNITS (W SR-1 CM-2 / CM-1).  RADSUM IS    
C             THE SPECTRALLY INTEGRATED TOTAL RADIANCE (W SR-1 CM-2).   
              SUMT=SUMV+BBG+RFSURF                                      
              RADSUM=RADSUM+IDV*FACTOR*SUMT                             
              IF(DIS)THEN                                               
Calley              WRITE(IPR,'(F8.0,F8.3,F7.3,1P,2E10.2,10X,7E10.2,0P, 
                  IF (IPR .GT. 0) WRITE(IPR,                            
     +                        '(F8.0,F8.3,F7.3,1P,2E10.2,10X,7E10.2,0P, 
     1              F9.5)')V,ALAM,SALB,SUMV,CONVRT*SUMV,BBG,CONVRT*BBG, 
     2              RFSURF,CONVRT*RFSURF,SUMT,CONVRT*SUMT,RADSUM,TX(9)  
              ELSE                                                      
Calley                  WRITE(IPR,'(F8.0,F8.3,F7.3,1P,10E10.2,0P,F9.5)')
                  IF (IPR .GT. 0) WRITE(IPR,                            
     +              '(F8.0,F8.3,F7.3,1P,10E10.2,0P,F9.5)')              
     1              V,ALAM,SALB,SUMV,CONVRT*SUMV,SUMTMS,BBG,CONVRT*BBG, 
     2              RFSURF,CONVRT*RFSURF,SUMT,CONVRT*SUMT,RADSUM,TX(9)  
              ENDIF                                                     
Calley          WRITE(IPU,'(0PF7.0,F11.8,1P3E11.4,11X,2(11X,E11.4),18X, 
              IF (IPU .GT. 0) WRITE(IPU,                                
     +                    '(0PF7.0,F11.8,1P3E11.4,11X,2(11X,E11.4),18X, 
     1          0PF8.3)')V,TX(9),SUMV,SUMTMS,BBG,RFSURF,SUMT,ALTX9      
              IF (IPJ .GT. 0) WRITE(IPJ,93) V,ALAM,TX(9),CONVRT*SUMV,   
     +                      CONVRT*BBG,CONVRT*RFSURF,CONVRT*SUMT,ALTX9, 
     +                      SALB,CONVRT*DIFFUSETHERM                    
   93         FORMAT(F8.1,F11.5,F10.6,4E14.5,F10.5,F10.4,E14.5)         
          ELSE                                                          
C                                                                       
C             SUMT IS THE TOTAL SPECTRAL RADIANCE, I.E. SUMT            
C             EQUALS THE SUM OF THE DIRECT + MULTIPLY SCATTERED         
C             THERMAL PATH RADIANCE (SUMV), THE SURFACE EMISSION        
C             (BBG), THE SINGLE + MULTIPLE SOLAR SCATTERED RADIANCE     
C             (SUMSSR) AND THE REFLECTED SURFACE TERM (RFSURF).  EACH   
C             OF THESE TERMS HAS UNITS (W SR-1 CM-2 / CM-1).  RADSUM IS 
C             THE SPECTRALLY INTEGRATED TOTAL RADIANCE (W SR-1 CM-2).   
              SUMT=SUMV+BBG+SUMSSR+RFSURF                               
              RADSUM=RADSUM+IDV*FACTOR*SUMT                             
              IF(IMULT.EQ.0)THEN                                        
Calley            WRITE(IPR,'(F8.0,F8.3,5(1PE10.2,E9.2),E10.2,0PF9.5)') 
                  IF (IPR .GT. 0) WRITE(IPR,                            
     +                      '(F8.0,F8.3,5(1PE10.2,E9.2),E10.2,0PF9.5)') 
     1              V,ALAM,SUMV,CONVRT*SUMV,BBG,CONVRT*BBG,             
     2              SUMSSR,CONVRT*SUMSSR,RFSURF,CONVRT*RFSURF,          
     3              SUMT,CONVRT*SUMT,RADSUM,TX(9)                       
              ELSEIF(DIS)THEN                                           
Calley                  WRITE(IPR,'(F7.0,F8.3,1P11E9.2,E10.2,0PF8.5)')  
                  IF (IPR .GT. 0) WRITE(IPR,                            
     +                            '(F7.0,F8.3,1P11E9.2,E10.2,0PF8.5)')  
     1              V,ALAM,SUMV,CONVRT*SUMV,BBG,SUMSSR,CONVRT*SUMSSR,   
     2              SUMSSS,RFSURF,CONVRT*RFSURF,RFLSS,                  
     3              SUMT,CONVRT*SUMT,RADSUM,TX(9)                       
              ELSE                                                      
Calley              WRITE(IPR,'(F7.0,F8.3,F7.3,1P8E9.2,3E10.3,0PF8.5)') 
                  IF (IPR .GT. 0) WRITE(IPR,                            
     +                        '(F7.0,F8.3,F7.3,1P8E9.2,3E10.3,0PF8.5)') 
     1              V,ALAM,SALB,SUMV,CONVRT*SUMV,SUMTMS,BBG,SUMSSR,     
     2              SUMSSS,RFSURF,RFLSS,SUMT,CONVRT*SUMT,RADSUM,TX(9)   
              ENDIF                                                     
Calley              WRITE(IPU,'(0PF7.0,F11.8,1P8E11.4,2E9.2,0PF8.3)')   
              IF (IPU .GT. 0) WRITE(IPU,                                
     +                        '(0PF7.0,F11.8,1P8E11.4,2E9.2,0PF8.3)')   
     1          V,TX(9),SUMV,SUMTMS,BBG,SUMSSR,SUMSSS,                  
     2          RFSURF,RFLSS,SUMT,TSNREF,TSNOBS,ALTX9                   
              IF (IPJ .GT. 0) WRITE(IPJ,96) NINT(V),ALAM,TX(9),SALB,    
     +          CONVRT*SUMV,CONVRT*BBG,CONVRT*SUMSSR,CONVRT*RFSURF,     
     +          CONVRT*SUMT,ALTX9,CONVRT*DIFFUSETHERM,CONVRT*DIFFUSESOL 
   96         FORMAT(I6,F11.5,2F7.4,5E12.5,F8.3,2E13.5)                 
          ENDIF                                                         
          GOTO110                                                       
C                                                                       
C         DIRECTLY TRANSMITTED SOLAR IRRADIANCE [WATTS/(CM2 MICROMETER)]
  100     CONTINUE                                                      
C                                                                       
C         CONVRT IS THE CONVERSION FROM W/CM2-(CM-1) TO W/CM2-UM        
          CONVRT=1.E-4*V**2                                             
          IF(V.EQ.0)CONVRT=1.E-4*(.5*IDVX)**2                           
C                                                                       
C         RADSUM IS THE INTEGRATED TRANSMITTED SOLAR IRRADIANCE AND SSOL
C         IS THE INTEGRATED EXTRA-TERRESTRIAL SOLAR IRRADIANCE (W/CM2). 
          RADSUM=RADSUM+TS0*IDV*FACTOR                                  
          SSOL=SSOL+S0*IDV*FACTOR                                       
Calley          WRITE(IPR,'(F8.0,F8.3,1P6E10.2,0PF9.4)')                
          IF (IPR .GT. 0) WRITE(IPR,'(F8.0,F8.3,1P6E10.2,0PF9.4)')      
     1      V,ALAM,TS0,CONVRT*TS0,S0,CONVRT*S0,RADSUM,SSOL,TX(9)        
Calley    WRITE(IPU,'(F7.0,F8.4,1P2E9.2,T96,E10.3)')V,TX(9),TS0,S0,ALTX9
          IF (IPU .GT. 0) WRITE(IPU,                                    
     +             '(F7.0,F8.4,1P2E9.2,T96,E10.3)')V,TX(9),TS0,S0,ALTX9 
          IF (IPJ.GT.0) WRITE(IPJ,105) V,ALAM,CONVRT*TS0,CONVRT*S0,     
     +                                 TX(9),ALTX9                      
  105     FORMAT(F8.1,F11.5,1PE14.5,E14.5,0PF8.4,1PE10.3)               
          SUMT=TS0                                                      
  110     CONTINUE                                                      
C                                                                       
          WAVELEN(INDEX) = ALAM                                         
          TRANSMIT(INDEX) = TX(9)                                       
          IF (IEMSCT .EQ. 3) THEN                                       
              PATHRAD(INDEX) = CONVRT*TS0                               
          ELSE                                                          
              PATHRAD(INDEX) = CONVRT*SUMV                              
          END IF                                                        
          SKYRAD(INDEX) = CONVRT*DIFFUSETHERM                           
          INDEX = INDEX + 1                                             
C         WRITE OUT plot.dat FILE DATA                                  
          IF(YFLAG.EQ.'T')THEN                                          
              IF(TX(9).GT.YPLTMX)YPLTMX=TX(9)                           
              IF(XFLAG.EQ.'N')THEN                                      
                  WRITE(IPLOT,'(0PF15.3,F15.8)')1000*ALAM,TX(9)         
              ELSEIF(XFLAG.EQ.'M')THEN                                  
                  WRITE(IPLOT,'(0PF15.6,F15.8)')ALAM,TX(9)              
              ELSE                                                      
                  WRITE(IPLOT,'(0PF15.0,F15.8)')V,TX(9)                 
              ENDIF                                                     
          ELSEIF(YFLAG.EQ.'R')THEN                                      
              IF(XFLAG.EQ.'N')THEN                                      
                  CONVRT=1000.*CONVRT                                   
                  IF(CONVRT*SUMT.GT.YPLTMX)YPLTMX=CONVRT*SUMT           
                  WRITE(IPLOT,'(0PF15.3,1PE15.5)')1000.*ALAM,CONVRT*SUMT
              ELSEIF(XFLAG.EQ.'M')THEN                                  
                  IF(CONVRT*SUMT.GT.YPLTMX)YPLTMX=CONVRT*SUMT           
                  WRITE(IPLOT,'(0PF15.6,1PE15.5)')ALAM,CONVRT*SUMT      
              ELSE                                                      
                  IF(SUMT.GT.YPLTMX)YPLTMX=SUMT                         
                  WRITE(IPLOT,'(0PF15.0,1PE15.5)')V,SUMT                
              ENDIF                                                     
          ENDIF                                                         
          IF(IEMSCT.NE.0)THEN                                           
              IF(SUMT.GE.RADMAX)THEN                                    
                  VRMAX=V                                               
                  RADMAX=SUMT                                           
              ENDIF                                                     
              IF(SUMT.LE.RADMIN)THEN                                    
                  VRMIN=V                                               
                  RADMIN=SUMT                                           
              ENDIF                                                     
          ENDIF                                                         
          FACTOR=1.                                                     
      IF(IWRITE.LE.IVXMAX)GOTO30                                        
C                                                                       
C     END OF FREQUENCY LOOP                                             
      IVX=INT(V+.5)                                                     
C                                                                       
C     PRINT plot.dat FILE DELIMITER.                                    
      IF(YFLAG.EQ.'T')THEN                                              
          IF (DLIMIT.EQ.'        ')THEN                                 
                  WRITE(IPLOT,*)                                        
          ELSEIF(XFLAG.EQ.'N')THEN                                      
              WRITE(IPLOT,'(2A,1PE15.5,A)')DLIMIT,                      
     1          '   THE MAXIMUM TRANSMITTANCE IS',                      
     2          YPLTMX,' (WAVELENGTHS IN NANOMETERS)'                   
          ELSEIF(XFLAG.EQ.'M')THEN                                      
              WRITE(IPLOT,'(2A,1PE15.5,A)')DLIMIT,                      
     1          '   THE MAXIMUM TRANSMITTANCE IS',                      
     2          YPLTMX,' (WAVELENGTHS IN MICRONS)'                      
          ELSE                                                          
              WRITE(IPLOT,'(2A,1PE15.5,A)')DLIMIT,                      
     1          '   THE MAXIMUM TRANSMITTANCE IS',                      
     2          YPLTMX,' (FREQUENCIES IN CM-1)'                         
          ENDIF                                                         
      ELSEIF(YFLAG.EQ.'R')THEN                                          
          IF(IEMSCT.EQ.3)THEN                                           
              IF (DLIMIT.EQ.'        ')THEN                             
                  WRITE(IPLOT,*)                                        
              ELSEIF(XFLAG.EQ.'N')THEN                                  
                  WRITE(IPLOT,'(2A,1PE15.5,A)')DLIMIT,                  
     1              '   THE MAXIMUM TRANSMITTED SOLAR IRRADIANCE IS',   
     2              YPLTMX,' MICRO-WATTS CM-2 / NANOMETER'              
              ELSEIF(XFLAG.EQ.'M')THEN                                  
                  WRITE(IPLOT,'(2A,1PE15.5,A)')DLIMIT,                  
     1              '   THE MAXIMUM TRANSMITTED SOLAR IRRADIANCE IS',   
     2              YPLTMX,' W CM-2 / MICRON'                           
              ELSE                                                      
                  WRITE(IPLOT,'(2A,1PE15.5,A)')DLIMIT,                  
     1              '   THE MAXIMUM TRANSMITTED SOLAR IRRADIANCE IS',   
     2              YPLTMX,' W CM-2 / CM-1'                             
              ENDIF                                                     
          ELSE                                                          
              IF (DLIMIT.EQ.'        ')THEN                             
                  WRITE(IPLOT,*)                                        
              ELSEIF(XFLAG.EQ.'N')THEN                                  
                  WRITE(IPLOT,'(2A,1PE15.5,A)')DLIMIT,                  
     1              '   THE MAXIMUM SPECTRAL RADIANCE IS',              
     2              YPLTMX,' MICRO-WATTS SR-1 CM-2 / NANOMETER'         
              ELSEIF(XFLAG.EQ.'M')THEN                                  
                  WRITE(IPLOT,'(2A,1PE15.5,A)')DLIMIT,                  
     1              '   THE MAXIMUM SPECTRAL RADIANCE IS',              
     2              YPLTMX,' W SR-1 CM-2 / MICRON'                      
              ELSE                                                      
                  WRITE(IPLOT,'(2A,1PE15.5,A)')DLIMIT,                  
     1              '   THE MAXIMUM SPECTRAL RADIANCE IS',              
     2              YPLTMX,' W SR-1 CM-2 / CM-1'                        
              ENDIF                                                     
          ENDIF                                                         
      ENDIF                                                             
CORK  IF(IMULT.NE.0)THEN                                                
C                                                                       
C         INTEGRATED COOLING RATES.                                     
CORK      WRITE(IPR,'(/A)')'1 MULTIPLE SCATTERING CALCULATION RESULTS:' 
CORK      CALL WTCOOL                                                   
CORK      WRITE(IPR,'(/A)')'1 NO SCATTERING ATMOSPHERE/SURFACE RESULTS:'
CORK      CALL TCOOL                                                    
CORK      CALL WTCOOL                                                   
CORK  ENDIF                                                             
CalleyWRITE(IPR,'(27H0INTEGRATED ABSORPTION FROM,I6,3H TO,I6,7H CM-1 =, 
      IF (IPR .GT. 0) WRITE(IPR,                                        
     +          '(27H0INTEGRATED ABSORPTION FROM,I6,3H TO,I6,7H CM-1 =, 
     1  F10.2,5H CM-1,/24H AVERAGE TRANSMITTANCE =,F6.4,/)')            
     2  IV1,IVX,SUMA,1.-SUMA/(IVX-IV1)                                  
      IF(IEMSCT.EQ.3)THEN                                               
Calley          WRITE(IPR,'(24h0INTEGRATED IRRADIANCE =,1PE11.3,        
          IF (IPR.GT.0)WRITE(IPR,'(24h0INTEGRATED IRRADIANCE =,1PE11.3, 
     1      11h WATTS CM-2,/24h MINIMUM IRRADIANCE    =,E11.3,          
     2      14h WATTS CM-2 AT,0PF11.1,5h CM-1,/10h  MAXIMUM ,           
     3      14h RADIANCE    =,1PE11.3,24h WATTS CM-2  (CM-1)-1 AT,      
     4      0PF11.1,5H CM-1)')RADSUM,RADMIN,VRMIN,RADMAX,VRMAX          
      ELSEIF(IEMSCT.NE.0)THEN                                           
Calley          WRITE(IPR,'(/A,1PE14.6,A,/(A,1PE14.6,A,0PF10.0,A))')    
          IF (IPR .GT. 0) WRITE(IPR,                                    
     +                    '(/A,1PE14.6,A,/(A,1PE14.6,A,0PF10.0,A))')    
     1      ' INTEGRATED TOTAL RADIANCE =',RADSUM,' WATTS CM-2 STER-1', 
     2      ' MINIMUM SPECTRAL RADIANCE =',RADMIN,                      
     3                   ' WATTS CM-2 STER-1 / CM-1  AT',VRMIN,' CM-1', 
     4      ' MAXIMUM SPECTRAL RADIANCE =',RADMAX,                      
     5                   ' WATTS CM-2 STER-1 / CM-1  AT',VRMAX,' CM-1'  
          IF(SALBS.GE.0)THEN                                            
Calley              WRITE(IPR,'(23H BOUNDARY TEMPERATURE =,F11.2,       
              IF (IPR .GT. 0) WRITE(IPR,                                
     +                        '(23H BOUNDARY TEMPERATURE =,F11.2,       
     1          2H K,/22H BOUNDARY EMISSIVITY =,F12.3)')TBOUND,EMISS    
          ELSE                                                          
Calley            WRITE(IPR,'(23H BOUNDARY TEMPERATURE =,F11.2)')TBOUND 
              IF (IPR .GT. 0) WRITE(IPR,                                
     +                      '(23H BOUNDARY TEMPERATURE =,F11.2)')TBOUND 
          ENDIF                                                         
      ENDIF                                                             
      RETURN                                                            
      END                                                               
      SUBROUTINE TRLAY(TAU,TSCAT,G,CSZEN,S0DEP,DEPRAT,EX,TDFS,REFS)     
C                                                                       
C     CALCULATE PARAMETERS FOR SOLAR HYBRID MODIFIED DELTA EDDINGTON    
C     2-STREAM APPROXIMATION.  THE EQUATIONS ARE DERIVED FROM           
C     W. E. MEADOR AND W. R. WEAVER, J. ATMOS. SCI. 37, 630-642 (1980). 
C                                                                       
C     INPUTS                                                            
C       TAU     VERTICAL EXTINCTION OPTICAL DEPTH.                      
C       TSCAT   VERTICAL SCATTERING OPTICAL DEPTH.                      
C       G       HENYEY-GREENSTEIN ASYMMETRY FACTOR.                     
C       CSZEN   COSINE OF THE SOLAR ZENITH ANGLE.                       
C       S0DEP   EXTINCTION OPTICAL DEPTH FROM LAYER BOTTOM TO SUN/MOON. 
C       DEPRAT  FRACTIONAL DECREASE IN WEAK-LINE OPTICAL DEPTH TO SUN   
C               ACROSS THE CURRENT LAYER.                               
C                                                                       
C     OUTPUTS                                                           
C       EX      SOLAR ATTENUATION ACROSS LAYER                          
C       TDFS    LAYER TRANSMITTANCE MINUS EX                            
C       REFS    LAYER REFLECTANCE                                       
      REAL TAU,TSCAT,G,S0DEP,DEPRAT,CSZEN,EX,TDFS,REFS                  
C                                                                       
C     LIST PARAMETERS                                                   
      REAL CUTOFF,PT3CUT                                                
      PARAMETER(CUTOFF=0.01,PT3CUT=.3*CUTOFF)                           
C                                                                       
C     LIST COMMONS                                                      
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH                               
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                           
C                                                                       
C     DECLARE FUNCTIONS                                                 
      REAL BETABS                                                       
C                                                                       
C     DECLARE LOCAL VARIABLES                                           
      REAL OMEGA,MU0,GAMMA1,G1MG2,GAMMA3,GAMMA4,ONEMG2,DENOM,           
     1  A1,A2,K,KT,KM,X,ONEPKM,ONEMKM,G3M,G4M,XHALF,TERM1,              
     2  TERM2,TERM3,COEF,EKT,TWOEKT,RATP,RATM,XMKT,G3K,G4K              
      LOGICAL LWARN                                                     
C                                                                       
C     LIST DATA                                                         
      SAVE LWARN                                                        
      DATA LWARN/.TRUE./                                                
      IF(TAU.LE.0.)THEN                                                 
C                                                                       
C         CASE 1:  TAU = 0.                                             
          EX=1.                                                         
          REFS=0.                                                       
          TDFS=0.                                                       
      ELSE                                                              
          OMEGA=TSCAT/TAU                                               
          GAMMA3=BETABS(CSZEN,G)                                        
          GAMMA4=1.-GAMMA3                                              
          X=S0DEP*DEPRAT                                                
          IF(TAU.GT.X)THEN                                              
C                                                                       
C             ONLY WARN USER IF NOT PREVIOUSLY WARNED                   
C             AND TAU EXCEEDS X BY MORE THAN 5%.                        
              IF(LWARN .AND. TAU.GT.1.05*X)THEN                         
Calley                  IF(NPR.EQ.-1)WRITE(IPR1,'(/2A,1PE12.4,A,        
                  IF(NPR.EQ.-1 .AND. IPR1.GT.0) WRITE(IPR1,             
     +                                          '(/2A,1PE12.4,A,        
     1              /10X,2A,E12.4,A,/10X,2A,/(10X,A,0PF7.4,A))')        
     2              ' WARNING:  THE ESTIMATED LAYER OPTICAL',           
     3              ' DEPTH TOWARDS THE SUN IS',X,' AND',               
     4              ' THE VERTICAL LAYER OPTICAL DEPTH',                
     5              ' IS',TAU,'.  THE LAYER OPTICAL',                   
     6              ' DEPTH TOWARDS THE SUN WAS RESET',                 
     7              ' TO THE VERTICAL LAYER EXTINCTION',                
     8              ' OPTICAL DEPTH OVER THE COSINE (=',                
     9              CSZEN,') OF THE SOLAR ZENITH.',                     
     &              ' ***  THIS WARNING WILL NOT BE REPEATED  ***'      
                  LWARN=.FALSE.                                         
              ENDIF                                                     
              MU0=ABS(CSZEN)+1.E-10                                     
              X=TAU/MU0                                                 
          ELSE                                                          
              MU0=TAU/X                                                 
          ENDIF                                                         
          ONEMG2=(1.-G)*(1.+G)                                          
          DENOM=ONEMG2*(1.-MU0)+MU0                                     
          GAMMA1=((1.-OMEGA)+.75*ONEMG2*(1.-G*OMEGA)                    
     1      +GAMMA3*OMEGA*(1.-ONEMG2))/DENOM                            
          G1MG2=(1.+ONEMG2)*(1.-OMEGA)/DENOM                            
          A1=GAMMA1-GAMMA3*G1MG2                                        
          A2=GAMMA1-GAMMA4*G1MG2                                        
          K=SQRT(G1MG2*(2*GAMMA1-G1MG2))                                
          KT=K*TAU                                                      
          KM=K*MU0                                                      
          ONEPKM=1.+KM                                                  
          IF(X+KT.LT.CUTOFF)THEN                                        
C                                                                       
C             CASE 2:  (K TAU) AND (TAU/MU0) SMALL                      
C                      [(K + 1/MU0) TAU < CUTOFF]                       
              G3M=GAMMA3/MU0                                            
              G4M=GAMMA4/MU0                                            
              XHALF=.5*X                                                
              TERM1=ONEPKM+KM                                           
              EX=1.-X*(1.-XHALF)                                        
              COEF=TSCAT/(1.-TAU*(K-GAMMA1))                            
              REFS=COEF*(G3M-XHALF*(G3M*TERM1-A2))                      
              TDFS=COEF*(G4M-XHALF*(G4M*TERM1-A1))                      
CNEXT                                                                   
CNEXT         FOR GREATER ACCURACY, ADD THE NEXT HIGHER                 
CNEXT         ORDER TERM BY REPLACING THE EXPRESSIONS ABOVE             
CNEXT         FOR EX, COEF, REFS AND TDFS WITH THOSE BELOW.             
CNEXT         XTHIRD=X/3.                                               
CNEXT         TERM2=1.+KM*(3.+4*KM)                                     
CNEXT         TERM3=TERM1+KM                                            
CNEXT         EX=1.-X*(1.-XHALF*(1.-XTHIRD))                            
CNEXT         COEF=TSCAT/(1.-TAU*(K-GAMMA1)*(1.-KT))                    
CNEXT         REFS=COEF*(G3M-XHALF*(G3M*TERM1-A2                        
CNEXT1          -XTHIRD*(G3M*TERM2-A2*TERM3)))                          
CNEXT         TDFS=COEF*(G4M-XHALF*(G4M*TERM1-A1                        
CNEXT1          -XTHIRD*(G4M*TERM2-A1*(1.+TERM3))))                     
          ELSEIF(KT.LT.PT3CUT)THEN                                      
C                                                                       
C             CASE 3:  (K TAU) SMALL.                                   
C                      [K TAU < .3 CUTOFF]                              
              COEF=.5*OMEGA/(1.-TAU*(K-GAMMA1)*(1.-KT))                 
              EX=EXP(-X)                                                
              TERM1=TAU*(1.-.5*KT*(1.-KT/3.))                           
              EKT=1.-K*TERM1                                            
              TERM2=(1.+EKT)*TERM1                                      
              TERM3=1.+EKT*EKT                                          
              TWOEKT=2*EKT                                              
              RATP=(1.-EKT*EX)/ONEPKM                                   
              ONEMKM=1.-KM                                              
              RATM=(EKT-EX)/ONEMKM                                      
              DENOM=ONEPKM*ONEMKM                                       
              REFS=COEF*(GAMMA3*(RATP+EKT*RATM)                         
     1          +A2*(MU0*(TWOEKT*EX-TERM3)+TERM2)/DENOM)                
              TDFS=COEF*(GAMMA4*(RATM+EKT*RATP)                         
     1          +A1*(MU0*(TWOEKT-EX*TERM3)-EX*TERM2)/DENOM)             
          ELSE                                                          
C                                                                       
C             CASE 4:  (K TAU) NOT SMALL.                               
C                      [K TAU > .3 CUTOFF]                              
              EKT=EXP(-KT)                                              
              EX=EXP(-X)                                                
              RATP=(1.-EKT*EX)/ONEPKM                                   
              XMKT=X-KT                                                 
              IF(ABS(XMKT).LT..004)THEN                                 
C                                                                       
C                 CASE 4A:  (K - 1/MU0) TAU NEAR ZERO.                  
                  RATM=X*EX*(1.+.5*XMKT*(1.+XMKT/3.))                   
              ELSE                                                      
C                                                                       
C                 CASE 4B:  (K - 1/MU0) TAU NOT NEAR ZERO.              
                  RATM=(EKT-EX)/(1.-KM)                                 
              ENDIF                                                     
              COEF=OMEGA/(K+GAMMA1+(K-GAMMA1)*EKT**2)                   
              G3K=GAMMA3*K                                              
              REFS=COEF*((G3K+A2)*RATP+(G3K-A2)*RATM*EKT)               
              G4K=GAMMA4*K                                              
              TDFS=COEF*((G4K+A1)*RATM+(G4K-A1)*RATP*EKT)               
          ENDIF                                                         
      ENDIF                                                             
      RETURN                                                            
      END                                                               
      LOGICAL FUNCTION  TSTBAD( VARNAM, RELERR )                        
                                                                        
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
C       WRITE NAME (-VARNAM-) OF VARIABLE FAILING SELF-TEST AND ITS     
C       PERCENT ERROR FROM THE CORRECT VALUE;  RETURN  'FALSE'.         
                                                                        
      CHARACTER*(*)  VARNAM                                             
      REAL*8           RELERR                                           
                                                                        
C                                                                       
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                          
                                                                        
      TSTBAD = .FALSE.                                                  
Calley      WRITE( *, '(/,3A,1P,E11.2,A)' )                             
      IF (IPR .GT. 0) WRITE( IPR, '(/,3A,1P,E11.2,A)' )                 
     $       ' OUTPUT VARIABLE  ', VARNAM,'  DIFFERED BY', 100.*RELERR, 
     $       '  PER CENT FROM CORRECT VALUE.  SELF-TEST FAILED.'        
      RETURN                                                            
      END                                                               
      SUBROUTINE  UPBEAM( ARRAY, CC, CMU, DELM0, FBEAM, GL, IPVT, MAZIM,
     $                    MXCMU, NN, NSTR, PI, UMU0, WK, YLM0, YLMC, ZJ,
     $                    ZZ )                                          
                                                                        
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
C         FINDS THE INCIDENT-BEAM PARTICULAR SOLUTION  OF SS(18)        
                                                                        
C     ROUTINES CALLED:  DGECO, DGESL                                    
                                                                        
C   I N P U T    V A R I A B L E S:                                     
                                                                        
C       CC     :  CAPITAL-C-SUB-IJ IN EQ. SS(5)                         
C       CMU    :  ABSCISSAE FOR GAUSS QUADRATURE OVER ANGLE COSINE      
C       DELM0  :  KRONECKER DELTA, DELTA-SUB-M0                         
C       GL     :  DELTA-M SCALED LEGENDRE COEFFICIENTS OF PHASE FUNCTION
C                    (INCLUDING FACTORS 2L+1 AND SINGLE-SCATTER ALBEDO) 
C       MAZIM  :  ORDER OF AZIMUTHAL COMPONENT                          
C       YLM0   :  NORMALIZED ASSOCIATED LEGENDRE POLYNOMIAL             
C                 AT THE BEAM ANGLE                                     
C       YLMC   :  NORMALIZED ASSOCIATED LEGENDRE POLYNOMIAL             
C                 AT THE QUADRATURE ANGLES                              
C       (REMAINDER ARE 'DISORT' INPUT VARIABLES)                        
                                                                        
C   O U T P U T    V A R I A B L E S:                                   
                                                                        
C       ZJ     :  RIGHT-HAND SIDE VECTOR CAPITAL-X-SUB-ZERO IN SS(19);  
C                 ALSO THE SOLUTION VECTOR CAPITAL-Z-SUB-ZERO           
C                 AFTER SOLVING THAT SYSTEM                             
C       ZZ     :  PERMANENT STORAGE FOR -ZJ-, BUT RE-ORDERED            
                                                                        
C   I N T E R N A L    V A R I A B L E S:                               
                                                                        
C       ARRAY  :  COEFFICIENT MATRIX IN LEFT-HAND SIDE OF EQ. SS(19)    
C       IPVT   :  INTEGER VECTOR OF PIVOT INDICES REQUIRED BY *LINPACK* 
C       WK     :  SCRATCH ARRAY REQUIRED BY *LINPACK*                   
C+---------------------------------------------------------------------+
                                                                        
      INTEGER  IPVT(*)                                                  
      REAL*8     ARRAY( MXCMU,* ), CC( MXCMU,* ), CMU(*), GL(0:*),      
     $         WK(*), YLM0(0:*), YLMC( 0:MXCMU,* ), ZJ(*), ZZ(*)        
                                                                        
      DO 40  IQ = 1, NSTR                                               
                                                                        
         DO 10  JQ = 1, NSTR                                            
            ARRAY(IQ,JQ) = - CC(IQ,JQ)                                  
10       CONTINUE                                                       
         ARRAY(IQ,IQ) = 1. + CMU(IQ) / UMU0 + ARRAY(IQ,IQ)              
                                                                        
         SUM = 0.                                                       
         DO 20  K = MAZIM, NSTR-1                                       
            SUM = SUM + GL(K) * YLMC(K,IQ) * YLM0(K)                    
20       CONTINUE                                                       
         ZJ(IQ) = ( 2. - DELM0 ) * FBEAM * SUM / (4.0*PI)               
40    CONTINUE                                                          
                                                                        
C                  ** FIND L-U (LOWER/UPPER TRIANGULAR) DECOMPOSITION   
C                  ** OF -ARRAY- AND SEE IF IT IS NEARLY SINGULAR       
C                  ** (NOTE:  -ARRAY- IS DESTROYED)                     
      RCOND = 0.0                                                       
      CALL  DGECO( ARRAY, MXCMU, NSTR, IPVT, RCOND, WK )                
      IF ( 1.0+RCOND .EQ. 1.0 )  CALL  ERRMSG                           
     $   ( 'UPBEAM--dGECO SAYS MATRIX NEAR SINGULAR',.FALSE.)           
                                                                        
C                ** SOLVE LINEAR SYSTEM WITH COEFF MATRIX -ARRAY-       
C                ** (ASSUMED ALREADY L-U DECOMPOSED) AND R.H. SIDE(S)   
C                ** -ZJ-;  RETURN SOLUTION(S) IN -ZJ-                   
      JOB =   0                                                         
      CALL  DGESL( ARRAY, MXCMU, NSTR, IPVT, ZJ, JOB )                  
      DO 50  IQ = 1, NN                                                 
         ZZ( IQ+NN )   = ZJ( IQ )                                       
         ZZ( NN+1-IQ ) = ZJ( IQ+NN )                                    
50    CONTINUE                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE  UPISOT( ARRAY, CC, CMU, IPVT, MXCMU, NN, NSTR, OPRIM, 
     $                    WK, XR0, XR1, Z0, Z1, ZPLK0, ZPLK1 )          
                                                                        
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
C       FINDS THE PARTICULAR SOLUTION OF THERMAL RADIATION OF SS(15)    
                                                                        
C     ROUTINES CALLED:  DGECO, DGESL                                    
                                                                        
C   I N P U T     V A R I A B L E S:                                    
                                                                        
C       CC     :  CAPITAL-C-SUB-IJ IN EQ. SS(5)                         
C       CMU    :  ABSCISSAE FOR GAUSS QUADRATURE OVER ANGLE COSINE      
C       OPRIM  :  DELTA-M SCALED SINGLE SCATTERING ALBEDO               
C       XR0    :  EXPANSION OF THERMAL SOURCE FUNCTION                  
C       XR1    :  EXPANSION OF THERMAL SOURCE FUNCTION EQS. SS(14-16)   
C       (REMAINDER ARE 'DISORT' INPUT VARIABLES)                        
                                                                        
C    O U T P U T    V A R I A B L E S:                                  
                                                                        
C       Z0     :  SOLUTION VECTORS Z-SUB-ZERO OF EQ. SS(16)             
C       Z1     :  SOLUTION VECTORS Z-SUB-ONE  OF EQ. SS(16)             
C       ZPLK0, :  PERMANENT STORAGE FOR -Z0,Z1-, BUT RE-ORDERED         
C        ZPLK1                                                          
                                                                        
C   I N T E R N A L    V A R I A B L E S:                               
                                                                        
C       ARRAY  :  COEFFICIENT MATRIX IN LEFT-HAND SIDE OF EQ. SS(16)    
C       IPVT   :  INTEGER VECTOR OF PIVOT INDICES REQUIRED BY *LINPACK* 
C       WK     :  SCRATCH ARRAY REQUIRED BY *LINPACK*                   
C+---------------------------------------------------------------------+
                                                                        
      INTEGER IPVT(*)                                                   
      REAL*8    ARRAY( MXCMU,* ), CC( MXCMU,* ), CMU(*), WK(*),         
     $        Z0(*), Z1(*), ZPLK0(*), ZPLK1(*)                          
                                                                        
                                                                        
      DO 20 IQ = 1, NSTR                                                
                                                                        
         DO 10 JQ = 1, NSTR                                             
            ARRAY(IQ,JQ) = - CC(IQ,JQ)                                  
10       CONTINUE                                                       
         ARRAY(IQ,IQ) = 1.0 + ARRAY(IQ,IQ)                              
                                                                        
         Z1(IQ) = XR1                                                   
         Z0(IQ) = (1.-OPRIM) * XR0 + CMU(IQ) * Z1(IQ)                   
20    CONTINUE                                                          
C                       ** SOLVE LINEAR EQUATIONS: SAME AS IN *UPBEAM*, 
C                       ** EXCEPT -ZJ- REPLACED BY -Z0-                 
      RCOND = 0.0                                                       
      CALL  DGECO( ARRAY, MXCMU, NSTR, IPVT, RCOND, WK )                
      IF ( 1.0+RCOND .EQ. 1.0 )  CALL  ERRMSG                           
     $   ( 'UPISOT--dGECO SAYS MATRIX NEAR SINGULAR',.FALSE.)           
                                                                        
      CALL  DGESL( ARRAY, MXCMU, NSTR, IPVT, Z0, 0 )                    
                                                                        
      DO 30  IQ = 1, NN                                                 
         ZPLK0( IQ+NN )   = Z0( IQ )                                    
         ZPLK1( IQ+NN )   = Z1( IQ )                                    
         ZPLK0( NN+1-IQ ) = Z0( IQ+NN )                                 
         ZPLK1( NN+1-IQ ) = Z1( IQ+NN )                                 
30    CONTINUE                                                          
                                                                        
      RETURN                                                            
      END                                                               
      SUBROUTINE  USRINT( BPLANK, CMU, CWT, DELM0, EMU, EXPBEA,         
     $                    FBEAM, FISOT, GC, GU, KK, LAMBER, LAYRU, LL,  
     $                    LYRCUT, MAZIM, MXCMU, MXULV, MXUMU, NCUT,     
     $                    NLYR, NN, NSTR, PLANK, NUMU, NTAU, PI, RMU,   
     $                    TAUCPR, TPLANK, UMU, UMU0, UTAUPR, WK,        
     $                    ZBEAM, Z0U, Z1U, ZZ, ZPLK0, ZPLK1, UUM )      
                                                                        
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
C       COMPUTES INTENSITY COMPONENTS AT USER OUTPUT ANGLES             
C       FOR AZIMUTHAL EXPANSION TERMS IN EQ. SD(2)                      
                                                                        
C   I N P U T    V A R I A B L E S:                                     
                                                                        
C       BPLANK :  INTEGRATED PLANCK FUNCTION FOR EMISSION FROM          
C                 BOTTOM BOUNDARY                                       
C       CMU    :  ABSCISSAE FOR GAUSS QUADRATURE OVER ANGLE COSINE      
C       CWT    :  WEIGHTS FOR GAUSS QUADRATURE OVER ANGLE COSINE        
C       DELM0  :  KRONECKER DELTA, DELTA-SUB-M0                         
C       EMU    :  SURFACE DIRECTIONAL EMISSIVITY (USER ANGLES)          
C       EXPBEA :  TRANSMISSION OF INCIDENT BEAM, EXP(-TAUCPR/UMU0)      
C       GC     :  EIGENVECTORS AT POLAR QUADRATURE ANGLES, SC(1)        
C       GU     :  EIGENVECTORS INTERPOLATED TO USER POLAR ANGLES        
C                 (I.E., G IN EQ. SC(1) )                               
C       KK     :  EIGENVALUES OF COEFF. MATRIX IN EQ. SS(7)             
C       LAYRU  :  LAYER NUMBER OF USER LEVEL -UTAU-                     
C       LL     :  CONSTANTS OF INTEGRATION IN EQ. SC(1), OBTAINED       
C                 BY SOLVING SCALED VERSION OF EQ. SC(5);               
C                 EXPONENTIAL TERM OF EQ. SC(12) NOT INCLUDED           
C       LYRCUT :  LOGICAL FLAG FOR TRUNCATION OF COMPUT. LAYER          
C       MAZIM  :  ORDER OF AZIMUTHAL COMPONENT                          
C       NCUT   :  TOTAL NUMBER OF COMPUTATIONAL LAYERS CONSIDERED       
C       NN     :  ORDER OF DOUBLE-GAUSS QUADRATURE (NSTR/2)             
C       RMU    :  SURFACE BIDIRECTIONAL REFLECTIVITY (USER ANGLES)      
C       TAUCPR :  CUMULATIVE OPTICAL DEPTH (DELTA-M-SCALED)             
C       TPLANK :  INTEGRATED PLANCK FUNCTION FOR EMISSION FROM          
C                 TOP BOUNDARY                                          
C       UTAUPR :  OPTICAL DEPTHS OF USER OUTPUT LEVELS IN DELTA-M       
C                    COORDINATES;  EQUAL TO  -UTAU- IF NO DELTA-M       
C       Z0U    :  Z-SUB-ZERO IN EQ. SS(16) INTERPOLATED TO USER         
C                 ANGLES FROM AN EQUATION DERIVED FROM SS(16)           
C       Z1U    :  Z-SUB-ONE IN EQ. SS(16) INTERPOLATED TO USER          
C                 ANGLES FROM AN EQUATION DERIVED FROM SS(16)           
C       ZZ     :  BEAM SOURCE VECTORS IN EQ. SS(19)                     
C       ZPLK0  :  THERMAL SOURCE VECTORS -Z0-, BY SOLVING EQ. SS(16)    
C       ZPLK1  :  THERMAL SOURCE VECTORS -Z1-, BY SOLVING EQ. SS(16)    
C       ZBEAM  :  INCIDENT-BEAM SOURCE VECTORS                          
C       (REMAINDER ARE 'DISORT' INPUT VARIABLES)                        
                                                                        
C   O U T P U T    V A R I A B L E S:                                   
                                                                        
C       UUM  :  AZIMUTHAL COMPONENTS OF THE INTENSITY IN EQ. STWJ(5)    
                                                                        
C   I N T E R N A L    V A R I A B L E S:                               
                                                                        
C       BNDDIR :  DIRECT INTENSITY DOWN AT THE BOTTOM BOUNDARY          
C       BNDDFU :  DIFFUSE INTENSITY DOWN AT THE BOTTOM BOUNDARY         
C       BNDINT :  INTENSITY ATTENUATED AT BOTH BOUNDARIES, STWJ(25-6)   
C       DTAU   :  OPTICAL DEPTH OF A COMPUTATIONAL LAYER                
C       LYREND :  END LAYER OF INTEGRATION                              
C       LYRSTR :  START LAYER OF INTEGRATION                            
C       PALINT :  INTENSITY COMPONENT FROM PARALLEL BEAM                
C       PLKINT :  INTENSITY COMPONENT FROM PLANCK SOURCE                
C       WK     :  SCRATCH VECTOR FOR SAVING 'EXP' EVALUATIONS           
C       ALL THE EXPONENTIAL FACTORS ( EXP1, EXPN,... ETC.)              
C       COME FROM THE SUBSTITUTION OF CONSTANTS OF INTEGRATION IN       
C       EQ. SC(12) INTO EQS. S1(8-9).  THEY ALL HAVE NEGATIVE           
C       ARGUMENTS SO THERE SHOULD NEVER BE OVERFLOW PROBLEMS.           
C+---------------------------------------------------------------------+
                                                                        
      LOGICAL  LAMBER, LYRCUT, PLANK, NEGUMU                            
      INTEGER  LAYRU(*)                                                 
      REAL*8 CMU(*),CWT(*),EMU(*),EXPBEA(0:*),GC( MXCMU,MXCMU,* ),      
     $         GU( MXUMU,MXCMU,* ), KK( MXCMU,* ), LL( MXCMU,* ),       
     $         RMU( MXUMU,0:* ), TAUCPR( 0:* ), UUM( MXUMU,MXULV,0:* ), 
     $         UMU(*), UTAUPR(*), WK(*), Z0U( MXUMU,* ), Z1U( MXUMU,* ),
     $         ZBEAM( MXUMU,* ), ZZ( MXCMU,* ), ZPLK0( MXCMU,* ),       
     $         ZPLK1( MXCMU,* )                                         
                                                                        
                                                                        
      CALL  ZEROIT( UUM, MXUMU*MXULV*(MXCMU+1) )                        
                                                                        
C                          ** INCORPORATE CONSTANTS OF INTEGRATION INTO 
C                          ** INTERPOLATED EIGENVECTORS                 
      DO 10  LC = 1, NCUT                                               
         DO  10  IQ = 1, NSTR                                           
            DO 10  IU = 1, NUMU                                         
               GU(IU,IQ,LC) = GU(IU,IQ,LC) * LL(IQ,LC)                  
10    CONTINUE                                                          
C                           ** LOOP OVER LEVELS AT WHICH INTENSITIES    
C                           ** ARE DESIRED ('USER OUTPUT LEVELS')       
      DO 200  LU = 1, NTAU                                              
                                                                        
         IF ( FBEAM .GT. 0.0 )  EXP0 = DEXP( - UTAUPR(LU) / UMU0 )      
         LYU = LAYRU(LU)                                                
C                              ** LOOP OVER POLAR ANGLES AT WHICH       
C                              ** INTENSITIES ARE DESIRED               
         DO 100  IU = 1, NUMU                                           
            IF ( LYRCUT .AND. LYU.GT.NCUT )  GO TO 100                  
            NEGUMU = UMU(IU).LT.0.0                                     
            IF( NEGUMU )  THEN                                          
               LYRSTR = 1                                               
               LYREND = LYU - 1                                         
               SGN = - 1.0                                              
            ELSE                                                        
               LYRSTR = LYU + 1                                         
               LYREND = NCUT                                            
               SGN = 1.0                                                
            END IF                                                      
C                          ** FOR DOWNWARD INTENSITY, INTEGRATE FROM TOP
C                          ** TO 'LYU-1' IN EQ. S1(8); FOR UPWARD,      
C                          ** INTEGRATE FROM BOTTOM TO 'LYU+1' IN S1(9) 
            PALINT = 0.0                                                
            PLKINT = 0.0                                                
            DO 30  LC = LYRSTR, LYREND                                  
                                                                        
               DTAU = TAUCPR(LC) - TAUCPR(LC-1)                         
               EXP1 =  DEXP( (UTAUPR(LU) - TAUCPR(LC-1)) / UMU(IU) )    
               EXP2 =  DEXP( (UTAUPR(LU) - TAUCPR( LC )) / UMU(IU) )    
                                                                        
               IF ( PLANK .AND. MAZIM.EQ.0 )                            
     $           PLKINT = PLKINT + SGN * ( Z0U(IU,LC) * (EXP1 - EXP2) + 
     $                    Z1U(IU,LC) * ( (TAUCPR(LC-1) + UMU(IU))*EXP1 -
     $                                   (TAUCPR(LC) + UMU(IU))*EXP2 ) )
                                                                        
               IF ( FBEAM.GT.0.0 )  THEN                                
                  DENOM = 1.0 + UMU(IU) / UMU0                          
                  IF ( DABS(DENOM).LT.0.0001 ) THEN                     
C                                                   ** L'HOSPITAL LIMIT 
                     EXPN = ( DTAU / UMU0 ) * EXP0                      
                  ELSE                                                  
                     EXPN = ( EXP1 * EXPBEA(LC-1) - EXP2 * EXPBEA(LC) ) 
     $                      * SGN / DENOM                               
                  END IF                                                
                  PALINT = PALINT + ZBEAM(IU,LC) * EXPN                 
               ENDIF                                                    
C                                                   ** -KK- IS NEGATIVE 
               DO 20  IQ = 1, NN                                        
                  WK(IQ) = DEXP( KK(IQ,LC) * DTAU )                     
                  DENOM = 1.0 + UMU(IU) * KK(IQ,LC)                     
                  IF ( DABS(DENOM).LT.0.0001 ) THEN                     
C                                                   ** L'HOSPITAL LIMIT 
                     EXPN = DTAU / UMU(IU) * EXP2                       
                  ELSE                                                  
                     EXPN = SGN * ( EXP1 * WK(IQ) - EXP2 ) / DENOM      
                  END IF                                                
                  PALINT = PALINT + GU(IU,IQ,LC) * EXPN                 
20             CONTINUE                                                 
C                                                   ** -KK- IS POSITIVE 
               DO 21  IQ = NN+1, NSTR                                   
                  DENOM = 1.0 + UMU(IU) * KK(IQ,LC)                     
                  IF ( DABS(DENOM).LT.0.0001 ) THEN                     
C                                                   ** L'HOSPITAL LIMIT 
                     EXPN = - DTAU / UMU(IU) * EXP1                     
                  ELSE                                                  
                     EXPN = SGN *( EXP1 - EXP2 * WK(NSTR+1-IQ) ) / DENOM
                  END IF                                                
                  PALINT = PALINT + GU(IU,IQ,LC) * EXPN                 
21             CONTINUE                                                 
                                                                        
30          CONTINUE                                                    
C                           ** CALCULATE CONTRIBUTION FROM USER         
C                           ** OUTPUT LEVEL TO NEXT COMPUTATIONAL LEVEL 
                                                                        
            DTAU1 = UTAUPR(LU) - TAUCPR(LYU-1)                          
            DTAU2 = UTAUPR(LU) - TAUCPR(LYU)                            
            IF( DABS(DTAU1).LT.1.E-6 .AND. NEGUMU )  GO TO 50           
            IF( DABS(DTAU2).LT.1.E-6 .AND. (.NOT.NEGUMU) )  GO TO 50    
            IF( NEGUMU ) EXP1 = DEXP( DTAU1 / UMU(IU) )                 
            IF( .NOT.NEGUMU ) EXP2 = DEXP( DTAU2 / UMU(IU) )            
                                                                        
            IF ( FBEAM.GT.0.0 )  THEN                                   
               DENOM = 1.0 + UMU(IU) / UMU0                             
               IF ( DABS(DENOM).LT.0.0001 ) THEN                        
                  EXPN =  ( DTAU1 / UMU0 ) * EXP0                       
               ELSE IF ( NEGUMU ) THEN                                  
                  EXPN = ( EXP0 - EXPBEA(LYU-1) * EXP1 ) / DENOM        
               ELSE                                                     
                  EXPN = ( EXP0 - EXPBEA(LYU) * EXP2 ) / DENOM          
               END IF                                                   
               PALINT = PALINT + ZBEAM(IU,LYU) * EXPN                   
            ENDIF                                                       
C                                                   ** -KK- IS NEGATIVE 
            DTAU = TAUCPR(LYU) - TAUCPR(LYU-1)                          
            DO 40  IQ = 1, NN                                           
               DENOM = 1.0 + UMU(IU) * KK(IQ,LYU)                       
               IF ( DABS(DENOM).LT.0.0001 ) THEN                        
                  EXPN = - DTAU2 / UMU(IU) * EXP2                       
               ELSE IF ( NEGUMU ) THEN                                  
                  EXPN = ( DEXP( - KK(IQ,LYU) * DTAU2 ) -               
     $                     DEXP( KK(IQ,LYU) * DTAU ) * EXP1 ) / DENOM   
               ELSE                                                     
                  EXPN = ( DEXP( - KK(IQ,LYU) * DTAU2 ) - EXP2 ) / DENOM
               END IF                                                   
               PALINT = PALINT + GU(IU,IQ,LYU) * EXPN                   
40          CONTINUE                                                    
C                                                   ** -KK- IS POSITIVE 
            DO 41  IQ = NN+1, NSTR                                      
               DENOM = 1.0 + UMU(IU) * KK(IQ,LYU)                       
               IF ( DABS(DENOM).LT.0.0001 ) THEN                        
                  EXPN = - DTAU1 / UMU(IU) * EXP1                       
               ELSE IF ( NEGUMU ) THEN                                  
                  EXPN = ( DEXP(- KK(IQ,LYU) * DTAU1 ) - EXP1 ) / DENOM 
               ELSE                                                     
                  EXPN = ( DEXP( - KK(IQ,LYU) * DTAU1 ) -               
     $                     DEXP( - KK(IQ,LYU) * DTAU ) * EXP2 ) / DENOM 
               END IF                                                   
               PALINT = PALINT + GU(IU,IQ,LYU) * EXPN                   
41          CONTINUE                                                    
                                                                        
            IF ( PLANK .AND. MAZIM.EQ.0 )  THEN                         
              IF ( NEGUMU ) THEN                                        
                 EXPN = EXP1                                            
                 FACT = TAUCPR(LYU-1) + UMU(IU)                         
              ELSE                                                      
                 EXPN = EXP2                                            
                 FACT = TAUCPR( LYU ) + UMU(IU)                         
              END IF                                                    
              PLKINT = PLKINT + Z0U(IU,LYU) * ( 1.- EXPN ) +            
     $                 Z1U(IU,LYU) *( UTAUPR(LU) + UMU(IU) - FACT*EXPN )
            END IF                                                      
C                            ** CALCULATE INTENSITY COMPONENTS          
C                            ** ATTENUATED AT BOTH BOUNDARIES.          
C                            ** NOTE:: NO AZIMUTHAL INTENSITY           
C                            ** COMPONENT FOR ISOTROPIC SURFACE         
50          BNDINT = 0.0                                                
            IF ( NEGUMU .AND. MAZIM.EQ.0 ) THEN                         
              BNDINT = ( FISOT + TPLANK ) * DEXP( UTAUPR(LU) / UMU(IU) )
            ELSE IF ( .NOT.NEGUMU ) THEN                                
              IF ( LYRCUT .OR. (LAMBER .AND. MAZIM.GT.0) )  GO TO 90    
              DO 60  JQ = NN+1, NSTR                                    
           WK(JQ) = DEXP(-KK(JQ,NLYR)*(TAUCPR(NLYR)-TAUCPR(NLYR-1)))    
60            CONTINUE                                                  
              BNDDFU = 0.0                                              
              DO 80  IQ = NN, 1, -1                                     
                 DFUINT = 0.0                                           
                 DO 70  JQ = 1, NN                                      
                    DFUINT = DFUINT + GC(IQ,JQ,NLYR) * LL(JQ,NLYR)      
70               CONTINUE                                               
                 DO 71  JQ = NN+1, NSTR                                 
                    DFUINT = DFUINT + GC(IQ,JQ,NLYR) * LL(JQ,NLYR)      
     $                                * WK(JQ)                          
71               CONTINUE                                               
                 IF ( FBEAM.GT.0.0 )                                    
     $                DFUINT = DFUINT + ZZ(IQ,NLYR) * EXPBEA(NLYR)      
                 DFUINT = DFUINT + DELM0 * ( ZPLK0(IQ,NLYR)             
     $                                + ZPLK1(IQ,NLYR) * TAUCPR(NLYR) ) 
                 BNDDFU = BNDDFU + ( 1. + DELM0 ) * RMU(IU,NN+1-IQ)     
     $                           * CMU(NN+1-IQ) * CWT(NN+1-IQ) * DFUINT 
80            CONTINUE                                                  
                                                                        
              BNDDIR = 0.0                                              
              IF (FBEAM.GT.0.0) BNDDIR = UMU0*FBEAM/PI * RMU(IU,0)      
     $                                   * EXPBEA(NLYR)                 
              BNDINT = ( BNDDFU + BNDDIR + DELM0 * EMU(IU) * BPLANK )   
     $                 * DEXP( (UTAUPR(LU)-TAUCPR(NLYR)) / UMU(IU) )    
            END IF                                                      
                                                                        
90          UUM( IU, LU, MAZIM ) = PALINT + PLKINT + BNDINT             
                                                                        
100      CONTINUE                                                       
200   CONTINUE                                                          
                                                                        
      RETURN                                                            
      END                                                               
      SUBROUTINE VSA(IHAZE,VIS,CEILHT,DEPTH,ZINVHT,Z,RH,AHAZE,IH)       
C                                                                       
C     VERTICAL STRUCTURE ALGORITHM                                      
C                                                                       
C     FROM U.S. ARMY ATMOSPHERIC SCIENCES LAB                           
C     WHITE SANDS MISSILE RANGE, NM                                     
C                                                                       
C     CREATES A PROFILE OF AEROSOL DENSITY NEAR THE GROUND,INCLUDING    
C     CLOUDS AND FOG                                                    
C                                                                       
C     THESE PROFILES ARE AT 9 HEIGHTS BETWEEN 0 KM AND 2 KM             
C                                                                       
C                                                                       
C  ***VISIBILITY IS ASSUMED TO BE THE SURFACE VISIBILITY***             
C                                                                       
C     IHAZE  = THE TYPE OF AEROSOL                                      
C     VIS    = VISIBILITY IN KM AT THE SURFACE                          
C     CEILHT = THE CLOUD CEILING HEIGHT IN KM                           
C     DEPTH  = THE CLOUD/FOG DEPTH IN KM                                
C     ZINVHT = THE HEIGHT OF INVERSION OR BOUNDARY LAYER IN KM          
C                                                                       
C     VARIABLES USED IN VSA                                             
C                                                                       
C     ZC     = CLOUD CEILING HEIGHT IN M                                
C     ZT     = CLOUD DEPTH IN M                                         
C     ZINV   = INVERSION HEIGHT IN M                                    
C           SEE BELOW FOR MORE INFORMATION ABOUT ZC, ZT, AND ZINV       
C     D      = INITIAL EXTINCTION AT THE SURFACE (D=3.912/VIS-0.012)    
C     ZALGO  = THE DEPTH OF THE LAYER FOR THE ALGORITHM                 
C                                                                       
C     OUTPUT FROM VSA:                                                  
C                                                                       
C     Z      = HEIGHT IN KM                                             
C     RH     = RELATIVE HUMIDITY AT HEIGHT Z IN PERCENT                 
C     AHAZE  = EXTINCTION AT HEIGHT Z IN KM**-1                         
C     IH     = AEROSAL TYPE FOR HEIGHT Z                                
C     HMAX   = MAXIMUM HEIGHT IN KM USED IN VSA, NOT NECESSARILY 2.0 KM 
C                                                                       
C                                                                       
C     THE SLANT PATH CALCULATION USES THE FOLLOWING FUNCTION:           
C                                                                       
C                 EXT55=A*EXP(B*EXP(C*Z))                               
C                                                                       
C     WHERE 'Z' IS THE HEIGHT IN KILOMETERS,                            
C           'A' IS A FUNCTION OF EXT55 AT Z=0.0 AND IS ALWAYS POSITIVE, 
C           'B' AND 'C' ARE FUNCTIONS OF CLOUD CONDITIONS AND SURFACE   
C               VISIBILITY (EITHER A OR B CAN BE POSITIVE OR NEGATIVE), 
C           'EXT55' IS THE VISIBILE EXTINCTION COEFFICIENT IN KM**-1.   
C                                                                       
C     THEREFORE, THERE ARE 4 CASES DEPENDING ON THE SIGNS OF 'B' AND 'C'
C     CEILHT AND ZINVHT ARE USED AS SWITCHES TO DETERMINE WHICH CASE    
C     TO USE.  THE SURFACE EXTINCTION 'D' IS CALCULATED FROM THE        
C     VISIBILITY USING  D=3.912/VIS-0.012 AS FOLLOWS-                   
C                                                                       
C         CASE=1  FOG/CLOUD CONDITIONS                                  
C                 'B' LT 0.0, 'C' LT 0.0                                
C                 'D' GE 7.0   KM**-1                                   
C                 FOR A CLOUD 7.    KM**-1 IS THE BOUNDARY VALUE AT     
C                 THE CLOUD BASE AND 'Z' IS THE VERTICAL DISTANCE       
C                 INTO THE CLOUD.                                       
C                 VARIABLE USED:   DEPTH                                
C                 ** DEFAULT:  DEPTH OF FOG/CLOUD IS 0.2 KM WHEN        
C                              'DEPTH' IS 0.0                           
C                                                                       
C             =2  CLOUD CEILING PRESENT                                 
C                 'B' GT 0.0, 'C' GT 0.0                                
C                 VARIABLE USED:   CEILHT (MUST BE GE 0.0)              
C                 ** DEFAULTS:  CASE 2 - CEILHT IS CALCULATED FROM      
C                               SURFACE EXTINCTION                      
C                                                                       
C             =3  RADIATION FOG OR INVERSION OR BOUNDARY LAYER PRESENT  
C                 'B' LT 0.0, 'C' GT 0.0                                
C                 VIS LE 2.0 KM DEFAULTS TO A RADIATION FOG AT THE      
C                     GROUND AND OVERRIDES INPUT BOUNDARY AEROSOL TYPE  
C                 VIS GT 2.0 KM FOR AN INVERSION OR BOUNDARY LAYER      
C                     WITH INPUT BOUNDARY AEROSOL TYPE                  
C                 ** IHAZE=9 (RADIATION FOG) ALWAYS DEFAULTS TO A       
C                    RADIATION FOG NO MATTER WHAT THE VISIBILITY IS.    
C                 SWITCH VARIABLE: CEILHT (MUST BE LT 0.0)              
C                 VARIABLE USED:   ZINVHT (MUST BE GE 0.0)              
C                 ** CEILHT MUST BE LT 0.0 FOR ZINVHT TO BE USED **     
C                    HOWEVER, IF DEPTH IS GT 0.0 AND ZINVHT IS EQ 0.0,  
C                    THE PROGRAM WILL SUBSTITUTE DEPTH FOR ZINVHT.      
C                 ** DEFAULT:  FOR A RADIATION FOG ZINVHT IS 0.05 K     
C                              FOR AN INVERSION LAYER ZINVHT IS 2.0 KM  
C                                                                       
C           NOTE: IF IHAZE = 9, BUT VIS GT 2.0 KM RECOMEND              
C           THAT IHAZE DEFAULT TO RURAL AEROSOL                         
C                                                                       
C             =4  NO CLOUD CEILING, INVERSION LAYER, OR BOUNDARY        
C                 LAYER PRESENT, I.E. CLEAR SKIES                       
C                 EXTINCTION PROFILE CONSTANT WITH HEIGHT A SHORT       
C                 DISTANCE ABOVE THE SURFACE                            
C                                                                       
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                          
      DIMENSION Z(10),RH(10),AHAZE(10),IH(10)                           
      DIMENSION AA(2),CC(3),EE(4),A(2),B(2),C(2),FAC1(9),FAC2(9)        
      REAL KMTOM                                                        
      DATA AA/92.1,0.3981/,CC/-0.014,0.0125,-0.03 /,KMTOM/1000.0/       
C     THE LAST 3 VALUES OF EE BELOW ARE EXTINCTIONS FOR VISIBILITIES    
C     EQUAL TO 5.0, 23.0, AND 50.0 KM, RESPECTIVELY.                    
      DATA EE/7.0  ,0.7824,0.17009,0.012  /                             
      DATA FAC1/0.0,0.03,0.05,0.075,0.1,0.18,0.3,0.45,1.0/              
      DATA FAC2/0.0,0.03,0.1,0.18,0.3,0.45,0.6,0.78,1.0/                
Calley      WRITE(IPR,599)                                              
      IF (IPR .GT. 0) WRITE(IPR,599)                                    
C                                                                       
C     UPPER LIMIT ON VERTICAL DISTANCE - 2 KM                           
      ZHIGH=2000.                                                       
      HMAX=ZHIGH                                                        
      IF(VIS.GT.0.0)GO TO 5                                             
C     DEFAULT FOR VISIBILITY DEPENDS ON THE VALUE OF IHAZE.             
      IF(IHAZE.EQ.8)VIS=0.2                                             
      IF(IHAZE.EQ.9)VIS=0.5                                             
      IF(IHAZE.EQ.2.OR.IHAZE.EQ.5)VIS=5.0                               
      IF(IHAZE.EQ.1.OR.IHAZE.EQ.4.OR.IHAZE.EQ.7)VIS=23.0                
      IF(IHAZE.EQ.6)VIS=50.0                                            
C     IF(IHAZE.EQ.3)VIS= OR IHAZE = 10 VIS IS DETERMINED ELSEWHERE      
   5  D=3.912/VIS-0.012                                                 
C                                                                       
      ZC=CEILHT*KMTOM                                                   
      ZT=DEPTH*KMTOM                                                    
      ZINV=ZINVHT*KMTOM                                                 
C     IHAZE=9 (RADIATION FOG) IS ALWAYS CALCULATED AS A RADIATION FOG.  
      IF(IHAZE.EQ.9)ZC=-1.0                                             
C     ALSO, CHECK TO SEE IF THE FOG DEPTH FOR A RADIATION FOG           
C     WAS INPUT TO DEPTH INSTEAD OF THE CORRECT VARIABLE ZINVHT.        
      IF(IHAZE.EQ.9.AND.ZT.GT.0.0.AND.ZINV.EQ.0.0)ZINV=ZT               
C                                                                       
C     'IC' DEFINES WHICH CASE TO USE.                                   
      IC=2                                                              
      IF(D.GE.EE(1).AND.ZC.GE.0.0)IC=1                                  
C                                                                       
      IF(ZC.LT.0.0.AND.IC.EQ.2)IC=3                                     
      IF(ZINV.LT.0.0.AND.IC.EQ.3)IC=4                                   
      K=1                                                               
      GO TO (10,20,40,50),IC                                            
C                                                                       
C     CASE 1:  DEPTH FOG/CLOUD; INCREASING EXTINCTION WITH HEIGHT FROM  
C              CLOUD/FOG BASE TO CLOUD/FOG TOP.                         
 10   CONTINUE                                                          
      IF(ZC.LT.HMAX.AND.IC.EQ.2)K=2                                     
C     IC=-1 WHEN A CLOUD IS PRESENT AND THE PATH GOES INTO IT.          
C     USE CASE 2 OR 2' BELOW CLOUD AND CASE 1 INSIDE IT.                
      IF(K.EQ.2)IC=(-1)                                                 
C     THE BASE OF THE CLOUD HAS AN EXTINCTION COEFFICIENT OF 7.0   KM-1.
      IF(K.EQ.2)D=EE(1)                                                 
      A(K)=AA(1)                                                        
C     IF THE SURFACE EXTINCTION IS GREATER THAN THE UPPER LIMIT OF 92.1 
C     KM**-1, RUN THE ALGORITHM WITH AN UPPER LIMIT OF 'D+10'.          
      IF(D.GE.AA(1))A(K)=D+10.0                                         
      C(K)=CC(1)                                                        
Calley      IF(ZT.LE.0.0)WRITE(IPR  ,603)                               
Calley      IF(ZT.LE.0.0)WRITE(IPR  ,604)                               
Calley      IF(ZT.GT.0.0)WRITE(IPR  ,611)ZT                             
      IF(ZT.LE.0.0 .AND. IPR.GT.0) WRITE(IPR  ,603)                     
      IF(ZT.LE.0.0 .AND. IPR.GT.0) WRITE(IPR  ,604)                     
      IF(ZT.GT.0.0 .AND. IPR.GT.0) WRITE(IPR  ,611)ZT                   
C     IF THE DISTANCE FROM THE GROUND TO THE CLOUD/FOG TOP IS LESS      
C     THAN 2.0 KM, VSA WILL ONLY CALCULATE UP TO THE CLOUD TOP.         
      IF(ZT.LE.0.0)ZT=200.                                              
      HMAX=AMIN1(ZT+ZC,HMAX)                                            
      GO TO 60                                                          
C                                                                       
C     CASE 2:  CLEAR/HAZY/LIGHTLY FOGGY; INCREASING EXTINCTION WITH HEIG
C              UP TO THE CLOUD BASE.                                    
 20   A(K)=AA(2)                                                        
      E=EE(1)                                                           
Calley      IF(ZC.EQ.0.0)WRITE(IPR  ,600)                               
      IF(ZC.EQ.0.0 .AND. IPR.GT.0) WRITE(IPR  ,600)                     
      IF(ZC.EQ.0.0)THEN                                                 
        EAK =  ALOG(E/A(K) )                                            
        DAK =  ALOG(D/A(K) )                                            
        ANUM = EAK / DAK                                                
        IF(ANUM . GT. 0) THEN                                           
              CEIL = ALOG(ANUM)/CC(2)                                   
         ELSE                                                           
               CEIL = 2000.                                             
          ENDIF                                                         
      ENDIF                                                             
CC    IF(ZC.EQ.0.0)CEIL=ALOG(ALOG(E/A(K))/(ALOG(D/A(K))))/CC(2)         
Calley      IF(ZC.EQ.0.0)WRITE(IPR  ,602)CEIL                           
Calley      IF(ZC.GT.0.0)WRITE(IPR  ,610)ZC                             
      IF(ZC.EQ.0.0 .AND. IPR.GT.0) WRITE(IPR  ,602)CEIL                 
      IF(ZC.GT.0.0 .AND. IPR.GT.0) WRITE(IPR  ,610)ZC                   
      IF(ZC.EQ.0.0)ZC=CEIL                                              
      F = (VIS * ZC/350.0)**2                                           
C                                                                       
C     F IS A SCALING FACTOR USED IN CASE 2                              
C                                                                       
      DF = D/F                                                          
      IF(DF .LT. 1.0E-5) THEN                                           
           A(K)=D - (D*D/(2.*F))                                        
      ELSE                                                              
           A(K) = F*(1.0 - EXP(-D/F))                                   
      ENDIF                                                             
C                                                                       
C     THE COEFFICIENT A IS RECALCULATED BASED UPON THE SCALING FACTOR   
C                                                                       
      GO TO 60                                                          
C                                                                       
C                                                                       
C     CASE 3:  NO CLOUD CEILING BUT A RADIATION FOG OR AN INVERSION     
C              OR BOUNDARY LAYER PRESENT; DECREASING EXTINCTION WITH    
C              HEIGHT UP TO THE HEIGHT OF THE FOG OR LAYER.             
 40   A(K)=D*1.1                                                        
      E=EE(3)                                                           
      IF(IHAZE.EQ.2.OR.IHAZE.EQ.5)E=EE(2)                               
      IF(IHAZE.EQ.6.OR.(VIS.GT.2.0.AND.IHAZE.NE.9))E=EE(4)              
      IF(E.GT.D)E=D*0.99999                                             
      IF(ZT.GT.0.0.AND.ZINV.EQ.0.0.AND.VIS.LE.2.0)ZINV=ZT               
Calley    IF(ZINV.EQ.0.0.AND.VIS.GT.2.0.AND.IHAZE.NE.9)WRITE(IPR  ,601) 
Calley   IF(ZINV.EQ.0.0.AND.(VIS.LE.2.0.OR.IHAZE.EQ.9))WRITE(IPR  ,605) 
Calley   IF(ZINV.EQ.0.0.AND.(VIS.LE.2.0.OR.IHAZE.EQ.9))WRITE(IPR  ,604) 
CalleyIF(ZINV.GT.0.0.AND.VIS.GT.2.0.AND.IHAZE.NE.9)WRITE(IPR  ,612)ZINV 
Calley IF(ZINV.GT.0.0.AND.(VIS.LE.2.0.OR.IHAZE.EQ.9))WRITE(IPR,614)ZINV 
      IF(ZINV.EQ.0.0.AND.VIS.GT.2.0.AND.IHAZE.NE.9.AND.IPR.GT.0) WRITE( 
     +                                                       IPR  ,601) 
      IF(ZINV.EQ.0.0.AND.(VIS.LE.2.0.OR.IHAZE.EQ.9).AND.IPR.GT.0)WRITE( 
     +                                                       IPR  ,605) 
      IF(ZINV.EQ.0.0.AND.(VIS.LE.2.0.OR.IHAZE.EQ.9).AND.IPR.GT.0)WRITE( 
     +                                                       IPR  ,604) 
      IF(ZINV.GT.0.0.AND.VIS.GT.2.0.AND.IHAZE.NE.9.AND.IPR.GT.0) WRITE( 
     +                                                  IPR  ,612) ZINV 
      IF(ZINV.GT.0.0.AND.(VIS.LE.2.0.OR.IHAZE.EQ.9).AND.IPR.GT.0)WRITE( 
     +                                                     IPR,614)ZINV 
      IF(ZINV.EQ.0.0.AND.VIS.GT.2.0.AND.IHAZE.NE.9)ZINV=2000            
      IF(ZINV.EQ.0.0.AND.(VIS.LE.2.0.OR.IHAZE.EQ.9))ZINV= 50            
      HMAX=AMIN1(ZINV,HMAX)                                             
      ZC=0.0                                                            
      GO TO 60                                                          
C                                                                       
C     CASE 4:  NO CLOUD CEILING OR INVERSION LAYER;                     
C              CONSTANT EXTINCTION WITH HEIGHT.                         
C                                                                       
50     A(K) = EE(4)                                                     
       C(K) = CC(3)                                                     
C                                                                       
60               B(K)=ALOG(D/A(K))                                      
      IF(IC.EQ.2)C(K)=ALOG(ALOG(E/A(K))/B(K))/ZC                        
      IF(IC.EQ.3)C(K)=ALOG(ALOG(E/A(K))/B(K))/ZINV                      
      IF(ZC.LT.HMAX.AND.K.EQ.1.AND.IC.EQ.2)GO TO 10                     
      IF(IC.EQ.2)HMAX=AMIN1(ZC,HMAX)                                    
      ZALGO=HMAX                                                        
      IF(IC.LT.0)ZALGO=ZC                                               
Calley      WRITE(IPR  ,619)                                            
      IF (IPR .GT. 0) WRITE(IPR  ,619)                                  
      IF(IC.LT.0)K=1                                                    
C                                                                       
      DO 70 I=1,9                                                       
      IF(IC.LT.0.AND.I.EQ.5)K=2                                         
      IF(IC.LT.0.AND.I.EQ.5)ZALGO=HMAX-ZC                               
      Z(I)=ZALGO*(1.0-FAC2(10-I))                                       
      IF(IC.EQ.1)Z(I)=ZALGO*FAC1(I)                                     
      IF(IC.EQ.4)Z(I)=ZALGO*FLOAT(I-1)/8.0                              
      IF(IC.LT.0.AND.I.LT.5)Z(I)=ZALGO*(1.0-FAC2(11-2*I))               
      IF(IC.LT.0.AND.I.GE.5)Z(I)=ZALGO*FAC1(2*I-9)                      
C     IF(IC.LT.0.AND.(I.EQ.7.OR.I.EQ.8))Z(I)=ZALGO*FAC1(2*I-10)         
                 AHAZE(I)=A(K)*EXP(B(K)*EXP(C(K)*Z(I)))                 
      IF(IC.LE.0.AND.I.GE.5)Z(I)=Z(I)+ZC                                
      Z(I)=Z(I)/KMTOM                                                   
      RH(I)=6.953*ALOG(AHAZE(I))+86.407                                 
      IF(AHAZE(I).GE.EE(1))RH(I)=100.0                                  
      VISIB=3.912/(AHAZE(I)+0.012)                                      
      IH(I)=IHAZE                                                       
C     IF A RADIATION FOG IS PRESENT (I.E. VIS<=2.0 KM AND IC=3),        
C     IH IS SET TO 9 FOR ALL LEVELS.                                    
      IF(VISIB.LE.2.0.AND.IC.EQ.3)IH(I)=9                               
C     FOR A DEPTH FOG/CLOUD CASE, IH=8 DENOTING AN ADVECTION FOG.       
      IF(IC.EQ.1.OR.(IC.LT.0.AND.I.GE.5))IH(I)=8                        
Calley      WRITE(IPR  ,620)Z(I),RH(I),AHAZE(I),VISIB,IH(I)             
      IF (IPR .GT. 0) WRITE(IPR  ,620)Z(I),RH(I),AHAZE(I),VISIB,IH(I)   
   70 CONTINUE                                                          
      HMAX=HMAX/KMTOM                                                   
      RETURN                                                            
C                                                                       
599   FORMAT('0 VERTICAL STRUCTURE ALGORITHM (VSA) USED')               
600   FORMAT(1H ,50X,28HCLOUD CEILING HEIGHT UNKNOWN)                   
601   FORMAT(1H ,50X,42HINVERSION OR BOUNDARY LAYER HEIGHT UNKNOWN,/,   
     1  1H ,50X,39HVSA WILL USE A DEFAULT OF 2000.0 METERS,/)           
605   FORMAT(1H ,50X,27HRADIATION FOG DEPTH UNKNOWN)                    
619   FORMAT(5X,10HHEIGHT(KM),5X,7HR.H.(%),5X,16HEXTINCTION(KM-1),      
     1   5X,15HVIS(3.912/EXTN),5X,5HIHAZE,/)                            
620   FORMAT(7X,F7.4,7X,F5.1,8X,E12.4,11X,F7.4,10X,I2)                  
602   FORMAT(1H ,39X,35HVSA WILL USE A CALCULATED VALUE OF ,F7.1,       
     1       7H METERS,/)                                               
603   FORMAT(1H ,50X,19HCLOUD DEPTH UNKNOWN)                            
604   FORMAT(1H ,50X,38HVSA WILL USE A DEFAULT OF 200.0 METERS,/)       
610   FORMAT(1H ,50X,24HCLOUD CEILING HEIGHT IS ,F9.1,7H METERS,/)      
611   FORMAT(1H ,50X,15HCLOUD DEPTH IS ,F14.1,7H METERS,/)              
612   FORMAT(1H ,50X,38HINVERSION OR BOUNDARY LAYER HEIGHT IS ,F7.1,    
     1 7H METERS,/)                                                     
614   FORMAT(1H ,50X,26HDEPTH OF RADIATION FOG IS ,F7.1,7H METERS,/)    
613   FORMAT(1H ,50X,43HTHERE IS NO INVERSION OR BOUNDARY LAYER OR ,    
     1 13HCLOUD PRESENT,/)                                              
      END                                                               
      SUBROUTINE VSANSM(K,AHAZE,IHA1,ZNEW)                              
      INCLUDE 'PARAM.LST'                                               
      INTEGER KPOINT                                                    
      REAL WAVLEN,EXTC,ABSC,ASYM,AWCCON,TX,W,RELHUM,PATM,TBBY,WPATH     
      COMMON/BASE/WAVLEN(MXWVLN),EXTC(NAER,MXWVLN),ABSC(NAER,MXWVLN),   
     1  ASYM(NAER,MXWVLN),AWCCON(NAER),KPOINT(NSPC),TX(KMAX),W(KMAX),   
     2  RELHUM(LAYDIM),PATM(LAYTHR),TBBY(LAYTHR),WPATH(LAYTHR,KMAX)     
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                          
      INTEGER IKMAX,ML,ISSGEO,IMULT                                     
      COMMON/CNTRL/IKMAX,ML,ISSGEO,IMULT                                
      COMMON /CARD1/ MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB  
     1  ,MODTRN                                                         
      LOGICAL MODTRN                                                    
      COMMON /CARD1B/ JUNIT(15),WMOLI(12),WAIR1,JLOW                    
      COMMON /CARD2/ IHAZE,ISEASN,IVULCN,ICSTL,ICIR,IVSA,VIS,WSS,WHH,   
     1    RAINRT                                                        
      COMMON /ZVSALY/ ZVSA(10),RHVSA(10),AHVSA(10),IHVSA(10)            
      COMMON /NSINP/ ZMDL(40),PM(40),TM(40),WMDL(40,13)                 
C                                                                       
      COMMON /MDATA/P(LAYDIM),T(LAYDIM),WH(LAYDIM),WCO2(LAYDIM),        
     X WO(LAYDIM),WN2O(LAYDIM),WCO(LAYDIM),WCH4(LAYDIM),WO2(LAYDIM)     
      COMMON /MDATA1/ WNO(LAYDIM),WSO2(LAYDIM),WNO2(LAYDIM),            
     X WNH3(LAYDIM),WAIR(LAYDIM),WHNO3(LAYDIM)                          
      DIMENSION WMOL(13)                                                
C                                                                       
C     OUTPUT COMMON MDATA AND MDATA1                                    
C                                                                       
C                                                                       
C     MODEL 7 CODING                                                    
C     OLD LAYERS  AEROSOL RETURNED                                      
C     NEW LAYERS P,T,DP,AEROSOL                                         
C                                                                       
C                                                                       
C                                                                       
      JML=ML                                                            
      J=1                                                               
      KN=K                                                              
110   IF(KN.GT.10)GO TO 140                                             
      JL=J-1                                                            
      IF(JL.LT.1)JL=1                                                   
      JP=JL+1                                                           
      JLS = JL                                                          
      IF(ZVSA(KN).EQ.ZMDL  (JL))GO TO 140                               
      JLS = JP                                                          
      IF(ZVSA(KN).EQ.ZMDL  (JP))GO TO 140                               
      IF(ZVSA(KN).GT.ZMDL  (JL).AND.ZVSA(KN).LT.ZMDL  (JP))GO TO 115    
      IF(J. GE. JML) GO TO 115                                          
      J = J + 1                                                         
      GO TO 110                                                         
115   ZNEW=ZVSA(KN)                                                     
      DIF=ZMDL  (JP)-ZMDL  (JL)                                         
      DZ=ZVSA(KN)-ZMDL  (JL)                                            
      DLIN=DZ/DIF                                                       
      P(K)  = (PM(JP)-PM(JL))*DLIN+PM(JL)                               
      T(K)   =(TM(JP)-TM(JL))*DLIN+TM(JL)                               
      DO 120 KM = 1,13                                                  
      WMOL(KM)=(WMDL(JP,KM)-WMDL(JL,KM))*DLIN+WMDL(JL,KM)               
120   CONTINUE                                                          
      IHA1  =IHVSA(KN)                                                  
      AHAZE  =AHVSA(KN)                                                 
      FAC=(ZVSA(KN)-ZMDL  (JL))/DIF                                     
      IF(PM(JP).GT.0.0.AND.PM(JL).GT.0.) THEN                           
           P(K)  =PM(JL)*(PM(JP)/PM(JL))**FAC                           
      ENDIF                                                             
      IF(TM(JP).GT.0.0.AND.TM(JL).GT.0.) THEN                           
           T(K)   =TM(JL)*(TM(JP)/TM(JL))**FAC                          
      ENDIF                                                             
      DO 130 KM = 1,13                                                  
      IF(WMDL(JP,KM) .GT.0.0.AND.WMDL(JL,KM).GT.0.0) THEN               
           WMOL(KM)=(WMDL(JL,KM)*(WMDL(JP,KM))/WMDL(JL,KM))**FAC        
      ENDIF                                                             
130   CONTINUE                                                          
       WH(K)    = WMOL(1)                                               
       WCO2(K)  = WMOL(2)                                               
       WO(K)    = WMOL(3)                                               
       WN2O(K)  = WMOL(4)                                               
       WCO(K)   = WMOL(5)                                               
       WCH4(K)  = WMOL(6)                                               
       WO2(K)   = WMOL(7)                                               
       WNO(K)   = WMOL(8)                                               
       WSO2(K)  = WMOL(9)                                               
       WNO2(K)  = WMOL(10)                                              
       WNH3(K)  = WMOL(11)                                              
       WHNO3(K) = WMOL(12)                                              
       WAIR(K)  = WMOL(13)                                              
      RETURN                                                            
140   CONTINUE                                                          
      J = JLS                                                           
      IF(K.GT.10) THEN                                                  
         J = K - 10 + JLOW                                              
         IHA1  =0                                                       
         AHAZE  =0.                                                     
      ENDIF                                                             
      ZNEW = ZMDL(J)                                                    
      P(K)  =PM(J)                                                      
      T(K) = TM(J)                                                      
      DO 135 KM = 1,13                                                  
      WMOL(KM)= WMDL(J,KM)                                              
135   CONTINUE                                                          
       WH(K)    = WMOL(1)                                               
       WCO2(K)  = WMOL(2)                                               
       WO(K)    = WMOL(3)                                               
       WN2O(K)  = WMOL(4)                                               
       WCO(K)   = WMOL(5)                                               
       WCH4(K)  = WMOL(6)                                               
       WO2(K)   = WMOL(7)                                               
       WNO(K)   = WMOL(8)                                               
       WSO2(K)  = WMOL(9)                                               
       WNO2(K)  = WMOL(10)                                              
       WNH3(K)  = WMOL(11)                                              
       WHNO3(K) = WMOL(12)                                              
       WAIR(K)  = WMOL(13)                                              
      IF(KN.LE.9) IHA1  =IHVSA(KN)                                      
      IF(KN.LE.9)AHAZE  =AHVSA(KN)                                      
      RETURN                                                            
      END                                                               
      SUBROUTINE WATVAP(P,T)                                            
C*************************************************************          
C                                                                       
C        WRITTEN APR, 1985 TO ACCOMMODATE 'JCHAR' DEFINITIONS FOR       
C        UNIFORM DATA INPUT -                                           
C        RE-WRITTEN JULY, 1996 TO CORRECT COMMENTS, CORRECT RELATIVE    
C        HUMIDITY CHECK, SIMPLIFY                                       
C                                                                       
C     JCHAR    JUNIT                                                    
C                                                                       
C    " ",A       10    VOLUME MIXING RATIO (PPMV)                       
C        B       11    NUMBER DENSITY (CM-3)                            
C        C       12    MASS MIXING RATIO (GM(K)/KG(AIR))                
C        D       13    MASS DENSITY (GM M-3)                            
C        E       14    PARTIAL PRESSURE (MB)                            
C        F       15    DEW POINT TEMP (TD IN T(K)) - H2O ONLY           
C        G       16     "    "     "  (TD IN T(C)) - H2O ONLY           
C        H       17    RELATIVE HUMIDITY (RH IN PERCENT) - H2O ONLY     
C        I       18    AVAILABLE FOR USER DEFINITION                    
C        J       19    REQUEST DEFAULT TO SPECIFIED MODEL ATMOSPHERE    
C                                                                       
C     THIS SUBROUTINE COMPUTES THE WATER VAPOR MASS DENSITY (GM M-3)    
C     GIVEN HUMIDITY  # TD = DEW POINT TEMP(K,C), RH = RELATIVE         
C     (PERCENT), PPH2O = WATER VAPOR PARTIAL PRESSURE (MB), DENH2O =    
C     WATER VAPOR MASS DENSITY (GM M-3),AMSMIX = MASS MIXING RATIO      
C     (GM/KG).                                                          
C                     THE FUNCTION DENSAT FOR THE SATURATION            
C     WATER VAPOR DENSITY OVER WATER IS ACCURATE TO BETTER THAN 1       
C     PERCENT FROM -50 TO +50 DEG C. (SEE THE LOWTRAN3 OR 5 REPORT)     
C                                                                       
C       'JUNIT' GOVERNS CHOICE OF UNITS -                               
C                                                                       
C***********************************************************************
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                          
      COMMON /CARD1B/ JUNITP,JUNITT,JUNIT1(13),WMOL1(12),WAIR,JLOW      
      COMMON /CONSTN/ PZERO,TZERO,AVOGAD,ALOSMT,GASCON,PLANK,BOLTZ,     
     1    CLIGHT,ADCON,ALZERO,AVMWT,AIRMWT,AMWT(35)                     
      DATA C1/18.9766/,C2/-14.9595/,C3/-2.43882/                        
      DENSAT(ATEMP) = ATEMP*B*EXP(C1+C2*ATEMP+C3*ATEMP**2)*1.0E-6       
C*****                                                                  
      PSS = P / PZERO                                                   
      A = TZERO / T                                                     
      B = AVOGAD / AMWT(1)                                              
      WAIR = ALOSMT * PSS * A                                           
      JUNIT = JUNIT1(1)                                                 
      WMOL  = WMOL1(1)                                                  
      IF (JUNIT .EQ. 10) THEN                                           
C         given volume mixing ratio (ppmv)                              
          WMOL1(1) = WMOL * WAIR / B                                    
      ELSE IF (JUNIT .EQ. 11) THEN                                      
C         given number density                                          
          WMOL1(1) = 1.0E6 * WMOL / B                                   
      ELSE IF (JUNIT .EQ. 12) THEN                                      
C         given mass mixing ratio (gm kg-1)                             
          WMOL1(1) = 1.0E3 * WMOL * WAIR * AIRMWT / AVOGAD              
      ELSE IF (JUNIT .EQ. 13) THEN                                      
C         given mass density (gm m-3)                                   
          WMOL1(1) = WMOL                                               
      ELSE IF (JUNIT .EQ. 14) THEN                                      
C         given water vapor partial pressure (mb)                       
          WMOL1(1) = 1.0E6 * WAIR * WMOL / (B * P)                      
      ELSE IF (JUNIT .EQ. 15) THEN                                      
C         given dewpoint (deg K)                                        
          WMOL1(1) = 1.0E6 * DENSAT(TZERO/WMOL) * WMOL / (B * T)        
      ELSE IF (JUNIT .EQ. 16) THEN                                      
C         given dewpoint (deg C)                                        
          WMOL1(1)=1.E6*DENSAT(TZERO/(TZERO+WMOL))*(TZERO+WMOL)/(B*T)   
      ELSE IF (JUNIT .EQ. 17) THEN                                      
C         given relative humidity (percent)                             
          WMOL1(1) = 1.0E6 * DENSAT(A) * (WMOL/100.0) / B               
      ELSE                                                              
C         given invalid JUNIT                                           
Calley          WRITE (IPR,100) JUNIT                                   
          IF (IPR .GT. 0) WRITE (IPR,100) JUNIT                         
  100     FORMAT(/,'  **** ERROR IN WATVAP ****, JUNIT = ',I5)          
          STOP 'JUNIT'                                                  
      END IF                                                            
C     insure that relative humidity is valid                            
      RHP = 100.0 * WMOL1(1) * B / (1.0E6 * DENSAT(A))                  
Calley      IF(RHP.GT.100.0) WRITE(IPR,200) RHP                         
      IF(RHP.GT.100.0 .AND. IPR.GT.0) WRITE(IPR,200) RHP                
  200 FORMAT(/,' ********WARNING (FROM WATVAP) # RELATIVE HUMIDTY = ',  
     1    G10.3,' IS GREATER THAN 100 PERCENT')                         
C                                                                       
      RETURN                                                            
      END                                                               
      LOGICAL FUNCTION  WRTBAD ( VARNAM )                               
                                                                        
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
C          WRITE NAMES OF ERRONEOUS VARIABLES AND RETURN 'TRUE'         
                                                                        
C      INPUT :   VARNAM = NAME OF ERRONEOUS VARIABLE TO BE WRITTEN      
C                         ( CHARACTER, ANY LENGTH )                     
C ----------------------------------------------------------------------
      CHARACTER*(*)  VARNAM                                             
      INTEGER        MAXMSG, NUMMSG                                     
      SAVE  NUMMSG, MAXMSG                                              
      DATA  NUMMSG / 0 /,  MAXMSG / 50 /                                
                                                                        
C                                                                       
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                          
                                                                        
      WRTBAD = .TRUE.                                                   
      NUMMSG = NUMMSG + 1                                               
Calley      WRITE ( *, '(3A)' )  ' ****  INPUT VARIABLE  ', VARNAM,     
      IF (IPR.GT.0) WRITE (IPR,'(3A)')' ****  INPUT VARIABLE  ',VARNAM, 
     $                     '  IN ERROR  ****'                           
      IF ( NUMMSG.EQ.MAXMSG )                                           
     $   CALL  ERRMSG ( 'TOO MANY INPUT ERRORS.  ABORTING...$', .TRUE. )
      RETURN                                                            
      END                                                               
      LOGICAL FUNCTION  WRTDIM ( DIMNAM, MINVAL )                       
                                                                        
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
C          WRITE NAME OF TOO-SMALL SYMBOLIC DIMENSION AND               
C          THE VALUE IT SHOULD BE INCREASED TO;  RETURN 'TRUE'          
                                                                        
C      INPUT :  DIMNAM = NAME OF SYMBOLIC DIMENSION WHICH IS TOO SMALL  
C                        ( CHARACTER, ANY LENGTH )                      
C               MINVAL = VALUE TO WHICH THAT DIMENSION SHOULD BE        
C                        INCREASED (AT LEAST)                           
C ----------------------------------------------------------------------
      CHARACTER*(*)  DIMNAM                                             
      INTEGER        MINVAL                                             
                                                                        
C                                                                       
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                          
                                                                        
Calley    WRITE ( *, '(3A,I7)' ) ' ****  SYMBOLIC DIMENSION  ', DIMNAM, 
      IF (IPR.GT.0) WRITE (IPR,'(3A,I7)')' ****  SYMBOLIC DIMENSION  ', 
     +                                                          DIMNAM, 
     $                     '  SHOULD BE INCREASED TO AT LEAST ', MINVAL 
      WRTDIM = .TRUE.                                                   
      RETURN                                                            
      END                                                               
      BLOCK DATA WVBNRG                                                 
C>    BLOCK DATA                                                        
C     WAVENUMBER-LOW AND WAVENUMBER-HIGH SPECIFY A BAND REGION          
C     FOR A MOLECULAR ABSORBER.                                         
C     THE UNIT FOR WAVENUMBER IS 1/CM.                                  
C     -999 IS AN INDICATOR TO INDICATE THE END OF ABSORPTION BANDS      
C     FOR ANY SPECIFIC ABSORBER.                                        
      COMMON /WNLOHI/                                                   
     L   IWLH2O(15),IWLO3 ( 6),IWLCO2(11),IWLCO ( 4),IWLCH4( 5),        
     L   IWLN2O(12),IWLO2 ( 7),IWLNH3( 3),IWLNO ( 2),IWLNO2( 4),        
     L   IWLSO2( 5),                                                    
     H   IWHH2O(15),IWHO3 ( 6),IWHCO2(11),IWHCO ( 4),IWHCH4( 5),        
     H   IWHN2O(12),IWHO2 ( 7),IWHNH3( 3),IWHNO ( 2),IWHNO2( 4),        
     H   IWHSO2( 5)                                                     
C                                                                       
      DATA IWLH2O/   0,    350,   1005,   1645,   2535,   3425,   4315, 
     L    6155,   8005,   9620,  11545,  13075,  14865,  16340,   -999/ 
      DATA IWHH2O/ 345,   1000,   1640,   2530,   3420,   4310,   6150, 
     H    8000,   9615,  11540,  13070,  14860,  16045,  17860,   -999/ 
C                                                                       
      DATA IWLO3 /   0,    515,   1630,   2670,   2850,   -999/         
      DATA IWHO3 / 200,   1275,   2295,   2845,   3260,   -999/         
C                                                                       
      DATA IWLCO2/ 425,    840,   1805,   3070,   3760,   4530,   5905, 
     L    7395,   8030,   9340,   -999/                                 
      DATA IWHCO2/ 835,   1440,   2855,   3755,   4065,   5380,   7025, 
     H    7785,   8335,   9670,   -999/                                 
C                                                                       
      DATA IWLCO /   0,   1940,   4040,   -999/                         
      DATA IWHCO / 175,   2285,   4370,   -999/                         
C                                                                       
      DATA IWLCH4/1065,   2345,   4110,   5865,   -999/                 
      DATA IWHCH4/1775,   3230,   4690,   6135,   -999/                 
C                                                                       
      DATA IWLN2O/   0,    490,    865,   1065,   1545,   2090,   2705, 
     L    3245,   4260,   4540,   4910,   -999/                         
      DATA IWHN2O/ 120,    775,    995,   1385,   2040,   2655,   2865, 
     H    3925,   4470,   4785,   5165,   -999/                         
C                                                                       
      DATA IWLO2 /   0,   7650,   9235,  12850,  14300,  15695,   -999/ 
      DATA IWHO2 / 265,   8080,   9490,  13220,  14600,  15955,   -999/ 
C                                                                       
      DATA IWLNH3/   0,    390,   -999/                                 
      DATA IWHNH3/ 385,   2150,   -999/                                 
C                                                                       
      DATA IWLNO /1700,   -999/                                         
      DATA IWHNO /2005,   -999/                                         
C                                                                       
      DATA IWLNO2/ 580,   1515,   2800,   -999/                         
      DATA IWHNO2/ 925,   1695,   2970,   -999/                         
C                                                                       
      DATA IWLSO2/   0,    400,    950,   2415,   -999/                 
      DATA IWHSO2/ 185,    650,   1460,   2580,   -999/                 
      END                                                               
      SUBROUTINE XINTRP(LAYX,IXMOLS)                                    
C                                                                       
C     THIS SUBROUTINE EXPONENTIALLY INTERPOLATES THE PROFILE            
C     DENX ON THE ALTITUDE GRID ZX INTO DENM ON THE GRID ZM.            
C                                                                       
C     DECLARE ARGUMENTS.                                                
      INTEGER LAYX,IXMOLS                                               
C                                                                       
C     DECLARE PARAMETERS.                                               
      INCLUDE 'PARAM.LST'                                               
C                                                                       
C     LIST COMMONS.                                                     
      INTEGER IRD,IPR,IPU,NPR,IPR1,ISCRCH                               
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                           
      INTEGER IKMAX,ML,ISSGEO,IMULT                                     
      COMMON/CNTRL/IKMAX,ML,ISSGEO,IMULT                                
      REAL PZERO,TZERO,AVOGAD,ALOSMT,GASCON,PLANK,BOLTZ,                
     1  CLIGHT,ADCON,ALZERO,AVMWT,AIRMWT,AMWT                           
      COMMON/CONSTN/PZERO,TZERO,AVOGAD,ALOSMT,GASCON,PLANK,BOLTZ,       
     1  CLIGHT,ADCON,ALZERO,AVMWT,AIRMWT,AMWT(35)                       
      REAL P,T,WH,WCO2,WO,WN2O,WCO,WCH4,WO2                             
      COMMON/MDATA/P(LAYDIM),T(LAYDIM),WH(LAYDIM),WCO2(LAYDIM),         
     1  WO(LAYDIM),WN2O(LAYDIM),WCO(LAYDIM),WCH4(LAYDIM),WO2(LAYDIM)    
      REAL ZM,PM,TM,RFNDX,DENSTY                                        
      COMMON/MODEL/ZM(LAYDIM),PM(LAYDIM),TM(LAYDIM),                    
     1  RFNDX(LAYDIM),DENSTY(KMAX,LAYDIM)                               
      REAL DENM,DENP                                                    
      COMMON/DEAMT/DENM(35,LAYTWO),DENP(35,LAYTHR+1)                    
      REAL ZX,DTMP,DENX                                                 
      COMMON/XPDEM/ZX(LAYDIM),DTMP(35),DENX(35,LAYDIM)                  
C                                                                       
C     DECLARE FUNCTIONS.                                                
      REAL EXPINT                                                       
C                                                                       
C     DECLARE LOCAL VARIABLES.                                          
      INTEGER LX,L,K                                                    
      REAL A,RHOAIR                                                     
C                                                                       
C     BEGIN CALCULATION.                                                
      LX=2                                                              
      DO 30 L=1,ML                                                      
C                                                                       
C         FIND THE SMALLEST ZX GE ZM(L)                                 
   10     CONTINUE                                                      
          IF(ZM(L).LE.ZX(LX) .OR. LX.EQ.LAYX)THEN                       
              A=(ZM(L)-ZX(LX-1))/(ZX(LX)-ZX(LX-1))                      
Calley              IF(A.LT.0.)WRITE(IPR,'(/2A)')' XINTRP warning:  ',  
              IF(A.LT.0.0 .AND. IPR.GT.0)WRITE(IPR,                     
     +                                   '(/2A)')' XINTRP warning:  ',  
     1          'Extrapolating MODEL atmosphere below minimum altitude.'
Calley              IF(A.GT.1.)WRITE(IPR,'(/2A)')' XINTRP warning:  ',  
              IF(A.GT.1.0 .AND. IPR.GT.0)WRITE(IPR,                     
     +                                   '(/2A)')' XINTRP warning:  ',  
     1          'Extrapolating MODEL atmosphere above maximum altitude.'
C                                                                       
C             CALCULATE THE NUMBER DENSITY OF AIR                       
              RHOAIR=ALOSMT*(P(L)/PZERO)/(T(L)/TZERO)                   
              DO 20 K=1,IXMOLS                                          
                  DENM(K,L)=EXPINT(DENX(K,LX-1),DENX(K,LX),A)           
C                                                                       
C                 CONVERT MIXING RATIO (PPMV) TO NUMBER DENSITY         
                  DENM(K,L)=RHOAIR*DENM(K,L)*1.E-6                      
   20         CONTINUE                                                  
          ELSE                                                          
              LX=LX+1                                                   
              GOTO10                                                    
          ENDIF                                                         
   30 CONTINUE                                                          
      RETURN                                                            
      END                                                               
      BLOCK DATA XMLATM                                                 
C                                                                       
C***********************************************************************
C     THIS BLOCK DATA SUBROUTINE INITIALIZES THE STANDARD PROFILES      
C     FOR THE "CROSS-SECTION" MOLECULES, THAT IS, THE MOLECULES FOR     
C     WHICH THE SPECTRAL DATA IS IN THE FORM OF CROSS-SECTIONS          
C     (ABSORPTION COEFFICIENTS) INSTEAD OF LINE PARAMETERS.             
C     THE PROFILES OF VOLUME MIXING RATIOS GIVEN HERE ARE FROM:         
C                                                                       
C     M. ALLEN, SPRING EQUINOX, DIUNRNAL AVERAGE, 1990.                 
C     (PRIVATE COMMUNICATION)                                           
C***********************************************************************
C                                                                       
C**   COMMON BLOCKS AND PARAMETERS FOR THE PROFILES AND DENSITIES       
C**   FOR THE CROSS-SECTION MOLECULES.                                  
C                                                                       
C**   MOLX(L,I)=MIXING RATIO (PPMV) OF THE I'TH MOLECULE FOR THE L'TH   
C**   LEVEL, ALTX(L)= ALTITUDE OF THE L'TH LEVEL, LAYXMX LEVELS MAX     
C                                                                       
C                                                                       
C                                                                       
C     CONVENTION                                                        
C     MMOLX = MAXIMUM NUMBER OF NEW SPECIES (IDENTIFIED BY "X")         
C     MMOL  = MAXIMUM NUMBER OF OLD SPECIES (W/O SUFFIX "X")            
C     THESE DEFINE THE MAXIMUM ARRAY SIZES.                             
C                                                                       
C     THE ACTUAL NUMBER OF PARAMETERS ARE:                              
C     NSPEC = ACTUAL NUMBER OF OLD SPECIES (12), CAN'T EXCEED MMOL      
C     NSPECX = ACTUAL NUMBER OF "X" SPECIES,     CAN'T EXCEED MMOLX     
C                                                                       
      INCLUDE 'PARAM.LST'                                               
C     PARAMETER (MMOLX=18)                                              
C     PARAMETER (MMOL=12)                                               
C     PARAMETER (MMOLT=MMOL+MMOLX, MMOLT2=2*MMOLT)                      
C                                                                       
C     PARAMETER(NSPEC=12, NSPECX=13, NSPECT=NSPEC+NSPECX)               
C                                                                       
      CHARACTER*8 CNAMEX(MMOLX)                                         
C                                                                       
C                                                                       
C                                                                       
      REAL AMWTX(MMOLX)                                                 
      REAL ALTX(50),                                                    
     +     MOLX1(50), MOLX2(50), MOLX3(50), MOLX4(50), MOLX5(50),       
     +     MOLX6(50), MOLX7(50), MOLX8(50), MOLX9(50), MOLX10(50),      
     +     MOLX11(50),MOLX12(50),MOLX13(50),MOLX14(50),MOLX15(50),      
     +     MOLX16(50),MOLX17(50),MOLX18(50),MOLX19(50),MOLX20(50),      
     +     MOLX21(50),MOLX22(50),MOLX23(50),MOLX24(50),MOLX25(50),      
     +     MOLX26(50),MOLX27(50),MOLX28(50),MOLX29(50),MOLX30(50),      
     +     MOLX31(50),MOLX32(50),MOLX33(50),MOLX34(50),MOLX35(50)       
C                                                                       
      COMMON /NAMEX/CNAMEX                                              
      COMMON /ATMWTX/AMWTX                                              
      COMMON /MLATMX/ LAYXMX,ALTX,                                      
     +     MOLX1,  MOLX2,  MOLX3,  MOLX4,  MOLX5,                       
     +     MOLX6,  MOLX7,  MOLX8,  MOLX9,  MOLX10,                      
     +     MOLX11, MOLX12, MOLX13, MOLX14, MOLX15,                      
     +     MOLX16, MOLX17, MOLX18, MOLX19, MOLX20,                      
     +     MOLX21, MOLX22, MOLX23, MOLX24, MOLX25,                      
     +     MOLX26, MOLX27, MOLX28, MOLX29, MOLX30,                      
     +     MOLX31, MOLX32, MOLX33, MOLX34, MOLX35                       
C                                                                       
      DATA (CNAMEX(I),I=1,NSPECX)/' CFC-11 ',                           
     $     ' CFC-12 ',                                                  
     $     ' CFC-13 ',                                                  
     $     ' CFC-14 ',                                                  
     $     ' CFC-22 ',                                                  
     $     ' CFC-113',                                                  
     $     ' CFC-114',                                                  
     $     ' CFC-115',                                                  
     $     ' CLONO2 ',                                                  
     $     '  HNO4  ',                                                  
     $     ' CHCL2F ',                                                  
     $     '  CCL4  ',                                                  
     $     '  N2O5  '/                                                  
C                                                                       
C                                                                       
C     DATA AMWTX/CFC-11,CFC-12,CFC-13,CFC-14,CFC-22,CFC-113,CFC-114,CFC-
C     CLONO2,HNO4,CHCL2F,CCL4,N2O5/                                     
      DATA (AMWTX(I),I=1,NSPECX)                                        
     $     /137.3683, 120.9138, 104.4592, 88.00461, 86.4687,            
     $     187.3762, 170.9216, 154.467,                                 
     $     97.45790, 79.01227, 102.9239, 153.8235,108.0104/             
C                                                                       
      DATA LAYXMX/50/                                                   
C                                                                       
      DATA ALTX/                                                        
     1     0.0,    1.0,   2.0,   3.0,   4.0,  5.0,   6.0,   7.0,   8.0, 
     2     9.0,   10.0,  11.0,  12.0,  13.0, 14.0,  15.0,  16.0,  17.0, 
     3     18.0,  19.0,  20.0,  21.0,  22.0, 23.0,  24.0,  25.0,  27.5, 
     4     30.0,  32.5,  35.0,  37.5,  40.0, 42.5,  45.0,  47.5,  50.0, 
     5     55.0,  60.0,  65.0,  70.0,  75.0, 80.0,  85.0,  90.0,  95.0, 
     6     100.0,105.0, 110.0, 115.0, 120.0/                            
C                                                                       
C     DATA MOLX1 / CCL3F, AKA CFC-11 /                                  
C                                                                       
      DATA MOLX1 /                                                      
     X     1.400E-04, 1.400E-04, 1.400E-04, 1.400E-04, 1.400E-04,       
     X     1.400E-04, 1.400E-04, 1.400E-04, 1.400E-04, 1.398E-04,       
     X     1.395E-04, 1.393E-04, 1.390E-04, 1.350E-04, 1.310E-04,       
     X     1.270E-04, 1.230E-04, 1.123E-04, 1.016E-04, 9.090E-05,       
     X     8.020E-05, 6.865E-05, 5.710E-05, 4.555E-05, 3.400E-05,       
     X     2.728E-05, 1.048E-05, 3.902E-06, 6.031E-07, 1.984E-07,       
     X     2.351E-08, 1.850E-09, 7.681E-10, 9.182E-11, 2.389E-11,       
     X     5.965E-12, 6.108E-13, 4.240E-14, 4.972E-15, 5.090E-16,       
     X     4.235E-17, 1.980E-18, 1.862E-19, 1.540E-20, 1.015E-21,       
     X     3.110E-23, 2.073E-24, 1.356E-25, 7.233E-27, 5.570E-28/       
C                                                                       
C     DATA MOLX2 / CCL2F2, AKA CFC-12 /                                 
C                                                                       
      DATA MOLX2 /                                                      
     X     2.400E-04, 2.400E-04, 2.400E-04, 2.400E-04, 2.400E-04,       
     X     2.400E-04, 2.400E-04, 2.400E-04, 2.400E-04, 2.398E-04,       
     X     2.395E-04, 2.393E-04, 2.390E-04, 2.355E-04, 2.320E-04,       
     X     2.285E-04, 2.250E-04, 2.148E-04, 2.045E-04, 1.943E-04,       
     X     1.840E-04, 1.710E-04, 1.580E-04, 1.450E-04, 1.320E-04,       
     X     1.188E-04, 8.580E-05, 5.885E-05, 3.564E-05, 2.133E-05,       
     X     1.203E-05, 6.090E-06, 3.834E-06, 2.133E-06, 1.264E-06,       
     X     8.520E-07, 4.160E-07, 1.940E-07, 9.038E-08, 3.905E-08,       
     X     1.525E-08, 5.190E-09, 1.829E-09, 5.670E-10, 1.450E-10,       
     X     2.480E-11, 4.303E-12, 6.140E-13, 6.613E-14, 9.590E-15/       
C                                                                       
C     DATA MOLX3 / CCLF3, AKA CFC-13  /                                 
C                                                                       
      DATA MOLX3 /                                                      
     X     50*1.E-12                                           /        
C                                                                       
C     DATA MOLX4 / CF4, AKA CFC-14 /                                    
C                                                                       
      DATA MOLX4 /                                                      
     X     50*1.E-12                                            /       
C                                                                       
C     DATA MOLX5 / CHF2CL, AKA CFC-22 /  ????                           
C                                                                       
      DATA MOLX5 /                                                      
     X     6.000E-05, 5.995E-05, 5.990E-05, 5.985E-05, 5.980E-05,       
     X     5.978E-05, 5.975E-05, 5.973E-05, 5.970E-05, 5.965E-05,       
     X     5.960E-05, 5.955E-05, 5.950E-05, 5.893E-05, 5.835E-05,       
     X     5.778E-05, 5.720E-05, 5.563E-05, 5.405E-05, 5.248E-05,       
     X     5.090E-05, 4.893E-05, 4.695E-05, 4.498E-05, 4.300E-05,       
     X     4.085E-05, 3.548E-05, 3.025E-05, 2.520E-05, 2.070E-05,       
     X     1.703E-05, 1.390E-05, 1.196E-05, 1.038E-05, 9.330E-06,       
     X     8.780E-06, 8.118E-06, 7.700E-06, 7.423E-06, 7.185E-06,       
     X     6.910E-06, 6.520E-06, 5.838E-06, 4.790E-06, 3.360E-06,       
     X     1.790E-06, 7.138E-07, 2.235E-07, 5.860E-08, 1.920E-08/       
C                                                                       
C     DATA MOLX5 / CHCLF2, AKA CFC-22 /  ????                           
C     DATA MOLX5 /                                                      
C     X     6.000E-05, 5.994E-05, 5.987E-05, 5.982E-05, 5.977E-05,      
C     X     5.974E-05, 5.970E-05, 5.968E-05, 5.966E-05, 5.963E-05,      
C     X     5.960E-05, 5.955E-05, 5.949E-05, 5.921E-05, 5.893E-05,      
C     X     5.808E-05, 5.723E-05, 5.582E-05, 5.441E-05, 5.265E-05,      
C     X     5.089E-05, 4.897E-05, 4.705E-05, 4.502E-05, 4.298E-05,      
C     X     4.084E-05, 3.548E-05, 3.021E-05, 2.514E-05, 2.062E-05,      
C     X     1.686E-05, 1.392E-05, 1.184E-05, 1.036E-05, 9.356E-06,      
C     X     8.784E-06, 8.163E-06, 7.741E-06, 7.449E-06, 7.201E-06,      
C     X     6.919E-06, 6.524E-06, 5.872E-06, 4.867E-06, 3.396E-06,      
C     X     1.808E-06, 6.935E-07, 2.066E-07, 5.485E-08, 1.930E-08/      
C                                                                       
C     DATA MOLX6 / C2CL3F3, AKA CFC-113 /                               
C                                                                       
      DATA MOLX6 /                                                      
     X     1.900E-05, 1.900E-05, 1.900E-05, 1.900E-05, 1.900E-05,       
     X     1.900E-05, 1.900E-05, 1.900E-05, 1.900E-05, 1.898E-05,       
     X     1.895E-05, 1.893E-05, 1.890E-05, 1.855E-05, 1.820E-05,       
     X     1.785E-05, 1.750E-05, 1.653E-05, 1.555E-05, 1.458E-05,       
     X     1.360E-05, 1.238E-05, 1.116E-05, 9.932E-06, 8.710E-06,       
     X     7.603E-06, 4.834E-06, 2.915E-06, 1.411E-06, 7.168E-07,       
     X     3.205E-07, 1.230E-07, 7.013E-08, 3.215E-08, 1.653E-08,       
     X     9.905E-09, 3.920E-09, 1.420E-09, 5.268E-10, 1.757E-10,       
     X     5.143E-11, 1.230E-11, 3.263E-12, 7.440E-13, 1.344E-13,       
     X     1.310E-14, 1.238E-15, 7.866E-17, 2.326E-18, 7.910E-20/       
C                                                                       
C     DATA MOLX7 / C2CL2F4, AKA CFC-114 /                               
C                                                                       
      DATA MOLX7 /                                                      
     X     1.200E-05, 1.200E-05, 1.200E-05, 1.200E-05, 1.200E-05,       
     X     1.200E-05, 1.200E-05, 1.200E-05, 1.200E-05, 1.200E-05,       
     X     1.200E-05, 1.200E-05, 1.200E-05, 1.188E-05, 1.175E-05,       
     X     1.163E-05, 1.150E-05, 1.118E-05, 1.085E-05, 1.053E-05,       
     X     1.020E-05, 9.755E-06, 9.310E-06, 8.865E-06, 8.420E-06,       
     X     7.948E-06, 6.766E-06, 5.635E-06, 4.559E-06, 3.653E-06,       
     X     2.926E-06, 2.320E-06, 1.939E-06, 1.618E-06, 1.386E-06,       
     X     1.250E-06, 1.040E-06, 8.690E-07, 7.193E-07, 5.855E-07,       
     X     4.645E-07, 3.550E-07, 2.535E-07, 1.590E-07, 7.688E-08,       
     X     2.130E-08, 3.514E-09, 3.470E-10, 1.612E-11, 8.970E-13/       
C                                                                       
C     DATA MOLX8 / C2CLF5, AKA CFC-115 /                                
C                                                                       
      DATA MOLX8 /                                                      
     X     50*1.E-12                                            /       
C                                                                       
C     DATA MOLX9 / CLONO2 /                                             
C                                                                       
      DATA MOLX9 /                                                      
     X     5.750E-06, 5.128E-06, 4.505E-06, 3.883E-06, 3.260E-06,       
     X     2.755E-06, 2.250E-06, 1.745E-06, 1.240E-06, 1.208E-06,       
     X     1.175E-06, 1.143E-06, 1.110E-06, 8.007E-06, 1.491E-05,       
     X     2.180E-05, 2.870E-05, 1.015E-04, 1.744E-04, 2.472E-04,       
     X     3.200E-04, 4.600E-04, 6.000E-04, 7.400E-04, 8.800E-04,       
     X     9.725E-04, 1.204E-03, 1.140E-03, 9.456E-04, 5.238E-04,       
     X     2.379E-04, 4.270E-05, 1.739E-05, 1.680E-06, 3.544E-07,       
     X     4.668E-08, 1.194E-09, 1.710E-11, 8.568E-13, 7.235E-14,       
     X     5.415E-15, 4.040E-17, 3.793E-20, 1.172E-22, 8.674E-25,       
     X     8.080E-28, 8.438E-30, 7.600E-32, 0.       , 0.       /       
C                                                                       
C     DATA MOLX10 / HNO4 /                                              
C                                                                       
      DATA MOLX10 /                                                     
     X     4.340E-07, 2.136E-06, 3.837E-06, 5.539E-06, 7.240E-06,       
     X     1.816E-05, 2.907E-05, 3.999E-05, 5.090E-05, 4.910E-05,       
     X     4.730E-05, 4.550E-05, 4.370E-05, 5.655E-05, 6.940E-05,       
     X     8.225E-05, 9.510E-05, 1.426E-04, 1.901E-04, 2.375E-04,       
     X     2.850E-04, 3.518E-04, 4.185E-04, 4.853E-04, 5.520E-04,       
     X     5.808E-04, 6.526E-04, 5.100E-04, 3.187E-04, 1.469E-04,       
     X     5.261E-05, 9.960E-06, 4.435E-06, 8.735E-07, 2.573E-07,       
     X     7.630E-08, 6.803E-09, 4.790E-10, 7.730E-11, 3.210E-11,       
     X     1.266E-11, 8.430E-13, 1.883E-15, 1.734E-18, 4.466E-21,       
     X     3.330E-24, 6.306E-26, 1.522E-27, 3.538E-29, 2.240E-30/       
C                                                                       
C     DATA MOLX11 / CHCL2F, AKA CFC-21/                                 
C                                                                       
      DATA MOLX11 /                                                     
     X     50*1.E-12/                                                   
C                                                                       
C     DATA MOLX12 / CCL4 /                                              
C                                                                       
      DATA MOLX12 /                                                     
     X     1.300E-04, 1.300E-04, 1.300E-04, 1.300E-04, 1.300E-04,       
     X     1.298E-04, 1.295E-04, 1.293E-04, 1.290E-04, 1.290E-04,       
     X     1.290E-04, 1.290E-04, 1.290E-04, 1.250E-04, 1.210E-04,       
     X     1.170E-04, 1.130E-04, 1.018E-04, 9.060E-05, 7.940E-05,       
     X     6.820E-05, 5.715E-05, 4.610E-05, 3.505E-05, 2.400E-05,       
     X     1.884E-05, 5.940E-06, 1.755E-06, 1.316E-07, 3.954E-08,       
     X     1.715E-09, 3.960E-11, 1.531E-11, 5.572E-13, 1.100E-13,       
     X     1.093E-14, 3.775E-16, 5.250E-18, 2.454E-19, 9.875E-21,       
     X     3.051E-22, 2.930E-24, 1.112E-25, 3.611E-27, 8.790E-29,       
     X     5.100E-31, 1.358E-32, 0.       , 0.       , 0.       /       
C                                                                       
C     DATA MOLX13 / N2O5 /                                              
C                                                                       
      DATA MOLX13 /                                                     
C                                                                       
     X     2.420E-10, 9.540E-10, 1.666E-09, 2.378E-09, 3.090E-09,       
     X     3.608E-09, 4.125E-09, 4.643E-09, 5.160E-09, 5.763E-09,       
     X     6.365E-09, 6.968E-09, 7.570E-09, 4.407E-07, 8.738E-07,       
     X     1.307E-06, 1.740E-06, 8.780E-06, 1.582E-05, 2.286E-05,       
     X     2.990E-05, 4.145E-05, 5.300E-05, 6.455E-05, 7.610E-05,       
     X     7.703E-05, 7.934E-05, 5.520E-05, 2.730E-05, 1.082E-05,       
     X     2.724E-06, 2.130E-07, 8.313E-08, 3.938E-09, 7.580E-10,       
     X     6.289E-11, 1.044E-12, 5.120E-15, 1.355E-16, 8.200E-18,       
     X     7.258E-19, 5.090E-21, 3.961E-24, 2.392E-27, 8.388E-30,       
     X     0.       , 0.       , 0.       , 0.       , 0.       /       
C                                                                       
C     DATA MOLX14 / HNO3 /                                              
C                                                                       
      DATA MOLX14 /                                                     
     X     5.550E-05, 6.403E-05, 7.255E-05, 8.108E-05, 8.960E-05,       
     X     9.320E-05, 9.680E-05, 1.004E-04, 1.040E-04, 1.205E-04,       
     X     1.370E-04, 1.535E-04, 1.700E-04, 4.800E-04, 7.900E-04,       
     X     1.100E-03, 1.410E-03, 2.163E-03, 2.915E-03, 3.668E-03,       
     X     4.420E-03, 5.010E-03, 5.600E-03, 6.190E-03, 6.780E-03,       
     X     6.790E-03, 6.815E-03, 5.875E-03, 4.643E-03, 3.205E-03,       
     X     1.981E-03, 9.000E-04, 4.356E-04, 1.229E-04, 3.756E-05,       
     X     1.170E-05, 1.048E-06, 7.040E-08, 1.099E-08, 4.315E-09,       
     X     9.327E-10, 1.320E-10, 1.112E-12, 4.992E-15, 2.180E-17,       
     X     1.840E-20, 3.313E-22, 9.205E-24, 5.043E-25, 1.260E-25/       
C                                                                       
C     DATA MOLX15 / ?????? /                                            
C                                                                       
      DATA MOLX15 /                                                     
     X     50*-99.                                              /       
C                                                                       
C     DATA MOLX16 / ?????? /                                            
C                                                                       
      DATA MOLX16 /                                                     
     X     50*-99.                                              /       
C                                                                       
C     DATA MOLX17 / ?????? /                                            
C                                                                       
      DATA MOLX17 /                                                     
     X     50*-99.                                              /       
C                                                                       
C     DATA MOLX18 / ?????? /                                            
C                                                                       
      DATA MOLX18 /                                                     
     X     50*-99.                                              /       
C                                                                       
C     DATA MOLX19 / ?????? /                                            
C                                                                       
      DATA MOLX19 /                                                     
     X     50*-99.                                              /       
C                                                                       
C     DATA MOLX20 / ?????? /                                            
C                                                                       
      DATA MOLX20 /                                                     
     X     50*-99.                                              /       
C                                                                       
C     DATA MOLX21 / ?????? /                                            
C                                                                       
      DATA MOLX21 /                                                     
     X     50*-99.                                              /       
C                                                                       
C     DATA MOLX22 / ?????? /                                            
C                                                                       
      DATA MOLX22 /                                                     
     X     50*-99.                                              /       
C                                                                       
C     DATA MOLX23 / ?????? /                                            
C                                                                       
      DATA MOLX23 /                                                     
     X     50*-99.                                              /       
C                                                                       
C     DATA MOLX24 / ?????? /                                            
C                                                                       
      DATA MOLX24 /                                                     
     X     50*-99.                                              /       
C                                                                       
C     DATA MOLX25 / ?????? /                                            
C                                                                       
      DATA MOLX25 /                                                     
     X     50*-99.                                              /       
C                                                                       
C     DATA MOLX26 / ?????? /                                            
C                                                                       
      DATA MOLX26 /                                                     
     X     50*-99.                                              /       
C                                                                       
C     DATA MOLX27 / ?????? /                                            
C                                                                       
      DATA MOLX27 /                                                     
     X     50*-99.                                              /       
C                                                                       
C     DATA MOLX28 / ?????? /                                            
C                                                                       
      DATA MOLX28 /                                                     
     X     50*-99.                                              /       
C                                                                       
C     DATA MOLX29 / ?????? /                                            
C                                                                       
      DATA MOLX29 /                                                     
     X     50*-99.                                              /       
C                                                                       
C     DATA MOLX30 / ?????? /                                            
C                                                                       
      DATA MOLX30 /                                                     
     X     50*-99.                                              /       
C                                                                       
C     DATA MOLX31 / ?????? /                                            
C                                                                       
      DATA MOLX31 /                                                     
     X     50*-99.                                              /       
C                                                                       
C     DATA MOLX32 / ?????? /                                            
C                                                                       
      DATA MOLX32 /                                                     
     X     50*-99.                                              /       
C                                                                       
C     DATA MOLX33 / ?????? /                                            
C                                                                       
      DATA MOLX33 /                                                     
     X     50*-99.                                              /       
C                                                                       
C     DATA MOLX34 / ?????? /                                            
C                                                                       
      DATA MOLX34 /                                                     
     X     50*-99.                                              /       
C                                                                       
      DATA MOLX35 /                                                     
     X     50*-99.                                              /       
C                                                                       
      END                                                               
      SUBROUTINE XPROFL                                                 
      INCLUDE 'PARAM.LST'                                               
C                                                                       
C********************************************************************** 
C     THIS SUBROUTINE GENERATES THE DENSITY PROFILES OF THE CROSS-      
C     SECTION MOLECULES.  IT STORES THE PROFILES IN THE ARRAY DENM IN   
C     /DEAMT/ AT THE ALTITUDES ZMDL, WHICH ARE THE SAME ALTITUDES THAT  
C     THE PROFILES OF THE MOLECULAR AMOUNTS ARE DEFINED ON.  (NOTE: THE 
C     ACTUAL ALTITUDES USED ARE FROM ZST WHICH IS A COPY OF ZMDL.)      
C     IPRFL IS A FLAG INDICATING THAT THE STANDARD PROFILES (0) OR A    
C     USER-INPUT PROFILE (1) IS TO BE USED.                             
C********************************************************************** 
C                                                                       
C**   IXMAX=MAX NUMBER OF X-SECTION MOLECULES, IXMOLS=NUMBER OF THESE   
C**   MOLECULES SELECTED, IXINDX=INDEX VALUES OF SELECTED MOLECULES     
C**   (E.G. 1=CLONO2), XAMNT(I,L)=LAYER AMOUNTS FOR I'TH MOLECULE FOR   
C**   L'TH LAYER, ANALOGOUS TO AMOUNT IN /PATHD/ FOR THE STANDARD       
C**   MOLECULES.                                                        
C                                                                       
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                          
      COMMON /PATHX/ IXMAX,IXMOLS,IXINDX(35),XAMNT(35,67)               
      COMMON/DEAMT/DENM(35,LAYTWO),DENP(35,LAYTHR+1)                    
C                                                                       
C**   COMMON BLOCKS AND PARAMETERS FOR THE PROFILES AND DENSITIES       
C**   FOR THE CROSS-SECTION MOLECULES.                                  
C**   XSNAME=NAMES, ALIAS=ALIASES OF THE CROSS-SECTION MOLECULES        
C                                                                       
      CHARACTER*10 XSFILE,XSNAME,ALIAS                                  
      COMMON /XSECTF/ XSFILE(6,5,35),XSNAME(35),ALIAS(4,35)             
C                                                                       
C**   AMOLX(L,I)=MIXING RATIO (PPMV) OF THE I'TH MOLECULE FOR THE L'TH  
C**   LEVEL, ALTX(L)= ALTITUDE OF THE L'TH LEVEL, LAYXMX LEVELS MAX     
C                                                                       
      COMMON /MLATMX/ LAYXMX,ALTX(50),AMOLX(50,35)                      
      COMMON /XPDEM/ZX(LAYDIM),DTMP(35),DENX(35,LAYDIM)                 
C                                                                       
C**   LOAD THE PROFILES OF ALTITUDE, PRESSURE, AND TEMPERATURE THAT     
C**   WERE USED TO CALCULATE THE MOLECULAR AMOUNTS BACK INTO THE        
C**   ARRAYS ZMDL, PM, AND TM FROM THE ARRAYS ZST, PST, AND TST         
C                                                                       
C                                                                       
C                                                                       
C**       A STANDARD PROFILE FOR X-MOLECULES DENSITY PROFILES HAS BEEN  
C**       SELECTED. THE PROFILES OF VOLUMNE MIXING RATIO ARE IN AMOLX   
C**       STORED AT THE LEVELS ALTX. LOAD THE ALTITUDES INTO ZX AND     
C**       DENX RESPECTIVELY.                                            
          IXMOLS = 3                                                    
          IXINDX(1) = 4                                                 
CC        CCL3F   IE  F11                                               
          IXINDX(2) = 5                                                 
CC        CCL2F2  IE  F12                                               
          IXINDX(3) = 6                                                 
C                                                                       
          LAYX=LAYXMX                                                   
          DO 210 L=1,LAYX                                               
              ZX(L) = ALTX(L)                                           
              DO 200 K=1,IXMOLS                                         
                  DENX(K,L) = AMOLX(L,IXINDX(K))                        
  200         CONTINUE                                                  
  210     CONTINUE                                                      
C                                                                       
C                                                                       
C**   INTERPOLATE THE DENSITY PROFILE DENX DEFINED ON ZX TO DENM        
C**   DEFINED ON ZMDL, THEN CONVERT MIXING RATIO TO NUMBER DENSITY.     
C                                                                       
      CALL XINTRP(LAYX,IXMOLS)                                          
C                                                                       
      RETURN                                                            
      END                                                               
      BLOCK DATA XSECTB                                                 
      IMPLICIT DOUBLE PRECISION (V)                                     
C                                                                       
C**   XSNAME=NAMES, ALIAS=ALIASES OF THE CROSS-SECTION MOLECULES        
C                                                                       
      CHARACTER*10 XSFILE,XSNAME,ALIAS                                  
      COMMON /XSECTF/ XSFILE(6,5,35),XSNAME(35),ALIAS(4,35)             
      COMMON /XSECTR/ V1FX(5,35),V2FX(5,35),DVFX(5,35),WXM(35),         
     X                NTEMPF(5,35),NSPECR(35),IXFORM(35),NUMXS          
C                                                                       
      DATA (ALIAS(1,I),I=1,35)/                                         
     1    'CLONO2    ', 'HNO4      ', 'CHCL2F    ', 'CCL4      ',       
     2    'CCL3F     ', 'CCL2F2    ', 'C2CL2F4   ', 'C2CL3F3   ',       
     3    'N2O5      ', 'HNO3      ', 'CF4', 'CHF2CL   ',               
     4    23*' ZZZZZZZZ '/                                              
      DATA (ALIAS(2,I),I=1,35)/                                         
     1    'CLNO3     ', 'ZZZZZZZZ  ', 'ZZZZZZZZ  ', 'ZZZZZZZZ  ',       
     2    'CFCL3     ', 'CF2CL2    ', 'C2F4CL2   ', 'C2F3CL3   ',       
     3    'ZZZZZZZZ  ', 'ZZZZZZZZ  ', 'ZZZZZZZZ  ', 'ZZZZZZZ  ',       
     4    23*' ZZZZZZZZ '/                                              
      DATA (ALIAS(3,I),I=1,35)/                                         
     1    ' ZZZZZZZZ ', ' ZZZZZZZZ ', 'CFC21     ', ' ZZZZZZZZ ',       
     2    'CFC11     ', 'CFC12     ', 'CFC114    ', 'CFC113    ',       
     3    ' ZZZZZZZZ ', ' ZZZZZZZZ ', 'CFC14     ',                     
     4    24*' ZZZZZZZZ ' /                                             
      DATA (ALIAS(4,I),I=1,35)/                                         
     1    ' ZZZZZZZZ ', ' ZZZZZZZZ ', 'F21       ', ' ZZZZZZZZ ',       
     2    'F11       ', 'F12       ', 'F114      ', 'F113      ',       
     3    ' ZZZZZZZZ ', ' ZZZZZZZZ ', 'F14       ',                     
     4    24*' ZZZZZZZZ ' /                                             
C                                                                       
      DATA V1FX/175*0.0/,V2FX/175*0.0/,DVFX/175*0.0/,WXM/35*0.0/        
      DATA NTEMPF/175*0/,NSPECR/35*0/,IXFORM/35*0/,NUMXS/0/             
C                                                                       
      END                                                               
      FUNCTION   XTERP(XCC,X,Y,NDEG,NPTS,DINT,IER)                      
C                                                                       
C   FUNCTION PERFORMS NEWTONS INTERPOLATION FOR DISCRETE DATA           
C            AS A FUNCTION OF ONE VARIABLE                              
C                                                                       
C   WHERE  XC - INDEPENDENT VARIABLE AT WHICH THE INTERPOLATED VALUE    
C               OF THE DEPENDENT VARIABLE IS DESIRED                    
C           X - TABLE OF INDEPENDENT VARIABLE VALUES IN INCREASING      
C               ORDER                                                   
C           Y - CORRESPONDING TABLE OF DEPENDENT VARIABLE VALUES        
C        NDEG - ORDER OF THE INTERPOLATING POLYNOMIAL USED (MAX - 10)   
C        NPTS - NUMBER OF ENTRIES IN X AND Y                            
C        DINT - DERIVITIVE AT XC                                        
C         IER - RETURN CODE:                                            
C                      0 = INTERPOLATION WAS PERFORMED                  
C                     -1 = EXTRAPOLATION BELOW TABLE VALUES             
C                      1 = EXTRAPOLATION ABOVE TABLE VALUES             
C                                                                       
C  ROUTINE MODIFIED FROM 'THE COMPUTING TECHNOLOGY CENTER NUMERICAL     
C    ANALYSIS LIBRARY', O.R.N.L.                                        
C                                                                       
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1,ISCRCH                          
      DIMENSION X(52),Y(52),Y1(11),PI(12)                               
      INTEGER HI                                                        
      DATA PI/12*1./                                                    
C                                                                       
      XC=XCC                                                            
      NFIT=NDEG + 1                                                     
      N=NFIT                                                            
      MFLAG=0                                                           
      IF(N .GT. NPTS) N=NPTS                                            
      IF(XC-X(1)) 50,20,10                                              
10    IF(XC .GT. X(NPTS)) GO TO 70                                      
20    IER=0                                                             
      DO 30 I=1,NPTS                                                    
      IF(XC - X(I)) 40,120,30                                           
120   XC=XC + .000001                                                   
      MFLAG=I                                                           
30    CONTINUE                                                          
40    LOW=I - (N+1)/2                                                   
      IF(LOW .LE. 0) GO TO 60                                           
      HI=LOW + N - 1                                                    
      IF(HI .GT. NPTS) GO TO 80                                         
      GO TO 90                                                          
C                                                                       
C ... XC LT X(1)                                                        
50    IER=-1                                                            
60    HI=N                                                              
      LOW=1                                                             
      GO TO 90                                                          
C                                                                       
C ... XC GT X(NPTS)                                                     
70    IER=1                                                             
80    LOW=NPTS - N + 1                                                  
      HI=NPTS                                                           
C                                                                       
C ... INTERPOLATE                                                       
90    CON=1.                                                            
      DINT=0.                                                           
      Y1(1)=Y(LOW)                                                      
      XTERP=Y(LOW)                                                      
      IM=LOW - 1                                                        
      IL=LOW + 1                                                        
      DO 110 K=IL,HI                                                    
      VAL=XTERP                                                         
      IA=K - LOW                                                        
      IS=IA + 1                                                         
      Y1(IS)=Y(K)                                                       
      DO 100 I=1,IA                                                     
      IR=IM + I                                                         
      IF(X(IR).EQ.X(K))GO TO 100                                        
      Y1(IS) = (Y1(I)-Y1(IS))/(X(IR)-X(K))                              
  100 CONTINUE                                                          
      CON=CON*(XC-X(K-1))                                               
      PI(IA+1)=CON                                                      
      CON1=PI(IA)                                                       
      IF(IA .LT. 2) GO TO 112                                           
      DO 111 I=2,IA                                                     
      IF(PI(I).EQ.0.0)GO TO 111                                         
      CON1=CON1 + CON*PI(I-1)/PI(I)                                     
  111 CONTINUE                                                          
  112 DINT=DINT + CON1*Y1(IS)                                           
  110 XTERP=VAL + CON*Y1(IS)                                            
      IF(MFLAG.NE.0)XTERP=Y(MFLAG)                                      
      RETURN                                                            
      END                                                               
      SUBROUTINE  ZEROAL( ND1, XR0, XR1, TAUC,                          
     $                    ND2, CMU, CWT, PSIX, EVAL, WK, Z0, Z1, ZJ,    
     $                    ND3, HLPR, YLM0,                              
     $                    ND4, ARRAY, CC, EVECC, YLMC,                  
     $                    ND5, YLMU,                                    
     $                    ND6, AMB, APB,                                
     $                    ND7, KK, LL, ZZ, ZPLK0, ZPLK1,                
     $                    ND8, Z0U, Z1U, ZBEAM,                         
     $                    ND9, GC,                                      
     $                    ND10, GU,                                     
     $                    ND11, Z )                                     
                                                                        
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
C            ZERO ARRAYS                                                
                                                                        
      REAL*8  AMB(*), APB(*), ARRAY(*), CC(*), CMU(*), CWT(*),          
     $      EVAL(*), EVECC(*), GC(*), GU(*), HLPR(0:*), KK(*),          
     $      LL(*), PSIX(*), TAUC(*), WK(*), XR0(*), XR1(*),             
     $      YLM0(0:*), YLMC(*), YLMU(*), Z(*), Z0(*), Z1(*),            
     $      Z0U(*), Z1U(*), ZJ(*), ZZ(*), ZPLK0(*), ZPLK1(*),           
     $      ZBEAM(*)                                                    
                                                                        
                                                                        
      DO 2  N = 1, ND1                                                  
         XR0(N) = 0.0                                                   
         XR1(N) = 0.0                                                   
         TAUC(N) = 0.0                                                  
 2    CONTINUE                                                          
                                                                        
      DO 4  N = 1, ND2                                                  
         CMU(N) = 0.0                                                   
         CWT(N) = 0.0                                                   
         PSIX(N) = 0.0                                                  
         EVAL(N) = 0.0                                                  
         WK(N) = 0.0                                                    
         Z0(N) = 0.0                                                    
         Z1(N) = 0.0                                                    
         ZJ(N) = 0.0                                                    
 4    CONTINUE                                                          
                                                                        
      DO 6  N = 1, ND3                                                  
         HLPR(N) = 0.0                                                  
         YLM0(N) = 0.0                                                  
 6    CONTINUE                                                          
                                                                        
      DO 8  N = 1, ND4                                                  
         ARRAY(N) = 0.0                                                 
         CC(N) = 0.0                                                    
         EVECC(N) = 0.0                                                 
 8    CONTINUE                                                          
                                                                        
      DO 10  N = 1, ND5                                                 
         YLMC(N) = 0.0                                                  
         YLMU(N) = 0.0                                                  
 10   CONTINUE                                                          
                                                                        
      DO 12  N = 1, ND6                                                 
         AMB(N) = 0.0                                                   
         APB(N) = 0.0                                                   
 12   CONTINUE                                                          
                                                                        
      DO 14  N = 1, ND7                                                 
         KK(N) = 0.0                                                    
         LL(N) = 0.0                                                    
         ZZ(N) = 0.0                                                    
         ZPLK0(N) = 0.0                                                 
         ZPLK1(N) = 0.0                                                 
 14   CONTINUE                                                          
                                                                        
      DO 16  N = 1, ND8                                                 
         Z0U(N) = 0.0                                                   
         Z1U(N) = 0.0                                                   
         ZBEAM(N) = 0.0                                                 
 16   CONTINUE                                                          
                                                                        
      DO 18  N = 1, ND9                                                 
         GC(N) = 0.0                                                    
 18   CONTINUE                                                          
                                                                        
      DO 20  N = 1, ND10                                                
         GU(N) = 0.0                                                    
 20   CONTINUE                                                          
                                                                        
      DO 22  N = 1, ND11                                                
         Z(N) = 0.0                                                     
 22   CONTINUE                                                          
                                                                        
      RETURN                                                            
      END                                                               
      SUBROUTINE  ZEROIT( A, LENGTH )                                   
C               INSERTED LINE TO DO DOUBLE PRECISION - NORTH            
                  IMPLICIT DOUBLE PRECISION ( A-H, O-Z )                
                                                                        
C         ZEROS A REAL ARRAY -A- HAVING -LENGTH- ELEMENTS               
                                                                        
      REAL*8  A(*)                                                      
                                                                        
      DO 10  L = 1, LENGTH                                              
         A( L ) = 0.0                                                   
10    CONTINUE                                                          
                                                                        
      RETURN                                                            
      END                                                               
