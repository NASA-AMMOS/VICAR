process help=*
PARM INP      TYPE=(STRING,60)  COUNT=1  
PARM OUT      TYPE=(STRING,60)  COUNT=1
PARM SIZE     TYPE=INTEGER COUNT=4                  DEFAULT=(1,1,0,0)
PARM SL       TYPE=INTEGER DEFAULT=1
PARM SS       TYPE=INTEGER DEFAULT=1
PARM NL       TYPE=INTEGER DEFAULT=0
PARM NS       TYPE=INTEGER DEFAULT=0
PARM DN       TYPE=KEYWORD VALID=(WHITE,BLACK,MODULATE) DEFAULT=WHITE
PARM ADD      TYPE=INTEGER COUNT=0:1                DEFAULT=--
PARM LARGE    TYPE=KEYWORD COUNT=0:1 VALID=LARGE    DEFAULT=--
PARM BACKGRND TYPE=INTEGER COUNT=0:1                DEFAULT=--
PARM TEXT     TYPE=INTEGER COUNT=(0,2:200)          DEFAULT=--
PARM STRING   TYPE=STRING  COUNT=(0,1:100)          DEFAULT=--
PARM AREA     TYPE=INTEGER COUNT=(0,4:300)          DEFAULT=--
END-PROC
.TITLE
 TEXTAD
.HELP
 PURPOSE AND OPERATION:
 TEXTAD is an application program which allows a user to overwrite
 an image with text and/or rectangles.

 The section of the input specified in the SIZE parameter is first copied
 and then operated on by the program. 

 COMMAND FORMAT:

 TEXTAD  INP  OUT  SIZE  PARAMS
 
 where INP, OUT, and SIZE are standard Vicar parameters and PARAMS includes
 special parameters for TEXTAD. All parameters are described in their
 respective parameter section in TUTOR mode.
.PAGE 
 Example:
 TEXTAD A B SIZE=(1,1,4000,4000) 'LARGE 'WHITE +
 TEXT=(1200,600,1220,607) +
 STRING=("HOW CAN YOU BE IN TWO PLACES AT ONCE", +
        "WHEN YOU ARE REALLY NOWHERE AT ALL")

 This will add two lines of text to an output picture.  The first 
 line of text will be located with the upper left corner at pixel
 number 1200,600.  The second line will be located relative to 
 1220,607.
.PAGE
 RESTRICTIONS:

 A maximum of 100 text strings may be specified.
 Each string has a maximum of 100 characters.
 A maximum of 75 rectangles may be specified.

 Line/Sample coordinates entered as parameters are in terms of the 
 input image.

 The characters that TEXTAD recognizes are all the alphabetic and numeric
 characters, and most special characters. The special (non-alphanumeric) 
 characters recognized are:

 $ . , < > ( ) + - _ ! ? : ; / * # ' " = & %

 All alphabetic characters are written as upper case, regardless of the
 case of the input string parameters.

 The quote (") and ampersand (&) characters have some special restrictions
 due due their syntactic significance for TAE:

  To include a quote in a string, the string must be inside quotes and the
  quote character to be included must be doubled. E.g.:
        string="He said ""Hi""" yields the string: He said "Hi".

  To include an ampersand character in a string, the ampersand must be
  doubled; the string need not be quoted (unless required because of some
  other character). E.g.:
        string=&&out or string="&&out" both yield the string: &out.
.PAGE
*************************
 WRITTEN BY:  M. BLACKSTONE
 COGNIZANT PROGRAMMER: C. C. AVIS    SEPT. 1984
 DOCUMENTATION AUTHOR: SUE LAVOIE
 REVISION: 3
 
.LEVEL1
.VARIABLE INP
 input data set
.VARIABLE OUT
 output data set
.VARIABLE SIZE
standard VICAR  size field
.VARIABLE SL
starting line
.VARIABLE SS
starting sample
.VARIABLE NL
number of lines
.VARIABLE NS
number of samples
.VARIABLE LARGE
'LARGE - large characters
.VARIABLE DN
The DN used to form characters
Valid: WHITE, BLACK, MODULATE 
.VARIABLE BACKGRND
Set the text background 
to this DN
.VARIABLE ADD
add this DN to create the text
.VARIABLE AREA
 Defines rectangle areas
 SL1,SS1,EL1,ES1, 
 SL2,SS2,EL2,ES2, ...
.VARIABLE TEXT
 Defines starting coordinates 
 for strings
 SL1,SS1, SL2,SS2, ...
.VARIABLE STRING
 Character strings to be written
 "string1","string2", ...
.LEVEL2
.VARIABLE INP
 a standard VICAR input dataset
.VARIABLE OUT
 a standard VICAR output dataset
.VARIABLE SIZE
 (SL,SS,NL,NS)  starting line,starting sample,number
  of lines, number of samples
.VARIABLE SL
 The starting line of the size field
.VARIABLE SS
 The starting sample of the size field
.VARIABLE NL
 The number of lines of the size field
.VARIABLE NS
 The number of samples of the size field
.VARIABLE LARGE
 Large characters, 14 lines by 12 samples, are used
 Default is that characters 7 lines by 6 samples are drawn.
.VARIABLE DN
 The three possible keywords (BLACK, WHITE, and MODULATE) control the DN
 used in character and line definition.  BLACK produces 0 DN characters;
 WHITE produces 255 DN characters; MODULATE produces 0 DN characters if the
 average DN under the text is greater than 128, 255 DN characters otherwise.
 If the parameter ADD is used, it supercedes these keywords.  The default
 is WHITE.
.VARIABLE BACKGRND
 BACKGRND=DNVALUE
 A one pixel (two pixels if large is specified) border around 
 the text string and the background for the text string is set 
 to DNVALUE.  
.VARIABLE ADD
 ADD=DN      The DN specified will be added to the data
 to create the text.  If specified, this value supercedes WHITE, BLACK, or 
 MODULATE keywords.
.VARIABLE TEXT
 TEXT=(SL1,SS1, SL2,SS2, ...)
 These are the coordinates for positioning the associated string of text.
 Each pair of numbers specify the line and sample where the upper left
 corner of the associated string is to be located. If the parameter 
 BACKGRND is specified, the upper left corner of the border area around
 the text string is positioned at these coordinates. This means the
 text string itself will start 1 pixel (2 if LARGE is specified) down
 and to the right of these coordinates.  Up to 100 pairs of numbers
 may be specified.
.VARIABLE STRING
 STRING=("string1","string2", ...)
 These are the text strings to be inserted into the image at the positions
 specified by the associated TEXT values. Up to 100 strings may be
 specified. Each string may have up to 100 characters.
.VARIABLE AREA
 AREA=(SL1,SS1,EL1,EL1, SL2,SS2,EL2,ES2, ...) 
 Specifies that rectangles with upper left corners at SLn,SSn and
 lower right corners at ELn,ESn will be drawn. Up to 75 rectangles
 may be specified, each rectangle being specified by a group of
 four numbers.
.END
