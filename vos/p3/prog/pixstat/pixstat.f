C
C	VICAR PROGRAM PIXSTAT
C
C-------------------------------------------------------------------
C Edit History:
C     5/13/88  TCG  Added SIZE,NL,NS,SL,SS and updated test file
C     5/06/91  REA  Converted to UNIX/VICAR
C-------------------------------------------------------------------
	INCLUDE 'VICMAIN_FOR'
	SUBROUTINE MAIN44
	IMPLICIT INTEGER(A-Z)
	INTEGER*4 TEMP, STRIPSQ(4128,129)
	INTEGER*2 OUTBUF(4000), STRIP(4128,129)
        REAL*8 SUM, SUMSQ, MEAN, MOM2, SDEV, VARI, COL(2128)
	REAL*8 COLSQ(4128)
	REAL SCALE, OFFSET
	CHARACTER*4 FORM
	LOGICAL XVPTST
C
	CALL XVUNIT(IUNIT,'INP',1,STATUS,' ')
	CALL XVUNIT(OUNIT,'OUT',1,STATUS,' ')
	CALL XVOPEN(IUNIT,STATUS,'U_FORMAT','HALF','OPEN_ACT','SA',
     +		    'IO_ACT','SA',' ')
	CALL XVOPEN(OUNIT,STATUS,'OP','WRITE','OPEN_ACT','SA',
     +		    'IO_ACT','SA','U_FORMAT','HALF',' ')
	CALL XVP('NLW',NLW,ICOUNT)
	CALL XVP('NSW',NSW,ICOUNT)
	IF(((NLW/2)*2 .EQ. NLW) .OR.((NSW/2)*2 .EQ. NSW)) THEN
	    CALL XVMESSAGE('ERROR--WINDOW DIMENSIONS MUST BE ODD',' ')
	    CALL ABEND
	ENDIF
	CALL XVP('OFFSET',OFFSET,ICOUNT)
	CALL XVP('SCALE',SCALE,ICOUNT)
	CALL XVSIZE( SL, SS, NL, NS, NLIN, NSIN )
	IF(NS .GT. 4000) THEN
	    CALL XVMESSAGE(
     +	       'Input image must be no greater than 4000 samples wide.',
     +		' ')
	    CALL ABEND
	ENDIF
	HLFNSW = NSW / 2
	HLFNLW = NLW / 2
	NPIXW = NLW * NSW
	IMGLINE = 0
	STRIPINDX = 1
	OUTINDX = 1
	EDGSTRT = 65 - HLFNSW
	IMGEND = 64 + NS
	NSX2 = (NS + (NSW - 1)) * 2		! # BYTES IN A STRIP LINE
	NSX4 = NSX2 * 2				! # BYTES IN A STRIPSQ LINE
	BOTTOM = NL - HLFNLW
	RTWNDO = 65 + HLFNSW
	ADDSMPL = RTWNDO + 1
	EDGEND = IMGEND + HLFNSW
	LASTINDX = (NL - (NL / NLW) * NLW) + (HLFNSW - 1)
	LASTINDX = (LASTINDX - (LASTINDX / NLW) * NLW) + 1
C
	CALL XVREAD(IUNIT,STRIP(65,1),STATUS,' ')	! LINE #1
C
	DO I = EDGSTRT, 64				! PAD LEFT EDGE
	  STRIP(I,1) = STRIP(65,1)
	ENDDO
C
	DO I = IMGEND + 1, EDGEND			! PAD RIGHT EDGE
	  STRIP(I,1) = STRIP(IMGEND,1)
	ENDDO
C
	DO I = 2, HLFNLW + 1				! FILL TOP EDGE
	  CALL MVL(STRIP(EDGSTRT,1),STRIP(EDGSTRT,I),NSX2)
	ENDDO
C
	DO I = HLFNLW + 2, NLW			! LOAD REST OF STARTING LINES
	  CALL XVREAD(IUNIT,STRIP(65,I), STATUS, ' ')
	  DO J = EDGSTRT, 64				! PAD LEFT EDGES
	    STRIP(J,I) = STRIP(65,I)
	  ENDDO
	  DO J = IMGEND + 1, EDGEND			! PAD  RIGHT EDGES
	    STRIP(J,I) = STRIP(IMGEND,I)
	  ENDDO
	ENDDO
C
	CALL XVGET(IUNIT, STATUS, 'FORMAT', FORM, ' ')
	IF(FORM .EQ. 'HALF') GO TO 99
C
   	IF(XVPTST('MEAN')) GO TO 21
C
	DO I = EDGSTRT, EDGEND			! INIT. SQUARES BUFFER
	  DO J = 1, NLW
	    TEMP = STRIP(I,J)
	    STRIPSQ(I,J) = TEMP**2
	  ENDDO
	ENDDO
C
	IF(XVPTST('MOMENT')) GO TO 41
	IF(XVPTST('VARIANCE')) GO TO 61
C
  1	NXTSMPL = ADDSMPL
	LSTSMPL = EDGSTRT
	IMGLINE = IMGLINE + 1
	SUM = 0.0				! INIT. SUMS FOR START OF LINE
	SUMSQ = 0.0
C
	DO I = EDGSTRT, RTWNDO			! CLEAR COLUMN SUMS
	  COL(I) = 0.0
	  COLSQ(I) = 0.0
	ENDDO
C
	DO J = 1, NLW				! SUM UP WINDOW AND ITS COLUMNS
	  DO I = EDGSTRT,RTWNDO
	    SUM = SUM + STRIP(I,J)
	    SUMSQ = SUMSQ + STRIPSQ(I,J)
	    COL(I) = COL(I) + STRIP(I,J)
	    COLSQ(I) = COLSQ(I) + STRIPSQ(I,J)
	  ENDDO
	ENDDO
C
	M = 64					! INIT SAMPLE INDEX
C
  2	M = M + 1				! CALC SDEV
	MEAN = SUM / NPIXW
	MOM2 = SUMSQ / NPIXW
	VARI = MOM2 - MEAN**2
	SDEV = DSQRT(VARI) * SCALE + OFFSET
C
	OUTBUF(OUTINDX) = MIN(255, MAX(NINT(SDEV), 0))	! OUTPUT PIXEL
        OUTINDX = OUTINDX + 1
C
	IF(M .GE. IMGEND) GO TO 10		! END OF LINE ?
C
	SUM = SUM - COL(LSTSMPL)		!SET UP SUMS FOR NEXT PIXEL
	SUMSQ = SUMSQ - COLSQ(LSTSMPL)
	COL(NXTSMPL) = 0.0
	COLSQ(NXTSMPL) = 0.0
	DO I = 1, NLW
	  COL(NXTSMPL) = COL(NXTSMPL) + STRIP(NXTSMPL,I)
	  COLSQ(NXTSMPL) = COLSQ(NXTSMPL) + STRIPSQ(NXTSMPL,I)
	ENDDO
	SUM = SUM + COL(NXTSMPL)
	SUMSQ = SUMSQ + COLSQ(NXTSMPL)
	NXTSMPL = NXTSMPL + 1
	LSTSMPL = LSTSMPL + 1
	GO TO 2				! CRUNCH NEXT PIXEL
C
 10	CALL XVWRIT(OUNIT,OUTBUF,STATUS,' ')
	OUTINDX = 1
	IF(IMGLINE .GE. NL) GO TO 9999		! EXIT CONDITION
C
	IF(IMGLINE .GE. BOTTOM) THEN		! GOING OFF BOTTOM EDGE 
C						! NO MORE INPUT
 	  CALL MVL(STRIP(EDGSTRT,LASTINDX),STRIP(EDGSTRT,STRIPINDX),
     *		   NSX2)
	  CALL MVL(STRIPSQ(EDGSTRT,LASTINDX),STRIPSQ(EDGSTRT,STRIPINDX),
     *  	   NSX4)
	ELSE
C						! READ AND PAD NEWLINE
	  CALL XVREAD(IUNIT, STRIP(65,STRIPINDX),STATUS,' ')
C
	  DO I = EDGSTRT, 64			! PAD LEFT EDGE
	    STRIP(I,STRIPINDX) = STRIP(65,STRIPINDX)
	  ENDDO
C
	  DO I = IMGEND + 1, EDGEND		! PAD RIGHT EDGE
	    STRIP(I,STRIPINDX) = STRIP(IMGEND,STRIPINDX)
	  ENDDO
C
	  DO I = EDGSTRT, EDGEND			! ENTER NEW SQUARES
	    TEMP = STRIP(I,STRIPINDX)
	    STRIPSQ(I,STRIPINDX) = TEMP**2
	  ENDDO
	END IF
C
	STRIPINDX = STRIPINDX + 1
	IF(STRIPINDX .GT. NLW) STRIPINDX = 1
	GO TO 1
C
C
C
C		code for calculation of mean only
C
C
C
C
 21	NXTSMPL = ADDSMPL
	LSTSMPL = EDGSTRT
	IMGLINE = IMGLINE + 1
	SUM = 0.0				! INIT. SUMS FOR START OF LINE
C
	DO I = EDGSTRT, RTWNDO			! CLEAR COLUMN SUMS
	  COL(I) = 0.0
	ENDDO
C
	DO J = 1, NLW				! SUM UP WINDOW AND ITS COLUMNS
	  DO I = EDGSTRT,RTWNDO
	    SUM = SUM + STRIP(I,J)
	    COL(I) = COL(I) + STRIP(I,J)
	  ENDDO
	ENDDO
C
	M = 64					! INIT SAMPLE INDEX
C
 22	M = M + 1				! CALC SDEV
	MEAN = SUM / NPIXW
	MEAN = MIN(255, MAX(0, NINT(SCALE*MEAN+OFFSET)))
C
	OUTBUF(OUTINDX) = MEAN			! OUTPUT PIXEL
        OUTINDX = OUTINDX + 1
C
	IF(M .GE. IMGEND) GO TO 30		! END OF LINE ?
C
	SUM = SUM - COL(LSTSMPL)		!SET UP SUMS FOR NEXT PIXEL
	COL(NXTSMPL) = 0.0
	DO I = 1, NLW
	  COL(NXTSMPL) = COL(NXTSMPL) + STRIP(NXTSMPL,I)
	ENDDO
	SUM = SUM + COL(NXTSMPL)
	NXTSMPL = NXTSMPL + 1
	LSTSMPL = LSTSMPL + 1
	GO TO 22				! CRUNCH NEXT PIXEL
C
 30	CALL XVWRIT(OUNIT,OUTBUF,STATUS,' ')
	OUTINDX = 1
	IF(IMGLINE .GE. NL) GO TO 9999		! EXIT CONDITION
C
	IF(IMGLINE .GE. BOTTOM) GO TO 35      ! GOING OFF BOTTOM EDGE 
C						! NO MORE INPUT
C
C						! READ AND PAD NEWLINE
	CALL XVREAD(IUNIT, STRIP(65,STRIPINDX),STATUS,' ')
C
	DO I = EDGSTRT, 64			! PAD LEFT EDGE
	  STRIP(I,STRIPINDX) = STRIP(65,STRIPINDX)
	ENDDO
C
	DO I = IMGEND + 1, EDGEND		! PAD RIGHT EDGE
	  STRIP(I,STRIPINDX) = STRIP(IMGEND,STRIPINDX)
	ENDDO
C
C
	STRIPINDX = STRIPINDX + 1
	IF(STRIPINDX .GT. NLW) STRIPINDX = 1
	GO TO 21
C
C
C		NO MORE INPUT. REPEAT LAST LINE 
C
 35	CALL MVL(STRIP(EDGSTRT,LASTINDX),STRIP(EDGSTRT,STRIPINDX),NSX2)
	STRIPINDX = STRIPINDX + 1
	IF(STRIPINDX .GT. NLW) STRIPINDX = 1
	GO TO 21
C
C
 41	NXTSMPL = ADDSMPL
	LSTSMPL = EDGSTRT
	IMGLINE = IMGLINE + 1
	SUM = 0.0				! INIT. SUMS FOR START OF LINE
	SUMSQ = 0.0
C
	DO I = EDGSTRT, RTWNDO			! CLEAR COLUMN SUMS
	  COL(I) = 0.0
	  COLSQ(I) = 0.0
	ENDDO
C
	DO J = 1, NLW				! SUM UP WINDOW AND ITS COLUMNS
	  DO I = EDGSTRT,RTWNDO
	    SUM = SUM + STRIP(I,J)
	    SUMSQ = SUMSQ + STRIPSQ(I,J)
	    COL(I) = COL(I) + STRIP(I,J)
	    COLSQ(I) = COLSQ(I) + STRIPSQ(I,J)
	  ENDDO
	ENDDO
C
	M = 64					! INIT SAMPLE INDEX
C
 42	M = M + 1				! CALC SDEV
	MEAN = SUM / NPIXW
	MOM2 = SUMSQ / NPIXW
	MOM2 = MIN(255, MAX(0, NINT(SCALE*MOM2+OFFSET)))
C
	OUTBUF(OUTINDX) = MOM2			! OUTPUT PIXEL
        OUTINDX = OUTINDX + 1
C
	IF(M .GE. IMGEND) GO TO 50		! END OF LINE ?
C
	SUM = SUM - COL(LSTSMPL)		!SET UP SUMS FOR NEXT PIXEL
	SUMSQ = SUMSQ - COLSQ(LSTSMPL)
	COL(NXTSMPL) = 0.0
	COLSQ(NXTSMPL) = 0.0
	DO I = 1, NLW
	  COL(NXTSMPL) = COL(NXTSMPL) + STRIP(NXTSMPL,I)
	  COLSQ(NXTSMPL) = COLSQ(NXTSMPL) + STRIPSQ(NXTSMPL,I)
	ENDDO
	SUM = SUM + COL(NXTSMPL)
	SUMSQ = SUMSQ + COLSQ(NXTSMPL)
	NXTSMPL = NXTSMPL + 1
	LSTSMPL = LSTSMPL + 1
	GO TO 42				! CRUNCH NEXT PIXEL
C
 50	CALL XVWRIT(OUNIT,OUTBUF,STATUS,' ')
	OUTINDX = 1
	IF(IMGLINE .GE. NL) GO TO 9999		! EXIT CONDITION
C
	IF(IMGLINE .GE. BOTTOM) GO TO 55      ! GOING OFF BOTTOM EDGE 
C						! NO MORE INPUT
C
C						! READ AND PAD NEWLINE
	CALL XVREAD(IUNIT, STRIP(65,STRIPINDX),STATUS,' ')
C
	DO I = EDGSTRT, 64			! PAD LEFT EDGE
	  STRIP(I,STRIPINDX) = STRIP(65,STRIPINDX)
	ENDDO
C
	DO I = IMGEND + 1, EDGEND		! PAD RIGHT EDGE
	  STRIP(I,STRIPINDX) = STRIP(IMGEND,STRIPINDX)
	ENDDO
C
	DO I = EDGSTRT, EDGEND			! ENTER NEW SQUARES
	  TEMP = STRIP(I,STRIPINDX)
	  STRIPSQ(I,STRIPINDX) = TEMP**2
	ENDDO
C
	STRIPINDX = STRIPINDX + 1
	IF(STRIPINDX .GT. NLW) STRIPINDX = 1
	GO TO 41
C
C
C		NO MORE INPUT. REPEAT LAST LINE 
C
 55	CALL MVL(STRIP(EDGSTRT,LASTINDX),STRIP(EDGSTRT,STRIPINDX),NSX2)
	CALL MVL(STRIPSQ(EDGSTRT,LASTINDX),STRIPSQ(EDGSTRT,STRIPINDX),
     *  NSX4)
	STRIPINDX = STRIPINDX + 1
	IF(STRIPINDX .GT. NLW) STRIPINDX = 1
	GO TO 41
C
C
 61	NXTSMPL = ADDSMPL
	LSTSMPL = EDGSTRT
	IMGLINE = IMGLINE + 1
	SUM = 0.0				! INIT. SUMS FOR START OF LINE
	SUMSQ = 0.0
C
	DO I = EDGSTRT, RTWNDO			! CLEAR COLUMN SUMS
	  COL(I) = 0.0
	  COLSQ(I) = 0.0
	ENDDO
C
	DO J = 1, NLW				! SUM UP WINDOW AND ITS COLUMNS
	  DO I = EDGSTRT,RTWNDO
	    SUM = SUM + STRIP(I,J)
	    SUMSQ = SUMSQ + STRIPSQ(I,J)
	    COL(I) = COL(I) + STRIP(I,J)
	    COLSQ(I) = COLSQ(I) + STRIPSQ(I,J)
	  ENDDO
	ENDDO
C
	M = 64					! INIT SAMPLE INDEX
C
 62	M = M + 1				! CALC SDEV
	MEAN = SUM / NPIXW
	MOM2 = SUMSQ / NPIXW
	VARI = MOM2 - MEAN**2
	VARI = MIN(255, MAX(0, NINT(SCALE*VARI+OFFSET)))
C
	OUTBUF(OUTINDX) = VARI			! OUTPUT PIXEL
        OUTINDX = OUTINDX + 1
C
	IF(M .GE. IMGEND) GO TO 70		! END OF LINE ?
C
	SUM = SUM - COL(LSTSMPL)		!SET UP SUMS FOR NEXT PIXEL
	SUMSQ = SUMSQ - COLSQ(LSTSMPL)
	COL(NXTSMPL) = 0.0
	COLSQ(NXTSMPL) = 0.0
	DO I = 1, NLW
	  COL(NXTSMPL) = COL(NXTSMPL) + STRIP(NXTSMPL,I)
	  COLSQ(NXTSMPL) = COLSQ(NXTSMPL) + STRIPSQ(NXTSMPL,I)
	ENDDO
	SUM = SUM + COL(NXTSMPL)
	SUMSQ = SUMSQ + COLSQ(NXTSMPL)
	NXTSMPL = NXTSMPL + 1
	LSTSMPL = LSTSMPL + 1
	GO TO 62				! CRUNCH NEXT PIXEL
C
 70	CALL XVWRIT(OUNIT,OUTBUF,STATUS,' ')
	OUTINDX = 1
	IF(IMGLINE .GE. NL) GO TO 9999		! EXIT CONDITION
C
	IF(IMGLINE .GE. BOTTOM) GO TO 75      ! GOING OFF BOTTOM EDGE 
C						! NO MORE INPUT
C
C						! READ AND PAD NEWLINE
	CALL XVREAD(IUNIT, STRIP(65,STRIPINDX),STATUS,' ')
C
	DO I = EDGSTRT, 64			! PAD LEFT EDGE
	  STRIP(I,STRIPINDX) = STRIP(65,STRIPINDX)
	ENDDO
C
	DO I = IMGEND + 1, EDGEND		! PAD RIGHT EDGE
	  STRIP(I,STRIPINDX) = STRIP(IMGEND,STRIPINDX)
	ENDDO
C
	DO I = EDGSTRT, EDGEND			! ENTER NEW SQUARES
	  TEMP = STRIP(I,STRIPINDX)
	  STRIPSQ(I,STRIPINDX) = TEMP**2
	ENDDO
C
	STRIPINDX = STRIPINDX + 1
	IF(STRIPINDX .GT. NLW) STRIPINDX = 1
	GO TO 61
C
C
C		NO MORE INPUT. REPEAT LAST LINE 
C
 75	CALL MVL(STRIP(EDGSTRT,LASTINDX),STRIP(EDGSTRT,STRIPINDX),NSX2)
	CALL MVL(STRIPSQ(EDGSTRT,LASTINDX),STRIPSQ(EDGSTRT,STRIPINDX),
     *  NSX4)
	STRIPINDX = STRIPINDX + 1
	IF(STRIPINDX .GT. NLW) STRIPINDX = 1
	GO TO 61
C
   99	IF(XVPTST('MEAN')) GO TO 2100

C
	DO I = EDGSTRT, EDGEND			! INIT. SQUARES BUFFER
	  DO J = 1, NLW
	    TEMP = STRIP(I,J)
	    STRIPSQ(I,J) = TEMP**2
	  ENDDO
	ENDDO
C
	IF(XVPTST('MOMENT')) GO TO 4100
	IF(XVPTST('VARIANCE')) GO TO 6100
C
  100	NXTSMPL = ADDSMPL
	LSTSMPL = EDGSTRT
	IMGLINE = IMGLINE + 1
	SUM = 0.0				! INIT. SUMS FOR START OF LINE
	SUMSQ = 0.0
C
	DO I = EDGSTRT, RTWNDO			! CLEAR COLUMN SUMS
	  COL(I) = 0.0
	  COLSQ(I) = 0.0
	ENDDO
C
	DO J = 1, NLW				! SUM UP WINDOW AND ITS COLUMNS
	  DO I = EDGSTRT,RTWNDO
	    SUM = SUM + STRIP(I,J)
	    SUMSQ = SUMSQ + STRIPSQ(I,J)
	    COL(I) = COL(I) + STRIP(I,J)
	    COLSQ(I) = COLSQ(I) + STRIPSQ(I,J)
	  ENDDO
	ENDDO
C
	M = 64					! INIT SAMPLE INDEX
C
  200	M = M + 1				! CALC SDEV
	MEAN = SUM / NPIXW
	MOM2 = SUMSQ / NPIXW
	VARI = MOM2 - MEAN**2
	SDEV = DSQRT(VARI) * SCALE + OFFSET
C
	OUTBUF(OUTINDX) = MIN(32767, MAX(-32768, NINT(SDEV)))	! OUTPUT PIXEL
        OUTINDX = OUTINDX + 1
C
	IF(M .GE. IMGEND) GO TO 1000		! END OF LINE ?
C
	SUM = SUM - COL(LSTSMPL)		!SET UP SUMS FOR NEXT PIXEL
	SUMSQ = SUMSQ - COLSQ(LSTSMPL)
	COL(NXTSMPL) = 0.0
	COLSQ(NXTSMPL) = 0.0
	DO I = 1, NLW
	  COL(NXTSMPL) = COL(NXTSMPL) + STRIP(NXTSMPL,I)
	  COLSQ(NXTSMPL) = COLSQ(NXTSMPL) + STRIPSQ(NXTSMPL,I)
	ENDDO
	SUM = SUM + COL(NXTSMPL)
	SUMSQ = SUMSQ + COLSQ(NXTSMPL)
	NXTSMPL = NXTSMPL + 1
	LSTSMPL = LSTSMPL + 1
	GO TO 200				! CRUNCH NEXT PIXEL
C
 1000	CALL XVWRIT(OUNIT,OUTBUF,STATUS,' ')
	OUTINDX = 1
	IF(IMGLINE .GE. NL) GO TO 9999		! EXIT CONDITION
C
	IF(IMGLINE .GE. BOTTOM) GO TO 1500      ! GOING OFF BOTTOM EDGE 
C						! NO MORE INPUT
C
C						! READ AND PAD NEWLINE
	CALL XVREAD(IUNIT, STRIP(65,STRIPINDX),STATUS,' ')
C
	DO I = EDGSTRT, 64			! PAD LEFT EDGE
	  STRIP(I,STRIPINDX) = STRIP(65,STRIPINDX)
	ENDDO
C
	DO I = IMGEND + 1, EDGEND		! PAD RIGHT EDGE
	  STRIP(I,STRIPINDX) = STRIP(IMGEND,STRIPINDX)
	ENDDO
C
	DO I = EDGSTRT, EDGEND			! ENTER NEW SQUARES
	  TEMP = STRIP(I,STRIPINDX)
	  STRIPSQ(I,STRIPINDX) = TEMP**2
	ENDDO
C
	STRIPINDX = STRIPINDX + 1
	IF(STRIPINDX .GT. NLW) STRIPINDX = 1
	GO TO 100
C
C
C		NO MORE INPUT. REPEAT LAST LINE 
C
 1500	CALL MVL(STRIP(EDGSTRT,LASTINDX),STRIP(EDGSTRT,STRIPINDX),NSX2)
	CALL MVL(STRIPSQ(EDGSTRT,LASTINDX),STRIPSQ(EDGSTRT,STRIPINDX),
     *  NSX4)
	STRIPINDX = STRIPINDX + 1
	IF(STRIPINDX .GT. NLW) STRIPINDX = 1
	GO TO 100
C
C
C		code for calculation of mean only
C
C
C
C
 2100	NXTSMPL = ADDSMPL
	LSTSMPL = EDGSTRT
	IMGLINE = IMGLINE + 1
	SUM = 0.0				! INIT. SUMS FOR START OF LINE
C
	DO I = EDGSTRT, RTWNDO			! CLEAR COLUMN SUMS
	  COL(I) = 0.0
	ENDDO
C
	DO J = 1, NLW				! SUM UP WINDOW AND ITS COLUMNS
	  DO I = EDGSTRT,RTWNDO
	    SUM = SUM + STRIP(I,J)
	    COL(I) = COL(I) + STRIP(I,J)
	  ENDDO
	ENDDO
C
	M = 64					! INIT SAMPLE INDEX
C
 2200	M = M + 1				! CALC SDEV
	MEAN = SUM / NPIXW
	MEAN = MIN(32767, MAX(-32768, NINT(SCALE*MEAN+OFFSET)))
C
	OUTBUF(OUTINDX) = MEAN			! OUTPUT PIXEL
        OUTINDX = OUTINDX + 1
C
	IF(M .GE. IMGEND) GO TO 3000		! END OF LINE ?
C
	SUM = SUM - COL(LSTSMPL)		!SET UP SUMS FOR NEXT PIXEL
	COL(NXTSMPL) = 0.0
	DO I = 1, NLW
	  COL(NXTSMPL) = COL(NXTSMPL) + STRIP(NXTSMPL,I)
	ENDDO
	SUM = SUM + COL(NXTSMPL)
	NXTSMPL = NXTSMPL + 1
	LSTSMPL = LSTSMPL + 1
	GO TO 2200				! CRUNCH NEXT PIXEL
C
 3000	CALL XVWRIT(OUNIT,OUTBUF,STATUS,' ')
	OUTINDX = 1
	IF(IMGLINE .GE. NL) GO TO 9999		! EXIT CONDITION
C
	IF(IMGLINE .GE. BOTTOM) GO TO 3500      ! GOING OFF BOTTOM EDGE 
C						! NO MORE INPUT
C
C						! READ AND PAD NEWLINE
	CALL XVREAD(IUNIT, STRIP(65,STRIPINDX),STATUS,' ')
C
	DO I = EDGSTRT, 64			! PAD LEFT EDGE
	  STRIP(I,STRIPINDX) = STRIP(65,STRIPINDX)
	ENDDO
C
	DO I = IMGEND + 1, EDGEND		! PAD RIGHT EDGE
	  STRIP(I,STRIPINDX) = STRIP(IMGEND,STRIPINDX)
	ENDDO
C
C
	STRIPINDX = STRIPINDX + 1
	IF(STRIPINDX .GT. NLW) STRIPINDX = 1
	GO TO 2100
C
C
C		NO MORE INPUT. REPEAT LAST LINE 
C
 3500	CALL MVL(STRIP(EDGSTRT,LASTINDX),STRIP(EDGSTRT,STRIPINDX),NSX2)
	STRIPINDX = STRIPINDX + 1
	IF(STRIPINDX .GT. NLW) STRIPINDX = 1
	GO TO 2100
C
C
 4100	NXTSMPL = ADDSMPL
	LSTSMPL = EDGSTRT
	IMGLINE = IMGLINE + 1
	SUM = 0.0				! INIT. SUMS FOR START OF LINE
	SUMSQ = 0.0
C
	DO I = EDGSTRT, RTWNDO			! CLEAR COLUMN SUMS
	  COL(I) = 0.0
	  COLSQ(I) = 0.0
	ENDDO
C
	DO J = 1, NLW				! SUM UP WINDOW AND ITS COLUMNS
	  DO I = EDGSTRT,RTWNDO
	    SUM = SUM + STRIP(I,J)
	    SUMSQ = SUMSQ + STRIPSQ(I,J)
	    COL(I) = COL(I) + STRIP(I,J)
	    COLSQ(I) = COLSQ(I) + STRIPSQ(I,J)
	  ENDDO
	ENDDO
C
	M = 64					! INIT SAMPLE INDEX
C
 4200	M = M + 1				! CALC SDEV
	MEAN = SUM / NPIXW
	MOM2 = SUMSQ / NPIXW
	MOM2 = MIN(32767, MAX(-32768, NINT(SCALE*MOM2+OFFSET)))
C
	OUTBUF(OUTINDX) = MOM2			! OUTPUT PIXEL
        OUTINDX = OUTINDX + 1
C
	IF(M .GE. IMGEND) GO TO 5000		! END OF LINE ?
C
	SUM = SUM - COL(LSTSMPL)		!SET UP SUMS FOR NEXT PIXEL
	SUMSQ = SUMSQ - COLSQ(LSTSMPL)
	COL(NXTSMPL) = 0.0
	COLSQ(NXTSMPL) = 0.0
	DO I = 1, NLW
	  COL(NXTSMPL) = COL(NXTSMPL) + STRIP(NXTSMPL,I)
	  COLSQ(NXTSMPL) = COLSQ(NXTSMPL) + STRIPSQ(NXTSMPL,I)
	ENDDO
	SUM = SUM + COL(NXTSMPL)
	SUMSQ = SUMSQ + COLSQ(NXTSMPL)
	NXTSMPL = NXTSMPL + 1
	LSTSMPL = LSTSMPL + 1
	GO TO 4200				! CRUNCH NEXT PIXEL
C
 5000	CALL XVWRIT(OUNIT,OUTBUF,STATUS,' ')
	OUTINDX = 1
	IF(IMGLINE .GE. NL) GO TO 9999		! EXIT CONDITION
C
	IF(IMGLINE .GE. BOTTOM) GO TO 5500      ! GOING OFF BOTTOM EDGE 
C						! NO MORE INPUT
C
C						! READ AND PAD NEWLINE
	CALL XVREAD(IUNIT, STRIP(65,STRIPINDX),STATUS,' ')
C
	DO I = EDGSTRT, 64			! PAD LEFT EDGE
	  STRIP(I,STRIPINDX) = STRIP(65,STRIPINDX)
	ENDDO
C
	DO I = IMGEND + 1, EDGEND		! PAD RIGHT EDGE
	  STRIP(I,STRIPINDX) = STRIP(IMGEND,STRIPINDX)
	ENDDO
C
	DO I = EDGSTRT, EDGEND			! ENTER NEW SQUARES
	  TEMP = STRIP(I,STRIPINDX)
	  STRIPSQ(I,STRIPINDX) = TEMP**2
	ENDDO
C
	STRIPINDX = STRIPINDX + 1
	IF(STRIPINDX .GT. NLW) STRIPINDX = 1
	GO TO 4100
C
C
C		NO MORE INPUT. REPEAT LAST LINE 
C
 5500	CALL MVL(STRIP(EDGSTRT,LASTINDX),STRIP(EDGSTRT,STRIPINDX),NSX2)
	CALL MVL(STRIPSQ(EDGSTRT,LASTINDX),STRIPSQ(EDGSTRT,STRIPINDX),
     *  NSX4)
	STRIPINDX = STRIPINDX + 1
	IF(STRIPINDX .GT. NLW) STRIPINDX = 1
	GO TO 4100
C
C
 6100	NXTSMPL = ADDSMPL
	LSTSMPL = EDGSTRT
	IMGLINE = IMGLINE + 1
	SUM = 0.0				! INIT. SUMS FOR START OF LINE
	SUMSQ = 0.0
C
	DO I = EDGSTRT, RTWNDO			! CLEAR COLUMN SUMS
	  COL(I) = 0.0
	  COLSQ(I) = 0.0
	ENDDO
C
	DO J = 1, NLW				! SUM UP WINDOW AND ITS COLUMNS
	  DO I = EDGSTRT,RTWNDO
	    SUM = SUM + STRIP(I,J)
	    SUMSQ = SUMSQ + STRIPSQ(I,J)
	    COL(I) = COL(I) + STRIP(I,J)
	    COLSQ(I) = COLSQ(I) + STRIPSQ(I,J)
	  ENDDO
	ENDDO
C
	M = 64					! INIT SAMPLE INDEX
C
 6200	M = M + 1				! CALC SDEV
	MEAN = SUM / NPIXW
	MOM2 = SUMSQ / NPIXW
	VARI = MOM2 - MEAN**2
	VARI = MIN(32767, MAX(-32768, NINT(SCALE*VARI+OFFSET)))
C
	OUTBUF(OUTINDX) = VARI			! OUTPUT PIXEL
        OUTINDX = OUTINDX + 1
C
	IF(M .GE. IMGEND) GO TO 7000		! END OF LINE ?
C
	SUM = SUM - COL(LSTSMPL)		!SET UP SUMS FOR NEXT PIXEL
	SUMSQ = SUMSQ - COLSQ(LSTSMPL)
	COL(NXTSMPL) = 0.0
	COLSQ(NXTSMPL) = 0.0
	DO I = 1, NLW
	  COL(NXTSMPL) = COL(NXTSMPL) + STRIP(NXTSMPL,I)
	  COLSQ(NXTSMPL) = COLSQ(NXTSMPL) + STRIPSQ(NXTSMPL,I)
	ENDDO
	SUM = SUM + COL(NXTSMPL)
	SUMSQ = SUMSQ + COLSQ(NXTSMPL)
	NXTSMPL = NXTSMPL + 1
	LSTSMPL = LSTSMPL + 1
	GO TO 6200				! CRUNCH NEXT PIXEL
C
 7000	CALL XVWRIT(OUNIT,OUTBUF,STATUS,' ')
	OUTINDX = 1
	IF(IMGLINE .GE. NL) GO TO 9999		! EXIT CONDITION
C
	IF(IMGLINE .GE. BOTTOM) GO TO 7500      ! GOING OFF BOTTOM EDGE 
C						! NO MORE INPUT
C
C						! READ AND PAD NEWLINE
	CALL XVREAD(IUNIT, STRIP(65,STRIPINDX),STATUS,' ')
C
	DO I = EDGSTRT, 64			! PAD LEFT EDGE
	  STRIP(I,STRIPINDX) = STRIP(65,STRIPINDX)
	ENDDO
C
	DO I = IMGEND + 1, EDGEND		! PAD RIGHT EDGE
	  STRIP(I,STRIPINDX) = STRIP(IMGEND,STRIPINDX)
	ENDDO
C
	DO I = EDGSTRT, EDGEND			! ENTER NEW SQUARES
	  TEMP = STRIP(I,STRIPINDX)
	  STRIPSQ(I,STRIPINDX) = TEMP**2
	ENDDO
C
	STRIPINDX = STRIPINDX + 1
	IF(STRIPINDX .GT. NLW) STRIPINDX = 1
	GO TO 6100
C
C
C		NO MORE INPUT. REPEAT LAST LINE 
C
 7500	CALL MVL(STRIP(EDGSTRT,LASTINDX),STRIP(EDGSTRT,STRIPINDX),NSX2)
	CALL MVL(STRIPSQ(EDGSTRT,LASTINDX),STRIPSQ(EDGSTRT,STRIPINDX),
     *  NSX4)
	STRIPINDX = STRIPINDX + 1
	IF(STRIPINDX .GT. NLW) STRIPINDX = 1
	GO TO 6100
C

C
C       CLOSE DATA SETS
C
 9999	CALL XVCLOSE(IUNIT,STATUS,' ')
	CALL XVCLOSE(OUNIT,STATUS,' ')
C
	RETURN
 	END
