process help=*
!
! FILE NAMES
PARM INP TYPE=STRING COUNT=(1:10)
PARM OUT TYPE=STRING COUNT=(1:4)
!
! SIZE FIELD
PARM SIZE TYPE=INTEGER COUNT=4 DEFAULT=(1,1,0,0)
PARM SL INTEGER DEFAULT=1
PARM SS INTEGER DEFAULT=1
PARM NL INTEGER DEFAULT=0
PARM NS INTEGER DEFAULT=0
!
! INPUT FILE PARAMETER
PARM IRANGE TYPE=REAL  COUNT=2  DEFAULT=(0,0)
!
! OUTPUT FILE PARAMETERS
PARM OFORM KEYWORD VALID=(BYTE,HALF,FULL,REAL,REAL8,DOUB,COMPLEX)+
 COUNT=0:1 DEFAULT=--
PARM ORANGE TYPE=REAL  COUNT=2  DEFAULT=(0,0)
!
! SLOPE AND OFFSET
PARM SO TYPE=REAL COUNT=2 DEFAULT=(1.,0.)
END-PROC
!
! HELP TEXT
.TITLE
C -- Program to convert image data formats.
.HELP
PURPOSE
  C is a VICAR applications program which converts images between all
  recognized format character types and performs linear transformations
  on images.

EXECUTION

  C  INP  OUT  PARAMS

  where INP and OUT are input and output file parameters and PARAMS are
  other parameter that are described in Tutor mode.

METHOD

  The program reads each image line into a buffer and treats the contents
  of the buffer as data of type implied by the label.  Byte data are read
  in as halfwords.  A simple linear stretch is then applied to these data
  and they are written out in the output format specified.

  If no format code is specified for OUT the following action is taken:
    1.  If input format is BYTE, then output format is HALF.
    2.  If input format is not BYTE, then output format is BYTE.
.page
 COMPLEX DATA:

  The linear relation between IN and OUT must be qualified for complex
  data according to the following table:

       INPUT        OUTPUT       Transformation Type
      Format        Format

      non-complex   complex       OUT = (IN*SL+OF) + 0.0i
      complex       non-complex   OUT = |IN| * SL + OF
      complex       complex       OUT = IN * SL + OF
.page
EXAMPLES

  C A B (1,1,10,20) IRANGE=(10,20) ORANGE=(-20,2000) OFORM=FULL
    Data set B is fullword integer where the values have been scaled
    linearly such that 10 -> -20 and 20 -> 2000.  Only the first 10
    lines and 20 samples of A are passed to B.

  C A B OFORM=HALF SO=(2,0)
    Data set B's format is a halfword integer, with each input value
    multiplied by 2.
.page
RESTRICTIONS

 The maximum permitted line length (bytes per line) is 60,000 for BYTE
 format and 120,000 otherwise.
.page
COGNIZANT PROGRAMMER

Written by: J. J. Lorre    18 April 1980
Converted to VAX by: Dan Stanfill    June 1983
Last Revision:  L. W. Kamp,  19 Feb. 1985
Current Cognizant Programmer:  L. W. Kamp

.LEVEL1
.VARI INP
Input file name.
.VARI OUT
Output file name.
.VARI SIZE
Standard VICAR size field
.VARI SL
Starting line
.vari SS
Starting sample
.vari NL
Number of lines
.vari NS
Number of samples
.VARI IRANGE
Pair of numbers for performing
stretch.  ORANGE must also be
specified.
.VARI OFORM
Output storage format.
.VARI ORANGE
Output range values for stretch.
(See IRANGE.)
.VARI SO
(Slope,offset) for linear
transformations.
.LEVEL2
.VARI INP
 Input file name
.VARI OUT
 Output file name
.VARI SIZE
The size field is specified with four arguments,
      SIZE=(SL,SS,NL,NS)
where:
SL is the starting line of the input file to be read.
SS is the starting sample to be read of each input line.
NL is the number of lines to be read.
NS is the number of samples to be read for each line.
For example, SIZE=(1,1,30,20)
would read the first 30 lines and 20 samples of the input picture.

These parameters can also be specified separately using SL, SS, NL,
and NS.
.VARI OFORM
OFORM (Keyword) specifies the format to which the input is to be converted.
The following are the valid values:

         BYTE              Unsigned 8-bit binary integer.
         HALF              Signed 16-bit binary integer.
         FULL              Signed 32-bit binary integer.
         REAL              VAX single precision floating point (REAL*4).
         DOUB or REAL8     VAX double precision floating point (REAL*8).
         COMPLEX           Two single precision floating point values
                           representing the real and imaginary parts of
                           a complex number (COMPLEX*8).
.VARI SO
     SO          SO is a keyword  followed by  two  values (real or
                 integer)  which specify  the slope (SL) and offset
                 (OF) of the  transformation  to be applied between
                 the input and output data sets in the sense:
                             OUT = IN * SL + OF
                 (Note that for output  formats  of BYTE, HALF, FULL,
                 the specified value of OF will be  increased by 0.5
                 for positive values of OF and will  be decreased by
                 0.5  for  negative  values  of  OF  to  correct for
                 truncation.   This  additional 0.5 will  not appear
                 in the  picture label.)  The default is SO=(1.0,0.0).
.VARI IRANGE
IRANGE  is a  keyword followed  by two values which specify two values
in the input  which  map to two values in the output (ORANGE must also 
be specified).  IRANGE and ORANGE values are converted into equivalent
SO values by "C".  If SO is specified, then IRANGE and ORANGE are ignored.
If none of SO, IRANGE or ORANGE are specified, the default transformation
is performed:  SO=(1.0,0.0).
.VARI ORANGE
ORANGE is a keyword followed by two values which are used in conjunction
with the two values specified by IRANGE in order to determine a slope and
offset for a linear transformation.   See IRANGE.
.END
