                Version 5C/16C

      ***********************************************************
      *                                                         *
      * VICAR Supervisor version 5C, TAE V5.2                   *
      *   Debugger is now supported on all platforms            *
      *   USAGE command now implemented under Unix              *
      *                                                         *
      * VRDI and VIDS now support X-windows and Unix            *
      * New X-windows display program: xvd (for all but VAX/VMS)*
      *                                                         *
      * VICAR Run-Time Library version 16C                      *
      *   '+' form of temp filename now avail. on all platforms *
      *   ANSI C now fully supported                            *
      *                                                         *
      * See B.Deen(RGD059) with problems                        *
      *                                                         *
      ***********************************************************

  --- Type NUT for the New User Tutorial ---

  --- Type MENU for a menu of available applications ---

gen 1 20 20
Beginning VICAR task gen
GEN Version 6
GEN task completed
gen 2 20 20 IVAL=1
Beginning VICAR task gen
GEN Version 6
GEN task completed
genthis tmp1 5 5 dn=(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17, +
                     18,19,20,21,22,23,24,25)
Beginning VICAR task genthis
 GENTHIS VERSION 2
 GENTHIS TASK COMPLETED
size tmp1 3 zoom=4 'noin
Beginning VICAR task size
 SIZE version 22 Aug 2013 (64-bit) - rjb
      INPUT AREA=(    1,    1,    5,    5)
     OUTPUT SIZE=     20 X     20
 PICTURE SIZE SCALED BY      4*NL,      4*NS
 SIZE task completed
genthis tmp2 10 10 dn=(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17, +
                       18,19,20,21,22,23,24,25,26,27,28,29,30,31, +
                       32,33,34,35,36,37,38,39,40,41,42,43,44,45, +
                       46,47,48,49,50,51,52,53,54,55,56,57,58,59, +
                       60,61,62,63,64,65,66,67,68,69,70,71,72,73, +
                       74,75,76,77,78,79,80,81,82,83,84,85,86,87, +
                       88,89,90,91,92,93,94,95,96,97,98,99,100)
Beginning VICAR task genthis
 GENTHIS VERSION 2
 GENTHIS TASK COMPLETED
size tmp2 4 zoom=2 'noin
Beginning VICAR task size
 SIZE version 22 Aug 2013 (64-bit) - rjb
      INPUT AREA=(    1,    1,   10,   10)
     OUTPUT SIZE=     20 X     20
 PICTURE SIZE SCALED BY      2*NL,      2*NS
 SIZE task completed
ratio (1,2) C
LET FLD1 = ""
LET FLD2 = ""
LET SIZF = ""
LET AREF = ""
IF ((SIZE(3)<>0) OR (SIZE(4)<>0)) LET SIZF="SIZE=&SIZE"
IF ((AREA(3)<>0) OR (AREA(4)<>0)) LET AREF="AREA=&AREA"
IF (SAMPLE<>5.0) LET FLD1=FLD1//" SAMPLE=&SAMPLE"
IF (LINC<>20) LET FLD1=FLD1//" LINC=&LINC"
IF (INCLUDE(1)<>0.0 OR INCLUDE(2)<>5.0) LET FLD1=FLD1//" INCLUDE=&INCLUDE"
IF (THRESHOL<>0) LET FLD1=FLD1//" THRESH=&THRESHOL"
IF (PERCENT<>2.0) LET FLD2=FLD2//" PERCENT=&PERCENT"
IF (ATM1<>0.0) LET FLD2=FLD2//" ATM1=&ATM1"
IF (ATM2<>0.0) LET FLD2=FLD2//" ATM2=&ATM2"
RATIO0 (1,2) C     CENTER=CENTER MODE=RATIO   MODE2=NOLOG MODE3=FILT+
ER MODE4=DISPLAY FUNC=LFUNC
Beginning VICAR task RATIO0
*** p3/RATIO0 version Sep 9 2015 ***
R A T I O

       0.005     0DN  ***********
       0.015          ***********
       0.025          ******

       0.485          ******
       0.495          ******
       0.505          ******
       0.515          ******
       0.525          ******

       0.645          ******
       0.655          ******
       0.665          ******
       0.675          ******
       0.685          ******

       0.735          ******
       0.745          ******
       0.755          ******
       0.765          ******
       0.775          ******
       0.785          ******
       0.795          ******
       0.805          ******
       0.815          ***********
       0.825    MEAN  ***********
       0.835          ***********
       0.845          ***********
       0.855          ****************
       0.865          ****************
       0.875          ****************
       0.885          *********************
       0.895          **************************
       0.905          *******************************
       0.915          ************************************
       0.925          ***************************************************
       0.935          **********************************************
       0.945          *****************************************
       0.955          *******************************
       0.965          *********************
       0.975          ******


"155.488*(IN1/IN2)+0.00000"
IF (OUT<>"") F2 (1,2) C  FUNC="155.488*(IN1/IN2)+0.00000"
 F2 (1,2) C  FUNC="155.488*(IN1/IN2)+0.00000"
Beginning VICAR task F2
F2 version 98-Aug-2015
F2 using hash table lookup
FUNCTION EVALUATED 40 TIMES
END-PROC
list C
Beginning VICAR task list

   BYTE     samples are interpreted as   BYTE   data
 Task:GEN       User:wlb       Date_Time:Wed Sep  9 17:20:18 2015
 Task:F2        User:wlb       Date_Time:Wed Sep  9 17:20:18 2015
     Samp     1       3       5       7       9      11      13      15      17      19
   Line
      1       0  78 104 117 124 130 133 136 138 140 141 143 144 144 145 146 146 147 147 148
      2      78 104 117 124 130 133 136 138 140 141 143 144 144 145 146 146 147 147 148 148
      3     104 117 124 130 133 136 138 140 141 143 144 144 145 146 146 147 147 148 148 148
      4     117 124 130 133 136 138 140 141 143 144 144 145 146 146 147 147 148 148 148 149
      5     124 130 133 136 138 140 141 143 144 144 145 146 146 147 147 148 148 148 149 149
      6     130 133 136 138 140 141 143 144 144 145 146 146 147 147 148 148 148 149 149 149
      7     133 136 138 140 141 143 144 144 145 146 146 147 147 148 148 148 149 149 149 150
      8     136 138 140 141 143 144 144 145 146 146 147 147 148 148 148 149 149 149 150 150
      9     138 140 141 143 144 144 145 146 146 147 147 148 148 148 149 149 149 150 150 150
     10     140 141 143 144 144 145 146 146 147 147 148 148 148 149 149 149 150 150 150 150
     11     141 143 144 144 145 146 146 147 147 148 148 148 149 149 149 150 150 150 150 150
     12     143 144 144 145 146 146 147 147 148 148 148 149 149 149 150 150 150 150 150 150
     13     144 144 145 146 146 147 147 148 148 148 149 149 149 150 150 150 150 150 150 151
     14     144 145 146 146 147 147 148 148 148 149 149 149 150 150 150 150 150 150 151 151
     15     145 146 146 147 147 148 148 148 149 149 149 150 150 150 150 150 150 151 151 151
     16     146 146 147 147 148 148 148 149 149 149 150 150 150 150 150 150 151 151 151 151
     17     146 147 147 148 148 148 149 149 149 150 150 150 150 150 150 151 151 151 151 151
     18     147 147 148 148 148 149 149 149 150 150 150 150 150 150 151 151 151 151 151 151
     19     147 148 148 148 149 149 149 150 150 150 150 150 150 151 151 151 151 151 151 151
     20     148 148 148 149 149 149 150 150 150 150 150 150 151 151 151 151 151 151 151 152
ratio (1,2) C 'LOG
LET FLD1 = ""
LET FLD2 = ""
LET SIZF = ""
LET AREF = ""
IF ((SIZE(3)<>0) OR (SIZE(4)<>0)) LET SIZF="SIZE=&SIZE"
IF ((AREA(3)<>0) OR (AREA(4)<>0)) LET AREF="AREA=&AREA"
IF (SAMPLE<>5.0) LET FLD1=FLD1//" SAMPLE=&SAMPLE"
IF (LINC<>20) LET FLD1=FLD1//" LINC=&LINC"
IF (INCLUDE(1)<>0.0 OR INCLUDE(2)<>5.0) LET FLD1=FLD1//" INCLUDE=&INCLUDE"
IF (THRESHOL<>0) LET FLD1=FLD1//" THRESH=&THRESHOL"
IF (PERCENT<>2.0) LET FLD2=FLD2//" PERCENT=&PERCENT"
IF (ATM1<>0.0) LET FLD2=FLD2//" ATM1=&ATM1"
IF (ATM2<>0.0) LET FLD2=FLD2//" ATM2=&ATM2"
RATIO0 (1,2) C     CENTER=CENTER MODE=RATIO   MODE2=LOG MODE3=FILTER+
 MODE4=DISPLAY FUNC=LFUNC
Beginning VICAR task RATIO0
*** p3/RATIO0 version Sep 9 2015 ***
L O G   R A T I O

      -0.705     0DN  ********
      -0.698          ********
      -0.692          ********
      -0.686          ********
      -0.679          ********

      -0.415          ********
      -0.409          ********
      -0.402          ********
      -0.396          ********
      -0.389          ********

      -0.299          ********
      -0.293          ********
      -0.286          ********
      -0.280          ********
      -0.274          ********

      -0.235          ********
      -0.229          ********
      -0.222          ********
      -0.216          ********
      -0.209          ********

      -0.196          ********
      -0.190          ********
      -0.183          ********
      -0.177          ********
      -0.171          ********
      -0.164          ********
      -0.158    MEAN  ********
      -0.151          ********
      -0.145          ***************
      -0.138          ***************
      -0.132          ***************
      -0.126          ***************
      -0.119          **********************
      -0.113          ***************
      -0.106          **********************
      -0.100          **********************
      -0.093          *****************************
      -0.087          *****************************
      -0.080          *******************************************
      -0.074          *******************************************
      -0.068          ***************************************************
      -0.061          ***************************************************
      -0.055          *******************************************
      -0.048          *****************************
      -0.042          **********************
      -0.035          ********


"233.001*ALOG(IN1/IN2)+165.000"
IF (OUT<>"") F2 (1,2) C  FUNC="233.001*ALOG(IN1/IN2)+165.000"
 F2 (1,2) C  FUNC="233.001*ALOG(IN1/IN2)+165.000"
Beginning VICAR task F2
F2 version 98-Aug-2015
F2 using hash table lookup
FUNCTION EVALUATED 40 TIMES
END-PROC
list C
Beginning VICAR task list

   BYTE     samples are interpreted as   BYTE   data
 Task:GEN       User:wlb       Date_Time:Wed Sep  9 17:20:18 2015
 Task:F2        User:wlb       Date_Time:Wed Sep  9 17:20:18 2015
     Samp     1       3       5       7       9      11      13      15      17      19
   Line
      1       0   3  71  98 113 123 129 134 138 140 143 145 146 148 149 150 151 152 152 153
      2       3  71  98 113 123 129 134 138 140 143 145 146 148 149 150 151 152 152 153 154
      3      71  98 113 123 129 134 138 140 143 145 146 148 149 150 151 152 152 153 154 154
      4      98 113 123 129 134 138 140 143 145 146 148 149 150 151 152 152 153 154 154 155
      5     113 123 129 134 138 140 143 145 146 148 149 150 151 152 152 153 154 154 155 155
      6     123 129 134 138 140 143 145 146 148 149 150 151 152 152 153 154 154 155 155 155
      7     129 134 138 140 143 145 146 148 149 150 151 152 152 153 154 154 155 155 155 156
      8     134 138 140 143 145 146 148 149 150 151 152 152 153 154 154 155 155 155 156 156
      9     138 140 143 145 146 148 149 150 151 152 152 153 154 154 155 155 155 156 156 157
     10     140 143 145 146 148 149 150 151 152 152 153 154 154 155 155 155 156 156 157 157
     11     143 145 146 148 149 150 151 152 152 153 154 154 155 155 155 156 156 157 157 157
     12     145 146 148 149 150 151 152 152 153 154 154 155 155 155 156 156 157 157 157 157
     13     146 148 149 150 151 152 152 153 154 154 155 155 155 156 156 157 157 157 157 158
     14     148 149 150 151 152 152 153 154 154 155 155 155 156 156 157 157 157 157 158 158
     15     149 150 151 152 152 153 154 154 155 155 155 156 156 157 157 157 157 158 158 158
     16     150 151 152 152 153 154 154 155 155 155 156 156 157 157 157 157 158 158 158 158
     17     151 152 152 153 154 154 155 155 155 156 156 157 157 157 157 158 158 158 158 158
     18     152 152 153 154 154 155 155 155 156 156 157 157 157 157 158 158 158 158 158 159
     19     152 153 154 154 155 155 155 156 156 157 157 157 157 158 158 158 158 158 159 159
     20     153 154 154 155 155 155 156 156 157 157 157 157 158 158 158 158 158 159 159 159
ratio (2,3) C 'DIFF
LET FLD1 = ""
LET FLD2 = ""
LET SIZF = ""
LET AREF = ""
IF ((SIZE(3)<>0) OR (SIZE(4)<>0)) LET SIZF="SIZE=&SIZE"
IF ((AREA(3)<>0) OR (AREA(4)<>0)) LET AREF="AREA=&AREA"
IF (SAMPLE<>5.0) LET FLD1=FLD1//" SAMPLE=&SAMPLE"
IF (LINC<>20) LET FLD1=FLD1//" LINC=&LINC"
IF (INCLUDE(1)<>0.0 OR INCLUDE(2)<>5.0) LET FLD1=FLD1//" INCLUDE=&INCLUDE"
IF (THRESHOL<>0) LET FLD1=FLD1//" THRESH=&THRESHOL"
IF (PERCENT<>2.0) LET FLD2=FLD2//" PERCENT=&PERCENT"
IF (ATM1<>0.0) LET FLD2=FLD2//" ATM1=&ATM1"
IF (ATM2<>0.0) LET FLD2=FLD2//" ATM2=&ATM2"
RATIO0 (2,3) C     CENTER=CENTER MODE=DIFFEREN   MODE2=NOLOG MODE3=F+
ILTER MODE4=DISPLAY FUNC=LFUNC
Beginning VICAR task RATIO0
*** p3/RATIO0 version Sep 9 2015 ***
D I F F E R E N C E

      -2.000     0DN  ********
      -1.000          ***************
       0.000          **********************
       1.000          ************************************
       2.000          *******************************************
       3.000          *******************************************
       4.000          ***************************************************
       5.000          ***************************************************
       6.000          *******************************************
       7.000          ***************************************************
       8.000    MEAN  ***************************************************
       9.000          *******************************************
      10.000          ***************************************************
      11.000          ***************************************************
      12.000          *******************************************
      13.000          *******************************************
      14.000          ************************************
      15.000          **********************
      16.000          ***************
      17.000          ********


"12.7500*(IN1-IN2)+31.8750"
IF (OUT<>"") F2 (2,3) C  FUNC="12.7500*(IN1-IN2)+31.8750"
 F2 (2,3) C  FUNC="12.7500*(IN1-IN2)+31.8750"
Beginning VICAR task F2
F2 version 98-Aug-2015
F2 using hash table lookup
FUNCTION EVALUATED 176 TIMES
END-PROC
list C
Beginning VICAR task list

   BYTE     samples are interpreted as   BYTE   data
 Task:GEN       User:wlb       Date_Time:Wed Sep  9 17:20:18 2015
 Task:F2        User:wlb       Date_Time:Wed Sep  9 17:20:18 2015
     Samp     1       3       5       7       9      11      13      15      17      19
   Line
      1      32  45  57  70  70  83  96 108 108 121 134 147 147 159 172 185 185 198 210 223
      2      45  57  70  83  83  96 108 121 121 134 147 159 159 172 185 198 198 210 223 236
      3      57  70  83  96  96 108 121 134 134 147 159 172 172 185 198 210 210 223 236 249
      4      70  83  96 108 108 121 134 147 147 159 172 185 185 198 210 223 223 236 249 255
      5      19  32  45  57  57  70  83  96  96 108 121 134 134 147 159 172 172 185 198 210
      6      32  45  57  70  70  83  96 108 108 121 134 147 147 159 172 185 185 198 210 223
      7      45  57  70  83  83  96 108 121 121 134 147 159 159 172 185 198 198 210 223 236
      8      57  70  83  96  96 108 121 134 134 147 159 172 172 185 198 210 210 223 236 249
      9       6  19  32  45  45  57  70  83  83  96 108 121 121 134 147 159 159 172 185 198
     10      19  32  45  57  57  70  83  96  96 108 121 134 134 147 159 172 172 185 198 210
     11      32  45  57  70  70  83  96 108 108 121 134 147 147 159 172 185 185 198 210 223
     12      45  57  70  83  83  96 108 121 121 134 147 159 159 172 185 198 198 210 223 236
     13       0   6  19  32  32  45  57  70  70  83  96 108 108 121 134 147 147 159 172 185
     14       6  19  32  45  45  57  70  83  83  96 108 121 121 134 147 159 159 172 185 198
     15      19  32  45  57  57  70  83  96  96 108 121 134 134 147 159 172 172 185 198 210
     16      32  45  57  70  70  83  96 108 108 121 134 147 147 159 172 185 185 198 210 223
     17       0   0   6  19  19  32  45  57  57  70  83  96  96 108 121 134 134 147 159 172
     18       0   6  19  32  32  45  57  70  70  83  96 108 108 121 134 147 147 159 172 185
     19       6  19  32  45  45  57  70  83  83  96 108 121 121 134 147 159 159 172 185 198
     20      19  32  45  57  57  70  83  96  96 108 121 134 134 147 159 172 172 185 198 210
ratio (1,4) C 'LOG 'DIFF
LET FLD1 = ""
LET FLD2 = ""
LET SIZF = ""
LET AREF = ""
IF ((SIZE(3)<>0) OR (SIZE(4)<>0)) LET SIZF="SIZE=&SIZE"
IF ((AREA(3)<>0) OR (AREA(4)<>0)) LET AREF="AREA=&AREA"
IF (SAMPLE<>5.0) LET FLD1=FLD1//" SAMPLE=&SAMPLE"
IF (LINC<>20) LET FLD1=FLD1//" LINC=&LINC"
IF (INCLUDE(1)<>0.0 OR INCLUDE(2)<>5.0) LET FLD1=FLD1//" INCLUDE=&INCLUDE"
IF (THRESHOL<>0) LET FLD1=FLD1//" THRESH=&THRESHOL"
IF (PERCENT<>2.0) LET FLD2=FLD2//" PERCENT=&PERCENT"
IF (ATM1<>0.0) LET FLD2=FLD2//" ATM1=&ATM1"
IF (ATM2<>0.0) LET FLD2=FLD2//" ATM2=&ATM2"
RATIO0 (1,4) C     CENTER=CENTER MODE=DIFFEREN   MODE2=LOG MODE3=FIL+
TER MODE4=DISPLAY FUNC=LFUNC
Beginning VICAR task RATIO0
*** p3/RATIO0 version Sep 9 2015 ***
L O G   D I F F E R E N C E

       5.526     0DN  ********
       5.535          ******************
       5.544          *********************************
       5.552          *******************************************
       5.561    MEAN  ***************************************************
       5.570          *******************************************
       5.579          *********************************
       5.587          ******************
       5.596   255DN  ********


"3658.98*ALOG((IN1+256.0)-(IN2+0.0))-20204.5"
IF (OUT<>"") F2 (1,4) C  FUNC="3658.98*ALOG((IN1+256.0)-(IN2+0.0))-20204.5"
 F2 (1,4) C  FUNC="3658.98*ALOG((IN1+256.0)-(IN2+0.0))-20204.5"
Beginning VICAR task F2
F2 version 98-Aug-2015
F2 using hash table lookup
FUNCTION EVALUATED 301 TIMES
END-PROC
list C
Beginning VICAR task list

   BYTE     samples are interpreted as   BYTE   data
 Task:GEN       User:wlb       Date_Time:Wed Sep  9 17:20:18 2015
 Task:F2        User:wlb       Date_Time:Wed Sep  9 17:20:18 2015
     Samp     1       3       5       7       9      11      13      15      17      19
   Line
      1      71  85  85  99  99 114 114 128 128 142 142 156 156 170 170 184 184 198 198 212
      2      85  99  99 114 114 128 128 142 142 156 156 170 170 184 184 198 198 212 212 225
      3       0   0   0   0   0   0   0  13  13  28  28  42  42  56  56  71  71  85  85  99
      4       0   0   0   0   0  13  13  28  28  42  42  56  56  71  71  85  85  99  99 114
ratio (3,4) 'NODISP
LET FLD1 = ""
LET FLD2 = ""
LET SIZF = ""
LET AREF = ""
IF ((SIZE(3)<>0) OR (SIZE(4)<>0)) LET SIZF="SIZE=&SIZE"
IF ((AREA(3)<>0) OR (AREA(4)<>0)) LET AREF="AREA=&AREA"
IF (SAMPLE<>5.0) LET FLD1=FLD1//" SAMPLE=&SAMPLE"
IF (LINC<>20) LET FLD1=FLD1//" LINC=&LINC"
IF (INCLUDE(1)<>0.0 OR INCLUDE(2)<>5.0) LET FLD1=FLD1//" INCLUDE=&INCLUDE"
IF (THRESHOL<>0) LET FLD1=FLD1//" THRESH=&THRESHOL"
IF (PERCENT<>2.0) LET FLD2=FLD2//" PERCENT=&PERCENT"
IF (ATM1<>0.0) LET FLD2=FLD2//" ATM1=&ATM1"
IF (ATM2<>0.0) LET FLD2=FLD2//" ATM2=&ATM2"
RATIO0 (3,4)      CENTER=CENTER MODE=RATIO   MODE2=NOLOG MODE3=FILTE+
R MODE4=NODISPLA FUNC=LFUNC
Beginning VICAR task RATIO0
*** p3/RATIO0 version Sep 9 2015 ***
"296.512*(IN1/IN2)-47.4419"
IF (OUT<>"") F2 (3,4)   FUNC="296.512*(IN1/IN2)-47.4419"
END-PROC
ratio (3,4) 'NODISP 'NOFILTER
LET FLD1 = ""
LET FLD2 = ""
LET SIZF = ""
LET AREF = ""
IF ((SIZE(3)<>0) OR (SIZE(4)<>0)) LET SIZF="SIZE=&SIZE"
IF ((AREA(3)<>0) OR (AREA(4)<>0)) LET AREF="AREA=&AREA"
IF (SAMPLE<>5.0) LET FLD1=FLD1//" SAMPLE=&SAMPLE"
IF (LINC<>20) LET FLD1=FLD1//" LINC=&LINC"
IF (INCLUDE(1)<>0.0 OR INCLUDE(2)<>5.0) LET FLD1=FLD1//" INCLUDE=&INCLUDE"
IF (THRESHOL<>0) LET FLD1=FLD1//" THRESH=&THRESHOL"
IF (PERCENT<>2.0) LET FLD2=FLD2//" PERCENT=&PERCENT"
IF (ATM1<>0.0) LET FLD2=FLD2//" ATM1=&ATM1"
IF (ATM2<>0.0) LET FLD2=FLD2//" ATM2=&ATM2"
RATIO0 (3,4)      CENTER=CENTER MODE=RATIO   MODE2=NOLOG MODE3=NOFIL+
TER MODE4=NODISPLA FUNC=LFUNC
Beginning VICAR task RATIO0
*** p3/RATIO0 version Sep 9 2015 ***
"310.976*(IN1/IN2)-55.9756"
IF (OUT<>"") F2 (3,4)   FUNC="310.976*(IN1/IN2)-55.9756"
END-PROC
ratio (3,4) C AREA=(1,1,4,4) SAMPLE=100.0 ATM1=0.5 ATM2=0.5 'NODISP
LET FLD1 = ""
LET FLD2 = ""
LET SIZF = ""
LET AREF = ""
IF ((SIZE(3)<>0) OR (SIZE(4)<>0)) LET SIZF="SIZE=&SIZE"
IF ((AREA(3)<>0) OR (AREA(4)<>0)) LET AREF="AREA=&AREA"
 LET AREF="AREA=(1,1,4,4)"
IF (SAMPLE<>5.0) LET FLD1=FLD1//" SAMPLE=&SAMPLE"
 LET FLD1=FLD1//" SAMPLE=1.000000000000e+02"
IF (LINC<>20) LET FLD1=FLD1//" LINC=&LINC"
IF (INCLUDE(1)<>0.0 OR INCLUDE(2)<>5.0) LET FLD1=FLD1//" INCLUDE=&INCLUDE"
IF (THRESHOL<>0) LET FLD1=FLD1//" THRESH=&THRESHOL"
IF (PERCENT<>2.0) LET FLD2=FLD2//" PERCENT=&PERCENT"
IF (ATM1<>0.0) LET FLD2=FLD2//" ATM1=&ATM1"
 LET FLD2=FLD2//" ATM1=5.000000000000e-01"
IF (ATM2<>0.0) LET FLD2=FLD2//" ATM2=&ATM2"
 LET FLD2=FLD2//" ATM2=5.000000000000e-01"
RATIO0 (3,4) C  AREA=(1,1,4,4)  SAMPLE=1.000000000000e+02  ATM1=5.00+
0000000000e-01 ATM2=5.000000000000e-01 CENTER=CENTER MODE=RATIO   MODE2=NOLOG MODE3=FILTER MODE4=NODISPLA FUNC=LFUNC
Beginning VICAR task RATIO0
*** p3/RATIO0 version Sep 9 2015 ***
"227.679*((IN1+0.5)/(IN2+0.5))+22.7679"
IF (OUT<>"") F2 (3,4) C  FUNC="227.679*((IN1+0.5)/(IN2+0.5))+22.7679"
 F2 (3,4) C  FUNC="227.679*((IN1+0.5)/(IN2+0.5))+22.7679"
Beginning VICAR task F2
F2 version 98-Aug-2015
F2 using hash table lookup
FUNCTION EVALUATED 101 TIMES
END-PROC
label-list C
Beginning VICAR task label
LABEL version 15-Nov-2010
************************************************************
 
        ************  File C ************
                3 dimensional IMAGE file
                File organization is BSQ
                Pixels are in BYTE format from a X86-LINUX host
                1 bands
                20 lines per band
                20 samples per line
                0 lines of binary header
                0 bytes of binary prefix per line
---- Task: GENTHIS -- User: wlb -- Wed Sep  9 17:20:18 2015 ----
---- Task: SIZE -- User: wlb -- Wed Sep  9 17:20:18 2015 ----
COMMENT='PICTURE SIZE SCALED BY      4'
---- Task: F2 -- User: wlb -- Wed Sep  9 17:20:18 2015 ----
FUNCTION='227.679*((IN1+0.5)/(IN2+0.5))+22.7679'
 
************************************************************
ratio (3,4) C LINC=1 ATM1=0.5 ATM2=0.5 'NODISP
LET FLD1 = ""
LET FLD2 = ""
LET SIZF = ""
LET AREF = ""
IF ((SIZE(3)<>0) OR (SIZE(4)<>0)) LET SIZF="SIZE=&SIZE"
IF ((AREA(3)<>0) OR (AREA(4)<>0)) LET AREF="AREA=&AREA"
IF (SAMPLE<>5.0) LET FLD1=FLD1//" SAMPLE=&SAMPLE"
IF (LINC<>20) LET FLD1=FLD1//" LINC=&LINC"
 LET FLD1=FLD1//" LINC=1"
IF (INCLUDE(1)<>0.0 OR INCLUDE(2)<>5.0) LET FLD1=FLD1//" INCLUDE=&INCLUDE"
IF (THRESHOL<>0) LET FLD1=FLD1//" THRESH=&THRESHOL"
IF (PERCENT<>2.0) LET FLD2=FLD2//" PERCENT=&PERCENT"
IF (ATM1<>0.0) LET FLD2=FLD2//" ATM1=&ATM1"
 LET FLD2=FLD2//" ATM1=5.000000000000e-01"
IF (ATM2<>0.0) LET FLD2=FLD2//" ATM2=&ATM2"
 LET FLD2=FLD2//" ATM2=5.000000000000e-01"
RATIO0 (3,4) C    LINC=1  ATM1=5.000000000000e-01 ATM2=5.00000000000+
0e-01 CENTER=CENTER MODE=RATIO   MODE2=NOLOG MODE3=FILTER MODE4=NODISPLA FUNC=LFUNC
Beginning VICAR task RATIO0
*** p3/RATIO0 version Sep 9 2015 ***
"318.750*((IN1+0.5)/(IN2+0.5))+35.0625"
IF (OUT<>"") F2 (3,4) C  FUNC="318.750*((IN1+0.5)/(IN2+0.5))+35.0625"
 F2 (3,4) C  FUNC="318.750*((IN1+0.5)/(IN2+0.5))+35.0625"
Beginning VICAR task F2
F2 version 98-Aug-2015
F2 using hash table lookup
FUNCTION EVALUATED 101 TIMES
END-PROC
label-list C
Beginning VICAR task label
LABEL version 15-Nov-2010
************************************************************
 
        ************  File C ************
                3 dimensional IMAGE file
                File organization is BSQ
                Pixels are in BYTE format from a X86-LINUX host
                1 bands
                20 lines per band
                20 samples per line
                0 lines of binary header
                0 bytes of binary prefix per line
---- Task: GENTHIS -- User: wlb -- Wed Sep  9 17:20:18 2015 ----
---- Task: SIZE -- User: wlb -- Wed Sep  9 17:20:18 2015 ----
COMMENT='PICTURE SIZE SCALED BY      4'
---- Task: F2 -- User: wlb -- Wed Sep  9 17:20:18 2015 ----
FUNCTION='318.750*((IN1+0.5)/(IN2+0.5))+35.0625'
 
************************************************************
ratio (1,2) C THRESH=10.0
LET FLD1 = ""
LET FLD2 = ""
LET SIZF = ""
LET AREF = ""
IF ((SIZE(3)<>0) OR (SIZE(4)<>0)) LET SIZF="SIZE=&SIZE"
IF ((AREA(3)<>0) OR (AREA(4)<>0)) LET AREF="AREA=&AREA"
IF (SAMPLE<>5.0) LET FLD1=FLD1//" SAMPLE=&SAMPLE"
IF (LINC<>20) LET FLD1=FLD1//" LINC=&LINC"
IF (INCLUDE(1)<>0.0 OR INCLUDE(2)<>5.0) LET FLD1=FLD1//" INCLUDE=&INCLUDE"
IF (THRESHOL<>0) LET FLD1=FLD1//" THRESH=&THRESHOL"
 LET FLD1=FLD1//" THRESH=1.000000000000e+01"
IF (PERCENT<>2.0) LET FLD2=FLD2//" PERCENT=&PERCENT"
IF (ATM1<>0.0) LET FLD2=FLD2//" ATM1=&ATM1"
IF (ATM2<>0.0) LET FLD2=FLD2//" ATM2=&ATM2"
RATIO0 (1,2) C    THRESH=1.000000000000e+01  CENTER=CENTER MODE=RATI+
O   MODE2=NOLOG MODE3=FILTER MODE4=DISPLAY FUNC=LFUNC
Beginning VICAR task RATIO0
*** p3/RATIO0 version Sep 9 2015 ***
R A T I O

       0.005     0DN  ***********
       0.015          ***********
       0.025          ******

       0.485          ******
       0.495          ******
       0.505          ******
       0.515          ******
       0.525          ******

       0.645          ******
       0.655          ******
       0.665          ******
       0.675          ******
       0.685          ******

       0.735          ******
       0.745          ******
       0.755          ******
       0.765          ******
       0.775          ******
       0.785          ******
       0.795          ******
       0.805          ******
       0.815          ***********
       0.825    MEAN  ***********
       0.835          ***********
       0.845          ***********
       0.855          ****************
       0.865          ****************
       0.875          ****************
       0.885          *********************
       0.895          **************************
       0.905          *******************************
       0.915          ************************************
       0.925          ***************************************************
       0.935          **********************************************
       0.945          *****************************************
       0.955          *******************************
       0.965          *********************
       0.975          ******


"155.488*(IN1/IN2)+0.00000"
IF (OUT<>"") F2 (1,2) C  FUNC="155.488*(IN1/IN2)+0.00000"
 F2 (1,2) C  FUNC="155.488*(IN1/IN2)+0.00000"
Beginning VICAR task F2
F2 version 98-Aug-2015
F2 using hash table lookup
FUNCTION EVALUATED 40 TIMES
END-PROC
list C
Beginning VICAR task list

   BYTE     samples are interpreted as   BYTE   data
 Task:GEN       User:wlb       Date_Time:Wed Sep  9 17:20:18 2015
 Task:F2        User:wlb       Date_Time:Wed Sep  9 17:20:18 2015
     Samp     1       3       5       7       9      11      13      15      17      19
   Line
      1       0  78 104 117 124 130 133 136 138 140 141 143 144 144 145 146 146 147 147 148
      2      78 104 117 124 130 133 136 138 140 141 143 144 144 145 146 146 147 147 148 148
      3     104 117 124 130 133 136 138 140 141 143 144 144 145 146 146 147 147 148 148 148
      4     117 124 130 133 136 138 140 141 143 144 144 145 146 146 147 147 148 148 148 149
      5     124 130 133 136 138 140 141 143 144 144 145 146 146 147 147 148 148 148 149 149
      6     130 133 136 138 140 141 143 144 144 145 146 146 147 147 148 148 148 149 149 149
      7     133 136 138 140 141 143 144 144 145 146 146 147 147 148 148 148 149 149 149 150
      8     136 138 140 141 143 144 144 145 146 146 147 147 148 148 148 149 149 149 150 150
      9     138 140 141 143 144 144 145 146 146 147 147 148 148 148 149 149 149 150 150 150
     10     140 141 143 144 144 145 146 146 147 147 148 148 148 149 149 149 150 150 150 150
     11     141 143 144 144 145 146 146 147 147 148 148 148 149 149 149 150 150 150 150 150
     12     143 144 144 145 146 146 147 147 148 148 148 149 149 149 150 150 150 150 150 150
     13     144 144 145 146 146 147 147 148 148 148 149 149 149 150 150 150 150 150 150 151
     14     144 145 146 146 147 147 148 148 148 149 149 149 150 150 150 150 150 150 151 151
     15     145 146 146 147 147 148 148 148 149 149 149 150 150 150 150 150 150 151 151 151
     16     146 146 147 147 148 148 148 149 149 149 150 150 150 150 150 150 151 151 151 151
     17     146 147 147 148 148 148 149 149 149 150 150 150 150 150 150 151 151 151 151 151
     18     147 147 148 148 148 149 149 149 150 150 150 150 150 150 151 151 151 151 151 151
     19     147 148 148 148 149 149 149 150 150 150 150 150 150 151 151 151 151 151 151 151
     20     148 148 148 149 149 149 150 150 150 150 150 150 151 151 151 151 151 151 151 152
ratio (1,2) C INCLUDE=(.90,5.0)
LET FLD1 = ""
LET FLD2 = ""
LET SIZF = ""
LET AREF = ""
IF ((SIZE(3)<>0) OR (SIZE(4)<>0)) LET SIZF="SIZE=&SIZE"
IF ((AREA(3)<>0) OR (AREA(4)<>0)) LET AREF="AREA=&AREA"
IF (SAMPLE<>5.0) LET FLD1=FLD1//" SAMPLE=&SAMPLE"
IF (LINC<>20) LET FLD1=FLD1//" LINC=&LINC"
IF (INCLUDE(1)<>0.0 OR INCLUDE(2)<>5.0) LET FLD1=FLD1//" INCLUDE=&INCLUDE"
 LET FLD1=FLD1//" INCLUDE=(9.000000000000e-01,5.000000000000e+00)"
IF (THRESHOL<>0) LET FLD1=FLD1//" THRESH=&THRESHOL"
IF (PERCENT<>2.0) LET FLD2=FLD2//" PERCENT=&PERCENT"
IF (ATM1<>0.0) LET FLD2=FLD2//" ATM1=&ATM1"
IF (ATM2<>0.0) LET FLD2=FLD2//" ATM2=&ATM2"
RATIO0 (1,2) C    INCLUDE=(9.000000000000e-01,5.000000000000e+00)  C+
ENTER=CENTER MODE=RATIO   MODE2=NOLOG MODE3=FILTER MODE4=DISPLAY FUNC=LFUNC
Beginning VICAR task RATIO0
*** p3/RATIO0 version Sep 9 2015 ***
R A T I O

       0.904          **********************************
       0.912          **********************************
       0.920          ***************************************
       0.929    MEAN  ***************************************************
       0.937          ***************************************************
       0.945          ***************************************
       0.953          **********************************
       0.961          ***********************
       0.970   255DN  ******


"3109.76*(IN1/IN2)-2747.78"
IF (OUT<>"") F2 (1,2) C  FUNC="3109.76*(IN1/IN2)-2747.78"
 F2 (1,2) C  FUNC="3109.76*(IN1/IN2)-2747.78"
Beginning VICAR task F2
F2 version 98-Aug-2015
F2 using hash table lookup
FUNCTION EVALUATED 40 TIMES
END-PROC
list C
Beginning VICAR task list

   BYTE     samples are interpreted as   BYTE   data
 Task:GEN       User:wlb       Date_Time:Wed Sep  9 17:20:18 2015
 Task:F2        User:wlb       Date_Time:Wed Sep  9 17:20:18 2015
     Samp     1       3       5       7       9      11      13      15      17      19
   Line
      1       0   0   0   0   0   0   0   0  16  51  79 103 123 140 155 168 179 189 198 206
      2       0   0   0   0   0   0   0  16  51  79 103 123 140 155 168 179 189 198 206 214
      3       0   0   0   0   0   0  16  51  79 103 123 140 155 168 179 189 198 206 214 221
      4       0   0   0   0   0  16  51  79 103 123 140 155 168 179 189 198 206 214 221 227
      5       0   0   0   0  16  51  79 103 123 140 155 168 179 189 198 206 214 221 227 232
      6       0   0   0  16  51  79 103 123 140 155 168 179 189 198 206 214 221 227 232 238
      7       0   0  16  51  79 103 123 140 155 168 179 189 198 206 214 221 227 232 238 242
      8       0  16  51  79 103 123 140 155 168 179 189 198 206 214 221 227 232 238 242 247
      9      16  51  79 103 123 140 155 168 179 189 198 206 214 221 227 232 238 242 247 251
     10      51  79 103 123 140 155 168 179 189 198 206 214 221 227 232 238 242 247 251 255
     11      79 103 123 140 155 168 179 189 198 206 214 221 227 232 238 242 247 251 255 255
     12     103 123 140 155 168 179 189 198 206 214 221 227 232 238 242 247 251 255 255 255
     13     123 140 155 168 179 189 198 206 214 221 227 232 238 242 247 251 255 255 255 255
     14     140 155 168 179 189 198 206 214 221 227 232 238 242 247 251 255 255 255 255 255
     15     155 168 179 189 198 206 214 221 227 232 238 242 247 251 255 255 255 255 255 255
     16     168 179 189 198 206 214 221 227 232 238 242 247 251 255 255 255 255 255 255 255
     17     179 189 198 206 214 221 227 232 238 242 247 251 255 255 255 255 255 255 255 255
     18     189 198 206 214 221 227 232 238 242 247 251 255 255 255 255 255 255 255 255 255
     19     198 206 214 221 227 232 238 242 247 251 255 255 255 255 255 255 255 255 255 255
     20     206 214 221 227 232 238 242 247 251 255 255 255 255 255 255 255 255 255 255 255
ratio (1,2) C INCLUDE=(.90,5.0) PERCENT=10.0
LET FLD1 = ""
LET FLD2 = ""
LET SIZF = ""
LET AREF = ""
IF ((SIZE(3)<>0) OR (SIZE(4)<>0)) LET SIZF="SIZE=&SIZE"
IF ((AREA(3)<>0) OR (AREA(4)<>0)) LET AREF="AREA=&AREA"
IF (SAMPLE<>5.0) LET FLD1=FLD1//" SAMPLE=&SAMPLE"
IF (LINC<>20) LET FLD1=FLD1//" LINC=&LINC"
IF (INCLUDE(1)<>0.0 OR INCLUDE(2)<>5.0) LET FLD1=FLD1//" INCLUDE=&INCLUDE"
 LET FLD1=FLD1//" INCLUDE=(9.000000000000e-01,5.000000000000e+00)"
IF (THRESHOL<>0) LET FLD1=FLD1//" THRESH=&THRESHOL"
IF (PERCENT<>2.0) LET FLD2=FLD2//" PERCENT=&PERCENT"
 LET FLD2=FLD2//" PERCENT=1.000000000000e+01"
IF (ATM1<>0.0) LET FLD2=FLD2//" ATM1=&ATM1"
IF (ATM2<>0.0) LET FLD2=FLD2//" ATM2=&ATM2"
RATIO0 (1,2) C    INCLUDE=(9.000000000000e-01,5.000000000000e+00)  P+
ERCENT=1.000000000000e+01 CENTER=CENTER MODE=RATIO   MODE2=NOLOG MODE3=FILTER MODE4=DISPLAY FUNC=LFUNC
Beginning VICAR task RATIO0
*** p3/RATIO0 version Sep 9 2015 ***
R A T I O

       0.904          **********************************
       0.912          **********************************
       0.920          ***************************************
       0.929    MEAN  ***************************************************
       0.937          ***************************************************
       0.945          ***************************************
       0.953          **********************************
       0.961   255DN  ***********************
       0.970          ******


"3887.20*(IN1/IN2)-3466.60"
IF (OUT<>"") F2 (1,2) C  FUNC="3887.20*(IN1/IN2)-3466.60"
 F2 (1,2) C  FUNC="3887.20*(IN1/IN2)-3466.60"
Beginning VICAR task F2
F2 version 98-Aug-2015
F2 using hash table lookup
FUNCTION EVALUATED 40 TIMES
END-PROC
list C
Beginning VICAR task list

   BYTE     samples are interpreted as   BYTE   data
 Task:GEN       User:wlb       Date_Time:Wed Sep  9 17:20:18 2015
 Task:F2        User:wlb       Date_Time:Wed Sep  9 17:20:18 2015
     Samp     1       3       5       7       9      11      13      15      17      19
   Line
      1       0   0   0   0   0   0   0   0   0  32  67  97 122 143 161 178 192 205 216 226
      2       0   0   0   0   0   0   0   0  32  67  97 122 143 161 178 192 205 216 226 235
      3       0   0   0   0   0   0   0  32  67  97 122 143 161 178 192 205 216 226 235 244
      4       0   0   0   0   0   0  32  67  97 122 143 161 178 192 205 216 226 235 244 252
      5       0   0   0   0   0  32  67  97 122 143 161 178 192 205 216 226 235 244 252 255
      6       0   0   0   0  32  67  97 122 143 161 178 192 205 216 226 235 244 252 255 255
      7       0   0   0  32  67  97 122 143 161 178 192 205 216 226 235 244 252 255 255 255
      8       0   0  32  67  97 122 143 161 178 192 205 216 226 235 244 252 255 255 255 255
      9       0  32  67  97 122 143 161 178 192 205 216 226 235 244 252 255 255 255 255 255
     10      32  67  97 122 143 161 178 192 205 216 226 235 244 252 255 255 255 255 255 255
     11      67  97 122 143 161 178 192 205 216 226 235 244 252 255 255 255 255 255 255 255
     12      97 122 143 161 178 192 205 216 226 235 244 252 255 255 255 255 255 255 255 255
     13     122 143 161 178 192 205 216 226 235 244 252 255 255 255 255 255 255 255 255 255
     14     143 161 178 192 205 216 226 235 244 252 255 255 255 255 255 255 255 255 255 255
     15     161 178 192 205 216 226 235 244 252 255 255 255 255 255 255 255 255 255 255 255
     16     178 192 205 216 226 235 244 252 255 255 255 255 255 255 255 255 255 255 255 255
     17     192 205 216 226 235 244 252 255 255 255 255 255 255 255 255 255 255 255 255 255
     18     205 216 226 235 244 252 255 255 255 255 255 255 255 255 255 255 255 255 255 255
     19     216 226 235 244 252 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255
     20     226 235 244 252 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255
end-proc
