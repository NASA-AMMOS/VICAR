Crea0892      PROGRAM MODTRN                                            
C									rea 0892
C	modified to be a subroutine 8/31/92 - Ron Alley (JPL)           rea 08
C                                                                       
C     THIS VERSION WAS UPDATED NOV   5 1990                             
C     NOW CONTAINS NEW VSA AND WATER VAPOR CONTINUM CORRECTION          
C                                                                       
C     MODTRAN IS A COMPUTER CODE DEVELOPED BY SPECTRAL SCIENCES, INC.   
C     AND DESIGNED TO DETERMINE ATMOSPHERIC TRANSMISSION AND RADIANCE   
C     AT MODERATE RESOLUTION (FWHM = 1 CM-1) FROM 0 TO 50,000 CM-1.     
C     MODTRAN IS BASED ON AFGL'S LOWTRAN 7 CODE.  UNLESS THE CODE IS    
C     USED TO RUN LOWTRAN 7, AN UNFORMATTED BAND MODEL TAPE (UNIT=9),   
C     UFTAPE, MUST EXIST.  THE PROGRAM "MAKEUF" CREATES THIS TAPE FROM  
C     THE FORMATTED BAND MODEL TAPE, BMTAPE.                            
C                                                                       
C     MOST OF THE ROUTINES FROM LOWTRAN 7 REMAIN UNCHANGED.  SOME       
C     ROUTINES HAVE BEEN CHANGED ONLY IN THAT A FEW OF THEIR COMMONS    
C     STATEMENTS HAVE BEEN MODIFIED AND THE LOGICAL VARIABLE "MODTRN"   
C     HAS BEEN DECLARED:                                                
C                                                                       
C        ROUTINE    COMMONS                                             
C        -------    -------                                             
C        ABCDTA     "BLANK"                                             
C        AEREXT     "BLANK", CARD1                                      
C        AERNSM     "BLANK", CARD1                                      
C        AERTMP     "BLANK"                                             
C        CIRR18     "BLANK", CARD1, CARD4                               
C        CIRRUS     "BLANK", CARD1, CARD4                               
C        CLDPRF     "BLANK"                                             
C        DESATT     "BLANK"                                             
C        EQULWC     "BLANK"                                             
C        EXABIN     "BLANK", CARD1, CARD4                               
C        FLXADD     "BLANK", CARD1, TRAN                                
C        LAYVSA     CARD1                                               
C        PHASEF     CARD1                                               
C        RDEXA      "BLANK"                                             
C        RDNSM      CARD1                                               
C        RFPATH     CARD1, SOLS                                         
C        SSRAD      "BLANK", CARD1, SOLS                                
C        VSANSM     "BLANK", CARD1                                      
C                                                                       
C     THE OTHER ROUTINES WITH MINOR CHANGES ARE:                        
C                                                                       
C        ROUTINE    NUMBER OF ADDED AND SUBTRACTED LINES                
C        -------    ------------------------------------                
C        GEO        108                                                 
C        MSRAD      34                                                  
C        SSGEO      53                                                  
C        STDMDL     39                                                  
C                                                                       
C     THE MOST SIGNIFICANT CHANGES WERE MADE TO THE MAIN ROUTINE AND    
C     THE SUBROUTINE TRANS.  THE MAIN HAS BEEN SPLIT INTO 2 ROUTINES.   
C     THE NEW MAIN ROUTINE JUST CONTAINS COMMENT CARDS AND A CALL TO    
C     ROUTINE DRIVER.  SUBROUTINE DRIVER IS THE DRIVER FOR MODTRAN.     
C     SUBROUTINE TRANS HAS BEEN COMPLETELY REVAMPED WITH ITS NEW FORM   
C     CONTAINING 1012 LINES.  TRANS NOW STEPS IN 1 CM-1 INCREMENTS,     
C     CALLING THE BAND MODEL ROUTINES, INTERPOLATING BETWEEN 5 CM-1     
C     CONTINUUM TRANSMITTANCES, AND PERFORMING THE TRIANGULAR SLIT      
C     CALCULATION.                                                      
C                                                                       
C     A NUMBER OF NEW ROUTINES HAS BEEN ADDED TO ACCOMMODATE THE HIGHER 
C     RESOLUTION OPTION:                                                
C                                                                       
C        ROUTINE (# LINES)    PURPOSE                                   
C        -----------------    --------------------------                
C        BMDATA    (135)      MAKE INITIAL CALLS TO BAND MODEL TAPE     
C        BMERFU     (14)      RETURNS EXP(-Y*Y) + Y*SQRT(PI)*ERF(Y) - 1 
C        BMFLUX    (277)      PERFORMS ADDING METHOD CALCULATION        
C        BMLOAD     (91)      LOADS THE BAND MODEL PARAMETERS           
C        BMOD      (287)      PERFORMS CURTIS-GODSON SUMS               
C        BMTRAN     (57)      CALCULATES MOLECULAR TRANSMITTANCE        
C                                                                       
C     TWO CARDS FROM THE LOWTRAN 7 INPUT STREAM HAVE BEEN CHANGED.      
C     LOGICAL VARIABLE, MODTRN, IS NOW READ IN ON CARD 1, AS SHOWN:     
C                                                                       
C     READ(IRD,'(L1,I4,12I5,F8.3,F7.2)')MODTRN,MODEL,ITYPE,IEMSCT,      
C    1  IMULT,M1,M2,M3,M4,M5,M6,MDEF,IM,NOPRT,TBOUND,SALB               
C                                                                       
C     IF MODTRN IS FALSE, THE CODE DEFAULTS TO LOWTRAN 7.  WHEN MODTRN  
C     IS TRUE, THE MODERATE RESOLUTION OPTION IS INVOKED.  CARD 4 HAS   
C     ALSO BEEN CHANGED.  INSTEAD OF READING THE REAL VARIABLES, V1, V2 
C     AND DV, THE INTEGERS IV1, IV2, IDV AND IFWHM ARE READ, AS SHOWN:  
C                                                                       
C     READ(IRD,'(4I10)')IV1,IV2,IDV,IFWHM                               
C                                                                       
C     IV1 AND IV2 ARE THE LOWER AND UPPER BOUNDS ON THE FREQUENCY       
C     (CM-1) RANGE, RESPECTIVELY.  IV1 IS A NON-NEGATIVE INTEGER AND    
C     IV2 MUST EXCEED IV1.  IDV, A POSITIVE INTEGER, IS THE STEP SIZE   
C     USED FOR PRINTING OF TRANSMITTANCES AND RADIANCES.  FINALLY,      
C     IFWHM IS THE FULL WIDTH AT HALF MAXIMUM USED BY THE TRIANGULAR    
C     SLIT FUNCTION.  IFWHM MUST BE A POSITIVE INTEGER NOT EXCEEDING 50 
C                                                                       
C***********************************************************************
C     LOWTRAN7  (LAST REVISED JAN  30 1989) REVISION 3.6                
C                                                                       
C               AUTHORS                                                 
C                                                                       
C               F.X.KNEIZYS                                             
C               E. P. SHETTLE                                           
C               G.P. ANDERSON                                           
C               L. W. ABREU                                             
C               J. H. CHETWYND                                          
C               J. E. A. SELBY    (GRUMMAN AEROSPACE)                   
C               S. A. CLOUGH      (AER INC)                             
C               W. O. GALLERY     (OPTIMETRICS)                         
C                                                                       
C   PROGRAM LOWTRAN  CALCULATES THE TRANSMITTANCE AND/OR RADIANCE       
C   OF THE ATMOSPHERE  FROM   0 CM-1 TO 50000 CM-1 (0.20 TO INFINITY    
C   MICRONS) AT 20 CM-1 SPECTRAL RESOLUTION ON A LINEAR                 
C   WAVENUMBER SCALE WITH 5CM-1 SAMPLING                                
C                                                                       
C   LOWTRAN 7 IS A LOW-RESOLUTION PROPAGATION MODEL FOR CALCULATING     
C   ATMOSPHERIC TRANSMITTANCE AND BACKGROUND RADIANCE FROM 0 TO         
C   50,000 CM-1 AT A RESOLUTION OF 20 CM-1 WITH A MINIMUM OF 5 CM-1     
C   SAMPLING.  THE MODEL IS BASED ON THE LOWTRAN 6 (1983) MODEL.        
C   THE PROGRAM CALCULATES SINGLE SCATTERED SOLAR (OR LUNAR)            
C   RADIATION.  MULTIPLE SCATTERED RADIATION HAS BEEN ADDED TO THE      
C   MODEL AS WELL AS NEW MOLECULAR BAND MODEL PARAMETERS AND NEW OR     
C   UPDATED OZONE AND MOLECULAR OXYGEN ABSORPTION PARAMETERS FOR THE    
C   UV.  OTHER MODIFICATIONS INCLUDE A WIND-DEPENDENT DESERT MODEL, NEW 
C   CIRRUS CLOUD MODELS, AND NEW CLOUD AND RAIN MODELS.  THE MODEL ALSO 
C   INCLUDES NEW REPRESENTATIVE (GEOGRAPHICAL AND SEASONAL) ATMOSPHERIC 
C   MODELS AND UPDATED AEROSOL MODELS WITH OPTIONS TO REPLACE THEM WITH 
C   USER-DERIVED VALUES.  SIX MODES OF PROGRAM EXECUTION ARE ALLOWED    
C   WITH THE NEW MODEL AND COMPUTER CODE FOR A GIVEN SLANT PATH         
C   UTILIZING SPHERICAL-REFRACTIVE GEOMETRY.  THE ARMY VERTICAL         
C   STRUCTURE ALGORITHM HAS BEEN MODIFIED TO INCLUDE THE NEW PEDESTAL   
C   MODEL BELOW THE CLOUD BASE.  A NEW OPTION HAS BEEN  ADDED TO        
C   MODIFY THE AEROSOL PROFILE, IF THE GROUND IS NOT AT SEA LEVEL.      
C                                                                       
C***********************************************************************
C                                                                       
C     THE FOLLOWING INFORMATION SHOULD BE PROVIDED BY THE USER          
C     AND MAILED TO   L.W ABREU  ,AFGL/OPI,HANSCOM AFB,MASS 01731       
C     THIS WILL BE USED TO UPDATE THE AFGL MAILING LIST                 
C     AND FOR NOTIFICATION TO THE USER OF ERRORS IN THE CODE            
C                                                                       
C                                                                       
C           MY NAME IS                                                  
C           COMPANY                                                     
C           ADDRESS                                                     
C           MY COMPUTER IS                                              
C                                                                       
C                                                                       
C***********************************************************************
C   THE USE OF THE WORD 'CARD' IS EQUIVALENT TO EDITING WITH 80 COLUMNS 
C                                                                       
C     PROGRAM ACTIVATED BY SUBMISSION OF A FIVE  (OR MORE)              
C      CARD SEQUENCE AS FOLLOWS                                         
C                                                                       
C     CARD 1    MODEL,ITYPE,IEMSCT,IMULT,M1,M2,M3,                      
C               M4,M5,M6,MDEF,IM,NOPRT,TBOUND,SALB                      
C                          FORMAT(13I5,F8.3,F7.2)                       
C                                                                       
C     CARD 2    IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,VIS,WSS,WHH,RAINRT, 
C               GNDALT                                                  
C                          FORMAT(6I5,5F10.3)                           
C                                                                       
C               CARD 2A    CTHIK,CALT,CEXT,ISEED       (ICLD=18,19,20)  
C                          FORMAT(3F10.3,I10)                           
C                                                                       
C               CARD 2B    ZCVSA,ZTVSA,ZINVSA    (IVSA=1)               
C                          FORMAT(3F10.3)                               
C                                                                       
C               CARD 2C    ML,IRD1,IRD2,TITLE (MODEL=0 / 7,IM=1)        
C                          FORMAT(3I5,18A4)                             
C                                                                       
CC------------------------ BEGIN ML LOOP                                
CC-                                                                     
CC-             CARD 2C1   ZMDL,P,T,WMOL(1),WMOL(2),WMOL(3),JCHAR       
CC-                        FORMAT(F10.3,5E10.3,15A1)                    
CC-                                                                     
CC-             CARD 2C2   (WMOL(J),J=4,11)                             
CC-                        FORMAT(8E10.3)                               
CC-                                                                     
CC-             CARD 2C2   WMOL(12)                                     
CC-                        FORMAT(8E10.3)                               
CC-                                                                     
CC-             CARD 2C3   AHAZE,EQLWCZ,RRATZ,IHA1,ICLD1,               
CC-                        IVUL1,ISEA1,ICHR                             
CC-                        FORMAT(10X,3F10.3,5I5)                       
CC-                                                                     
CC------------------------ END ML LOOP                                  
C                                                                       
C               CARD 2D    IREG(1 TO 4) (IHAZE=7 OR ICLD = 11)          
C                          FORMAT(4I5)                                  
C                                                                       
C               CARD 2D1   AWCCON,TITLE                                 
C                          FORMAT(E10.3,18A4)                           
C                                                                       
C               CARD 2D2   (VX(I),EXTC(N,I),ABSC(N,I),ASYM(N,I),I=1,47) 
C                          (IHAZE=7 OR ICLD=11)                         
C                          FORMAT(3(F6.2,2F7.5,F6.4))                   
C                                                                       
C     CARD 3    H1,H2,ANGLE,RANGE,BETA,RO,LEN                           
C                          FORMAT(6F10.3,I5)                            
C                                                                       
C               ALTERNATE  CARD 3 (IEMSCT=3)                            
C                          H1,H2,ANGLE,IDAY,RO,ISOURC,ANGLEM            
C                          FORMAT(3F10.3,I5,5X,F10.3,I5,F10.3)          
C                                                                       
C               CARD 3A1   IPARM,IPH,IDAY,ISOURC           (IEMSCT=2)   
C                          FORMAT(4I5)                                  
C                                                                       
C               CARD 3A2    PARM1,PARM2,PARM3,PARM4,TIME,PSIPO,ANGLEM,G 
C                           FORMAT(8F10.3)               (IEMSCT=2)     
C                                                                       
C               CARD 3B1    NANGLS       (IPH=1)                        
C                           FORMAT(I5)                                  
C                                                                       
C               CARD 3B2(1 TO NANGLS)    (IPH=1)                        
C                      (ANGF(I),F(1,I),F(2,I),F(3,I),F(4,I),I=1,NANGLS) 
C                           FORMAT(5E10.3)                              
C                                                                       
C     CARD 4    V1, V2, DV                                              
C                           FORMAT(3F10.3)                              
C                                                                       
C     CARD 5    IRPT                                                    
C                           FORMAT(I5)                                  
C                                                                       
C***********************************************************************
C   ** FOLLOWING IS A FULL DESCRIPTION OF EACH CARD                     
C                                                                       
C     CARD 1    MODEL,ITYPE,IEMSCT,IMULT,M1,M2,M3,                      
C               M4,M5,M6,MDEF,IM,NOPRT,TBOUND,SALB                      
C                         FORMAT(13I5,F8.3,F7.2)                        
C                                                                       
C             'MODEL' SELECTS ONE OF SIX GEOGRAPHICAL MODEL ATMOSPHERES 
C              OR SPECIFIES THAT USER-DEFINED METEOROLOGICAL            
C              DATA ARE TO BE USED.                                     
C                                                                       
C                                                                       
C     MODEL=0 IF METEOROLOGICAL DATA ARE SPECIFIED(HORIZONTAL PATH ONLY)
C           1 TROPICAL ATMOSPHERE                                       
C           2 MIDLATITUDE SUMMER                                        
C           3 MIDLATITUDE WINTER                                        
C           4 SUBARCTIC   SUMMER                                        
C           5 SUBARCTIC   WINTER                                        
C           6 1976 U.S. STANDARD ATMOSPHERE                             
C           7 IF A NEW MODEL ATMOSPHERE( OR RADIOSONDE DATA) IS TO BE   
C             READ IN.                                                  
C                                                                       
C     [NOTE: MODEL=0  USED FOR HORIZONTAL PATH ONLY]                    
C                                                                       
C                                                                       
C           'ITYPE' INDICATES THE TYPE OF ATMOSPHERIC PATH              
C                                                                       
C     ITYPE=1 FOR A HORIZONTAL (CONSTANT-PRESSURE) PATH                 
C           2 VERTICAL OR SLANT PATH BETWEEN TWO ALTITUDES              
C           3 FOR A VERTICAL OR SLANT PATH TO SPACE                     
C                                                                       
C                                                                       
C           'IEMSCT' DETERMINES THE MODE OF EXECUTION OF THE PROGRAM    
C                                                                       
C     IEMSCT=0    PROGRAM EXECUTION IN TRANSMITTANCE MODE.              
C            1    PROGRAM EXECUTION IN RADIANCE MODE.                   
C            2    PROGRAM EXECUTION IN RADIANCE MODE WITH SOLAR/LUNAR   
C                  SCATTERED RADIANCE INCLUDED.                         
C            3    DIRECT SOLAR IRRADIANCE                               
C                                                                       
C           'IMULT' DETERMINES EXECUTION WITH MULTIPLE SCATTERING       
C                                                                       
C     IMULT = 0 PROGRAM EXECUTED WITHOUT MULTIPLE SCATTERING            
C             1 PROGRAM EXECUTED WITH MULTIPLE SCATTERING               
C              [NOTE: IEMSCT MUST EQUAL 1 OR 2 FOR MULTIPLE SCATTERING] 
C                                                                       
C                                                                       
C           'M1,M2,M3' ARE USED TO MODIFY OR SUPPLEMENT THE ALTITUDE    
C            PROFILES OF TEMPERATURE AND PRESSURE,WATER VAPOR,AND OZONE 
C                                                                       
C           'M4,M5,M6'  SEASONAL DEPENDENCE CH4,N2O,CO                  
C           'MDEF'       USE DEFAULT FOR OTHER GASES                    
C                                                                       
C     FOR NORMAL OPERATION OF PROGRAM   (MODEL 1 TO 6)                  
C     SET M1=M2=M3=0 , M4=M5=M6=MDEF = 0                                
C                                                                       
C     THESE PARAMETERS ARE RESET TO DEFAULT VALUES BY MODEL             
C     WHEN THEY ARE EQUAL TO ZERO                                       
C                                                                       
C      EXCEPT FOR MODEL 0 AND 7                                         
C      WHEN M1 = 0 M1 RESET TO 'MODEL'                                  
C      WHEN M2 = 0 M2 RESET TO 'MODEL'                                  
C      WHEN M3 = 0 M3 RESET TO 'MODEL'                                  
C      WHEN M4 = 0 M4 RESET TO 'MODEL'                                  
C      WHEN M5 = 0 M5 RESET TO 'MODEL'                                  
C      WHEN M6 = 0 M6 RESET TO 'MODEL'                                  
C      WHEN MDEF=0 MDEF RESET TO 1  FOR ALL REMAINING                   
C                                                                       
C     M1=1-6 DEFAULT TEMP. AND PRESSURE TO SPECIFIED MODEL ATM.         
C                                                                       
C     M2=1-6 DEFAULT H2O   TO SPECIFIED MODEL ATM.                      
C                                                                       
C     M3=1-6 DEFAULT OZONE TO SPECIFIED MODEL ATM.                      
C                                                                       
C     M4=1-6 DEFAULT CH4   TO SPECIFIED MODEL ATM.                      
C                                                                       
C     M5=1-6 DEFAULT N2O   TO SPECIFIED MODEL ATM.                      
C                                                                       
C     M6=1-6 DEFAULT CO    TO SPECIFIED MODEL ATM.                      
C                                                                       
C     MDEF=1     USE DEFAULT   PROFILE  FOR CO2,O2,NO,SO2,NO2,NH3,HNO3  
C                NOT NEEDED WITH MODEL 1 TO 6                           
C                                                                       
C                                                                       
C     IF 'MODEL' 0 OR 'MODEL' 7  THE PROGRAM EXPECTS TO READ            
C     "USER SUPPLIED" ATMOSPHERIC PROFILES. SET:'IM' = 1 FOR            
C      FIRST RUN. TO RERUN THE SAME "USER-ATMOSPHERE" FOR A SERIES      
C      OF CASES SET:'IM' = 0 TO REUSE THE PREVIOUSLY READ DATA.         
C                                                                       
C     IM=0    FOR  NORMAL OPERATION OF PROGRAM OR WHEN SUBSEQUENT       
C                  CALCULATIONS ARE TO BE RUN WITH MODEL =7             
C        1    WHEN RADIOSONDE DATA ARE TO BE READ INITIALLY.            
C                                                                       
C     NOPRT=0 FOR NORMAL OPERATION OF PROGRAM.                          
C                                                                       
C           1 TO MINIMIZE PRINTING OF TRANSMITTANCE /OR RADIANCE TABLE  
C                   AND ATMOSPHERIC PROFILES                            
C                                                                       
C                                                                       
C     TBOUND =BOUNDARY TEMPERATURE ( K),USED IN THE RADIATION MODE      
C             (IEMSCT = 1 OR 2) FOR SLANT PATHS THAT INTERSECT THE      
C             EARTH OR TERMINATE AT A GREY BOUNDARY (FOR EXAMPLE        
C             CLOUD,TARGET).  IF TBOUND IS LEFT BLANK AND THE PATH      
C             INTERSECTS THE EARTH, THE PROGRAM WILL USE THE            
C             TEMPERATURE OF THE FIRST ATMOSPHERIC LEVEL AS THE         
C             BOUNDARY TEMPERATURE.                                     
C                                                                       
C      SALB = SURFACE ALBEDO OF THE EARTH AT THE LOCATION               
C             AND AVERAGE FREQUENCY OF THE CALCULATION (0 TO 1.)        
C             IF SALB IS LEFT BLANK THE PROGRAM ASSUMES                 
C             THE SURFACE IS A BLACKBODY.                               
C***********************************************************************
C                                                                       
C     CARD 2   IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,VIS,WSS,WHH,RAINRT,  
C              GNDALT                                                   
C                          FORMAT(6I5,5F10.3)                           
C                                                                       
C     'IHAZE' SELECTS THE TYPE OF EXTINCTION AND A DEFAULT              
C     METEOROLOGICAL RANGE FOR THE BOUNDARY-LAYER AEROSOL MODEL         
C     (0 TO 2KM ALTITUDE)                                               
C     IF 'VIS' IS ALSO SPECIFIED ON CARD 2 IT WILL OVERRIDE THE         
C     DEFAULT 'IHAZE' VALUE  FOR METEOROLOGICAL RANGE                   
C                                                                       
C     IHAZE=0  NO AEROSOL ATTENUATION INCLUDED IN CALCULATION.          
C          =1  RURAL EXTINCTION, 23-KM VIS.                             
C          =2  RURAL EXTINCTION, 5-KM VIS.                              
C          =3  NAVY MARITIME EXTINCTION,SETS OWN VIS.                   
C          =4  MARITIME EXTINCTION, 23-KM VIS.    (LOWTRAN 5 MODEL)     
C          =5  URBAN EXTINCTION, 5-KM VIS.                              
C          =6  TROPOSPHERIC EXTINCTION, 50-KM VIS.                      
C          =7  USER DEFINED  AEROSOL EXTINCTION COEFFICIENTS            
C              TRIGGERS READING IREG FOR UP TO 4 REGIONS OF             
C              USER DEFINED EXTINCTION ABSORPTION AND ASYMMETRY         
C          =8  FOG1 (ADVECTIVE FOG) EXTINCTION, 0.2-KM VIS.             
C          =9  FOG2 (RADIATIVE FOG) EXTINCTION, 0.5-KM VIS.             
C          =10 DESERT EXTINCTION  SETS OWN VISIBILITY FROM WIND SPEED   
C                                                                       
C     'ISEASN' SELECTS THE SEASONAL DEPENDENCE OF THE PROFILES          
C     FOR BOTH THE TROPOSPHERIC (2 TO 10 KM) AND                        
C     STRATOSPHERIC(10 TO 30 KM) AEROSOLS.                              
C                                                                       
C     ISEASN=0 DEFAULTS TO SEASON OF 'MODEL'                            
C              (MODEL 0,1,2,4,6,7) SUMMER                               
C              (MODEL 3,5)         WINTER                               
C           =1 SPRING-SUMMER                                            
C           =2 FALL - WINTER                                            
C                                                                       
C     'IVULCN' SELECTS BOTH THE PROFILE AND EXTINCTION TYPE             
C     FOR THE STRATOSPHERIC AEROSOLS AND DETERMINES TRANSITION          
C     PROFILES ABOVE THE STRATOSPHERE TO 100 KM.                        
C                                                                       
C     IVULCN=0 DEFAULT TO STRATOSPHERIC BACKGROUND                      
C           =1 STRATOSPHERIC BACKGROUND                                 
C           =2 AGED VOLCANIC TYPE/MODERATE VOLCANIC PROFILE             
C           =3 FRESH VOLCANIC TYPE/HIGH VOLCANIC PROFILE                
C           =4 AGED VOLCANIC TYPE/HIGH VOLCANIC PROFILE                 
C           =5 FRESH VOLCANIC TYPE/MODERATE VOLCANIC PROFILE            
C           =6 BACKGROUND STRATOSPHERIC TYPE/MODERATE VOLCANIC PROFILE  
C           =7 BACKGROUND STRATOSPHERIC TYPE/HIGH VOLCANIC PROFILE      
C           =8 FRESH VOLCANIC TYPE/EXTREME VOLCANIC PROFILE             
C                                                                       
C     'ICSTL' IS THE AIR MASS CHARACTER(1 TO 10) ONLY USED WITH         
C     NAVY MARITIME MODEL(IHAZE=3)                                      
C                                                                       
C     ICSTL = 1 OPEN OCEAN                                              
C            .                                                          
C            .                                                          
C            .                                                          
C           10 STRONG CONTINENTAL INFLUENCE                             
C                                                                       
C                                                                       
C     'ICLD' SPECIFIES WHICH OF THE CLOUD MODELS AND THE RAIN RATES     
C     ARE USED                                                          
C                                                                       
C     ICLD  FOR CLOUD AND OR RAIN                                       
C     ICLD = 0   NO CLOUDS OR RAIN                                      
C          = 1  CUMULUS CLOUD BASE .66KM TOP 2.7KM                      
C          = 2  ALTOSTRATUS CLOUD BASE 2.4KM TOP 3.0KM                  
C          = 3  STRATUS CLOUD BASE .33KM TOP 1.0KM                      
C          = 4  STRATUS/STRATO CU BASE .66KM TOP 2.0KM                  
C          = 5  NIMBOSTRATUS CLOUD BASE .16KM TOP .66KM                 
C          = 6  2.0MM/HR DRIZZLE (MODELED WITH CLOUD  3)                
C               RAIN  2. MM HR AT 0KM TO .22 MM HR AT 1.5KM             
C          = 7  5.0MM/HR LIGHT RAIN (MODELED WITH CLOUD  5)             
C               RAIN  5. MM HR AT 0KM TO .2  MM HR AT 1.5KM             
C          = 8  12.5MM/HR MODERATE RAIN (MODELED WITH CLOUD  5)         
C               RAIN 12.5MM HR AT 0KM TO .2  MM HR AT 2.0KM             
C          = 9  25.0MM/HR HEAVY RAIN (MODELED WITH CLOUD  1)            
C               RAIN 25. MM HR AT 0KM TO .2  MM HR AT 3.0KM             
C          =10  75.0MM/HR EXTREME RAIN (MODELED WITH CLOUD  1)          
C               RAIN 75. MM HR AT 0KM TO .2  MM HR AT 3.5KM             
C          =11  READ IN USER DEFINED CLOUD EXTINCTION AND ABSORPTION    
C              USER DEFINED  AEROSOL EXTINCTION COEFFICIENTS            
C              TRIGGERS READING IREG FOR UP TO 4 REGIONS OF             
C              USER DEFINED EXTINCTION ABSORPTION AND ASYMMETRY         
C          =18  STANDARD   CIRRUS MODEL                                 
C          =19  SUB VISUAL CIRRUS MODEL                                 
C          =20  NOAA       CIRRUS MODEL  (LOWTRAN 6 MODEL)              
C                                                                       
C                                                                       
C     IVSA DETERMINES THE USE OF THE ARMY VERTICAL STRUCTURE            
C     ALGORITHM FOR AEROSOLS IN THE BOUNDARY LAYER.                     
C                                                                       
C     IVSA=0   NOT USED                                                 
C         =1   VERTICAL STRUCTURE ALGORITHM                             
C                                                                       
C     'VIS'   SPECIFIES THE METEOROLIGICAL RANGE                        
C     VIS =    METEOROLOGICAL RANGE (KM) (WHEN SPECIFIED,SUPERSEDES     
C              DEFAULT VALUE SET BY IHAZE)                              
C                                                                       
C     'WSS'     SPECIFIES THE CURRENT WIND SPEED                        
C     WSS =    CURRENT WIND SPEED (M/S).    WITH (IHAZE=3/IHAZE=10)     
C                                                                       
C     'WHH'    SPECIFIES THE 24 HOUR AVERAGE WIND SPEED                 
C     WHH =    24 HOUR AVERAGE WIND SPEED (M/S).  ONLY WITH (IHAZE=3)   
C                                                                       
C     'RAINRT' SPECIFIES THE RAIN RATE                                  
C     RAINRT = RAIN RATE (MM/HR).             DEFAULT VALUE IS ZERO.    
C     USED  TO TOP OF CLOUD WHEN CLOUD IS PRESENT                       
C     WHEN NO CLOUDS RAIN RATE USED TO 6KM                              
C                                                                       
C     'GNDALT' SPECIFIES THE ALTITUDE OF SURFACE RELATIVE TO SEA LEVEL  
C     GNDALT = ALTITUDE OF SURFACE RELATIVE TO SEA LEVEL (KM)           
C              USED TO MODIFY  AEROSOL PROFILES BELOW 6 KM ALTITUDE     
C                                                                       
C***********************************************************************
C                                                                       
C     OPTIONAL INPUT CARDS AFTER CARD 2                                 
C     SELECTED BY PARAMETERS ICLD,IVSA,MODEL,AND IHAZE ON CARDS 2       
C                                                                       
C                                                                       
C     CARD 2A   CTHIK,CALT,CEXT,ISEED     (ICLD=18,19,20)               
C                          FORMAT(3F10.3,I10)                           
C                   INPUT CARD FOR CIRRUS ALTITUDE PROFILE              
C                   SUBROUTINE WHEN ICLD = 18,19,20                     
C                                                                       
C     CHTIK    = CIRRUS THICKNESS (KM)                                  
C                0  USE THICKNESS STATISTICS                            
C                                                                       
C     CALT     = CIRRUS BASE ALTITUDE(KM)                               
C                0 USE DEFAULT DETERMINED BY 'MODEL'                    
C                                                                       
C     CEXT     = EXTINCTION COEFFIENT(KM-1) AT 0.55                     
C                0 USE 0.14 * CTHIK                                     
C                                                                       
C     ISEED    = RANDOM NUMBER INITIALIZATION FLAG.                     
C                0 USE DEFAULT MEAN VALUES FOR CIRRUS                   
C                .NE. 0 INITIAL VALUE OF SEED FOR                       
C                RANDOM NUMBER GENERATOR FUNCTION                       
C                CHANGE SEED VALUE EACH RUN FOR DIFFERENT               
C                RANDOM NUMBER SEQUENCES.  THIS PROVIDES FOR            
C                STATISTICAL DETERMINATION OF CIRRUS BASE               
C                ALTITUDE AND THICKNESS.                                
C                                                                       
C   NOTE: RANDOM NUMBERS GENERATION IS SYSTEM DEPENDENT                 
C                                                                       
C***********************************************************************
C                                                                       
C     CARD 2B             ZCVSA,ZTVSA,ZINVSA     (IVSA=1)               
C                          FORMAT(3F10.3)                               
C               INPUT CARD FOR ARMY VERTICAL STRUCTURE                  
C               ALGORITHM SUBROUTINE WHEN IVSA=1.                       
C                                                                       
C     ZCVSA = CLOUD CEILING HEIGHT (KM)                                 
C             LT 0 NO CLOUD CEILING                                     
C             GT 0 KNOWN CLOUD CEILING                                  
C                0 UNKNOWN CLOUD CEILING HEIGHT                         
C                  PROGRAM CALCULATES CLOUD HEIGHT                      
C                                                                       
C     ZTVSA = THICKNESS OF CLOUD OR FOG (KM),                           
C               0 DEFAULTS TO 200 METERS                                
C                                                                       
C     ZINVSA= HEIGHT OF THE INVERSION (KM)                              
C                 0 DEFAULTS TO 100 METERS                              
C             LT  0 NO INVERSION LAYER                                  
C                                                                       
C***********************************************************************
C                                                                       
C     CARD 2C  ML,IRD1,IRD2,TITLE   (MODEL=0 / 7,IM=1)                  
C                          FORMAT(3I5,18A4)                             
C              ADDITIONAL ATMOSPHERIC MODEL       (MODEL=7)             
C              NEW MODEL ATMOSPHERE CAN BE INSERTED PROVIDED THE        
C              PARAMETERS 'MODEL' AND 'IM' ARE SET EQUAL TO 7 AND 1     
C              RESPECTIVELY ON CARD 1.                                  
C                                                                       
C     ML=      NUMBER OF ATMOSPHERIC LEVELS TO BE INSERTED              
C                   (MAXIMUM OF 34)                                     
C                                                                       
C     CARD 2C1 IS READ AUTOMATICALLY FOR MODEL 0 AND 7                  
C                                                                       
C     IRD1 CONTROL READING WN2O,WCO ... AND WNH3,WHNO3      CARD        
C                                                                       
C     IRD1 = 0     NO READ  (MOLECULAR DENSITIES BY LAYER)              
C     IRD1 = 1     READ                                                 
C                                                                       
C     IRD2  CONTROL READING AHAZE,EQLWCZ,... CARD                       
C                                                                       
C     IRD2 = 0     NO READ  (AEROSOL CONTROL BY LAYER)                  
C     IRD2 = 1     READ                                                 
C                                                                       
C     JCHAR  ON CARD 2C1 IS USUALLY USED TO DEFINE MOLECULES 4 TO 12    
C     IHAZE  ON CARD 2   IS USUALLY USED TO DEFINE AEROSOL PROFILES     
C     IRD1 = 1 OR IRD2 = 1   SELDOM USED                                
C                                                                       
C     TITLE=   IDENTIFICATION OF NEW MODEL ATMOSPHERE                   
C                                                                       
C                                                                       
C     THE FOLLOWING CARDS ARE READ IN SUBROUTINE AERNSM                 
C                                                                       
CC------------------------ BEGIN ML LOOP                                
CC-                                                                     
CC-   CARD 2C1 ZMDL,P,T,WMOL(1),WMOL(2),WMOL(3),JCHAR                   
CC-   LAYER VARIABLES        WH,   WCO2,     WO,JCHAR (1 TO 13)         
CC-                        FORMAT(F10.3,5E10.3,15A1)                    
CC-                                                                     
CC-   ZMDL     ALTITUDE OF LAYER (KM)                                   
CC-   P        PRESSURE AT LAYER                                        
CC-   T        TEMPERATURE                                              
CC-   WMOL     READ, INTERPRETED AND MOVED INTO LAYER VARIABLES         
CC-   WH =     WATER VAPOR                                              
CC-   WCO2 =   CO2                                                      
CC-   WO =     OZONE                                                    
CC-                                                                     
CC-   JCHAR    FLAGS TO SPECIFY UNITS OR DEFAULTS FOR                   
CC-   P,T,WH,WCO2,WO,WN2O,WCO,.. AND WNH3,WHNO3                         
CC-   JCHAR BLANK DEFAULT TO M1,M2,M3,M4,M5,M6,MDEF WHEN AMOUNT ZERO    
CC-                                                                     
CC-      PARAMETERS - JCHAR = INPUT KEY                                 
CC-                                                                     
CC-   **  ACCEPTS VARIABLE UNITS ON PRESS AND TEMP                      
CC-                                                                     
CC-     JCHAR(1)                                                        
CC-                                                                     
CC-    " ",A           PRESSURE IN (MB)    OR BLANK                     
CC-        B              "     "  (ATM)                                
CC-        C              "     "  (TORR)                               
CC-       1-6          DEFAULT TO SPECIFIED MODEL ATMOSPHERE            
CC-                                                                     
CC-     JCHAR(2)                                                        
CC-    " ",A           AMBIENT TEMPERATURE IN DEG(K)  OR BLANK          
CC-        B              "         "       "  " (C)                    
CC-       1-6          DEFAULT TO SPECIFIED MODEL ATMOSPHERE            
CC-                                                                     
CC-   ****************************************************************  
CC-   FOR MOLECULAR SPECIES ONLY                                        
CC-                                                                     
CC-     JCHAR             JCHAR(3-13)                                   
CC-                                                                     
CC-   " ",A            VOLUME MIXING RATIO (PPMV)                       
CC-       B            NUMBER DENSITY (CM-3)                            
CC-       C            MASS MIXING RATIO (GM(K)/KG(AIR))                
CC-       D            MASS DENSITY (GM M-3)                            
CC-       E            PARTIAL PRESSURE (MB)                            
CC-       F            DEW POINT TEMP (TD IN T(K)) - H2O ONLY           
CC-       G             "    "     "  (TD IN T(C)) - H2O ONLY           
CC-       H            RELATIVE HUMIDITY (RH IN PERCENT) - H2O ONLY (3) 
CC-       I            AVAILABLE FOR USER DEFINITION                    
CC-      1-6           DEFAULT TO SPECIFIED MODEL ATMOSPHERE            
CC-                                                                     
CC-   ****************************************************************  
CC-                                                                     
CC-   CARD 2C2   (WMOL(J),J=4,11)                                       
CC-   VARIABLES  WN2O,WCO,WCH4,WO2,WNO,WSO2,WNO2,WNH3                   
CC-                        FORMAT(8E10.3)                               
CC-                                                                     
CC-   CARD 2C2   WMOL(12)             (CONT)                            
CC-   VARIABLE   WHNO3                                                  
CC-                        FORMAT(8E10.3)                               
CC-                                                                     
CC-                                                                     
CC-   WMOL     READ, INTERPRETED AND MOVED INTO LAYER VARIABLES         
CC-   WN2O =   N2O                                                      
CC-   WCO  =   CO                                                       
CC-   WCH4 =   CH4                                                      
CC-   WO2  =   O2                                                       
CC-   WNO  =   NO                                                       
CC-   WSO2 =   SO2                                                      
CC-   WNO2 =   NO2                                                      
CC-   WNH3 =   NH3                                                      
CC-   WHNO3 =  HNO3                                                     
CC-                                                                     
CC-   ****************************************************************  
CC-                                                                     
CC- CARD 2C3     AHAZE,EQLWCZ,RRATZ,IHA1,ICLD1,IVUL1,ISEA1,ICHR         
CC-                        FORMAT(10X,3F10.3,5I5)                       
CC-                                                                     
CC-  'AHAZE' AEROSOL SCALING FACTOR (EQUAL TO THE VISIBLE [0.55UM]      
CC-          EXTINCTION COEFFICIENT AT ALTZ)                            
CC-                                                                     
CC-          [NOTE ** ONE OF AHAZE OR EQLWCZ IS ALLOWED ]               
CC-                                                                     
CC-  'EQLWCZ' EQUIVALENT LIQUID WATER CONTENT ( GM/M3) AT ALT Z         
CC-           FOR THE AEROSOL, CLOUD OR FOG MODELS                      
CC-                                                                     
CC-   RRATZ=RAIN RATE (MM/HR) AT ALT Z                                  
CC-                                                                     
CC-   'IHA1' AEROSOL EXTINCTION AND METEOROLOGICAL RANGE CONTROL FOR    
CC-          THE ALTITUDE, Z                                            
CC-                                                                     
CC-   'ICLD1' CLOUD EXTINCTION CONTROL FOR THE ALTITUDE, Z              
CC-                                                                     
CC-   WHEN USING 'ICLD1' IT IS NECESSARY TO SET 'ICLD' (NON ZERO)       
CC-                                                                     
CC-   'IVUL1' STRATOSPHERIC AEROSOL PROFILE AND EXTINCTION CONTROL FOR  
CC-   THE ALTITUDE Z                                                    
CC-                                                                     
CC-   ONLY ONE OF 'IHA1','ICLD1' OR 'IVUL1' IS ALLOWED                  
CC-   IF 'IHA1' NE 0  THEN OTHERS IGNORED                               
CC-   IF 'IHA1' EQ 0 AND 'ICLD1' NE 0 THEN USE 'ICLD1'                  
CC-                                                                     
CC-   IF 'AHAZE' AND 'EQLWCZ' ARE BOTH ZERO  DEFAULT PROFILE LOADED     
CC-      FROM 'IHAZ1','ICLD1','IVUL1'                                   
CC-                                                                     
CC-   'ISEA1'  AEROSOL SEASON CONTROL FOR THE ALTITUDE,Z                
CC-                                                                     
CC-   'ICHR '  CHANGE PROFILE REGION  AT ALTITUDE Z                     
CC-            USED WHEN IHA1 IS 7 IN TWO ADJACENT ALTITUDE REGIMES     
CC-                                                                     
CC------------- END ML LOOP                                             
C***********************************************************************
C                                                                       
C   IHAZE = 7 OR ICLD = 11 INPUT                                        
C                                                                       
C   CARD 2D  (IREG(II),II=1,4)                                          
C                        FORMAT(4I5)                                    
C                                                                       
C             'IREG' SPECIFIES WHICH OF THE FOUR AEROSOL REGIONS        
C              A USER DEFINED AEROSOL MODEL IS USED (IHAZE=7/ICLD=11)   
C                                                                       
C             [NOTE   REGIONS DEFAULT TO                                
C             0-2 ,3-10,11-30,35-100 KM                                 
C             AND CAN BE OVERRIDDEN WITH 'IHA1' SETTINGS IN MODEL 7]    
C                                                                       
C             IREG = 0  USE DEFAULT VALUES FOR THIS REGION              
C                                                                       
C             IREG = 1  READ EXTINCTION ABSORPTION ASYMMETRY            
C             FOR A REGION                                              
C                                                                       
C   CARD 2D1 AWCCON,TITLE                                               
C                        FORMAT(E10.3,18A4)                             
C                                                                       
C            'AWWCON' EQUIVALENT LIQUID WATER CONTENT(GM/M3)            
C             FOR A REGION                                              
C                                                                       
C             'TITLE' FOR A AEROSOL REGION                              
C                                                                       
C    CARD 2D2 (VX(I),EXTC(N,I),ABSC(N,I),ASYM(N,I),I=1,47)              
C                   FORMAT(4(F6.2,2F7.5,F6.4))                          
C                                                                       
C             WHERE  N = IREG(II)   FOR UP TO 4 ALTITUDE REGIONS        
C             USER DEFINED AEROSOL  OR CLOUD EXTINCTION AND ABSORPTION  
C              COEFFICIENTS WHEN IHAZE = 7 OR ICLD = 11                 
C                                                                       
C     VX(I)    = WAVELENGTH OF AEROSOL COEFFICIENT                      
C                   (NOT USED BY PROGRAM BUT CORRESPONDING TO           
C                   WAVELENGTHS DEFINED IN ARRAY VX2                    
C                   IN SUBROUTINE EXTDTA)                               
C                                                                       
C     EXTC(N,I) = AEROSOL EXTINCTION COEFFICIENT                        
C     ABSC(N,I) = AEROSOL ABSORPTION COEFFICIENT                        
C     ASYM(N,I) = AEROSOL ASYMMETRY PARAMETER                           
C     WHERE  N = IREG(II)   FOR UP TO 4 ALTITUDE REGIONS                
C                                                                       
C***********************************************************************
C                                                                       
C     CARD 3    H1,H2,ANGLE,RANGE,BETA,RO,LEN    FORMAT(6F10.3,I5)      
C            USED TO DEFINE THE GEOMETRICAL PATH PARAMETERS FOR A GIVEN 
C            PROBLEM.                                                   
C                                                                       
C     OR IF IEMSCT=3 ; CARD 3 H1,H2,ANGLE,IDAY,RO,ISOURC,ANGLEM         
C                                                                       
C     H1  =  INITIAL ALTITUDE(KM)                                       
C     H2  =  FINAL ALTITUDE(KM)                                         
C                                                                       
C                   IN THE RADIANCE MODE OF THE PROGRAM EXECUTION       
C            H1, THE INITIAL ALTITUDE,ALWAYS DEFINES THE POSITION OF    
C            THE OBSERVER (OR SENSOR).                                  
C                                                                       
C     ANGLE =INITIAL ZENITH ANGLE (DEGREES) AS MEASURED FROM H1         
C     [NOTE: ANGLE = 0 LOOKS STRAIGHT UP.                               
C            ANGLE IS DEFINED  FROM 0 TO 180 DEGREES ]                  
C                                                                       
C     RANGE =PATH LENGTH (KM)                                           
C     BETA  =EARTH CENTER ANGLE SUBTENDED BY H1 AND H2 (DEGREES)        
C                                                                       
C     RO =   RADIUS OF THE EARTH (KM) AT THE PARTICULAR GEOGRAPHICAL    
C            LOCATION AT WHICH THE CALCULATION IS TO BE PERFORMED.      
C              IF RO BLANK PROGRAM USES RADIUS FOR APPROPRIATE MODEL    
C              ATMOSPHERE. (MODEL 0 OR 7 DEFAULT = 6371.23 KM)          
C                                                                       
C     LEN =0 FOR NORMAL OPERATION OF PROGRAM                            
C         =1 LONG PATH THROUGH THE TANGENT HEIGHT                       
C                                                                       
C            IT IS NOT NECESSARY TO SPECIFY EVERY QUANTITY GIVEN ABOVE  
C            ONLY THOSE THAT ADEQUATELY DESCRIBE THE PROBLEM ACCORDING  
C            TO THE PARAMETER ITYPE                                     
C                                                                       
C            ITYPE=1 READ H1,RANGE                                      
C                 =2 READ H1,H2,ANGLE   OR H1,H2,RANGE   OR H1,H2,BETA  
C                    OR H1,ANGLE,RANGE                                  
C                 =3 READ H1,ANGLE OR H1,H2                             
C                    [NOTE: H2 IS INTERPRETED AS HMIN FOR THIS CASE]    
C                                                                       
C--------------                                                         
C     CARD 3    OPTION  IEMSCT = 3                                      
C    'IDAY'     DAY OF THE YEAR, I.E. FROM 1 TO 365  (IEMSCT = 3)       
C                                                                       
C     ISOURC=0  EXTRATERRESTRIAL SOURCE IS THE SUN                      
C           =1  EXTRATERRESTRIAL SOURCE IS THE MOON                     
C                                                                       
C     ANGLEM=PHASE ANGLE OF THE MOON, I.E. THE ANGLE FORMED             
C            BY THE SUN, MOON AND EARTH (REQUIRED IF ISOURC=1)          
C                                                                       
C***********************************************************************
C                                                                       
C     CARD 3A1   IPARM,IPH,IDAY,ISOURC           (IEMSCT=2)             
C                          FORMAT(4I5)                                  
C              INPUT CARD FOR SOLAR/LUNAR SCATTERED RADIATION WHEN      
C              IEMSCT = 2                                               
C                                                                       
C              IPARM =0,1,2 AND CONTROLS THE METHOD OF SPECIFYING THE   
C              SOLAR/LUNAR GEOMETRY ON CARD 3A2.                        
C                     (SEE DEFINITION BELOW FOR CARD 3A2)               
C                                                                       
C              IPH DETERMINES THE TYPE OF PHASE FUNCTION USED IN THE    
C               CALCULATION                                             
C                                                                       
C     IPH=0     HENYEY-GREENSTEIN AEROSOL PHASE FUNCTION                
C        =1     USER SUPPLIED AEROSOL PHASE FUNCTION (SEE CARD 3B)      
C        =2     MIE GENERATED DATA BASE OF AEROSOL PHASE FUNCTIONS FOR  
C               THE LOWTRAN MODELS.                                     
C                                                                       
C     IDAY=     DAY OF THE YEAR, I.E. FROM 1 TO 365   (REQUIRED)        
C                                                                       
C     ISOURC=0  EXTRATERRESTRIAL SOURCE IS THE SUN                      
C           =1  EXTRATERRESTRIAL SOURCE IS THE MOON                     
C                                                                       
C***********************************************************************
C                                                                       
C     CARD 3A2  PARM1,PARM2,PARM3,PARM4,TIME,PSIPO,ANGLEM,G             
C                          FORMAT(8F10.3)                (IEMSCT=2)     
C              INPUT CARD FOR SOLAR/LUNAR SCATTERED RADIATION WHEN      
C              IEMSCT = 2                                               
C              DEFINITIONS OF PARM1,PARM2,PARM3,PARM4 DETERMINED BY     
C              VALUE OF IPARM ON CARD 3A1.                              
C                                                                       
C                       FOR IPARM=0                                     
C                                                                       
C     PARM1= OBSERVER LATITUDE (-90 TO +90)                             
C          NOTE- IF ABS(PARM1) IS GREATER THAN 89.5 THE OBSERVER IS     
C          ASSUMED TO BE AT EITHER THE NORTH OR THE SOUTH POLE.  IN     
C          THAT CASE THE PATH AZIMUTH IS UNDEFINED.  THE DIRECTION OF   
C          LINE OF SIGHT MUST BE SPECIFIED AS THE LONGITUDE ALONG WHICH 
C          THE PATH LIES. THIS QUANTITY RATHER THAN THE USUAL AZIMUTH   
C          IS READ IN                                                   
C     PARM2= OBSERVER LONGITUDE (0 TO 360)                              
C     PARM3= SOURCE (SUN OR MOON) LATITUDE                              
C     PARM4= SOURCE (SUN OR MOON) LONGITUDE                             
C                                                                       
C                       FOR IPARM=1                                     
C        (IDAY AND TIME MUST BE SPECIFIED,CANNOT BE USED WITH ISOURC=1) 
C                                                                       
C                                                                       
C     PARM1= OBSERVER LATITUDE (-90 TO +90)                             
C     PARM2= OBSERVER LONGITUDE (0 TO 360)                              
C             PARM3,PARM4 ARE NOT REQUIRED                              
C                                                                       
C     [NOTE: THAT THE CALCULATED APPARENT SOLAR ZENITH                  
C            ANGLE IS THE ZENITH ANGLE AT H1 OF THE REFRACTED           
C            PATH TO THE SUN AND IS LESS THAN THE ASTRONOMICAL          
C            SOLAR ZENITH ANGLE.  THE DIFFERENCE BETWEEN THE            
C            TWO ANGLES IS NEGLIGIBLE FOR ANGLES LESS THAN 80           
C            DEGREES.]                                                  
C                                                                       
C                        FOR IPARM=2                                    
C                                                                       
C     PARM1= AZIMUTHAL ANGLE BETWEEN THE OBSERVER'S LINE OF SIGHT       
C            AND THE OBSERVER-TO-SUN PATH, MEASURED FROM THE LINE       
C            OF SIGHT, POSITIVE EAST OF NORTH, BETWEEN -180 AND 180     
C     PARM2= THE SUN'S ZENITH ANGLE                                     
C                                                                       
C              PARM3,PARM4 ARE NOT REQUIRED                             
C                                                                       
C                                                                       
C              REMAINING CONTROL PARAMETERS                             
C                                                                       
C     TIME=  GREENWICH TIME IN DECIMAL HOURS, I.E. 8:45 AM IS 8.75,     
C            5:20 PM IS 17.33 ETC. (USED WITH IPARM = 1)                
C                                                                       
C     PSIPO= PATH AZIMUTH (DEGREES EAST OF NORTH, I.E. DUE NORTH IS 0.0 
C            DUE EAST IS 90.0 ETC.  (USED WITH IPARM = 0 OR 1)          
C                                                                       
C     ANGLEM=PHASE ANGLE OF THE MOON, I.E. THE ANGLE FORMED             
C            BY THE SUN, MOON AND EARTH (REQUIRED IF ISOURC=1)          
C                                                                       
C     G=     ASYMMETRY FACTOR FOR USE WITH HENYEY-GREENSTEIN            
C            PHASE FUNCTION (USED WITH IPH = 0)                         
C                                                                       
C***********************************************************************
C     CARD 3B1 NANGLS          (IPH=1)                                  
C                   FORMAT(I5)                                          
C                                                                       
C              INPUT CARD FOR USER DEFINED PHASE FUNCTIONS WHEN IPH=1.  
C                                                                       
C     NANGLS=  NUMBER OF ANGLES FOR THE USER DEFINED PHASE              
C              FUNCTIONS(MAXIMUM OF 50)                                 
C                                                                       
C***********************************************************************
C                                                                       
C     CARD 3B2(1 TO NANGLS)    (IPH=1)                                  
C             (ANGF(I),F(1,I),F(2,I),F(3,I),F(4,I),I=1,NANGLS)          
C                   FORMAT(5E10.3)                                      
C              INPUT CARD FOR USER DEFINED PHASE FUNCTION WHEN IPH=1.   
C              FOR AVERAGE FREQUENCY OF CALCULATION                     
C                                                                       
C     ANGF(I)= PHASE ANGLE IN DECIMAL DEGREES                           
C                   (0.0 TO 180.0)                                      
C                                                                       
C     F(1,I)=  USER DEFINED PHASE FUNCTION AT ANGF(I)                   
C              BOUNDARY LAYER DEFAULTS TO (0 TO 2KM))                   
C                                                                       
C     F(2,I)=  USER DEFINED PHASE FUNCTION AT ANGF(I)                   
C              TROPOSPHERE DEFAULTS TO (2 TO 10 KM)                     
C                                                                       
C     F(3,I)=  USER DEFINED PHASE FUNCTION AT ANGF(I)                   
C              STRATOSPHERE DEFAULTS TO (10 TO 30 KM)                   
C                                                                       
C     F(4,I)=  USER DEFINED PHASE FUNCTION AT ANGF(I)                   
C              MESOSPHERE DEFAULTS TO (30 TO 100 KM)                    
C                                                                       
C***********************************************************************
C                                                                       
C     CARD 4    V1, V2, DV                       FORMAT(3F10.3)         
C                                                                       
C              THE SPECTRAL RANGE OVER WHICH DATA ARE REQUIRED AND      
C              THE SPECTRAL INCREMENTS AT WHICH THE DATA ARE TO BE      
C              CALCULATED  IS DETERMINED BY CARD 4.                     
C                                                                       
C     V1 =     INITIAL FREQUENCY (WAVENUMBER CM-1 )                     
C     V2 =     FINAL FREQUENCY(WAVENUMBER CM-1 )                        
C     DV =     FREQUENCY INCREMENT (OR STEP SIZE) (CM-1)                
C              NOTE: DV MUST BE A MULTIPLE OF 5 CM-1                    
C              ANY STEP SIZE .GT. 5 CM-1 WILL UNDERSAMPLE THE RESULTS   
C                                                                       
C              SCANNING FUNCTION IS AVAILABLE TO PROPERLY HANDLE DATA   
C              WITH LOWER RESOLUTION THAN 20CM-1 LOWTRAN 7              
C                                                                       
C***********************************************************************
C                                                                       
C     CARD 5    IRPT                             FORMAT(I5)             
C     IRPT=0  TO END PROGRAM                                            
C         =1  READ ALL DATA CARDS (1,2,3,4,5)                           
C         =2  NOT USED  (WILL STOP PROGRAM)                             
C         =3  READ CARD 3   THE GEOMETRY CARD AND CARD 5                
C         =4  READ CARD 4 TO CHANGE FREQUENCY AND CARD 5                
C     GT 4 OR IRPT=2 WILL CAUSE PROGRAM TO STOP                         
C                                                                       
C     IRPT GE 1 USED FOR MULTIPLE RUNS OF LOWTRAN                       
C     WARNING IRPT 3 CANNOT BE USED WHEN RUNNING MULTIPLE SCATTERING    
C     CASES WITH SOLAR SCATTERING                                       
C                                                                       
C     REFERENCES                                                        
C                                                                       
C       (1980) ATMOSPHERIC TRANSMITTANCE/RADIANCE- COMPUTER CODE        
C       LOWTRAN 5 AFGL-TR-80-0067                                       
C       KNEIZYS, F. X.,SHETTLE, E. P. ,GALLERY, W. O.,CHETWYND, J. H.,  
C       ABREU, L. W., SELBY, J. E. A., FENN, R. W. ,MCCLATCHEY R. A.    
C                                                                       
C       (1983) ATMOSPHERIC TRANSMITTANCE/RADIANCE- COMPUTER CODE        
C       LOWTRAN 6  AFGL TR 83 0187                                      
C       KNEIZYS, F. X.,SHETTLE, E. P. ,GALLERY, W. O.,CHETWYND, J. H.,  
C       ABREU, L. W., SELBY, J. E. A., CLOUGH, S. A., FENN, R. W.       
C                                                                       
C       (1988) ATMOSPHERIC TRANSMITTANCE/RADIANCE- COMPUTER CODE        
C       LOWTRAN 7 AFGL-TR-88-XXXX                                       
C       KNEIZYS, F. X.,SHETTLE, E. P. ,ANDERSON G. P.,ABREU ,L. W.      
C       CHETWYND, J H,SELBY, J. E. A. ,CLOUGH, S. A.,GALLERY, W. O      
C                                                                       
C       (1988) LOWTRAN 7 COMPUTER CODE : USER'S MANUAL AFGL-TR-88-XXXX  
C       KNEIZYS, F. X.,SHETTLE, E. P. ,ANDERSON G. P.,ABREU ,L. W.      
C       CHETWYND, J H,SELBY, J. E. A. ,CLOUGH, S. A.,GALLERY, W. O      
C                                                                       
C       MOLECULAR TRANSMISSION BAND MODELS FOR LOWTRAN AFGL-TR-86-0272  
C       PIERLUISSI, J. H., MARAGOUDAKIS, C. E.                          
C                                                                       
C       MULTIPLE SCATTERING TREATMENT FOR USE IN                        
C       THE LOWTRAN AND FASCODE MODELS  AFGL-TR-86-0073                 
C       ISAACS, R. G., WANG, W. C., WORSHAM, R. D.,GOLDENBERG S.        
C                                                                       
C       AFGL ATMOSPHERIC CONSTITUENT PROFILES (0 TO 120KM)              
C                                              AFGL-TR-86-0110          
C       ANDERSON, G. P., CLOUGH, S. A., KNEIZYS, F. X.,                 
C       CHETWYND, J. H., SHETTLE, E. P.                                 
C                                                                       
C       PROGRAM FOR ATMOSPHERIC TRANSMITTANCE RADIANCE/CALCULATIONS     
C       FSCATM                                  AFGL-TR-83-0065         
C       GALLERY, W. O., KNEIZYS, F. X., AND CLOUGH, S. A.               
C                                                                       
C       AFGL HANDBOOK OF GEOPHYSICS AND THE SPACE ENVIRONMENT           
C       EDITOR, A. S. JURSA  CHAPTER 18 1985                            
C                                                                       
C       MODELS OF THE AEROSOLS OF THE LOWER ATMOSPHERE AND THE EFFECTS  
C       OF HUMIDITY VARIATIONS ON THEIR OPTICAL PROPERTIES              
C       SHETTLE, E.P. AND FENN, R. W.            AFGL-TR-79-0214        
C                                                                       
C       OPTICAL PROPAGATION IN THE ATMOSPHERE    AGARD-CP-183  1975     
C       SHETTLE, E. P., AND FENN, R. W.          NTIS (NO AD-A028-615)  
C                                                                       
C                                                                       
C       ATMOSPHERIC ATTENUATION OF MILLIMETER AND SUBMILLIMETER         
C       WAVES:  MODEL AND COMPUTER CODE          AFGL-TR-79-0253        
C       FALCONE,V. J. JR.,ABREU,L. W. AND SHETTLE, E. P.                
C                                                                       
C       LOWTRAN  PLUS ULTRAVIOLET O2 ABSORPTION                         
C                                                                       
C       REFERENCES- JOHNSTON, ET AL, J GEOPHYS RES, 89,11661-11665,1984.
C                                                                       
C       FREQUENCY RANGE: 50000-36000CM-1 FOR HERZBERG CALCULATION       
C                                                                       
C       THE SCHUMANN-RUNGE BANDS (PARTICULARLY THE 1,0 AND 0,0) ARE NOT 
C       INCLUDED IN THE CALCULATIONS (50000 AND 49400 CM-1).            
C       THE HERZBERG BANDS ARE APPROXIMATED BY AN EXTRAPOLATION OF THE  
C       HERZBERG CONTINUUM (41322-36000 CM-1).                          
C                                                                       
C***********************************************************************
Crea0892      CALL DRIVER                                               
Crea0892      STOP                                                      
C@    END                                                               
C@    THE FOLLOWING TIME AND DATE SUBROUTINES APPLY TO A CDC 6600       
C@    SUBROUTINE FDATE(HDATE)                                           
C@    CALL DATE(GDATE)                                                  
C@    HDATE=SHIFT(GDATE,6)                                              
C@    RETURN                                                            
C@    END                                                               
C@    SUBROUTINE FCLOCK(HTIME)                                          
C@    CALL CLOCK(GTIME)                                                 
C@    HTIME=SHIFT(GTIME,6)                                              
C@    RETURN                                                            
Crea0892      END                                                       
      BLOCK DATA ABCD                                                   
C>    BLOCK DATA                                                        
      COMMON /ABC/ FACTOR(3),ANH3(2),ACO2(10),ACO(3),                   
     X             ACH4(4),ANO2(3),AN2O(11),AO2(6),AO3(5),              
     X             ASO2(4),AH2O(14),ANO,                                
     X             AANH3(2),BBNH3(2),CCNH3(2),                          
     X             AACO2(10),BBCO2(10),CCCO2(10),                       
     X             AACO(3),BBCO(3),CCCO(3),                             
     X             AACH4(4),BBCH4(4),CCCH4(4),                          
     X             AANO2(3),BBNO2(3),CCNO2(3),                          
     X             AAN2O(11),BBN2O(11),CCN2O(11),                       
     X             AAO2(6),BBO2(6),CCO2(6),                             
     X             AAO3(5),BBO3(5),CCO3(5),                             
     X             AASO2(4),BBSO2(4),CCSO2(4),                          
     X             AAH2O(14),BBH2O(14),CCH2O(14),                       
     X             AANO     ,BBNO     ,CCNO                             
      DATA FACTOR/1.0,0.09,0.015/                                       
      DATA ANH3/.4704,.6035/                                            
      DATA ACO2/.6176,.6810,.6033,.6146,.6513,.6050,                    
     1 .6160,.7070,.7070,.7070/                                         
      DATA ACO/.6397,.6133,.6133/                                       
      DATA ACH4/.5844,.5844,.5844,.5844/                                
      DATA ANO/.6613/                                                   
      DATA ANO2/.7249,.7249,.7249/                                      
      DATA AN2O/.8997,.7201,.7201,.7201,.7201,.7201,                    
     1 .6933,.6933,.6933,.6933,.6933/                                   
      DATA AO2/.6011,.5641,.5641,.5641,.5641,.5641/                     
      DATA AO3/.8559,.7593,.7819,.9175,.7703/                           
      DATA ASO2/.8907,.8466,.8466,.8466/                                
      DATA AH2O/.5274,.5299,.5416,.5479,.5495,.5464,.5454,              
     1 .5474,.5579,.5621,.5847,.6076,.6508,.6570/                       
      DATA AANH3/.285772,.134244/                                       
      DATA BBNH3/.269839,.353937/                                       
      DATA CCNH3/19.9507,27.8458/                                       
      DATA AACO2/.120300,.069728,.134448,.123189,.090948,               
     1 .132717,.121835,.054348,.054348,.054348/                         
      DATA BBCO2/.348172,.303510,.354002,.349583,.327160,               
     1 .353435,.348936,.280674,.280674,.280674/                         
      DATA CCCO2/29.4277,37.0842,27.8241,29.0834,33.4608,               
     1 28.0093,29.2436,40.1951,40.1951,40.1951/                         
      DATA AACO/.100401,.124454,.124454/                                
      DATA BBCO/.335296,.350165,.350165/                                
      DATA CCCO/32.0496,28.9354,28.9354/                                
      DATA AACH4/.154447,.154447,.154447,.154447/                       
      DATA BBCH4/.357657,.357657,.357657,.357657/                       
      DATA CCCH4/25.8920,25.8920,25.8920,25.8920/                       
      DATA AANO/.083336/                                                
      DATA BBNO/.319585/                                                
      DATA CCNO/34.6834/                                                
      DATA AANO2/.045281,.045281,.045281/                               
      DATA BBNO2/.264248,.264248,.264248/                               
      DATA CCNO2/42.2784,42.2784,42.2784/                               
      DATA AAN2O/.001679,.047599,.047599,.047599,.047599,               
     1 .047599,.062106,.062106,.062106,.062106,.062106/                 
      DATA BBN2O/.095621,.268696,.268696,.268696,.268696,               
     1 .268696,.292891,.292891,.292891,.292891,.292891/                 
      DATA CCN2O/59.3660,41.7251,41.7251,41.7251,41.7251,               
     1 41.7251,38.5667,38.5667,38.5667,38.5667,38.5667/                 
      DATA AAO2/.136706,.177087,.177087,.177087,.177087,.177087/        
      DATA BBO2/.354683,.355447,.355447,.355447,.355447,.355447/        
      DATA CCO2/27.5869,24.1314,24.1314,24.1314,24.1314,24.1314/        
      DATA AAO3/.006712,.030870,.023278,.000458,.027004/                
      DATA BBO3/.138026,.231722,.209952,.078492,.221153/                
      DATA CCO3/55.6442,46.1189,48.5155,60.7802,47.2982/                
      DATA AASO2/.002468,.008192,.008192,.008192/                       
      DATA BBSO2/.104307,.147065,.147065,.147065/                       
      DATA CCSO2/58.6298,54.8078,54.8078,54.8078/                       
      DATA AAH2O/.219312,.216415,.206349,.196196,.194540,.198500,       
     1 .198500,.196196,.184148,.179360,.154120,.130095,.091341,.086549/ 
      DATA BBH2O/.334884,.336904,.343272,.348610,.349810,.347498,       
     1 .347498,.348610,.353429,.354864,.357640,.352497,.327526,.322898/ 
      DATA CCH2O/21.8352,21.9588,22.4234,22.9517,23.0750,22.8262,       
     1 22.8262,22.9517,23.6654,23.9774,25.9207,28.2957,33.3998,34.1575/ 
      END                                                               
      BLOCK DATA ATMCON                                                 
C>    BLOCK DATA                                                        
C***********************************************************************
C     THIS SUBROUTINE INITIALIZES THE CONSTANTS  USED IN THE            
C     PROGRAM. CONSTANTS RELATING TO THE ATMOSPHERIC PROFILES ARE STORED
C     IN BLOCK DATA MLATMB.                                             
C***********************************************************************
      COMMON /CONSTN/ PZERO,TZERO,AVOGAD,ALOSMT,GASCON,PLANK,BOLTZ,     
     1    CLIGHT,ADCON,ALZERO,AVMWT,AIRMWT,AMWT(35)                     
      DATA PZERO/1013.25/,TZERO/273.15/                                 
      DATA AVOGAD/6.022045E+23/,ALOSMT/2.68675E+19/,                    
     1    GASCON/8.31441E+7/,PLANK/6.626176E-27/,BOLTZ/1.380662E-16/,   
     2    CLIGHT/2.99792458E10/                                         
C*****ALZERO IS THE MEAN LORENTZ HALFWIDTH AT PZERO AND 296.0 K.        
C*****AVMWT IS THE MEAN MOLECULAR WEIGHT USED TO AUTOMATICALLY          
C*****GENERATE THE FASCODE BOUNDARIES IN AUTLAY                         
      DATA ALZERO/0.1/,AVMWT/36.0/                                      
      DATA AIRMWT/28.964/,AMWT/18.015,44.010,47.998,44.01,28.011,       
     1    16.043,31.999,30.01,64.06,46.01,17.03,63.01,17.00,20.01,      
     2    36.46,80.92,127.91,51.45,60.08,30.03,52.46,28.014,            
     3    27.03, 50.49, 34.01, 26.03, 30.07, 34.00, 7*0./               
      END                                                               
      BLOCK DATA BFH2O                                                  
C>    BLOCK DATA                                                        
C               06/28/82                                                
C               UNITS OF (CM**3/MOL)*1.E-20                             
      COMMON /FH2O/ V1,V2,DV,NPT,F0000(2),                              
     1      F0001(50),F0051(50),F0101(50),F0151(50),F0201(50),F0251(50),
     2      F0301(50),F0351(50),F0401(50),F0451(50),F0501(50),F0551(50),
     3      F0601(50),F0651(50),F0701(50),F0751(50),F0801(50),F0851(50),
     4      F0901(50),F0951(50),F1001(50),F1051(50),F1101(50),F1151(50),
     5      F1201(50),F1251(50),F1301(50),F1351(50),F1401(50),F1451(50),
     6      F1501(50),F1551(50),F1601(50),F1651(50),F1701(50),F1751(50),
     7      F1801(50),F1851(50),F1901(50),F1951(50),F2001(1)            
C                                                                       
C                                                                       
       DATA V1,V2,DV,NPT /                                              
     1      -20.0,     20000.0,       10.0,  2003/                      
C                                                                       
C                                                                       
      DATA F0000/ 1.2859E-02, 1.1715E-02/                               
      DATA F0001/                                                       
     X 1.1038E-02, 1.1715E-02, 1.2859E-02, 1.5326E-02, 1.6999E-02,      
     X 1.8321E-02, 1.9402E-02, 1.9570E-02, 1.9432E-02, 1.7572E-02,      
     X 1.6760E-02, 1.5480E-02, 1.3984E-02, 1.2266E-02, 1.0467E-02,      
     X 9.4526E-03, 8.0485E-03, 6.9484E-03, 6.1416E-03, 5.0941E-03,      
     X 4.4836E-03, 3.8133E-03, 3.4608E-03, 3.1487E-03, 2.4555E-03,      
     X 2.0977E-03, 1.7266E-03, 1.4920E-03, 1.2709E-03, 9.8081E-04,      
     X 8.5063E-04, 6.8822E-04, 5.3809E-04, 4.4679E-04, 3.3774E-04,      
     X 2.7979E-04, 2.1047E-04, 1.6511E-04, 1.2993E-04, 9.3033E-05,      
     X 7.4360E-05, 5.6428E-05, 4.5442E-05, 3.4575E-05, 2.7903E-05,      
     X 2.1374E-05, 1.6075E-05, 1.3022E-05, 1.0962E-05, 8.5959E-06/      
      DATA F0051/                                                       
     X 6.9125E-06, 5.3808E-06, 4.3586E-06, 3.6394E-06, 2.9552E-06,      
     X 2.3547E-06, 1.8463E-06, 1.6036E-06, 1.3483E-06, 1.1968E-06,      
     X 1.0333E-06, 8.4484E-07, 6.7195E-07, 5.0947E-07, 4.2343E-07,      
     X 3.4453E-07, 2.7830E-07, 2.3063E-07, 1.9951E-07, 1.7087E-07,      
     X 1.4393E-07, 1.2575E-07, 1.0750E-07, 8.2325E-08, 5.7524E-08,      
     X 4.4482E-08, 3.8106E-08, 3.4315E-08, 2.9422E-08, 2.5069E-08,      
     X 2.2402E-08, 1.9349E-08, 1.6152E-08, 1.2208E-08, 8.9660E-09,      
     X 7.1322E-09, 6.1028E-09, 5.2938E-09, 4.5350E-09, 3.4977E-09,      
     X 2.9511E-09, 2.4734E-09, 2.0508E-09, 1.8507E-09, 1.6373E-09,      
     X 1.5171E-09, 1.3071E-09, 1.2462E-09, 1.2148E-09, 1.2590E-09/      
      DATA F0101/                                                       
     X 1.3153E-09, 1.3301E-09, 1.4483E-09, 1.6944E-09, 2.0559E-09,      
     X 2.2954E-09, 2.6221E-09, 3.2606E-09, 4.2392E-09, 5.2171E-09,      
     X 6.2553E-09, 8.2548E-09, 9.5842E-09, 1.1280E-08, 1.3628E-08,      
     X 1.7635E-08, 2.1576E-08, 2.4835E-08, 3.0014E-08, 3.8485E-08,      
     X 4.7440E-08, 5.5202E-08, 7.0897E-08, 9.6578E-08, 1.3976E-07,      
     X 1.8391E-07, 2.3207E-07, 2.9960E-07, 4.0408E-07, 5.9260E-07,      
     X 7.8487E-07, 1.0947E-06, 1.4676E-06, 1.9325E-06, 2.6587E-06,      
     X 3.4534E-06, 4.4376E-06, 5.8061E-06, 7.0141E-06, 8.4937E-06,      
     X 1.0186E-05, 1.2034E-05, 1.3837E-05, 1.6595E-05, 1.9259E-05,      
     X 2.1620E-05, 2.3681E-05, 2.7064E-05, 3.2510E-05, 3.5460E-05/      
      DATA F0151/                                                       
     X 3.9109E-05, 4.2891E-05, 4.7757E-05, 5.0981E-05, 5.0527E-05,      
     X 4.8618E-05, 4.4001E-05, 3.7982E-05, 3.2667E-05, 2.7794E-05,      
     X 2.4910E-05, 2.4375E-05, 2.7316E-05, 3.2579E-05, 3.5499E-05,      
     X 3.8010E-05, 4.1353E-05, 4.3323E-05, 4.3004E-05, 3.9790E-05,      
     X 3.7718E-05, 3.6360E-05, 3.2386E-05, 2.7409E-05, 2.3626E-05,      
     X 2.0631E-05, 1.8371E-05, 1.5445E-05, 1.2989E-05, 1.1098E-05,      
     X 9.6552E-06, 8.0649E-06, 7.2365E-06, 5.9137E-06, 5.2759E-06,      
     X 4.8860E-06, 4.1321E-06, 3.5918E-06, 2.7640E-06, 2.4892E-06,      
     X 2.1018E-06, 1.7848E-06, 1.5855E-06, 1.3569E-06, 1.1986E-06,      
     X 9.4693E-07, 7.4097E-07, 6.3443E-07, 4.8131E-07, 4.0942E-07/      
      DATA F0201/                                                       
     X 3.3316E-07, 2.8488E-07, 2.3461E-07, 1.7397E-07, 1.4684E-07,      
     X 1.0953E-07, 8.5396E-08, 6.9261E-08, 5.4001E-08, 4.5430E-08,      
     X 3.2791E-08, 2.5995E-08, 2.0225E-08, 1.5710E-08, 1.3027E-08,      
     X 1.0229E-08, 8.5277E-09, 6.5249E-09, 5.0117E-09, 3.9906E-09,      
     X 3.2332E-09, 2.7847E-09, 2.4570E-09, 2.3359E-09, 2.0599E-09,      
     X 1.8436E-09, 1.6559E-09, 1.4910E-09, 1.2794E-09, 9.8229E-10,      
     X 8.0054E-10, 6.0769E-10, 4.5646E-10, 3.3111E-10, 2.4428E-10,      
     X 1.8007E-10, 1.3291E-10, 9.7974E-11, 7.8271E-11, 6.3833E-11,      
     X 5.4425E-11, 4.6471E-11, 4.0209E-11, 3.5227E-11, 3.1212E-11,      
     X 2.8840E-11, 2.7762E-11, 2.7935E-11, 3.2012E-11, 3.9525E-11/      
      DATA F0251/                                                       
     X 5.0303E-11, 6.8027E-11, 9.3954E-11, 1.2986E-10, 1.8478E-10,      
     X 2.5331E-10, 3.4827E-10, 4.6968E-10, 6.2380E-10, 7.9106E-10,      
     X 1.0026E-09, 1.2102E-09, 1.4146E-09, 1.6154E-09, 1.7510E-09,      
     X 1.8575E-09, 1.8742E-09, 1.8700E-09, 1.8582E-09, 1.9657E-09,      
     X 2.1204E-09, 2.0381E-09, 2.0122E-09, 2.0436E-09, 2.1213E-09,      
     X 2.0742E-09, 1.9870E-09, 2.0465E-09, 2.1556E-09, 2.2222E-09,      
     X 2.1977E-09, 2.1047E-09, 1.9334E-09, 1.7357E-09, 1.5754E-09,      
     X 1.4398E-09, 1.4018E-09, 1.5459E-09, 1.7576E-09, 2.1645E-09,      
     X 2.9480E-09, 4.4439E-09, 5.8341E-09, 8.0757E-09, 1.1658E-08,      
     X 1.6793E-08, 2.2694E-08, 2.9468E-08, 3.9278E-08, 5.2145E-08/      
      DATA F0301/                                                       
     X 6.4378E-08, 7.7947E-08, 8.5321E-08, 9.7848E-08, 1.0999E-07,      
     X 1.1489E-07, 1.2082E-07, 1.2822E-07, 1.4053E-07, 1.5238E-07,      
     X 1.5454E-07, 1.5018E-07, 1.4048E-07, 1.2359E-07, 1.0858E-07,      
     X 9.3486E-08, 8.1638E-08, 7.7690E-08, 8.4625E-08, 1.0114E-07,      
     X 1.1430E-07, 1.2263E-07, 1.3084E-07, 1.3380E-07, 1.3573E-07,      
     X 1.3441E-07, 1.2962E-07, 1.2638E-07, 1.1934E-07, 1.1371E-07,      
     X 1.0871E-07, 9.8843E-08, 9.1877E-08, 9.1050E-08, 9.3213E-08,      
     X 9.2929E-08, 1.0155E-07, 1.1263E-07, 1.2370E-07, 1.3636E-07,      
     X 1.5400E-07, 1.7656E-07, 2.1329E-07, 2.3045E-07, 2.5811E-07,      
     X 2.9261E-07, 3.4259E-07, 4.0770E-07, 4.8771E-07, 5.8081E-07/      
      DATA F0351/                                                       
     X 7.2895E-07, 8.7482E-07, 1.0795E-06, 1.3384E-06, 1.7208E-06,      
     X 2.0677E-06, 2.5294E-06, 3.1123E-06, 3.7900E-06, 4.7752E-06,      
     X 5.6891E-06, 6.6261E-06, 7.6246E-06, 8.7730E-06, 9.6672E-06,      
     X 1.0980E-05, 1.1287E-05, 1.1670E-05, 1.1635E-05, 1.1768E-05,      
     X 1.2039E-05, 1.2253E-05, 1.3294E-05, 1.4005E-05, 1.3854E-05,      
     X 1.3420E-05, 1.3003E-05, 1.2645E-05, 1.1715E-05, 1.1258E-05,      
     X 1.1516E-05, 1.2494E-05, 1.3655E-05, 1.4931E-05, 1.4649E-05,      
     X 1.3857E-05, 1.3120E-05, 1.1791E-05, 1.0637E-05, 8.2760E-06,      
     X 6.5821E-06, 5.1959E-06, 4.0158E-06, 3.0131E-06, 2.0462E-06,      
     X 1.4853E-06, 1.0365E-06, 7.3938E-07, 4.9752E-07, 3.4148E-07/      
      DATA F0401/                                                       
     X 2.4992E-07, 1.8363E-07, 1.4591E-07, 1.1380E-07, 9.0588E-08,      
     X 7.3697E-08, 6.0252E-08, 5.1868E-08, 4.2660E-08, 3.6163E-08,      
     X 3.2512E-08, 2.9258E-08, 2.4238E-08, 2.1209E-08, 1.6362E-08,      
     X 1.3871E-08, 1.2355E-08, 9.6940E-09, 7.7735E-09, 6.2278E-09,      
     X 5.2282E-09, 4.3799E-09, 3.5545E-09, 2.7527E-09, 2.0950E-09,      
     X 1.6344E-09, 1.2689E-09, 1.0403E-09, 8.4880E-10, 6.3461E-10,      
     X 4.7657E-10, 3.5220E-10, 2.7879E-10, 2.3021E-10, 1.6167E-10,      
     X 1.1732E-10, 8.9206E-11, 7.0596E-11, 5.8310E-11, 4.4084E-11,      
     X 3.1534E-11, 2.5068E-11, 2.2088E-11, 2.2579E-11, 2.2637E-11,      
     X 2.5705E-11, 3.2415E-11, 4.6116E-11, 6.5346E-11, 9.4842E-11/      
      DATA F0451/                                                       
     X 1.2809E-10, 1.8211E-10, 2.4052E-10, 3.0270E-10, 3.5531E-10,      
     X 4.2402E-10, 4.6730E-10, 4.7942E-10, 4.6813E-10, 4.5997E-10,      
     X 4.5788E-10, 4.0311E-10, 3.7367E-10, 3.3149E-10, 2.9281E-10,      
     X 2.5231E-10, 2.1152E-10, 1.9799E-10, 1.8636E-10, 1.9085E-10,      
     X 2.0786E-10, 2.2464E-10, 2.3785E-10, 2.5684E-10, 2.7499E-10,      
     X 2.6962E-10, 2.6378E-10, 2.6297E-10, 2.6903E-10, 2.7035E-10,      
     X 2.5394E-10, 2.5655E-10, 2.7184E-10, 2.9013E-10, 3.0585E-10,      
     X 3.0791E-10, 3.1667E-10, 3.4343E-10, 3.7365E-10, 4.0269E-10,      
     X 4.7260E-10, 5.6584E-10, 6.9791E-10, 8.6569E-10, 1.0393E-09,      
     X 1.2067E-09, 1.5047E-09, 1.8583E-09, 2.2357E-09, 2.6498E-09/      
      DATA F0501/                                                       
     X 3.2483E-09, 3.9927E-09, 4.6618E-09, 5.5555E-09, 6.6609E-09,      
     X 8.2139E-09, 1.0285E-08, 1.3919E-08, 1.8786E-08, 2.5150E-08,      
     X 3.3130E-08, 4.5442E-08, 6.3370E-08, 9.0628E-08, 1.2118E-07,      
     X 1.5927E-07, 2.1358E-07, 2.7825E-07, 3.7671E-07, 4.4894E-07,      
     X 5.4442E-07, 6.2240E-07, 7.3004E-07, 8.3384E-07, 8.7933E-07,      
     X 8.8080E-07, 8.6939E-07, 8.6541E-07, 8.2055E-07, 7.7278E-07,      
     X 7.5989E-07, 8.6909E-07, 9.7945E-07, 1.0394E-06, 1.0646E-06,      
     X 1.1509E-06, 1.2017E-06, 1.1915E-06, 1.1259E-06, 1.1549E-06,      
     X 1.1938E-06, 1.2356E-06, 1.2404E-06, 1.1716E-06, 1.1149E-06,      
     X 1.0073E-06, 8.9845E-07, 7.6639E-07, 6.1517E-07, 5.0887E-07/      
      DATA F0551/                                                       
     X 4.1269E-07, 3.2474E-07, 2.5698E-07, 1.8893E-07, 1.4009E-07,      
     X 1.0340E-07, 7.7724E-08, 5.7302E-08, 4.2178E-08, 2.9603E-08,      
     X 2.1945E-08, 1.6301E-08, 1.2806E-08, 1.0048E-08, 7.8970E-09,      
     X 6.1133E-09, 4.9054E-09, 4.1985E-09, 3.6944E-09, 3.2586E-09,      
     X 2.7362E-09, 2.3647E-09, 2.1249E-09, 1.8172E-09, 1.6224E-09,      
     X 1.5158E-09, 1.2361E-09, 1.0682E-09, 9.2312E-10, 7.9220E-10,      
     X 6.8174E-10, 5.6147E-10, 4.8268E-10, 4.1534E-10, 3.3106E-10,      
     X 2.8275E-10, 2.4584E-10, 2.0742E-10, 1.7840E-10, 1.4664E-10,      
     X 1.2390E-10, 1.0497E-10, 8.5038E-11, 6.7008E-11, 5.6355E-11,      
     X 4.3323E-11, 3.6914E-11, 3.2262E-11, 3.0749E-11, 3.0318E-11/      
      DATA F0601/                                                       
     X 2.9447E-11, 2.9918E-11, 3.0668E-11, 3.1315E-11, 3.0329E-11,      
     X 2.8259E-11, 2.6065E-11, 2.3578E-11, 2.0469E-11, 1.6908E-11,      
     X 1.4912E-11, 1.1867E-11, 9.9730E-12, 8.1014E-12, 6.7528E-12,      
     X 6.3133E-12, 5.8599E-12, 6.0145E-12, 6.5105E-12, 7.0537E-12,      
     X 7.4973E-12, 7.8519E-12, 8.5039E-12, 9.1995E-12, 1.0694E-11,      
     X 1.1659E-11, 1.2685E-11, 1.3087E-11, 1.3222E-11, 1.2634E-11,      
     X 1.1077E-11, 9.6259E-12, 8.3202E-12, 7.4857E-12, 6.8069E-12,      
     X 6.7496E-12, 7.3116E-12, 8.0171E-12, 8.6394E-12, 9.2659E-12,      
     X 1.0048E-11, 1.0941E-11, 1.2226E-11, 1.3058E-11, 1.5193E-11,      
     X 1.8923E-11, 2.3334E-11, 2.8787E-11, 3.6693E-11, 4.8295E-11/      
      DATA F0651/                                                       
     X 6.4260E-11, 8.8269E-11, 1.1865E-10, 1.5961E-10, 2.0605E-10,      
     X 2.7349E-10, 3.7193E-10, 4.8216E-10, 6.1966E-10, 7.7150E-10,      
     X 1.0195E-09, 1.2859E-09, 1.6535E-09, 2.0316E-09, 2.3913E-09,      
     X 3.0114E-09, 3.7495E-09, 4.6504E-09, 5.9145E-09, 7.6840E-09,      
     X 1.0304E-08, 1.3010E-08, 1.6441E-08, 2.1475E-08, 2.5892E-08,      
     X 2.9788E-08, 3.3820E-08, 4.0007E-08, 4.4888E-08, 4.5765E-08,      
     X 4.6131E-08, 4.6239E-08, 4.4849E-08, 4.0729E-08, 3.6856E-08,      
     X 3.6164E-08, 3.7606E-08, 4.1457E-08, 4.3750E-08, 5.1150E-08,      
     X 5.6054E-08, 6.1586E-08, 6.4521E-08, 6.6494E-08, 6.9024E-08,      
     X 6.8893E-08, 7.0901E-08, 6.9760E-08, 7.1485E-08, 7.0740E-08/      
      DATA F0701/                                                       
     X 7.3764E-08, 7.6618E-08, 8.4182E-08, 9.3838E-08, 1.0761E-07,      
     X 1.2851E-07, 1.4748E-07, 1.8407E-07, 2.2109E-07, 2.6392E-07,      
     X 2.9887E-07, 3.4493E-07, 4.0336E-07, 4.3551E-07, 4.9231E-07,      
     X 5.0728E-07, 5.3781E-07, 5.3285E-07, 5.4496E-07, 5.5707E-07,      
     X 5.6944E-07, 6.1123E-07, 6.4317E-07, 6.4581E-07, 6.1999E-07,      
     X 6.0191E-07, 5.7762E-07, 5.7241E-07, 5.7013E-07, 6.0160E-07,      
     X 6.6905E-07, 7.4095E-07, 8.2121E-07, 8.0947E-07, 7.6145E-07,      
     X 7.2193E-07, 6.3722E-07, 5.4316E-07, 4.2186E-07, 3.2528E-07,      
     X 2.5207E-07, 1.8213E-07, 1.2658E-07, 8.6746E-08, 6.0216E-08,      
     X 4.1122E-08, 2.8899E-08, 2.1740E-08, 1.7990E-08, 1.5593E-08/      
      DATA F0751/                                                       
     X 1.3970E-08, 1.2238E-08, 1.0539E-08, 9.2386E-09, 7.8481E-09,      
     X 6.8704E-09, 5.7615E-09, 5.0434E-09, 4.6886E-09, 4.3770E-09,      
     X 3.9768E-09, 3.5202E-09, 3.1854E-09, 2.9009E-09, 2.5763E-09,      
     X 2.2135E-09, 1.9455E-09, 1.6248E-09, 1.3368E-09, 1.0842E-09,      
     X 8.4254E-10, 6.7414E-10, 5.4667E-10, 4.5005E-10, 3.4932E-10,      
     X 2.6745E-10, 2.2053E-10, 1.8162E-10, 1.4935E-10, 1.1618E-10,      
     X 9.1888E-11, 8.0672E-11, 6.8746E-11, 6.2668E-11, 5.5715E-11,      
     X 4.5074E-11, 3.7669E-11, 3.2082E-11, 2.8085E-11, 2.4838E-11,      
     X 1.9791E-11, 1.6964E-11, 1.3887E-11, 1.1179E-11, 9.7499E-12,      
     X 7.8255E-12, 6.3698E-12, 5.3265E-12, 4.6588E-12, 4.4498E-12/      
      DATA F0801/                                                       
     X 3.9984E-12, 3.7513E-12, 3.7176E-12, 3.9148E-12, 4.2702E-12,      
     X 5.0090E-12, 6.5801E-12, 8.7787E-12, 1.2718E-11, 1.8375E-11,      
     X 2.5304E-11, 3.5403E-11, 4.8842E-11, 6.4840E-11, 8.0911E-11,      
     X 1.0136E-10, 1.2311E-10, 1.4203E-10, 1.5869E-10, 1.8093E-10,      
     X 2.1370E-10, 2.5228E-10, 2.8816E-10, 3.4556E-10, 3.9860E-10,      
     X 4.4350E-10, 4.7760E-10, 5.2357E-10, 6.0827E-10, 6.3635E-10,      
     X 6.5886E-10, 6.8753E-10, 7.2349E-10, 7.2789E-10, 6.8232E-10,      
     X 6.6081E-10, 6.4232E-10, 6.3485E-10, 6.4311E-10, 7.2235E-10,      
     X 7.7263E-10, 8.1668E-10, 9.0324E-10, 9.7643E-10, 1.0535E-09,      
     X 1.0195E-09, 1.0194E-09, 1.0156E-09, 9.6792E-10, 9.2725E-10/      
      DATA F0851/                                                       
     X 8.7347E-10, 8.4484E-10, 8.2647E-10, 8.4363E-10, 9.1261E-10,      
     X 1.0051E-09, 1.1511E-09, 1.4037E-09, 1.8066E-09, 2.4483E-09,      
     X 3.2739E-09, 4.3194E-09, 5.6902E-09, 7.7924E-09, 9.7376E-09,      
     X 1.2055E-08, 1.4303E-08, 1.6956E-08, 1.9542E-08, 2.2233E-08,      
     X 2.5186E-08, 2.7777E-08, 2.8943E-08, 2.8873E-08, 2.9417E-08,      
     X 2.7954E-08, 2.7524E-08, 2.7040E-08, 3.1254E-08, 3.6843E-08,      
     X 3.7797E-08, 3.8713E-08, 4.0135E-08, 4.2824E-08, 4.3004E-08,      
     X 4.0279E-08, 4.2781E-08, 4.5220E-08, 4.8948E-08, 5.0172E-08,      
     X 4.8499E-08, 4.7182E-08, 4.2204E-08, 3.7701E-08, 3.0972E-08,      
     X 2.4654E-08, 1.9543E-08, 1.4609E-08, 1.1171E-08, 8.3367E-09/      
      DATA F0901/                                                       
     X 6.3791E-09, 5.0790E-09, 4.0655E-09, 3.3658E-09, 2.7882E-09,      
     X 2.4749E-09, 2.2287E-09, 2.0217E-09, 1.8191E-09, 1.5897E-09,      
     X 1.4191E-09, 1.2448E-09, 1.0884E-09, 9.3585E-10, 7.9429E-10,      
     X 7.3214E-10, 6.5008E-10, 5.7549E-10, 5.4300E-10, 4.7251E-10,      
     X 4.3451E-10, 3.8446E-10, 3.5589E-10, 3.4432E-10, 2.8209E-10,      
     X 2.4620E-10, 2.1278E-10, 1.8406E-10, 1.6314E-10, 1.3261E-10,      
     X 1.1696E-10, 9.6865E-11, 7.6814E-11, 6.6411E-11, 5.0903E-11,      
     X 4.0827E-11, 3.0476E-11, 2.3230E-11, 1.7707E-11, 1.3548E-11,      
     X 1.0719E-11, 9.3026E-12, 8.7967E-12, 8.3136E-12, 7.3918E-12,      
     X 6.5293E-12, 5.9243E-12, 5.3595E-12, 3.5266E-12, 2.2571E-12/      
      DATA F0951/                                                       
     X 1.6150E-12, 1.1413E-12, 8.4998E-13, 7.0803E-13, 5.1747E-13,      
     X 4.0694E-13, 3.6528E-13, 3.3670E-13, 3.1341E-13, 2.9390E-13,      
     X 2.8680E-13, 3.1283E-13, 3.7294E-13, 5.0194E-13, 6.7919E-13,      
     X 1.0455E-12, 1.5230E-12, 2.3932E-12, 3.4231E-12, 5.0515E-12,      
     X 7.3193E-12, 9.9406E-12, 1.2193E-11, 1.4742E-11, 1.9269E-11,      
     X 2.1816E-11, 2.2750E-11, 2.2902E-11, 2.3888E-11, 2.4902E-11,      
     X 2.2160E-11, 2.0381E-11, 1.9903E-11, 2.0086E-11, 1.9304E-11,      
     X 2.0023E-11, 2.2244E-11, 2.5450E-11, 3.1228E-11, 3.4560E-11,      
     X 3.6923E-11, 3.7486E-11, 3.8124E-11, 3.8317E-11, 3.4737E-11,      
     X 3.3037E-11, 3.1724E-11, 2.9840E-11, 2.8301E-11, 2.5857E-11/      
      DATA F1001/                                                       
     X 2.3708E-11, 1.9452E-11, 1.6232E-11, 1.5174E-11, 1.4206E-11,      
     X 1.4408E-11, 1.5483E-11, 1.8642E-11, 2.3664E-11, 3.0181E-11,      
     X 4.0160E-11, 5.2287E-11, 7.2754E-11, 1.0511E-10, 1.4531E-10,      
     X 2.0998E-10, 2.6883E-10, 3.3082E-10, 4.2638E-10, 5.3132E-10,      
     X 6.3617E-10, 7.1413E-10, 8.5953E-10, 9.9715E-10, 1.0796E-09,      
     X 1.0978E-09, 1.1052E-09, 1.1095E-09, 1.0641E-09, 9.7881E-10,      
     X 9.6590E-10, 1.0332E-09, 1.1974E-09, 1.3612E-09, 1.5829E-09,      
     X 1.8655E-09, 2.1465E-09, 2.4779E-09, 2.7370E-09, 2.9915E-09,      
     X 3.3037E-09, 3.6347E-09, 3.9587E-09, 4.4701E-09, 5.0122E-09,      
     X 5.8044E-09, 6.1916E-09, 6.9613E-09, 7.7863E-09, 8.2820E-09/      
      DATA F1051/                                                       
     X 9.4359E-09, 9.7387E-09, 1.0656E-08, 1.0746E-08, 1.1210E-08,      
     X 1.1905E-08, 1.2194E-08, 1.3145E-08, 1.3738E-08, 1.3634E-08,      
     X 1.3011E-08, 1.2511E-08, 1.1805E-08, 1.2159E-08, 1.2390E-08,      
     X 1.3625E-08, 1.5678E-08, 1.7886E-08, 1.9933E-08, 1.9865E-08,      
     X 1.9000E-08, 1.7812E-08, 1.5521E-08, 1.2593E-08, 9.5635E-09,      
     X 7.2987E-09, 5.2489E-09, 3.5673E-09, 2.4206E-09, 1.6977E-09,      
     X 1.2456E-09, 9.3744E-10, 7.8379E-10, 6.9960E-10, 6.6451E-10,      
     X 6.8521E-10, 7.4234E-10, 8.6658E-10, 9.4972E-10, 1.0791E-09,      
     X 1.2359E-09, 1.3363E-09, 1.5025E-09, 1.5368E-09, 1.6152E-09,      
     X 1.6184E-09, 1.6557E-09, 1.7035E-09, 1.6916E-09, 1.7237E-09/      
      DATA F1101/                                                       
     X 1.7175E-09, 1.6475E-09, 1.5335E-09, 1.4272E-09, 1.3282E-09,      
     X 1.3459E-09, 1.4028E-09, 1.5192E-09, 1.7068E-09, 1.9085E-09,      
     X 2.1318E-09, 2.1020E-09, 1.9942E-09, 1.8654E-09, 1.6391E-09,      
     X 1.3552E-09, 1.0186E-09, 7.8540E-10, 5.7022E-10, 3.9247E-10,      
     X 2.5441E-10, 1.6699E-10, 1.1132E-10, 6.8989E-11, 4.5255E-11,      
     X 3.1106E-11, 2.3161E-11, 1.7618E-11, 1.4380E-11, 1.1601E-11,      
     X 9.7148E-12, 8.4519E-12, 6.5392E-12, 5.4113E-12, 4.7624E-12,      
     X 4.0617E-12, 3.6173E-12, 2.8608E-12, 2.2724E-12, 1.7436E-12,      
     X 1.3424E-12, 1.0358E-12, 7.3064E-13, 5.4500E-13, 4.0551E-13,      
     X 2.8642E-13, 2.1831E-13, 1.6860E-13, 1.2086E-13, 1.0150E-13/      
      DATA F1151/                                                       
     X 9.3550E-14, 8.4105E-14, 7.3051E-14, 6.9796E-14, 7.9949E-14,      
     X 1.0742E-13, 1.5639E-13, 2.1308E-13, 3.1226E-13, 4.6853E-13,      
     X 6.6917E-13, 1.0088E-12, 1.4824E-12, 2.2763E-12, 3.3917E-12,      
     X 4.4585E-12, 6.3187E-12, 8.4189E-12, 1.1302E-11, 1.3431E-11,      
     X 1.5679E-11, 1.9044E-11, 2.2463E-11, 2.3605E-11, 2.3619E-11,      
     X 2.3505E-11, 2.3805E-11, 2.2549E-11, 1.9304E-11, 1.8382E-11,      
     X 1.7795E-11, 1.8439E-11, 1.9146E-11, 2.1966E-11, 2.6109E-11,      
     X 3.1883E-11, 3.7872E-11, 4.3966E-11, 4.8789E-11, 5.3264E-11,      
     X 5.9705E-11, 6.3744E-11, 7.0163E-11, 7.9114E-11, 8.8287E-11,      
     X 9.9726E-11, 1.1498E-10, 1.3700E-10, 1.6145E-10, 1.9913E-10/      
      DATA F1201/                                                       
     X 2.2778E-10, 2.6216E-10, 2.9770E-10, 3.3405E-10, 3.7821E-10,      
     X 3.9552E-10, 4.1322E-10, 4.0293E-10, 4.0259E-10, 3.8853E-10,      
     X 3.7842E-10, 3.8551E-10, 4.4618E-10, 5.0527E-10, 5.0695E-10,      
     X 5.1216E-10, 5.1930E-10, 5.5794E-10, 5.3320E-10, 5.2008E-10,      
     X 5.6888E-10, 6.1883E-10, 6.9006E-10, 6.9505E-10, 6.6768E-10,      
     X 6.3290E-10, 5.6753E-10, 5.0327E-10, 3.9830E-10, 3.1147E-10,      
     X 2.4416E-10, 1.8860E-10, 1.3908E-10, 9.9156E-11, 7.3779E-11,      
     X 5.6048E-11, 4.2457E-11, 3.4505E-11, 2.9881E-11, 2.7865E-11,      
     X 2.8471E-11, 3.1065E-11, 3.4204E-11, 3.9140E-11, 4.3606E-11,      
     X 4.9075E-11, 5.3069E-11, 5.5236E-11, 5.5309E-11, 5.3832E-11/      
      DATA F1251/                                                       
     X 5.3183E-11, 5.1783E-11, 5.2042E-11, 5.4422E-11, 5.5656E-11,      
     X 5.4409E-11, 5.2659E-11, 5.1696E-11, 5.1726E-11, 4.9003E-11,      
     X 4.9050E-11, 5.1700E-11, 5.6818E-11, 6.3129E-11, 6.6542E-11,      
     X 6.4367E-11, 5.9908E-11, 5.4470E-11, 4.7903E-11, 3.9669E-11,      
     X 2.9651E-11, 2.2286E-11, 1.6742E-11, 1.1827E-11, 7.7739E-12,      
     X 4.8805E-12, 3.1747E-12, 2.0057E-12, 1.2550E-12, 8.7434E-13,      
     X 6.2755E-13, 4.9752E-13, 4.0047E-13, 3.5602E-13, 3.0930E-13,      
     X 2.4903E-13, 1.9316E-13, 1.4995E-13, 1.2059E-13, 8.7242E-14,      
     X 6.4511E-14, 5.3300E-14, 4.3741E-14, 3.4916E-14, 2.6560E-14,      
     X 1.6923E-14, 1.1816E-14, 6.7071E-15, 3.6474E-15, 2.0686E-15/      
      DATA F1301/                                                       
     X 1.1925E-15, 6.8948E-16, 3.9661E-16, 2.2576E-16, 1.2669E-16,      
     X 6.9908E-17, 3.7896E-17, 2.0280E-17, 1.1016E-17, 6.7816E-18,      
     X 6.0958E-18, 8.9913E-18, 1.7201E-17, 3.4964E-17, 7.0722E-17,      
     X 1.4020E-16, 2.7167E-16, 5.1478E-16, 9.5500E-16, 1.7376E-15,      
     X 3.1074E-15, 5.4789E-15, 9.5640E-15, 1.6635E-14, 2.9145E-14,      
     X 5.2179E-14, 8.8554E-14, 1.4764E-13, 2.3331E-13, 3.5996E-13,      
     X 5.2132E-13, 6.3519E-13, 7.3174E-13, 8.3752E-13, 9.8916E-13,      
     X 1.1515E-12, 1.4034E-12, 1.6594E-12, 2.1021E-12, 2.7416E-12,      
     X 3.4135E-12, 4.5517E-12, 5.5832E-12, 7.2303E-12, 9.9484E-12,      
     X 1.2724E-11, 1.6478E-11, 2.0588E-11, 2.5543E-11, 3.3625E-11/      
      DATA F1351/                                                       
     X 4.1788E-11, 5.0081E-11, 6.0144E-11, 6.9599E-11, 8.4408E-11,      
     X 9.7143E-11, 1.0805E-10, 1.1713E-10, 1.2711E-10, 1.3727E-10,      
     X 1.4539E-10, 1.6049E-10, 1.7680E-10, 2.0557E-10, 2.4967E-10,      
     X 3.0096E-10, 3.5816E-10, 4.0851E-10, 4.6111E-10, 5.2197E-10,      
     X 5.5043E-10, 6.0324E-10, 6.4983E-10, 6.7498E-10, 7.0545E-10,      
     X 7.0680E-10, 7.5218E-10, 7.5723E-10, 7.7840E-10, 8.0081E-10,      
     X 8.0223E-10, 7.7271E-10, 7.1676E-10, 6.7819E-10, 6.4753E-10,      
     X 6.5844E-10, 7.0163E-10, 7.7503E-10, 8.8152E-10, 9.9022E-10,      
     X 1.0229E-09, 9.9296E-10, 8.9911E-10, 7.7813E-10, 6.3785E-10,      
     X 4.7491E-10, 3.5280E-10, 2.4349E-10, 1.6502E-10, 1.1622E-10/      
      DATA F1401/                                                       
     X 8.6715E-11, 6.7360E-11, 5.3910E-11, 4.5554E-11, 4.1300E-11,      
     X 3.9728E-11, 3.9000E-11, 3.9803E-11, 4.1514E-11, 4.3374E-11,      
     X 4.6831E-11, 4.8921E-11, 5.1995E-11, 5.7242E-11, 6.2759E-11,      
     X 7.0801E-11, 7.4555E-11, 7.9754E-11, 8.7616E-11, 9.1171E-11,      
     X 1.0349E-10, 1.1047E-10, 1.2024E-10, 1.2990E-10, 1.3725E-10,      
     X 1.5005E-10, 1.5268E-10, 1.5535E-10, 1.5623E-10, 1.5009E-10,      
     X 1.4034E-10, 1.3002E-10, 1.2225E-10, 1.1989E-10, 1.2411E-10,      
     X 1.3612E-10, 1.5225E-10, 1.7202E-10, 1.9471E-10, 1.9931E-10,      
     X 1.9079E-10, 1.7478E-10, 1.5259E-10, 1.2625E-10, 9.3332E-11,      
     X 6.8796E-11, 4.6466E-11, 2.9723E-11, 1.8508E-11, 1.2106E-11/      
      DATA F1451/                                                       
     X 8.0142E-12, 5.4066E-12, 3.9329E-12, 3.1665E-12, 2.7420E-12,      
     X 2.3996E-12, 2.3804E-12, 2.3242E-12, 2.4476E-12, 2.5331E-12,      
     X 2.3595E-12, 2.2575E-12, 2.1298E-12, 2.0088E-12, 1.8263E-12,      
     X 1.6114E-12, 1.4422E-12, 1.2946E-12, 1.0837E-12, 9.1282E-13,      
     X 7.2359E-13, 5.3307E-13, 3.8837E-13, 2.6678E-13, 1.6769E-13,      
     X 1.0826E-13, 7.2364E-14, 4.5201E-14, 3.0808E-14, 2.2377E-14,      
     X 1.7040E-14, 9.2181E-15, 5.2934E-15, 3.5774E-15, 3.1431E-15,      
     X 3.7647E-15, 5.6428E-15, 9.5139E-15, 1.7322E-14, 2.8829E-14,      
     X 4.7708E-14, 6.9789E-14, 9.7267E-14, 1.4662E-13, 1.9429E-13,      
     X 2.5998E-13, 3.6636E-13, 4.7960E-13, 6.5129E-13, 7.7638E-13/      
      DATA F1501/                                                       
     X 9.3774E-13, 1.1467E-12, 1.3547E-12, 1.5686E-12, 1.6893E-12,      
     X 1.9069E-12, 2.1352E-12, 2.3071E-12, 2.4759E-12, 2.8247E-12,      
     X 3.4365E-12, 4.3181E-12, 5.6107E-12, 7.0017E-12, 8.6408E-12,      
     X 1.0974E-11, 1.3742E-11, 1.6337E-11, 2.0157E-11, 2.3441E-11,      
     X 2.6733E-11, 3.0247E-11, 3.3737E-11, 3.8618E-11, 4.1343E-11,      
     X 4.3870E-11, 4.4685E-11, 4.4881E-11, 4.5526E-11, 4.3628E-11,      
     X 4.4268E-11, 4.6865E-11, 5.3426E-11, 5.4020E-11, 5.3218E-11,      
     X 5.4587E-11, 5.6360E-11, 5.7740E-11, 5.6426E-11, 6.0399E-11,      
     X 6.6981E-11, 7.4319E-11, 7.7977E-11, 7.5539E-11, 7.1610E-11,      
     X 6.4606E-11, 5.5498E-11, 4.3944E-11, 3.3769E-11, 2.5771E-11/      
      DATA F1551/                                                       
     X 1.9162E-11, 1.3698E-11, 1.0173E-11, 7.8925E-12, 6.1938E-12,      
     X 4.7962E-12, 4.0811E-12, 3.3912E-12, 2.8625E-12, 2.4504E-12,      
     X 2.2188E-12, 2.2139E-12, 2.2499E-12, 2.2766E-12, 2.3985E-12,      
     X 2.5459E-12, 2.9295E-12, 3.4196E-12, 3.6155E-12, 4.0733E-12,      
     X 4.4610E-12, 4.9372E-12, 5.4372E-12, 5.7304E-12, 6.1640E-12,      
     X 6.1278E-12, 6.2940E-12, 6.4947E-12, 6.8174E-12, 7.5190E-12,      
     X 8.2608E-12, 8.4971E-12, 8.3484E-12, 8.1888E-12, 7.8552E-12,      
     X 7.8468E-12, 7.5943E-12, 7.9096E-12, 8.6869E-12, 9.1303E-12,      
     X 9.2547E-12, 8.9322E-12, 8.2177E-12, 7.3408E-12, 5.7956E-12,      
     X 4.4470E-12, 3.5881E-12, 2.6748E-12, 1.7074E-12, 9.6700E-13/      
      DATA F1601/                                                       
     X 5.2645E-13, 2.9943E-13, 1.7316E-13, 1.0039E-13, 5.7859E-14,      
     X 3.2968E-14, 1.8499E-14, 1.0192E-14, 5.5015E-15, 2.9040E-15,      
     X 1.4968E-15, 7.5244E-16, 3.6852E-16, 1.7568E-16, 8.1464E-17,      
     X 3.6717E-17, 1.6076E-17, 6.8341E-18, 2.8195E-18, 1.1286E-18,      
     X  .0000E+00,  .0000E+00,  .0000E+00,  .0000E+00,  .0000E+00,      
     X  .0000E+00,  .0000E+00,  .0000E+00,  .0000E+00, 1.4070E-18,      
     X 3.0405E-18, 6.4059E-18, 1.3169E-17, 2.6443E-17, 5.1917E-17,      
     X 9.9785E-17, 1.8802E-16, 3.4788E-16, 6.3328E-16, 1.1370E-15,      
     X 2.0198E-15, 3.5665E-15, 6.3053E-15, 1.1309E-14, 2.1206E-14,      
     X 3.2858E-14, 5.5165E-14, 8.6231E-14, 1.2776E-13, 1.7780E-13/      
      DATA F1651/                                                       
     X 2.5266E-13, 3.6254E-13, 5.1398E-13, 6.8289E-13, 8.7481E-13,      
     X 1.1914E-12, 1.6086E-12, 2.0469E-12, 2.5761E-12, 3.4964E-12,      
     X 4.4980E-12, 5.5356E-12, 6.7963E-12, 8.5720E-12, 1.0700E-11,      
     X 1.2983E-11, 1.6270E-11, 1.9609E-11, 2.2668E-11, 2.5963E-11,      
     X 3.0918E-11, 3.4930E-11, 3.9330E-11, 4.4208E-11, 4.6431E-11,      
     X 5.1141E-11, 5.4108E-11, 5.8077E-11, 6.5050E-11, 7.2126E-11,      
     X 8.1064E-11, 8.1973E-11, 8.1694E-11, 8.3081E-11, 8.0240E-11,      
     X 7.9225E-11, 7.6256E-11, 7.8468E-11, 8.0041E-11, 8.1585E-11,      
     X 8.3485E-11, 8.3774E-11, 8.5870E-11, 8.6104E-11, 8.8516E-11,      
     X 9.0814E-11, 9.2522E-11, 8.8913E-11, 7.8381E-11, 6.8568E-11/      
      DATA F1701/                                                       
     X 5.6797E-11, 4.4163E-11, 3.2369E-11, 2.3259E-11, 1.6835E-11,      
     X 1.1733E-11, 8.5273E-12, 6.3805E-12, 4.8983E-12, 3.8831E-12,      
     X 3.2610E-12, 2.8577E-12, 2.5210E-12, 2.2913E-12, 2.0341E-12,      
     X 1.8167E-12, 1.6395E-12, 1.4890E-12, 1.3516E-12, 1.2542E-12,      
     X 1.2910E-12, 1.3471E-12, 1.4689E-12, 1.5889E-12, 1.6989E-12,      
     X 1.8843E-12, 2.0902E-12, 2.3874E-12, 2.7294E-12, 3.3353E-12,      
     X 4.0186E-12, 4.5868E-12, 5.2212E-12, 5.8856E-12, 6.5991E-12,      
     X 7.2505E-12, 7.6637E-12, 8.5113E-12, 9.4832E-12, 9.9678E-12,      
     X 1.0723E-11, 1.0749E-11, 1.1380E-11, 1.1774E-11, 1.1743E-11,      
     X 1.2493E-11, 1.2559E-11, 1.2332E-11, 1.1782E-11, 1.1086E-11/      
      DATA F1751/                                                       
     X 1.0945E-11, 1.1178E-11, 1.2083E-11, 1.3037E-11, 1.4730E-11,      
     X 1.6450E-11, 1.7403E-11, 1.7004E-11, 1.5117E-11, 1.3339E-11,      
     X 1.0844E-11, 8.0915E-12, 5.6615E-12, 3.7196E-12, 2.5194E-12,      
     X 1.6569E-12, 1.1201E-12, 8.2335E-13, 6.0270E-13, 4.8205E-13,      
     X 4.1313E-13, 3.6243E-13, 3.2575E-13, 2.7730E-13, 2.5292E-13,      
     X 2.3062E-13, 2.1126E-13, 2.1556E-13, 2.1213E-13, 2.2103E-13,      
     X 2.1927E-13, 2.0794E-13, 1.9533E-13, 1.6592E-13, 1.4521E-13,      
     X 1.1393E-13, 8.3772E-14, 6.2077E-14, 4.3337E-14, 2.7165E-14,      
     X 1.6821E-14, 9.5407E-15, 5.3093E-15, 3.0320E-15, 1.7429E-15,      
     X 9.9828E-16, 5.6622E-16, 3.1672E-16, 1.7419E-16, 9.3985E-17/      
      DATA F1801/                                                       
     X 4.9656E-17, 2.5652E-17, 1.2942E-17, 6.3695E-18, 3.0554E-18,      
     C 1.4273E-18, -0.       , -0.       , -0.       , -0.       ,      
     C -0.       , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        /      
      DATA F1851/                                                       
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        /      
      DATA F1901/                                                       
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        /      
      DATA F1951/                                                       
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        ,      
     C 0.        , 0.        , 0.        , 0.        , 0.        /      
      DATA F2001/                                                       
     C 0.        /                                                      
C                                                                       
      END                                                               
      BLOCK DATA  BBMDCOM                                               
CC@   SAVE COLSUM,DOPSUM,ODSUM,SDSUM,DOP0,MOLTRN                        
      COMMON/BMDCOM/IBNDWD,IP,IPRM,IBLK,IBLOCK,IPARAM(232),NTEMP,       
     1  TBAND(5),SDZ(5,250),ODZ(5,250),IBIN(250),IMOL(250),IALF(250),   
     2  SD(5,24),OD(5,12),ALF0(12),WT(102),WTS(102,12),ITB,             
     3  JJ(102),FF(102),JJS(102,12),FFS(102,12),                        
     4          DOPFAC(12),DOP0(12),DOPSUM(12),COLSUM(12),ODSUM(12),    
     5  SDSUM(24)                                                       
      DATA DOPFAC/1.3945E-6, 0.8922E-6, 0.8543E-6, 0.8921E-6, 1.1183E-6,
     1 1.4777E-6, 1.0463E-6, 1.0805E-6, 0.7395E-6, 0.8726E-6, 1.4342E-6,
     2 0.7456E-6/                                                       
      END                                                               
      BLOCK DATA BO2C                                                   
C>    BLOCK DATA                                                        
C                                                                       
C     BLOCK DATA   (IDENTICAL TO BLOCK DATA IN FASCOD2)                 
C                                                                       
      COMMON/O2C/ O2DRAY(74),O2C001(74),O2S0(74),O2A(74),O2B(74),       
     X V1O2,V2O2,DVO2,NPTO2                                             
      DATA V1O2,V2O2,DVO2,NPTO2 /1395.0,1760.0,5.0,74/                  
      DATA O2S0/                                                        
     A0.       ,                                                        
     +  .110E-8, .220E-8, .440E-8, .881E-8, .176E-7, .353E-7, .705E-7,  
     B .141E-06, .158E-06, .174E-06, .190E-06, .207E-06, .253E-06,      
     B .307E-06, .357E-06, .401E-06, .445E-06, .508E-06, .570E-06,      
     B .599E-06, .627E-06, .650E-06, .672E-06, .763E-06, .873E-06,      
     B .101E-05, .109E-05, .121E-05, .133E-05, .139E-05, .145E-05,      
     B .148E-05, .140E-05, .134E-05, .126E-05, .118E-05, .114E-05,      
     B .109E-05, .105E-05, .105E-05, .105E-05, .104E-05, .103E-05,      
     B .992E-06, .945E-06, .876E-06, .806E-06, .766E-06, .726E-06,      
     B .640E-06, .555E-06, .469E-06, .416E-06, .364E-06, .311E-06,      
     B .266E-06, .222E-06, .177E-06, .170E-06, .162E-06, .155E-06,      
     B .143E-06, .130E-06, .118E-06, .905E-07, .629E-07,                
     + .316E-7, .157E-7, .786E-8, .393E-8, .196E-8, .982E-9,            
     + 0./                                                              
      DATA O2A /                                                        
     A 0.       ,                                                       
     +   .147E-3, .147E-3, .147E-3,  .147E-3, .147E-3, .147E-3, .147E-3,
     B  .147E-03,  .122E-02,  .204E-02,  .217E-02,  .226E-02,  .126E-02,
     B  .362E-03, -.198E-02, -.545E-02, -.786E-02, -.624E-02, -.475E-02,
     B -.506E-02, -.533E-02, -.586E-02, -.635E-02, -.644E-02, -.679E-02,
     B -.741E-02, -.769E-02, -.780E-02, -.788E-02, -.844E-02, -.894E-02,
     B -.899E-02, -.922E-02, -.892E-02, -.857E-02, -.839E-02, -.854E-02,
     B -.871E-02, -.889E-02, -.856E-02, -.823E-02, -.796E-02, -.768E-02,
     B -.715E-02, -.638E-02, -.570E-02, -.491E-02, -.468E-02, -.443E-02,
     B -.333E-02, -.184E-02,  .313E-03, -.164E-04, -.417E-03, -.916E-03,
     B -.206E-02, -.343E-02, -.515E-02, -.365E-02, -.172E-02,  .926E-03,
     B  .168E-02,  .262E-02,  .380E-02,  .551E-02,  .889E-02,           
     + .889E-2,  .889E-2, .889E-2, .889E-2, .889E-2, .889E-2,           
     +  0./                                                             
      DATA O2B  /                                                       
     A 0.       ,                                                       
     + .306E-4,-.306E-4,-.306E-4,-.306E-4,-.306E-4,-.306E-4,-.306E-4,   
     B -.306E-04, -.218E-04, -.159E-04, -.346E-05,  .642E-05,  .360E-05,
     B -.140E-05,  .157E-04,  .471E-04,  .656E-04,  .303E-04, -.192E-05,
     B  .705E-05,  .149E-04,  .200E-04,  .245E-04,  .158E-04,  .841E-05,
     B  .201E-05,  .555E-05,  .108E-04,  .150E-04,  .193E-04,  .230E-04,
     B  .243E-04,  .226E-04,  .184E-04,  .157E-04,  .169E-04,  .197E-04,
     B  .226E-04,  .258E-04,  .235E-04,  .212E-04,  .185E-04,  .156E-04,
     B  .125E-04,  .872E-05,  .760E-05,  .577E-05,  .334E-07, -.652E-05,
     B -.977E-05, -.157E-04, -.273E-04, -.180E-04, -.641E-05,  .817E-05,
     B  .326E-04,  .626E-04,  .101E-03,  .755E-04,  .430E-04, -.113E-05,
     B -.578E-05, -.120E-04, -.208E-04, -.235E-04, -.364E-04,           
     + .364E-4, -.364E-4,-.364E-4,-.364E-4,-.364E-4,-.364E-4,           
     + 0./                                                              
C                                                                       
      END                                                               
      BLOCK DATA BO3HH0                                                 
C>    BLOCK DATA                                                        
C                                                                       
C                                                                       
C     O3HH0 CONTAINS O3 HARTLEY HUGGINS CROSS SECTIONS FOR 273K         
C               UNITS OF (CM**2/MOL)*1.E-20                             
C                                                                       
C     NOW INCLUDES MOLINA & MOLINA AT 273K WITH THE TEMPERATURE         
C     DEPENDENCE DETERMINED FROM THE 195K HARVARD MEASUREMENTS,         
C     EMPLOYING THE BASS ALGORITHM (CO(1+C1*T+C2*T2); THIS IS           
C     ONLY FOR THE WAVELENGTH RANGE FROM .34 TO .35 MICRONS;            
C     OTHERWISE, THE BASS DATA ALONE HAVE BEEN EMPLOYED BETWEEN         
C     .34 AND .245 MICRONS.                                             
C                                                                       
C     NEW T-DEPENDENT X-SECTIONS BETWEEN .345 AND .36 MICRONS           
C     HAVE NOW BEEN ADDED, BASED ON WORK BY CACCIANI, DISARRA           
C     AND FIOCCO, UNIVERSITY OF ROME, 1987.  QUADRATIC TEMP             
C     HAS BEEN DERIVED, AS ABOVE.                                       
C                                                                       
C     MOLINA & MOLINA HAVE AGAIN BEEN USED BETWEEN .245 AND .185        
C     MICRONS (NO TEMPERATURE DEPENDENCE)                               
C                                                                       
C     AGREEMENT AMONGST THE FOUR DATA SETS IS REASONABLE (<10%)         
C     AND OFTEN EXCELLENT (0-3%)                                        
C                                                                       
C                                                                       
      COMMON /O3HH0/  V1C,V2C,DVC,NC,                                   
     X           O30001(80),O30081(80),O30161(80),O30241(80),O30321(80),
     X           O30401( 7),                                            
     X           C00001(80),C00081(80),C00161(80),C00241(80),C00321(80),
     X           C00401(80),C00481(80),C00561(80),C00641(80),C00721(80),
     X           C00801(80),C00881(80),C00961(80),C01041(80),C01121(80),
     X           C01201(80),C01281(80),C01361(80),C01441(80),C01521(80),
     X           C01601(80),C01681(80),C01761(80),C01841(80),C01921(80),
     X           C02001(80),C02081(80),C02161(80),C02241(40)            
C                                                                       
C     DATA V1C  /27370./,V2C  /29400./,DVC  /5./,NC  /407/ INN & TANAKA 
C         DATA FROM INN & TANAKA, HANDBOOK OF GEOPHYSICS, 1957, P 16-24 
C                LINEARLY INTERPOLATED BY SAC, JUNE 1985                
C                CONVERSION: (I&T)/(LOSCHMIDT 1 1987*1.2)               
C                                                                       
C     DATA V1C /29405./, V2C /40800./ ,DVC /5./, NC /2280/  BASS        
C         DATA FROM BASS, JUNE 1985                                     
C                                                                       
      DATA V1C /27370./, V2C /40800./ ,DVC /5./, NC /2687/              
C                                                                       
      DATA O30001/                                                      
C    X 2.08858E-03, 1.98947E-03, 1.89037E-03, 1.79126E-03, 1.69215E-03, 
C     THIS LINE OF DATA HAS BEEN REPLACED BY MONTONICALLY DECREASING    
C     VALUES                                                            
     X 1.00000E-03, 1.15000E-03, 1.25000E-03, 1.40000E-03, 1.50000E-03, 
     X 1.59304E-03, 1.62396E-03, 1.76216E-03, 1.90036E-03, 2.03856E-03, 
     X 2.16538E-03, 2.02324E-03, 1.88110E-03, 1.73896E-03, 1.59682E-03, 
     X 1.45468E-03, 1.31253E-03, 1.17039E-03, 1.02825E-03, 8.86108E-04, 
     X 7.43963E-04, 6.01821E-04, 4.59679E-04, 5.14820E-04, 5.73044E-04, 
     X 6.31269E-04, 6.89493E-04, 7.47718E-04, 8.05942E-04, 8.64167E-04, 
     X 9.22392E-04, 9.80617E-04, 1.03884E-03, 1.09707E-03, 1.15528E-03, 
     X 1.21351E-03, 1.27173E-03, 1.32996E-03, 1.38818E-03, 1.44641E-03, 
     X 1.50463E-03, 1.56286E-03, 1.62108E-03, 1.67931E-03, 1.73753E-03, 
     X 1.79575E-03, 1.85398E-03, 1.91220E-03, 1.97043E-03, 2.02865E-03, 
     X 2.08688E-03, 2.14510E-03, 2.20333E-03, 2.26155E-03, 2.31978E-03, 
     X 2.37800E-03, 2.43623E-03, 2.49444E-03, 2.55267E-03, 2.61089E-03, 
     X 2.66912E-03, 2.72734E-03, 2.78557E-03, 2.84379E-03, 2.90202E-03, 
     X 2.96024E-03, 3.01847E-03, 3.07669E-03, 3.13491E-03, 3.19313E-03, 
     X 3.25136E-03, 3.30958E-03, 3.36781E-03, 3.31660E-03, 3.21583E-03, 
     X 3.11505E-03, 3.22165E-03, 3.46058E-03, 3.69953E-03, 3.93846E-03/ 
      DATA O30081/                                                      
     X 4.17739E-03, 4.41633E-03, 4.42256E-03, 4.13791E-03, 4.17894E-03, 
     X 4.25583E-03, 4.33273E-03, 4.40963E-03, 4.49259E-03, 4.44532E-03, 
     X 4.17540E-03, 3.84814E-03, 3.41823E-03, 3.11003E-03, 2.86548E-03, 
     X 2.73912E-03, 2.70800E-03, 2.70882E-03, 2.70866E-03, 2.70816E-03, 
     X 2.71228E-03, 2.78044E-03, 2.86135E-03, 3.00163E-03, 3.15222E-03, 
     X 3.33394E-03, 3.48231E-03, 3.64966E-03, 3.83242E-03, 3.97733E-03, 
     X 4.10299E-03, 4.26332E-03, 4.41165E-03, 4.54040E-03, 4.65544E-03, 
     X 4.91897E-03, 5.23429E-03, 5.45390E-03, 5.74420E-03, 5.96314E-03, 
     X 6.07198E-03, 6.07338E-03, 5.99162E-03, 5.95079E-03, 6.04655E-03, 
     X 6.18239E-03, 6.56998E-03, 6.93885E-03, 7.38561E-03, 7.73029E-03, 
     X 7.90493E-03, 7.72072E-03, 7.40226E-03, 6.53860E-03, 5.30328E-03, 
     X 4.23000E-03, 3.45735E-03, 3.21167E-03, 3.16694E-03, 3.30966E-03, 
     X 3.47431E-03, 3.68089E-03, 3.92006E-03, 4.05246E-03, 4.16408E-03, 
     X 4.08710E-03, 3.98224E-03, 4.07316E-03, 4.19498E-03, 4.44990E-03, 
     X 4.77881E-03, 5.08270E-03, 5.37384E-03, 5.70240E-03, 5.91906E-03, 
     X 5.96745E-03, 5.92363E-03, 5.80363E-03, 5.60812E-03, 5.37450E-03/ 
      DATA O30161/                                                      
     X 5.16202E-03, 4.98389E-03, 4.95294E-03, 5.04930E-03, 5.17576E-03, 
     X 5.26042E-03, 5.22957E-03, 5.32404E-03, 5.39630E-03, 5.53353E-03, 
     X 5.68057E-03, 5.78679E-03, 5.83795E-03, 5.93810E-03, 6.09330E-03, 
     X 6.40001E-03, 6.69056E-03, 7.04863E-03, 7.41339E-03, 7.87421E-03, 
     X 8.35570E-03, 8.97672E-03, 9.58486E-03, 1.01972E-02, 1.08463E-02, 
     X 1.14105E-02, 1.18935E-02, 1.22404E-02, 1.25053E-02, 1.28759E-02, 
     X 1.32169E-02, 1.37796E-02, 1.46488E-02, 1.57324E-02, 1.68897E-02, 
     X 1.78560E-02, 1.87101E-02, 1.92197E-02, 1.94106E-02, 1.90711E-02, 
     X 1.86585E-02, 1.82149E-02, 1.82219E-02, 1.85639E-02, 1.91924E-02, 
     X 2.01342E-02, 2.12312E-02, 2.26362E-02, 2.39610E-02, 2.55156E-02, 
     X 2.71338E-02, 2.87904E-02, 3.04268E-02, 3.17055E-02, 3.28248E-02, 
     X 3.36026E-02, 3.36867E-02, 3.26393E-02, 2.99356E-02, 2.56607E-02, 
     X 2.11545E-02, 1.79508E-02, 1.59757E-02, 1.49569E-02, 1.46214E-02, 
     X 1.46214E-02, 1.48217E-02, 1.51379E-02, 1.53816E-02, 1.58087E-02, 
     X 1.62186E-02, 1.66627E-02, 1.70961E-02, 1.76101E-02, 1.81759E-02, 
     X 1.86154E-02, 1.88889E-02, 1.89577E-02, 1.89316E-02, 1.88826E-02/ 
      DATA O30241/                                                      
     X 1.90915E-02, 1.95550E-02, 2.02707E-02, 2.11620E-02, 2.21844E-02, 
     X 2.30920E-02, 2.37270E-02, 2.37422E-02, 2.33578E-02, 2.20358E-02, 
     X 1.96239E-02, 1.73329E-02, 1.57013E-02, 1.50566E-02, 1.49248E-02, 
     X 1.52044E-02, 1.57658E-02, 1.63436E-02, 1.68986E-02, 1.74180E-02, 
     X 1.78192E-02, 1.80677E-02, 1.79927E-02, 1.77900E-02, 1.75599E-02, 
     X 1.74982E-02, 1.76674E-02, 1.81633E-02, 1.87826E-02, 1.96898E-02, 
     X 2.06898E-02, 2.17167E-02, 2.28231E-02, 2.40702E-02, 2.55084E-02, 
     X 2.69701E-02, 2.86915E-02, 3.05796E-02, 3.22328E-02, 3.42637E-02, 
     X 3.61708E-02, 3.79118E-02, 3.94418E-02, 4.07333E-02, 4.17158E-02, 
     X 4.17081E-02, 4.01127E-02, 3.65411E-02, 3.25123E-02, 2.98737E-02, 
     X 2.83616E-02, 2.79907E-02, 2.80571E-02, 2.84778E-02, 2.91698E-02, 
     X 2.99500E-02, 3.07468E-02, 3.13903E-02, 3.19811E-02, 3.24616E-02, 
     X 3.26503E-02, 3.26829E-02, 3.27688E-02, 3.36446E-02, 3.55133E-02, 
     X 3.88447E-02, 4.28854E-02, 4.55381E-02, 4.77161E-02, 4.93567E-02, 
     X 4.95127E-02, 5.00492E-02, 5.06233E-02, 5.12739E-02, 5.20327E-02, 
     X 5.29001E-02, 5.38677E-02, 5.49272E-02, 5.60703E-02, 5.72886E-02/ 
      DATA O30321/                                                      
     X 5.85739E-02, 5.99178E-02, 6.13170E-02, 6.28474E-02, 6.46499E-02, 
     X 6.68672E-02, 6.96421E-02, 7.31174E-02, 7.74361E-02, 8.27413E-02, 
     X 8.91756E-02, 9.67018E-02, 1.04844E-01, 1.13063E-01, 1.20818E-01, 
     X 1.27567E-01, 1.32771E-01, 1.35888E-01, 1.36377E-01, 1.33780E-01, 
     X 1.28385E-01, 1.20887E-01, 1.11978E-01, 1.02354E-01, 9.27108E-02, 
     X 8.37418E-02, 7.61423E-02, 7.06032E-02, 6.74255E-02, 6.62092E-02, 
     X 6.64813E-02, 6.77689E-02, 6.95995E-02, 7.15004E-02, 7.29991E-02, 
     X 7.36229E-02, 7.29641E-02, 7.11015E-02, 6.83345E-02, 6.49638E-02, 
     X 6.12897E-02, 5.76125E-02, 5.42326E-02, 5.14504E-02, 4.95645E-02, 
     X 4.87078E-02, 4.87234E-02, 4.94254E-02, 5.06280E-02, 5.21454E-02, 
     X 5.37919E-02, 5.53818E-02, 5.67293E-02, 5.76709E-02, 5.82319E-02, 
     X 5.85334E-02, 5.86968E-02, 5.88439E-02, 5.90963E-02, 5.95756E-02, 
     X 6.04035E-02, 6.17016E-02, 6.35548E-02, 6.59664E-02, 6.89282E-02, 
     X 7.24326E-02, 7.64718E-02, 8.10380E-02, 8.61236E-02, 9.17211E-02, 
     X 9.78192E-02, 1.04353E-01, 1.11218E-01, 1.18308E-01, 1.25519E-01, 
     X 1.32745E-01, 1.39881E-01, 1.46821E-01, 1.53461E-01, 1.59687E-01/ 
      DATA O30401/                                                      
C    X 1.64187E-01, 1.69368E-01, 1.74549E-01, 1.79731E-01, 1.84912E-01, 
C      1.90094E-01, 1.95275E-01/                                        
C   THE VALUE AT 29400. HAS BEEN CHANGED TO PROVIDE A SMOOTH TRANSITION 
C    X 1.90094E-01, 1.85275E-01/                                        
     X 1.65365E-01, 1.70353E-01, 1.74507E-01, 1.77686E-01, 1.79748E-01, 
     X 1.80549E-01, 1.79948E-01/                                        
C                                                                       
C                                                                       
C    FOLLOWING DATA ARE FROM BASS JUNE 1985                             
C                                                                       
      DATA C00001 /                                                     
     X 1.81094E-01, 1.57760E-01, 1.37336E-01, 1.19475E-01, 1.17191E-01, 
     X 1.14331E-01, 1.15984E-01, 1.10412E-01, 1.12660E-01, 1.16014E-01, 
     X 1.15060E-01, 1.12041E-01, 1.11611E-01, 1.00378E-01, 9.54850E-02, 
     X 9.87528E-02, 9.46153E-02, 9.53093E-02, 9.72653E-02, 9.66468E-02, 
     X 9.39750E-02, 1.03552E-01, 1.01361E-01, 1.04315E-01, 1.12842E-01, 
     X 1.02800E-01, 1.09576E-01, 1.05577E-01, 1.17334E-01, 1.25763E-01, 
     X 1.27597E-01, 1.34267E-01, 1.44799E-01, 1.57366E-01, 1.67369E-01, 
     X 1.81778E-01, 1.89207E-01, 2.01376E-01, 2.10310E-01, 2.21721E-01, 
     X 2.43162E-01, 2.55542E-01, 2.75312E-01, 2.88576E-01, 3.02505E-01, 
     X 3.15141E-01, 3.28908E-01, 3.49000E-01, 3.56620E-01, 3.59852E-01, 
     X 3.57517E-01, 3.12924E-01, 2.63610E-01, 2.50854E-01, 2.25642E-01, 
     X 2.15954E-01, 2.12099E-01, 2.13039E-01, 2.12286E-01, 2.17214E-01, 
     X 2.28784E-01, 2.28276E-01, 2.34677E-01, 2.30730E-01, 2.16107E-01, 
     X 1.99471E-01, 1.85629E-01, 1.72730E-01, 1.56229E-01, 1.38156E-01, 
     X 1.37641E-01, 1.33169E-01, 1.32759E-01, 1.30102E-01, 1.35396E-01, 
     X 1.37976E-01, 1.41571E-01, 1.46448E-01, 1.44508E-01, 1.47612E-01/ 
      DATA C00081 /                                                     
     X 1.47424E-01, 1.48173E-01, 1.52936E-01, 1.58908E-01, 1.58808E-01, 
     X 1.59860E-01, 1.73936E-01, 1.84109E-01, 1.95143E-01, 2.08267E-01, 
     X 2.19256E-01, 2.31653E-01, 2.46400E-01, 2.60437E-01, 2.70792E-01, 
     X 2.79749E-01, 2.91068E-01, 2.98080E-01, 3.10421E-01, 3.24540E-01, 
     X 3.39003E-01, 3.58322E-01, 3.81520E-01, 4.02798E-01, 4.35972E-01, 
     X 4.56220E-01, 4.79037E-01, 5.02597E-01, 5.24648E-01, 5.33964E-01, 
     X 5.39211E-01, 5.43613E-01, 5.28793E-01, 4.94103E-01, 4.34481E-01, 
     X 3.76792E-01, 3.37161E-01, 3.15750E-01, 3.11042E-01, 3.08745E-01, 
     X 3.09195E-01, 3.05859E-01, 3.01443E-01, 2.88111E-01, 2.81303E-01, 
     X 2.75329E-01, 2.60812E-01, 2.59337E-01, 2.45576E-01, 2.40470E-01, 
     X 2.39705E-01, 2.45389E-01, 2.49801E-01, 2.53235E-01, 2.54387E-01, 
     X 2.64311E-01, 2.74146E-01, 2.89737E-01, 2.96673E-01, 3.07337E-01, 
     X 3.24380E-01, 3.42266E-01, 3.59522E-01, 3.78005E-01, 3.97178E-01, 
     X 4.23351E-01, 4.45925E-01, 4.63029E-01, 4.94843E-01, 5.19418E-01, 
     X 5.49928E-01, 5.69115E-01, 6.02396E-01, 6.43471E-01, 6.76401E-01, 
     X 7.14024E-01, 7.42425E-01, 7.60916E-01, 7.83319E-01, 7.98299E-01/ 
      DATA C00161 /                                                     
     X 7.76672E-01, 7.22769E-01, 6.45967E-01, 5.80850E-01, 5.76514E-01, 
     X 5.79380E-01, 5.90359E-01, 6.21721E-01, 6.37540E-01, 6.52572E-01, 
     X 6.63442E-01, 6.69026E-01, 6.69038E-01, 6.53319E-01, 6.21950E-01, 
     X 5.47619E-01, 4.58994E-01, 4.14888E-01, 3.97736E-01, 3.88775E-01, 
     X 3.87424E-01, 3.93567E-01, 4.03442E-01, 4.05217E-01, 4.12848E-01, 
     X 4.12246E-01, 4.16620E-01, 4.13195E-01, 4.08467E-01, 4.13104E-01, 
     X 4.24498E-01, 4.32002E-01, 4.46361E-01, 4.61131E-01, 4.77228E-01, 
     X 4.96519E-01, 5.16764E-01, 5.38966E-01, 5.54187E-01, 5.73748E-01, 
     X 6.07260E-01, 6.34358E-01, 6.60286E-01, 6.95533E-01, 7.37090E-01, 
     X 7.83894E-01, 8.19557E-01, 8.49244E-01, 8.91832E-01, 9.44885E-01, 
     X 9.86271E-01, 1.02262E+00, 1.07242E+00, 1.12162E+00, 1.18287E+00, 
     X 1.22402E+00, 1.24978E+00, 1.24392E+00, 1.19668E+00, 1.11562E+00, 
     X 1.03983E+00, 9.31884E-01, 8.35307E-01, 7.92620E-01, 7.81980E-01, 
     X 7.89623E-01, 8.05987E-01, 8.27344E-01, 8.57514E-01, 8.66302E-01, 
     X 8.72092E-01, 8.66840E-01, 8.40536E-01, 7.87360E-01, 7.35743E-01, 
     X 6.92039E-01, 6.64032E-01, 6.48360E-01, 6.46288E-01, 6.49505E-01/ 
      DATA C00241 /                                                     
     X 6.69937E-01, 6.81006E-01, 7.00969E-01, 7.19834E-01, 7.26964E-01, 
     X 7.50591E-01, 7.73600E-01, 8.00673E-01, 8.20347E-01, 8.37855E-01, 
     X 8.66780E-01, 9.04297E-01, 9.46300E-01, 9.69134E-01, 9.97928E-01, 
     X 1.06388E+00, 1.11032E+00, 1.15221E+00, 1.21324E+00, 1.24462E+00, 
     X 1.31978E+00, 1.35617E+00, 1.38792E+00, 1.39196E+00, 1.35161E+00, 
     X 1.29381E+00, 1.30295E+00, 1.32965E+00, 1.37024E+00, 1.44064E+00, 
     X 1.50484E+00, 1.57200E+00, 1.62097E+00, 1.67874E+00, 1.72676E+00, 
     X 1.73383E+00, 1.66091E+00, 1.54936E+00, 1.35454E+00, 1.20070E+00, 
     X 1.14609E+00, 1.13642E+00, 1.13784E+00, 1.14609E+00, 1.14531E+00, 
     X 1.16024E+00, 1.16891E+00, 1.16111E+00, 1.14192E+00, 1.09903E+00, 
     X 1.05745E+00, 1.02341E+00, 1.00121E+00, 1.00036E+00, 1.00576E+00, 
     X 1.02405E+00, 1.04379E+00, 1.07623E+00, 1.11347E+00, 1.17305E+00, 
     X 1.20016E+00, 1.22697E+00, 1.27479E+00, 1.32572E+00, 1.38690E+00, 
     X 1.43768E+00, 1.48379E+00, 1.55317E+00, 1.64020E+00, 1.71268E+00, 
     X 1.77183E+00, 1.85824E+00, 1.95131E+00, 2.04609E+00, 2.13151E+00, 
     X 2.17777E+00, 2.22832E+00, 2.26886E+00, 2.19775E+00, 2.05087E+00/ 
      DATA C00321 /                                                     
     X 1.96103E+00, 1.95554E+00, 1.98037E+00, 2.05440E+00, 2.11629E+00, 
     X 2.17893E+00, 2.24384E+00, 2.30464E+00, 2.32525E+00, 2.29945E+00, 
     X 2.21712E+00, 2.03430E+00, 1.82139E+00, 1.70354E+00, 1.64631E+00, 
     X 1.62164E+00, 1.61356E+00, 1.63900E+00, 1.66313E+00, 1.67409E+00, 
     X 1.69143E+00, 1.70181E+00, 1.69165E+00, 1.67699E+00, 1.67879E+00, 
     X 1.67312E+00, 1.68133E+00, 1.70002E+00, 1.72500E+00, 1.76308E+00, 
     X 1.80634E+00, 1.87548E+00, 1.94924E+00, 1.99812E+00, 2.05333E+00, 
     X 2.14035E+00, 2.21847E+00, 2.27412E+00, 2.29752E+00, 2.30750E+00, 
     X 2.36165E+00, 2.44394E+00, 2.52782E+00, 2.61343E+00, 2.71640E+00, 
     X 2.81613E+00, 2.93679E+00, 3.01577E+00, 3.15995E+00, 3.15931E+00, 
     X 2.96658E+00, 2.73295E+00, 2.67480E+00, 2.66652E+00, 2.69393E+00, 
     X 2.75102E+00, 2.86503E+00, 2.99163E+00, 2.99576E+00, 3.02603E+00, 
     X 2.98415E+00, 2.79309E+00, 2.65337E+00, 2.50962E+00, 2.43207E+00, 
     X 2.34812E+00, 2.34872E+00, 2.35186E+00, 2.39477E+00, 2.42629E+00, 
     X 2.48068E+00, 2.55087E+00, 2.55952E+00, 2.56497E+00, 2.64323E+00, 
     X 2.67961E+00, 2.66263E+00, 2.70243E+00, 2.74911E+00, 2.81786E+00/ 
      DATA C00401 /                                                     
     X 2.88684E+00, 2.97790E+00, 3.04305E+00, 3.13053E+00, 3.23857E+00, 
     X 3.35582E+00, 3.40654E+00, 3.38117E+00, 3.36296E+00, 3.39480E+00, 
     X 3.49066E+00, 3.60832E+00, 3.71817E+00, 3.83924E+00, 3.96355E+00, 
     X 4.03656E+00, 4.00518E+00, 3.90389E+00, 3.74790E+00, 3.61385E+00, 
     X 3.57066E+00, 3.59438E+00, 3.66182E+00, 3.71176E+00, 3.75255E+00, 
     X 3.79101E+00, 3.85278E+00, 3.85027E+00, 3.81112E+00, 3.72553E+00, 
     X 3.61017E+00, 3.54384E+00, 3.52406E+00, 3.54097E+00, 3.59375E+00, 
     X 3.66312E+00, 3.72632E+00, 3.76825E+00, 3.86798E+00, 3.92916E+00, 
     X 3.95610E+00, 4.00120E+00, 4.05865E+00, 4.11981E+00, 4.14634E+00, 
     X 4.19109E+00, 4.20317E+00, 4.25754E+00, 4.35131E+00, 4.48573E+00, 
     X 4.58716E+00, 4.67462E+00, 4.78228E+00, 4.91196E+00, 5.01871E+00, 
     X 5.10663E+00, 5.17780E+00, 5.21393E+00, 5.18144E+00, 5.04379E+00, 
     X 4.86504E+00, 4.78569E+00, 4.72717E+00, 4.69132E+00, 4.65797E+00, 
     X 4.60305E+00, 4.59798E+00, 4.65300E+00, 4.69707E+00, 4.74790E+00, 
     X 4.82581E+00, 4.80953E+00, 4.80517E+00, 4.82685E+00, 4.82321E+00, 
     X 4.84806E+00, 4.88591E+00, 4.91759E+00, 4.98074E+00, 5.07071E+00/ 
      DATA C00481 /                                                     
     X 5.18733E+00, 5.30567E+00, 5.38670E+00, 5.43942E+00, 5.51797E+00, 
     X 5.62652E+00, 5.71228E+00, 5.82347E+00, 5.91434E+00, 6.00171E+00, 
     X 6.06977E+00, 6.13040E+00, 6.21990E+00, 6.29980E+00, 6.37206E+00, 
     X 6.48233E+00, 6.53068E+00, 6.53275E+00, 6.56858E+00, 6.54577E+00, 
     X 6.50472E+00, 6.41504E+00, 6.33853E+00, 6.31184E+00, 6.21253E+00, 
     X 6.22034E+00, 6.26918E+00, 6.28982E+00, 6.29461E+00, 6.35418E+00, 
     X 6.40956E+00, 6.38020E+00, 6.39784E+00, 6.45383E+00, 6.50134E+00, 
     X 6.56808E+00, 6.58850E+00, 6.58882E+00, 6.65097E+00, 6.75259E+00, 
     X 6.83256E+00, 6.92593E+00, 6.98083E+00, 7.03632E+00, 7.11147E+00, 
     X 7.15622E+00, 7.21106E+00, 7.27319E+00, 7.33382E+00, 7.38601E+00, 
     X 7.48971E+00, 7.61459E+00, 7.70134E+00, 7.76194E+00, 7.85534E+00, 
     X 7.99519E+00, 8.12227E+00, 8.25461E+00, 8.34670E+00, 8.42733E+00, 
     X 8.51806E+00, 8.57638E+00, 8.56481E+00, 8.55461E+00, 8.55593E+00, 
     X 8.58756E+00, 8.50070E+00, 8.54400E+00, 8.57575E+00, 8.62083E+00, 
     X 8.60684E+00, 8.67824E+00, 8.72069E+00, 8.79127E+00, 8.85479E+00, 
     X 8.86770E+00, 8.90574E+00, 8.91531E+00, 8.94800E+00, 9.00167E+00/ 
      DATA C00561 /                                                     
     X 9.14051E+00, 9.25421E+00, 9.39694E+00, 9.50896E+00, 9.53190E+00, 
     X 9.55977E+00, 9.53482E+00, 9.49662E+00, 9.53359E+00, 9.54007E+00, 
     X 9.49809E+00, 9.49373E+00, 9.53282E+00, 9.63757E+00, 9.67855E+00, 
     X 9.67633E+00, 9.67045E+00, 9.79481E+00, 9.93420E+00, 1.00234E+01, 
     X 1.01372E+01, 1.02577E+01, 1.05056E+01, 1.07873E+01, 1.09967E+01, 
     X 1.10873E+01, 1.11624E+01, 1.13006E+01, 1.14875E+01, 1.16106E+01, 
     X 1.16744E+01, 1.17582E+01, 1.17709E+01, 1.18537E+01, 1.19623E+01, 
     X 1.19763E+01, 1.19879E+01, 1.20384E+01, 1.20763E+01, 1.20826E+01, 
     X 1.20449E+01, 1.19747E+01, 1.20227E+01, 1.21805E+01, 1.23134E+01, 
     X 1.24042E+01, 1.25614E+01, 1.26828E+01, 1.26645E+01, 1.26963E+01, 
     X 1.28226E+01, 1.28720E+01, 1.28981E+01, 1.29462E+01, 1.29363E+01, 
     X 1.29199E+01, 1.29797E+01, 1.28860E+01, 1.29126E+01, 1.30205E+01, 
     X 1.31327E+01, 1.31722E+01, 1.31901E+01, 1.33189E+01, 1.34833E+01, 
     X 1.36228E+01, 1.37474E+01, 1.38548E+01, 1.39450E+01, 1.40926E+01, 
     X 1.43099E+01, 1.44836E+01, 1.46257E+01, 1.47755E+01, 1.49163E+01, 
     X 1.51038E+01, 1.53308E+01, 1.54194E+01, 1.54852E+01, 1.55968E+01/ 
      DATA C00641 /                                                     
     X 1.57025E+01, 1.58667E+01, 1.60365E+01, 1.61427E+01, 1.62967E+01, 
     X 1.64735E+01, 1.66123E+01, 1.67268E+01, 1.67673E+01, 1.67825E+01, 
     X 1.68898E+01, 1.68178E+01, 1.68216E+01, 1.68574E+01, 1.68799E+01, 
     X 1.70317E+01, 1.70767E+01, 1.71508E+01, 1.72965E+01, 1.73421E+01, 
     X 1.73937E+01, 1.74420E+01, 1.74535E+01, 1.75110E+01, 1.75497E+01, 
     X 1.75149E+01, 1.75955E+01, 1.78260E+01, 1.78271E+01, 1.79750E+01, 
     X 1.80600E+01, 1.81597E+01, 1.83454E+01, 1.85243E+01, 1.87382E+01, 
     X 1.88904E+01, 1.90395E+01, 1.92759E+01, 1.95398E+01, 1.97712E+01, 
     X 1.98487E+01, 1.99522E+01, 2.02363E+01, 2.03271E+01, 2.07090E+01, 
     X 2.09195E+01, 2.10974E+01, 2.11702E+01, 2.12964E+01, 2.14339E+01, 
     X 2.15764E+01, 2.17351E+01, 2.18486E+01, 2.19700E+01, 2.21663E+01, 
     X 2.24244E+01, 2.24813E+01, 2.25248E+01, 2.26357E+01, 2.26457E+01, 
     X 2.27249E+01, 2.27172E+01, 2.27123E+01, 2.26859E+01, 2.27216E+01, 
     X 2.29306E+01, 2.30711E+01, 2.31374E+01, 2.31815E+01, 2.33423E+01, 
     X 2.33810E+01, 2.36430E+01, 2.36807E+01, 2.36676E+01, 2.38607E+01, 
     X 2.41559E+01, 2.43413E+01, 2.44401E+01, 2.45968E+01, 2.47927E+01/ 
      DATA C00721 /                                                     
     X 2.50743E+01, 2.53667E+01, 2.55749E+01, 2.57357E+01, 2.58927E+01, 
     X 2.61523E+01, 2.64110E+01, 2.66650E+01, 2.68829E+01, 2.70635E+01, 
     X 2.72797E+01, 2.75064E+01, 2.77229E+01, 2.80341E+01, 2.82003E+01, 
     X 2.83346E+01, 2.83909E+01, 2.86212E+01, 2.88006E+01, 2.89577E+01, 
     X 2.90965E+01, 2.91834E+01, 2.93224E+01, 2.94094E+01, 2.94848E+01, 
     X 2.96584E+01, 2.96749E+01, 2.97760E+01, 2.99163E+01, 3.00238E+01, 
     X 3.01290E+01, 3.02307E+01, 3.03663E+01, 3.05897E+01, 3.07937E+01, 
     X 3.10403E+01, 3.11778E+01, 3.13271E+01, 3.15799E+01, 3.18435E+01, 
     X 3.21614E+01, 3.25097E+01, 3.27701E+01, 3.29600E+01, 3.32583E+01, 
     X 3.36348E+01, 3.40282E+01, 3.41751E+01, 3.44128E+01, 3.46199E+01, 
     X 3.49363E+01, 3.52087E+01, 3.54056E+01, 3.55596E+01, 3.56694E+01, 
     X 3.58104E+01, 3.60276E+01, 3.62818E+01, 3.63505E+01, 3.66069E+01, 
     X 3.67544E+01, 3.70664E+01, 3.72525E+01, 3.73491E+01, 3.76006E+01, 
     X 3.77102E+01, 3.78970E+01, 3.81254E+01, 3.82728E+01, 3.81720E+01, 
     X 3.82781E+01, 3.84982E+01, 3.87202E+01, 3.89958E+01, 3.94148E+01, 
     X 3.98434E+01, 3.98952E+01, 4.01573E+01, 4.06014E+01, 4.09651E+01/ 
      DATA C00801 /                                                     
     X 4.12821E+01, 4.16849E+01, 4.19899E+01, 4.22719E+01, 4.27736E+01, 
     X 4.32254E+01, 4.33883E+01, 4.39831E+01, 4.39414E+01, 4.42613E+01, 
     X 4.46503E+01, 4.49027E+01, 4.50384E+01, 4.52929E+01, 4.57269E+01, 
     X 4.56433E+01, 4.57350E+01, 4.60128E+01, 4.60487E+01, 4.61183E+01, 
     X 4.64397E+01, 4.68211E+01, 4.70706E+01, 4.72821E+01, 4.74972E+01, 
     X 4.78253E+01, 4.81615E+01, 4.84480E+01, 4.85703E+01, 4.87397E+01, 
     X 4.90015E+01, 4.93673E+01, 4.97291E+01, 4.99836E+01, 5.02975E+01, 
     X 5.05572E+01, 5.08226E+01, 5.13433E+01, 5.17112E+01, 5.19703E+01, 
     X 5.23128E+01, 5.27305E+01, 5.30599E+01, 5.34555E+01, 5.39625E+01, 
     X 5.43627E+01, 5.45446E+01, 5.49263E+01, 5.53511E+01, 5.57270E+01, 
     X 5.60904E+01, 5.63875E+01, 5.68475E+01, 5.73172E+01, 5.81134E+01, 
     X 5.86399E+01, 5.90384E+01, 5.91417E+01, 5.90883E+01, 5.93610E+01, 
     X 5.95794E+01, 5.99600E+01, 5.98493E+01, 5.99441E+01, 6.02748E+01, 
     X 6.04778E+01, 6.05233E+01, 6.07194E+01, 6.11589E+01, 6.13324E+01, 
     X 6.17685E+01, 6.23166E+01, 6.31055E+01, 6.38211E+01, 6.42320E+01, 
     X 6.45195E+01, 6.51125E+01, 6.56765E+01, 6.59286E+01, 6.62716E+01/ 
      DATA C00881 /                                                     
     X 6.65693E+01, 6.68906E+01, 6.72246E+01, 6.75177E+01, 6.78476E+01, 
     X 6.82599E+01, 6.84400E+01, 6.89072E+01, 6.95720E+01, 7.01410E+01, 
     X 7.05519E+01, 7.09367E+01, 7.13975E+01, 7.22128E+01, 7.28222E+01, 
     X 7.33808E+01, 7.38828E+01, 7.44496E+01, 7.49983E+01, 7.54178E+01, 
     X 7.60554E+01, 7.62484E+01, 7.67892E+01, 7.71262E+01, 7.76235E+01, 
     X 7.81413E+01, 7.85694E+01, 7.91248E+01, 7.94715E+01, 7.96200E+01, 
     X 8.00270E+01, 8.03783E+01, 8.07100E+01, 8.11929E+01, 8.17375E+01, 
     X 8.18410E+01, 8.23341E+01, 8.26754E+01, 8.30893E+01, 8.34232E+01, 
     X 8.35533E+01, 8.36017E+01, 8.38589E+01, 8.43366E+01, 8.47593E+01, 
     X 8.51614E+01, 8.55271E+01, 8.58979E+01, 8.64892E+01, 8.74367E+01, 
     X 8.82440E+01, 8.89105E+01, 8.90980E+01, 8.97266E+01, 9.04886E+01, 
     X 9.12709E+01, 9.21243E+01, 9.26673E+01, 9.31331E+01, 9.38190E+01, 
     X 9.44877E+01, 9.50636E+01, 9.57445E+01, 9.65211E+01, 9.68623E+01, 
     X 9.75356E+01, 9.81991E+01, 9.88881E+01, 9.94554E+01, 9.99292E+01, 
     X 1.00357E+02, 1.00670E+02, 1.01227E+02, 1.01529E+02, 1.01889E+02, 
     X 1.02033E+02, 1.02254E+02, 1.02731E+02, 1.02914E+02, 1.03120E+02/ 
      DATA C00961 /                                                     
     X 1.03674E+02, 1.03768E+02, 1.04146E+02, 1.04850E+02, 1.05525E+02, 
     X 1.06263E+02, 1.06653E+02, 1.07084E+02, 1.07461E+02, 1.08052E+02, 
     X 1.08793E+02, 1.09395E+02, 1.09811E+02, 1.10079E+02, 1.10656E+02, 
     X 1.11575E+02, 1.12544E+02, 1.13453E+02, 1.14440E+02, 1.15292E+02, 
     X 1.15869E+02, 1.16925E+02, 1.17854E+02, 1.18723E+02, 1.19574E+02, 
     X 1.19940E+02, 1.21108E+02, 1.21807E+02, 1.22490E+02, 1.23278E+02, 
     X 1.24094E+02, 1.24816E+02, 1.25469E+02, 1.26217E+02, 1.26878E+02, 
     X 1.27536E+02, 1.28168E+02, 1.28682E+02, 1.29076E+02, 1.30171E+02, 
     X 1.30667E+02, 1.31242E+02, 1.31665E+02, 1.31961E+02, 1.32347E+02, 
     X 1.32805E+02, 1.33152E+02, 1.33869E+02, 1.34261E+02, 1.34498E+02, 
     X 1.35028E+02, 1.36049E+02, 1.36577E+02, 1.37491E+02, 1.38078E+02, 
     X 1.38389E+02, 1.38819E+02, 1.39653E+02, 1.39770E+02, 1.40812E+02, 
     X 1.40926E+02, 1.41267E+02, 1.41872E+02, 1.42233E+02, 1.43447E+02, 
     X 1.44641E+02, 1.45500E+02, 1.45996E+02, 1.47040E+02, 1.48767E+02, 
     X 1.48785E+02, 1.49525E+02, 1.50266E+02, 1.50814E+02, 1.51443E+02, 
     X 1.52272E+02, 1.52846E+02, 1.54000E+02, 1.54629E+02, 1.54907E+02/ 
      DATA C01041 /                                                     
     X 1.55527E+02, 1.56642E+02, 1.57436E+02, 1.59036E+02, 1.59336E+02, 
     X 1.59661E+02, 1.60287E+02, 1.61202E+02, 1.62410E+02, 1.63040E+02, 
     X 1.62872E+02, 1.63248E+02, 1.63776E+02, 1.64313E+02, 1.65782E+02, 
     X 1.65692E+02, 1.66049E+02, 1.66701E+02, 1.67786E+02, 1.69150E+02, 
     X 1.69996E+02, 1.71634E+02, 1.71137E+02, 1.71372E+02, 1.72525E+02, 
     X 1.73816E+02, 1.75219E+02, 1.76091E+02, 1.78260E+02, 1.79299E+02, 
     X 1.79904E+02, 1.81718E+02, 1.83807E+02, 1.85488E+02, 1.85929E+02, 
     X 1.86787E+02, 1.88282E+02, 1.89546E+02, 1.91489E+02, 1.92646E+02, 
     X 1.93399E+02, 1.93838E+02, 1.94406E+02, 1.95829E+02, 1.96745E+02, 
     X 1.96978E+02, 1.97243E+02, 1.97636E+02, 1.98025E+02, 1.98227E+02, 
     X 1.99552E+02, 2.00304E+02, 2.01031E+02, 2.01788E+02, 2.02432E+02, 
     X 2.03817E+02, 2.04866E+02, 2.05561E+02, 2.06180E+02, 2.07024E+02, 
     X 2.08303E+02, 2.09426E+02, 2.10575E+02, 2.11637E+02, 2.12559E+02, 
     X 2.13361E+02, 2.14191E+02, 2.15264E+02, 2.16366E+02, 2.17316E+02, 
     X 2.17717E+02, 2.17154E+02, 2.19172E+02, 2.20346E+02, 2.20849E+02, 
     X 2.21539E+02, 2.22810E+02, 2.22740E+02, 2.22824E+02, 2.23285E+02/ 
      DATA C01121 /                                                     
     X 2.23696E+02, 2.23864E+02, 2.23968E+02, 2.23544E+02, 2.24804E+02, 
     X 2.25953E+02, 2.26753E+02, 2.27732E+02, 2.29505E+02, 2.30108E+02, 
     X 2.31232E+02, 2.32552E+02, 2.33979E+02, 2.36677E+02, 2.38481E+02, 
     X 2.41797E+02, 2.44025E+02, 2.45113E+02, 2.47373E+02, 2.47258E+02, 
     X 2.48617E+02, 2.49790E+02, 2.50562E+02, 2.51198E+02, 2.51289E+02, 
     X 2.52509E+02, 2.54136E+02, 2.55335E+02, 2.55808E+02, 2.56567E+02, 
     X 2.57977E+02, 2.58987E+02, 2.59622E+02, 2.60170E+02, 2.61127E+02, 
     X 2.60655E+02, 2.62129E+02, 2.64020E+02, 2.65659E+02, 2.67086E+02, 
     X 2.67615E+02, 2.69800E+02, 2.71452E+02, 2.73314E+02, 2.76972E+02, 
     X 2.78005E+02, 2.79815E+02, 2.81709E+02, 2.84043E+02, 2.87070E+02, 
     X 2.88842E+02, 2.90555E+02, 2.92401E+02, 2.94314E+02, 2.96074E+02, 
     X 2.97103E+02, 2.98037E+02, 2.98113E+02, 2.97705E+02, 2.97350E+02, 
     X 2.97329E+02, 2.97016E+02, 2.96752E+02, 2.96599E+02, 2.96637E+02, 
     X 2.97057E+02, 2.97585E+02, 2.98179E+02, 2.98997E+02, 3.00012E+02, 
     X 3.00806E+02, 3.00908E+02, 3.02369E+02, 3.04063E+02, 3.05325E+02, 
     X 3.06737E+02, 3.08066E+02, 3.09694E+02, 3.11530E+02, 3.13132E+02/ 
      DATA C01201 /                                                     
     X 3.13296E+02, 3.15513E+02, 3.16887E+02, 3.17682E+02, 3.18296E+02, 
     X 3.18654E+02, 3.18912E+02, 3.19236E+02, 3.19626E+02, 3.20020E+02, 
     X 3.20186E+02, 3.20709E+02, 3.21628E+02, 3.22625E+02, 3.23504E+02, 
     X 3.25479E+02, 3.26825E+02, 3.28146E+02, 3.29404E+02, 3.30512E+02, 
     X 3.32634E+02, 3.34422E+02, 3.35602E+02, 3.36833E+02, 3.39372E+02, 
     X 3.43446E+02, 3.46374E+02, 3.48719E+02, 3.50881E+02, 3.53160E+02, 
     X 3.54890E+02, 3.57162E+02, 3.59284E+02, 3.60876E+02, 3.62295E+02, 
     X 3.63987E+02, 3.64835E+02, 3.65257E+02, 3.65738E+02, 3.65904E+02, 
     X 3.65976E+02, 3.66460E+02, 3.67087E+02, 3.67377E+02, 3.69079E+02, 
     X 3.70694E+02, 3.70940E+02, 3.70557E+02, 3.72693E+02, 3.73852E+02, 
     X 3.75679E+02, 3.77863E+02, 3.79964E+02, 3.81368E+02, 3.82716E+02, 
     X 3.85556E+02, 3.89072E+02, 3.91796E+02, 3.92766E+02, 3.96551E+02, 
     X 3.97833E+02, 3.97285E+02, 4.01929E+02, 4.02158E+02, 4.04553E+02, 
     X 4.06451E+02, 4.06236E+02, 4.08135E+02, 4.07797E+02, 4.08415E+02, 
     X 4.10111E+02, 4.11781E+02, 4.12735E+02, 4.11547E+02, 4.11606E+02, 
     X 4.13548E+02, 4.12557E+02, 4.12923E+02, 4.12866E+02, 4.13009E+02/ 
      DATA C01281 /                                                     
     X 4.14447E+02, 4.16032E+02, 4.17032E+02, 4.19064E+02, 4.22458E+02, 
     X 4.26021E+02, 4.25192E+02, 4.25684E+02, 4.27536E+02, 4.29972E+02, 
     X 4.31994E+02, 4.36037E+02, 4.39132E+02, 4.40363E+02, 4.40716E+02, 
     X 4.40342E+02, 4.42063E+02, 4.44408E+02, 4.45454E+02, 4.47835E+02, 
     X 4.48256E+02, 4.48831E+02, 4.50257E+02, 4.51427E+02, 4.52373E+02, 
     X 4.53899E+02, 4.55496E+02, 4.56311E+02, 4.57314E+02, 4.59922E+02, 
     X 4.61048E+02, 4.59840E+02, 4.62144E+02, 4.63152E+02, 4.64565E+02, 
     X 4.66715E+02, 4.69380E+02, 4.70751E+02, 4.72012E+02, 4.73482E+02, 
     X 4.75524E+02, 4.79307E+02, 4.82035E+02, 4.84423E+02, 4.86712E+02, 
     X 4.88754E+02, 4.90102E+02, 4.92047E+02, 4.94150E+02, 4.95375E+02, 
     X 4.95828E+02, 4.97555E+02, 4.98559E+02, 4.97618E+02, 4.99265E+02, 
     X 4.99979E+02, 5.00681E+02, 5.01386E+02, 5.00868E+02, 5.01935E+02, 
     X 5.03151E+02, 5.04329E+02, 5.05546E+02, 5.08259E+02, 5.09222E+02, 
     X 5.09818E+02, 5.11397E+02, 5.12391E+02, 5.13326E+02, 5.14329E+02, 
     X 5.15443E+02, 5.16533E+02, 5.21417E+02, 5.25071E+02, 5.26581E+02, 
     X 5.27762E+02, 5.29274E+02, 5.31704E+02, 5.34310E+02, 5.35727E+02/ 
      DATA C01361 /                                                     
     X 5.36838E+02, 5.37082E+02, 5.36733E+02, 5.36170E+02, 5.36063E+02, 
     X 5.36451E+02, 5.37870E+02, 5.40475E+02, 5.42268E+02, 5.41972E+02, 
     X 5.42532E+02, 5.44764E+02, 5.46844E+02, 5.47525E+02, 5.49150E+02, 
     X 5.52049E+02, 5.55423E+02, 5.56259E+02, 5.57424E+02, 5.59189E+02, 
     X 5.61167E+02, 5.64512E+02, 5.66753E+02, 5.68183E+02, 5.69628E+02, 
     X 5.73474E+02, 5.76192E+02, 5.78058E+02, 5.79588E+02, 5.81619E+02, 
     X 5.83530E+02, 5.84852E+02, 5.85326E+02, 5.88130E+02, 5.90570E+02, 
     X 5.91785E+02, 5.91371E+02, 5.90931E+02, 5.90942E+02, 5.91168E+02, 
     X 5.91291E+02, 5.89791E+02, 5.91146E+02, 5.90804E+02, 5.87847E+02, 
     X 5.89067E+02, 5.91027E+02, 5.90951E+02, 5.89227E+02, 5.93389E+02, 
     X 5.92921E+02, 5.92739E+02, 5.94544E+02, 5.98941E+02, 6.02302E+02, 
     X 6.03908E+02, 6.04265E+02, 6.06737E+02, 6.08560E+02, 6.11272E+02, 
     X 6.14992E+02, 6.18595E+02, 6.20930E+02, 6.22107E+02, 6.22957E+02, 
     X 6.26710E+02, 6.28657E+02, 6.30132E+02, 6.31543E+02, 6.33043E+02, 
     X 6.36932E+02, 6.38248E+02, 6.37126E+02, 6.41648E+02, 6.48274E+02, 
     X 6.52638E+02, 6.53922E+02, 6.56647E+02, 6.59351E+02, 6.60525E+02/ 
      DATA C01441 /                                                     
     X 6.60130E+02, 6.61375E+02, 6.62660E+02, 6.63976E+02, 6.65181E+02, 
     X 6.64820E+02, 6.64458E+02, 6.64927E+02, 6.66555E+02, 6.66759E+02, 
     X 6.68218E+02, 6.70323E+02, 6.72703E+02, 6.76085E+02, 6.79180E+02, 
     X 6.80850E+02, 6.80017E+02, 6.79928E+02, 6.80886E+02, 6.82038E+02, 
     X 6.82271E+02, 6.84057E+02, 6.85309E+02, 6.86816E+02, 6.90180E+02, 
     X 6.93205E+02, 6.95870E+02, 6.98794E+02, 7.03776E+02, 7.04010E+02, 
     X 7.05041E+02, 7.07254E+02, 7.07432E+02, 7.10736E+02, 7.13791E+02, 
     X 7.15542E+02, 7.16468E+02, 7.17412E+02, 7.17783E+02, 7.17340E+02, 
     X 7.18184E+02, 7.18716E+02, 7.18809E+02, 7.18282E+02, 7.20317E+02, 
     X 7.18568E+02, 7.16274E+02, 7.19119E+02, 7.20852E+02, 7.21727E+02, 
     X 7.22607E+02, 7.26369E+02, 7.26412E+02, 7.27101E+02, 7.29404E+02, 
     X 7.30786E+02, 7.30910E+02, 7.30656E+02, 7.30566E+02, 7.33408E+02, 
     X 7.37064E+02, 7.39178E+02, 7.36713E+02, 7.37365E+02, 7.40861E+02, 
     X 7.45281E+02, 7.46178E+02, 7.46991E+02, 7.48035E+02, 7.49777E+02, 
     X 7.54665E+02, 7.56585E+02, 7.57408E+02, 7.58131E+02, 7.58155E+02, 
     X 7.60838E+02, 7.64792E+02, 7.68161E+02, 7.69263E+02, 7.73166E+02/ 
      DATA C01521 /                                                     
     X 7.79006E+02, 7.82037E+02, 7.83109E+02, 7.84674E+02, 7.87444E+02, 
     X 7.89510E+02, 7.90130E+02, 7.91364E+02, 7.95225E+02, 8.03599E+02, 
     X 8.06340E+02, 8.05105E+02, 8.05120E+02, 8.08515E+02, 8.10907E+02, 
     X 8.11388E+02, 8.13432E+02, 8.12579E+02, 8.10564E+02, 8.08719E+02, 
     X 8.07682E+02, 8.05009E+02, 8.01754E+02, 8.01013E+02, 7.99926E+02, 
     X 7.99067E+02, 7.98369E+02, 7.94090E+02, 7.92883E+02, 7.94244E+02, 
     X 7.98220E+02, 7.98201E+02, 7.98332E+02, 7.99289E+02, 8.02355E+02, 
     X 8.03621E+02, 8.05302E+02, 8.08368E+02, 8.09983E+02, 8.11529E+02, 
     X 8.13068E+02, 8.14717E+02, 8.16441E+02, 8.19241E+02, 8.22944E+02, 
     X 8.23768E+02, 8.25030E+02, 8.26103E+02, 8.26374E+02, 8.28331E+02, 
     X 8.32620E+02, 8.38618E+02, 8.43666E+02, 8.45212E+02, 8.46324E+02, 
     X 8.48536E+02, 8.50192E+02, 8.53083E+02, 8.56653E+02, 8.59614E+02, 
     X 8.62000E+02, 8.64593E+02, 8.67678E+02, 8.70908E+02, 8.73408E+02, 
     X 8.74779E+02, 8.74005E+02, 8.76718E+02, 8.80445E+02, 8.84365E+02, 
     X 8.83806E+02, 8.84292E+02, 8.85539E+02, 8.87474E+02, 8.84905E+02, 
     X 8.84039E+02, 8.85105E+02, 8.83733E+02, 8.82224E+02, 8.79865E+02/ 
      DATA C01601 /                                                     
     X 8.75663E+02, 8.75575E+02, 8.73144E+02, 8.68602E+02, 8.70278E+02, 
     X 8.69659E+02, 8.68701E+02, 8.69250E+02, 8.71057E+02, 8.72860E+02, 
     X 8.74361E+02, 8.74458E+02, 8.77576E+02, 8.81613E+02, 8.84358E+02, 
     X 8.87440E+02, 8.91549E+02, 8.96568E+02, 8.99836E+02, 9.02880E+02, 
     X 9.05428E+02, 9.06891E+02, 9.07349E+02, 9.10151E+02, 9.15917E+02, 
     X 9.16197E+02, 9.18571E+02, 9.21219E+02, 9.20292E+02, 9.21949E+02, 
     X 9.24509E+02, 9.27454E+02, 9.29474E+02, 9.31348E+02, 9.32818E+02, 
     X 9.32658E+02, 9.36280E+02, 9.39512E+02, 9.39667E+02, 9.44078E+02, 
     X 9.47196E+02, 9.48291E+02, 9.46150E+02, 9.46918E+02, 9.49093E+02, 
     X 9.51372E+02, 9.53109E+02, 9.56308E+02, 9.61335E+02, 9.58214E+02, 
     X 9.56188E+02, 9.55660E+02, 9.58633E+02, 9.57541E+02, 9.54879E+02, 
     X 9.51663E+02, 9.52839E+02, 9.52055E+02, 9.49253E+02, 9.50187E+02, 
     X 9.50323E+02, 9.50937E+02, 9.54362E+02, 9.55855E+02, 9.56350E+02, 
     X 9.55908E+02, 9.57963E+02, 9.61866E+02, 9.66948E+02, 9.69786E+02, 
     X 9.74302E+02, 9.79061E+02, 9.82465E+02, 9.86019E+02, 9.89930E+02, 
     X 9.94294E+02, 9.97011E+02, 9.98207E+02, 9.98607E+02, 1.00175E+03/ 
      DATA C01681 /                                                     
     X 1.00275E+03, 1.00284E+03, 1.00294E+03, 1.00485E+03, 1.00593E+03, 
     X 1.00524E+03, 1.00415E+03, 1.00335E+03, 1.00278E+03, 1.00185E+03, 
     X 9.99982E+02, 9.98177E+02, 9.97959E+02, 9.99161E+02, 9.98810E+02, 
     X 9.95415E+02, 9.94342E+02, 9.92998E+02, 9.91340E+02, 9.90900E+02, 
     X 9.90407E+02, 9.89232E+02, 9.85447E+02, 9.86312E+02, 9.87461E+02, 
     X 9.86090E+02, 9.86670E+02, 9.85534E+02, 9.81877E+02, 9.84946E+02, 
     X 9.86392E+02, 9.86709E+02, 9.88086E+02, 9.90269E+02, 9.92566E+02, 
     X 9.94029E+02, 9.95795E+02, 9.97788E+02, 1.00005E+03, 1.00287E+03, 
     X 1.00566E+03, 1.00833E+03, 1.00982E+03, 1.01348E+03, 1.01862E+03, 
     X 1.02322E+03, 1.02786E+03, 1.03179E+03, 1.03339E+03, 1.03833E+03, 
     X 1.04317E+03, 1.04598E+03, 1.04753E+03, 1.04981E+03, 1.05321E+03, 
     X 1.05492E+03, 1.05721E+03, 1.05978E+03, 1.06033E+03, 1.06107E+03, 
     X 1.06155E+03, 1.06035E+03, 1.05838E+03, 1.05649E+03, 1.05553E+03, 
     X 1.05498E+03, 1.05387E+03, 1.05171E+03, 1.04877E+03, 1.04725E+03, 
     X 1.04748E+03, 1.04733E+03, 1.04704E+03, 1.04643E+03, 1.04411E+03, 
     X 1.04435E+03, 1.04520E+03, 1.04233E+03, 1.04047E+03, 1.03992E+03/ 
      DATA C01761 /                                                     
     X 1.04192E+03, 1.04171E+03, 1.04140E+03, 1.04197E+03, 1.04415E+03, 
     X 1.04548E+03, 1.04533E+03, 1.04616E+03, 1.04705E+03, 1.04800E+03, 
     X 1.05025E+03, 1.05219E+03, 1.05412E+03, 1.05808E+03, 1.06062E+03, 
     X 1.06292E+03, 1.06780E+03, 1.07219E+03, 1.07610E+03, 1.07913E+03, 
     X 1.08405E+03, 1.08798E+03, 1.08835E+03, 1.09140E+03, 1.09447E+03, 
     X 1.09676E+03, 1.10015E+03, 1.10272E+03, 1.10410E+03, 1.10749E+03, 
     X 1.10991E+03, 1.11121E+03, 1.10981E+03, 1.10981E+03, 1.11063E+03, 
     X 1.10714E+03, 1.10500E+03, 1.10357E+03, 1.10093E+03, 1.09898E+03, 
     X 1.09679E+03, 1.09188E+03, 1.09088E+03, 1.09040E+03, 1.08586E+03, 
     X 1.08178E+03, 1.07752E+03, 1.07243E+03, 1.07178E+03, 1.07084E+03, 
     X 1.06693E+03, 1.06527E+03, 1.06405E+03, 1.06285E+03, 1.06287E+03, 
     X 1.06276E+03, 1.06221E+03, 1.06464E+03, 1.06579E+03, 1.06498E+03, 
     X 1.06596E+03, 1.06812E+03, 1.07159E+03, 1.07361E+03, 1.07556E+03, 
     X 1.07751E+03, 1.08128E+03, 1.08523E+03, 1.08927E+03, 1.09193E+03, 
     X 1.09612E+03, 1.10133E+03, 1.10435E+03, 1.10781E+03, 1.11168E+03, 
     X 1.11641E+03, 1.12217E+03, 1.12839E+03, 1.13298E+03, 1.13575E+03/ 
      DATA C01841 /                                                     
     X 1.13742E+03, 1.13929E+03, 1.14132E+03, 1.14340E+03, 1.14518E+03, 
     X 1.14742E+03, 1.14943E+03, 1.14935E+03, 1.14975E+03, 1.15086E+03, 
     X 1.15420E+03, 1.15267E+03, 1.15007E+03, 1.15155E+03, 1.14982E+03, 
     X 1.14663E+03, 1.14301E+03, 1.13986E+03, 1.13676E+03, 1.13307E+03, 
     X 1.12898E+03, 1.12516E+03, 1.12284E+03, 1.12068E+03, 1.11855E+03, 
     X 1.11632E+03, 1.11464E+03, 1.11318E+03, 1.11180E+03, 1.11163E+03, 
     X 1.11160E+03, 1.11035E+03, 1.11178E+03, 1.11395E+03, 1.11447E+03, 
     X 1.11439E+03, 1.11440E+03, 1.11582E+03, 1.11560E+03, 1.11478E+03, 
     X 1.11448E+03, 1.11454E+03, 1.11494E+03, 1.11607E+03, 1.11736E+03, 
     X 1.11854E+03, 1.11875E+03, 1.11989E+03, 1.12165E+03, 1.12427E+03, 
     X 1.12620E+03, 1.12758E+03, 1.12774E+03, 1.12870E+03, 1.13001E+03, 
     X 1.13006E+03, 1.13078E+03, 1.13172E+03, 1.12971E+03, 1.12857E+03, 
     X 1.12810E+03, 1.12740E+03, 1.12659E+03, 1.12564E+03, 1.12338E+03, 
     X 1.12117E+03, 1.11902E+03, 1.11878E+03, 1.11855E+03, 1.11828E+03, 
     X 1.11791E+03, 1.11784E+03, 1.11815E+03, 1.11957E+03, 1.12046E+03, 
     X 1.12042E+03, 1.11929E+03, 1.12074E+03, 1.12708E+03, 1.12600E+03/ 
      DATA C01921 /                                                     
     X 1.12538E+03, 1.12871E+03, 1.13167E+03, 1.13388E+03, 1.13444E+03, 
     X 1.13595E+03, 1.13801E+03, 1.14096E+03, 1.14230E+03, 1.14304E+03, 
     X 1.14421E+03, 1.14580E+03, 1.14767E+03, 1.15000E+03, 1.15126E+03, 
     X 1.15181E+03, 1.15197E+03, 1.15364E+03, 1.15626E+03, 1.15538E+03, 
     X 1.15636E+03, 1.15908E+03, 1.16024E+03, 1.16188E+03, 1.16411E+03, 
     X 1.16310E+03, 1.16430E+03, 1.16927E+03, 1.17035E+03, 1.17052E+03, 
     X 1.17013E+03, 1.16968E+03, 1.16969E+03, 1.17106E+03, 1.17123E+03, 
     X 1.17006E+03, 1.16536E+03, 1.16087E+03, 1.15691E+03, 1.15608E+03, 
     X 1.15388E+03, 1.15077E+03, 1.14967E+03, 1.14793E+03, 1.14554E+03, 
     X 1.14212E+03, 1.13908E+03, 1.13654E+03, 1.13499E+03, 1.13308E+03, 
     X 1.13033E+03, 1.13051E+03, 1.13073E+03, 1.12898E+03, 1.12941E+03, 
     X 1.13051E+03, 1.13086E+03, 1.13189E+03, 1.13304E+03, 1.13192E+03, 
     X 1.13131E+03, 1.13110E+03, 1.13499E+03, 1.13914E+03, 1.14359E+03, 
     X 1.14383E+03, 1.14390E+03, 1.14435E+03, 1.14540E+03, 1.14646E+03, 
     X 1.14716E+03, 1.14880E+03, 1.15062E+03, 1.15170E+03, 1.15093E+03, 
     X 1.14926E+03, 1.15133E+03, 1.15167E+03, 1.15043E+03, 1.15134E+03/ 
      DATA C02001 /                                                     
     X 1.15135E+03, 1.15000E+03, 1.15087E+03, 1.15118E+03, 1.14935E+03, 
     X 1.14780E+03, 1.14647E+03, 1.14560E+03, 1.14404E+03, 1.14238E+03, 
     X 1.14406E+03, 1.14245E+03, 1.13781E+03, 1.13664E+03, 1.13653E+03, 
     X 1.13778E+03, 1.13813E+03, 1.13794E+03, 1.13681E+03, 1.13515E+03, 
     X 1.13328E+03, 1.13132E+03, 1.13080E+03, 1.13130E+03, 1.13400E+03, 
     X 1.13526E+03, 1.13494E+03, 1.13193E+03, 1.12898E+03, 1.12654E+03, 
     X 1.12739E+03, 1.12849E+03, 1.12774E+03, 1.12733E+03, 1.12733E+03, 
     X 1.12943E+03, 1.13014E+03, 1.12967E+03, 1.12731E+03, 1.12671E+03, 
     X 1.12885E+03, 1.13050E+03, 1.13201E+03, 1.13345E+03, 1.13488E+03, 
     X 1.13605E+03, 1.13530E+03, 1.13737E+03, 1.14186E+03, 1.14250E+03, 
     X 1.14305E+03, 1.14383E+03, 1.14510E+03, 1.14659E+03, 1.14848E+03, 
     X 1.14949E+03, 1.14995E+03, 1.14934E+03, 1.15058E+03, 1.15368E+03, 
     X 1.15435E+03, 1.15422E+03, 1.15296E+03, 1.15228E+03, 1.15189E+03, 
     X 1.15198E+03, 1.15081E+03, 1.14881E+03, 1.14562E+03, 1.14276E+03, 
     X 1.14030E+03, 1.13637E+03, 1.13254E+03, 1.12942E+03, 1.12653E+03, 
     X 1.12362E+03, 1.11987E+03, 1.11712E+03, 1.11522E+03, 1.11403E+03/ 
      DATA C02081 /                                                     
     X 1.11226E+03, 1.10947E+03, 1.10956E+03, 1.10976E+03, 1.10748E+03, 
     X 1.10673E+03, 1.10688E+03, 1.10675E+03, 1.10533E+03, 1.10230E+03, 
     X 1.10384E+03, 1.10496E+03, 1.10274E+03, 1.10197E+03, 1.10196E+03, 
     X 1.10278E+03, 1.10257E+03, 1.10147E+03, 1.10205E+03, 1.10308E+03, 
     X 1.10478E+03, 1.10358E+03, 1.10197E+03, 1.10305E+03, 1.10390E+03, 
     X 1.10456E+03, 1.10526E+03, 1.10588E+03, 1.10640E+03, 1.10747E+03, 
     X 1.10904E+03, 1.11214E+03, 1.11350E+03, 1.11359E+03, 1.11604E+03, 
     X 1.11706E+03, 1.11594E+03, 1.11600E+03, 1.11616E+03, 1.11561E+03, 
     X 1.11556E+03, 1.11547E+03, 1.11370E+03, 1.11289E+03, 1.11276E+03, 
     X 1.11338E+03, 1.11437E+03, 1.11595E+03, 1.11309E+03, 1.10958E+03, 
     X 1.10887E+03, 1.10573E+03, 1.10068E+03, 1.10194E+03, 1.10165E+03, 
     X 1.09813E+03, 1.09973E+03, 1.10233E+03, 1.10121E+03, 1.10097E+03, 
     X 1.10149E+03, 1.10162E+03, 1.10222E+03, 1.10389E+03, 1.10315E+03, 
     X 1.10158E+03, 1.10193E+03, 1.10186E+03, 1.10135E+03, 1.10336E+03, 
     X 1.10500E+03, 1.10459E+03, 1.10592E+03, 1.10784E+03, 1.10076E+03, 
     X 1.09615E+03, 1.09496E+03, 1.09422E+03, 1.09350E+03, 1.09244E+03/ 
      DATA C02161 /                                                     
     X 1.08955E+03, 1.08535E+03, 1.08379E+03, 1.08184E+03, 1.07889E+03, 
     X 1.07563E+03, 1.07238E+03, 1.07042E+03, 1.06882E+03, 1.06761E+03, 
     X 1.06816E+03, 1.06772E+03, 1.06327E+03, 1.06313E+03, 1.06563E+03, 
     X 1.06254E+03, 1.06072E+03, 1.06095E+03, 1.06173E+03, 1.06269E+03, 
     X 1.06361E+03, 1.06438E+03, 1.06501E+03, 1.06465E+03, 1.06481E+03, 
     X 1.06685E+03, 1.06642E+03, 1.06447E+03, 1.06701E+03, 1.06791E+03, 
     X 1.06612E+03, 1.06471E+03, 1.06403E+03, 1.06774E+03, 1.06823E+03, 
     X 1.06524E+03, 1.06479E+03, 1.06453E+03, 1.06346E+03, 1.06175E+03, 
     X 1.05958E+03, 1.05941E+03, 1.05936E+03, 1.05938E+03, 1.05736E+03, 
     X 1.05449E+03, 1.05307E+03, 1.05180E+03, 1.05074E+03, 1.04810E+03, 
     X 1.04536E+03, 1.04477E+03, 1.04389E+03, 1.04272E+03, 1.04006E+03, 
     X 1.03739E+03, 1.03533E+03, 1.03476E+03, 1.03516E+03, 1.03275E+03, 
     X 1.03093E+03, 1.03062E+03, 1.02997E+03, 1.02919E+03, 1.02993E+03, 
     X 1.02983E+03, 1.02837E+03, 1.02611E+03, 1.02386E+03, 1.02426E+03, 
     X 1.02542E+03, 1.02750E+03, 1.02638E+03, 1.02496E+03, 1.02608E+03, 
     X 1.02568E+03, 1.02388E+03, 1.02522E+03, 1.02692E+03, 1.02834E+03/ 
      DATA C02241 /                                                     
     X 1.02828E+03, 1.02716E+03, 1.02667E+03, 1.02607E+03, 1.02503E+03, 
     X 1.02723E+03, 1.03143E+03, 1.02881E+03, 1.02646E+03, 1.02500E+03, 
     X 1.02569E+03, 1.02743E+03, 1.02608E+03, 1.02548E+03, 1.02620E+03, 
     X 1.02733E+03, 1.02839E+03, 1.02575E+03, 1.02432E+03, 1.02471E+03, 
     X 1.02392E+03, 1.02267E+03, 1.02077E+03, 1.01964E+03, 1.01957E+03, 
     X 1.01848E+03, 1.01704E+03, 1.01524E+03, 1.01352E+03, 1.01191E+03, 
     X 1.01066E+03, 1.00952E+03, 1.00849E+03, 1.00660E+03, 1.00368E+03, 
     X 9.99713E+02, 9.95921E+02, 9.94845E+02, 9.93286E+02, 9.91204E+02/ 
C                                                                       
      END                                                               
      BLOCK DATA BO3HH1                                                 
C>    BLOCK DATA                                                        
C                                                                       
C     RATIO (C1/C0)                                                     
C     DATA FROM BASS 1985                                               
C                                                                       
C     NOW INCLUDES MOLINA & MOLINA AT 273K WITH THE TEMPERATURE         
C     DEPENDENCE DETERMINED FROM THE 195K HARVARD MEASUREMENTS,         
C     EMPLOYING THE BASS ALGORITHM (CO(1+C1*T+C2*T2); THIS IS           
C     ONLY FOR THE WAVELENGTH RANGE FROM .34 TO .35 MICRONS;            
C     OTHERWISE, THE BASS DATA ALONE HAVE BEEN EMPLOYED BETWEEN         
C     .34 AND .245 MICRONS.                                             
C                                                                       
C     NEW T-DEPENDENT X-SECTIONS BETWEEN .345 AND .36 MICRONS           
C     HAVE NOW BEEN ADDED, BASED ON WORK BY CACCIANI, DISARRA           
C     AND FIOCCO, UNIVERSITY OF ROME, 1987.  QUADRATIC TEMP             
C     HAS BEEN DERIVED, AS ABOVE.                                       
C                                                                       
C     AGREEMENT AMONGST THE FOUR DATA SETS IS REASONABLE (<10%)         
C     AND OFTEN EXCELLENT (0-3%)                                        
C                                                                       
C                                                                       
      COMMON /O3HH1/  V1C,V2C,DVC,NC,                                   
     X           O31001(88),C10086(80),C10166(80),C10246(65),C10311(16),
     X           C10327(80),C10407(1),                                  
     X           C10001(80),C10081(80),C10161(80),C10241(80),C10321(80),
     X           C10401(80),C10481(80),C10561(80),C10641(80),C10721(80),
     X           C10801(80),C10881(80),C10961(80),C11041(80),C11121(80),
     X           C11201(80),C11281(80),C11361(80),C11441(80),C11521(80),
     X           C11601(80),C11681(80),C11761(80),C11841(80),C11921(80),
     X           C12001(80),C12081(80),C12161(80),C12241(40)            
C                                                                       
C     DATA V1C /29405./, V2C /40800./ ,DVC /5./, NC /2280/   BASS       
      DATA V1C /27370./, V2C /40800./ ,DVC /5./, NC /2690/              
C                                                                       
      DATA O31001/88*1.3E-3/                                            
                                                                        
      DATA C10086/                                                      
     X 1.37330E-03, 1.62821E-03, 2.01703E-03, 2.54574E-03, 3.20275E-03, 
     X 3.89777E-03, 4.62165E-03, 5.26292E-03, 5.86986E-03, 6.41494E-03, 
     X 6.96761E-03, 7.48539E-03, 7.89600E-03, 7.87305E-03, 7.81981E-03, 
     X 7.63864E-03, 7.67455E-03, 7.72586E-03, 7.69784E-03, 7.57367E-03, 
     X 7.27336E-03, 7.14064E-03, 7.24207E-03, 7.09851E-03, 6.93654E-03, 
     X 6.89385E-03, 7.05768E-03, 6.85578E-03, 6.58301E-03, 6.50848E-03, 
     X 6.52083E-03, 6.46590E-03, 6.70692E-03, 6.92053E-03, 7.17734E-03, 
     X 7.05364E-03, 6.63440E-03, 6.54702E-03, 6.27173E-03, 5.98150E-03, 
     X 5.66579E-03, 5.51549E-03, 5.50291E-03, 5.93271E-03, 6.36950E-03, 
     X 7.18562E-03, 7.51767E-03, 6.53815E-03, 7.22341E-03, 8.63056E-03, 
     X 9.11740E-03, 8.80903E-03, 8.59902E-03, 7.74287E-03, 7.33509E-03, 
     X 7.50180E-03, 7.81686E-03, 7.85635E-03, 8.08554E-03, 7.21968E-03, 
     X 7.99028E-03, 9.90724E-03, 1.29121E-02, 1.54686E-02, 1.60876E-02, 
     X 1.59530E-02, 1.57040E-02, 1.59499E-02, 1.63961E-02, 1.72670E-02, 
     X 1.81634E-02, 1.95519E-02, 2.14181E-02, 2.28670E-02, 2.33506E-02, 
     X 2.22736E-02, 2.14296E-02, 2.15271E-02, 2.30730E-02, 2.36220E-02/ 
      DATA C10166/                                                      
     X 2.44466E-02, 2.44476E-02, 2.39223E-02, 2.41386E-02, 2.53687E-02, 
     X 2.67491E-02, 2.80425E-02, 2.77558E-02, 2.82626E-02, 2.86776E-02, 
     X 2.88781E-02, 2.89248E-02, 2.89983E-02, 2.85534E-02, 2.87102E-02, 
     X 2.83695E-02, 2.76719E-02, 2.76091E-02, 2.90733E-02, 2.80388E-02, 
     X 2.73706E-02, 2.65055E-02, 2.61268E-02, 2.45892E-02, 2.37213E-02, 
     X 2.22542E-02, 2.10116E-02, 2.02852E-02, 1.97635E-02, 1.94079E-02, 
     X 1.90997E-02, 1.85598E-02, 1.79221E-02, 1.77887E-02, 1.73709E-02, 
     X 1.67263E-02, 1.60932E-02, 1.50775E-02, 1.39563E-02, 1.23691E-02, 
     X 1.07402E-02, 9.35859E-03, 8.43786E-03, 7.92075E-03, 7.33239E-03, 
     X 6.73638E-03, 6.28740E-03, 5.85640E-03, 5.85384E-03, 6.10577E-03, 
     X 7.26050E-03, 9.66384E-03, 1.29629E-02, 1.69596E-02, 2.03465E-02, 
     X 2.26429E-02, 2.39653E-02, 2.47970E-02, 2.51993E-02, 2.51383E-02, 
     X 2.52014E-02, 2.47766E-02, 2.47171E-02, 2.47478E-02, 2.43986E-02, 
     X 2.43498E-02, 2.40537E-02, 2.40574E-02, 2.40446E-02, 2.40847E-02, 
     X 2.39400E-02, 2.42127E-02, 2.47123E-02, 2.52914E-02, 2.52103E-02, 
     X 2.51421E-02, 2.43229E-02, 2.37902E-02, 2.30865E-02, 2.28174E-02/ 
      DATA C10246/                                                      
     X 2.28830E-02, 2.33671E-02, 2.38274E-02, 2.46699E-02, 2.56739E-02, 
     X 2.61408E-02, 2.62898E-02, 2.64228E-02, 2.55561E-02, 2.47095E-02, 
     X 2.39071E-02, 2.34319E-02, 2.28738E-02, 2.23434E-02, 2.18888E-02, 
     X 2.13639E-02, 2.11937E-02, 2.10110E-02, 2.07672E-02, 2.00697E-02, 
     X 1.97605E-02, 1.91208E-02, 1.82056E-02, 1.73945E-02, 1.64542E-02, 
     X 1.53969E-02, 1.41816E-02, 1.35665E-02, 1.27109E-02, 1.18254E-02, 
     X 1.11489E-02, 1.03984E-02, 1.00760E-02, 9.86649E-03, 9.76766E-03, 
     X 9.41662E-03, 9.19082E-03, 9.44272E-03, 1.04547E-02, 1.24713E-02, 
     X 1.49310E-02, 1.70272E-02, 1.86057E-02, 1.93555E-02, 1.98350E-02, 
     X 2.00041E-02, 2.01233E-02, 2.01917E-02, 1.98918E-02, 1.96649E-02, 
     X 1.95162E-02, 2.01044E-02, 2.06711E-02, 2.08881E-02, 2.04812E-02, 
     X 1.92249E-02, 1.80188E-02, 1.69496E-02, 1.60488E-02, 1.52865E-02, 
     X 1.46940E-02, 1.41067E-02, 1.35675E-02, 1.31094E-02, 1.27542E-02/ 
      DATA C10311/                                                      
     X                                                     1.3073E-02,  
     X 1.2795E-02,  1.2753E-02,  1.2868E-02,  1.2885E-02,  1.2554E-02,  
     X 1.2106E-02,  1.1616E-02,  1.1394E-02,  1.1092E-02,  1.0682E-02,  
     X 1.0519E-02,  9.7219E-03,  9.3434E-03,  8.5260E-03,  8.3333E-03/  
      DATA C10327/                                                      
     X 7.8582E-03,  6.8295E-03,  6.7963E-03,  6.7516E-03,  6.2930E-03,  
     X 6.1615E-03,  6.1250E-03,  5.9011E-03,  5.7823E-03,  5.4688E-03,  
     X 5.0978E-03,  4.4526E-03,  3.8090E-03,  3.2310E-03,  3.0128E-03,  
     X 3.9063E-03,  6.7911E-03,  9.3161E-03,  1.0256E-02,  1.0183E-02,  
     X 9.8289E-03,  9.5683E-03,  9.0406E-03,  8.7148E-03,  8.5284E-03,  
     X 8.6149E-03,  8.7238E-03,  9.3679E-03,  1.0683E-02,  1.2016E-02,  
     X 1.3097E-02,  1.3610E-02,  1.3588E-02,  1.3805E-02,  1.3928E-02,  
     X 1.3903E-02,  1.3446E-02,  1.3258E-02,  1.3194E-02,  1.2703E-02,  
     X 1.2393E-02,  1.2487E-02,  1.2341E-02,  1.2388E-02,  1.2061E-02,  
     X 1.2122E-02,  1.1850E-02,  1.2032E-02,  1.1806E-02,  1.1810E-02,  
     X 1.1572E-02,  1.1397E-02,  1.0980E-02,  1.1012E-02,  1.0524E-02,  
     X 1.0518E-02,  1.0227E-02,  9.6837E-03,  9.6425E-03,  8.9938E-03,  
     X 9.1488E-03,  8.8595E-03,  8.5976E-03,  8.4447E-03,  8.0731E-03,  
     X 8.0283E-03,  7.7827E-03,  7.7638E-03,  7.2438E-03,  6.8246E-03,  
     X 6.3457E-03,  5.6632E-03,  5.2500E-03,  4.3593E-03,  3.9431E-03,  
     X 3.1580E-03,  2.2298E-03,  1.7818E-03,  1.4513E-03,  1.3188E-03/  
      DATA C10407/                                                      
     X 2.1034E-03/                                                      
      DATA C10001 /                                                     
     X 6.45621E-03, 7.11308E-03, 1.06130E-02, 1.36338E-02, 1.27746E-02, 
     X 1.42152E-02, 1.41144E-02, 1.64830E-02, 1.67110E-02, 1.57368E-02, 
     X 1.54644E-02, 1.45248E-02, 1.43206E-02, 1.56946E-02, 1.54268E-02, 
     X 1.37500E-02, 1.50224E-02, 1.60919E-02, 1.49099E-02, 1.53960E-02, 
     X 1.61871E-02, 1.46539E-02, 1.38258E-02, 1.32571E-02, 1.21580E-02, 
     X 1.39596E-02, 1.16029E-02, 1.47042E-02, 1.07441E-02, 1.08999E-02, 
     X 1.05562E-02, 1.00589E-02, 9.60711E-03, 9.36950E-03, 7.65303E-03, 
     X 6.86216E-03, 7.05344E-03, 6.90728E-03, 6.78627E-03, 6.97435E-03, 
     X 5.75456E-03, 5.81685E-03, 5.00915E-03, 4.90259E-03, 4.42545E-03, 
     X 4.14633E-03, 3.61657E-03, 3.08178E-03, 2.91680E-03, 2.94554E-03, 
     X 3.35794E-03, 5.49025E-03, 7.09867E-03, 6.82592E-03, 8.84835E-03, 
     X 9.15718E-03, 9.17935E-03, 8.31848E-03, 7.79481E-03, 7.75125E-03, 
     X 6.95844E-03, 7.34506E-03, 7.53823E-03, 7.03272E-03, 7.57051E-03, 
     X 9.20239E-03, 1.10864E-02, 1.16188E-02, 1.30029E-02, 1.44364E-02, 
     X 1.29292E-02, 1.36031E-02, 1.35967E-02, 1.30412E-02, 1.29874E-02, 
     X 1.14829E-02, 1.18009E-02, 1.20829E-02, 1.17831E-02, 1.21489E-02/ 
      DATA C10081 /                                                     
     X 1.27019E-02, 1.25557E-02, 1.23812E-02, 1.20158E-02, 1.26749E-02, 
     X 1.17139E-02, 1.14552E-02, 1.11268E-02, 9.79143E-03, 8.79741E-03, 
     X 8.85709E-03, 8.57653E-03, 8.93908E-03, 8.46205E-03, 8.56506E-03, 
     X 8.14319E-03, 8.14415E-03, 7.74205E-03, 7.80727E-03, 7.49886E-03, 
     X 7.71114E-03, 6.55963E-03, 6.87550E-03, 6.39162E-03, 5.55359E-03, 
     X 5.43275E-03, 4.90649E-03, 4.41165E-03, 4.21875E-03, 3.62592E-03, 
     X 3.40700E-03, 2.40267E-03, 2.61479E-03, 2.75677E-03, 4.10842E-03, 
     X 5.79601E-03, 7.10708E-03, 8.07826E-03, 8.16166E-03, 8.72620E-03, 
     X 8.85878E-03, 8.72755E-03, 8.25811E-03, 8.12100E-03, 7.78534E-03, 
     X 7.39762E-03, 8.43880E-03, 8.53789E-03, 9.90072E-03, 1.01668E-02, 
     X 1.00827E-02, 9.73556E-03, 9.57462E-03, 1.01289E-02, 1.10670E-02, 
     X 1.03508E-02, 1.00929E-02, 9.10236E-03, 9.39459E-03, 8.79601E-03, 
     X 8.67936E-03, 8.53862E-03, 7.95459E-03, 8.04037E-03, 7.95361E-03, 
     X 7.87432E-03, 6.99165E-03, 7.37107E-03, 6.09187E-03, 6.21030E-03, 
     X 5.33277E-03, 5.04633E-03, 4.45811E-03, 4.34153E-03, 3.98596E-03, 
     X 3.84225E-03, 3.41943E-03, 3.60535E-03, 2.81691E-03, 2.49771E-03/ 
      DATA C10161 /                                                     
     X 2.35046E-03, 2.50947E-03, 3.75462E-03, 4.92349E-03, 5.09294E-03, 
     X 4.98312E-03, 5.19325E-03, 4.41827E-03, 4.25192E-03, 4.46745E-03, 
     X 4.08731E-03, 3.84776E-03, 3.67507E-03, 3.76845E-03, 3.69210E-03, 
     X 4.59864E-03, 6.42677E-03, 7.83255E-03, 7.89247E-03, 8.10883E-03, 
     X 8.00825E-03, 8.40322E-03, 7.97108E-03, 8.24714E-03, 8.39006E-03, 
     X 8.68787E-03, 8.61108E-03, 8.81552E-03, 9.36996E-03, 9.08243E-03, 
     X 9.69116E-03, 9.66185E-03, 9.22856E-03, 9.65086E-03, 9.35398E-03, 
     X 9.06358E-03, 8.76851E-03, 8.43072E-03, 7.85659E-03, 7.93936E-03, 
     X 7.49712E-03, 7.20199E-03, 6.94581E-03, 6.64086E-03, 6.12627E-03, 
     X 6.13967E-03, 5.67310E-03, 5.09928E-03, 4.59112E-03, 3.95257E-03, 
     X 3.67652E-03, 3.28781E-03, 2.77471E-03, 2.74494E-03, 2.15529E-03, 
     X 1.95283E-03, 1.75043E-03, 1.60419E-03, 1.82688E-03, 2.34667E-03, 
     X 2.92502E-03, 3.88322E-03, 4.39984E-03, 4.67814E-03, 4.80395E-03, 
     X 4.69130E-03, 4.54564E-03, 4.46773E-03, 4.59178E-03, 4.37498E-03, 
     X 4.12706E-03, 4.18299E-03, 4.57267E-03, 5.60127E-03, 6.51936E-03, 
     X 7.10498E-03, 7.49870E-03, 7.89554E-03, 7.97428E-03, 8.21044E-03/ 
      DATA C10241 /                                                     
     X 8.06324E-03, 7.76648E-03, 7.62238E-03, 7.77675E-03, 7.46905E-03, 
     X 7.61115E-03, 7.42715E-03, 7.28461E-03, 7.51514E-03, 7.38782E-03, 
     X 6.97206E-03, 6.52738E-03, 6.10147E-03, 5.87553E-03, 5.49218E-03, 
     X 4.94873E-03, 4.47920E-03, 4.25005E-03, 3.98094E-03, 3.92084E-03, 
     X 3.41707E-03, 3.30501E-03, 3.09208E-03, 3.19686E-03, 3.55283E-03, 
     X 4.20775E-03, 4.11155E-03, 3.72193E-03, 3.52000E-03, 3.13572E-03, 
     X 2.87629E-03, 2.64251E-03, 2.33451E-03, 2.22426E-03, 2.05800E-03, 
     X 1.75214E-03, 2.32530E-03, 2.68651E-03, 3.66315E-03, 4.93904E-03, 
     X 5.32850E-03, 5.43978E-03, 5.32656E-03, 5.15649E-03, 5.42096E-03, 
     X 5.37193E-03, 5.23454E-03, 5.34557E-03, 5.50533E-03, 6.13216E-03, 
     X 6.65129E-03, 7.09357E-03, 7.46042E-03, 7.68605E-03, 7.91866E-03, 
     X 7.52953E-03, 7.48272E-03, 7.17800E-03, 6.80060E-03, 6.60427E-03, 
     X 6.43049E-03, 6.45975E-03, 6.20534E-03, 5.93094E-03, 5.67360E-03, 
     X 5.38584E-03, 5.19364E-03, 4.92599E-03, 4.60655E-03, 4.24669E-03, 
     X 3.94253E-03, 3.55894E-03, 3.24256E-03, 2.92974E-03, 2.62760E-03, 
     X 2.52238E-03, 2.24714E-03, 2.26350E-03, 2.44380E-03, 3.03798E-03/ 
      DATA C10321 /                                                     
     X 3.50000E-03, 3.55416E-03, 3.43661E-03, 3.19814E-03, 3.02155E-03, 
     X 2.73890E-03, 2.50078E-03, 2.34595E-03, 2.18282E-03, 2.19285E-03, 
     X 2.49482E-03, 3.13434E-03, 4.18947E-03, 4.72069E-03, 5.29712E-03, 
     X 5.39004E-03, 5.44846E-03, 5.37952E-03, 5.09935E-03, 5.08741E-03, 
     X 5.05257E-03, 5.10339E-03, 5.17968E-03, 5.31841E-03, 5.58106E-03, 
     X 5.65031E-03, 5.65680E-03, 5.76184E-03, 5.71213E-03, 5.48515E-03, 
     X 5.32168E-03, 5.18505E-03, 4.99640E-03, 4.78746E-03, 4.57244E-03, 
     X 4.32728E-03, 4.14464E-03, 3.97659E-03, 4.01874E-03, 4.10588E-03, 
     X 3.99644E-03, 3.84584E-03, 3.64222E-03, 3.39590E-03, 3.00386E-03, 
     X 2.73790E-03, 2.45095E-03, 2.29068E-03, 1.64530E-03, 1.68602E-03, 
     X 2.32934E-03, 3.14851E-03, 3.65706E-03, 3.70878E-03, 3.75103E-03, 
     X 3.79183E-03, 3.32032E-03, 2.42604E-03, 2.48775E-03, 2.34603E-03, 
     X 2.36349E-03, 3.33744E-03, 3.44617E-03, 4.27280E-03, 4.61076E-03, 
     X 5.20165E-03, 5.14851E-03, 5.22909E-03, 5.08278E-03, 5.16125E-03, 
     X 5.01572E-03, 4.51685E-03, 4.67541E-03, 4.83421E-03, 4.57546E-03, 
     X 4.55111E-03, 5.03093E-03, 4.67838E-03, 4.44282E-03, 4.40774E-03/ 
      DATA C10401 /                                                     
     X 4.48123E-03, 4.24410E-03, 4.03559E-03, 3.73969E-03, 3.45458E-03, 
     X 3.18217E-03, 3.16115E-03, 3.36877E-03, 3.62026E-03, 3.69898E-03, 
     X 3.49845E-03, 3.13839E-03, 2.77731E-03, 2.40106E-03, 2.03935E-03, 
     X 1.84377E-03, 2.07757E-03, 2.39550E-03, 2.86272E-03, 3.27900E-03, 
     X 3.42304E-03, 3.50211E-03, 3.29197E-03, 3.24784E-03, 3.20864E-03, 
     X 3.28063E-03, 3.01328E-03, 3.00379E-03, 3.19562E-03, 3.45113E-03, 
     X 3.75149E-03, 3.98520E-03, 4.19181E-03, 4.15773E-03, 4.02490E-03, 
     X 3.95936E-03, 3.79001E-03, 3.77647E-03, 3.48528E-03, 3.55768E-03, 
     X 3.62812E-03, 3.48650E-03, 3.35434E-03, 3.20088E-03, 3.25316E-03, 
     X 3.04467E-03, 3.12633E-03, 3.23602E-03, 3.07723E-03, 2.80070E-03, 
     X 2.72498E-03, 2.74752E-03, 2.58943E-03, 2.32482E-03, 2.20218E-03, 
     X 2.10846E-03, 2.05991E-03, 2.01844E-03, 2.16224E-03, 2.48456E-03, 
     X 2.88022E-03, 2.93939E-03, 3.01176E-03, 2.98886E-03, 2.96947E-03, 
     X 3.38082E-03, 3.61657E-03, 3.42654E-03, 3.41274E-03, 3.22475E-03, 
     X 2.97658E-03, 3.21944E-03, 3.32032E-03, 3.33273E-03, 3.58854E-03, 
     X 3.67023E-03, 3.64069E-03, 3.74557E-03, 3.77703E-03, 3.64042E-03/ 
      DATA C10481 /                                                     
     X 3.39468E-03, 3.22657E-03, 3.16466E-03, 3.24224E-03, 3.24801E-03, 
     X 3.19487E-03, 3.40155E-03, 3.16940E-03, 2.92293E-03, 3.00998E-03, 
     X 2.82851E-03, 2.60381E-03, 2.59242E-03, 2.48530E-03, 2.76677E-03, 
     X 2.45506E-03, 2.21845E-03, 2.30407E-03, 2.28136E-03, 2.37278E-03, 
     X 2.25313E-03, 2.47836E-03, 2.77858E-03, 2.89803E-03, 2.86131E-03, 
     X 3.14118E-03, 3.14119E-03, 2.88881E-03, 3.19502E-03, 2.99538E-03, 
     X 2.91212E-03, 3.22739E-03, 3.05960E-03, 3.18901E-03, 3.05805E-03, 
     X 3.12205E-03, 2.95636E-03, 3.24111E-03, 3.29433E-03, 3.09206E-03, 
     X 3.06696E-03, 2.97735E-03, 2.90897E-03, 2.88979E-03, 2.75105E-03, 
     X 2.92156E-03, 3.03445E-03, 2.91664E-03, 2.85559E-03, 2.98405E-03, 
     X 2.95376E-03, 2.80234E-03, 2.78349E-03, 2.73421E-03, 2.70035E-03, 
     X 2.60074E-03, 2.34840E-03, 2.37626E-03, 2.32927E-03, 2.20842E-03, 
     X 2.31080E-03, 2.42771E-03, 2.43339E-03, 2.53280E-03, 2.37093E-03, 
     X 2.37377E-03, 2.73453E-03, 2.60836E-03, 2.55568E-03, 2.44062E-03, 
     X 2.71093E-03, 2.64421E-03, 2.66969E-03, 2.55560E-03, 2.71800E-03, 
     X 2.79534E-03, 2.59070E-03, 2.55373E-03, 2.45272E-03, 2.55571E-03/ 
      DATA C10561 /                                                     
     X 2.54606E-03, 2.57349E-03, 2.46807E-03, 2.35634E-03, 2.44470E-03, 
     X 2.47050E-03, 2.57131E-03, 2.71649E-03, 2.58800E-03, 2.54524E-03, 
     X 2.69505E-03, 2.89122E-03, 2.77399E-03, 2.63306E-03, 2.82269E-03, 
     X 2.95684E-03, 3.07415E-03, 2.70594E-03, 2.65650E-03, 2.90613E-03, 
     X 2.96666E-03, 2.94767E-03, 2.81765E-03, 2.64829E-03, 2.43062E-03, 
     X 2.33816E-03, 2.38210E-03, 2.45701E-03, 2.38508E-03, 2.40746E-03, 
     X 2.49779E-03, 2.28209E-03, 2.26185E-03, 2.26604E-03, 2.19232E-03, 
     X 2.19160E-03, 2.32246E-03, 2.11108E-03, 2.26220E-03, 2.26849E-03, 
     X 2.34787E-03, 2.49323E-03, 2.46872E-03, 2.52974E-03, 2.35858E-03, 
     X 2.36865E-03, 2.33533E-03, 2.21338E-03, 2.24610E-03, 2.24776E-03, 
     X 2.24423E-03, 2.29276E-03, 2.18487E-03, 2.27621E-03, 2.31141E-03, 
     X 2.44095E-03, 2.45198E-03, 2.56919E-03, 2.56823E-03, 2.41982E-03, 
     X 2.39968E-03, 2.62447E-03, 2.55339E-03, 2.51556E-03, 2.47477E-03, 
     X 2.50276E-03, 2.48381E-03, 2.48484E-03, 2.48316E-03, 2.38541E-03, 
     X 2.41183E-03, 2.55888E-03, 2.42810E-03, 2.43356E-03, 2.25996E-03, 
     X 2.34736E-03, 2.10305E-03, 2.13870E-03, 2.17472E-03, 2.05354E-03/ 
      DATA C10641 /                                                     
     X 2.11572E-03, 2.19557E-03, 2.09545E-03, 2.07831E-03, 1.94425E-03, 
     X 1.89333E-03, 1.98025E-03, 1.98328E-03, 2.01702E-03, 1.98333E-03, 
     X 2.01150E-03, 2.02484E-03, 2.10759E-03, 2.11892E-03, 2.10175E-03, 
     X 2.05314E-03, 2.13338E-03, 2.25764E-03, 2.19055E-03, 2.10818E-03, 
     X 2.05100E-03, 2.05685E-03, 2.10843E-03, 2.10228E-03, 2.10646E-03, 
     X 2.22640E-03, 2.31253E-03, 2.31230E-03, 2.21885E-03, 2.19568E-03, 
     X 2.23583E-03, 2.34754E-03, 2.28622E-03, 2.21876E-03, 2.26679E-03, 
     X 2.30828E-03, 2.24944E-03, 2.13851E-03, 2.02938E-03, 1.96770E-03, 
     X 2.05953E-03, 2.13814E-03, 2.03158E-03, 2.24655E-03, 1.95119E-03, 
     X 2.12979E-03, 2.08581E-03, 2.02434E-03, 1.98926E-03, 1.98792E-03, 
     X 1.97237E-03, 1.93397E-03, 1.92360E-03, 1.90805E-03, 1.89300E-03, 
     X 1.83548E-03, 1.87215E-03, 1.85589E-03, 1.85718E-03, 1.79361E-03, 
     X 1.77984E-03, 1.91506E-03, 2.04256E-03, 2.04095E-03, 1.94031E-03, 
     X 1.90447E-03, 2.02049E-03, 1.98360E-03, 2.04364E-03, 2.02519E-03, 
     X 2.20802E-03, 1.96964E-03, 1.94559E-03, 2.09922E-03, 2.11184E-03, 
     X 2.05706E-03, 2.02257E-03, 2.01781E-03, 2.01055E-03, 1.86538E-03/ 
      DATA C10721 /                                                     
     X 1.86899E-03, 1.76798E-03, 1.85871E-03, 1.95363E-03, 1.96404E-03, 
     X 1.84169E-03, 1.82851E-03, 1.84582E-03, 1.81997E-03, 1.76461E-03, 
     X 1.68384E-03, 1.65530E-03, 1.73550E-03, 1.62463E-03, 1.68793E-03, 
     X 1.60472E-03, 1.67560E-03, 1.67431E-03, 1.61779E-03, 1.66446E-03, 
     X 1.66403E-03, 1.55724E-03, 1.62351E-03, 1.71545E-03, 1.69645E-03, 
     X 1.59540E-03, 1.62948E-03, 1.66784E-03, 1.66416E-03, 1.66131E-03, 
     X 1.71502E-03, 1.76555E-03, 1.75182E-03, 1.72327E-03, 1.72338E-03, 
     X 1.69993E-03, 1.78819E-03, 1.73517E-03, 1.74802E-03, 1.81751E-03, 
     X 1.70973E-03, 1.65075E-03, 1.70784E-03, 1.73655E-03, 1.71670E-03, 
     X 1.67367E-03, 1.69338E-03, 1.61772E-03, 1.54914E-03, 1.56009E-03, 
     X 1.59467E-03, 1.60761E-03, 1.57117E-03, 1.54045E-03, 1.53102E-03, 
     X 1.44516E-03, 1.49898E-03, 1.56048E-03, 1.60087E-03, 1.62636E-03, 
     X 1.62472E-03, 1.53931E-03, 1.55536E-03, 1.61649E-03, 1.66493E-03, 
     X 1.86915E-03, 1.59984E-03, 1.60483E-03, 1.66549E-03, 1.73449E-03, 
     X 1.73673E-03, 1.68393E-03, 1.67434E-03, 1.77880E-03, 1.76154E-03, 
     X 1.43028E-03, 1.69651E-03, 1.60934E-03, 1.69413E-03, 1.70514E-03/ 
      DATA C10801 /                                                     
     X 1.62471E-03, 1.74854E-03, 1.76480E-03, 1.63495E-03, 1.59364E-03, 
     X 1.39603E-03, 1.47897E-03, 1.49509E-03, 1.70002E-03, 1.63048E-03, 
     X 1.44807E-03, 1.45071E-03, 1.53998E-03, 1.45276E-03, 1.29129E-03, 
     X 1.52900E-03, 1.64444E-03, 1.37450E-03, 1.42574E-03, 1.47355E-03, 
     X 1.51202E-03, 1.54376E-03, 1.51421E-03, 1.43989E-03, 1.45732E-03, 
     X 1.42912E-03, 1.59906E-03, 1.56748E-03, 1.52383E-03, 1.47665E-03, 
     X 1.51465E-03, 1.55582E-03, 1.54521E-03, 1.55189E-03, 1.56772E-03, 
     X 1.45401E-03, 1.55775E-03, 1.43120E-03, 1.39659E-03, 1.41451E-03, 
     X 1.45157E-03, 1.48303E-03, 1.42540E-03, 1.26387E-03, 1.37479E-03, 
     X 1.46381E-03, 1.38134E-03, 1.32733E-03, 1.38030E-03, 1.44619E-03, 
     X 1.41344E-03, 1.31982E-03, 1.24944E-03, 1.20096E-03, 1.21107E-03, 
     X 1.27999E-03, 1.22523E-03, 1.22193E-03, 1.35957E-03, 1.41427E-03, 
     X 1.35679E-03, 1.15438E-03, 1.41184E-03, 1.49093E-03, 1.32193E-03, 
     X 1.25009E-03, 1.37625E-03, 1.49022E-03, 1.44180E-03, 1.27628E-03, 
     X 1.29670E-03, 1.31636E-03, 1.28874E-03, 1.31177E-03, 1.35732E-03, 
     X 1.33854E-03, 1.30253E-03, 1.31374E-03, 1.27379E-03, 1.18339E-03/ 
      DATA C10881 /                                                     
     X 1.22016E-03, 1.26551E-03, 1.26371E-03, 1.28180E-03, 1.36024E-03, 
     X 1.45759E-03, 1.29413E-03, 1.35858E-03, 1.26528E-03, 1.18623E-03, 
     X 1.21812E-03, 1.28799E-03, 1.37028E-03, 1.29268E-03, 1.27639E-03, 
     X 1.19487E-03, 1.23542E-03, 1.25010E-03, 1.17418E-03, 1.13914E-03, 
     X 1.21951E-03, 1.13780E-03, 1.16443E-03, 1.17883E-03, 1.11982E-03, 
     X 1.05708E-03, 1.04865E-03, 1.05884E-03, 1.06599E-03, 1.13828E-03, 
     X 1.10373E-03, 1.07739E-03, 1.04632E-03, 1.06118E-03, 1.15445E-03, 
     X 1.17300E-03, 1.00675E-03, 1.04235E-03, 1.08398E-03, 1.06587E-03, 
     X 1.05536E-03, 1.08614E-03, 1.09026E-03, 1.09141E-03, 1.13051E-03, 
     X 1.08667E-03, 1.04016E-03, 1.04897E-03, 1.08894E-03, 1.09682E-03, 
     X 1.09638E-03, 9.79254E-04, 1.00668E-03, 1.02569E-03, 1.00581E-03, 
     X 9.74433E-04, 9.66321E-04, 9.78440E-04, 9.01587E-04, 1.02149E-03, 
     X 9.87464E-04, 9.41872E-04, 9.05021E-04, 8.59547E-04, 9.03963E-04, 
     X 8.66415E-04, 8.84726E-04, 8.77087E-04, 8.70584E-04, 8.81338E-04, 
     X 8.97658E-04, 8.97586E-04, 9.19028E-04, 8.82438E-04, 9.00710E-04, 
     X 9.54329E-04, 9.54490E-04, 9.10940E-04, 9.95472E-04, 9.50134E-04/ 
      DATA C10961 /                                                     
     X 9.17127E-04, 9.70916E-04, 9.87575E-04, 9.65026E-04, 9.71779E-04, 
     X 1.00967E-03, 1.00053E-03, 9.26063E-04, 9.34721E-04, 9.76354E-04, 
     X 9.78436E-04, 9.36012E-04, 9.64448E-04, 9.95903E-04, 9.89960E-04, 
     X 9.41143E-04, 9.04393E-04, 8.84719E-04, 8.41396E-04, 8.67234E-04, 
     X 8.55864E-04, 8.63314E-04, 8.72317E-04, 8.40899E-04, 7.79593E-04, 
     X 7.88481E-04, 8.21075E-04, 7.38342E-04, 7.56537E-04, 7.57278E-04, 
     X 7.35854E-04, 7.32765E-04, 6.67398E-04, 7.45338E-04, 7.33094E-04, 
     X 7.01840E-04, 6.85595E-04, 6.95740E-04, 7.24015E-04, 7.00907E-04, 
     X 7.28498E-04, 6.89410E-04, 6.91728E-04, 7.40601E-04, 7.62775E-04, 
     X 7.40912E-04, 7.35021E-04, 7.07799E-04, 7.54113E-04, 8.44845E-04, 
     X 8.53956E-04, 6.42186E-04, 7.40557E-04, 7.54340E-04, 7.55544E-04, 
     X 7.88986E-04, 7.97902E-04, 6.98460E-04, 7.74873E-04, 6.81178E-04, 
     X 7.15567E-04, 7.56723E-04, 7.98438E-04, 8.83150E-04, 8.45671E-04, 
     X 7.40924E-04, 7.35498E-04, 7.77829E-04, 6.93566E-04, 5.10188E-04, 
     X 7.52717E-04, 6.94185E-04, 6.71928E-04, 6.73286E-04, 6.89415E-04, 
     X 7.22917E-04, 7.89448E-04, 8.53812E-04, 7.45132E-04, 7.68732E-04/ 
      DATA C11041 /                                                     
     X 8.10104E-04, 7.55615E-04, 7.09145E-04, 6.80676E-04, 7.54594E-04, 
     X 7.89416E-04, 7.88579E-04, 7.49805E-04, 6.13534E-04, 7.22491E-04, 
     X 7.95410E-04, 7.80604E-04, 7.74283E-04, 7.93224E-04, 6.86522E-04, 
     X 8.06038E-04, 8.30285E-04, 8.37763E-04, 8.03863E-04, 7.33526E-04, 
     X 7.42588E-04, 6.31046E-04, 8.16153E-04, 8.95391E-04, 8.61330E-04, 
     X 8.38726E-04, 8.16761E-04, 8.16118E-04, 6.37058E-04, 6.30868E-04, 
     X 7.26410E-04, 7.03464E-04, 5.93454E-04, 6.01985E-04, 6.51157E-04, 
     X 6.68569E-04, 6.56297E-04, 6.58732E-04, 5.99721E-04, 5.34301E-04, 
     X 5.33271E-04, 5.57992E-04, 5.70096E-04, 5.59932E-04, 5.32110E-04, 
     X 5.64713E-04, 6.25026E-04, 6.38973E-04, 6.05323E-04, 7.17460E-04, 
     X 6.19407E-04, 5.90228E-04, 5.43682E-04, 5.38446E-04, 6.56146E-04, 
     X 6.09081E-04, 6.04737E-04, 6.45526E-04, 6.46978E-04, 5.89738E-04, 
     X 5.63852E-04, 6.18018E-04, 5.71768E-04, 5.75433E-04, 6.05766E-04, 
     X 5.93065E-04, 5.31708E-04, 5.41187E-04, 5.76985E-04, 5.78176E-04, 
     X 5.75339E-04, 6.85426E-04, 5.51038E-04, 6.02049E-04, 6.20406E-04, 
     X 5.80169E-04, 5.36399E-04, 5.59608E-04, 5.46575E-04, 5.66979E-04/ 
      DATA C11121 /                                                     
     X 5.94982E-04, 6.18469E-04, 6.56281E-04, 8.22124E-04, 7.81716E-04, 
     X 7.29616E-04, 7.14460E-04, 7.08969E-04, 6.53794E-04, 7.33138E-04, 
     X 8.29513E-04, 8.99395E-04, 9.05526E-04, 7.98257E-04, 7.86935E-04, 
     X 6.10797E-04, 4.63912E-04, 4.05675E-04, 3.66230E-04, 4.86472E-04, 
     X 5.31818E-04, 5.15865E-04, 4.87344E-04, 4.99857E-04, 5.35479E-04, 
     X 5.27561E-04, 4.99000E-04, 4.77056E-04, 4.74242E-04, 4.66595E-04, 
     X 4.66325E-04, 4.94704E-04, 5.12842E-04, 5.01795E-04, 4.80789E-04, 
     X 5.73709E-04, 5.65214E-04, 5.11321E-04, 4.55242E-04, 4.29330E-04, 
     X 5.09792E-04, 4.70489E-04, 4.82859E-04, 4.99195E-04, 4.07724E-04, 
     X 4.99951E-04, 4.55755E-04, 4.42528E-04, 4.19433E-04, 3.31325E-04, 
     X 3.70517E-04, 3.77708E-04, 2.97923E-04, 2.27470E-04, 2.47389E-04, 
     X 2.38324E-04, 2.56706E-04, 2.45046E-04, 2.62539E-04, 3.37054E-04, 
     X 3.33930E-04, 3.01390E-04, 3.08028E-04, 3.41464E-04, 3.70574E-04, 
     X 3.47893E-04, 3.28433E-04, 3.46976E-04, 3.60351E-04, 3.50559E-04, 
     X 3.56070E-04, 3.62782E-04, 3.37330E-04, 3.33763E-04, 3.57046E-04, 
     X 3.08784E-04, 2.93898E-04, 2.80842E-04, 2.54114E-04, 2.38198E-04/ 
      DATA C11201 /                                                     
     X 3.48753E-04, 2.97334E-04, 2.82929E-04, 2.94150E-04, 3.07875E-04, 
     X 3.21129E-04, 3.38335E-04, 3.49826E-04, 3.47647E-04, 3.35438E-04, 
     X 3.58145E-04, 3.72391E-04, 3.59372E-04, 3.64755E-04, 4.16867E-04, 
     X 3.43614E-04, 3.34932E-04, 3.12782E-04, 3.28220E-04, 4.32595E-04, 
     X 3.49513E-04, 3.51861E-04, 3.81166E-04, 3.91194E-04, 3.38944E-04, 
     X 2.63445E-04, 2.49520E-04, 2.46184E-04, 2.33203E-04, 2.16315E-04, 
     X 1.89536E-04, 1.95730E-04, 1.99664E-04, 1.77139E-04, 1.27969E-04, 
     X 5.17216E-05, 7.60445E-05, 1.24418E-04, 1.30989E-04, 2.31539E-04, 
     X 2.21334E-04, 2.08757E-04, 2.18351E-04, 2.46202E-04, 2.29824E-04, 
     X 2.28909E-04, 2.88826E-04, 3.58039E-04, 2.60800E-04, 2.33025E-04, 
     X 2.52667E-04, 2.61394E-04, 2.31384E-04, 2.29388E-04, 2.54701E-04, 
     X 2.21158E-04, 1.61506E-04, 1.36752E-04, 1.69481E-04, 8.64539E-05, 
     X 1.64407E-04, 3.65674E-04, 3.18233E-04, 4.00755E-04, 3.33375E-04, 
     X 2.62930E-04, 2.87052E-04, 2.51395E-04, 2.85274E-04, 2.66915E-04, 
     X 2.10866E-04, 1.89517E-04, 1.67378E-04, 2.79951E-04, 2.97224E-04, 
     X 1.89222E-04, 3.33825E-04, 3.56386E-04, 3.89727E-04, 4.30407E-04/ 
      DATA C11281 /                                                     
     X 4.45922E-04, 4.23446E-04, 4.41347E-04, 4.06723E-04, 3.00181E-04, 
     X 1.85243E-04, 3.13176E-04, 4.08991E-04, 4.24776E-04, 3.56412E-04, 
     X 3.84760E-04, 2.30602E-04, 1.77702E-04, 2.62329E-04, 2.49442E-04, 
     X 3.76212E-04, 3.69176E-04, 2.97681E-04, 2.71662E-04, 2.05694E-04, 
     X 2.11418E-04, 2.25439E-04, 2.27013E-04, 2.47845E-04, 3.14603E-04, 
     X 2.68802E-04, 2.04334E-04, 2.77399E-04, 2.68273E-04, 2.04991E-04, 
     X 2.24441E-04, 3.55074E-04, 2.90135E-04, 3.35680E-04, 3.59358E-04, 
     X 3.44716E-04, 3.24496E-04, 3.48146E-04, 3.49042E-04, 3.54848E-04, 
     X 3.86418E-04, 3.59198E-04, 3.47608E-04, 3.20522E-04, 2.78401E-04, 
     X 2.64579E-04, 2.23694E-04, 2.34370E-04, 2.52559E-04, 1.88475E-04, 
     X 2.01258E-04, 1.63979E-04, 1.45384E-04, 1.91215E-04, 1.76958E-04, 
     X 1.69167E-04, 1.71767E-04, 1.86595E-04, 2.14969E-04, 2.48345E-04, 
     X 2.46691E-04, 2.25234E-04, 2.26755E-04, 1.64112E-04, 1.87750E-04, 
     X 2.22984E-04, 2.00443E-04, 2.38863E-04, 2.77590E-04, 2.91953E-04, 
     X 2.80611E-04, 3.08215E-04, 1.79095E-04, 1.46920E-04, 2.29177E-04, 
     X 2.54685E-04, 2.68866E-04, 2.13346E-04, 1.20122E-04, 5.55240E-05/ 
      DATA C11361 /                                                     
     X 5.99017E-05, 1.07768E-04, 1.67810E-04, 2.06886E-04, 2.36232E-04, 
     X 2.24598E-04, 2.30792E-04, 2.71274E-04, 1.29062E-04, 1.92624E-04, 
     X 2.38438E-04, 1.98994E-04, 1.81687E-04, 2.55733E-04, 2.84379E-04, 
     X 2.54459E-04, 2.30884E-04, 2.68873E-04, 3.07231E-04, 3.15063E-04, 
     X 2.46725E-04, 2.60370E-04, 2.66391E-04, 2.50708E-04, 2.04296E-04, 
     X 1.66011E-04, 1.19164E-04, 1.06700E-04, 1.77576E-04, 1.91741E-04, 
     X 1.66618E-04, 1.49824E-04, 1.80699E-04, 2.20905E-04, 1.38754E-04, 
     X 6.27971E-05, 7.52567E-05, 1.89995E-04, 1.72489E-04, 1.40424E-04, 
     X 1.52384E-04, 1.63942E-04, 1.19901E-04, 1.49234E-04, 2.68313E-04, 
     X 2.08815E-04, 1.17218E-04, 1.42235E-04, 2.71237E-04, 1.38192E-04, 
     X 2.15643E-04, 2.84476E-04, 2.78117E-04, 2.19234E-04, 1.59128E-04, 
     X 1.78819E-04, 2.67785E-04, 2.66786E-04, 2.58545E-04, 2.68476E-04, 
     X 2.88542E-04, 2.59726E-04, 3.00936E-04, 3.11237E-04, 2.61275E-04, 
     X 1.37136E-04, 2.76566E-04, 3.82888E-04, 3.97564E-04, 4.43655E-04, 
     X 3.15415E-04, 2.60869E-04, 3.19171E-04, 3.34205E-04, 2.02914E-04, 
     X 1.16223E-04, 1.14737E-04, 6.10978E-05,-8.03695E-06,-1.07062E-05/ 
      DATA C11441 /                                                     
     X 6.50664E-05, 1.12586E-04, 1.56727E-04, 1.57927E-04, 1.05762E-04, 
     X 1.03646E-04, 1.72520E-04, 2.23668E-04, 2.12775E-04, 2.33525E-04, 
     X 2.75558E-04, 2.34256E-04, 5.10062E-05, 1.76007E-04, 1.70850E-04, 
     X 1.43266E-04, 1.89626E-04, 2.97283E-04, 3.02773E-04, 2.74401E-04, 
     X 3.00754E-04, 3.66813E-04, 3.54383E-04, 2.90580E-04, 2.32206E-04, 
     X 1.58405E-04, 1.54663E-04, 1.84598E-04, 1.26408E-04, 2.14481E-04, 
     X 2.00791E-04, 1.05796E-04, 2.39794E-04, 1.66105E-04, 7.88615E-05, 
     X 4.30615E-05, 7.37518E-05, 1.24926E-04, 1.38295E-04, 8.54356E-05, 
     X 6.12641E-05, 6.54466E-05, 6.17727E-05, 1.30688E-05, 6.00462E-05, 
     X 1.52612E-04, 2.11656E-04, 9.67692E-05, 8.67858E-05, 1.34888E-04, 
     X 1.90899E-04, 1.03234E-04, 1.03837E-04, 1.49767E-04, 2.19058E-04, 
     X 2.26549E-04, 2.11506E-04, 1.85238E-04, 1.53774E-04, 1.32313E-04, 
     X 6.10658E-05, 2.37782E-05, 1.24450E-04, 1.87610E-04, 1.44775E-04, 
     X 5.60937E-05, 6.64032E-05, 1.28073E-04, 1.77512E-04, 1.84684E-04, 
     X 5.73677E-05, 5.29679E-05, 9.95510E-05, 1.61423E-04, 3.19036E-04, 
     X 3.17383E-04, 2.36505E-04, 1.80844E-04, 1.63722E-04, 1.21478E-04/ 
      DATA C11521 /                                                     
     X 6.85823E-05, 7.42058E-05, 1.14838E-04, 1.21131E-04, 8.01009E-05, 
     X 1.52058E-04, 2.18368E-04, 2.53416E-04, 2.27116E-04, 1.25336E-04, 
     X 6.26421E-05, 5.32471E-05, 1.34705E-04, 2.07005E-05,-5.18630E-05, 
     X-3.25696E-05,-8.06171E-05,-1.09430E-04,-1.05637E-04,-4.96066E-05, 
     X-7.76138E-05,-4.85930E-05, 3.65111E-06,-2.86933E-05,-4.61366E-05, 
     X-4.88820E-05,-3.08816E-05, 8.43778E-05, 1.40484E-04, 1.31125E-04, 
     X 3.55198E-05, 8.47412E-05, 1.23408E-04, 1.36799E-04, 1.21147E-04, 
     X 1.25585E-04, 1.32337E-04, 1.34092E-04, 1.26652E-04, 1.12131E-04, 
     X 1.00927E-04, 1.13828E-04, 1.06053E-04, 9.43643E-05, 8.33628E-05, 
     X 8.65842E-05, 7.59315E-05, 8.28623E-05, 1.39681E-04, 1.80492E-04, 
     X 1.65779E-04, 1.03843E-04, 3.10284E-05, 1.94408E-05, 4.57525E-05, 
     X 1.02436E-04, 1.39750E-04, 1.43342E-04, 1.11999E-04, 2.94197E-05, 
     X 2.76980E-05, 5.51685E-05, 9.39909E-05, 1.16108E-04, 7.72703E-05, 
     X 4.37409E-05, 1.13925E-04, 8.18872E-05, 2.87657E-05,-2.41413E-05, 
     X 1.24699E-05, 2.19589E-05,-5.88247E-06,-9.66151E-05,-2.06255E-05, 
     X-1.83148E-06,-5.63625E-05,-8.65590E-05,-8.26020E-05,-5.06239E-05/ 
      DATA C11601 /                                                     
     X 1.28065E-05,-1.34669E-05, 1.59701E-05, 9.44755E-05, 1.63032E-05, 
     X 2.51304E-05, 7.38226E-05, 1.28405E-04, 1.17413E-04, 9.92387E-05, 
     X 9.51533E-05, 2.17008E-04, 2.25854E-04, 1.90448E-04, 1.77207E-04, 
     X 1.80844E-04, 1.53501E-04, 9.80430E-05, 1.27404E-04, 1.16465E-04, 
     X 9.98611E-05, 1.25556E-04, 1.73627E-04, 1.12347E-04,-7.73523E-05, 
     X 5.66599E-05, 5.36347E-05, 1.20227E-06, 6.96325E-05, 4.79010E-05, 
     X-1.09886E-05,-9.16457E-05,-7.09170E-05,-5.31410E-05,-2.68376E-05, 
     X 6.32641E-05, 8.06052E-06,-4.99262E-05,-2.56644E-05,-8.76854E-05, 
     X-8.21360E-05,-5.02403E-06, 4.66629E-05, 6.93127E-05, 5.53828E-05, 
     X-2.32399E-05,-2.07514E-05,-7.33240E-05,-2.10483E-04,-1.53757E-04, 
     X-7.13861E-05,-1.07356E-05,-1.26578E-04,-7.48854E-05, 3.25418E-06, 
     X 2.97068E-05, 3.35685E-05, 3.15022E-05, 2.68904E-05, 3.87401E-05, 
     X 5.12522E-05, 5.12172E-05, 1.05053E-05, 1.65321E-05, 3.47537E-05, 
     X 5.62503E-05, 4.18666E-05, 3.13970E-05, 3.11750E-05, 7.21547E-05, 
     X 2.55262E-05,-2.76061E-05, 5.43449E-06,-5.20575E-05,-1.08627E-04, 
     X-1.40475E-04,-1.59926E-04,-1.32237E-04,-8.15458E-05,-1.31738E-04/ 
      DATA C11681 /                                                     
     X-1.64036E-04,-1.69351E-04,-1.24797E-04,-1.61950E-04,-2.01904E-04, 
     X-2.22995E-04,-1.87647E-04,-1.70817E-04,-1.64583E-04,-1.12811E-04, 
     X-8.38306E-05,-8.62707E-05,-1.54362E-04,-1.98090E-04,-2.12920E-04, 
     X-1.89358E-04,-2.02988E-04,-1.72791E-04,-1.02863E-04,-1.09877E-04, 
     X-1.04257E-04,-8.20734E-05,-2.18346E-05,-2.94593E-05,-4.18226E-05, 
     X-1.86891E-05,-6.14620E-05,-3.21912E-05, 1.00844E-04, 6.92419E-05, 
     X 3.16713E-05, 5.62042E-07, 5.18900E-05, 7.48835E-05, 8.03381E-05, 
     X 7.24685E-05, 9.55588E-05, 9.22801E-05, 2.87159E-05, 2.26234E-05, 
     X 2.62790E-05, 3.58332E-05, 6.23297E-05, 5.01998E-05, 1.81446E-05, 
     X 3.33564E-05, 3.97765E-06,-2.60624E-05, 7.01802E-06,-4.16797E-05, 
     X-8.70108E-05,-8.22182E-05,-6.64886E-05,-7.88704E-05,-1.28305E-04, 
     X-1.29990E-04,-1.12646E-04,-8.68394E-05,-1.29584E-04,-1.44352E-04, 
     X-1.42082E-04,-1.33790E-04,-1.27963E-04,-1.21233E-04,-1.09965E-04, 
     X-1.02233E-04,-1.03804E-04,-1.19503E-04,-7.74707E-05,-4.66805E-05, 
     X-3.52201E-05,-4.07406E-05,-4.66887E-05,-5.05962E-05,-3.30333E-05, 
     X-3.47981E-05,-3.60962E-05, 1.44242E-05, 4.10478E-05, 3.68984E-05/ 
      DATA C11761 /                                                     
     X-2.81300E-05, 2.83171E-05, 7.48062E-05, 4.29333E-05, 8.50076E-06, 
     X 4.98135E-06, 4.44854E-05, 2.51860E-05, 3.12189E-05, 6.39424E-05, 
     X 7.20715E-05, 9.89688E-05, 1.33768E-04, 1.07781E-04, 9.76731E-05, 
     X 9.21479E-05, 6.72624E-05, 5.41295E-05, 4.89022E-05, 5.28039E-05, 
     X-4.48737E-06,-5.15409E-05,-3.57396E-05,-1.94752E-05,-2.09521E-05, 
     X-5.13096E-05,-2.62781E-05,-2.75451E-05,-6.98423E-05,-1.25462E-04, 
     X-1.68362E-04,-1.97456E-04,-1.90669E-04,-2.06890E-04,-2.36699E-04, 
     X-1.97732E-04,-1.76504E-04,-1.67505E-04,-1.60694E-04,-1.85851E-04, 
     X-2.01567E-04,-9.82507E-05,-1.33338E-04,-1.95199E-04,-1.40781E-04, 
     X-8.90988E-05,-3.63239E-05, 2.16510E-05,-1.56807E-05,-4.21285E-05, 
     X 5.50505E-06, 6.78937E-07, 3.12346E-06, 3.64202E-05, 3.50651E-05, 
     X 6.20423E-05, 1.38667E-04, 7.74738E-05, 6.77036E-05, 1.38367E-04, 
     X 1.17359E-04, 1.06637E-04, 1.12404E-04, 9.78586E-05, 1.03178E-04, 
     X 1.28717E-04, 1.56642E-04, 1.62544E-04, 1.50109E-04, 1.43214E-04, 
     X 1.33651E-04, 1.24352E-04, 1.41420E-04, 1.36340E-04, 1.18769E-04, 
     X 1.31656E-04, 8.81533E-05, 1.55214E-05,-3.68736E-07,-1.76213E-05/ 
      DATA C11841 /                                                     
     X-2.85341E-05, 4.65155E-06, 5.41350E-06,-7.01247E-06, 6.57918E-06, 
     X-2.45784E-05,-6.89104E-05,-6.90953E-05,-6.23937E-05,-6.72978E-05, 
     X-1.39547E-04,-1.44228E-04,-1.42543E-04,-2.31080E-04,-2.12756E-04, 
     X-1.62089E-04,-1.66063E-04,-1.61872E-04,-1.59764E-04,-1.80217E-04, 
     X-1.38355E-04,-8.45661E-05,-7.58308E-05,-4.65144E-05,-2.76855E-05, 
     X-7.48714E-05,-8.28561E-05,-6.45277E-05,-7.08509E-06,-1.05566E-05, 
     X-1.96352E-05, 3.55561E-05, 2.24676E-05,-1.25648E-05,-1.87661E-05, 
     X 6.99061E-06, 2.33676E-05,-5.25111E-05,-3.86758E-05, 1.03585E-06, 
     X-1.65901E-05,-1.04855E-05, 5.03694E-06, 1.25937E-05,-8.31340E-06, 
     X-4.37906E-05,-7.91444E-05,-4.62167E-05, 5.14238E-06,-4.52863E-05, 
     X-5.86455E-05,-4.98093E-05,-3.03495E-05,-5.09377E-05,-8.88116E-05, 
     X-6.21360E-05,-7.38148E-05,-1.07502E-04,-7.55276E-05,-6.39257E-05, 
     X-6.86921E-05,-8.05504E-05,-9.24178E-05,-1.03991E-04,-1.00468E-04, 
     X-6.71447E-05,-3.84897E-06,-5.99067E-06,-2.21894E-05,-5.21766E-05, 
     X-3.93796E-05,-4.06712E-05,-6.21649E-05,-1.13073E-04,-1.20560E-04, 
     X-5.92397E-05, 5.24432E-05, 9.41628E-05,-3.47458E-07, 5.33267E-05/ 
      DATA C11921 /                                                     
     X 8.92961E-05, 2.75694E-05,-7.48460E-06,-2.15504E-05, 1.05501E-06, 
     X 6.30910E-06, 5.94620E-07,-2.45194E-05,-1.59657E-05, 7.93610E-07, 
     X-1.05319E-05,-2.36584E-05,-3.95700E-05,-6.57225E-05,-5.23797E-05, 
     X-1.82588E-05,-1.43240E-05,-3.29989E-05,-6.48909E-05,-2.41326E-05, 
     X-1.89195E-05,-4.64607E-05,-1.00739E-05,-1.35033E-05,-6.49945E-05, 
     X-5.19986E-05,-6.68505E-05,-1.31530E-04,-1.45464E-04,-1.46815E-04, 
     X-1.39684E-04,-1.23205E-04,-1.26738E-04,-1.93822E-04,-2.37508E-04, 
     X-2.52917E-04,-1.91110E-04,-1.36217E-04,-9.41093E-05,-1.20601E-04, 
     X-1.17295E-04,-9.57420E-05,-1.57227E-04,-1.62795E-04,-1.12201E-04, 
     X-1.20419E-04,-1.10597E-04,-7.61223E-05,-6.27167E-05,-5.54733E-05, 
     X-5.50437E-05,-5.14148E-05,-3.59591E-05, 1.09906E-05, 5.94396E-06, 
     X-1.38597E-05,-8.80857E-06,-3.13101E-05,-6.31715E-05,-4.04264E-05, 
     X-1.66405E-05, 7.94396E-06,-3.41772E-06,-4.03175E-05,-1.06888E-04, 
     X-9.50526E-05,-7.46111E-05,-5.09617E-05,-6.70981E-05,-7.93529E-05, 
     X-5.58423E-05,-1.01523E-04,-1.62269E-04,-1.69958E-04,-1.37786E-04, 
     X-8.79862E-05,-1.46838E-04,-1.66938E-04,-1.51380E-04,-1.62184E-04/ 
      DATA C12001 /                                                     
     X-1.61105E-04,-1.42088E-04,-1.57033E-04,-1.65294E-04,-1.45079E-04, 
     X-9.76982E-05,-6.09891E-05,-1.01719E-04,-1.03049E-04,-8.85546E-05, 
     X-1.47754E-04,-1.44542E-04,-8.34620E-05,-8.99440E-05,-7.11901E-05, 
     X-1.57480E-05,-8.81797E-05,-1.56314E-04,-1.65952E-04,-1.80986E-04, 
     X-2.04610E-04,-2.58669E-04,-2.16016E-04,-1.21582E-04,-1.44929E-04, 
     X-1.72886E-04,-2.05950E-04,-1.93829E-04,-1.67518E-04,-1.22969E-04, 
     X-1.13060E-04,-1.14854E-04,-1.26198E-04,-1.24288E-04,-1.19519E-04, 
     X-1.50456E-04,-1.53286E-04,-1.32231E-04,-7.42672E-05,-2.23129E-05, 
     X 1.79115E-05, 1.42073E-05,-1.21676E-05,-7.56567E-05,-1.03423E-04, 
     X-1.10373E-04,-8.77244E-05,-6.43485E-05,-4.05156E-05,-6.24405E-05, 
     X-5.70375E-05,-2.36695E-06,-3.75929E-05,-7.97119E-05,-6.70419E-05, 
     X-6.99475E-05,-8.19748E-05,-1.06895E-04,-1.31422E-04,-1.55438E-04, 
     X-1.61937E-04,-1.62626E-04,-1.54977E-04,-1.77814E-04,-2.00386E-04, 
     X-1.87407E-04,-2.07243E-04,-2.44672E-04,-2.19014E-04,-2.13695E-04, 
     X-2.32440E-04,-1.85194E-04,-1.51172E-04,-1.69834E-04,-1.73780E-04, 
     X-1.75232E-04,-2.00698E-04,-1.82826E-04,-1.27786E-04,-1.33633E-04/ 
      DATA C12081 /                                                     
     X-1.21317E-04,-7.50390E-05,-1.06743E-04,-1.40805E-04,-1.06336E-04, 
     X-9.46654E-05,-9.78182E-05,-1.19906E-04,-1.14160E-04,-7.28186E-05, 
     X-1.07652E-04,-1.20978E-04,-3.79658E-05,-3.16113E-05,-6.02417E-05, 
     X-7.51148E-05,-5.56145E-05,-6.77421E-06,-1.74321E-05,-4.67952E-05, 
     X-1.05000E-04,-6.29932E-05,-4.74356E-06,-2.83397E-05,-4.65192E-05, 
     X-6.04574E-05,-4.33970E-05,-3.18311E-05,-3.02321E-05,-4.49667E-05, 
     X-6.85347E-05,-1.11375E-04,-1.16293E-04,-9.38757E-05,-1.38594E-04, 
     X-1.60483E-04,-1.48344E-04,-1.33436E-04,-1.27387E-04,-1.59508E-04, 
     X-1.74026E-04,-1.72170E-04,-1.49196E-04,-1.33233E-04,-1.22382E-04, 
     X-1.78156E-04,-2.21349E-04,-2.41846E-04,-2.06549E-04,-1.68283E-04, 
     X-1.89512E-04,-1.44523E-04,-4.67953E-05,-1.00334E-04,-1.23478E-04, 
     X-8.14024E-05,-9.18016E-05,-1.17536E-04,-1.36160E-04,-1.38780E-04, 
     X-1.27749E-04,-1.45598E-04,-1.55964E-04,-1.45120E-04,-1.25544E-04, 
     X-1.05692E-04,-1.17639E-04,-1.24142E-04,-1.24749E-04,-1.63878E-04, 
     X-1.97021E-04,-1.98617E-04,-2.69136E-04,-3.68357E-04,-2.33702E-04, 
     X-1.61830E-04,-1.78578E-04,-2.01839E-04,-2.28731E-04,-2.63606E-04/ 
      DATA C12161 /                                                     
     X-2.44698E-04,-1.86451E-04,-2.20546E-04,-2.22752E-04,-1.55169E-04, 
     X-1.25100E-04,-1.09794E-04,-9.59016E-05,-1.03857E-04,-1.35573E-04, 
     X-1.73780E-04,-1.82457E-04,-9.39821E-05,-1.18245E-04,-2.11563E-04, 
     X-1.37392E-04,-9.28173E-05,-9.71073E-05,-9.72535E-05,-9.39557E-05, 
     X-7.50117E-05,-6.70754E-05,-7.01186E-05,-5.76151E-05,-5.18785E-05, 
     X-7.14209E-05,-7.01682E-05,-5.61614E-05,-8.92769E-05,-1.06238E-04, 
     X-9.70294E-05,-6.70229E-05,-4.69214E-05,-1.53105E-04,-2.02326E-04, 
     X-1.90395E-04,-2.04367E-04,-2.16787E-04,-2.08725E-04,-1.78119E-04, 
     X-1.31043E-04,-1.32204E-04,-1.51522E-04,-2.05143E-04,-1.77144E-04, 
     X-1.16130E-04,-1.44440E-04,-1.66010E-04,-1.78206E-04,-1.61163E-04, 
     X-1.46351E-04,-1.96722E-04,-2.27027E-04,-2.37243E-04,-2.25235E-04, 
     X-1.99552E-04,-1.40238E-04,-1.26311E-04,-1.42746E-04,-1.19028E-04, 
     X-1.18750E-04,-1.72076E-04,-1.72120E-04,-1.48285E-04,-1.85116E-04, 
     X-1.98602E-04,-1.74016E-04,-1.37913E-04,-1.01221E-04,-9.69581E-05, 
     X-1.08794E-04,-1.39433E-04,-1.38575E-04,-1.32088E-04,-1.37431E-04, 
     X-1.30033E-04,-1.10829E-04,-1.35604E-04,-1.66515E-04,-1.98167E-04/ 
      DATA C12241 /                                                     
     X-1.97716E-04,-1.74019E-04,-1.64719E-04,-1.64779E-04,-1.85725E-04, 
     X-2.28526E-04,-2.84329E-04,-1.82449E-04,-1.30747E-04,-1.93620E-04, 
     X-2.28529E-04,-2.47361E-04,-1.90001E-04,-1.66278E-04,-2.02540E-04, 
     X-2.31811E-04,-2.53772E-04,-2.08629E-04,-1.85021E-04,-1.93989E-04, 
     X-2.16568E-04,-2.38288E-04,-1.94453E-04,-1.87154E-04,-2.30493E-04, 
     X-2.34696E-04,-2.30351E-04,-2.60562E-04,-2.86427E-04,-3.06699E-04, 
     X-2.79131E-04,-2.49392E-04,-3.03389E-04,-3.10346E-04,-2.61782E-04, 
     X-2.30905E-04,-2.11669E-04,-2.37680E-04,-2.38194E-04,-2.10955E-04/ 
      END                                                               
      BLOCK DATA BO3HH2                                                 
C>    BLOCK DATA                                                        
C                                                                       
C     RATIO (C2/C0)                                                     
C     DATA FROM BASS 1985                                               
C                                                                       
C     NOW INCLUDES MOLINA & MOLINA AT 273K WITH THE TEMPERATURE         
C     DEPENDENCE DETERMINED FROM THE 195K HARVARD MEASUREMENTS,         
C     EMPLOYING THE BASS ALGORITHM (CO(1+C1*T+C2*T2); THIS IS           
C     ONLY FOR THE WAVELENGTH RANGE FROM .34 TO .35 MICRONS;            
C     OTHERWISE, THE BASS DATA ALONE HAVE BEEN EMPLOYED BETWEEN         
C     .34 AND .245 MICRONS.                                             
C                                                                       
C     NEW T-DEPENDENT X-SECTIONS BETWEEN .345 AND .36 MICRONS           
C     HAVE NOW BEEN ADDED, BASED ON WORK BY CACCIANI, DISARRA           
C     AND FIOCCO, UNIVERSITY OF ROME, 1987.  QUADRATIC TEMP             
C     HAS BEEN DERIVED, AS ABOVE.                                       
C                                                                       
C     AGREEMENT AMONGST THE FOUR DATA SETS IS REASONABLE (<10%)         
C     AND OFTEN EXCELLENT (0-3%)                                        
C                                                                       
C                                                                       
      COMMON /O3HH2/  V1C,V2C,DVC,NC,                                   
     X           O32001(88),C20086(80),C20166(80),C20246(65),C20311(16),
     X           C20327(80),C20407(1),                                  
     X           C20001(80),C20081(80),C20161(80),C20241(80),C20321(80),
     X           C20401(80),C20481(80),C20561(80),C20641(80),C20721(80),
     X           C20801(80),C20881(80),C20961(80),C21041(80),C21121(80),
     X           C21201(80),C21281(80),C21361(80),C21441(80),C21521(80),
     X           C21601(80),C21681(80),C21761(80),C21841(80),C21921(80),
     X           C22001(80),C22081(80),C22161(80),C22241(40)            
C                                                                       
C     DATA V1C /29405./, V2C /40800./ ,DVC /5./, NC /2280/   BASS       
      DATA V1C /27370./, V2C /40800./ ,DVC /5./, NC /2690/              
C                                                                       
      DATA O32001/88*1.0E-5/                                            
                                                                        
      DATA C20086/                                                      
     X 1.29359E-05, 1.55806E-05, 2.00719E-05, 2.64912E-05, 3.48207E-05, 
     X 4.36986E-05, 5.31318E-05, 6.13173E-05, 6.89465E-05, 7.56793E-05, 
     X 8.26345E-05, 8.90916E-05, 9.38759E-05, 9.22998E-05, 9.03184E-05, 
     X 8.65369E-05, 8.58531E-05, 8.55635E-05, 8.40418E-05, 8.11983E-05, 
     X 7.58246E-05, 7.29282E-05, 7.32629E-05, 7.04060E-05, 6.71451E-05, 
     X 6.56515E-05, 6.68943E-05, 6.32785E-05, 5.88386E-05, 5.70860E-05, 
     X 5.64435E-05, 5.49441E-05, 5.70845E-05, 5.89357E-05, 6.14433E-05, 
     X 5.91790E-05, 5.31727E-05, 5.14007E-05, 4.74318E-05, 4.35356E-05, 
     X 3.93903E-05, 3.70963E-05, 3.63867E-05, 4.05296E-05, 4.48891E-05, 
     X 5.37190E-05, 5.70440E-05, 4.60408E-05, 5.25778E-05, 6.81728E-05, 
     X 7.27275E-05, 6.81353E-05, 6.48386E-05, 5.46521E-05, 4.93098E-05, 
     X 5.04438E-05, 5.30309E-05, 5.28788E-05, 5.47387E-05, 4.52523E-05, 
     X 5.29451E-05, 7.42215E-05, 1.08971E-04, 1.40085E-04, 1.46553E-04, 
     X 1.43526E-04, 1.39051E-04, 1.40983E-04, 1.45564E-04, 1.55589E-04, 
     X 1.66142E-04, 1.82840E-04, 2.06486E-04, 2.24339E-04, 2.29268E-04, 
     X 2.13109E-04, 2.00305E-04, 1.99955E-04, 2.18566E-04, 2.24182E-04/ 
      DATA C20166/                                                      
     X 2.33505E-04, 2.31824E-04, 2.22666E-04, 2.23905E-04, 2.38131E-04, 
     X 2.54322E-04, 2.69548E-04, 2.62953E-04, 2.67609E-04, 2.70567E-04, 
     X 2.70689E-04, 2.68251E-04, 2.66029E-04, 2.60053E-04, 2.61689E-04, 
     X 2.56582E-04, 2.43655E-04, 2.38792E-04, 2.45309E-04, 2.31061E-04, 
     X 2.22837E-04, 2.16440E-04, 2.19032E-04, 1.85634E-04, 1.74638E-04, 
     X 1.51767E-04, 1.38480E-04, 1.32506E-04, 1.28317E-04, 1.26855E-04, 
     X 1.27123E-04, 1.24040E-04, 1.19202E-04, 1.28649E-04, 1.36271E-04, 
     X 1.42080E-04, 1.47804E-04, 1.39534E-04, 1.27284E-04, 1.09554E-04, 
     X 8.69470E-05, 6.72096E-05, 5.23407E-05, 5.12433E-05, 5.15794E-05, 
     X 4.94683E-05, 4.95809E-05, 4.07499E-05, 3.14984E-05, 1.46457E-05, 
     X 6.98660E-06, 1.85313E-05, 5.48879E-05, 1.09447E-04, 1.52536E-04, 
     X 1.78778E-04, 1.91128E-04, 1.99161E-04, 2.02937E-04, 1.95527E-04, 
     X 1.92214E-04, 1.83376E-04, 1.81710E-04, 1.82283E-04, 1.75182E-04, 
     X 1.72406E-04, 1.68170E-04, 1.67400E-04, 1.69469E-04, 1.69092E-04, 
     X 1.65985E-04, 1.66912E-04, 1.74226E-04, 1.85036E-04, 1.85517E-04, 
     X 1.85805E-04, 1.73809E-04, 1.67628E-04, 1.57690E-04, 1.54952E-04/ 
      DATA C20246/                                                      
     X 1.53707E-04, 1.57710E-04, 1.58175E-04, 1.67253E-04, 1.82079E-04, 
     X 1.91285E-04, 1.96564E-04, 2.03822E-04, 1.93736E-04, 1.82924E-04, 
     X 1.73610E-04, 1.69904E-04, 1.66725E-04, 1.63747E-04, 1.63129E-04, 
     X 1.62435E-04, 1.67218E-04, 1.69507E-04, 1.70744E-04, 1.65839E-04, 
     X 1.72077E-04, 1.67734E-04, 1.51487E-04, 1.43770E-04, 1.37435E-04, 
     X 1.25172E-04, 1.12395E-04, 1.07991E-04, 1.00345E-04, 9.36611E-05, 
     X 9.59763E-05, 9.26600E-05, 1.00120E-04, 1.04746E-04, 1.10222E-04, 
     X 1.03308E-04, 8.97457E-05, 7.91634E-05, 7.50275E-05, 8.30832E-05, 
     X 1.01191E-04, 1.21560E-04, 1.34840E-04, 1.38712E-04, 1.41746E-04, 
     X 1.39578E-04, 1.37052E-04, 1.33850E-04, 1.26641E-04, 1.21342E-04, 
     X 1.17669E-04, 1.25973E-04, 1.33623E-04, 1.33839E-04, 1.24427E-04, 
     X 1.02462E-04, 8.76101E-05, 8.27912E-05, 8.29040E-05, 7.78590E-05, 
     X 7.39042E-05, 6.45765E-05, 5.70151E-05, 5.11846E-05, 4.83163E-05/ 
      DATA C20311/                                                      
     X                                                     5.4470E-05,  
     X 5.3312E-05,  5.3135E-05,  5.3619E-05,  5.3686E-05,  5.2308E-05,  
     X 5.0441E-05,  4.8402E-05,  4.7476E-05,  4.6215E-05,  4.4507E-05,  
     X 4.3830E-05,  4.0508E-05,  3.8931E-05,  3.5525E-05,  3.4722E-05/  
      DATA C20327/                                                      
     X 3.2743E-05,  2.8456E-05,  2.8318E-05,  2.8132E-05,  2.6221E-05,  
     X 2.5673E-05,  2.5521E-05,  2.4588E-05,  2.4093E-05,  2.2787E-05,  
     X 2.1241E-05,  1.8553E-05,  1.5871E-05,  1.3462E-05,  1.2553E-05,  
     X 1.6276E-05,  2.8296E-05,  3.8817E-05,  4.2733E-05,  4.2429E-05,  
     X 4.0954E-05,  3.9868E-05,  3.7669E-05,  3.6312E-05,  3.5535E-05,  
     X 3.5895E-05,  3.6349E-05,  3.9033E-05,  4.4512E-05,  5.0066E-05,  
     X 5.4572E-05,  5.6710E-05,  5.6615E-05,  5.7520E-05,  5.8034E-05,  
     X 5.7927E-05,  5.6027E-05,  5.5242E-05,  5.4974E-05,  5.2927E-05,  
     X 5.1638E-05,  5.2027E-05,  5.1420E-05,  5.1618E-05,  5.0253E-05,  
     X 5.0509E-05,  4.9376E-05,  5.0135E-05,  4.9191E-05,  4.9210E-05,  
     X 4.8216E-05,  4.7487E-05,  4.5749E-05,  4.5884E-05,  4.3852E-05,  
     X 4.3824E-05,  4.2612E-05,  4.0349E-05,  4.0177E-05,  3.7474E-05,  
     X 3.8120E-05,  3.6915E-05,  3.5823E-05,  3.5186E-05,  3.3638E-05,  
     X 3.3451E-05,  3.2428E-05,  3.2349E-05,  3.0183E-05,  2.8436E-05,  
     X 2.6440E-05,  2.3597E-05,  2.1875E-05,  1.8164E-05,  1.6430E-05,  
     X 1.3159E-05,  9.2907E-06,  7.4243E-06,  6.0469E-06,  5.4951E-06/  
      DATA C20407/                                                      
     X 8.7642E-06/                                                      
      DATA C20001 /                                                     
     X 2.16295E-05, 1.69111E-05, 5.39633E-05, 1.01866E-04, 8.28657E-05, 
     X 9.16593E-05, 8.88666E-05, 1.37764E-04, 1.44322E-04, 1.20659E-04, 
     X 1.10332E-04, 1.01317E-04, 9.09964E-05, 1.17148E-04, 1.18000E-04, 
     X 7.21801E-05, 1.10550E-04, 1.32672E-04, 1.02474E-04, 1.10434E-04, 
     X 1.38759E-04, 8.92135E-05, 9.18239E-05, 9.08256E-05, 7.02969E-05, 
     X 1.12827E-04, 8.25561E-05, 1.39555E-04, 6.72239E-05, 7.82804E-05, 
     X 8.56258E-05, 8.61068E-05, 7.16732E-05, 6.25720E-05, 5.23957E-05, 
     X 3.78801E-05, 4.37281E-05, 4.99821E-05, 5.96976E-05, 7.19070E-05, 
     X 3.89579E-05, 5.30171E-05, 3.92507E-05, 4.93901E-05, 4.53047E-05, 
     X 4.89955E-05, 4.61649E-05, 3.75742E-05, 3.14124E-05, 2.37893E-05, 
     X 3.34899E-06, 3.08080E-05, 5.35883E-05, 3.39838E-05, 7.02334E-05, 
     X 7.24784E-05, 7.46533E-05, 6.22257E-05, 6.38945E-05, 6.73423E-05, 
     X 4.51321E-05, 5.91854E-05, 5.51601E-05, 4.41923E-05, 3.59217E-05, 
     X 4.08520E-05, 6.15981E-05, 6.66549E-05, 8.26031E-05, 1.13556E-04, 
     X 8.72988E-05, 9.71052E-05, 9.31839E-05, 8.73745E-05, 8.61717E-05, 
     X 6.05645E-05, 6.51131E-05, 6.93393E-05, 7.01096E-05, 6.43565E-05/ 
      DATA C20081 /                                                     
     X 7.36929E-05, 7.66881E-05, 7.60815E-05, 7.13570E-05, 8.40487E-05, 
     X 8.51489E-05, 7.54168E-05, 6.72694E-05, 4.75508E-05, 3.59379E-05, 
     X 4.24698E-05, 4.17850E-05, 4.56047E-05, 4.12779E-05, 4.55933E-05, 
     X 4.27941E-05, 4.42230E-05, 3.68525E-05, 3.83392E-05, 3.83722E-05, 
     X 4.64904E-05, 3.33878E-05, 3.53027E-05, 3.54694E-05, 2.36233E-05, 
     X 2.99641E-05, 2.56097E-05, 2.14134E-05, 2.74403E-05, 2.83896E-05, 
     X 3.17082E-05, 1.75526E-05, 2.80382E-05, 3.18009E-05, 4.08715E-05, 
     X 4.77807E-05, 5.00609E-05, 5.12459E-05, 4.44062E-05, 4.74942E-05, 
     X 4.99882E-05, 5.18837E-05, 5.03246E-05, 5.55168E-05, 5.35853E-05, 
     X 4.81834E-05, 6.66231E-05, 5.26670E-05, 6.84700E-05, 6.53412E-05, 
     X 5.71740E-05, 4.61076E-05, 3.90239E-05, 4.72924E-05, 6.32194E-05, 
     X 5.20868E-05, 4.81039E-05, 3.71748E-05, 4.37492E-05, 3.63959E-05, 
     X 3.79823E-05, 3.72225E-05, 3.02360E-05, 3.22961E-05, 3.43398E-05, 
     X 3.57176E-05, 2.65446E-05, 3.29388E-05, 1.65455E-05, 2.66173E-05, 
     X 1.74277E-05, 1.74324E-05, 1.27879E-05, 1.46247E-05, 1.92378E-05, 
     X 2.20049E-05, 1.44790E-05, 2.49244E-05, 2.29209E-05, 1.76192E-05/ 
      DATA C20161 /                                                     
     X 1.84528E-05, 2.54350E-05, 3.33972E-05, 3.69190E-05, 2.92139E-05, 
     X 2.47666E-05, 2.86764E-05, 1.48163E-05, 1.80461E-05, 2.84545E-05, 
     X 2.41064E-05, 2.85721E-05, 3.31996E-05, 3.75973E-05, 3.73874E-05, 
     X 4.69293E-05, 5.12665E-05, 5.35607E-05, 4.64577E-05, 3.59887E-05, 
     X 3.39168E-05, 3.89746E-05, 3.12196E-05, 3.70907E-05, 3.95172E-05, 
     X 4.61642E-05, 4.26029E-05, 4.17856E-05, 4.51437E-05, 4.04189E-05, 
     X 4.19251E-05, 4.53977E-05, 3.69860E-05, 4.20904E-05, 3.69735E-05, 
     X 3.57898E-05, 3.47729E-05, 3.14280E-05, 2.71197E-05, 3.34380E-05, 
     X 2.69843E-05, 2.88036E-05, 2.51912E-05, 2.45699E-05, 2.23184E-05, 
     X 2.50563E-05, 2.24493E-05, 1.77101E-05, 1.64763E-05, 1.34978E-05, 
     X 1.57081E-05, 1.45966E-05, 1.02722E-05, 2.07177E-05, 1.47662E-05, 
     X 1.50721E-05, 1.24431E-05, 1.51572E-05, 1.92210E-05, 2.06047E-05, 
     X 2.02921E-05, 3.22062E-05, 2.37112E-05, 1.94803E-05, 2.40726E-05, 
     X 2.11531E-05, 1.89158E-05, 2.46957E-05, 2.63175E-05, 2.57747E-05, 
     X 2.22047E-05, 2.52755E-05, 2.80848E-05, 3.75157E-05, 4.09915E-05, 
     X 4.04853E-05, 3.21661E-05, 3.15652E-05, 3.21576E-05, 3.67060E-05/ 
      DATA C20241 /                                                     
     X 3.13071E-05, 2.84939E-05, 2.71169E-05, 2.99559E-05, 2.94631E-05, 
     X 3.26716E-05, 2.99028E-05, 2.60045E-05, 3.15375E-05, 3.12895E-05, 
     X 2.77767E-05, 2.43976E-05, 2.10764E-05, 2.22725E-05, 2.04581E-05, 
     X 1.63509E-05, 1.60028E-05, 1.60294E-05, 1.62366E-05, 1.89293E-05, 
     X 1.79675E-05, 1.89259E-05, 1.68300E-05, 1.99460E-05, 2.42370E-05, 
     X 2.64738E-05, 1.93137E-05, 1.39460E-05, 1.32222E-05, 1.38752E-05, 
     X 1.62071E-05, 1.79652E-05, 1.63772E-05, 1.56251E-05, 1.81918E-05, 
     X 1.46111E-05, 2.92174E-05, 2.94263E-05, 2.46180E-05, 2.93333E-05, 
     X 3.13657E-05, 2.97686E-05, 2.78387E-05, 2.40924E-05, 2.93369E-05, 
     X 2.93747E-05, 2.77665E-05, 3.00814E-05, 3.01068E-05, 3.62275E-05, 
     X 3.56613E-05, 3.66913E-05, 3.56280E-05, 3.52856E-05, 3.63928E-05, 
     X 2.96738E-05, 2.90314E-05, 2.62972E-05, 2.15250E-05, 1.97910E-05, 
     X 2.02314E-05, 2.20209E-05, 2.05131E-05, 2.12017E-05, 1.96689E-05, 
     X 1.61907E-05, 1.57662E-05, 1.58239E-05, 1.54650E-05, 1.46376E-05, 
     X 1.32891E-05, 1.30511E-05, 1.17635E-05, 1.28585E-05, 1.12887E-05, 
     X 1.32627E-05, 1.31833E-05, 1.68679E-05, 1.98092E-05, 2.70744E-05/ 
      DATA C20321 /                                                     
     X 2.22033E-05, 1.63430E-05, 1.61104E-05, 1.50865E-05, 1.54382E-05, 
     X 1.55654E-05, 1.67924E-05, 1.89185E-05, 1.96791E-05, 2.14894E-05, 
     X 2.76137E-05, 2.67339E-05, 2.79423E-05, 2.54664E-05, 3.10707E-05, 
     X 2.72745E-05, 2.60940E-05, 2.47736E-05, 2.21105E-05, 2.20357E-05, 
     X 2.26499E-05, 2.34137E-05, 2.29537E-05, 2.36157E-05, 2.48244E-05, 
     X 2.26667E-05, 2.07781E-05, 2.11702E-05, 1.91214E-05, 1.62172E-05, 
     X 1.61285E-05, 1.63952E-05, 1.68156E-05, 1.61236E-05, 1.56611E-05, 
     X 1.47697E-05, 1.50856E-05, 1.44169E-05, 1.63816E-05, 1.74283E-05, 
     X 1.49853E-05, 1.62444E-05, 1.70007E-05, 1.60371E-05, 1.22713E-05, 
     X 1.45518E-05, 1.35051E-05, 1.40787E-05,-1.54925E-05,-2.15204E-05, 
     X-4.04516E-06, 2.22439E-05, 3.21262E-05, 3.83792E-05, 4.44462E-05, 
     X 4.44192E-05, 2.77328E-05, 4.10549E-06, 4.48758E-06,-1.27771E-05, 
     X-2.17204E-05,-1.23979E-05,-1.04928E-05, 7.43085E-06, 1.55350E-05, 
     X 3.15204E-05, 3.17601E-05, 2.93677E-05, 3.42485E-05, 3.87087E-05, 
     X 3.61242E-05, 2.62406E-05, 3.31686E-05, 3.54314E-05, 2.50625E-05, 
     X 2.60444E-05, 4.10729E-05, 3.47247E-05, 3.31716E-05, 3.34778E-05/ 
      DATA C20401 /                                                     
     X 4.03029E-05, 4.09241E-05, 3.96717E-05, 3.53410E-05, 2.81048E-05, 
     X 1.98891E-05, 1.92314E-05, 2.82525E-05, 3.76641E-05, 4.34135E-05, 
     X 4.24570E-05, 3.98429E-05, 3.29417E-05, 2.16679E-05, 8.88085E-06, 
     X-5.05319E-06,-8.14815E-06,-5.01930E-06, 7.13565E-06, 2.00949E-05, 
     X 2.65988E-05, 2.77656E-05, 2.09299E-05, 1.98968E-05, 2.04835E-05, 
     X 1.75254E-05, 6.48674E-06, 3.14323E-06, 1.93242E-06, 3.86745E-06, 
     X 1.39727E-05, 2.10731E-05, 2.66432E-05, 2.69551E-05, 2.57453E-05, 
     X 2.72834E-05, 2.58860E-05, 2.51266E-05, 1.76048E-05, 2.03072E-05, 
     X 2.61960E-05, 2.36230E-05, 1.81172E-05, 1.33972E-05, 1.60959E-05, 
     X 1.61081E-05, 2.34099E-05, 2.64979E-05, 2.36894E-05, 2.13665E-05, 
     X 2.16774E-05, 2.52566E-05, 1.99785E-05, 1.40414E-05, 1.39948E-05, 
     X 1.32637E-05, 7.24742E-06, 1.11395E-06,-1.27323E-06, 4.56637E-07, 
     X 6.93250E-06, 5.07198E-06, 7.90632E-06, 9.08149E-06, 1.03602E-05, 
     X 2.17425E-05, 2.71741E-05, 2.16875E-05, 1.95088E-05, 1.56568E-05, 
     X 8.41152E-06, 1.26749E-05, 1.17673E-05, 9.96037E-06, 1.21982E-05, 
     X 1.31854E-05, 1.50216E-05, 1.72214E-05, 2.02773E-05, 2.09625E-05/ 
      DATA C20481 /                                                     
     X 1.66656E-05, 1.45666E-05, 1.66608E-05, 2.04989E-05, 2.21395E-05, 
     X 2.35993E-05, 2.69390E-05, 2.13921E-05, 1.72643E-05, 1.70995E-05, 
     X 1.78241E-05, 1.85308E-05, 1.80360E-05, 1.48619E-05, 1.90369E-05, 
     X 1.51089E-05, 1.22705E-05, 1.62608E-05, 1.41637E-05, 1.23786E-05, 
     X 7.02677E-06, 8.89811E-06, 1.07379E-05, 1.23677E-05, 1.48196E-05, 
     X 2.05770E-05, 1.70994E-05, 1.00072E-05, 1.76119E-05, 1.41779E-05, 
     X 1.34358E-05, 1.58674E-05, 1.65837E-05, 1.69569E-05, 1.40381E-05, 
     X 1.46118E-05, 1.30556E-05, 1.97204E-05, 1.97488E-05, 1.64524E-05, 
     X 1.73764E-05, 1.66355E-05, 1.64419E-05, 1.65486E-05, 1.21523E-05, 
     X 1.51513E-05, 1.60354E-05, 1.38528E-05, 1.45538E-05, 1.71702E-05, 
     X 1.56336E-05, 1.31279E-05, 1.47346E-05, 1.70719E-05, 1.75588E-05, 
     X 1.55187E-05, 1.29598E-05, 1.38463E-05, 1.35382E-05, 1.16062E-05, 
     X 1.37014E-05, 1.34487E-05, 1.15536E-05, 1.33597E-05, 9.24478E-06, 
     X 7.28477E-06, 1.40321E-05, 1.31518E-05, 1.03118E-05, 8.59764E-06, 
     X 1.57138E-05, 1.20792E-05, 1.49440E-05, 1.34375E-05, 1.54686E-05, 
     X 1.65346E-05, 1.33823E-05, 1.37238E-05, 1.36128E-05, 1.46206E-05/ 
      DATA C20561 /                                                     
     X 1.40777E-05, 1.59980E-05, 1.30180E-05, 1.01390E-05, 1.12366E-05, 
     X 9.86099E-06, 1.10702E-05, 1.26783E-05, 9.51072E-06, 8.07299E-06, 
     X 1.22955E-05, 1.53506E-05, 1.29711E-05, 9.78759E-06, 1.28800E-05, 
     X 1.39702E-05, 1.64832E-05, 1.06473E-05, 1.15419E-05, 1.63795E-05, 
     X 1.69837E-05, 1.72726E-05, 1.77231E-05, 1.62337E-05, 1.20881E-05, 
     X 1.13210E-05, 1.20531E-05, 1.31374E-05, 1.22259E-05, 1.27802E-05, 
     X 1.38962E-05, 8.87355E-06, 9.42264E-06, 1.02075E-05, 7.91816E-06, 
     X 9.66835E-06, 1.24921E-05, 8.43227E-06, 1.10637E-05, 1.03958E-05, 
     X 9.40996E-06, 1.22922E-05, 1.21088E-05, 1.30116E-05, 1.18776E-05, 
     X 1.42245E-05, 1.34745E-05, 1.11165E-05, 1.29914E-05, 1.29801E-05, 
     X 1.10895E-05, 1.12331E-05, 9.03490E-06, 9.33726E-06, 9.63923E-06, 
     X 1.11299E-05, 9.53481E-06, 1.21708E-05, 1.11951E-05, 7.22558E-06, 
     X 6.66928E-06, 1.08926E-05, 1.07870E-05, 9.23485E-06, 8.50452E-06, 
     X 9.41914E-06, 8.74027E-06, 8.93322E-06, 9.79061E-06, 8.26490E-06, 
     X 8.37630E-06, 1.17064E-05, 1.10176E-05, 1.11587E-05, 9.45563E-06, 
     X 1.18352E-05, 7.79327E-06, 9.22766E-06, 1.01868E-05, 8.23925E-06/ 
      DATA C20641 /                                                     
     X 9.23706E-06, 1.04428E-05, 8.80392E-06, 9.37098E-06, 7.43126E-06, 
     X 7.01424E-06, 9.29360E-06, 8.97171E-06, 9.31718E-06, 9.87118E-06, 
     X 8.11419E-06, 8.77416E-06, 9.96927E-06, 8.87533E-06, 9.33163E-06, 
     X 7.41505E-06, 9.39988E-06, 1.17932E-05, 1.03287E-05, 9.17415E-06, 
     X 8.43035E-06, 8.00040E-06, 8.33346E-06, 7.66787E-06, 7.18411E-06, 
     X 1.06236E-05, 1.05559E-05, 8.49187E-06, 9.22472E-06, 8.16512E-06, 
     X 8.35687E-06, 1.06325E-05, 9.80273E-06, 9.01599E-06, 9.20499E-06, 
     X 9.98417E-06, 9.23191E-06, 6.98769E-06, 5.17748E-06, 4.57130E-06, 
     X 8.18492E-06, 9.98095E-06, 7.52148E-06, 1.33038E-05, 8.17630E-06, 
     X 1.02454E-05, 9.62706E-06, 9.44304E-06, 8.86704E-06, 8.88116E-06, 
     X 8.79062E-06, 8.20042E-06, 8.55789E-06, 9.26249E-06, 1.00467E-05, 
     X 7.96012E-06, 9.08773E-06, 1.01481E-05, 8.84360E-06, 7.94928E-06, 
     X 6.68425E-06, 8.56576E-06, 1.05282E-05, 1.10647E-05, 9.91625E-06, 
     X 7.95356E-06, 8.66443E-06, 9.13551E-06, 1.04870E-05, 9.79244E-06, 
     X 1.26214E-05, 8.42148E-06, 8.13468E-06, 1.11338E-05, 1.06780E-05, 
     X 8.54578E-06, 7.82119E-06, 8.33258E-06, 8.23644E-06, 5.95583E-06/ 
      DATA C20721 /                                                     
     X 5.85592E-06, 4.05898E-06, 6.39260E-06, 8.43280E-06, 8.76251E-06, 
     X 6.70423E-06, 6.81368E-06, 7.43506E-06, 7.14376E-06, 6.51065E-06, 
     X 5.65633E-06, 5.42394E-06, 7.10817E-06, 4.78831E-06, 6.29380E-06, 
     X 4.87344E-06, 6.81764E-06, 6.51611E-06, 5.70526E-06, 6.50590E-06, 
     X 6.61568E-06, 5.39248E-06, 6.32002E-06, 7.98976E-06, 7.73795E-06, 
     X 4.85788E-06, 5.83443E-06, 6.11694E-06, 5.40408E-06, 5.00946E-06, 
     X 5.62153E-06, 6.30263E-06, 6.05764E-06, 5.53274E-06, 5.80664E-06, 
     X 5.18684E-06, 6.85555E-06, 6.22889E-06, 6.06959E-06, 6.49228E-06, 
     X 5.64064E-06, 4.92690E-06, 5.77661E-06, 7.18450E-06, 7.38658E-06, 
     X 6.77379E-06, 5.74668E-06, 6.68355E-06, 6.13655E-06, 6.43266E-06, 
     X 7.08896E-06, 7.71187E-06, 7.37273E-06, 6.75882E-06, 6.39307E-06, 
     X 4.59520E-06, 5.10323E-06, 5.80178E-06, 6.88172E-06, 6.68825E-06, 
     X 7.50416E-06, 6.14975E-06, 6.51422E-06, 7.74942E-06, 8.11492E-06, 
     X 1.19607E-05, 7.92722E-06, 4.47848E-06, 6.02524E-06, 9.74067E-06, 
     X 1.02429E-05, 8.60819E-06, 8.57044E-06, 1.09196E-05, 1.02048E-05, 
     X 3.86222E-06, 9.26104E-06, 7.33341E-06, 9.08181E-06, 1.05569E-05/ 
      DATA C20801 /                                                     
     X 1.06776E-05, 1.10247E-05, 1.04520E-05, 8.78328E-06, 7.60679E-06, 
     X 7.27896E-06, 9.72776E-06, 5.16039E-06, 1.03134E-05, 1.09088E-05, 
     X 8.12575E-06, 7.61685E-06, 8.16346E-06, 5.91269E-06, 3.61448E-06, 
     X 8.74336E-06, 1.03990E-05, 6.25691E-06, 7.04541E-06, 7.94348E-06, 
     X 8.39807E-06, 8.67342E-06, 8.32173E-06, 7.56015E-06, 8.31782E-06, 
     X 6.36556E-06, 6.99328E-06, 6.24490E-06, 6.73080E-06, 6.95852E-06, 
     X 7.55508E-06, 7.74168E-06, 7.90414E-06, 8.94934E-06, 7.99809E-06, 
     X 6.12528E-06, 9.04115E-06, 7.14535E-06, 5.88625E-06, 6.43941E-06, 
     X 7.11566E-06, 7.47425E-06, 8.23805E-06, 6.19919E-06, 7.31614E-06, 
     X 8.24852E-06, 6.82172E-06, 5.45362E-06, 6.66115E-06, 8.44300E-06, 
     X 8.07530E-06, 7.22735E-06, 5.85614E-06, 5.13900E-06, 6.03215E-06, 
     X 6.59491E-06, 4.81592E-06, 4.48587E-06, 7.11525E-06, 8.36201E-06, 
     X 7.11669E-06, 2.80033E-06, 6.50756E-06, 9.43974E-06, 5.22402E-06, 
     X 3.82334E-06, 7.29963E-06, 8.62313E-06, 7.42018E-06, 4.56506E-06, 
     X 5.29972E-06, 5.62787E-06, 4.63852E-06, 5.18329E-06, 7.01884E-06, 
     X 7.24888E-06, 5.18157E-06, 5.40219E-06, 5.92412E-06, 4.97977E-06/ 
      DATA C20881 /                                                     
     X 5.29040E-06, 5.33812E-06, 4.76620E-06, 4.65759E-06, 5.10546E-06, 
     X 6.49525E-06, 4.43416E-06, 5.30223E-06, 3.27044E-06, 2.55324E-06, 
     X 4.85017E-06, 7.46556E-06, 8.04448E-06, 5.14009E-06, 6.09755E-06, 
     X 5.38381E-06, 6.41959E-06, 6.59233E-06, 4.83160E-06, 3.81289E-06, 
     X 5.37013E-06, 5.69212E-06, 5.54983E-06, 5.73495E-06, 4.00639E-06, 
     X 2.33817E-06, 2.55751E-06, 3.29627E-06, 3.59845E-06, 6.20623E-06, 
     X 4.47088E-06, 3.49267E-06, 3.09273E-06, 3.32506E-06, 4.83353E-06, 
     X 6.39001E-06, 3.78074E-06, 4.07848E-06, 4.01811E-06, 3.19767E-06, 
     X 3.34053E-06, 4.34246E-06, 3.68003E-06, 3.01090E-06, 3.98545E-06, 
     X 2.72338E-06, 1.90024E-06, 2.77553E-06, 3.73381E-06, 2.58685E-06, 
     X 1.70987E-06,-5.48480E-07, 1.64591E-06, 2.43481E-06, 2.52116E-06, 
     X 2.19316E-06, 1.32392E-06, 1.75370E-06, 2.65409E-07, 2.22278E-06, 
     X 2.53079E-06, 2.87260E-06, 1.87600E-06,-3.84453E-07, 1.80836E-06, 
     X 9.28123E-07, 1.94986E-06, 2.40483E-06, 2.79865E-06, 2.86361E-06, 
     X 2.63868E-06, 3.34704E-06, 3.32132E-06, 2.58463E-06, 2.45684E-06, 
     X 3.35043E-06, 3.19848E-06, 1.73037E-06, 2.98206E-06, 2.77491E-06/ 
      DATA C20961 /                                                     
     X 6.51674E-07, 2.52219E-06, 2.97136E-06, 1.96700E-06, 2.29350E-06, 
     X 3.01956E-06, 3.20811E-06, 1.30467E-06, 1.68172E-06, 2.56264E-06, 
     X 2.46167E-06, 1.78221E-06, 2.31647E-06, 2.69480E-06, 2.63619E-06, 
     X 1.81319E-06, 1.83448E-06, 2.23432E-06, 8.14045E-07, 8.75863E-07, 
     X 1.61350E-06, 1.59796E-06, 2.08419E-06, 1.89665E-06, 6.93584E-07, 
     X 1.09880E-06, 3.79031E-07,-3.36470E-07, 1.04326E-06, 1.06497E-06, 
     X 2.15108E-07, 3.28774E-07,-5.17613E-07, 1.27762E-06, 8.22924E-07, 
     X 4.92835E-07, 2.24698E-08,-1.99111E-07, 1.30262E-06,-3.81299E-07, 
     X 9.55084E-07, 2.17641E-07,-6.03874E-08, 8.44121E-07, 1.72391E-06, 
     X 1.66921E-06, 2.19855E-06, 1.17655E-06, 1.79637E-06, 3.31670E-06, 
     X 3.40206E-06, 6.05670E-07, 2.08299E-06, 2.10121E-06, 1.68598E-06, 
     X 2.21155E-06, 2.43221E-06, 5.81282E-08, 1.62613E-06,-5.49850E-07, 
     X 2.14143E-07, 1.21751E-06, 2.30470E-06, 4.27911E-06, 2.96622E-06, 
     X 8.67534E-07, 9.12041E-07, 2.48797E-06, 9.43519E-07,-3.60949E-06, 
     X 2.01928E-06, 1.88873E-06, 8.06749E-07, 7.33519E-07, 1.17440E-06, 
     X 1.69744E-06, 3.64492E-06, 3.11556E-06, 8.89471E-07, 1.93064E-06/ 
      DATA C21041 /                                                     
     X 3.02787E-06, 1.92575E-06, 1.73720E-06,-1.32700E-07, 1.41743E-06, 
     X 2.24632E-06, 2.47945E-06, 2.05151E-06,-9.56031E-07, 2.57317E-07, 
     X 3.00980E-06, 3.07981E-06, 2.78202E-06, 3.02555E-06, 5.48784E-09, 
     X 2.37693E-06, 2.90011E-06, 2.93608E-06, 2.14837E-06, 6.55832E-07, 
     X 3.41155E-07,-2.13884E-06, 2.52553E-06, 4.27109E-06, 3.33766E-06, 
     X 3.07708E-06, 2.66405E-06, 3.22850E-06,-5.78879E-07,-6.06194E-07, 
     X 1.72864E-06, 1.57072E-06,-3.39701E-07, 7.21540E-08, 1.67012E-06, 
     X 2.48568E-06, 2.70214E-06, 3.62383E-06, 2.20408E-06, 1.19395E-06, 
     X 1.53825E-06, 2.37511E-06, 2.66754E-06, 1.77020E-06, 5.40420E-07, 
     X 2.01156E-06, 3.27498E-06, 3.04720E-06, 1.96213E-06, 3.71633E-06, 
     X 2.07886E-06, 1.60069E-06, 5.33370E-07, 1.33966E-07, 2.16073E-06, 
     X 8.81457E-07, 1.12880E-06, 2.40509E-06, 2.94252E-06, 2.22899E-06, 
     X 1.80941E-06, 2.68577E-06, 2.44584E-06, 2.51720E-06, 2.64857E-06, 
     X 2.24182E-06, 1.62007E-06, 2.60421E-06, 3.09782E-06, 3.11099E-06, 
     X 3.81513E-06, 6.91606E-06, 3.28767E-06, 3.44175E-06, 4.16771E-06, 
     X 3.75452E-06, 2.21050E-06, 2.99939E-06, 2.86993E-06, 2.47080E-06/ 
      DATA C21121 /                                                     
     X 2.33607E-06, 2.68568E-06, 3.39344E-06, 6.09518E-06, 5.10422E-06, 
     X 4.04027E-06, 4.01363E-06, 4.53142E-06, 2.94424E-06, 4.76694E-06, 
     X 6.44206E-06, 7.86435E-06, 8.55564E-06, 6.00857E-06, 5.48073E-06, 
     X 1.56287E-06,-1.16619E-06,-1.85215E-06,-3.04762E-06,-3.45420E-07, 
     X 2.48111E-07,-1.39302E-07,-6.27593E-07,-5.26792E-07, 4.81454E-08, 
     X-3.08631E-08,-1.02976E-06,-1.54919E-06,-9.34044E-07,-1.02507E-06, 
     X-1.39794E-06,-1.15709E-06,-1.04875E-06,-1.64379E-06,-2.97514E-06, 
     X-3.22236E-07,-1.18978E-06,-2.85325E-06,-3.93143E-06,-4.15349E-06, 
     X-2.33228E-06,-3.27125E-06,-2.44987E-06,-1.44460E-06,-3.59727E-06, 
     X-7.18516E-07,-1.53237E-06,-1.53526E-06,-1.56450E-06,-2.91088E-06, 
     X-8.52134E-07,-1.44575E-07,-1.50350E-06,-2.92806E-06,-2.47710E-06, 
     X-9.71202E-07,-9.82754E-07,-1.09924E-06,-6.08199E-07, 3.62885E-07, 
     X-6.67372E-07,-1.00033E-06,-1.12001E-06,-1.06624E-06,-9.23789E-07, 
     X-9.83788E-07,-2.11656E-06,-2.45001E-06,-2.75874E-06,-3.36003E-06, 
     X-3.38364E-06,-2.63747E-06,-3.11047E-06,-3.75258E-06,-3.83211E-06, 
     X-3.52833E-06,-3.48464E-06,-3.77021E-06,-4.26887E-06,-4.23917E-06/ 
      DATA C21201 /                                                     
     X-1.42438E-06,-2.48477E-06,-2.84719E-06,-2.70247E-06,-2.50588E-06, 
     X-2.22900E-06,-1.78393E-06,-1.76826E-06,-2.16396E-06,-2.67543E-06, 
     X-2.23706E-06,-2.31793E-06,-2.87590E-06,-3.07803E-06,-2.50493E-06, 
     X-4.54223E-06,-5.15511E-06,-5.39690E-06,-4.89633E-06,-3.33710E-06, 
     X-4.56583E-06,-4.78877E-06,-3.93508E-06,-3.29027E-06,-4.95668E-06, 
     X-6.01801E-06,-5.76016E-06,-5.34657E-06,-5.29080E-06,-5.57133E-06, 
     X-5.73135E-06,-5.39374E-06,-5.09808E-06,-5.12874E-06,-5.20269E-06, 
     X-7.30702E-06,-7.04220E-06,-5.96514E-06,-5.74802E-06,-4.53961E-06, 
     X-4.42127E-06,-4.63922E-06,-4.80622E-06,-4.69659E-06,-5.96786E-06, 
     X-6.29800E-06,-4.75452E-06,-2.85907E-06,-5.33662E-06,-5.31681E-06, 
     X-5.04646E-06,-5.21729E-06,-5.93409E-06,-5.73462E-06,-5.44926E-06, 
     X-6.43325E-06,-7.74451E-06,-7.83147E-06,-5.51568E-06,-7.37048E-06, 
     X-4.25726E-06, 2.32917E-06,-5.61131E-07, 2.05234E-06, 3.74631E-07, 
     X-7.66493E-07, 1.42689E-06,-7.79683E-07, 9.06809E-07, 5.13642E-07, 
     X-1.52504E-06,-2.12058E-06,-2.50316E-06, 1.03637E-08, 5.60002E-07, 
     X-1.48075E-06, 1.94155E-06, 1.91846E-06, 2.78507E-06, 3.90146E-06/ 
      DATA C21281 /                                                     
     X 3.61409E-06, 3.23677E-06, 4.00022E-06, 3.19157E-06, 4.03034E-07, 
     X-2.03929E-06, 1.23366E-06, 3.28589E-06, 3.94168E-06, 3.94672E-06, 
     X 3.84619E-06, 2.30400E-07,-2.07799E-06,-1.75115E-06,-5.71958E-07, 
     X 2.33425E-06, 2.01664E-06, 6.05673E-07, 9.57363E-07,-8.89924E-07, 
     X-4.71331E-07, 2.82826E-07, 5.10859E-07, 3.63512E-07, 9.86288E-07, 
     X-4.86309E-07,-2.23163E-06,-1.23370E-06,-2.43131E-07,-2.11498E-06, 
     X-1.56756E-06, 2.70905E-06, 1.87606E-08, 7.83721E-08, 1.58444E-06, 
     X 2.88574E-06, 1.40306E-06, 2.40883E-06, 2.84063E-06, 3.13820E-06, 
     X 3.71016E-06, 3.12975E-06, 3.21981E-06, 2.56191E-06, 1.04624E-06, 
     X 1.87464E-07, 7.25329E-07, 1.03650E-06, 7.23663E-07,-4.18739E-07, 
     X 9.95744E-07,-1.80878E-07,-1.04044E-06, 3.86965E-07,-9.36186E-07, 
     X-4.02271E-07,-2.00231E-07,-5.94965E-07, 4.94038E-07, 3.34585E-07, 
     X 4.82255E-07, 1.12599E-06, 2.11763E-06, 2.66807E-07, 2.29324E-07, 
     X 7.07005E-07, 3.41907E-07,-1.17115E-07, 9.03089E-07, 1.76844E-06, 
     X 1.87134E-06, 2.64057E-06, 4.00395E-07,-4.19679E-07, 6.30769E-07, 
     X 1.02725E-06, 1.05876E-06,-4.08660E-07,-2.32668E-06,-2.73468E-06/ 
      DATA C21361 /                                                     
     X-2.40600E-06,-1.81203E-06,-7.96431E-07, 7.40789E-07, 2.73188E-07, 
     X 1.68367E-07,-1.27227E-07,-1.05041E-06,-3.51726E-06,-1.64956E-06, 
     X-5.63840E-07,-1.61242E-06,-1.33264E-06, 1.56604E-06, 2.35083E-06, 
     X 9.26708E-07, 5.41983E-07, 3.54277E-07, 8.53743E-07, 1.54196E-06, 
     X 1.19902E-06, 1.10552E-06, 1.63179E-06, 1.96366E-06, 7.82848E-07, 
     X-3.34741E-08,-7.90842E-07,-6.45131E-07, 1.36158E-06, 1.62453E-06, 
     X 6.68965E-07,-4.86203E-08, 6.83561E-07, 1.89652E-06,-2.80988E-07, 
     X-2.30536E-06,-1.90777E-06, 1.31617E-06, 1.27309E-06, 5.90825E-07, 
     X 5.65686E-07, 1.23631E-07,-1.70279E-06,-1.60768E-06, 9.69543E-07, 
     X 1.01108E-07,-2.02473E-06,-1.75146E-06, 6.33201E-07,-3.59110E-06, 
     X-9.71706E-07, 9.16822E-07, 1.40681E-07,-7.16745E-07,-2.11376E-06, 
     X-1.00951E-06, 2.12465E-06, 1.06982E-06, 1.44032E-06, 1.49692E-06, 
     X 1.07277E-06, 1.37006E-06, 1.66932E-06, 1.75820E-06, 1.41859E-06, 
     X-5.84947E-08, 2.17349E-06, 4.27053E-06, 5.27286E-06, 5.87085E-06, 
     X 2.42692E-06, 2.39305E-06, 6.19573E-06, 5.12518E-06, 1.27171E-06, 
     X-6.81963E-07, 4.16199E-08,-1.36608E-06,-2.53272E-06,-2.37700E-06/ 
      DATA C21441 /                                                     
     X-7.96719E-07, 3.85367E-07,-1.08393E-07,-9.04587E-07,-1.54917E-06, 
     X-3.11945E-06,-5.58484E-07, 1.61347E-06, 1.11736E-06, 2.11889E-06, 
     X 2.43534E-06, 1.46709E-06,-1.05429E-06, 1.09978E-06, 7.22493E-07, 
     X 8.53307E-08, 1.22733E-06, 2.99380E-06, 3.62416E-06, 3.81404E-06, 
     X 4.46735E-06, 4.70753E-06, 4.54494E-06, 3.83002E-06, 2.28067E-06, 
     X 2.03102E-06, 2.43844E-06, 2.93132E-06, 2.17555E-06, 3.92919E-06, 
     X 3.53089E-06, 1.61388E-06, 5.09498E-06, 3.40067E-06, 1.58876E-06, 
     X 1.17367E-06, 1.13344E-06, 1.17798E-06, 1.10976E-06, 7.90635E-07, 
     X-4.15989E-07,-1.00581E-06,-9.60236E-07,-1.79111E-07,-5.70733E-07, 
     X 1.49766E-06, 3.44374E-06, 6.45914E-07, 1.00532E-06, 2.01068E-06, 
     X 2.59092E-06, 9.35770E-08, 6.00121E-07, 1.54409E-06, 2.03537E-06, 
     X 8.10358E-07, 1.34126E-06, 1.88873E-06, 1.43283E-06,-2.05029E-07, 
     X-1.09782E-06,-6.56149E-07, 2.01650E-06, 1.84770E-06, 4.39586E-08, 
     X-2.03588E-06,-1.46366E-06,-3.45189E-07, 4.02577E-07, 3.10362E-07, 
     X-2.16073E-06,-1.91861E-06,-2.90520E-07, 2.03692E-06, 3.47996E-06, 
     X 4.21761E-06, 3.89000E-06, 1.86138E-06, 1.56143E-06, 4.88964E-07/ 
      DATA C21521 /                                                     
     X-9.28184E-07,-4.34315E-07, 8.74954E-07, 1.58417E-06, 1.36880E-06, 
     X 2.65016E-06, 4.62623E-06, 5.81990E-06, 4.72139E-06, 1.95905E-06, 
     X 1.54151E-06, 2.95768E-06, 4.71536E-06, 2.62359E-06, 9.11513E-07, 
     X 4.75677E-07,-1.53801E-06,-2.32382E-06,-2.25220E-06,-1.46641E-06, 
     X-2.23014E-06,-2.12604E-06,-1.66259E-06,-2.48856E-06,-2.38895E-06, 
     X-2.18158E-06,-1.95841E-06, 4.43899E-07, 1.08517E-06, 1.66370E-07, 
     X-2.42342E-06,-7.19331E-07, 3.19532E-07, 3.58690E-07,-2.01979E-07, 
     X 5.07242E-07, 1.10562E-06, 1.00419E-06, 1.22379E-06, 7.05180E-07, 
     X 1.42283E-07, 8.61092E-07, 8.95236E-07, 1.18043E-07,-1.23589E-06, 
     X-6.16316E-07,-1.18947E-06,-1.45838E-06,-1.47522E-09, 1.33867E-06, 
     X 9.18310E-07,-8.98949E-07,-2.27314E-06,-1.71510E-06,-7.16704E-07, 
     X 8.60666E-09, 5.68015E-07, 1.31219E-06, 1.75478E-06, 5.11790E-07, 
     X 3.35270E-07, 5.39243E-07, 9.08467E-07, 1.39382E-06, 1.08806E-06, 
     X 1.18589E-06, 3.58461E-06, 2.78668E-06, 1.25964E-06,-2.72255E-07, 
     X 1.72305E-06, 1.82937E-06, 7.46252E-07,-1.10555E-06, 2.24967E-07, 
     X 6.45674E-07,-1.87591E-07,-8.84068E-07,-1.75433E-06,-2.17670E-06/ 
      DATA C21601 /                                                     
     X-1.37112E-06,-2.31722E-06,-2.23860E-06,-1.16796E-06,-2.23765E-06, 
     X-1.86406E-06,-1.03517E-06,-5.90824E-07,-6.57710E-07,-7.00941E-07, 
     X-4.46064E-07, 1.77205E-06, 2.45066E-06, 2.39371E-06, 2.30736E-06, 
     X 2.35355E-06, 1.85070E-06, 9.62711E-07, 2.59644E-06, 2.05304E-06, 
     X 9.70090E-07, 1.50942E-06, 3.79439E-06, 2.94597E-06,-1.91789E-06, 
     X 6.44324E-08,-3.92094E-07,-1.55398E-06, 4.46701E-08,-4.78760E-07, 
     X-1.70061E-06,-3.17252E-06,-2.93173E-06,-2.01455E-06,-7.76298E-07, 
     X-2.74577E-07,-1.39907E-06,-2.16470E-06,-1.26010E-06,-2.76845E-06, 
     X-2.38226E-06,-5.49068E-08, 9.65258E-07, 1.08650E-06, 5.64738E-07, 
     X-5.78379E-07,-5.68918E-07,-1.90177E-06,-5.08874E-06,-3.03648E-06, 
     X-1.30527E-06,-4.87669E-07,-2.83326E-06,-1.97823E-06,-5.94313E-07, 
     X-1.50961E-07,-1.15908E-06,-1.43260E-06,-9.29331E-07,-1.39459E-06, 
     X-1.27237E-06,-1.50189E-06,-3.79292E-06,-3.92038E-06,-3.58490E-06, 
     X-3.26439E-06,-2.42138E-06,-2.70516E-06,-3.58080E-06,-1.71822E-06, 
     X-2.41567E-06,-3.50193E-06,-2.62394E-06,-3.08424E-06,-3.89604E-06, 
     X-4.84127E-06,-4.41385E-06,-3.22673E-06,-1.80987E-06,-2.93027E-06/ 
      DATA C21681 /                                                     
     X-3.17366E-06,-2.79721E-06,-1.78848E-06,-2.80254E-06,-3.55572E-06, 
     X-3.34632E-06,-2.83979E-06,-2.48022E-06,-2.15090E-06,-1.08311E-06, 
     X-6.15216E-07,-7.13008E-07,-1.70841E-06,-2.96098E-06,-3.57134E-06, 
     X-3.04405E-06,-3.35280E-06,-2.97780E-06,-1.97966E-06,-2.33197E-06, 
     X-2.76708E-06,-2.70409E-06,-4.51094E-07,-1.43068E-06,-2.83719E-06, 
     X-2.98921E-06,-4.14949E-06,-3.63780E-06,-8.10138E-07,-1.61597E-06, 
     X-2.25394E-06,-2.58110E-06,-1.57781E-06,-1.71520E-06,-2.30016E-06, 
     X-2.61268E-06,-1.96696E-06,-1.86744E-06,-3.15645E-06,-3.59354E-06, 
     X-3.61015E-06,-3.21793E-06,-2.57436E-06,-2.74347E-06,-3.33319E-06, 
     X-2.93400E-06,-3.25986E-06,-3.46384E-06,-2.22114E-06,-2.92650E-06, 
     X-3.73666E-06,-3.70485E-06,-2.75963E-06,-2.40652E-06,-2.93107E-06, 
     X-1.77517E-06,-1.57096E-06,-2.17533E-06,-2.80190E-06,-2.27942E-06, 
     X-1.37371E-06,-1.65974E-06,-1.26079E-06,-8.08050E-07,-8.41278E-07, 
     X-1.53860E-06,-1.66687E-06,-6.56592E-07,-3.05110E-08, 1.08623E-07, 
     X-2.87222E-07,-2.63555E-07,-7.89575E-07,-1.56059E-06,-6.42174E-07, 
     X-9.43333E-07,-1.38671E-06, 6.50443E-07, 1.35301E-06, 9.27981E-07/ 
      DATA C21761 /                                                     
     X-1.21705E-06,-9.63848E-08, 8.73593E-07,-3.47278E-08,-1.79042E-06, 
     X-2.15544E-06,-4.48668E-07,-1.17414E-06,-1.35437E-06,-8.90688E-07, 
     X-4.54757E-07, 2.41484E-09, 3.88010E-07,-1.85349E-08, 1.58011E-07, 
     X 3.70566E-07,-7.30268E-07,-8.42354E-07,-4.13738E-07, 3.96796E-07, 
     X-5.55763E-07,-1.26877E-06,-2.89854E-07, 5.78676E-07, 9.51356E-07, 
     X 5.56912E-07, 1.05014E-06, 9.75896E-07, 5.91573E-08,-6.15073E-07, 
     X-1.48803E-06,-2.53397E-06,-1.77027E-06,-2.08546E-06,-3.10452E-06, 
     X-1.65227E-06,-1.15981E-06,-1.25849E-06,-9.65711E-07,-1.90319E-06, 
     X-2.71831E-06,-5.71559E-08,-1.20368E-06,-3.16820E-06,-2.22766E-06, 
     X-1.19828E-06,-2.82573E-07, 2.53850E-07,-9.10547E-07,-1.65529E-06, 
     X-6.00138E-07,-4.98898E-07,-3.45799E-07, 2.25160E-07, 1.14332E-07, 
     X 3.16082E-07, 1.12681E-06,-6.04876E-07,-7.24616E-07, 1.48177E-06, 
     X 1.05680E-06, 5.91076E-07, 2.07187E-07, 3.82385E-07, 5.91560E-07, 
     X 8.26519E-07, 1.22139E-06, 1.63501E-06, 2.06423E-06, 2.50038E-06, 
     X 2.38037E-06, 1.91688E-06, 2.46702E-06, 2.45066E-06, 2.16732E-06, 
     X 3.13517E-06, 2.68221E-06, 1.39877E-06, 8.58945E-07, 6.83181E-07/ 
      DATA C21841 /                                                     
     X 8.46816E-07, 1.73491E-06, 1.98732E-06, 1.94059E-06, 2.19284E-06, 
     X 1.73215E-06, 1.06865E-06, 1.14117E-06, 1.43213E-06, 1.42275E-06, 
     X-4.15449E-07,-2.39911E-07, 3.46498E-08,-2.75022E-06,-2.43736E-06, 
     X-1.06489E-06,-7.81941E-07,-8.04801E-07,-1.04984E-06,-1.65734E-06, 
     X-1.03167E-06,-3.18255E-08, 5.70283E-07, 6.19050E-07, 2.92257E-07, 
     X-6.01436E-07,-7.04005E-07,-3.70875E-07, 4.12830E-07, 1.31319E-07, 
     X-1.61570E-07, 9.76170E-07, 7.99907E-07, 1.41860E-07,-1.98022E-07, 
     X 3.13766E-07, 7.43982E-07,-6.11287E-07,-5.21146E-07, 1.11156E-07, 
     X 3.91719E-07, 5.45566E-07, 6.39059E-07, 7.29515E-07, 4.59167E-07, 
     X 6.13179E-08,-3.48146E-08, 5.32046E-07, 1.19736E-06, 3.83982E-07, 
     X 1.73267E-07, 3.54304E-07, 9.34657E-07, 5.53819E-07,-2.86678E-07, 
     X 2.01853E-08,-1.56159E-07,-6.08130E-07,-2.14929E-07, 1.66317E-08, 
     X 9.32462E-08,-4.83623E-07,-9.16323E-07,-1.22772E-06,-1.61586E-06, 
     X-1.27409E-06,-1.98119E-07,-3.69182E-08,-1.41061E-07,-5.12562E-07, 
     X-4.55495E-07,-8.12132E-07,-1.71772E-06,-2.70741E-06,-2.98751E-06, 
     X-2.19520E-06, 3.01900E-07, 1.17806E-06,-1.23067E-06, 4.17086E-07/ 
      DATA C21921 /                                                     
     X 1.68113E-06, 4.81677E-07,-1.55187E-07,-3.35287E-07, 2.94916E-07, 
     X 4.57124E-07, 3.38692E-07,-2.49203E-07,-3.62585E-07,-2.39653E-07, 
     X 3.72675E-08,-7.79964E-09,-2.83285E-07,-9.74713E-07,-6.91171E-07, 
     X 1.21925E-07, 3.39940E-07, 3.68441E-08,-5.82188E-07, 2.12605E-07, 
     X 4.65144E-07, 2.17190E-07, 7.50119E-07, 8.62008E-07, 4.63016E-07, 
     X 1.25620E-06, 1.04567E-06,-8.17037E-07,-1.20023E-06,-1.06224E-06, 
     X-3.77100E-07,-1.28057E-07,-2.76183E-07,-1.24304E-06,-2.56776E-06, 
     X-3.36699E-06,-1.49408E-06,-1.01189E-07, 7.41870E-07,-6.45425E-07, 
     X-7.47111E-07, 4.79055E-10,-1.32339E-06,-1.86135E-06,-1.61074E-06, 
     X-1.82039E-06,-1.68040E-06,-1.08025E-06,-8.61965E-07,-7.00131E-07, 
     X-5.63105E-07,-8.09843E-07,-8.09221E-07, 1.69474E-07,-1.33941E-07, 
     X-7.49558E-07,-5.19013E-07,-8.53534E-07,-1.33703E-06,-3.11161E-07, 
     X 8.99037E-07, 2.25330E-06, 1.44822E-06, 3.07437E-07,-1.22366E-06, 
     X-7.64217E-07, 2.13156E-08, 1.07909E-06, 6.10755E-07, 1.81483E-07, 
     X 8.12405E-07,-9.13283E-08,-1.35885E-06,-1.58366E-06,-7.88594E-07, 
     X 4.48283E-07,-1.23754E-06,-1.65105E-06,-8.93014E-07,-1.48622E-06/ 
      DATA C22001 /                                                     
     X-1.67948E-06,-1.24310E-06,-1.54411E-06,-1.65677E-06,-1.04998E-06, 
     X-1.46985E-07, 4.61778E-07,-4.87832E-07,-4.89452E-07,-1.24840E-07, 
     X-1.70101E-06,-1.66976E-06,-1.48528E-07,-1.12621E-07,-2.30607E-08, 
     X 1.82301E-07,-8.58152E-07,-1.89794E-06,-2.46464E-06,-2.32745E-06, 
     X-2.02112E-06,-2.07656E-06,-1.43824E-06,-5.16583E-07,-1.80702E-06, 
     X-2.93490E-06,-3.89216E-06,-3.36211E-06,-2.41393E-06,-9.53406E-07, 
     X-1.16269E-06,-1.66431E-06,-1.77150E-06,-1.82496E-06,-1.93095E-06, 
     X-2.75759E-06,-2.83618E-06,-2.27908E-06,-6.33348E-07, 5.61257E-07, 
     X 1.00142E-06, 7.73337E-07, 3.17721E-07,-3.69804E-07,-8.82058E-07, 
     X-1.17364E-06,-4.53480E-07,-2.47824E-07,-4.79624E-07,-5.17032E-07, 
     X-3.46498E-07, 1.42669E-07,-1.59168E-07,-5.06580E-07,-3.18573E-07, 
     X-2.74092E-07,-2.68860E-07, 1.32811E-07,-2.35567E-09,-6.71971E-07, 
     X-9.75302E-07,-8.70978E-07,-3.59071E-08,-3.01726E-07,-8.27641E-07, 
     X-1.14899E-06,-1.50160E-06,-1.83660E-06,-1.26290E-06,-1.07659E-06, 
     X-1.34878E-06,-5.24626E-07,-7.85094E-08,-8.79473E-07,-1.19291E-06, 
     X-1.33298E-06,-1.59750E-06,-1.31836E-06,-5.73079E-07,-1.10349E-06/ 
      DATA C22081 /                                                     
     X-1.11807E-06,-1.99530E-07,-8.10496E-07,-1.42679E-06,-5.34617E-07, 
     X-2.05001E-07,-2.51690E-07,-1.01740E-06,-1.02841E-06,-7.48750E-08, 
     X-1.01770E-06,-1.50413E-06, 1.80898E-07, 3.63788E-07,-1.97900E-07, 
     X-1.16721E-06,-1.05497E-06,-2.07218E-08,-1.90590E-07,-8.25501E-07, 
     X-2.21142E-06,-1.19905E-06, 2.16271E-07,-2.52574E-07,-4.35837E-07, 
     X-3.95272E-07, 5.97065E-08, 2.76639E-07, 9.22569E-08, 1.20142E-07, 
     X-2.95030E-09,-1.08216E-06,-1.32386E-06,-9.62248E-07,-1.99430E-06, 
     X-2.13890E-06,-9.56082E-07,-6.94022E-07,-7.75721E-07,-1.31048E-06, 
     X-1.50080E-06,-1.35873E-06,-7.48378E-07,-4.83436E-07,-4.69624E-07, 
     X-1.51156E-06,-2.48221E-06,-3.30134E-06,-2.79114E-06,-2.08976E-06, 
     X-2.24768E-06,-1.06947E-06, 1.17462E-06,-2.51423E-07,-7.85729E-07, 
     X 5.37467E-07,-9.39876E-08,-1.11303E-06,-7.46860E-07,-9.36220E-07, 
     X-1.59880E-06,-1.61420E-06,-1.54368E-06,-1.41036E-06,-7.20350E-07, 
     X 1.35544E-07, 3.14481E-07, 6.29265E-07, 1.09161E-06,-1.36044E-07, 
     X-1.22932E-06,-1.29847E-06,-3.26429E-06,-6.01062E-06,-2.09945E-06, 
     X 1.26878E-07,-2.88050E-08,-6.82802E-07,-1.39340E-06,-1.82986E-06/ 
      DATA C22161 /                                                     
     X-1.67208E-06,-1.07994E-06,-1.89195E-06,-2.10782E-06,-1.04519E-06, 
     X-3.27672E-07, 1.95516E-07, 1.63838E-07,-2.29575E-07,-1.01609E-06, 
     X-2.19286E-06,-2.71850E-06,-9.77485E-07,-1.48830E-06,-3.37826E-06, 
     X-1.59130E-06,-5.74498E-07,-8.27962E-07,-9.92211E-07,-1.14422E-06, 
     X-1.41420E-06,-1.11629E-06,-2.51575E-07, 1.60805E-07, 1.82934E-07, 
     X-7.28868E-07,-2.57062E-07, 1.06520E-06, 4.16488E-07, 2.97049E-08, 
     X 6.62797E-08, 8.29435E-07, 1.29657E-06,-2.27961E-06,-3.40386E-06, 
     X-1.88594E-06,-2.29732E-06,-2.72594E-06,-2.09847E-06,-1.31771E-06, 
     X-4.23693E-07,-4.96348E-07,-9.40209E-07,-2.08707E-06,-1.21368E-06, 
     X 4.79409E-07,-1.12548E-08,-4.57316E-07,-8.40885E-07,-5.03210E-07, 
     X-1.61036E-07,-1.05835E-06,-1.66417E-06,-1.97827E-06,-1.63737E-06, 
     X-1.11711E-06,-3.16081E-07,-6.81746E-07,-1.82599E-06,-1.12895E-06, 
     X-9.19712E-07,-1.91707E-06,-2.14767E-06,-2.03629E-06,-2.86441E-06, 
     X-3.07735E-06,-2.28656E-06,-1.40256E-06,-5.50649E-07,-3.11627E-07, 
     X-7.90261E-07,-2.10728E-06,-1.89739E-06,-1.53762E-06,-2.39947E-06, 
     X-2.28765E-06,-1.27564E-06,-2.15154E-06,-3.17932E-06,-3.84234E-06/ 
      DATA C22241 /                                                     
     X-3.65102E-06,-2.84055E-06,-2.48744E-06,-2.27683E-06,-2.33087E-06, 
     X-3.44460E-06,-5.19613E-06,-2.85882E-06,-1.39921E-06,-2.00579E-06, 
     X-2.80593E-06,-3.65940E-06,-2.39526E-06,-1.70389E-06,-2.03532E-06, 
     X-2.71522E-06,-3.42227E-06,-2.23606E-06,-1.77845E-06,-2.42071E-06, 
     X-2.61515E-06,-2.56413E-06,-1.49601E-06,-1.23245E-06,-2.08440E-06, 
     X-2.11121E-06,-1.93424E-06,-2.27439E-06,-2.58183E-06,-2.84705E-06, 
     X-2.32183E-06,-1.80966E-06,-3.04089E-06,-3.14334E-06,-1.91331E-06, 
     X-1.51037E-06,-1.43610E-06,-2.11316E-06,-2.45184E-06,-2.42262E-06/ 
      END                                                               
      BLOCK DATA C4D                                                    
C>    BLOCK DATA                                                        
      COMMON /C4C8/ C401(114),C4115(19),C8(102)                         
C        N2 CONTINUUM ABSORPTION COEFFICIENTS                           
C     C4 LOCATION  1    V =  2080 CM-1                                  
C     C4 LOCATION  133  V =  2740 CM-1                                  
      DATA C401 /                                                       
     1 2.93E-04, 3.86E-04, 5.09E-04, 6.56E-04, 8.85E-04, 1.06E-03,      
     2 1.31E-03, 1.73E-03, 2.27E-03, 2.73E-03, 3.36E-03, 3.95E-03,      
     3 5.46E-03, 7.19E-03, 9.00E-03, 1.13E-02, 1.36E-02, 1.66E-02,      
     4 1.96E-02, 2.16E-02, 2.36E-02, 2.63E-02, 2.90E-02, 3.15E-02,      
     5 3.40E-02, 3.66E-02, 3.92E-02, 4.26E-02, 4.60E-02, 4.95E-02,      
     6 5.30E-02, 5.65E-02, 6.00E-02, 6.30E-02, 6.60E-02, 6.89E-02,      
     7 7.18E-02, 7.39E-02, 7.60E-02, 7.84E-02, 8.08E-02, 8.39E-02,      
     8 8.70E-02, 9.13E-02, 9.56E-02, 1.08E-01, 1.20E-01, 1.36E-01,      
     9 1.52E-01, 1.60E-01, 1.69E-01, 1.60E-01, 1.51E-01, 1.37E-01,      
     $ 1.23E-01, 1.19E-01, 1.16E-01, 1.14E-01, 1.12E-01, 1.12E-01,      
     $ 1.11E-01, 1.11E-01, 1.12E-01, 1.14E-01, 1.13E-01, 1.12E-01,      
     $ 1.09E-01, 1.07E-01, 1.02E-01, 9.90E-02, 9.50E-02, 9.00E-02,      
     $ 8.65E-02, 8.20E-02, 7.65E-02, 7.05E-02, 6.50E-02, 6.10E-02,      
     $ 5.50E-02, 4.95E-02, 4.50E-02, 4.00E-02, 3.75E-02, 3.50E-02,      
     $ 3.10E-02, 2.65E-02, 2.50E-02, 2.20E-02, 1.95E-02, 1.75E-02,      
     $ 1.60E-02, 1.40E-02, 1.20E-02, 1.05E-02, 9.50E-03, 9.00E-03,      
     $ 8.00E-03, 7.00E-03, 6.50E-03, 6.00E-03, 5.50E-03, 4.75E-03,      
     $ 4.00E-03, 3.75E-03, 3.50E-03, 3.00E-03, 2.50E-03, 2.25E-03,      
     $ 2.00E-03, 1.85E-03, 1.70E-03, 1.60E-03, 1.50E-03, 1.50E-03/      
      DATA C4115 /                                                      
     1 1.54E-03, 1.50E-03, 1.47E-03, 1.34E-03, 1.25E-03, 1.06E-03,      
     2 9.06E-04, 7.53E-04, 6.41E-04, 5.09E-04, 4.04E-04, 3.36E-04,      
     3 2.86E-04, 2.32E-04, 1.94E-04, 1.57E-04, 1.31E-04, 1.02E-04,      
     4 8.07E-05/                                                        
C        4M  H2O CONTINUUM                                              
C        OZONE U.V. + VISIBLE BAND MODEL ABSORPTION COEFF               
C     C8 LOCATION  1    V =  13000  CM-1                                
C     C8 LOCATION  56   V =  24200  CM-1                                
C        DV = 200  CM-1                                                 
C     C8 LOCATION  57   V =  27500  CM-1                                
C     C8 LOCATION  102  V =  50000  CM-1                                
C        DV = 500  CM-1                                                 
      DATA C8 /                                                         
     1 4.50E-03, 8.00E-03, 1.07E-02, 1.10E-02, 1.27E-02, 1.71E-02,      
     2 2.00E-02, 2.45E-02, 3.07E-02, 3.84E-02, 4.78E-02, 5.67E-02,      
     3 6.54E-02, 7.62E-02, 9.15E-02, 1.00E-01, 1.09E-01, 1.20E-01,      
     4 1.28E-01, 1.12E-01, 1.11E-01, 1.16E-01, 1.19E-01, 1.13E-01,      
     5 1.03E-01, 9.24E-02, 8.28E-02, 7.57E-02, 7.07E-02, 6.58E-02,      
     6 5.56E-02, 4.77E-02, 4.06E-02, 3.87E-02, 3.82E-02, 2.94E-02,      
     7 2.09E-02, 1.80E-02, 1.91E-02, 1.66E-02, 1.17E-02, 7.70E-03,      
     8 6.10E-03, 8.50E-03, 6.10E-03, 3.70E-03, 3.20E-03, 3.10E-03,      
     9 2.55E-03, 1.98E-03, 1.40E-03, 8.25E-04, 2.50E-04, 0.      ,      
     $ 0.      , 0.      , 5.65E-04, 2.04E-03, 7.35E-03, 2.03E-02,      
     $ 4.98E-02, 1.18E-01, 2.46E-01, 5.18E-01, 1.02E+00, 1.95E+00,      
     $ 3.79E+00, 6.65E+00, 1.24E+01, 2.20E+01, 3.67E+01, 5.95E+01,      
     $ 8.50E+01, 1.26E+02, 1.68E+02, 2.06E+02, 2.42E+02, 2.71E+02,      
     $ 2.91E+02, 3.02E+02, 3.03E+02, 2.94E+02, 2.77E+02, 2.54E+02,      
     $ 2.26E+02, 1.96E+02, 1.68E+02, 1.44E+02, 1.17E+02, 9.75E+01,      
     $ 7.65E+01, 6.04E+01, 4.62E+01, 3.46E+01, 2.52E+01, 2.00E+01,      
     $ 1.57E+01, 1.20E+01, 1.00E+01, 8.80E+00, 8.30E+00, 8.60E+00/      
      END                                                               
      BLOCK DATA CPH2O                                                  
C>    BLOCK DATA                                                        
C                                                                       
C     C' FOR WATER VAPOR (H2O)                                          
      COMMON /H2O/                                                      
     +        C11H2O( 70),                                              
     +        C21H2O(126),C22H2O(  5),                                  
     +        C31H2O(126),C32H2O(  2),                                  
     +        C41H2O(126),C42H2O( 52),                                  
     +        C51H2O(126),C52H2O( 52),                                  
     +        C61H2O(126),C62H2O( 52),                                  
     +        C71H2O(126),C72H2O(126),C73H2O(116),                      
     +        C81H2O(126),C82H2O(126),C83H2O(118),                      
     +        C91H2O(126),C92H2O(126),C93H2O( 71),                      
     +        CA1H2O(126),CA2H2O(126),CA3H2O(126),CA4H2O(7),            
     +        CB1H2O(126),CB2H2O(126),CB3H2O( 54),                      
     +        CC1H2O(126),CC2H2O(126),CC3H2O(106),                      
     +        CD1H2O(126),CD2H2O(111),                                  
     +        CE1H2O(126),CE2H2O(126),CE3H2O( 53)                       
C=H2O ====C' FOR   14 BAND MODELS                                       
C=H2O ====    0-  345                                                   
      DATA C11H2O/                                                      
     X -.59366, -.16679,  .42846,  .87819, 1.26357, 1.59247, 1.86372,   
     X 2.11483, 2.31810, 2.44040, 2.55998, 2.69879, 2.79810, 2.89747,   
     X 2.98118, 3.04863, 3.09568, 3.15381, 3.22984, 3.23785, 3.20991,   
     X 3.14246, 3.03461, 2.98864, 3.03520, 3.08981, 3.10027, 3.11302,   
     X 3.10266, 3.05765, 3.06166, 3.01593, 2.95500, 2.95328, 2.95297,   
     X 2.91497, 2.83753, 2.74642, 2.70474, 2.75606, 2.84097, 2.89052,   
     X 2.89886, 2.86150, 2.78032, 2.67212, 2.52752, 2.39301, 2.38109,   
     8 2.43965, 2.46195, 2.39329, 2.22943, 2.15815, 2.16157, 2.29683,   
     9 2.40335, 2.35569, 2.29239, 2.12968, 2.03781, 1.94313, 1.86282,   
     X 1.87312, 1.88177, 1.95321, 1.94145, 1.92602, 1.92812, 1.90587/   
C=H2O ====  350- 1000                                                   
      DATA C21H2O/                                                      
     X 2.04943, 1.95396, 1.78078, 1.60325, 1.55071, 1.49473, 1.46485,   
     X 1.50231, 1.39831, 1.30664, 1.14704,  .96109,  .93139, 1.00613,   
     X 1.11827, 1.13529, 1.07767,  .96652,  .90777,  .91973,  .90622,   
     X  .93883,  .90861,  .81968,  .79852,  .69385,  .56997,  .49693,   
     X  .40867,  .37846,  .44490,  .53554,  .59020,  .59196,  .50771,   
     X  .34361,  .20796,  .15417,  .13600,  .14235,  .12700,  .08853,   
     X  .06715,  .11430,  .15016,  .15016,  .13964,  .04897, -.04476,   
     8 -.16953, -.30196, -.39901, -.42462, -.39340, -.35671, -.30771,   
     9 -.31570, -.35021, -.47016, -.62308, -.77946, -.85086, -.82482,   
     X -.83468, -.83991, -.89726, -.90918, -.84484, -.71025, -.62777,   
     1 -.66324, -.76848,-1.03341,-1.27044,-1.49576,-1.61769,-1.53549,   
     X-1.47958,-1.33160,-1.29625,-1.40768,-1.52411,-1.72765,-1.82510,   
     X-1.76468,-1.70983,-1.59977,-1.50730,-1.46683,-1.39464,-1.43093,   
     X-1.58947,-1.78778,-2.06146,-2.33634,-2.40749,-2.49065,-2.44182,   
     X-2.25150,-2.19801,-2.08624,-2.10309,-2.27174,-2.36492,-2.45781,   
     X-2.44508,-2.36196,-2.38101,-2.48058,-2.61957,-2.74895,-2.74245,   
     X-2.63961,-2.61588,-2.61569,-2.71770,-2.92220,-3.01021,-2.99432,   
     X-2.89456,-2.79847,-2.73359,-2.69055,-2.65898,-2.60837,-2.63170/   
      DATA C22H2O/                                                      
     X-2.79096,-2.97394,-3.15934,-3.17057,-2.95258/                     
C=H2O ==== 1005- 1640                                                   
      DATA C31H2O/                                                      
     C-2.78308,-2.69196,-2.60867,-2.62239,-2.62637,-2.62950,-2.71010,   
     C-2.72574,-2.71317,-2.61321,-2.51967,-2.42437,-2.38734,-2.45056,   
     C-2.47843,-2.58702,-2.56472,-2.44706,-2.30814,-2.12582,-2.02697,   
     C-1.99880,-2.05659,-2.05701,-2.06643,-2.04721,-1.90723,-1.90946,   
     C-1.92812,-1.86522,-1.88820,-1.77270,-1.60669,-1.51740,-1.40182,   
     C-1.38758,-1.38799,-1.41620,-1.43182,-1.37124,-1.28249,-1.09992,   
     C -.99724, -.97950, -.99952,-1.09066,-1.09980,-1.00750, -.87259,   
     8 -.70131, -.48309, -.30502, -.20407, -.13886, -.19661, -.24505,   
     9 -.28415, -.34466, -.34496, -.28657, -.09485,  .16770,  .38311,   
     C  .48553,  .49475,  .49074,  .52493,  .57439,  .60303,  .66919,   
     1  .75656,  .90385, 1.04976, 1.13836, 1.20132, 1.21963, 1.30344,   
     C 1.41212, 1.46770, 1.47630, 1.45559, 1.43315, 1.49679, 1.62749,   
     C 1.68517, 1.70120, 1.66090, 1.59891, 1.64107, 1.76792, 1.93419,   
     C 2.09362, 2.13280, 2.07959, 2.01987, 1.96835, 2.03073, 2.17591,   
     C 2.32257, 2.49261, 2.60881, 2.66112, 2.68139, 2.70360, 2.70568,   
     C 2.67997, 2.66478, 2.63655, 2.59716, 2.57555, 2.58781, 2.58940,   
     C 2.50826, 2.28771, 1.95070, 1.59144, 1.31269, 1.21786, 1.22507,   
     8 1.31945, 1.53875, 1.78543, 2.02655, 2.22881, 2.32061, 2.34163/   
      DATA C32H2O/                                                      
     C 2.39432, 2.43073/                                                
C=H2O ==== 1645- 2530                                                   
      DATA C41H2O/                                                      
     C 2.53438, 2.55861, 2.51156, 2.46499, 2.46254, 2.51561, 2.56373,   
     C 2.62430, 2.67999, 2.68386, 2.68780, 2.68227, 2.59536, 2.42505,   
     C 2.29307, 2.17816, 2.11945, 2.20521, 2.32197, 2.38083, 2.38052,   
     C 2.25417, 2.11473, 2.06142, 2.02788, 2.01508, 1.97680, 1.91586,   
     C 1.87253, 1.83706, 1.80766, 1.67367, 1.45528, 1.29956, 1.18809,   
     C 1.20246, 1.33650, 1.45778, 1.48886, 1.40546, 1.22716, 1.01444,   
     C  .91282,  .87247,  .83576,  .80170,  .71481,  .66927,  .65846,   
     C  .66839,  .68503,  .66215,  .72413,  .78703,  .77831,  .71136,   
     C  .51200,  .35931,  .30680,  .33365,  .36267,  .32095,  .25710,   
     C  .12363, -.02266, -.18001, -.28048, -.27808, -.19047, -.08151,   
     C -.09169, -.16662, -.24404, -.27238, -.27345, -.32244, -.42037,   
     C -.54071, -.63500, -.69930, -.77174, -.83521, -.86639, -.82329,   
     C -.78820, -.82340, -.83838, -.91387, -.96524, -.96364,-1.05757,   
     C-1.12747,-1.19973,-1.27071,-1.30173,-1.34436,-1.35556,-1.35990,   
     C-1.30386,-1.26726,-1.28022,-1.32843,-1.43599,-1.55929,-1.69416,   
     C-1.79362,-1.86416,-1.90037,-1.91305,-1.94866,-1.95483,-1.92284,   
     C-1.87535,-1.83065,-1.86043,-1.93470,-2.01410,-2.07677,-2.07980,   
     C-2.01822,-1.96078,-1.95185,-1.96638,-2.05704,-2.17667,-2.24120/   
      DATA C42H2O/                                                      
     C-2.27833,-2.33268,-2.37375,-2.43075,-2.54346,-2.60789,-2.68442,   
     C-2.78402,-2.83736,-2.89622,-2.95598,-3.03170,-3.13338,-3.26736,   
     C-3.41725,-3.51456,-3.61586,-3.67210,-3.67841,-3.72135,-3.74941,   
     C-3.78822,-3.85868,-3.90419,-3.91592,-3.97897,-4.00562,-4.08675,   
     C-4.18795,-4.15833,-4.18094,-4.18872,-4.25849,-4.42026,-4.57444,   
     C-4.64021,-4.58636,-4.51788,-4.46274,-4.44165,-4.45450,-4.42101,   
     C-4.35067,-4.30493,-4.23157,-4.11952,-4.01918,-3.93341,-3.81424,   
     C-3.70572,-3.62484,-3.48143/                                       
C=H2O ==== 2535- 3420                                                   
      DATA C51H2O/                                                      
     C-3.35886,-3.26514,-3.15517,-3.02814,-2.95147,-2.83444,-2.68908,   
     C-2.62390,-2.50458,-2.39841,-2.35516,-2.24360,-2.18204,-2.16652,   
     C-2.08381,-2.02597,-1.99880,-1.90122,-1.84045,-1.82575,-1.74889,   
     C-1.70489,-1.66792,-1.60475,-1.59789,-1.59221,-1.60854,-1.66569,   
     C-1.68527,-1.72998,-1.79886,-1.81356,-1.82715,-1.79425,-1.61106,   
     C-1.40549,-1.24369,-1.15433,-1.23589,-1.44178,-1.64717,-1.78560,   
     C-1.84622,-1.77824,-1.69071,-1.66066,-1.58765,-1.54222,-1.51960,   
     8-1.45477,-1.39881,-1.38659,-1.37586,-1.36025,-1.39179,-1.36927,   
     C-1.35455,-1.38734,-1.40292,-1.45598,-1.51545,-1.56173,-1.62478,   
     C-1.69200,-1.75192,-1.81120,-1.83354,-1.87063,-1.89006,-1.88485,   
     C-1.90298,-1.85403,-1.82001,-1.82495,-1.82901,-1.90076,-1.93649,   
     C-1.83304,-1.70268,-1.52380,-1.41443,-1.41301,-1.39373,-1.34561,   
     C-1.20932,-1.03186, -.85296, -.71145, -.59825, -.51884, -.51690,   
     C -.51723, -.52224, -.50043, -.40989, -.32204, -.24881, -.18653,   
     C -.17548, -.22729, -.32885, -.46183, -.47994, -.36042, -.23072,   
     6 -.12160, -.06422, -.14924, -.21674, -.17913, -.15803, -.04515,   
     C  .14450,  .28118,  .39718,  .49818,  .51040,  .44761,  .29666,   
     8  .01147, -.32421, -.66518, -.96090,-1.13017,-1.18009,-1.08032/   
      DATA C52H2O/                                                      
     C -.80133, -.52001, -.33748, -.22519, -.20871, -.26962, -.22592,   
     C -.15919, -.07358,  .09367,  .20019,  .25965,  .27816,  .28577,   
     C  .22305,  .17722,  .14469,  .06694,  .07268,  .10103,  .14554,   
     C  .20352,  .25681,  .25790,  .21316,  .15965,  .08703,  .01638,   
     C -.03529, -.03274, -.08812, -.12524, -.13536, -.23808, -.28262,   
     C -.30082, -.29252, -.13320,  .05226,  .17657,  .21670,  .12268,   
     C  .00438, -.03051, -.00359,  .02967,  .04460, -.01109, -.06041,   
     C -.07485, -.02511,  .07116/                                       
C=H2O ==== 3425- 4310                                                   
      DATA C61H2O/                                                      
     C  .18506,  .27668,  .32130,  .35452,  .39867,  .36470,  .34978,   
     C  .36519,  .38993,  .47009,  .54349,  .60193,  .67101,  .73253,   
     C  .84100,  .92974, 1.00406, 1.06301, 1.07261, 1.09629, 1.10790,   
     C 1.10959, 1.11710, 1.15716, 1.24152, 1.34834, 1.45152, 1.53939,   
     C 1.59331, 1.60894, 1.63833, 1.67031, 1.74144, 1.82069, 1.90463,   
     C 1.98593, 2.02996, 2.10254, 2.16357, 2.16140, 2.11190, 2.06655,   
     C 2.02241, 2.02978, 2.06771, 2.04985, 2.02048, 1.99566, 2.01593,   
     8 2.11269, 2.22805, 2.27037, 2.23480, 2.16907, 2.09990, 2.08096,   
     C 2.10710, 2.15298, 2.19061, 2.25811, 2.34221, 2.43200, 2.59765,   
     C 2.72007, 2.77243, 2.71671, 2.56246, 2.33896, 2.14412, 1.97864,   
     C 1.79640, 1.73371, 1.71380, 1.74950, 1.91932, 2.10063, 2.26262,   
     C 2.36884, 2.42988, 2.47605, 2.51875, 2.53371, 2.51476, 2.47425,   
     C 2.40051, 2.39254, 2.39540, 2.35342, 2.33460, 2.26830, 2.17169,   
     C 2.09605, 2.04747, 2.01127, 1.89721, 1.74928, 1.55948, 1.38069,   
     C 1.34831, 1.35751, 1.35809, 1.34286, 1.25929, 1.16743, 1.09595,   
     6 1.00365,  .87965,  .76257,  .64206,  .56343,  .49943,  .40691,   
     C  .29104,  .18437,  .12690,  .09157,  .13377,  .18899,  .20257,   
     8  .19155,  .09384, -.01238, -.14283, -.26122, -.31851, -.45610/   
      DATA C62H2O/                                                      
     C -.58273, -.65867, -.73100, -.66169, -.52264, -.46798, -.50258,   
     C -.59104, -.72925, -.81067, -.80914, -.86943, -.92975, -.92524,   
     C -.88289, -.79203, -.69250, -.68167, -.75444, -.86193, -.97556,   
     C-1.10473,-1.20018,-1.24824,-1.27702,-1.22693,-1.18773,-1.13552,   
     C-1.14015,-1.21589,-1.26394,-1.39464,-1.46192,-1.52629,-1.64635,   
     C-1.71511,-1.78752,-1.79358,-1.77801,-1.75599,-1.77196,-1.83224,   
     C-1.89985,-1.98528,-2.09408,-2.24126,-2.37607,-2.43218,-2.43830,   
     C-2.38400,-2.33538,-2.43573/                                       
C=H2O ==== 4315- 6150                                                   
      DATA C71H2O/                                                      
     X-2.52275,-2.67290,-2.83451,-2.93019,-3.01749,-3.02463,-2.99666,   
     X-2.95414,-2.91300,-2.96493,-3.07471,-3.25693,-3.47657,-3.67222,   
     X-3.88925,-3.97727,-3.94079,-3.81920,-3.66194,-3.59739,-3.64351,   
     X-3.74016,-3.90037,-4.04679,-4.07663,-4.03256,-3.91836,-3.80990,   
     X-3.76032,-3.77951,-3.84240,-3.90305,-3.92223,-3.82628,-3.65450,   
     X-3.44339,-3.25756,-3.09919,-3.00901,-2.95747,-2.88271,-2.82108,   
     X-2.72633,-2.59367,-2.46775,-2.36235,-2.28438,-2.27343,-2.30886,   
     8-2.33620,-2.27813,-2.20677,-2.16170,-2.14594,-2.24245,-2.36299,   
     X-2.42996,-2.50866,-2.55678,-2.50968,-2.47465,-2.42796,-2.37981,   
     X-2.34092,-2.30518,-2.26753,-2.27390,-2.44156,-2.72384,-3.06108,   
     X-3.38056,-3.48970,-3.41674,-3.36528,-3.27790,-3.15495,-3.01945,   
     X-2.81869,-2.66003,-2.56096,-2.49017,-2.46335,-2.51454,-2.59743,   
     X-2.67025,-2.78841,-2.77863,-2.63881,-2.54169,-2.40240,-2.37146,   
     X-2.46253,-2.54291,-2.65346,-2.69467,-2.69130,-2.65025,-2.59152,   
     X-2.56343,-2.50785,-2.44665,-2.41418,-2.34553,-2.28223,-2.25278,   
     6-2.20694,-2.16892,-2.14295,-2.14341,-2.16443,-2.24853,-2.38594,   
     X-2.49449,-2.58047,-2.55462,-2.41673,-2.35641,-2.32619,-2.34603,   
     8-2.40102,-2.30576,-2.20532,-2.09307,-2.00782,-2.00039,-1.91252/   
      DATA C72H2O/                                                      
     X-1.80383,-1.65749,-1.55728,-1.59262,-1.70939,-1.83569,-1.84895,   
     X-1.71457,-1.53813,-1.41904,-1.37588,-1.39458,-1.39135,-1.35232,   
     X-1.30470,-1.24821,-1.20394,-1.19607,-1.15995,-1.13948,-1.11024,   
     X-1.03785, -.99804, -.95430, -.92707, -.93592, -.93528, -.86881,   
     X -.75121, -.55836, -.35056, -.22085, -.13412, -.12673, -.13867,   
     X -.11656, -.07357,  .01888,  .11050,  .20428,  .29291,  .35923,   
     X  .43608,  .47266,  .49792,  .54978,  .60489,  .67778,  .71787,   
     8  .73606,  .74796,  .75193,  .81728,  .87972,  .95990, 1.07451,   
     X 1.13098, 1.17565, 1.19031, 1.20334, 1.27687, 1.35910, 1.41924,   
     X 1.37988, 1.28213, 1.16286, 1.08658, 1.06554, 1.03702, 1.01290,   
     X  .95519,  .94231,  .94216,  .95764, 1.03405, 1.11309, 1.27076,   
     X 1.48131, 1.66125, 1.76502, 1.68299, 1.50126, 1.28195, 1.13724,   
     X 1.09863, 1.12031, 1.23502, 1.34328, 1.39556, 1.40851, 1.40939,   
     X 1.40259, 1.39505, 1.38427, 1.33724, 1.29860, 1.34354, 1.43194,   
     X 1.50874, 1.54493, 1.48740, 1.37260, 1.26973, 1.21297, 1.11026,   
     6  .97625,  .87238,  .76100,  .71825,  .73936,  .69604,  .64138,   
     X  .59585,  .51097,  .44903,  .40524,  .29892,  .21583,  .19145,   
     8  .15378,  .13759,  .09412, -.04455, -.18870, -.28538, -.37204/   
      DATA C73H2O/                                                      
     X -.46390, -.57884, -.70647, -.78911, -.79511, -.76645, -.76146,   
     X -.80163, -.83155, -.86672, -.92994, -.99971,-1.10990,-1.25701,   
     X-1.32841,-1.33350,-1.35269,-1.31799,-1.35095,-1.48830,-1.57874,   
     X-1.67539,-1.72874,-1.68087,-1.67518,-1.73066,-1.77654,-1.79238,   
     X-1.81386,-1.77187,-1.73774,-1.78673,-1.82129,-1.86174,-1.87867,   
     X-1.92986,-1.95895,-1.98042,-2.10738,-2.14350,-2.22883,-2.35165,   
     X-2.30593,-2.31343,-2.23607,-2.17791,-2.29047,-2.40740,-2.60466,   
     8-2.70413,-2.67647,-2.64479,-2.62274,-2.66727,-2.67591,-2.66531,   
     X-2.64576,-2.69566,-2.79611,-2.90809,-2.99381,-2.94495,-2.94833,   
     X-2.97002,-3.01283,-3.07907,-3.08348,-3.06412,-3.08084,-3.20105,   
     X-3.32453,-3.49652,-3.63219,-3.65897,-3.69476,-3.63741,-3.54369,   
     X-3.44992,-3.41310,-3.43168,-3.48306,-3.57513,-3.59385,-3.59684,   
     X-3.60814,-3.50612,-3.41284,-3.34107,-3.27248,-3.26950,-3.31027,   
     X-3.32205,-3.29589,-3.29768,-3.28777,-3.29950,-3.39843,-3.43784,   
     X-3.47042,-3.54250,-3.55457,-3.69278,-3.82390,-3.91709,-4.02428,   
     6-3.97802,-4.04945,-3.99837,-3.96096,-4.01515,-4.01286,-4.27890,   
     7-4.64526,-4.92520,-5.20714,-5.02961/                              
C=H2O ==== 6155- 8000                                                   
      DATA C81H2O/                                                      
     X-4.88315,-4.85584,-4.76921,-4.54440,-4.33075,-4.16671,-4.04406,   
     X-4.09564,-4.11792,-4.14522,-4.19109,-4.14906,-4.22221,-4.35301,   
     X-4.47867,-4.50537,-4.41913,-4.24856,-4.05892,-3.91396,-3.73977,   
     X-3.60042,-3.52610,-3.50040,-3.55218,-3.66025,-3.77097,-3.87835,   
     X-3.96454,-3.93046,-3.92926,-3.96805,-3.99038,-4.10179,-4.21981,   
     X-4.24013,-4.26190,-4.27753,-4.25594,-4.28500,-4.29071,-4.26155,   
     X-4.16114,-4.04160,-3.91756,-3.82524,-3.76258,-3.74207,-3.77017,   
     8-3.80666,-3.92858,-4.01356,-4.10145,-4.16708,-4.09123,-4.00345,   
     X-3.88032,-3.81171,-3.80771,-3.83212,-3.88507,-3.81399,-3.70048,   
     X-3.58376,-3.46350,-3.42785,-3.41629,-3.40329,-3.36172,-3.26599,   
     X-3.16908,-3.10954,-3.03394,-2.95828,-2.85536,-2.71469,-2.60076,   
     X-2.48946,-2.38513,-2.32220,-2.30051,-2.34186,-2.37590,-2.33267,   
     X-2.21087,-2.03216,-1.91013,-1.82328,-1.77996,-1.76714,-1.72488,   
     X-1.71325,-1.67669,-1.62963,-1.60411,-1.54027,-1.47681,-1.37155,   
     X-1.25978,-1.23494,-1.26986,-1.33751,-1.37220,-1.28322,-1.14853,   
     6-1.03021, -.89832, -.84340, -.83317, -.78856, -.76905, -.69209,   
     X -.53147, -.37401, -.25508, -.21755, -.22627, -.23936, -.22223,   
     8 -.17345, -.11880, -.10331, -.15444, -.20353, -.25350, -.26628/   
      DATA C82H2O/                                                      
     X -.13441,  .02358,  .13657,  .22032,  .19637,  .12621,  .07999,   
     X  .04393, -.01900, -.06543, -.08129, -.14847, -.17765, -.23113,   
     X -.29309, -.28723, -.27521, -.20013, -.11575, -.00428,  .10976,   
     X  .16530,  .18309,  .13200,  .10610,  .10394,  .13621,  .17117,   
     X  .17251,  .18671,  .16161,  .16640,  .18417,  .18573,  .24876,   
     X  .26103,  .28476,  .33612,  .30642,  .30150,  .27173,  .21976,   
     X  .23130,  .27376,  .30887,  .34334,  .34765,  .31180,  .30774,   
     8  .31256,  .35423,  .42454,  .44493,  .43846,  .44507,  .43684,   
     X  .49327,  .53868,  .51933,  .54592,  .54951,  .63201,  .74737,   
     X  .80266,  .88719,  .87874,  .84412,  .84352,  .81737,  .86380,   
     X  .94765,  .95553,  .93965,  .90241,  .91481, 1.00917, 1.11552,   
     X 1.15202, 1.06885,  .96737,  .85164,  .80701,  .82571,  .87391,   
     X  .98520, 1.07042, 1.18051, 1.29004, 1.37755, 1.48278, 1.47663,   
     X 1.40851, 1.27508, 1.11986,  .98454,  .88260,  .82338,  .79509,   
     X  .83355,  .91046, 1.04503, 1.21868, 1.36672, 1.46155, 1.47085,   
     6 1.46520, 1.42619, 1.37940, 1.41333, 1.43128, 1.45974, 1.54526,   
     X 1.53032, 1.48103, 1.39624, 1.26267, 1.17261, 1.09232, 1.05888,   
     8 1.01929,  .94626,  .87615,  .73334,  .61962,  .52576,  .40124/   
      DATA C83H2O/                                                      
     X  .32424,  .20042,  .05769, -.09325, -.27407, -.40779, -.52559,   
     X -.58490, -.57916, -.54457, -.50743, -.45937, -.41861, -.41520,   
     X -.39164, -.36510, -.30857, -.23157, -.18280, -.15878, -.21295,   
     X -.29332, -.39457, -.54826, -.71006, -.87700, -.96819, -.98703,   
     X -.93748, -.83916, -.78698, -.76209, -.80754, -.93347,-1.06076,   
     X-1.15801,-1.16256,-1.09618,-1.03195,-1.05522,-1.13586,-1.23387,   
     X-1.33214,-1.32682,-1.33648,-1.38038,-1.42553,-1.49769,-1.52950,   
     8-1.54445,-1.56745,-1.61707,-1.69148,-1.76787,-1.82556,-1.84347,   
     X-1.86221,-1.87097,-1.84614,-1.88659,-1.98535,-2.12108,-2.27740,   
     X-2.39335,-2.39886,-2.33846,-2.30442,-2.27409,-2.29854,-2.39124,   
     X-2.56427,-2.73609,-2.88840,-3.00443,-3.02685,-3.09379,-3.16003,   
     X-3.13090,-3.06189,-3.00807,-2.95169,-3.01568,-3.11918,-3.18931,   
     X-3.35446,-3.46712,-3.51002,-3.48618,-3.36603,-3.29278,-3.32935,   
     X-3.47177,-3.61763,-3.68930,-3.67420,-3.62078,-3.67644,-3.76717,   
     X-3.78944,-3.79818,-3.75336,-3.74321,-3.86778,-3.96899,-4.05004,   
     6-4.15451,-4.17979,-4.22704,-4.28851,-4.25560,-4.21920,-4.27564,   
     7-4.42921,-4.58506,-4.70967,-4.80136,-4.64650,-4.65341/            
C=H2O ==== 8005- 9615                                                   
      DATA C91H2O/                                                      
     X-4.51995,-4.42433,-4.42137,-4.44853,-4.44819,-4.49132,-4.49176,   
     X-4.52929,-4.58468,-4.60533,-4.62362,-4.60168,-4.59803,-4.45292,   
     X-4.26920,-4.09891,-3.92615,-3.86016,-3.69436,-3.53699,-3.38584,   
     X-3.23356,-3.19281,-3.14232,-3.11326,-3.04386,-2.90514,-2.80270,   
     X-2.68808,-2.62726,-2.61349,-2.57111,-2.54465,-2.47142,-2.42795,   
     X-2.40936,-2.37936,-2.41255,-2.40417,-2.41017,-2.39774,-2.33861,   
     X-2.23985,-2.08388,-2.00350,-1.93767,-1.91020,-1.92815,-1.89802,   
     8-1.85648,-1.84229,-1.86062,-1.89799,-1.95863,-2.01858,-2.05596,   
     X-2.06508,-2.02824,-1.93392,-1.83965,-1.74890,-1.71252,-1.72275,   
     X-1.71193,-1.68781,-1.66945,-1.64316,-1.63675,-1.69286,-1.70297,   
     X-1.72751,-1.75100,-1.73714,-1.79804,-1.84371,-1.86235,-1.88812,   
     X-1.83704,-1.77649,-1.70661,-1.60188,-1.50341,-1.43505,-1.46076,   
     X-1.51651,-1.57911,-1.61619,-1.55812,-1.49706,-1.45230,-1.42832,   
     X-1.44314,-1.52138,-1.60752,-1.62106,-1.64265,-1.64250,-1.64573,   
     X-1.74951,-1.80667,-1.76036,-1.68790,-1.57515,-1.53228,-1.57292,   
     6-1.61350,-1.65583,-1.63563,-1.58694,-1.56417,-1.53128,-1.54079,   
     X-1.55014,-1.53022,-1.53190,-1.50230,-1.50260,-1.49991,-1.45992,   
     8-1.41944,-1.31703,-1.21850,-1.14990,-1.08809,-1.04748,-1.01748/   
      DATA C92H2O/                                                      
     X -.95109, -.84680, -.74538, -.60472, -.50362, -.46372, -.42447,   
     X -.44838, -.44419, -.40683, -.38084, -.33053, -.32846, -.33572,   
     X -.31158, -.29906, -.20305, -.13083, -.09973, -.06963, -.12740,   
     X -.20199, -.29978, -.35896, -.38843, -.41730, -.45017, -.51507,   
     X -.56213, -.57297, -.50844, -.42276, -.29372, -.08843,  .09240,   
     X  .25840,  .28311,  .13891, -.06768, -.28207, -.39760, -.40444,   
     X -.31138, -.14305, -.02128,  .04782,  .08894,  .10200,  .09648,   
     8  .10814,  .09787,  .04275,  .07559,  .12150,  .14186,  .19034,   
     X  .13856,  .07934,  .05903, -.00117, -.04140, -.11747, -.21938,   
     X -.28241, -.37335, -.49225, -.58631, -.68229, -.75086, -.77623,   
     X -.84652, -.93691,-1.00829,-1.07836,-1.10936,-1.10990,-1.10672,   
     X-1.07623,-1.03447,-1.01613,-1.00369, -.99511,-1.06778,-1.12221,   
     X-1.14258,-1.19379,-1.17257,-1.15262,-1.17033,-1.16389,-1.14503,   
     X-1.13643,-1.12323,-1.19203,-1.33003,-1.47540,-1.65339,-1.68424,   
     X-1.66968,-1.67118,-1.61782,-1.65910,-1.73337,-1.81449,-1.93135,   
     6-2.03554,-2.03827,-1.99609,-2.00710,-2.03895,-2.19678,-2.30931,   
     X-2.30301,-2.23226,-2.07787,-2.03277,-2.03851,-2.10514,-2.23452,   
     8-2.33474,-2.44465,-2.43944,-2.37675,-2.35973,-2.37611,-2.48915/   
      DATA C93H2O/                                                      
     X-2.59681,-2.62562,-2.61907,-2.61274,-2.73225,-2.84636,-2.91882,   
     X-2.95084,-2.84617,-2.83687,-2.84531,-2.82928,-2.88406,-2.93621,   
     X-3.00526,-3.09956,-3.16051,-3.18338,-3.25056,-3.38003,-3.56102,   
     X-3.72396,-3.80811,-3.82369,-3.79760,-3.90921,-4.04910,-4.14132,   
     X-4.22416,-4.16634,-4.21193,-4.37375,-4.54004,-4.54848,-4.34009,   
     X-4.10097,-3.93945,-3.99014,-4.18155,-4.46321,-4.84035,-4.95672,   
     X-4.88529,-4.92967,-5.09480,-5.27981,-5.39165,-5.32774,-5.16805,   
     8-5.26308,-5.53619,-5.93153,-6.48485,-6.38350,-6.02883,-5.76237,   
     X-5.65535,-5.58220,-5.58090,-5.69939,-5.87562,-6.23761,-6.45380,   
     X-6.50710,-6.40861,-6.18069,-6.15034,-6.12957,-6.08168,-6.05912,   
     1-6.20029/                                                         
C=H2O ==== 9620-11540                                                   
      DATA CA1H2O/                                                      
     X-6.35916,-6.63834,-7.22799,-6.87579,-6.38557,-6.05701,-5.77145,   
     X-5.71889,-5.54063,-5.34887,-5.20440,-5.01687,-4.88229,-4.75732,   
     X-4.61829,-4.47540,-4.40382,-4.22901,-4.07893,-3.91067,-3.71540,   
     X-3.66982,-3.60413,-3.59635,-3.66139,-3.67630,-3.61574,-3.49060,   
     X-3.33033,-3.18950,-3.19004,-3.27293,-3.43811,-3.58539,-3.69658,   
     X-3.64411,-3.52966,-3.51758,-3.45900,-3.56858,-3.67516,-3.75396,   
     X-3.80574,-3.77074,-3.74231,-3.63809,-3.64323,-3.59911,-3.62673,   
     8-3.64385,-3.54801,-3.49160,-3.38461,-3.33358,-3.21719,-3.04173,   
     X-2.89493,-2.77334,-2.79171,-2.91085,-3.04844,-3.23627,-3.31742,   
     X-3.35484,-3.39756,-3.34285,-3.36017,-3.34117,-3.26031,-3.20256,   
     X-3.07615,-2.98533,-3.01199,-3.13943,-3.33780,-3.54162,-3.64413,   
     X-3.59251,-3.59490,-3.60162,-3.66139,-3.81236,-3.87304,-4.04749,   
     X-4.11623,-4.09447,-4.12708,-3.91916,-3.77960,-3.62012,-3.44890,   
     X-3.42739,-3.42156,-3.36932,-3.34675,-3.22941,-3.12258,-3.12447,   
     X-3.07216,-3.06608,-3.04637,-2.99581,-3.00597,-2.94524,-2.83430,   
     6-2.69244,-2.53460,-2.44553,-2.36211,-2.25128,-2.12504,-1.99329,   
     X-1.94694,-1.96858,-2.02552,-2.02890,-1.95458,-1.83064,-1.68469,   
     8-1.63148,-1.63055,-1.64868,-1.68433,-1.65098,-1.54445,-1.45543/   
      DATA CA2H2O/                                                      
     X-1.39405,-1.35500,-1.38974,-1.43708,-1.49729,-1.58141,-1.63709,   
     X-1.71988,-1.74834,-1.78729,-1.81439,-1.79445,-1.80727,-1.78446,   
     X-1.77116,-1.69515,-1.57106,-1.41358,-1.22505,-1.11749,-1.06719,   
     X-1.05722,-1.05923,-1.08022,-1.08249,-1.05940,-1.05527, -.97884,   
     X -.90009, -.86984, -.84202, -.84891, -.86571, -.87771, -.86436,   
     X -.89675, -.95811, -.95681, -.98685, -.91920, -.79481, -.73405,   
     X -.63486, -.61580, -.66083, -.69059, -.75323, -.74477, -.65052,   
     8 -.58475, -.56151, -.61494, -.70313, -.70147, -.64776, -.57626,   
     X -.52669, -.56405, -.57813, -.57452, -.57656, -.52371, -.48121,   
     X -.47066, -.44204, -.42321, -.43939, -.40019, -.34592, -.36666,   
     X -.36117, -.41494, -.53334, -.63311, -.73668, -.83196, -.91543,   
     X -.92801, -.91893, -.82619, -.64369, -.45814, -.28838, -.20295,   
     X -.12845, -.12789, -.14668, -.10804, -.12206, -.08664, -.05495,   
     X -.09929, -.16477, -.24481, -.32305, -.39276, -.44000, -.52873,   
     X -.60139, -.69141, -.79857, -.89923,-1.00968,-1.08832,-1.14958,   
     6-1.21303,-1.28067,-1.38492,-1.47822,-1.51729,-1.55518,-1.53633,   
     X-1.51062,-1.50327,-1.51801,-1.57645,-1.65941,-1.73134,-1.75165,   
     8-1.72655,-1.71606,-1.73263,-1.74728,-1.79286,-1.73848,-1.66180/   
      DATA CA3H2O/                                                      
     X-1.56283,-1.40366,-1.32738,-1.25309,-1.25065,-1.26987,-1.24009,   
     X-1.22822,-1.19404,-1.20867,-1.23645,-1.19332,-1.13591,-1.08205,   
     X-1.04976,-1.14128,-1.23489,-1.27858,-1.33065,-1.28360,-1.22682,   
     X-1.18706,-1.15823,-1.14067,-1.16633,-1.17506,-1.15970,-1.19126,   
     X-1.19843,-1.30385,-1.42862,-1.58004,-1.72327,-1.78743,-1.86895,   
     X-1.85190,-1.80529,-1.69422,-1.49103,-1.32529,-1.20009,-1.13762,   
     X-1.11678,-1.13199,-1.16550,-1.16402,-1.17932,-1.17405,-1.15184,   
     8-1.20924,-1.29157,-1.34831,-1.38571,-1.42632,-1.43812,-1.50800,   
     X-1.62119,-1.70590,-1.86161,-2.00714,-2.11745,-2.25960,-2.34777,   
     X-2.44254,-2.64264,-2.83979,-3.04320,-3.29364,-3.41153,-3.49359,   
     X-3.60572,-3.67873,-3.78090,-3.85398,-3.88200,-3.83753,-3.77740,   
     X-3.85401,-3.79646,-3.72746,-3.70451,-3.59083,-3.70223,-3.88363,   
     X-4.03077,-4.20725,-4.19594,-4.16725,-4.13410,-4.16791,-4.12138,   
     X-4.08875,-4.14355,-4.10163,-4.19018,-4.25695,-4.31184,-4.47906,   
     X-4.51148,-4.57929,-4.59458,-4.62081,-4.83031,-5.02522,-5.15710,   
     6-5.27403,-5.22837,-5.32058,-5.55260,-5.72630,-5.86735,-5.86402,   
     X-5.84419,-5.89720,-6.15533,-6.51283,-6.98011,-7.28495,-7.08784,   
     8-6.77605,-6.49215,-6.43947,-6.42083,-6.59354,-6.78419,-6.98883/   
      DATA CA4H2O/                                                      
     X-7.11018,-6.93420,-6.83581,-6.87136,-6.96133,-7.28561,-8.27079/   
C=H2O ====11545-13070                                                   
      DATA CB1H2O/                                                      
     X-8.59451,-9.45197,-8.33631,-8.21424,-6.89777,-6.27923,-5.89945,   
     X-5.66364,-5.69459,-5.87082,-5.81185,-5.70141,-5.45890,-5.24048,   
     X-5.30703,-5.32430,-5.18694,-5.03410,-4.82279,-4.72208,-4.55097,   
     X-4.36284,-4.20326,-4.04534,-4.05883,-4.01183,-3.93857,-3.83212,   
     X-3.66113,-3.56021,-3.45969,-3.38518,-3.33373,-3.32721,-3.34771,   
     X-3.35412,-3.34584,-3.22701,-3.14293,-3.09481,-3.05706,-3.13587,   
     X-3.18156,-3.26336,-3.34559,-3.38498,-3.39054,-3.33695,-3.34959,   
     8-3.36191,-3.53258,-3.66238,-3.68946,-3.69155,-3.52990,-3.48606,   
     X-3.41160,-3.34144,-3.31933,-3.26341,-3.22609,-3.18298,-3.12800,   
     X-3.02166,-2.93903,-2.84135,-2.69864,-2.63582,-2.60853,-2.59699,   
     X-2.64799,-2.71846,-2.70856,-2.67797,-2.67978,-2.58432,-2.57052,   
     X-2.57883,-2.48977,-2.47541,-2.43446,-2.39253,-2.42823,-2.44830,   
     X-2.49704,-2.54904,-2.54865,-2.51223,-2.39407,-2.28582,-2.22341,   
     X-2.18280,-2.17308,-2.15234,-2.10486,-2.08564,-2.08578,-2.09615,   
     X-2.11136,-2.10200,-2.06832,-2.04134,-2.00194,-1.95185,-1.92025,   
     6-1.85931,-1.85988,-1.91696,-2.01129,-2.15097,-2.20539,-2.21302,   
     X-2.22309,-2.24412,-2.30471,-2.33847,-2.25445,-2.08096,-1.85098,   
     8-1.61538,-1.45841,-1.42089,-1.54484,-1.74234,-1.96839,-2.18038/   
      DATA CB2H2O/                                                      
     X-2.28394,-2.31701,-2.24125,-2.05966,-1.88694,-1.78105,-1.69960,   
     X-1.64107,-1.62909,-1.58168,-1.56599,-1.59412,-1.56739,-1.56346,   
     X-1.54456,-1.55619,-1.61000,-1.67072,-1.75312,-1.82511,-1.87588,   
     X-1.89436,-1.94377,-1.96038,-2.02291,-2.14131,-2.19637,-2.27114,   
     X-2.33418,-2.36152,-2.44688,-2.53819,-2.61011,-2.69105,-2.73774,   
     X-2.76700,-2.82031,-2.85910,-2.88525,-2.95422,-2.99210,-3.06247,   
     X-3.12280,-3.12274,-3.13972,-3.09998,-3.11771,-3.10670,-3.00116,   
     8-2.91302,-2.75838,-2.66379,-2.65726,-2.62212,-2.59431,-2.55351,   
     X-2.49874,-2.47486,-2.52563,-2.54608,-2.54311,-2.54938,-2.49038,   
     X-2.49664,-2.52688,-2.58688,-2.67000,-2.71830,-2.77113,-2.80244,   
     X-2.84845,-2.87062,-2.83368,-2.69338,-2.52225,-2.40864,-2.34429,   
     X-2.40612,-2.55941,-2.73915,-2.94409,-3.12344,-3.27308,-3.32104,   
     X-3.27077,-3.13129,-2.92504,-2.78515,-2.71007,-2.66733,-2.62518,   
     X-2.62279,-2.59906,-2.56745,-2.59548,-2.53657,-2.50849,-2.47640,   
     X-2.46021,-2.53747,-2.62220,-2.76449,-2.88041,-2.96357,-3.02153,   
     6-3.06178,-3.14581,-3.25318,-3.44687,-3.69634,-3.90497,-4.09399,   
     X-4.22346,-4.29749,-4.51957,-4.79572,-5.03708,-5.27140,-5.34657,   
     8-5.44757,-5.52207,-5.57087,-5.64385,-5.80294,-5.90763,-5.94797/   
      DATA CB3H2O/                                                      
     X-5.85439,-5.62721,-5.45121,-5.40324,-5.38540,-5.39409,-5.59404,   
     X-5.69955,-5.76877,-5.86764,-5.78129,-5.88887,-6.12206,-6.37505,   
     X-6.85575,-7.13884,-6.98622,-6.96112,-6.84830,-6.72456,-6.67530,   
     X-6.65251,-6.66033,-6.88151,-7.11199,-7.33922,-7.61766,-7.66585,   
     X-7.87464,-8.59519,-9.04047,-9.30602,-9.51273,-8.93688,-9.43151,   
     X-8.84005,-10.0000,-9.65151,-8.98420,-10.0000,-9.43151,-9.68331,   
     X-10.0000,-9.43067,-9.90527,-10.0000,-9.98810,-9.65151,-9.74384,   
     8-9.20004,-10.0000,-9.20004,-10.0000,-10.0000/                     
C=H2O ====13075-14860                                                   
      DATA CC1H2O/                                                      
     X-9.85239,-8.09585,-7.66916,-7.89183,-8.46587,-8.79342,-8.93440,   
     X-8.68356,-8.83423,-8.01626,-7.91911,-8.27604,-9.44864,-9.69462,   
     X-10.0000,-9.69462,-8.31857,-7.91867,-7.86404,-8.32240,-8.68705,   
     X-9.61515,-9.25284,-8.68705,-8.28789,-7.63730,-8.25919,-10.0000,   
     X-9.51758,-10.0000,-10.0000,-9.51758,-8.05261,-7.76848,-8.24255,   
     X-9.34171,-9.19941,-8.56505,-7.78955,-7.23750,-6.64136,-6.41854,   
     X-6.14335,-5.86704,-5.70840,-5.48179,-5.23814,-5.00650,-4.80407,   
     8-4.69986,-4.70404,-4.80846,-4.99355,-5.19947,-5.33300,-5.30550,   
     X-5.17017,-5.05309,-4.95685,-4.79959,-4.65496,-4.54077,-4.44407,   
     X-4.43768,-4.47167,-4.40429,-4.30236,-4.22549,-4.15283,-4.06900,   
     X-3.99244,-3.87562,-3.76949,-3.78198,-3.77003,-3.67364,-3.52061,   
     X-3.34459,-3.20426,-3.15993,-3.13851,-3.09692,-3.07747,-3.02936,   
     X-3.02192,-2.96720,-2.90584,-2.79069,-2.65042,-2.62072,-2.53133,   
     X-2.50554,-2.48745,-2.41611,-2.43532,-2.40913,-2.38723,-2.33337,   
     X-2.21812,-2.15072,-2.08313,-2.06151,-2.10585,-2.13670,-2.18757,   
     6-2.23995,-2.26992,-2.34229,-2.38059,-2.38087,-2.33246,-2.21618,   
     X-2.14795,-2.12707,-2.09130,-2.05043,-1.95550,-1.77077,-1.66044,   
     8-1.58224,-1.51702,-1.54004,-1.54074,-1.53712,-1.54938,-1.52352/   
      DATA CC2H2O/                                                      
     X-1.49404,-1.51985,-1.57774,-1.64393,-1.65332,-1.56238,-1.45105,   
     X-1.39264,-1.40635,-1.46167,-1.50365,-1.47751,-1.47268,-1.45992,   
     X-1.46654,-1.50223,-1.47576,-1.47730,-1.46977,-1.45630,-1.44490,   
     X-1.43097,-1.43664,-1.49313,-1.63372,-1.81848,-1.97938,-2.06009,   
     X-2.10124,-2.02376,-1.95095,-1.86835,-1.70161,-1.54835,-1.37614,   
     X-1.25130,-1.17408,-1.17670,-1.19790,-1.21344,-1.27252,-1.28030,   
     X-1.31031,-1.34321,-1.34056,-1.35264,-1.38137,-1.44648,-1.56735,   
     8-1.72096,-1.88960,-2.06793,-2.19583,-2.29229,-2.34400,-2.34120,   
     X-2.36407,-2.39688,-2.45450,-2.53132,-2.58327,-2.60585,-2.60773,   
     X-2.60606,-2.64243,-2.71853,-2.78182,-2.84459,-2.83665,-2.78522,   
     X-2.71157,-2.61628,-2.53314,-2.45692,-2.41679,-2.41535,-2.45500,   
     X-2.51120,-2.57918,-2.62854,-2.63617,-2.61204,-2.53833,-2.43992,   
     X-2.37490,-2.34880,-2.34476,-2.36650,-2.36553,-2.34094,-2.33633,   
     X-2.30483,-2.26933,-2.25141,-2.22841,-2.27610,-2.33673,-2.37913,   
     X-2.44271,-2.48571,-2.57146,-2.64200,-2.61103,-2.47198,-2.27897,   
     6-2.15874,-2.06557,-2.05371,-2.06333,-2.04641,-2.04429,-2.01040,   
     X-2.00804,-1.99416,-2.05499,-2.09948,-2.09706,-2.10517,-2.01267,   
     8-1.99934,-2.03719,-2.12114,-2.29537,-2.44295,-2.55926,-2.66007/   
      DATA CC3H2O/                                                      
     X-2.73808,-2.75972,-2.78032,-2.67031,-2.44995,-2.27133,-2.11654,   
     X-2.02598,-2.01402,-2.04264,-2.04511,-2.02975,-2.00687,-1.94840,   
     X-1.93975,-1.97104,-2.01554,-2.09336,-2.15829,-2.26705,-2.40356,   
     X-2.55216,-2.78858,-3.00697,-3.22778,-3.44413,-3.55439,-3.66412,   
     X-3.73884,-3.92224,-4.18922,-4.41150,-4.55122,-4.48637,-4.29339,   
     X-4.19248,-4.28419,-4.41178,-4.60369,-4.81645,-4.83716,-4.93818,   
     X-4.87772,-4.65255,-4.40133,-4.14378,-4.05431,-4.02425,-4.04257,   
     8-4.11794,-4.12153,-4.16374,-4.17459,-4.10274,-4.04733,-4.00176,   
     X-4.01760,-4.13393,-4.29085,-4.38409,-4.39975,-4.33916,-4.31515,   
     X-4.35426,-4.44628,-4.51842,-4.52596,-4.53399,-4.54590,-4.63864,   
     X-4.75657,-4.86504,-4.95580,-5.03365,-5.14879,-5.33868,-5.62972,   
     X-5.92584,-6.30299,-6.62922,-6.70773,-6.97810,-7.35919,-7.64909,   
     X-8.62765,-8.55378,-7.76305,-7.47054,-7.07789,-7.11538,-7.34052,   
     X-7.75694,-9.17126,-10.0000,-9.86547,-8.71424,-8.66552,-8.31602,   
     X-8.41339,-7.92192,-8.66385,-8.99856,-9.65437,-9.36822,-9.46517,   
     6-9.43986/                                                         
C=H2O ====14865-16045                                                   
      DATA CD1H2O/                                                      
     X-8.65941,-10.0000,-10.0000,-8.82641,-8.56244,-7.93689,-7.68823,   
     X-7.55818,-7.05113,-6.76446,-6.49313,-6.24749,-6.12617,-6.05220,   
     X-6.13798,-6.07909,-5.86845,-5.69141,-5.50496,-5.48376,-5.56108,   
     X-5.42768,-5.29615,-5.10664,-4.88111,-4.78669,-4.62385,-4.52174,   
     X-4.49073,-4.45792,-4.54129,-4.54480,-4.51341,-4.47258,-4.27643,   
     X-4.18091,-4.09557,-4.04222,-4.11247,-4.14851,-4.16970,-4.11065,   
     X-4.04809,-4.00745,-3.99879,-4.07978,-4.12451,-4.19723,-4.17393,   
     8-4.09022,-4.02101,-3.87998,-3.79109,-3.66411,-3.50066,-3.40580,   
     X-3.32713,-3.30194,-3.35131,-3.35137,-3.29933,-3.20658,-3.06263,   
     X-2.97995,-2.98759,-2.99176,-3.00756,-2.97359,-2.85849,-2.81640,   
     X-2.77094,-2.75469,-2.77297,-2.71165,-2.69187,-2.64524,-2.60542,   
     X-2.60059,-2.57842,-2.59991,-2.58577,-2.60792,-2.66006,-2.70803,   
     X-2.79094,-2.81048,-2.79532,-2.79499,-2.84578,-2.90638,-2.96270,   
     X-2.90633,-2.71535,-2.54313,-2.37822,-2.31125,-2.35246,-2.49011,   
     X-2.68215,-2.83136,-2.96357,-2.95873,-2.90544,-2.84387,-2.70352,   
     6-2.58329,-2.49207,-2.41735,-2.35522,-2.30279,-2.25786,-2.22067,   
     X-2.20741,-2.19735,-2.20181,-2.22358,-2.27247,-2.33737,-2.39631,   
     8-2.45029,-2.49867,-2.56939,-2.64313,-2.77129,-2.92580,-3.05513/   
      DATA CD2H2O/                                                      
     X-3.23728,-3.31415,-3.33588,-3.39544,-3.43947,-3.57455,-3.69955,   
     X-3.77227,-3.76260,-3.70753,-3.70942,-3.73899,-3.82827,-3.93052,   
     X-4.10437,-4.24931,-4.35000,-4.42069,-4.25644,-4.21454,-4.17061,   
     X-4.11168,-4.16038,-4.16686,-4.19465,-4.23251,-4.27305,-4.21672,   
     X-4.13963,-4.07622,-3.97332,-3.96263,-3.95541,-3.97392,-4.03776,   
     X-4.07778,-4.01771,-3.87070,-3.70710,-3.59495,-3.62243,-3.69528,   
     X-3.76171,-3.76582,-3.65793,-3.61555,-3.59708,-3.63113,-3.63691,   
     8-3.57465,-3.55435,-3.47507,-3.49075,-3.53253,-3.57495,-3.68837,   
     X-3.68628,-3.68771,-3.64979,-3.60831,-3.56633,-3.48250,-3.37856,   
     X-3.22908,-3.14286,-3.11346,-3.13691,-3.26625,-3.44333,-3.64611,   
     X-3.86925,-4.08285,-4.22794,-4.25115,-4.14282,-3.85944,-3.59027,   
     X-3.43514,-3.31856,-3.24442,-3.22555,-3.18795,-3.20363,-3.30589,   
     X-3.41248,-3.60718,-3.70563,-3.65431,-3.57332,-3.47347,-3.47521,   
     X-3.53388,-3.72003,-3.97569,-4.31048,-4.87330,-5.39648,-6.27322,   
     X-8.18185,-8.07588,-8.20933,-8.60643,-8.83713,-9.01727,-9.15690,   
     6-9.41970,-9.51520,-9.63843,-9.87539,-9.94314,-10.0000/            
C=H2O ====16340-17860                                                   
      DATA CE1H2O/                                                      
     X-10.0000,-9.99542,-9.97748,-9.94374,-9.93287,-9.90450,-9.85082,   
     X-9.82140,-9.73549,-9.64536,-9.59412,-9.54635,-9.26735,-9.23243,   
     X-9.05763,-8.93240,-8.74549,-8.52992,-8.25637,-8.13836,-7.66071,   
     X-7.35897,-7.37375,-7.09925,-6.98326,-6.89298,-6.79545,-6.97172,   
     X-6.67558,-6.37369,-6.21189,-5.94606,-5.84975,-5.83536,-5.82878,   
     X-5.78456,-5.68334,-5.44809,-5.28421,-5.06970,-4.89514,-4.80192,   
     X-4.73588,-4.78558,-4.78127,-4.73462,-4.54889,-4.33093,-4.18543,   
     8-4.09190,-4.11204,-4.13402,-4.13401,-3.97210,-3.79621,-3.65860,   
     X-3.55511,-3.57549,-3.57633,-3.53833,-3.46143,-3.34082,-3.23729,   
     X-3.17300,-3.14437,-3.10547,-3.05061,-2.96941,-2.86694,-2.79500,   
     X-2.75350,-2.75307,-2.77146,-2.79530,-2.76451,-2.68758,-2.63931,   
     X-2.57797,-2.58894,-2.59717,-2.52817,-2.47282,-2.42360,-2.45382,   
     X-2.56145,-2.61304,-2.59963,-2.52689,-2.46472,-2.46461,-2.45407,   
     X-2.39432,-2.25523,-2.14408,-2.05525,-2.01888,-2.07413,-2.12889,   
     X-2.25990,-2.39692,-2.48925,-2.54855,-2.53415,-2.54460,-2.50455,   
     6-2.46921,-2.42259,-2.28066,-2.22625,-2.17393,-2.13289,-2.19687,   
     X-2.21326,-2.23949,-2.27620,-2.26819,-2.29009,-2.29281,-2.25201,   
     8-2.17355,-2.07947,-2.03121,-2.01967,-2.04954,-2.08143,-2.06833/   
      DATA CE2H2O/                                                      
     X-2.05240,-2.05599,-2.06967,-2.12334,-2.21510,-2.29897,-2.40035,   
     X-2.52428,-2.62702,-2.73003,-2.87671,-2.99894,-3.10548,-3.25316,   
     X-3.32982,-3.39709,-3.53992,-3.63406,-3.74020,-3.92706,-3.96893,   
     X-3.93910,-3.93559,-3.82934,-3.82006,-3.87551,-3.89939,-3.94509,   
     X-3.95617,-3.96332,-3.96114,-3.99122,-4.01273,-4.01717,-4.02888,   
     X-4.04697,-4.10112,-4.14864,-4.27169,-4.32135,-4.33175,-4.41165,   
     X-4.36331,-4.39914,-4.42505,-4.40381,-4.48901,-4.44885,-4.38473,   
     8-4.32458,-4.19760,-4.16511,-4.15683,-4.14102,-4.11365,-4.10673,   
     X-4.13026,-4.13652,-4.19636,-4.19684,-4.14832,-4.05676,-3.96205,   
     X-3.90165,-3.84404,-3.86524,-3.83773,-3.69609,-3.55481,-3.42043,   
     X-3.33841,-3.37637,-3.44611,-3.49193,-3.52932,-3.44601,-3.36757,   
     X-3.31227,-3.23777,-3.21254,-3.19842,-3.22310,-3.28352,-3.27914,   
     X-3.23481,-3.12437,-3.04729,-3.06777,-3.09818,-3.19530,-3.24569,   
     X-3.24974,-3.30729,-3.27728,-3.25317,-3.22055,-3.15996,-3.17334,   
     X-3.17694,-3.12288,-3.04593,-2.99049,-2.98361,-3.06492,-3.19818,   
     6-3.31628,-3.42190,-3.47775,-3.55095,-3.56669,-3.53409,-3.38883,   
     X-3.17115,-3.00955,-2.89158,-2.83770,-2.86055,-2.86096,-2.83436,   
     8-2.82886,-2.78602,-2.80289,-2.85454,-2.89629,-2.99573,-3.11206/   
      DATA CE3H2O/                                                      
     X-3.27394,-3.47183,-3.64849,-3.79741,-3.91130,-4.08705,-4.24317,   
     X-4.41275,-4.55729,-4.55082,-4.66958,-4.82149,-4.94204,-5.13772,   
     X-5.22105,-5.20710,-5.18691,-5.09729,-5.03217,-4.96344,-4.97810,   
     X-5.03506,-5.05380,-5.08007,-5.10835,-5.13285,-5.24491,-5.44530,   
     X-5.65236,-5.80563,-5.75192,-5.58691,-5.38023,-5.31721,-5.30923,   
     X-5.34087,-5.39044,-5.38089,-5.43438,-5.52124,-5.79590,-6.25048,   
     X-6.78272,-8.29899,-8.50913,-8.77871,-8.91512,-9.13453,-9.37455,   
     8-9.56578,-9.71290,-9.89385,-10.0000/                              
      END                                                               
      BLOCK DATA CPO3                                                   
C>    BLOCK DATA                                                        
C                                                                       
C     C' FOR O3                                                         
      COMMON /O3/  C11O3(  41),                                         
     +             C21O3( 126),C22O3(  27),                             
     +             C31O3( 126),C32O3(   8),                             
     +             C41O3(  36),                                         
     +             C51O3(  83)                                          
C=O3  ====C' FOR    5 BAND MODELS                                       
C=O3  ====    0-  200                                                   
      DATA C11O3/                                                       
     1 -2.0427, -1.8966, -1.6263, -1.3896, -1.2170, -1.0996, -1.0214,   
     2 -0.9673, -0.9249, -0.8896, -0.8612, -0.8417, -0.8360, -0.8483,   
     3 -0.8785, -0.9273, -0.9932, -1.0720, -1.1639, -1.2662, -1.3771,   
     4 -1.4976, -1.6274, -1.7712, -1.9289, -2.1027, -2.2948, -2.4987,   
     5 -2.7321, -2.9992, -3.3045, -3.6994, -4.1022, -4.6467, -5.1328,   
     6 -5.6481, -6.1634, -6.6787, -7.1940, -7.7093, -8.0000/            
C=O3  ====  515- 1275                                                   
      DATA C21O3/                                                       
     1 -7.9274, -7.6418, -7.3562, -7.0706, -6.7850, -6.4994, -6.2138,   
     2 -5.9282, -5.6426, -5.3570, -5.0714, -4.7858, -4.5002, -4.2146,   
     3 -3.9290, -3.6213, -3.3407, -3.0722, -2.8226, -2.5914, -2.3778,   
     4 -2.1823, -2.0057, -1.8456, -1.6991, -1.5659, -1.4436, -1.3323,   
     5 -1.2319, -1.1407, -1.0550, -0.9733, -0.9033, -0.8584, -0.8527,   
     6 -0.8838, -0.9219, -0.9360, -0.9025, -0.8402, -0.7913, -0.7794,   
     7 -0.8123, -0.8750, -0.9484, -1.0206, -1.0864, -1.1520, -1.2202,   
     8 -1.2928, -1.3745, -1.4641, -1.5611, -1.6669, -1.7816, -1.9051,   
     9 -2.0383, -2.1796, -2.3312, -2.4906, -2.6569, -2.8354, -3.0179,   
     $ -3.2121, -3.4106, -3.6208, -3.8332, -4.0584, -4.2854, -4.4979,   
     1 -4.7175, -4.9109, -5.1246, -5.3344, -5.5442, -5.7540, -5.9638,   
     2 -6.1736, -6.3834, -6.5932, -6.8030, -7.0128, -6.9011, -6.2590,   
     3 -5.8119, -5.1603, -4.3327, -3.6849, -3.1253, -2.6304, -2.1903,   
     4 -1.8019, -1.4585, -1.1533, -0.8770, -0.6166, -0.3630, -0.1102,   
     5  0.1336,  0.3525,  0.5326,  0.6678,  0.7510,  0.7752,  0.7826,   
     6  0.7874,  0.8006,  0.8241,  0.7614,  0.5662,  0.1949, -0.2770,   
     7 -0.6199, -0.8347, -0.9586, -1.0168, -1.0501, -1.0816, -1.0980,   
     8 -1.0833, -1.0424, -0.9972, -0.9724, -0.9855, -1.0365, -1.1187/   
      DATA C22O3/                                                       
     1 -1.2150, -1.3142, -1.4103, -1.4998, -1.5933, -1.6938, -1.8061,   
     2 -1.9332, -2.0737, -2.2279, -2.3966, -2.5787, -2.7755, -2.9855,   
     3 -3.2090, -3.4465, -3.6967, -3.9633, -4.2461, -4.5502, -4.8912,   
     4 -5.2845, -5.7654, -6.4194, -6.9288, -7.4382, -7.9476/            
C=O3  ==== 1630- 2295                                                   
      DATA C31O3/                                                       
     1 -8.0000, -7.5432, -6.9273, -6.3115, -5.5431, -4.9563, -4.4640,   
     2 -4.0371, -3.6533, -3.3069, -2.9877, -2.7042, -2.4507, -2.2355,   
     3 -2.0651, -1.9477, -1.8705, -1.8422, -1.8235, -1.7782, -1.7367,   
     4 -1.7012, -1.7208, -1.8353, -2.0331, -2.3077, -2.5996, -2.7517,   
     5 -2.7263, -2.6671, -2.6415, -2.6449, -2.6613, -2.6589, -2.6083,   
     6 -2.5250, -2.4529, -2.4157, -2.4298, -2.4906, -2.5823, -2.6873,   
     7 -2.7808, -2.8612, -2.9303, -3.0022, -3.0873, -3.1844, -3.2929,   
     8 -3.4158, -3.5361, -3.6710, -3.8062, -3.9520, -4.1140, -4.2635,   
     9 -4.4395, -4.6138, -4.8372, -5.0837, -5.3302, -5.3665, -5.4358,   
     $ -5.0651, -4.8416, -4.5293, -4.2547, -4.0039, -3.7818, -3.5850,   
     1 -3.4091, -3.2509, -3.0934, -2.9485, -2.8055, -2.6705, -2.5482,   
     2 -2.4362, -2.3380, -2.2486, -2.1645, -2.0834, -2.0035, -1.9081,   
     3 -1.7681, -1.5768, -1.3615, -1.1463, -0.9482, -0.7800, -0.6336,   
     4 -0.5092, -0.4105, -0.3495, -0.3274, -0.3133, -0.3023, -0.2859,   
     5 -0.3055, -0.4374, -0.6972, -1.1064, -1.4904, -1.9687, -2.4498,   
     7 -2.5971, -2.5220, -2.4301, -2.3467, -2.2901, -2.2746, -2.3021,   
     7 -2.3635, -2.4420, -2.5088, -2.5485, -2.5617, -2.5656, -2.5771,   
     8 -2.6134, -2.6822, -2.7885, -2.9379, -3.1200, -3.3260, -3.5464/   
      DATA C32O3/                                                       
     1 -3.7736, -4.0311, -4.3651, -4.7794, -5.5152, -6.1240, -7.2193,   
     2 -8.0000/                                                         
C=O3  ==== 2670- 2845                                                   
      DATA C41O3/                                                       
     1 -7.9721, -7.6118, -7.2515, -6.8913, -6.5310, -6.1707, -5.8105,   
     2 -5.4502, -5.0899, -4.7297, -4.3694, -3.9462, -3.6022, -3.2886,   
     3 -3.0234, -2.7863, -2.5797, -2.4073, -2.2760, -2.1894, -2.1359,   
     4 -2.1160, -2.0808, -2.0151, -1.9666, -1.9409, -1.9868, -2.1450,   
     5 -2.3965, -2.8042, -3.5500, -4.8275, -5.6378, -6.4482, -7.2585,   
     6 -8.0000/                                                         
C=O3  ==== 2850- 3260                                                   
      DATA C51O3/                                                       
     1 -8.0000, -7.6278, -7.2556, -6.8834, -6.5111, -6.1389, -5.7667,   
     2 -5.3945, -5.0223, -4.6501, -4.2779, -3.9056, -3.5334, -3.3828,   
     3 -3.2452, -3.1411, -3.0403, -2.9428, -2.8436, -2.7573, -2.6853,   
     4 -2.6040, -2.5218, -2.4121, -2.3547, -2.1970, -2.0668, -1.9121,   
     5 -1.7617, -1.6153, -1.4688, -1.4022, -1.3447, -1.2669, -1.1902,   
     6 -1.1805, -1.1707, -1.1609, -1.1609, -1.1805, -1.1999, -1.4214,   
     7 -1.6348, -1.7519, -1.9730, -2.2078, -2.4608, -2.5337, -2.5923,   
     8 -2.6616, -2.6384, -2.6271, -2.6154, -2.5570, -2.4983, -2.4480,   
     9 -2.3890, -2.3663, -2.3431, -2.3314, -2.3200, -2.3200, -2.3314,   
     $ -2.3431, -2.3547, -2.3777, -2.4004, -2.5218, -2.6499, -2.7694,   
     1 -2.9057, -3.0286, -3.1543, -3.3696, -3.6053, -4.1977, -4.7811,   
     2 -5.2933, -5.7554, -6.4542, -7.0239, -7.5937, -8.0000/            
      END                                                               
      BLOCK DATA CPTRCG                                                 
C>    BLOCK DATA                                                        
C                                                                       
C     C' FOR TRACE GASES (NH3, NO, NO2, SO2)                            
      COMMON /TRACEG/  C11NH3( 78),                                     
     +                 C21NH3(126),C22NH3(126),C23NH3(101),             
     +                 C11NO ( 62),                                     
     +                 C11NO2(126),C12NO2( 16),                         
     +                 C11SO2( 38),                                     
     +                 C21SO2(126),C22SO2( 62)                          
C=NH3 ====C' FOR    2 BAND MODEL                                        
C=NH3 ====    0-  385                                                   
      DATA C11NH3/                                                      
     1 -5.7142, -5.2854, -4.5163, -3.9795, -3.4393, -2.8735, -2.4947,   
     2 -2.2290, -2.0624, -1.9616, -1.8707, -1.7712, -1.6473, -1.5376,   
     3 -1.4315, -1.3328, -1.2391, -1.1768, -1.1302, -1.0755, -1.0272,   
     4 -0.9884, -0.9501, -0.9287, -0.9101, -0.8982, -0.8888, -0.8709,   
     5 -0.8620, -0.8645, -0.8676, -0.8910, -0.9084, -0.9328, -0.9546,   
     6 -0.9743, -0.9983, -1.0202, -1.0569, -1.0824, -1.1086, -1.1475,   
     7 -1.1790, -1.2059, -1.2668, -1.3237, -1.3801, -1.4271, -1.4920,   
     8 -1.5403, -1.5848, -1.6498, -1.7382, -1.8294, -1.9203, -2.0694,   
     9 -2.2134, -2.3622, -2.5516, -2.7633, -2.9344, -3.1172, -3.3543,   
     $ -3.5671, -3.7504, -3.9884, -4.2633, -4.5505, -4.7837, -5.0350,   
     1 -5.3733, -5.6478, -5.8856, -6.1041, -6.3375, -6.5709, -6.8043,   
     2 -7.0377/                                                         
C=NH3 ====  390- 2150                                                   
      DATA C21NH3/                                                      
     1 -7.2620, -7.0950, -6.9279, -6.7608, -6.5938, -6.4267, -6.2597,   
     2 -6.0926, -5.8842, -5.7560, -5.5844, -5.4248, -5.2573, -5.0771,   
     3 -4.9244, -4.7903, -4.6512, -4.5169, -4.3961, -4.2607, -4.1705,   
     4 -4.1294, -4.0611, -3.9538, -3.8821, -3.7592, -3.6754, -3.6830,   
     5 -3.6977, -3.6925, -3.6632, -3.5899, -3.5218, -3.5265, -3.6535,   
     6 -3.8068, -3.9818, -4.0574, -3.9789, -3.8858, -3.8120, -3.8927,   
     7 -3.8799, -3.8623, -3.3984, -2.8857, -2.5814, -2.4066, -2.3850,   
     8 -2.5415, -2.8161, -3.2265, -3.7177, -3.9932, -4.0683, -4.0785,   
     9 -3.9912, -3.7418, -3.4742, -3.2651, -3.0715, -2.9500, -2.8669,   
     $ -2.7723, -2.6614, -2.5613, -2.4372, -2.3085, -2.1696, -2.0302,   
     1 -1.9166, -1.8071, -1.7221, -1.6370, -1.5453, -1.4487, -1.3539,   
     2 -1.2570, -1.1618, -1.1131, -1.0824, -1.0559, -1.0190, -0.9721,   
     3 -0.9218, -0.8680, -0.8556, -0.8568, -0.8713, -0.8984, -0.9076,   
     4 -0.9024, -0.8882, -0.8968, -0.9492, -1.0089, -1.0846, -1.1556,   
     5 -1.1792, -1.1946, -1.1964, -1.2173, -1.2424, -1.1744, -0.9743,   
     6 -0.6350, -0.2975, -0.0705,  0.0144, -0.0978, -0.3536, -0.5630,   
     7 -0.5479, -0.3784, -0.1797, -0.1151, -0.3085, -0.6180, -0.9718,   
     8 -1.2926, -1.2748, -1.1217, -1.0197, -0.9300, -0.8817, -0.8723/   
      DATA C22NH3/                                                      
     1 -0.8309, -0.7804, -0.7075, -0.6431, -0.6176, -0.6012, -0.6079,   
     2 -0.6272, -0.6304, -0.6193, -0.6026, -0.5882, -0.6029, -0.6317,   
     3 -0.6862, -0.7447, -0.7921, -0.8275, -0.8595, -0.8856, -0.9236,   
     4 -0.9934, -1.0693, -1.1460, -1.2100, -1.2863, -1.3593, -1.4292,   
     5 -1.5029, -1.6054, -1.7067, -1.8110, -1.9350, -2.0346, -2.1305,   
     6 -2.2294, -2.3724, -2.4917, -2.6218, -2.8056, -2.9693, -3.1101,   
     7 -3.2790, -3.5315, -3.7011, -3.8952, -4.1527, -4.4121, -4.5244,   
     8 -4.8599, -5.1940, -5.5589, -5.8170, -6.1402, -6.4633, -6.7865,   
     9 -7.1096, -7.4328, -7.7559, -8.0000, -7.8199, -7.5988, -7.3778,   
     $ -7.1567, -6.9357, -6.7146, -6.4936, -6.2725, -6.0515, -5.8304,   
     1 -5.5963, -5.3883, -5.2319, -5.0536, -4.9029, -4.7789, -4.5867,   
     2 -4.3414, -4.1399, -3.9784, -3.7553, -3.5773, -3.4123, -3.2254,   
     3 -3.0384, -2.9243, -2.7755, -2.5809, -2.4726, -2.3206, -2.1209,   
     4 -2.0331, -1.9016, -1.7458, -1.6927, -1.5958, -1.4863, -1.4492,   
     5 -1.3730, -1.2859, -1.2554, -1.2129, -1.1689, -1.1802, -1.1948,   
     6 -1.1882, -1.2185, -1.2464, -1.2522, -1.2946, -1.3587, -1.3971,   
     7 -1.4488, -1.5261, -1.5495, -1.5478, -1.4926, -1.3115, -1.0455,   
     8 -0.7987, -0.5972, -0.4664, -0.4244, -0.4426, -0.4952, -0.5772/   
      DATA C23NH3/                                                      
     1 -0.6845, -0.8097, -0.9443, -1.0904, -1.2232, -1.2853, -1.2949,   
     2 -1.2708, -1.1896, -1.1467, -1.1187, -1.0700, -1.0392, -1.0227,   
     3 -1.0178, -1.0089, -1.0021, -0.9706, -0.9569, -0.9928, -1.0310,   
     4 -1.0767, -1.1053, -1.1241, -1.1717, -1.2203, -1.2772, -1.3356,   
     5 -1.3855, -1.4734, -1.5701, -1.6572, -1.7638, -1.8652, -1.9918,   
     6 -2.1449, -2.2388, -2.3251, -2.3936, -2.4525, -2.5998, -2.7147,   
     7 -2.7704, -2.7852, -2.7524, -2.7646, -2.8507, -3.0422, -3.2642,   
     8 -3.5201, -3.6328, -3.7624, -3.9505, -4.1399, -4.3087, -4.3859,   
     9 -4.4295, -4.4493, -4.3317, -4.1892, -4.0545, -3.9356, -3.9117,   
     $ -4.0001, -4.0627, -4.0833, -4.0997, -4.0659, -4.0264, -4.0893,   
     1 -4.1832, -4.2522, -4.3182, -4.3949, -4.4191, -4.4580, -4.5997,   
     2 -4.7282, -4.8370, -5.0041, -5.1644, -5.2101, -5.4145, -5.5114,   
     3 -5.6986, -5.8057, -5.9529, -6.1000, -6.2472, -6.3943, -6.5415,   
     4 -6.6886, -6.8358, -6.9829, -7.1301, -7.2772, -7.4244, -7.5715,   
     5 -7.7187, -7.8658, -8.0000/                                       
C=NO  ====C' FOR    1 BAND MODEL                                        
C=NO  ==== 1700- 2005                                                   
      DATA C11NO/                                                       
     1 -7.9265, -7.5649, -7.2033, -6.8418, -6.4802, -6.0647, -5.7193,   
     2 -5.3955, -5.1475, -4.8233, -4.5194, -4.3184, -3.9664, -3.7045,   
     3 -3.3398, -3.0368, -2.7282, -2.4448, -2.1791, -1.9315, -1.7046,   
     4 -1.4984, -1.3133, -1.1486, -1.0036, -0.8776, -0.7699, -0.6811,   
     5 -0.6124, -0.5663, -0.5488, -0.5673, -0.6076, -0.6791, -0.7553,   
     6 -0.7811, -0.7711, -0.6840, -0.5704, -0.4791, -0.4138, -0.3950,   
     7 -0.4189, -0.4794, -0.5751, -0.7062, -0.8751, -1.0852, -1.3406,   
     8 -1.6473, -2.0068, -2.4335, -2.9068, -3.4595, -4.0370, -4.6795,   
     9 -5.2704, -5.8613, -6.4522, -7.0431, -7.6340, -8.0000/            
C=NO2 ====C' FOR    1 BAND MODEL                                        
C=NO2 ====  580-  925, 1515- 1695, 2800- 2970                           
      DATA C11NO2/                                                      
     1 -6.0000, -5.8419, -5.5313, -5.1048, -4.9512, -4.5830, -4.2676,   
     2 -3.9783, -3.7150, -3.4782, -3.2541, -3.0597, -2.8625, -2.6989,   
     3 -2.5323, -2.3904, -2.2561, -2.1346, -2.0320, -1.9284, -1.8584,   
     4 -1.7778, -1.7222, -1.6776, -1.6024, -1.5658, -1.4917, -1.4117,   
     5 -1.3706, -1.3045, -1.2914, -1.3292, -1.3666, -1.4268, -1.4564,   
     6 -1.4076, -1.3284, -1.2804, -1.2497, -1.2519, -1.3123, -1.3704,   
     7 -1.4192, -1.4878, -1.5301, -1.5575, -1.5912, -1.6250, -1.6544,   
     8 -1.6849, -1.7340, -1.7748, -1.8171, -1.8679, -1.9256, -1.9809,   
     9 -2.0386, -2.1112, -2.1769, -2.2462, -2.3199, -2.4129, -2.5156,   
     $ -2.6575, -2.8825, -3.1831, -3.6209, -4.2271, -5.5290, -6.0000,   
     1 -6.0000, -5.5415, -4.8964, -4.2513, -3.6063, -2.9612, -2.1733,   
     2 -1.5514, -1.0260, -0.5817, -0.2030,  0.1231,  0.4098,  0.6653,   
     3  0.8885,  1.0716,  1.2025,  1.2697,  1.2926,  1.3006,  1.3128,   
     4  1.3449,  1.3656,  1.3245,  1.1868,  0.9310,  0.5907,  0.2056,   
     5 -0.2337, -0.7633, -1.4541, -2.4451, -3.1822, -3.9193, -4.6565,   
     6 -5.3936, -6.0000, -6.0000, -5.7606, -5.3422, -4.9238, -4.5055,   
     7 -4.0871, -3.6687, -3.2504, -2.8320, -2.3736, -1.9565, -1.5769,   
     8 -1.2400, -0.9384, -0.6781, -0.4630, -0.2944, -0.1783, -0.1213/   
      DATA C12NO2/                                                      
     1 -0.1033, -0.0934, -0.0723, -0.0267,  0.0016, -0.0394, -0.1700,   
     2 -0.4141, -0.7861, -1.2951, -2.0379, -3.0984, -3.8692, -4.6399,   
     3 -5.4107, -6.0000/                                                
C=SO2 ====C' FOR    2 BAND MODEL                                        
C=SO2 ====    0-  185                                                   
      DATA C11SO2/                                                      
     1 -0.9312, -0.8101, -0.5729, -0.3590, -0.2016, -0.0971, -0.0333,   
     2  0.0048,  0.0228,  0.0214, -0.0044, -0.0567, -0.1334, -0.2315,   
     3 -0.3451, -0.4741, -0.6198, -0.7854, -0.9764, -1.1922, -1.4326,   
     4 -1.6951, -1.9687, -2.2788, -2.6034, -2.9398, -3.3551, -3.7704,   
     5 -4.1857, -4.6010, -5.0163, -5.4316, -5.8469, -6.2622, -6.6775,   
     6 -7.0928, -7.5081, -7.9234/                                       
C=SO2 ====  400-  650,  950- 1460, 2415- 2580                           
      DATA C21SO2/                                                      
     1 -8.0000, -7.4209, -6.6994, -5.9778, -5.2563, -4.4248, -3.7369,   
     2 -3.0917, -2.5200, -2.0303, -1.6307, -1.3056, -1.0373, -0.8189,   
     3 -0.6395, -0.4880, -0.3574, -0.2369, -0.1237, -0.0261,  0.0250,   
     4  0.0186, -0.0194, -0.0659, -0.0638, -0.0065,  0.0468,  0.0682,   
     5  0.0355, -0.0431, -0.1334, -0.2175, -0.2954, -0.3738, -0.4588,   
     6 -0.5571, -0.6729, -0.8131, -0.9805, -1.1831, -1.4334, -1.7354,   
     7 -2.1065, -2.5705, -3.1238, -3.7691, -4.5793, -5.7012, -6.5603,   
     8 -7.4195, -8.0000, -7.9302, -7.6563, -7.3824, -7.1085, -6.8346,   
     9 -6.5607, -6.2868, -6.0129, -5.7390, -5.4651, -5.1912, -4.9173,   
     $ -4.6434, -4.3695, -4.0956, -3.8217, -3.5478, -3.2739, -3.0000,   
     1 -2.7261, -2.4522, -2.1783, -1.9317, -1.7073, -1.5004, -1.3136,   
     2 -1.1444, -0.9901, -0.8505, -0.7238, -0.6083, -0.5025, -0.4016,   
     3 -0.3047, -0.2112, -0.1263, -0.0656, -0.0414, -0.0509, -0.0731,   
     4 -0.0802, -0.0483,  0.0032,  0.0339,  0.0249, -0.0296, -0.1170,   
     5 -0.2141, -0.3069, -0.3968, -0.4881, -0.5881, -0.7019, -0.8299,   
     6 -0.9729, -1.1305, -1.3036, -1.4924, -1.7000, -1.9306, -2.1906,   
     7 -2.4959, -2.8613, -3.3176, -3.9236, -4.6847, -5.2561, -4.7082,   
     8 -4.1110, -3.6582, -3.1963, -2.7063, -1.9643, -1.3089, -0.6856/   
      DATA C22SO2/                                                      
     1 -0.0412,  0.3678,  0.6712,  0.9031,  1.0577,  1.1145,  1.1272,   
     2  1.1300,  1.1237,  1.1459,  1.1047,  0.9617,  0.7107,  0.3254,   
     3 -0.2322, -1.0612, -1.7715, -2.6089, -3.0225, -3.3542, -3.7339,   
     4 -4.1986, -4.7852, -5.6390, -6.2740, -6.9091, -7.5441, -8.0000,   
     5 -8.0000, -7.5698, -6.8815, -6.1933, -5.3530, -4.8602, -4.1286,   
     6 -2.9922, -2.3525, -1.8905, -1.5178, -1.2295, -1.0082, -0.8484,   
     7 -0.7634, -0.7340, -0.7203, -0.7167, -0.7097, -0.7297, -0.8391,   
     8 -1.0472, -1.3607, -1.7720, -2.2957, -3.0566, -4.1073, -4.5337,   
     9 -4.9481, -5.4542, -6.2445, -6.8148, -7.3850, -7.9553/            
      END                                                               
      BLOCK DATA CPUMIX                                                 
C>    BLOCK DATA                                                        
C                                                                       
C     C' FOR UNIFORMLY MIXED GASES (CO2, CO, CH4, N2O, O2)              
      COMMON /UFMIX1/                                                   
     +        C11CO2( 83),                                              
     +        C21CO2(121),                                              
     +        C31CO2(126),C32CO2( 85),                                  
     +        C41CO2(126),C42CO2( 12),                                  
     +        C51CO2( 62),                                              
     +        C61CO2(126),C62CO2( 45),                                  
     +        C71CO2(126),C72CO2( 99),                                  
     +        C81CO2(126),C82CO2( 82)                                   
      COMMON /UFMIX2/                                                   
     +        C11CO(  36),                                              
     +        C21CO( 126),C22CO(  11),                                  
     +        C11CH4(126),C12CH4(126),C13CH4(126),C14CH4(115),          
     +        C11N2O( 25),                                              
     +        C21N2O(126),C22N2O(126),C23N2O(112),                      
     +        C31N2O(126),C32N2O(126),C33N2O( 63),                      
     +        C11O2(  54),                                              
     +        C21O2( 126),C22O2( 126),C23O2(  76)                       
C=CO2 ====C' FOR    8 BAND MODELS                                       
C=CO2 ====  425-  835                                                   
      DATA C11CO2/                                                      
     1 -9.8495, -9.6484, -9.4472, -9.2461, -9.0449, -8.9544, -8.6127,   
     2 -8.4076, -8.2710, -8.0391, -7.9485, -7.9638, -7.7849, -7.6278,   
     3 -7.1418, -6.7823, -6.3826, -6.0323, -5.7501, -5.5249, -5.3304,   
     4 -5.0105, -4.7703, -4.5714, -4.3919, -4.2974, -4.1370, -3.8761,   
     5 -3.5936, -3.2852, -3.0016, -2.7303, -2.4868, -2.2741, -2.0936,   
     6 -1.9424, -1.8092, -1.6843, -1.5372, -1.3803, -1.2043, -0.9930,   
     7 -0.7724, -0.5509, -0.3465, -0.1785, -0.0470,  0.0449,  0.1114,   
     8  0.1367,  0.0910,  0.0066, -0.1269, -0.2994, -0.4934, -0.7101,   
     9 -0.9087, -1.1004, -1.2694, -1.4064, -1.5622, -1.6810, -1.7841,   
     $ -1.8973, -2.0274, -2.2079, -2.4264, -2.6763, -2.9312, -3.1896,   
     1 -3.4262, -3.5979, -3.7051, -3.7372, -3.7983, -3.9154, -4.0520,   
     2 -4.2567, -4.4661, -4.6670, -4.9226, -5.2203, -5.5597/            
C=CO2 ====  840- 1440                                                   
      DATA C21CO2/                                                      
     1 -5.6403, -5.7039, -5.7674, -5.8310, -5.8948, -5.9503, -6.0217,   
     2 -6.0392, -5.9855, -5.8620, -5.6834, -5.5083, -5.3473, -5.2028,   
     3 -5.0799, -4.9628, -4.8379, -4.7032, -4.5584, -4.4213, -4.3198,   
     4 -4.2786, -4.2843, -4.3099, -4.3210, -4.2769, -4.2229, -4.2179,   
     5 -4.2950, -4.4789, -4.7550, -5.0902, -5.4329, -5.6689, -5.6608,   
     6 -5.4582, -5.1969, -4.9419, -4.7106, -4.5084, -4.3409, -4.2211,   
     7 -4.1563, -4.1259, -4.1108, -4.0803, -4.0211, -3.9824, -4.0053,   
     8 -4.1221, -4.3504, -4.6741, -5.0826, -5.5857, -6.2301, -7.0829,   
     9 -8.1344, -8.8601, -9.0457, -9.1231, -9.0728, -9.1413, -9.1221,   
     $ -9.1882, -9.2752, -9.2237, -9.3604, -9.3058, -9.5455, -9.5567,   
     1 -9.3754, -8.7756, -8.0904, -7.4827, -6.9585, -6.5095, -6.1194,   
     2 -5.7824, -5.4910, -5.2532, -5.0840, -4.9920, -4.9577, -4.9638,   
     3 -4.9741, -4.9555, -4.9466, -4.9774, -5.0719, -5.2558, -5.5213,   
     4 -5.8633, -6.2877, -6.7878, -7.2602, -7.2940, -6.8524, -6.3372,   
     5 -5.8854, -5.5065, -5.2011, -4.9776, -4.8471, -4.7885, -4.7783,   
     6 -4.7815, -4.7538, -4.7228, -4.7259, -4.7860, -4.9231, -5.1270,   
     7 -5.3831, -5.6849, -6.0351, -6.4437, -6.9160, -7.4815, -8.1437,   
     8 -8.9449, -9.8564/                                                
C=CO2 ==== 1805- 2855                                                   
      DATA C31CO2/                                                      
     1 -9.8903, -9.4365, -8.9826, -8.5288, -8.1184, -7.6555, -7.1673,   
     2 -6.7226, -6.3423, -6.0410, -5.8154, -5.6519, -5.5186, -5.3859,   
     3 -5.2279, -5.0238, -4.7865, -4.5343, -4.2846, -4.0560, -3.8717,   
     4 -3.7624, -3.7231, -3.7335, -3.8312, -3.9854, -4.1930, -4.4895,   
     5 -4.7394, -4.8892, -4.9499, -4.9392, -4.9787, -5.1129, -5.3330,   
     6 -5.6093, -5.8862, -6.0581, -6.0274, -5.8356, -5.5989, -5.3738,   
     7 -5.1661, -4.9472, -4.7020, -4.4354, -4.1439, -3.8561, -3.5944,   
     8 -3.3694, -3.2100, -3.1041, -3.0411, -3.0471, -3.1077, -3.2305,   
     9 -3.4274, -3.6115, -3.7542, -3.8666, -3.9338, -4.0079, -4.0962,   
     $ -4.2142, -4.1433, -4.2870, -4.4796, -4.6618, -4.8204, -4.9499,   
     1 -4.9862, -5.0171, -5.0282, -5.0580, -5.0398, -4.9465, -4.7816,   
     2 -4.5538, -4.2975, -4.0286, -3.7528, -3.4715, -3.1899, -2.9041,   
     3 -2.6127, -2.3212, -2.0435, -1.7894, -1.5531, -1.3382, -1.1515,   
     4 -0.9990, -0.8833, -0.8006, -0.7227, -0.6288, -0.4977, -0.3249,   
     5 -0.1349,  0.0576,  0.2487,  0.4386,  0.6260,  0.8081,  0.9681,   
     6  1.0859,  1.1522,  1.1861,  1.2039,  1.2255,  1.2587,  1.2473,   
     7  1.1457,  0.9139,  0.5250,  0.0173, -0.5796, -1.3944, -2.3841,   
     8 -2.7244, -2.9264, -3.0689, -3.2120, -3.3353, -3.4510, -3.5566/   
      DATA C32CO2/                                                      
     1 -3.6518, -3.7460, -3.8500, -3.9680, -4.0981, -4.2259, -4.3369,   
     2 -4.4329, -4.5305, -4.6264, -4.7438, -4.8842, -5.0248, -5.1448,   
     3 -5.2371, -5.2781, -5.3299, -5.3766, -5.4233, -5.4699, -5.5166,   
     4 -5.5633, -5.6646, -5.7593, -5.8461, -5.9229, -5.9818, -6.0065,   
     5 -5.9747, -5.8741, -5.7230, -5.5620, -5.4389, -5.3788, -5.3679,   
     6 -5.3827, -5.3837, -5.3460, -5.3186, -5.3394, -5.4320, -5.6095,   
     7 -5.8446, -6.0992, -6.3399, -6.5499, -6.7434, -6.9359, -7.1219,   
     8 -7.2818, -7.3984, -7.4881, -7.5452, -7.5994, -7.6445, -7.6734,   
     9 -7.6422, -7.5057, -7.2650, -6.9975, -6.7749, -6.6398, -6.5875,   
     $ -6.5912, -6.6192, -6.6155, -6.5866, -6.5851, -6.6382, -6.7736,   
     1 -7.0009, -7.2896, -7.6327, -7.9767, -8.2633, -8.4744, -8.5455,   
     2 -8.5813, -8.6025, -8.6459, -8.8948, -9.1436, -9.3925, -9.6413,   
     3 -9.8902/                                                         
C=CO2 ==== 3070- 3755                                                   
      DATA C41CO2/                                                      
     1 -9.8006, -9.5049, -9.1947, -8.7254, -8.4410, -8.1781, -8.0182,   
     2 -7.9381, -7.8793, -7.7636, -7.5549, -7.2962, -7.0244, -6.7556,   
     3 -6.4888, -6.2443, -6.0422, -5.9088, -5.8590, -5.8890, -5.9850,   
     4 -6.0949, -6.1164, -6.0207, -5.8592, -5.7110, -5.6328, -5.6369,   
     5 -5.7274, -5.9069, -6.1720, -6.5203, -6.9586, -7.4776, -8.0607,   
     6 -8.5514, -8.7011, -8.4232, -7.9274, -7.6159, -7.3836, -7.1969,   
     7 -7.0523, -6.7685, -6.4022, -6.0354, -5.7125, -5.4659, -5.3088,   
     8 -5.2546, -5.2991, -5.3819, -5.4615, -5.4117, -5.2107, -5.0103,   
     9 -4.8232, -4.7071, -4.6850, -4.7385, -4.8797, -5.1024, -5.4015,   
     $ -5.7758, -6.2225, -6.6681, -6.9127, -6.8919, -6.6972, -6.5012,   
     1 -6.3123, -6.1091, -5.8641, -5.5889, -5.3057, -5.0340, -4.7826,   
     2 -4.5476, -4.3277, -4.1224, -3.9333, -3.7675, -3.6324, -3.5163,   
     3 -3.4043, -3.2744, -3.1180, -2.9557, -2.8254, -2.7359, -2.6721,   
     4 -2.6084, -2.5105, -2.3772, -2.2317, -2.0866, -1.9521, -1.8292,   
     5 -1.7110, -1.5992, -1.4873, -1.3646, -1.2260, -1.0721, -0.9281,   
     6 -0.8379, -0.8123, -0.8261, -0.8483, -0.8305, -0.7792, -0.7626,   
     7 -0.8228, -0.9908, -1.2503, -1.5347, -1.7934, -1.9837, -2.0715,   
     8 -2.0375, -1.8975, -1.6906, -1.4497, -1.2048, -0.9831, -0.8125/   
      DATA C42CO2/                                                      
     1 -0.7157, -0.6707, -0.6532, -0.6297, -0.5706, -0.5263, -0.5489,   
     2 -0.6857, -0.9793, -1.3962, -1.8673, -2.3655/                     
C=CO2 ==== 3760- 4065                                                   
      DATA C51CO2/                                                      
     1 -3.5436, -4.0424, -4.4084, -4.6848, -4.8663, -4.9516, -4.9790,   
     2 -4.9923, -5.0207, -5.0596, -5.0958, -5.1018, -5.0636, -5.0354,   
     3 -5.0546, -5.1454, -5.3274, -5.5863, -5.8889, -6.1770, -6.3555,   
     4 -6.4096, -6.4371, -6.5112, -6.6680, -6.9183, -7.2418, -7.5827,   
     5 -7.8704, -8.0551, -8.1705, -8.2500, -8.3554, -8.3961, -8.4354,   
     6 -8.3920, -8.2785, -8.0499, -7.7437, -7.4130, -7.1153, -6.8861,   
     7 -6.7422, -6.6786, -6.6774, -6.7053, -6.7090, -6.6794, -6.6055,   
     8 -6.4827, -6.3454, -6.2401, -6.1992, -6.2676, -6.4833, -6.8490,   
     9 -7.4310, -8.4606, -9.7364, -9.8771, -9.8840, -9.9559/            
C=CO2 ==== 4530- 5380                                                   
      DATA C61CO2/                                                      
     1 -9.9489, -9.6003, -9.0910, -8.5793, -8.2059, -7.9099, -7.7157,   
     2 -7.6145, -7.5964, -7.5942, -7.5256, -7.3190, -6.9986, -6.6884,   
     3 -6.4102, -6.1769, -5.9882, -5.8421, -5.7499, -5.7201, -5.7189,   
     4 -5.7108, -5.6669, -5.5955, -5.5686, -5.6287, -5.8000, -6.0855,   
     5 -6.4398, -6.7793, -6.9427, -6.9205, -6.8363, -6.7059, -6.5272,   
     6 -6.2903, -6.0085, -5.7224, -5.4722, -5.2772, -5.1501, -5.0768,   
     7 -5.0219, -4.9579, -4.8555, -4.7213, -4.5868, -4.4594, -4.3387,   
     8 -4.2219, -4.1002, -3.9812, -3.8876, -3.8207, -3.7673, -3.7120,   
     9 -3.6223, -3.4912, -3.3444, -3.1983, -3.0732, -3.0262, -3.0078,   
     $ -3.0123, -3.0213, -2.9957, -2.9261, -2.8770, -2.8887, -2.9853,   
     1 -3.1609, -3.3643, -3.5468, -3.6759, -3.7488, -3.7704, -3.7535,   
     2 -3.7113, -3.6368, -3.5277, -3.3812, -3.2020, -3.0043, -2.8020,   
     3 -2.6122, -2.4524, -2.3405, -2.2838, -2.2521, -2.2319, -2.1960,   
     4 -2.1562, -2.1732, -2.2913, -2.5476, -2.9382, -3.3966, -3.8525,   
     5 -4.2541, -4.5682, -4.7376, -4.7524, -4.6733, -4.5170, -4.3123,   
     6 -4.0891, -3.8565, -3.6218, -3.3909, -3.1785, -3.0100, -2.9105,   
     7 -2.8588, -2.8286, -2.7912, -2.7207, -2.6729, -2.6858, -2.7745,   
     8 -2.9414, -3.1445, -3.3617, -3.5954, -3.8508, -4.1739, -4.5122/   
      DATA C62CO2/                                                      
     1 -4.8985, -5.3426, -5.8737, -6.4734, -7.0715, -7.5042, -7.6034,   
     2 -7.5143, -7.4358, -7.4089, -7.3969, -7.3813, -7.3018, -7.1858,   
     3 -7.0633, -6.9962, -6.9905, -7.0319, -7.1331, -7.2054, -7.1856,   
     4 -7.0561, -6.7966, -6.4771, -6.1996, -5.9593, -5.7560, -5.5370,   
     5 -5.2836, -5.0966, -4.9583, -4.9126, -5.0022, -5.1370, -5.3465,   
     6 -5.6279, -5.9364, -6.3695, -6.9602, -7.6823, -8.2701, -8.6427,   
     7 -9.0728, -9.5366, -9.9588/                                       
C=CO2 ==== 5905- 7025                                                   
      DATA C71CO2/                                                      
     1 -9.9871, -9.6762, -9.3358, -8.9954, -8.5140, -8.2066, -7.9742,   
     2 -7.8579, -7.8073, -7.7894, -7.7466, -7.7009, -7.6393, -7.5889,   
     3 -7.5697, -7.5200, -7.3908, -7.1796, -6.9610, -6.7869, -6.6972,   
     4 -6.6735, -6.6775, -6.6495, -6.5292, -6.3435, -6.1371, -5.9268,   
     5 -5.7254, -5.5433, -5.4023, -5.3292, -5.3090, -5.3171, -5.3193,   
     6 -5.2705, -5.2085, -5.1835, -5.2186, -5.3367, -5.5305, -5.7725,   
     7 -6.0228, -6.2150, -6.2857, -6.2634, -6.2250, -6.2234, -6.2616,   
     8 -6.2931, -6.2508, -6.0971, -5.8679, -5.6195, -5.3906, -5.1944,   
     9 -5.0216, -4.8566, -4.6919, -4.5255, -4.3785, -4.2879, -4.2583,   
     $ -4.2636, -4.2768, -4.2484, -4.1853, -4.1586, -4.2079, -4.3651,   
     1 -4.6407, -5.0141, -5.4719, -6.0015, -6.5173, -6.7829, -6.6805,   
     2 -6.4180, -6.0793, -5.7404, -5.4204, -5.1265, -4.8634, -4.6378,   
     3 -4.4559, -4.3360, -4.2752, -4.2461, -4.2257, -4.1768, -4.1068,   
     4 -4.0743, -4.1193, -4.2732, -4.5464, -4.9256, -5.4090, -6.0184,   
     5 -6.7985, -7.7078, -8.3457, -8.5160, -8.6106, -8.8175, -9.1922,   
     6 -9.6775, -9.7423, -9.1980, -8.4120, -7.7499, -7.1685, -6.6817,   
     7 -6.2701, -5.9301, -5.6567, -5.4521, -5.3289, -5.2776, -5.2630,   
     8 -5.2547, -5.2083, -5.1296, -5.0823, -5.0914, -5.1806, -5.3503/   
      DATA C72CO2/                                                      
     1 -5.5600, -5.7877, -5.9936, -6.1720, -6.3801, -6.6371, -6.9964,   
     2 -7.5010, -8.1628, -8.9951, -9.8931,-10.0000,-10.0000,-10.0000,   
     3-10.0000,-10.0000,-10.0000,-10.0000,-10.0000, -9.4967, -8.9198,   
     4 -8.5081, -8.1255, -7.8286, -7.5478, -7.1487, -6.7853, -6.5537,   
     5 -6.3931, -6.4107, -6.5087, -6.6607, -6.9026, -7.2104, -7.4445,   
     6 -7.6303, -7.6346, -7.4521, -7.2211, -7.0043, -6.7903, -6.5666,   
     7 -6.3499, -6.1534, -5.9988, -5.9033, -5.8760, -5.8693, -5.8277,   
     8 -5.7282, -5.6262, -5.5865, -5.6665, -5.9228, -6.3399, -7.0180,   
     9 -8.4230,-10.0000,-10.0000,-10.0000, -9.4090, -8.8272, -8.3057,   
     $ -7.8885, -7.5044, -7.1560, -6.8292, -6.5250, -6.2461, -5.9904,   
     1 -5.7533, -5.5295, -5.3135, -5.1058, -4.9152, -4.7463, -4.6054,   
     2 -4.4937, -4.3928, -4.2838, -4.1626, -4.0387, -3.9295, -3.8612,   
     3 -3.8501, -3.8647, -3.8625, -3.8099, -3.7351, -3.7179, -3.8549,   
     4 -4.2312, -4.7632, -5.4270, -6.4200, -8.1414, -9.0451, -9.5326,   
     5 -9.8301/                                                         
C=CO2 ==== 7395- 7785, 8030- 8335, 9340- 9670                           
      DATA C81CO2/                                                      
     1 -9.9472, -9.8274, -8.9797, -8.4298, -7.8906, -7.4477, -7.0750,   
     2 -6.7698, -6.5338, -6.3739, -6.2980, -6.2739, -6.2726, -6.2555,   
     3 -6.1989, -6.1529, -6.1654, -6.2584, -6.4610, -6.7805, -7.2235,   
     4 -7.8191, -8.5850, -9.6084,-10.0000,-10.0000, -9.9199, -9.1093,   
     5 -8.4490, -7.9158, -7.4364, -7.0400, -6.6958, -6.4131, -6.1855,   
     6 -6.0158, -5.9123, -5.8700, -5.8530, -5.8340, -5.7866, -5.7224,   
     7 -5.7048, -5.7653, -5.9281, -6.2234, -6.6646, -7.2957, -8.2799,   
     8 -9.9457,-10.0000,-10.0000,-10.0000,-10.0000,-10.0000,-10.0000,   
     9-10.0000, -9.2766, -8.6201, -8.0764, -7.6374, -7.2752, -6.9802,   
     $ -6.7578, -6.6163, -6.5546, -6.5392, -6.5397, -6.5132, -6.4531,   
     1 -6.4161, -6.4482, -6.5683, -6.8086, -7.1762, -7.6772, -8.3574,   
     2 -9.2188,-10.0000,-10.0000, -9.5350, -8.9686, -8.5329, -8.1920,   
     3 -7.9237, -7.6797, -7.5039, -7.3667, -7.2856, -7.1969, -7.0745,   
     4 -6.9330, -6.7926, -6.6818, -6.6144, -6.5643, -6.5183, -6.4910,   
     5 -6.4481, -6.3567, -6.2177, -6.0566, -5.9096, -5.7975, -5.7093,   
     6 -5.6165, -5.5127, -5.4124, -5.3426, -5.3061, -5.2648, -5.1864,   
     7 -5.0876, -5.0226, -5.0397, -5.1905, -5.4858, -5.9101, -6.4851,   
     8 -6.7862, -6.5368, -6.2765, -6.0398, -5.8260, -5.6397, -5.4799/   
      DATA C82CO2/                                                      
     1 -5.3438, -5.2274, -5.1411, -5.0917, -5.0473, -4.9820, -4.9114,   
     2 -4.8634, -4.8844, -5.0363, -5.3351, -5.7802, -6.5387, -8.3735,   
     3 -9.9977, -9.7506, -9.1887, -8.6824, -8.3488, -8.0533, -7.8664,   
     4 -7.7346, -7.6934, -7.6674, -7.6268, -7.5451, -7.4677, -7.4520,   
     5 -7.5471, -7.7913, -8.1917, -8.8835,-10.0000,-10.0000,-10.0000,   
     6-10.0000,-10.0000, -9.7234, -8.9969, -8.5776, -8.1737, -7.8640,   
     7 -7.5729, -7.3186, -7.0973, -6.9131, -6.7782, -6.7073, -6.6768,   
     8 -6.6303, -6.5406, -6.4509, -6.3950, -6.4345, -6.6270, -6.9507,   
     9 -7.5028, -8.6428,-10.0000,-10.0000,-10.0000,-10.0000, -9.5303,   
     $ -8.9369, -8.4952, -8.1465, -7.8567, -7.6177, -7.4249, -7.2876,   
     1 -7.2206, -7.1948, -7.1552, -7.0773, -6.9884, -6.9402, -6.9839,   
     2 -7.1773, -7.4999, -8.0643, -9.1480,-10.0000/                     
C=CO  ====C' FOR    2 BAND MODEL                                        
C=CO  ====    0-  175                                                   
      DATA C11CO/                                                       
     1 -4.6868, -4.4127, -3.9461, -3.5662, -3.2921, -3.1081, -2.9807,   
     2 -2.8977, -2.8580, -2.8461, -2.8587, -2.9029, -2.9646, -3.0480,   
     3 -3.1589, -3.2836, -3.4277, -3.5993, -3.7963, -4.0164, -4.2799,   
     4 -4.5750, -4.8722, -5.2741, -5.6819, -6.0799, -6.4828, -6.8857,   
     5 -7.2886, -7.6915, -8.0944, -8.4973, -8.9002, -9.3031, -9.7060,   
     6-10.0000/                                                         
C=CO  ==== 1940- 2285, 4040- 4370                                       
      DATA C21CO/                                                       
     1-10.0000, -9.5312, -8.8977, -8.2642, -7.5767, -6.9972, -6.5408,   
     2 -6.1219, -5.6734, -5.2658, -4.8686, -4.4918, -4.1423, -3.8133,   
     3 -3.4998, -3.2104, -2.9443, -2.7138, -2.5084, -2.3109, -2.1245,   
     4 -1.9387, -1.7608, -1.6054, -1.4733, -1.3594, -1.2540, -1.1480,   
     5 -1.0341, -0.9216, -0.8189, -0.7235, -0.6362, -0.5549, -0.4856,   
     6 -0.4401, -0.4268, -0.4657, -0.5571, -0.6573, -0.7404, -0.7523,   
     7 -0.6601, -0.5380, -0.4211, -0.3367, -0.3167, -0.3320, -0.3753,   
     8 -0.4489, -0.5438, -0.6653, -0.8052, -0.9690, -1.1506, -1.3522,   
     9 -1.5791, -1.8248, -2.1073, -2.4246, -2.7877, -3.2152, -3.7089,   
     $ -4.2832, -4.9518, -5.7251, -6.5319, -7.4879, -9.0885,-10.0000,   
     1-10.0000, -9.5611, -9.0875, -8.6139, -7.9747, -7.5250, -7.1931,   
     2 -6.8596, -6.5741, -6.2922, -6.0098, -5.7669, -5.5345, -5.3229,   
     3 -5.1461, -4.9882, -4.8493, -4.7239, -4.6064, -4.5009, -4.4071,   
     4 -4.3322, -4.2661, -4.1926, -4.0956, -3.9611, -3.7984, -3.6314,   
     5 -3.4757, -3.3408, -3.2237, -3.1219, -3.0325, -2.9494, -2.8765,   
     6 -2.8117, -2.7531, -2.7023, -2.6635, -2.6440, -2.6550, -2.7225,   
     7 -2.8161, -2.9015, -2.9241, -2.8228, -2.6726, -2.5320, -2.4291,   
     8 -2.3772, -2.3732, -2.3995, -2.4574, -2.5486, -2.6664, -2.8209/   
      DATA C22CO/                                                       
     1 -3.0129, -3.2516, -3.5482, -3.9165, -4.3714, -4.9326, -5.6394,   
     2 -6.5163, -7.6063, -9.3575,-10.0000/                              
C=CH4 ====C' FOR    1 BAND MODEL                                        
C=CH4 ==== 1065- 1775, 2345- 3230, 4110- 4690, 5865- 6135               
      DATA C11CH4/                                                      
     1-10.0000, -9.4577, -8.8866, -8.2246, -7.7940, -7.1734, -6.7965,   
     2 -6.5695, -6.1929, -5.9169, -5.7452, -5.4731, -5.3001, -5.1872,   
     3 -4.9672, -4.8474, -4.6939, -4.5210, -4.3377, -4.1346, -3.9322,   
     4 -3.7339, -3.5077, -3.2719, -3.0296, -2.8124, -2.6199, -2.4479,   
     5 -2.2502, -2.0541, -1.8800, -1.7092, -1.5791, -1.4379, -1.2992,   
     6 -1.1735, -1.0510, -0.9646, -0.8779, -0.8002, -0.7574, -0.7356,   
     7 -0.7478, -0.7512, -0.6906, -0.5594, -0.4417, -0.4019, -0.5027,   
     8 -0.7628, -0.9625, -1.0431, -1.0068, -0.8781, -0.7559, -0.6628,   
     9 -0.6128, -0.6118, -0.6575, -0.7620, -0.9217, -1.1264, -1.3660,   
     $ -1.6352, -1.9264, -2.2266, -2.5123, -2.7472, -2.8820, -2.9129,   
     1 -2.9145, -2.8854, -2.8508, -2.8512, -2.8202, -2.8023, -2.8004,   
     2 -2.7800, -2.8175, -2.8413, -2.8943, -2.9876, -3.0688, -3.2424,   
     3 -3.4064, -3.5759, -3.7630, -3.8925, -4.0774, -4.3243, -4.5964,   
     4 -3.8654, -3.0974, -2.5967, -2.2482, -2.1016, -2.1488, -2.3261,   
     5 -2.6448, -3.0446, -3.3958, -3.6510, -3.7049, -3.7240, -3.5992,   
     6 -3.4937, -3.3676, -3.2230, -3.1630, -3.0691, -3.0776, -3.0872,   
     7 -3.0974, -3.1223, -3.1285, -3.1212, -3.1333, -3.1674, -3.1668,   
     8 -3.2433, -3.2398, -3.3135, -3.3975, -3.4427, -3.6434, -3.7528/   
      DATA C12CH4/                                                      
     1 -3.9466, -4.1940, -4.3362, -4.5539, -4.7410, -4.9155, -5.1345,   
     2 -5.3908, -5.5592, -5.8270, -6.0289, -6.2365, -6.6730, -7.0538,   
     3 -7.6216, -8.5697, -9.8483,-10.0000, -9.3577, -8.5950, -7.8323,   
     4 -7.0696, -6.3069, -5.5442, -5.1501, -4.8853, -4.6900, -4.5262,   
     5 -4.3957, -4.2823, -4.2736, -4.2054, -4.1168, -3.9986, -3.8712,   
     6 -3.8692, -3.8777, -3.8965, -3.9092, -3.8788, -3.7661, -3.6900,   
     7 -3.6239, -3.5597, -3.5193, -3.4906, -3.4415, -3.3730, -3.3579,   
     8 -3.3427, -3.3208, -3.3048, -3.3136, -3.2904, -3.2545, -3.2241,   
     9 -3.1453, -3.0187, -2.9427, -2.8630, -2.8146, -2.8604, -2.8922,   
     $ -2.9650, -2.9959, -2.8920, -2.7989, -2.7028, -2.6506, -2.7285,   
     1 -2.8420, -2.9304, -2.9622, -2.8726, -2.7566, -2.6745, -2.6337,   
     2 -2.6533, -2.6800, -2.7098, -2.7479, -2.6859, -2.6216, -2.5701,   
     3 -2.4683, -2.4426, -2.4463, -2.4194, -2.4578, -2.4894, -2.4639,   
     4 -2.4825, -2.4998, -2.4381, -2.4123, -2.3654, -2.2698, -2.2387,   
     5 -2.2364, -2.2029, -2.1780, -2.1433, -2.0355, -1.9458, -1.8723,   
     6 -1.7936, -1.7639, -1.7782, -1.8022, -1.8115, -1.7818, -1.6986,   
     7 -1.6169, -1.5975, -1.6545, -1.7742, -1.8937, -1.9544, -1.8942,   
     8 -1.7761, -1.6392, -1.5236, -1.4551, -1.4221, -1.4245, -1.4174/   
      DATA C13CH4/                                                      
     1 -1.4177, -1.3776, -1.3349, -1.2909, -1.2470, -1.2162, -1.1850,   
     2 -1.1677, -1.1449, -1.1229, -1.1031, -1.0795, -1.0687, -1.0692,   
     3 -1.0904, -1.1166, -1.1511, -1.1951, -1.2321, -1.2831, -1.2716,   
     4 -1.1902, -0.9715, -0.6654, -0.4103, -0.3011, -0.5049, -0.8659,   
     5 -1.1777, -1.3847, -1.4359, -1.3908, -1.2992, -1.1923, -1.0951,   
     6 -1.0213, -0.9578, -0.9299, -0.9207, -0.9292, -0.9725, -1.0126,   
     7 -1.0750, -1.1149, -1.1636, -1.2059, -1.2638, -1.3327, -1.4079,   
     8 -1.4983, -1.5711, -1.6872, -1.7870, -1.9266, -2.0774, -2.2119,   
     9 -2.3875, -2.5155, -2.6822, -2.8372, -3.0032, -3.2413, -3.5058,   
     $ -3.9508, -4.5133, -5.3536, -8.0815, -8.9081, -9.8155,-10.0000,   
     1 -7.4757, -5.1602, -4.2454, -3.7640, -3.3256, -3.0103, -2.7726,   
     2 -2.5510, -2.3849, -2.2318, -2.1080, -2.0086, -1.9290, -1.8902,   
     3 -1.8750, -1.8700, -1.8476, -1.7390, -1.5724, -1.4284, -1.3425,   
     4 -1.3791, -1.5132, -1.6508, -1.7283, -1.6684, -1.5432, -1.4447,   
     5 -1.3773, -1.3490, -1.3642, -1.4016, -1.4713, -1.5836, -1.6984,   
     6 -1.8085, -1.8486, -1.7464, -1.6338, -1.5555, -1.5552, -1.6935,   
     7 -1.8165, -1.8417, -1.7697, -1.6346, -1.5589, -1.5466, -1.5604,   
     8 -1.6307, -1.6867, -1.7593, -1.8051, -1.8167, -1.8518, -1.8559/   
      DATA C14CH4/                                                      
     1 -1.8547, -1.8907, -1.8851, -1.8933, -1.9081, -1.9025, -1.9451,   
     2 -1.9924, -2.0321, -2.0816, -2.1026, -2.1137, -2.1351, -2.1629,   
     3 -2.1876, -2.2340, -2.2960, -2.3747, -2.4970, -2.6244, -2.7641,   
     4 -2.8912, -3.0328, -3.1944, -3.3877, -3.4566, -3.1662, -2.7253,   
     5 -2.3992, -2.2214, -2.2022, -2.3978, -2.7449, -3.2639, -3.9311,   
     6 -4.1470, -3.9351, -3.7471, -3.6245, -3.4791, -3.4710, -3.4210,   
     7 -3.4125, -3.4475, -3.4140, -3.4908, -3.5164, -3.5944, -3.7403,   
     8 -3.8192, -4.0177, -4.1833, -4.3518, -4.6486, -4.8778, -5.2542,   
     9 -5.7834, -6.3451, -7.7212,-10.0000, -9.9134, -7.9181, -6.0815,   
     $ -5.4397, -4.9875, -4.6154, -4.4846, -4.3541, -4.3037, -4.3073,   
     1 -4.2471, -4.2593, -4.1984, -4.1895, -4.1697, -4.1578, -4.1950,   
     2 -4.1878, -4.2299, -4.2209, -4.2646, -4.3123, -4.3911, -4.4588,   
     3 -4.1873, -3.8353, -3.5282, -3.3055, -3.3351, -3.5671, -3.8750,   
     4 -4.2645, -4.4786, -4.4293, -4.3183, -4.1996, -4.0879, -4.0169,   
     5 -3.9787, -3.9536, -3.9454, -3.9283, -3.9166, -3.9152, -3.9336,   
     6 -3.9561, -3.9932, -4.0934, -4.2317, -4.5084, -4.9460, -5.4958,   
     7 -6.5492, -8.5604, -9.6202/                                       
C=N2O ====C' FOR    3 BAND MODEL                                        
C=N2O ====    0-  120                                                   
      DATA C11N2O/                                                      
     1 -2.8003, -2.6628, -2.4313, -2.2579, -2.1700, -2.1702, -2.2490,   
     2 -2.4003, -2.6264, -2.9219, -3.2954, -3.7684, -4.2621, -4.7558,   
     3 -5.2495, -5.7432, -6.2369, -6.7306, -7.2243, -7.7180, -8.2117,   
     4 -8.7054, -9.1991, -9.6928,-10.0000/                              
C=N2O ====  490-  775,  865-  995, 1065- 1385, 1545- 2040, 2090- 2655   
      DATA C21N2O/                                                      
     1 -9.7185, -8.8926, -8.0667, -7.2307, -6.4149, -5.4872, -4.7083,   
     2 -4.0319, -3.4752, -3.0155, -2.6046, -2.2057, -1.8137, -1.4741,   
     3 -1.1914, -0.9603, -0.7923, -0.6629, -0.5849, -0.5402, -0.4975,   
     4 -0.5148, -0.5592, -0.6521, -0.8148, -1.0186, -1.2764, -1.5873,   
     5 -1.9638, -2.3881, -2.8083, -3.2392, -3.6934, -4.0682, -4.1366,   
     6 -3.9423, -3.7143, -3.4975, -3.2602, -3.0976, -2.9815, -2.9153,   
     7 -2.9596, -3.0281, -3.1264, -3.2650, -3.3906, -3.5717, -3.8312,   
     8 -4.1706, -4.6077, -5.1839, -5.9224, -6.9862, -7.6901, -8.3940,   
     9 -9.0979, -9.8018, -9.9154, -9.2271, -8.5388, -7.8504, -7.1621,   
     $ -6.2428, -5.6051, -5.0971, -4.7237, -4.4104, -4.2050, -4.0681,   
     1 -4.0278, -4.0307, -4.0492, -4.0333, -3.9710, -3.9249, -3.9360,   
     2 -4.0316, -4.2317, -4.5414, -4.9787, -5.5623, -6.3335, -7.9968,   
     3 -9.6601, -9.5486, -8.8517, -8.1548, -7.4579, -6.7610, -6.0641,   
     4 -5.3672, -4.6703, -3.6918, -3.0656, -2.5796, -2.1876, -1.8646,   
     5 -1.5919, -1.3587, -1.1684, -1.0286, -0.9470, -0.9271, -0.9442,   
     6 -0.9695, -0.9753, -0.9573, -0.9550, -1.0000, -1.1070, -1.2791,   
     7 -1.4976, -1.7281, -1.9277, -2.0227, -1.9577, -1.7625, -1.5020,   
     8 -1.2186, -0.9270, -0.6326, -0.3429, -0.0768,  0.1500,  0.3215/   
      DATA C22N2O/                                                      
     1  0.4104,  0.4385,  0.4288,  0.4185,  0.4570,  0.4972,  0.4987,   
     2  0.4216,  0.2360, -0.0319, -0.3714, -0.7539, -1.1534, -1.5855,   
     3 -2.0610, -2.6068, -3.2635, -4.1038, -5.2761, -6.1437, -7.0079,   
     4 -7.9440, -8.8801, -9.8162,-10.0000, -9.5951, -9.1305, -8.6659,   
     5 -8.2013, -7.7367, -7.2721, -6.8075, -6.1598, -5.8695, -5.3510,   
     6 -4.9491, -4.6310, -4.3846, -4.0784, -3.7763, -3.5901, -3.4607,   
     7 -3.4386, -3.5481, -3.7014, -3.9310, -4.2251, -4.4593, -4.8210,   
     8 -5.3494, -6.1286, -7.5981,-10.0000,-10.0000,-10.0000,-10.0000,   
     9 -6.3743, -5.5592, -5.0129, -4.6075, -4.3171, -4.0928, -3.7537,   
     $ -3.5406, -3.3869, -3.2913, -3.3633, -3.4932, -3.6924, -4.0074,   
     1 -4.2504, -4.5389, -4.9425, -5.4741, -6.2069, -7.5981,-10.0000,   
     2-10.0000,-10.0000, -6.9215, -6.0798, -5.1934, -4.6288, -4.1316,   
     3 -3.7322, -3.4089, -3.1573, -2.9573, -2.7298, -2.5615, -2.4382,   
     4 -2.3523, -2.3774, -2.4508, -2.5755, -2.7757, -2.9904, -3.2733,   
     5 -3.6524, -4.1599, -4.7952, -5.7004, -6.8762, -6.9822, -6.2484,   
     6 -5.7613, -5.2586, -4.8674, -4.6633, -4.5332, -4.5158, -4.6593,   
     7 -4.8427, -5.0917, -5.5781, -6.0645, -6.5509, -7.0373, -7.5237,   
     8 -8.0101, -8.4965, -8.9829, -9.4693, -9.9557, -9.7130, -8.6609/   
      DATA C23N2O/                                                      
     1 -7.6089, -6.5568, -5.0880, -4.4527, -3.9302, -3.4438, -2.9701,   
     2 -2.5423, -2.1616, -1.8076, -1.4763, -1.1580, -0.8445, -0.5455,   
     3 -0.2506,  0.0234,  0.2775,  0.5113,  0.7154,  0.8929,  1.0359,   
     4  1.1306,  1.1697,  1.1807,  1.1803,  1.1974,  1.2466,  1.2629,   
     5  1.2068,  1.0472,  0.7695,  0.4083, -0.0244, -0.5477, -1.2202,   
     6 -2.1067, -2.9508, -3.2107, -3.1587, -2.9600, -2.7641, -2.6324,   
     7 -2.5671, -2.5664, -2.6088, -2.6425, -2.6606, -2.6895, -2.7551,   
     8 -2.8837, -3.0884, -3.3746, -3.7078, -4.0975, -4.6272, -5.2484,   
     9-10.0000,-10.0000,-10.0000, -7.3571, -5.0287, -4.3047, -3.6431,   
     $ -3.1026, -2.6122, -2.1941, -1.8454, -1.5726, -1.3829, -1.2818,   
     1 -1.2505, -1.2579, -1.2731, -1.2502, -1.2092, -1.2044, -1.2577,   
     2 -1.3942, -1.6262, -1.9347, -2.2830, -2.5386, -2.4801, -2.1671,   
     3 -1.8061, -1.4726, -1.1797, -0.9377, -0.7542, -0.6392, -0.5899,   
     4 -0.5743, -0.5669, -0.5339, -0.4745, -0.4471, -0.4779, -0.5877,   
     5 -0.7964, -1.0942, -1.4812, -1.9593, -2.5140, -3.1350, -3.8102,   
     6 -4.5825, -5.5982, -6.4193, -7.2403, -8.0614, -8.8825, -9.7035/   
C=N2O ==== 2705- 2865, 3245- 3925, 4260- 4470, 4540- 4785, 4910- 5165   
      DATA C31N2O/                                                      
     1 -9.8910, -8.9876, -8.0843, -7.1809, -6.1501, -5.3742, -4.7352,   
     2 -4.2051, -3.7525, -3.3562, -2.9916, -2.6649, -2.3872, -2.1499,   
     3 -1.9747, -1.7982, -1.6518, -1.5582, -1.4838, -1.5004, -1.5821,   
     4 -1.6912, -1.8673, -2.0756, -2.3351, -2.7020, -3.1921, -3.8409,   
     5 -4.7085, -5.9588, -6.5829, -8.5585, -9.8584, -9.9723, -9.4215,   
     6 -8.8707, -8.3199, -7.7691, -7.2183, -6.5567, -6.4345, -5.6448,   
     7 -5.0529, -4.4643, -3.9624, -3.5231, -3.1395, -2.8067, -2.5232,   
     8 -2.2858, -2.0820, -1.9049, -1.7554, -1.6485, -1.5959, -1.5838,   
     9 -1.5961, -1.5997, -1.5734, -1.5615, -1.5974, -1.7059, -1.9034,   
     $ -2.1631, -2.4181, -2.5427, -2.4592, -2.2513, -2.0187, -1.7879,   
     1 -1.5612, -1.3399, -1.1265, -0.9226, -0.7379, -0.5790, -0.4573,   
     2 -0.3952, -0.3683, -0.3511, -0.3216, -0.2556, -0.2126, -0.2593,   
     3 -0.4361, -0.7702, -1.2089, -1.7060, -2.2937, -3.1133, -4.4419,   
     4 -6.0119, -6.9457,-10.0000,-10.0000,-10.0000,-10.0000, -7.0394,   
     5 -5.9637, -5.2317, -4.6419, -4.1663, -3.7874, -3.5000, -3.3086,   
     6 -3.2143, -3.1926, -3.2105, -3.2308, -3.1971, -3.1510, -3.1402,   
     7 -3.1969, -3.3477, -3.6005, -3.9534, -4.4117, -4.9729, -5.6009,   
     8 -6.2179, -5.9845, -5.5502, -4.9010, -4.3401, -3.8232, -3.3802/   
      DATA C32N2O/                                                      
     1 -2.9972, -2.6747, -2.4143, -2.2209, -2.1080, -2.0682, -2.0687,   
     2 -2.0775, -2.0485, -1.9847, -1.9531, -1.9870, -2.1110, -2.3366,   
     3 -2.6293, -2.8922, -2.9474, -2.7627, -2.4999, -2.2554, -2.0537,   
     4 -1.9062, -1.8268, -1.7941, -1.7766, -1.7468, -1.6767, -1.6130,   
     5 -1.6085, -1.6849, -1.8599, -2.1258, -2.4538, -2.8205, -3.2028,   
     6 -3.5988, -4.0691, -4.7117, -5.6320, -6.4806, -7.3731, -8.2602,   
     7 -9.1474,-10.0000,-10.0000, -9.5340, -9.0282, -8.5224, -8.0166,   
     8 -7.5109, -7.0051, -6.4117, -6.0148, -5.4878, -5.1742, -4.8859,   
     9 -4.4873, -4.2249, -4.0285, -3.8669, -3.8247, -3.7652, -3.6521,   
     $ -3.4906, -3.2613, -3.0307, -2.8156, -2.6172, -2.4264, -2.2442,   
     1 -2.0775, -1.9432, -1.8703, -1.8523, -1.8552, -1.8443, -1.7814,   
     2 -1.7104, -1.7043, -1.7952, -2.0205, -2.3968, -2.9374, -3.7689,   
     3 -5.3159, -7.4139, -9.5119, -9.7965, -9.1511, -8.5057, -7.8603,   
     4 -7.2149, -6.5695, -6.2415, -5.5829, -5.0296, -4.5660, -4.1722,   
     5 -3.8364, -3.5551, -3.3398, -3.1970, -3.1363, -3.1232, -3.1257,   
     6 -3.0999, -3.0288, -2.9746, -2.9875, -3.0925, -3.3137, -3.6496,   
     7 -4.0276, -4.1958, -3.9760, -3.6179, -3.2725, -2.9653, -2.6962,   
     8 -2.4677, -2.2828, -2.1547, -2.0949, -2.0763, -2.0606, -2.0142/   
      DATA C33N2O/                                                      
     1 -1.9239, -1.8618, -1.8813, -2.0099, -2.2825, -2.7071, -3.3277,   
     2 -4.3300, -6.2151, -8.3543,-10.0000, -9.7275, -9.1257, -8.5239,   
     3 -7.9221, -7.3203, -6.7185, -6.6089, -5.8877, -5.4527, -5.0879,   
     4 -4.6598, -4.3806, -4.1830, -4.0426, -4.0175, -4.0178, -3.9811,   
     5 -3.9244, -3.8056, -3.6968, -3.6435, -3.6326, -3.6339, -3.6157,   
     6 -3.5478, -3.4826, -3.4807, -3.5665, -3.7650, -4.0718, -4.3980,   
     7 -4.5075, -4.3358, -4.0765, -3.8674, -3.7221, -3.6588, -3.6429,   
     8 -3.6371, -3.6014, -3.5209, -3.4616, -3.4774, -3.5957, -3.8481,   
     9 -4.2598, -4.8784, -5.8266, -6.7468, -8.1352, -9.2208,-10.0000/   
C=O2  ====C' FOR    2 BAND MODEL                                        
C=O2  ====    0-  265                                                   
      DATA C11O2/                                                       
     1 -6.1363, -6.1794, -6.2538, -6.3705, -6.5110, -6.6162, -6.7505,   
     2 -6.7896, -6.8305, -6.8471, -6.8282, -6.8772, -6.8680, -6.9332,   
     3 -6.9511, -7.0048, -7.0662, -7.1043, -7.2055, -7.2443, -7.3520,   
     4 -7.4079, -7.4998, -7.5924, -7.6682, -7.7993, -7.8712, -8.0161,   
     5 -8.1102, -8.2485, -8.3758, -8.4942, -8.6532, -8.7554, -8.9453,   
     6 -9.0665, -9.2631, -9.4387, -9.6325, -9.8757,-10.0628,-10.3761,   
     7-10.5478,-10.9147,-11.2052,-11.5129,-11.8206,-12.1283,-12.4360,   
     8-12.7437,-13.0514,-13.3591,-13.6668,-13.9745/                     
C=O2  ==== 7650- 8080, 9235- 9490,12850-13220,14300-14600,15695-15955   
      DATA C21O2/                                                       
     1-13.9458,-13.7692,-13.5048,-13.1422,-13.0242,-12.6684,-12.3571,   
     2-12.2428,-11.8492,-11.6427,-11.5173,-11.2108,-11.1584,-11.0196,   
     3-10.8040,-10.8059,-10.5828,-10.4580,-10.4170,-10.1823,-10.1435,   
     4-10.0030, -9.8136, -9.7772, -9.5680, -9.4595, -9.3502, -9.1411,   
     5 -9.0476, -8.8628, -8.7051, -8.5838, -8.4282, -8.3271, -8.1958,   
     6 -8.0838, -7.9652, -7.8371, -7.7476, -7.6431, -7.5736, -7.5149,   
     7 -7.4194, -7.2688, -7.0722, -6.8815, -6.7627, -6.8055, -6.9114,   
     8 -6.9936, -7.0519, -7.0597, -7.0680, -7.1242, -7.2088, -7.3265,   
     9 -7.4673, -7.6326, -7.8110, -8.0096, -8.2104, -8.4036, -8.5853,   
     $ -8.7252, -8.8511, -8.9427, -9.0375, -9.1228, -9.2246, -9.3291,   
     1 -9.4436, -9.5716, -9.6951, -9.8408, -9.9759,-10.1489,-10.3027,   
     2-10.5178,-10.7265,-10.9787,-11.2939,-11.5552,-11.9595,-12.2436,   
     3-12.6942,-13.2011,-13.8191,-13.9216,-13.7293,-13.5370,-13.3447,   
     4-13.1523,-12.9600,-12.7677,-12.5754,-12.3830,-12.1907,-11.9948,   
     5-11.7759,-11.5926,-11.4214,-11.2493,-11.1094,-10.9477,-10.8332,   
     6-10.7323,-10.6380,-10.5725,-10.4409,-10.2013, -9.8839, -9.6546,   
     7 -9.5053, -9.4638, -9.5526, -9.6558, -9.7430, -9.7958, -9.7896,   
     8 -9.8320, -9.9447,-10.1221,-10.3707,-10.6623,-10.9761,-11.2271/   
      DATA C22O2/                                                       
     1-11.4091,-11.4921,-11.6015,-11.6945,-11.8333,-11.9985,-12.1788,   
     2-12.3822,-12.6605,-13.0796,-13.3528,-13.6463,-13.9398,-13.7034,   
     3-13.3150,-13.1177,-12.6462,-12.4868,-12.2205,-11.9650,-11.6941,   
     4-11.4377,-11.2136,-10.9567,-10.7980,-10.5546,-10.3952,-10.2403,   
     5-10.0491, -9.9226, -9.7871, -9.6557, -9.6106, -9.5142, -9.4763,   
     6 -9.4163, -9.2348, -9.1088, -8.7946, -8.5876, -8.3128, -8.0945,   
     7 -7.9127, -7.7229, -7.5860, -7.4215, -7.2726, -7.1179, -6.9516,   
     8 -6.8075, -6.6413, -6.5043, -6.3519, -6.2112, -6.0839, -5.9337,   
     9 -5.8321, -5.6969, -5.5923, -5.5076, -5.4002, -5.3413, -5.2826,   
     $ -5.2458, -5.2877, -5.3743, -5.4654, -5.5262, -5.4429, -5.2430,   
     1 -5.0284, -4.8464, -4.7534, -4.7825, -4.9462, -5.2290, -5.6440,   
     2 -6.1889, -6.8427, -7.7731, -9.1688, -9.6893,-10.1853,-10.7670,   
     3-11.4611,-12.3081,-13.1476,-13.8192,-13.5871,-13.2189,-12.9705,   
     4-12.4825,-12.1301,-11.9430,-11.6636,-11.3197,-11.1678,-10.8967,   
     5-10.6002,-10.4857,-10.1986, -9.9731, -9.8547, -9.5817, -9.4382,   
     6 -9.3042, -9.0755, -8.9944, -8.8060, -8.6543, -8.5441, -8.3556,   
     7 -8.2557, -8.0959, -7.9717, -7.8453, -7.7076, -7.5910, -7.4567,   
     8 -7.3439, -7.2248, -7.1236, -7.0209, -6.9345, -6.8404, -6.7560/   
      DATA C23O2/                                                       
     1 -6.6744, -6.5870, -6.5278, -6.4809, -6.5042, -6.5797, -6.6564,   
     2 -6.6939, -6.5912, -6.3776, -6.1438, -6.0062, -6.0469, -6.3081,   
     3 -6.8199, -7.4307, -8.1345, -9.1190,-10.4203,-11.4698,-12.5942,   
     4-13.5316,-13.8693,-13.9392,-13.6885,-13.4377,-13.1869,-12.9362,   
     5-12.6854,-12.3720,-12.2852,-11.9331,-11.7575,-11.6297,-11.3290,   
     6-11.1205,-11.0084,-10.7243,-10.5543,-10.4485,-10.1764,-10.0759,   
     7 -9.9304, -9.7196, -9.6630, -9.4774, -9.3638, -9.2675, -9.1121,   
     8 -9.0368, -8.9025, -8.8028, -8.7012, -8.5909, -8.5121, -8.4141,   
     9 -8.3444, -8.2687, -8.2003, -8.1571, -8.1141, -8.1261, -8.1848,   
     $ -8.2395, -8.2478, -8.0877, -7.7880, -7.5611, -7.4487, -7.4880,   
     1 -7.7644, -8.2142, -8.8765,-10.1091,-12.4483,-13.7228/            
      END                                                               
      BLOCK DATA DSTDTA                                                 
C>    BLOCK DATA                                                        
C********************************************************************** 
C*                                                                    * 
C*    DESERT AEROSOL EXTINCTION COEFFICIENTS, ABSORPTION COEFFICIENTS * 
C*    AND ASYMMETRY PARAMETERS FOR FOUR WIND SPEEDS: 0 M/S, 10 M/S,   * 
C*    20 M/S AND 30 M/S                                               * 
C*                                                                    * 
C*    PROGRAMMED BY:  D. R. LONGTIN         OPTIMETRICS, INC.         * 
C*                                          BURLINGTON, MASSACHUSETTS * 
C*                                          FEB  1988                 * 
C*                                                                    * 
C********************************************************************** 
C                                                                       
      COMMON /DESAER/DESEX1(47),DESEX2(47),DESEX3(47),DESEX4(47),       
     *DESAB1(47),DESAB2(47),DESAB3(47),DESAB4(47),DESG1(47),DESG2(47),  
     *DESG3(47),DESG4(47)                                               
C                                                                       
C     EXTINCTION COEFFICIENTS                                           
C                                                                       
      DATA DESEX1 /                                                     
     1 8.7330E-2, 7.1336E-2, 6.5754E-2, 4.0080E-2, 2.8958E-2, 1.4537E-2,
     1 7.1554E-3, 4.3472E-3, 3.5465E-3, 2.9225E-3, 2.5676E-3, 4.3573E-3,
     1 5.7479E-3, 2.9073E-3, 2.0109E-3, 1.8890E-3, 1.8525E-3, 1.8915E-3,
     1 1.9503E-3, 2.3256E-3, 4.9536E-3, 2.0526E-3, 2.6738E-3, 9.2804E-3,
     1 1.5352E-2, 6.9396E-3, 2.2455E-3, 1.9840E-3, 1.9452E-3, 1.9019E-3,
     1 1.8551E-3, 1.9661E-3, 1.9865E-3, 2.4089E-3, 1.7485E-3, 1.4764E-3,
     1 2.2604E-3, 2.1536E-3, 2.3008E-3, 2.9272E-3, 2.6943E-3, 2.4319E-3,
     1 1.9199E-3, 1.4887E-3, 8.0630E-4, 4.6950E-4, 2.0792E-4/           
      DATA DESEX2 /                                                     
     2 1.0419E-1, 8.8261E-2, 8.2699E-2, 5.7144E-2, 4.6078E-2, 3.1831E-2,
     2 2.4638E-2, 2.1952E-2, 2.1254E-2, 2.0743E-2, 2.0397E-2, 2.2340E-2,
     2 2.3848E-2, 2.1104E-2, 2.0422E-2, 2.0462E-2, 2.0591E-2, 2.0843E-2,
     2 2.1030E-2, 2.1630E-2, 2.2880E-2, 1.9075E-2, 2.0928E-2, 2.9835E-2,
     2 3.8025E-2, 2.7349E-2, 2.1502E-2, 2.1475E-2, 2.1563E-2, 2.1726E-2,
     2 2.2265E-2, 2.2580E-2, 2.2708E-2, 2.1705E-2, 2.1230E-2, 2.0523E-2,
     2 2.6686E-2, 2.5461E-2, 2.3785E-2, 2.6033E-2, 2.6484E-2, 2.6464E-2,
     2 2.5318E-2, 2.3341E-2, 1.7824E-2, 1.3092E-2, 7.2020E-3/           
      DATA DESEX3 /                                                     
     3 2.7337E-1, 2.5795E-1, 2.5252E-1, 2.2773E-1, 2.1710E-1, 2.0402E-1,
     3 1.9809E-1, 1.9664E-1, 1.9635E-1, 1.9655E-1, 1.9661E-1, 1.9907E-1,
     3 2.0164E-1, 1.9957E-1, 2.0013E-1, 2.0142E-1, 2.0270E-1, 2.0400E-1,
     3 2.0501E-1, 2.0665E-1, 2.0573E-1, 1.9165E-1, 2.0121E-1, 2.2402E-1,
     3 2.4718E-1, 2.2503E-1, 2.0749E-1, 2.0910E-1, 2.0999E-1, 2.1165E-1,
     3 2.1784E-1, 2.1727E-1, 2.1803E-1, 2.0995E-1, 2.1214E-1, 2.1308E-1,
     3 2.5226E-1, 2.4234E-1, 2.2638E-1, 2.3991E-1, 2.4680E-1, 2.5176E-1,
     3 2.5655E-1, 2.5505E-1, 2.3610E-1, 2.1047E-1, 1.5938E-1/           
      DATA DESEX4 /                                                     
     4 1.9841E0, 1.9721E0, 1.9676E0, 1.9488E0, 1.9424E0, 1.9377E0,      
     4 1.9374E0, 1.9484E0, 1.9509E0, 1.9549E0, 1.9570E0, 1.9642E0,      
     4 1.9737E0, 1.9764E0, 1.9860E0, 1.9944E0, 2.0020E0, 2.0113E0,      
     4 2.0148E0, 2.0245E0, 2.0283E0, 1.9397E0, 1.9973E0, 2.1039E0,      
     4 2.2246E0, 2.1587E0, 2.0409E0, 2.0520E0, 2.0613E0, 2.0651E0,      
     4 2.1194E0, 2.1065E0, 2.1104E0, 2.0651E0, 2.0926E0, 2.1155E0,      
     4 2.3696E0, 2.2931E0, 2.1828E0, 2.2708E0, 2.3304E0, 2.3762E0,      
     4 2.4533E0, 2.4915E0, 2.5118E0, 2.4463E0, 2.2122E0/                
C                                                                       
C     ABSORPTION COEFFICIENTS                                           
C                                                                       
      DATA DESAB1 /                                                     
     1 6.4942E-4, 6.1415E-4, 5.8584E-4, 4.4211E-4, 1.3415E-4, 7.8142E-5,
     1 5.7566E-5, 8.3848E-5, 7.6988E-5, 4.4486E-5, 8.9604E-5, 2.4887E-3,
     1 3.3444E-3, 6.8781E-4, 1.6387E-4, 3.5236E-4, 3.5340E-4, 4.0930E-4,
     1 5.0526E-4, 8.2146E-4, 3.7647E-3, 1.0162E-3, 1.3525E-3, 7.7761E-3,
     1 1.3108E-2, 5.1252E-3, 1.0973E-3, 6.8573E-4, 5.7622E-4, 5.1268E-4,
     1 7.6834E-4, 5.3793E-4, 5.0611E-4, 1.2828E-3, 6.7827E-4, 4.3826E-4,
     1 5.1221E-4, 8.8642E-4, 9.5535E-4, 1.0000E-3, 7.5646E-4, 6.1552E-4,
     1 4.6087E-4, 3.5642E-4, 2.3556E-4, 1.7596E-4, 1.1699E-4/           
      DATA DESAB2 /                                                     
     2 4.3569E-3, 4.3413E-3, 4.3277E-3, 4.0649E-3, 3.9091E-4, 8.4594E-5,
     2 5.8501E-5, 8.4412E-5, 7.7547E-5, 4.6817E-5, 9.2721E-5, 2.5389E-3,
     2 3.3588E-3, 7.9414E-4, 8.5079E-4, 4.6002E-3, 4.4872E-3, 4.6200E-3,
     2 5.2973E-3, 4.8910E-3, 8.9899E-3, 5.4745E-3, 3.6375E-3, 1.1862E-2,
     2 1.5179E-2, 7.0015E-3, 8.4693E-3, 6.9516E-3, 6.3008E-3, 6.3684E-3,
     2 8.4992E-3, 6.9625E-3, 6.5192E-3, 7.8955E-3, 7.7192E-3, 5.8540E-3,
     2 5.3263E-3, 9.3004E-3, 7.4848E-3, 3.0952E-3, 1.8219E-3, 1.3078E-3,
     2 1.0653E-3, 5.5231E-4, 3.2311E-4, 2.2422E-4, 1.3839E-4/           
      DATA DESAB3 /                                                     
     3 4.1552E-2, 4.1671E-2, 4.1781E-2, 4.1125E-2, 5.0552E-3, 2.1085E-4,
     3 7.5703E-5, 9.5531E-5, 8.8354E-5, 9.0588E-5, 1.5058E-4, 3.4972E-3,
     3 3.6310E-3, 2.6709E-3, 1.2558E-2, 5.9184E-2, 5.8289E-2, 5.9206E-2,
     3 6.5487E-2, 5.8707E-2, 7.4669E-2, 5.2152E-2, 2.5783E-2, 4.7971E-2,
     3 3.2378E-2, 2.4739E-2, 8.1225E-2, 7.5085E-2, 7.1232E-2, 7.3042E-2,
     3 8.0638E-2, 7.8255E-2, 7.4882E-2, 7.8853E-2, 8.1412E-2, 6.5722E-2,
     3 4.8565E-2, 8.4983E-2, 7.1273E-2, 3.0870E-2, 1.7031E-2, 1.1455E-2,
     3 1.0554E-2, 4.0418E-3, 2.1509E-3, 1.4115E-3, 7.9698E-4/           
      DATA DESAB4 /                                                     
     4 4.1777E-1, 4.1880E-1, 4.2000E-1, 4.1846E-1, 8.6452E-2, 2.6538E-3,
     4 4.0804E-4, 3.1418E-4, 2.9996E-4, 9.3018E-4, 1.2814E-3, 2.1436E-2,
     4 8.7553E-3, 3.7670E-2, 2.0849E-1, 7.0914E-1, 7.0420E-1, 7.1379E-1,
     4 7.6309E-1, 7.1128E-1, 8.2992E-1, 5.3585E-1, 2.4456E-1, 3.8103E-1,
     4 1.7784E-1, 1.9305E-1, 7.9910E-1, 7.8987E-1, 7.7502E-1, 7.9400E-1,
     4 7.6332E-1, 8.3629E-1, 8.1581E-1, 8.3122E-1, 8.4901E-1, 7.0150E-1,
     4 4.4205E-1, 7.7354E-1, 7.1088E-1, 3.9328E-1, 2.3337E-1, 1.6258E-1,
     4 1.5289E-1, 5.8849E-2, 3.5576E-2, 2.4463E-2, 1.4525E-2/           
C                                                                       
C     ASYMMETRY PARAMETER                                               
C                                                                       
      DATA DESG1 /                                                      
     1 0.6603, 0.6581, 0.6547, 0.6383, 0.6276, 0.5997, 0.5829, 0.5873,  
     1 0.5967, 0.6130, 0.6323, 0.6850, 0.6068, 0.6312, 0.6816, 0.7298,  
     1 0.7574, 0.7874, 0.8124, 0.8424, 0.8301, 0.8107, 0.6143, 0.6167,  
     1 0.4892, 0.4917, 0.6662, 0.6334, 0.6298, 0.6498, 0.7470, 0.6711,  
     1 0.6751, 0.7538, 0.8054, 0.7797, 0.5522, 0.6575, 0.4702, 0.3719,  
     1 0.3626, 0.3690, 0.3790, 0.3805, 0.3766, 0.3639, 0.3281/          
      DATA DESG2 /                                                      
     2 0.6836, 0.6879, 0.6877, 0.6919, 0.6901, 0.7045, 0.7279, 0.7466,  
     2 0.7522, 0.7568, 0.7629, 0.7700, 0.7567, 0.7617, 0.7781, 0.8289,  
     2 0.8360, 0.8465, 0.8624, 0.8707, 0.9524, 0.8292, 0.6202, 0.6425,  
     2 0.5777, 0.5623, 0.7610, 0.7310, 0.7247, 0.7419, 0.7782, 0.7481,  
     2 0.7446, 0.8090, 0.8415, 0.8110, 0.6120, 0.7106, 0.5739, 0.4421,  
     2 0.4089, 0.3979, 0.3917, 0.3853, 0.3842, 0.3829, 0.3797/          
      DATA DESG3 /                                                      
     3 0.7718, 0.7865, 0.7907, 0.8077, 0.7801, 0.7827, 0.7871, 0.7880,  
     3 0.7887, 0.7888, 0.7894, 0.7909, 0.7882, 0.7934, 0.8103, 0.8729,  
     3 0.8766, 0.8844, 0.8979, 0.8997, 0.9698, 0.8318, 0.6197, 0.6420,  
     3 0.5797, 0.5698, 0.8014, 0.7938, 0.7901, 0.8069, 0.7894, 0.8139,  
     3 0.8086, 0.8546, 0.8691, 0.8288, 0.6394, 0.7400, 0.6495, 0.5235,  
     3 0.4793, 0.4583, 0.4376, 0.4169, 0.4006, 0.3941, 0.3875/          
      DATA DESG4 /                                                      
     4 0.8290, 0.8407, 0.8443, 0.8500, 0.8087, 0.7994, 0.7988, 0.7987,  
     4 0.7988, 0.7989, 0.7998, 0.8023, 0.8011, 0.8076, 0.8331, 0.9045,  
     4 0.9083, 0.9149, 0.9266, 0.9263, 0.9783, 0.8321, 0.6168, 0.6379,  
     4 0.5706, 0.5673, 0.8196, 0.8324, 0.8347, 0.8549, 0.7940, 0.8621,  
     4 0.8588, 0.8918, 0.8922, 0.8407, 0.6488, 0.7557, 0.7021, 0.6024,  
     4 0.5533, 0.5280, 0.5016, 0.4711, 0.4396, 0.4230, 0.4058/          
      END                                                               
      BLOCK DATA EXTDTA                                                 
C>    BLOCK DATA                                                        
CCC                                                                     
CCC   ALTITUDE REGIONS FOR AEROSOL EXTINCTION COEFFICIENTS              
CCC                                                                     
CCC                                                                     
CCC         0-2KM                                                       
CCC           RUREXT=RURAL EXTINCTION   RURABS=RURAL ABSORPTION         
CCC           RURSYM=RURAL ASYMMETRY FACTORS                            
CCC           URBEXT=URBAN EXTINCTION   URBABS=URBAN ABSORPTION         
CCC           URBSYM=URBAN ASYMMETRY FACTORS                            
CCC           OCNEXT=MARITIME EXTINCTION  OCNABS=MARITIME ABSORPTION    
CCC           OCNSYM=MARITIME ASYMMETRY FACTORS                         
CCC           TROEXT=TROPSPHER EXTINCTION  TROABS=TROPOSPHER ABSORPTION 
CCC           TROSYM=TROPSPHERIC ASYMMETRY FACTORS                      
CCC           FG1EXT=FOG1 .2KM VIS EXTINCTION  FG1ABS=FOG1 ABSORPTION   
CCC           FG1SYM=FOG1 ASYMMETRY FACTORS                             
CCC           FG2EXT=FOG2 .5KM VIS EXTINCTION  FG2ABS=FOG2 ABSORPTION   
CCC           FG2SYM=FOG2 ASYMMETRY FACTORS                             
CCC         >2-10KM                                                     
CCC           TROEXT=TROPOSPHER EXTINCTION  TROABS=TROPOSPHER ABSORPTION
CCC           TROSYM=TROPOSPHERIC ASYMMETRY FACTORS                     
CCC         >10-30KM                                                    
CCC           BSTEXT=BACKGROUND STRATOSPHERIC EXTINCTION                
CCC           BSTABS=BACKGROUND STRATOSPHERIC ABSORPTION                
CCC           BSTSYM=BACKGROUND STRATOSPHERIC ASYMMETRY FACTORS         
CCC           AVOEXT=AGED VOLCANIC EXTINCTION                           
CCC           AVOABS=AGED VOLCANIC ABSORPTION                           
CCC           AVOSYM=AGED VOLCANIC ASYMMETRY FACTORS                    
CCC           FVOEXT=FRESH VOLCANIC EXTINCTION                          
CCC           FVOABS=FRESH VOLCANIC ABSORPTION                          
CCC           FVOSYM=FRESH VOLCANIC ASYMMETRY FACTORS                   
CCC         >30-100KM                                                   
CCC           DMEEXT=METEORIC DUST EXTINCTION                           
CCC           DMEABS=METEORIC DUST ABSORPTION                           
CCC           DMESYM=METEORIC DUST ASYMMETRY FACTORS                    
C                                                                       
C     AEROSOL EXTINCTION AND ABSORPTION DATA                            
C                                                                       
C     MODIFIED TO INCLUDE ASYMMETRY DATA - JAN 1986 (A.E.R. INC.)       
C                                                                       
C     COMMON /EXTD  /VX2(47),RUREXT(47,4),RURABS(47,4),URBEXT(47,4),    
C    1URBABS(47,4),OCNEXT(47,4),OCNABS(47,4),TROEXT(47,4),TROABS(47,4), 
C    2FG1EXT(47),FG1ABS(47),FG2EXT(47),FG2ABS(47),                      
C    3   BSTEXT(47),BSTABS(47),AVOEXT(47),AVOABS(47),FVOEXT(47)         
C    4),FVOABS(47),DMEEXT(47),DMEABS(47),                               
C                                                                       
C                                                                       
      COMMON /EXTD  / VX2(47),RURE1(47),RURE2(47),RURE3(47),RURE4(47),  
     X RURA1(47),RURA2(47),RURA3(47),RURA4(47),                         
     X RURG1(47),RURG2(47),RURG3(47),RURG4(47),                         
     X URBE1(47),URBE2(47),URBE3(47),URBE4(47),                         
     X URBA1(47),URBA2(47),URBA3(47),URBA4(47),                         
     X URBG1(47),URBG2(47),URBG3(47),URBG4(47),                         
     X OCNE1(47),OCNE2(47),OCNE3(47),OCNE4(47),                         
     X OCNA1(47),OCNA2(47),OCNA3(47),OCNA4(47),                         
     X OCNG1(47),OCNG2(47),OCNG3(47),OCNG4(47),                         
     X TROE1(47),TROE2(47),TROE3(47),TROE4(47),                         
     X TROA1(47),TROA2(47),TROA3(47),TROA4(47),                         
     X TROG1(47),TROG2(47),TROG3(47),TROG4(47),                         
     2 FG1EXT(47),FG1ABS(47),FG1SYM(47),FG2EXT(47),FG2ABS(47),          
     3 FG2SYM(47),BSTEXT(47),BSTABS(47),BSTSYM(47),AVOEXT(47),          
     4 AVOABS(47),AVOSYM(47),FVOEXT(47),FVOABS(47),FVOSYM(47),          
     5 DMEEXT(47),DMEABS(47),DMESYM(47),CCUEXT(47),CCUABS(47),          
     6 CCUSYM(47),CALEXT(47),CALABS(47),CALSYM(47),CSTEXT(47),          
     7 CSTABS(47),CSTSYM(47),CSCEXT(47),CSCABS(47),CSCSYM(47),          
     8 CNIEXT(47),CNIABS(47),CNISYM(47)                                 
C                                                                       
C         CI64--    STANDARD  CIRRUS  CLOUD  MODEL                      
C              ICE 64 MICRON MODE RADIUS CIRRUS CLOUD MODEL             
C                                                                       
C         CIR4--    OPTICALLY  THIN  CIRRUS  MODEL                      
C              ICE  4 MICRON MODE RADIUS CIRRUS CLOUD MODEL             
C                                                                       
       COMMON/CIRR/ CI64XT(47),CI64AB(47),CI64G(47),                    
     B              CIR4XT(47),CIR4AB(47),CIR4G(47)                     
      DATA VX2 /                                                        
     *   .2000,   .3000,   .3371,   .5500,   .6943,  1.0600,  1.5360,   
     *  2.0000,  2.2500,  2.5000,  2.7000,  3.0000,  3.3923,  3.7500,   
     *  4.5000,  5.0000,  5.5000,  6.0000,  6.2000,  6.5000,  7.2000,   
     *  7.9000,  8.2000,  8.7000,  9.0000,  9.2000, 10.0000, 10.5910,   
     * 11.0000, 11.5000, 12.5000, 14.8000, 15.0000, 16.4000, 17.2000,   
     * 18.5000, 21.3000, 25.0000, 30.0000, 40.0000, 50.0000, 60.0000,   
     * 80.0000, 100.000, 150.000, 200.000, 300.000/                     
      DATA RURE1 /                                                      
     1 2.09291, 1.74582, 1.60500, 1.00000,  .75203,  .41943,  .24070,   
     2  .14709,  .13304,  .12234,  .13247,  .11196,  .10437,  .09956,   
     3  .09190,  .08449,  .07861,  .07025,  .07089,  .07196,  .07791,   
     4  .04481,  .04399,  .12184,  .12658,  .12829,  .09152,  .08076,   
     5  .07456,  .06880,  .06032,  .04949,  .05854,  .06000,  .06962,   
     6  .05722,  .06051,  .05177,  .04589,  .04304,                     
     7  .03582,  .03155,  .02018,  .01469,  .00798,  .00551, 0./        
      DATA RURE2 /                                                      
     1 2.09544, 1.74165, 1.59981, 1.00000,  .75316,  .42171,  .24323,   
     2  .15108,  .13608,  .12430,  .13222,  .13823,  .11076,  .10323,   
     3  .09475,  .08728,  .08076,  .07639,  .07797,  .07576,  .07943,   
     4  .04899,  .04525,  .12165,  .12741,  .12778,  .09032,  .07962,   
     5  .07380,  .06880,  .06329,  .05791,  .06646,  .06639,  .07443,   
     6  .06304,  .06443,  .05538,  .04867,  .04519,                     
     7  .03821,  .03374,  .02173,  .01587,  .00862,  .00594, 0./        
      DATA RURE3 /                                                      
     1 2.07082, 1.71456, 1.57962, 1.00000,  .76095,  .43228,  .25348,   
     2  .16456,  .14677,  .13234,  .13405,  .20316,  .12873,  .11506,   
     3  .10481,  .09709,  .08918,  .09380,  .09709,  .08791,  .08601,   
     4  .06247,  .05601,  .11905,  .12595,  .12348,  .08741,  .07703,   
     5  .07266,  .07044,  .07443,  .08146,  .08810,  .08563,  .08962,   
     6  .08051,  .07677,  .06658,  .05747,  .05184,                     
     7  .04572,  .04074,  .02689,  .01981,  .01084,  .00714, 0./        
      DATA RURE4 /                                                      
     1 1.66076, 1.47886, 1.40139, 1.00000,  .80652,  .50595,  .32259,   
     2  .23468,  .20772,  .18532,  .17348,  .35114,  .20006,  .17386,   
     3  .16139,  .15424,  .14557,  .16215,  .16766,  .14994,  .14032,   
     4  .12968,  .12601,  .13551,  .13582,  .13228,  .11070,  .09994,   
     5  .09873,  .10418,  .13241,  .15924,  .16139,  .15949,  .15778,   
     6  .15184,  .13848,  .12563,  .11076,  .09601,                     
     7  .09312,  .08720,  .06644,  .05264,  .03181,  .02196, 0.0/       
      DATA RURA1 /                                                      
     1  .67196,  .11937,  .08506,  .05930,  .05152,  .05816,  .05006,   
     2  .01968,  .02070,  .02101,  .05652,  .02785,  .01316,  .00867,   
     3  .01462,  .01310,  .01627,  .02013,  .02165,  .02367,  .03538,   
     4  .02823,  .03962,  .06778,  .07285,  .08120,  .04032,  .03177,   
     5  .02557,  .02342,  .02177,  .02627,  .03943,  .03114,  .03696,   
     6  .02956,  .03500,  .03241,  .03297,  .03380,                     
     7  .03170,  .02794,  .01769,  .01305,  .00730,  .00518, 0.0/       
      DATA RURA2 /                                                      
     1  .62968,  .10816,  .07671,  .05380,  .04684,  .05335,  .04614,   
     2  .01829,  .01899,  .01962,  .05525,  .06816,  .01652,  .00867,   
     3  .01544,  .01373,  .01627,  .02892,  .02829,  .02532,  .03487,   
     4  .02835,  .03854,  .06684,  .07272,  .08038,  .03987,  .03247,   
     5  .02816,  .02816,  .03101,  .03741,  .04829,  .04032,  .04399,   
     6  .03734,  .03956,  .03601,  .03525,  .03563,                     
     7 .03357,  .02965,  .01887,  .01395,  .00782,  .00555, 0.0/        
      DATA RURA3 /                                                      
     1  .51899,  .08278,  .05816,  .04082,  .03570,  .04158,  .03620,   
     2  .01513,  .01481,  .01633,  .05278,  .13690,  .02494,  .00886,   
     3  .01804,  .01582,  .01677,  .04816,  .04367,  .03013,  .03443,   
     4  .02930,  .03677,  .06209,  .06911,  .07475,  .03892,  .03494,   
     5  .03513,  .03968,  .05152,  .06241,  .06937,  .06203,  .06215,   
     6  .05614,  .05209,  .04608,  .04196,  .04095,                     
     7  .03916,  .03486,  .02262,  .01686,  .00951,  .00674, 0.0/       
      DATA RURA4 /                                                      
     1  .21943,  .02848,  .01943,  .01342,  .01171,  .01437,  .01323,   
     2  .01152,  .00696,  .01329,  .06108,  .24690,  .05323,  .01430,   
     3  .03361,  .02949,  .02652,  .09437,  .08506,  .05348,  .04627,   
     4  .04380,  .04557,  .05380,  .05715,  .05899,  .04861,  .05253,   
     5  .06171,  .07437,  .10152,  .12019,  .12190,  .11734,  .11411,   
     6  .10766,  .09487,  .08430,  .07348,  .06861,                     
     7  .06936,  .06458,  .04735,  .03761,  .02313,  .01668, 0.0/       
      DATA RURG1 /                                                      
     1  .7581,   .6785,   .6712,   .6479,   .6342,   .6176,   .6334,    
     2  .7063,   .7271,   .7463,   .7788,   .7707,   .7424,   .7312,    
     3  .7442,   .7516,   .7662,   .7940,   .7886,   .7797,   .7664,    
     4  .8525,   .8700,   .5846,   .5570,   .5992,   .6159,   .6271,    
     5  .6257,   .6374,   .6546,   .6861,   .6859,   .6120,   .5570,    
     6  .5813,   .5341,   .5284,   .5137,   .4348,   .4223,   .3775,    
     7  .3435,   .3182,   .2791,   .2494,   .0000/                      
      DATA RURG2 /                                                      
     1  .7632,   .6928,   .6865,   .6638,   .6498,   .6314,   .6440,    
     2  .7098,   .7303,   .7522,   .7903,   .7804,   .7380,   .7319,    
     3  .7508,   .7584,   .7738,   .8071,   .7929,   .7843,   .7747,    
     4  .8507,   .8750,   .6112,   .5851,   .6272,   .6466,   .6616,    
     5  .6653,   .6798,   .6965,   .7026,   .6960,   .6360,   .5848,    
     6  .6033,   .5547,   .5445,   .5274,   .4518,   .4318,   .3863,    
     7  .3516,   .3257,   .2853,   .2548,   .0000/                      
      DATA RURG3 /                                                      
     1  .7725,   .7240,   .7197,   .6997,   .6858,   .6650,   .6702,    
     2  .7181,   .7378,   .7653,   .8168,   .7661,   .7286,   .7336,    
     3  .7654,   .7735,   .7910,   .8303,   .8025,   .7957,   .7946,    
     4  .8468,   .8734,   .6831,   .6619,   .6994,   .7250,   .7449,    
     5  .7547,   .7665,   .7644,   .7265,   .7170,   .6769,   .6409,    
     6  .6442,   .6031,   .5854,   .5646,   .4977,   .4602,   .4127,    
     7  .3751,   .3476,   .3048,   .2721,   .0000/                      
      DATA RURG4 /                                                      
     1  .7778,   .7793,   .7786,   .7717,   .7628,   .7444,   .7365,    
     2  .7491,   .7609,   .7921,   .8688,   .7537,   .7294,   .7413,    
     3  .7928,   .8016,   .8225,   .8761,   .8359,   .8285,   .8385,    
     4  .8559,   .8654,   .8414,   .8415,   .8527,   .8740,   .8903,    
     5  .8952,   .8923,   .8611,   .8033,   .7989,   .7758,   .7632,    
     6  .7508,   .7314,   .7091,   .6867,   .6419,   .5790,   .5259,    
     7  .4749,   .4415,   .3886,   .3489,   .0000/                      
      DATA URBE1 /                                                      
     1 1.88816, 1.63316, 1.51867, 1.00000,  .77785,  .47095,  .30006,   
     2  .21392,  .19405,  .17886,  .18127,  .16133,  .14785,  .14000,   
     3  .12715,  .11880,  .11234,  .10601,  .10500,  .10361,  .10342,   
     4  .08766,  .08652,  .11937,  .12139,  .12297,  .09797,  .09057,   
     5  .08595,  .08196,  .07563,  .06696,  .07209,  .06842,  .07177,   
     6  .06354,  .06177,  .05373,  .04728,  .04051,                     
     7  .03154,  .02771,  .01759,  .01278,  .00693,  .00480, 0.0/       
      DATA URBE2 /                                                      
     1 1.95582, 1.64994, 1.53070, 1.00000,  .77614,  .46639,  .29487,   
     2  .21051,  .18943,  .17285,  .17209,  .21418,  .15354,  .14051,   
     3  .12728,  .11861,  .11089,  .11329,  .11323,  .10563,  .10247,   
     4  .08696,  .08361,  .12013,  .12418,  .12304,  .09614,  .08842,   
     5  .08487,  .08285,  .08361,  .08430,  .08880,  .08449,  .08601,   
     6  .07835,  .07323,  .06367,  .05500,  .04747,                     
     7  .03901,  .03454,  .02240,  .01638,  .00891,  .00612, 0.0/       
      DATA URBE3 /                                                      
     1 1.96430, 1.64032, 1.52392, 1.00000,  .77709,  .46253,  .28690,   
     2  .20310,  .17981,  .16101,  .15614,  .26475,  .15456,  .13563,   
     3  .12215,  .11361,  .10500,  .11715,  .11753,  .10392,  .09766,   
     4  .08443,  .08057,  .10943,  .11342,  .11063,  .08703,  .08025,   
     5  .07886,  .08032,  .09101,  .10070,  .10386,  .09943,  .09886,   
     6  .09152,  .08247,  .07152,  .06089,  .05253,                     
     7  .04582,  .04091,  .02717,  .02008,  .01103,  .00754, 0.0/       
      DATA URBE4 /                                                      
     1 1.41266, 1.33816, 1.29114, 1.00000,  .83646,  .55025,  .35342,   
     2  .25285,  .21576,  .18310,  .16215,  .37854,  .20494,  .16665,   
     3  .14778,  .13892,  .12943,  .15525,  .15709,  .13513,  .12481,   
     4  .11759,  .11494,  .11487,  .11329,  .11108,  .09911,  .09209,   
     5  .09342,  .10120,  .13177,  .15696,  .15766,  .15513,  .15203,   
     6  .14532,  .13038,  .11785,  .10411,  .09101,                     
     7  .08907,  .08399,  .06579,  .05337,  .03372,  .02379, 0.0/       
      DATA URBA1 /                                                      
     1  .78437,  .58975,  .54285,  .36184,  .29222,  .20886,  .15658,   
     2  .12329,  .11462,  .10747,  .11797,  .10025,  .08759,  .08184,   
     3  .07506,  .07006,  .06741,  .06601,  .06544,  .06449,  .06665,   
     4  .06278,  .06949,  .07316,  .07462,  .08101,  .05753,  .05272,   
     5  .04899,  .04734,  .04494,  .04443,  .05133,  .04348,  .04443,   
     6  .03994,  .03981,  .03633,  .03468,  .03146,                     
     7  .02809,  .02471,  .01556,  .01145,  .00639,  .00454, 0.0/       
      DATA URBA2 /                                                      
     1  .69032,  .49367,  .45165,  .29741,  .24070,  .17399,  .13146,   
     2  .10354,  .09589,  .09025,  .10411,  .15101,  .07880,  .06949,   
     3  .06570,  .06095,  .05829,  .07171,  .06797,  .05975,  .06013,   
     4  .05589,  .06051,  .07139,  .07494,  .07956,  .05525,  .05184,   
     5  .05089,  .05291,  .05886,  .06380,  .06880,  .06127,  .06019,   
     6  .05525,  .05070,  .04500,  .04076,  .03741,                     
     7  .03400,  .03010,  .01926,  .01427,  .00800,  .00567, 0.0/       
      DATA URBA3 /                                                      
     1  .54848,  .37101,  .33734,  .21949,  .17785,  .12968,  .09854,   
     2  .07804,  .07165,  .06791,  .08563,  .19639,  .06722,  .05316,   
     3  .05316,  .04886,  .04620,  .07570,  .06899,  .05291,  .05101,   
     4  .04734,  .05025,  .06171,  .06570,  .06854,  .04892,  .04797,   
     5  .05057,  .05665,  .07127,  .08095,  .08411,  .07728,  .07475,   
     6  .06886,  .06019,  .05222,  .04538,  .04171,                     
     7  .03911,  .03486,  .02271,  .01697,  .00961,  .00681, 0.0/       
      DATA URBA4 /                                                      
     1  .15975,  .10000,  .09013,  .05785,  .04671,  .03424,  .02633,   
     2  .02525,  .01975,  .02354,  .06241,  .26690,  .05810,  .02285,   
     3  .03810,  .03386,  .03044,  .09627,  .08557,  .05405,  .04576,   
     4  .04392,  .04424,  .04671,  .04791,  .04861,  .04684,  .05177,   
     5  .06158,  .07475,  .10342,  .12146,  .12177,  .11734,  .11335,   
     6  .10608,  .09171,  .08063,  .06968,  .06475,                     
     7  .06559,  .06131,  .04591,  .03714,  .02365,  .01734, 0.0/       
      DATA URBG1 /                                                      
     1  .7785,   .7182,   .7067,   .6617,   .6413,   .6166,   .6287,    
     2  .6883,   .7070,   .7243,   .7370,   .7446,   .7391,   .7371,    
     3  .7414,   .7435,   .7466,   .7543,   .7498,   .7424,   .7270,    
     4  .7674,   .7850,   .5880,   .5616,   .5901,   .6159,   .6238,    
     5  .6240,   .6281,   .6306,   .6298,   .6252,   .5785,   .5378,    
     6  .5512,   .5072,   .4930,   .4709,   .4009,   .4110,   .3672,    
     7  .3344,   .3093,   .2717,   .2426,   .0000/                      
      DATA URBG2 /                                                      
     1  .7906,   .7476,   .7385,   .6998,   .6803,   .6536,   .6590,    
     2  .7066,   .7258,   .7484,   .7769,   .7405,   .7351,   .7459,    
     3  .7625,   .7673,   .7759,   .7910,   .7732,   .7703,   .7644,    
     4  .7966,   .8142,   .6635,   .6428,   .6700,   .6935,   .7050,    
     5  .7092,   .7145,   .7094,   .6762,   .6684,   .6316,   .5997,    
     6  .6013,   .5625,   .5433,   .5198,   .4552,   .4387,   .3928,    
     7  .3575,   .3310,   .2899,   .2588,   .0000/                      
      DATA URBG3 /                                                      
     1  .7949,   .7713,   .7650,   .7342,   .7162,   .6873,   .6820,    
     2  .7131,   .7312,   .7583,   .8030,   .7171,   .7185,   .7400,    
     3  .7698,   .7778,   .7923,   .8142,   .7864,   .7867,   .7891,    
     4  .8147,   .8298,   .7276,   .7136,   .7361,   .7590,   .7729,    
     5  .7783,   .7808,   .7624,   .7094,   .7022,   .6714,   .6480,    
     6  .6417,   .6104,   .5887,   .5651,   .5058,   .4692,   .4212,    
     7  .3825,   .3549,   .3112,   .2778,   .0000/                      
      DATA URBG4 /                                                      
     1  .7814,   .7993,   .7995,   .7948,   .7870,   .7682,   .7751,    
     2  .7501,   .7565,   .7809,   .8516,   .7137,   .7039,   .7241,    
     3  .7728,   .7846,   .8093,   .8576,   .8125,   .8140,   .8304,    
     4  .8472,   .8549,   .8525,   .8569,   .8640,   .8853,   .9017,    
     5  .9061,   .9021,   .8685,   .8126,   .8091,   .7897,   .7802,    
     6  .7691,   .7550,   .7353,   .7146,   .6754,   .6134,   .5601,    
     7  .5056,   .4701,   .4134,   .3714,   .0000/                      
      DATA OCNE1 /                                                      
     1 1.47576, 1.32614, 1.26171, 1.00000,  .88133,  .70297,  .56487,   
     2  .46006,  .42044,  .38310,  .35076,  .42266,  .32278,  .28810,   
     3  .24905,  .21184,  .16734,  .14791,  .21532,  .15076,  .12057,   
     4  .10038,  .10703,  .15070,  .15665,  .14639,  .10228,  .08367,   
     5  .07373,  .06829,  .05044,  .04373,  .04962,  .06158,  .07703,   
     6  .07234,  .06297,  .05481,  .05329,  .08741,                     
     7  .04608,  .03959,  .02382,  .01712,  .00936,  .00665, 0.0/       
      DATA OCNE2 /                                                      
     1 1.36924, 1.25443, 1.20835, 1.00000,  .91367,  .77089,  .64987,   
     2  .54886,  .50247,  .45038,  .38209,  .50589,  .43766,  .38076,   
     3  .31658,  .27475,  .22215,  .21019,  .27570,  .21057,  .16949,   
     4  .14209,  .14215,  .16956,  .17082,  .16025,  .11665,  .09759,   
     5  .09215,  .09373,  .10532,  .12570,  .13000,  .13633,  .14291,   
     6  .13506,  .11475,  .09658,  .08291,  .10348,                     
     7  .06693,  .05786,  .03522,  .02519,  .01358,  .00954, 0.0/       
      DATA OCNE3 /                                                      
     1 1.22259, 1.14627, 1.11842, 1.00000,  .94766,  .87538,  .80418,   
     2  .72930,  .68582,  .62165,  .49962,  .67949,  .66468,  .59253,   
     3  .49551,  .44671,  .37886,  .35924,  .43367,  .37019,  .30842,   
     4  .26437,  .25228,  .24905,  .23975,  .22766,  .17804,  .15316,   
     5  .15373,  .16791,  .22361,  .28348,  .28677,  .29082,  .29038,   
     6  .27810,  .23867,  .20209,  .16430,  .14943,                     
     7  .12693,  .11177,  .07095,  .05084,  .02690,  .01838, 0.0/       
      DATA OCNE4 /                                                      
     1 1.09133, 1.06601, 1.05620, 1.00000,  .97506,  .94791,  .94203,   
     2  .93671,  .92867,  .90411,  .80253,  .89222,  .94462,  .92146,   
     3  .85797,  .82595,  .76747,  .68646,  .78209,  .75266,  .68658,   
     4  .62722,  .60228,  .56335,  .53728,  .51861,  .43449,  .37196,   
     5  .35899,  .37316,  .46854,  .58234,  .58690,  .60348,  .60563,   
     6  .60000,  .55392,  .50367,  .43576,  .35949,                     
     7  .34729,  .32254,  .23600,  .17953,  .10071,  .06714, 0.0/       
      DATA OCNA1 /                                                      
     1  .30987,  .04354,  .02880,  .01797,  .01468,  .01766,  .01582,   
     2  .00816,  .01146,  .01677,  .03310,  .03380,  .00715,  .00443,   
     3  .00500,  .00601,  .00753,  .01595,  .02943,  .00994,  .01367,   
     4  .01671,  .02538,  .03481,  .03405,  .03601,  .01608,  .01310,   
     5  .01152,  .01082,  .01070,  .01563,  .02063,  .03171,  .03810,   
     6  .03741,  .03804,  .03759,  .04209,  .07892,                     
     7  .04347,  .03754,  .02269,  .01649,  .00917,  .00657, 0.0/       
      DATA OCNA2 /                                                      
     1  .23367,  .03127,  .02070,  .01297,  .01063,  .01285,  .01190,   
     2  .00937,  .00911,  .01576,  .05576,  .23487,  .03949,  .00905,   
     3  .02057,  .01816,  .01665,  .08025,  .08044,  .03677,  .03139,   
     4  .03190,  .03766,  .04532,  .04544,  .04715,  .03405,  .03614,   
     5  .04329,  .05424,  .07823,  .09728,  .10057,  .10247,  .10222,   
     6  .09551,  .08241,  .07158,  .06506,  .09203,                     
     7  .06133,  .05332,  .03258,  .02366,  .01308,  .00932, 0.0/       
      DATA OCNA3 /                                                      
     1  .13025,  .01557,  .01013,  .00646,  .00532,  .00665,  .00722,   
     2  .01335,  .00728,  .01810,  .09835,  .37329,  .09703,  .01968,   
     3  .05114,  .04342,  .03709,  .17456,  .16468,  .08785,  .06880,   
     4  .06589,  .06791,  .07247,  .07329,  .07449,  .07025,  .07962,   
     5  .09899,  .12481,  .17867,  .22019,  .22228,  .22051,  .21595,   
     6  .20335,  .17278,  .14677,  .12171,  .12430,                     
     7  .10890,  .09644,  .06106,  .04465,  .02457,  .01732, 0.0/       
      DATA OCNA4 /                                                      
     1  .03506,  .00323,  .00215,  .00139,  .00114,  .00171,  .00532,   
     2  .03082,  .01101,  .03741,  .20101,  .47608,  .21165,  .05234,   
     3  .12886,  .11215,  .09684,  .32810,  .31778,  .20513,  .16658,   
     4  .15956,  .15842,  .15905,  .15968,  .16051,  .16506,  .18323,   
     5  .21709,  .25652,  .33222,  .39639,  .39854,  .40297,  .40025,   
     6  .39025,  .35468,  .32006,  .27715,  .25348,                     
     7  .25632,  .23876,  .17092,  .13198,  .07692,  .05407, 0.0/       
      DATA OCNG1 /                                                      
     1  .7516,   .6960,   .6920,   .6756,   .6767,   .6844,   .6936,    
     2  .7055,   .7110,   .7177,   .7367,   .6287,   .6779,   .6784,    
     3  .6599,   .6659,   .6859,   .6887,   .6095,   .6558,   .6665,    
     4  .6697,   .6594,   .5851,   .5644,   .5760,   .5903,   .5991,    
     5  .6024,   .5979,   .6087,   .5837,   .5763,   .5348,   .4955,    
     6  .4821,   .4635,   .4373,   .3944,   .2344,   .2754,   .2447,    
     7  .2266,   .2088,   .1766,   .1481,   .0000/                      
      DATA OCNG2 /                                                      
     1  .7708,   .7288,   .7243,   .7214,   .7211,   .7330,   .7445,    
     2  .7579,   .7649,   .7790,   .8182,   .7673,   .7171,   .7205,    
     3  .7235,   .7251,   .7397,   .7537,   .6934,   .7137,   .7193,    
     4  .7206,   .7151,   .6732,   .6620,   .6696,   .6821,   .6895,    
     5  .6898,   .6819,   .6556,   .5925,   .5869,   .5511,   .5284,    
     6  .5124,   .4912,   .4646,   .4302,   .3124,   .3101,   .2752,    
     7  .2529,   .2335,   .2021,   .1738,   .0000/                      
      DATA OCNG3 /                                                      
     1  .7954,   .7782,   .7752,   .7717,   .7721,   .7777,   .7872,    
     2  .8013,   .8089,   .8301,   .8844,   .8332,   .7557,   .7597,    
     3  .7823,   .7822,   .7944,   .8157,   .7712,   .7738,   .7784,    
     4  .7807,   .7800,   .7682,   .7659,   .7692,   .7780,   .7828,    
     5  .7776,   .7621,   .7115,   .6342,   .6294,   .5999,   .5854,    
     6  .5700,   .5512,   .5265,   .4996,   .4236,   .3765,   .3357,    
     7  .3066,   .2830,   .2466,   .2184,   .0000/                      
      DATA OCNG4 /                                                      
     1  .8208,   .8270,   .8260,   .8196,   .8176,   .8096,   .8096,    
     2  .8202,   .8255,   .8520,   .9228,   .8950,   .7965,   .7847,    
     3  .8242,   .8244,   .8376,   .8857,   .8463,   .8332,   .8379,    
     4  .8441,   .8467,   .8502,   .8534,   .8562,   .8688,   .8789,    
     5  .8785,   .8683,   .8252,   .7562,   .7519,   .7261,   .7141,    
     6  .6980,   .6789,   .6540,   .6294,   .5783,   .5100,   .4595,    
     7  .4164,   .3868,   .3404,   .3042,   .0000/                      
      DATA TROE1 /                                                      
     1 2.21222, 1.82753, 1.67032, 1.00000,  .72424,  .35272,  .15234,   
     2  .05165,  .03861,  .02994,  .04671,  .02462,  .01538,  .01146,   
     3  .01032,  .00816,  .00861,  .00994,  .01057,  .01139,  .01747,   
     4  .01494,  .02418,  .03165,  .03386,  .04247,  .01601,  .01215,   
     5  .00937,  .00861,  .00823,  .01139,  .01924,  .01234,  .01348,   
     6  .01114,  .01297,  .01266,  .01418,  .01487,                     
     7  .01543,  .01321,  .00793,  .00582,  .00330,  .00239, 0.0/       
      DATA TROE2 /                                                      
     1 2.21519, 1.82266, 1.66557, 1.00000,  .72525,  .35481,  .15449,   
     2  .05475,  .04044,  .03082,  .04620,  .05272,  .01867,  .01266,   
     3  .01127,  .00886,  .00886,  .01449,  .01399,  .01228,  .01728,   
     4  .01475,  .02285,  .03215,  .03494,  .04285,  .01652,  .01304,   
     5  .01101,  .01120,  .01297,  .01753,  .02468,  .01741,  .01766,   
     6  .01513,  .01557,  .01456,  .01532,  .01582,                     
     7  .01619,  .01386,  .00832,  .00610,  .00346,  .00251, 0.0/       
      DATA TROE3 /                                                      
     1 2.19082, 1.79462, 1.64456, 1.00000,  .73297,  .36443,  .16278,   
     2  .06468,  .04658,  .03399,  .04538,  .11892,  .02835,  .01646,   
     3  .01386,  .01076,  .00968,  .02551,  .02222,  .01468,  .01690,   
     4  .01437,  .01994,  .03127,  .03513,  .04076,  .01722,  .01513,   
     5  .01519,  .01791,  .02538,  .03272,  .03816,  .03038,  .02886,   
     6  .02551,  .02228,  .01937,  .01804,  .01791,                     
     7  .01798,  .01539,  .00924,  .00678,  .00384,  .00278, 0.0/       
      DATA TROE4 /                                                      
     1 1.75696, 1.54829, 1.45962, 1.00000,  .77816,  .43139,  .21778,   
     2  .11329,  .08101,  .05506,  .04943,  .25291,  .06816,  .03703,   
     3  .02601,  .01968,  .01468,  .04962,  .04247,  .02234,  .01797,   
     4  .01532,  .01633,  .02259,  .02487,  .02595,  .01728,  .01892,   
     5  .02399,  .03247,  .05285,  .06462,  .06608,  .05930,  .05525,   
     6  .04861,  .03753,  .02968,  .02348,  .02165,                     
     7  .02152,  .01841,  .01104,  .00809,  .00458,  .00332, 0.0/       
      DATA TROA1 /                                                      
     1  .69671,  .09905,  .06563,  .04101,  .03354,  .03627,  .02810,   
     2  .00873,  .00918,  .00930,  .03215,  .01285,  .00513,  .00316,   
     3  .00557,  .00494,  .00646,  .00867,  .00937,  .01025,  .01646,   
     4  .01481,  .02418,  .02886,  .03070,  .04032,  .01494,  .01139,   
     5  .00873,  .00816,  .00797,  .01133,  .01911,  .01215,  .01329,   
     6  .01101,  .01291,  .01266,  .01418,  .01487,                     
     7  .01543,  .01321,  .00793,  .00582,  .00330,  .00239, 0.0/       
      DATA TROA2 /                                                      
     1  .65000,  .08791,  .05816,  .03652,  .02994,  .03278,  .02557,   
     2  .00810,  .00842,  .00867,  .03139,  .03949,  .00646,  .00316,   
     3  .00595,  .00519,  .00646,  .01304,  .01247,  .01095,  .01620,   
     4  .01449,  .02278,  .02930,  .03184,  .04063,  .01544,  .01234,   
     5  .01044,  .01076,  .01272,  .01741,  .02462,  .01722,  .01747,   
     6  .01506,  .01551,  .01456,  .01532,  .01582,                     
     7  .01619,  .01386,  .00832,  .00610,  .00346,  .00251, 0.0/       
      DATA TROA3 /                                                      
     1  .52804,  .06367,  .04158,  .02633,  .02184,  .02443,  .01937,   
     2  .00658,  .00646,  .00709,  .02949,  .10013,  .00968,  .00310,   
     3  .00677,  .00582,  .00646,  .02361,  .01994,  .01266,  .01544,   
     4  .01386,  .01968,  .02848,  .03203,  .03854,  .01620,  .01449,   
     5  .01462,  .01747,  .02513,  .03253,  .03797,  .03019,  .02861,   
     6  .02538,  .02215,  .01930,  .01797,  .01791,                     
     7  .01797,  .01539,  .00924,  .00677,  .00384,  .00278, 0.0/       
      DATA TROA4 /                                                      
     1  .19829,  .01842,  .01215,  .00791,  .00665,  .00778,  .00652,   
     2  .00361,  .00253,  .00399,  .02570,  .20690,  .01715,  .00316,   
     3  .00873,  .00728,  .00658,  .04481,  .03525,  .01646,  .01405,   
     4  .01310,  .01468,  .01956,  .02184,  .02367,  .01608,  .01816,   
     5  .02342,  .03203,  .05234,  .06399,  .06538,  .05867,  .05456,   
     6  .04810,  .03715,  .02949,  .02335,  .02158,                     
     7  .02149,  .01840,  .01104,  .00809,  .00458,  .00332, 0.0/       
      DATA TROG1 /                                                      
     1  .7518,   .6710,   .6638,   .6345,   .6152,   .5736,   .5280,    
     2  .4949,   .4700,   .4467,   .4204,   .4028,   .3777,   .3563,    
     3  .3150,   .2919,   .2695,   .2465,   .2402,   .2313,   .2101,    
     4  .1760,   .1532,   .2091,   .2079,   .1843,   .1811,   .1687,    
     5  .1626,   .1526,   .1356,   .1030,   .0962,   .1024,   .1086,    
     6  .0928,   .0836,   .0643,   .0451,   .0290,   .0156,   .0118,    
     7  .0076,   .0050,   .0024,   .0015,   .0000/                      
      DATA TROG2 /                                                      
     1  .7571,   .6858,   .6790,   .6510,   .6315,   .5887,   .5418,    
     2  .5075,   .4829,   .4598,   .4338,   .4043,   .3890,   .3680,    
     3  .3259,   .3026,   .2800,   .2541,   .2494,   .2414,   .2196,    
     4  .1873,   .1657,   .2123,   .2110,   .1890,   .1836,   .1709,    
     5  .1640,   .1534,   .1354,   .1044,   .0984,   .1026,   .1073,    
     6  .0935,   .0842,   .0661,   .0477,   .0309,   .0171,   .0129,    
     7  .0084,   .0056,   .0027,   .0017,   .0000/                      
      DATA TROG3 /                                                      
     1  .7667,   .7176,   .7128,   .6879,   .6690,   .6255,   .5769,    
     2  .5403,   .5167,   .4947,   .4703,   .4143,   .4190,   .3993,    
     3  .3563,   .3325,   .3095,   .2767,   .2751,   .2693,   .2464,    
     4  .2175,   .1992,   .2247,   .2215,   .2042,   .1952,   .1814,    
     5  .1726,   .1604,   .1398,   .1111,   .1065,   .1068,   .1086,    
     6  .0984,   .0888,   .0724,   .0549,   .0358,   .0216,   .0166,    
     7  .0109,   .0073,   .0036,   .0023,   .0000/                      
      DATA TROG4 /                                                      
     1  .7696,   .7719,   .7710,   .7606,   .7478,   .7142,   .6727,    
     2  .6381,   .6201,   .6050,   .5912,   .4849,   .5137,   .5019,    
     3  .4625,   .4389,   .4169,   .3696,   .3707,   .3708,   .3473,    
     4  .3232,   .3112,   .3022,   .2938,   .2850,   .2675,   .2494,    
     5  .2347,   .2165,   .1857,   .1536,   .1509,   .1441,   .1416,    
     6  .1354,   .1245,   .1088,   .0905,   .0614,   .0440,   .0354,    
     7  .0257,   .0179,   .0089,   .0059,   .0000/                      
      DATA FG1EXT /                                                     
     1  .98519,  .99158,  .99089, 1.00000, 1.00576, 1.01747, 1.03177,   
     2 1.04146, 1.04696, 1.05323, 1.05886, 1.04899, 1.06823, 1.07804,   
     3 1.09272, 1.10367, 1.11684, 1.10430, 1.11367, 1.12899, 1.14987,   
     4 1.17209, 1.18278, 1.20133, 1.21266, 1.21949, 1.22677, 1.15589,   
     5 1.05684,  .98291, 1.01120, 1.10911, 1.11462, 1.14671, 1.16247,   
     6 1.18540, 1.21580, 1.24610, 1.26840, 1.20500, 1.20850, 1.23340,   
     7 1.19560, 1.06530,  .68949,  .42888, 0.00000/                     
      DATA FG1ABS /                                                     
     1  .00013, 0.00000, 0.00000, 0.00000, 0.00000,  .00095,  .01513,   
     2  .10861,  .03892,  .13272,  .47133,  .49696,  .45785,  .17918,   
     3  .37373,  .34601,  .31867,  .55190,  .55025,  .49987,  .46342,   
     4  .45943,  .45918,  .46089,  .46241,  .46386,  .47196,  .48905,   
     5  .51468,  .53101,  .55266,  .58665,  .58899,  .60367,  .61158,   
     6  .62335,  .64120,  .65627,  .66278,  .66393,  .69344,  .71087,   
     7  .67625,  .61180,  .42130,  .29086, 0.00000/                     
      DATA FG1SYM /                                                     
     1  .8578,   .8726,   .8722,   .8717,   .8703,   .8652,   .8618,    
     2  .8798,   .8689,   .8918,   .9641,   .9502,   .9297,   .8544,    
     3  .9007,   .8885,   .8812,   .9604,   .9470,   .9193,   .9039,    
     4  .9039,   .9057,   .9110,   .9158,   .9194,   .9381,   .9537,    
     5  .9595,   .9587,   .9418,   .9101,   .9081,   .8957,   .8898,    
     6  .8812,   .8685,   .8491,   .8246,   .7815,   .7148,   .6480,    
     7  .5481,   .4725,   .3457,   .2575,   .0000/                      
      DATA FG2EXT /                                                     
     1  .94791,  .96215,  .97063, 1.00000, 1.00937, 1.05177, 1.12519,   
     2 1.29570, 1.39203, 1.41120, 1.04715, 1.10816, 1.43285, 1.45272,   
     3 1.18709, 1.04367,  .82354,  .71747,  .92405,  .79342,  .60266,   
     4  .47677,  .43171,  .36734,  .33259,  .31184,  .24139,  .21601,   
     5  .24006,  .28816,  .42671,  .56861,  .57266,  .58089,  .57165,   
     6  .54247,  .43983,  .34475,  .24907,  .19291,  .18500,  .15586,   
     7  .09047,  .06445,  .03533,  .02529, 0.00000/                     
      DATA FG2ABS /                                                     
     1 0.00000, 0.00000, 0.00000, 0.00000, 0.00000,  .00013,  .00247,   
     2  .01987,  .00620,  .02323,  .17209,  .57930,  .19810,  .03475,   
     3  .09639,  .08000,  .06582,  .34589,  .32703,  .17025,  .12633,   
     4  .11816,  .11627,  .11519,  .11538,  .11601,  .12329,  .14468,   
     5  .18633,  .24057,  .35411,  .44886,  .45095,  .45215,  .44278,   
     6  .41778,  .34433,  .27826,  .21066,  .17864,  .17626,  .15028,   
     7  .08844,  .06358,  .03515,  .02523, 0.00000/                     
      DATA FG2SYM /                                                     
     1  .8388,   .8459,   .8419,   .8286,   .8224,   .7883,   .7763,    
     2  .8133,   .8393,   .8767,   .9258,   .8982,   .7887,   .8082,    
     3  .8319,   .8243,   .8210,   .8282,   .8037,   .7904,   .7728,    
     4  .7528,   .7436,   .7274,   .7171,   .7100,   .6790,   .6520,    
     5  .6305,   .6020,   .5475,   .4577,   .4511,   .4084,   .3872,    
     6  .3566,   .2976,   .2340,   .1711,   .0956,   .0623,   .0454,    
     7  .0286,   .0190,   .0090,   .0052,   .0000/                      
      DATA BSTEXT /                                                     
     E 2.0752E0,  1.8656E0,  1.7246E0,  1.0000E0,  7.0156E-1, 3.0170E-1,
     E 1.1440E-1, 5.1225E-2, 3.4285E-2, 2.3475E-2, 1.6878E-2, 6.6506E-2,
     E 1.0943E-1, 8.9653E-2, 6.7609E-2, 5.2855E-2, 6.7496E-2, 5.7975E-2,
     E 4.2471E-2, 2.4176E-2, 4.6102E-2, 1.2339E-1, 1.7699E-1, 1.2389E-1,
     E 9.0220E-2, 8.5793E-2, 3.2838E-2, 2.6528E-2, 5.0703E-2, 1.9471E-2,
     E 1.1710E-2, 1.6106E-2, 1.7716E-2, 3.9533E-2, 3.7954E-2, 5.4871E-3,
     E 8.8409E-3, 1.2289E-3, 1.0647E-3, 3.3151E-3, 4.5164E-3, 4.1496E-3,
     E 3.2801E-3, 2.4481E-3, 1.0714E-3, 5.0381E-4, 1.2101E-4/           
      DATA BSTABS /                                                     
     A 2.4347E-7, 1.4949E-7, 1.3020E-7, 6.8716E-8, 1.0053E-7, 4.2384E-6,
     A 2.3075E-4, 1.4889E-3, 1.8377E-3, 3.3645E-3, 4.6858E-3, 5.9424E-2,
     A 1.0129E-1, 8.2396E-2, 6.3621E-2, 5.0327E-2, 6.5798E-2, 5.6149E-2,
     A 4.0939E-2, 2.3226E-2, 4.5800E-2, 1.2276E-1, 1.7568E-1, 1.2216E-1,
     A 8.9058E-2, 8.4861E-2, 3.1979E-2, 2.6097E-2, 5.0244E-2, 1.9042E-2,
     A 1.1497E-2, 1.6024E-2, 1.7639E-2, 3.9452E-2, 3.7847E-2, 5.4251E-3,
     A 8.8160E-3, 1.2118E-3, 1.0579E-3, 3.3122E-3, 4.5150E-3, 4.1489E-3,
     A 3.2799E-3, 2.4481E-3, 1.0713E-3, 5.0381E-4, 1.2101E-4/           
      DATA BSTSYM /                                                     
     G 0.6749, 0.6943, 0.6991, 0.6846, 0.6572, 0.5861, 0.4965, 0.4164,  
     G 0.3772, 0.3385, 0.3069, 0.2599, 0.2234, 0.2028, 0.1554, 0.1291,  
     G 0.1057, 0.0962, 0.0909, 0.0802, 0.0595, 0.0458, 0.0413, 0.0479,  
     G 0.0483, 0.0451, 0.0504, 0.0379, 0.0346, 0.0365, 0.0273, 0.0180,  
     G 0.0174, 0.0144, 0.0151, 0.0141, 0.0094, 0.0075, 0.0049, 0.0031,  
     G 0.0020, 0.0014, 0.0008, 0.0005, 0.0002, 0.0001, 0.0001/          
      DATA AVOEXT /                                                     
     1 1.14880, 1.19171, 1.18013, 1.00000,  .84873,  .53019,  .27968,   
     2  .14551,  .11070,  .08633,  .07184,  .06076,  .04506,  .03399,   
     3  .02095,  .01538,  .01266,  .01019,  .00994,  .01044,  .01361,   
     4  .01791,  .02278,  .02918,  .03108,  .03234,  .03456,  .03184,   
     5  .02772,  .02475,  .01715,  .01563,  .01665,  .01646,  .01734,   
     6  .01772,  .01076,  .01051,  .01133,  .01329,                     
     7  .01492,  .01277,  .00766,  .00562,  .00318,  .00231, 0.0/       
      DATA AVOABS /                                                     
     1  .44816,  .11259,  .08500,  .05272,  .04082,  .02449,  .01487,   
     2  .01019,  .00867,  .00842,  .00842,  .00949,  .00741,  .00487,   
     3  .00316,  .00335,  .00399,  .00449,  .00525,  .00665,  .01114,   
     4  .01652,  .02177,  .02437,  .02506,  .02658,  .03006,  .02861,   
     5  .02513,  .02285,  .01620,  .01532,  .01633,  .01620,  .01709,   
     6  .01741,  .01057,  .01038,  .01127,  .01329,                     
     7  .01492,  .01277,  .00766,  .00562,  .00318,  .00231, 0.0/       
      DATA AVOSYM /                                                     
     1  .8272,   .7148,   .7076,   .6978,   .6886,   .6559,   .6062,    
     2  .5561,   .5255,   .4958,   .4729,   .4401,   .4015,   .3699,    
     3  .3125,   .2773,   .2472,   .2173,   .2054,   .1908,   .1623,    
     4  .1348,   .1233,   .1615,   .1757,   .1712,   .1521,   .1326,    
     5  .1230,   .1081,   .0801,   .0528,   .0514,   .0461,   .0446,    
     6  .0449,   .0415,   .0330,   .0198,   .0097,   .0044,   .0032,    
     7  .0020,   .0013,   .0006,   .0004,   .0000/                      
      DATA FVOEXT /                                                     
     1  .88715,  .92532,  .94013, 1.00000, 1.03013, 1.05975, 1.01171,   
     2  .88677,  .82538,  .76361,  .71563,  .67424,  .60589,  .55057,   
     3  .45222,  .37646,  .32316,  .25519,  .22728,  .20525,  .17810,   
     4  .14481,  .14152,  .37639,  .44551,  .44405,  .42222,  .36462,   
     5  .32551,  .27519,  .16728,  .10627,  .10861,  .10886,  .11665,   
     6  .13127,  .10108,  .08557,  .06411,  .05741,                     
     7  .05531,  .04707,  .02792,  .02028,  .01136,  .00820, 0.0/       
      DATA FVOABS /                                                     
     1  .41582,  .22892,  .19108,  .14468,  .12475,  .09158,  .06601,   
     2  .04943,  .04367,  .04342,  .04399,  .05076,  .04133,  .02829,   
     3  .01924,  .01981,  .02297,  .02475,  .02778,  .03411,  .05335,   
     4  .07133,  .08816,  .15342,  .18506,  .19354,  .20791,  .18449,   
     5  .16101,  .13759,  .08456,  .06886,  .07278,  .07367,  .07956,   
     6  .08785,  .06032,  .05747,  .05133,  .05323,                     
     7  .05453,  .04657,  .02773,  .02020,  .01135,  .00820, 0.0/       
      DATA FVOSYM /                                                     
     1  .9295,   .8115,   .7897,   .7473,   .7314,   .7132,   .7113,    
     2  .7238,   .7199,   .7165,   .7134,   .6989,   .6840,   .6687,    
     3  .6409,   .6325,   .6199,   .6148,   .6142,   .6072,   .5853,    
     4  .5632,   .5486,   .4753,   .4398,   .4329,   .4091,   .4105,    
     5  .4120,   .4136,   .4140,   .3637,   .3577,   .3344,   .3220,    
     6  .3052,   .2957,   .2564,   .2055,   .1229,   .0632,   .0483,    
     7  .0321,   .0216,   .0103,   .0059,   .0000/                      
      DATA DMEEXT /                                                     
     1 1.05019, 1.05880, 1.05259, 1.00000,  .94949,  .81456,  .66051,   
     2  .54380,  .49133,  .44677,  .41671,  .38063,  .34778,  .32804,   
     3  .29722,  .27506,  .25082,  .22620,  .21652,  .20253,  .17266,   
     4  .14905,  .14234,  .14082,  .15057,  .16399,  .23608,  .24481,   
     5  .27791,  .25076,  .15272,  .09601,  .09456,  .14576,  .12373,   
     6  .18348,  .12190,  .12924,  .08538,  .04108,                     
     7  .04714,  .04069,  .02480,  .01789,  .00980,  .00693, 0.0/       
      DATA DMEABS /                                                     
     1  .00063,  .00152,  .00184,  .00506,  .00791,  .01829,  .03728,   
     2  .06158,  .07538,  .08943,  .10051,  .11614,  .13310,  .14348,   
     3  .14633,  .13728,  .12462,  .11184,  .10709,  .10076,  .09006,   
     4  .08734,  .09000,  .10304,  .11905,  .13437,  .19551,  .20095,   
     5  .22494,  .18418,  .09285,  .06665,  .06823,  .12329,  .10551,   
     6  .16184,  .09835,  .10582,  .06759,  .03247,                     
     7  .04405,  .03816,  .02327,  .01696,  .00946,  .00677, 0.0/       
      DATA DMESYM /                                                     
     1  .7173,   .7039,   .7020,   .6908,   .6872,   .6848,   .6891,    
     2  .6989,   .7046,   .7099,   .7133,   .7159,   .7134,   .7058,    
     3  .6827,   .6687,   .6583,   .6513,   .6494,   .6475,   .6467,    
     4  .6496,   .6506,   .6461,   .6334,   .6177,   .5327,   .5065,    
     5  .4632,   .4518,   .5121,   .5450,   .5467,   .4712,   .4853,    
     6  .3984,   .4070,   .3319,   .3427,   .3766,   .3288,   .2969,    
     7  .2808,   .2661,   .2409,   .2098,   .0000/                      
      DATA CCUEXT /                                                     
     1  .98081,  .98746,  .98915, 1.00000, 1.00650, 1.02230, 1.04180,   
     2 1.05830, 1.06780, 1.07870, 1.09780, 1.06440, 1.09750, 1.11300,   
     3 1.14320, 1.16660, 1.20540, 1.15420, 1.17610, 1.21910, 1.26990,   
     4 1.30300, 1.31090, 1.31060, 1.29940, 1.28640, 1.16620,  .98693,   
     5  .88130,  .83429,  .92012, 1.07340, 1.08150, 1.12680, 1.14770,   
     6 1.17600, 1.19210, 1.19120, 1.14510,  .97814,  .96308,  .94390,   
     7  .75994,  .56647,  .26801,  .15748, 0.00000/                     
      DATA CCUABS /                                                     
     1  .00007,  .00001,  .00000,  .00000,  .00001,  .00059,  .00956,   
     2  .07224,  .02502,  .08913,  .41512,  .51824,  .41304,  .12614,   
     3  .29826,  .26739,  .23672,  .55428,  .55642,  .44494,  .38433,   
     4  .37277,  .37000,  .36872,  .36896,  .36984,  .37868,  .40498,   
     5  .44993,  .48941,  .54799,  .60964,  .61302,  .63227,  .64074,   
     6  .65112,  .65367,  .64760,  .61924,  .59000,  .61601,  .61058,   
     7  .49236,  .38532,  .20641,  .13474, 0.00000/                     
      DATA CCUSYM /                                                     
     1  .8557,   .8676,   .8680,   .8658,   .8630,   .8557,   .8496,    
     2  .8566,   .8464,   .8627,   .9417,   .9458,   .8891,   .8136,    
     3  .8503,   .8400,   .8453,   .9428,   .9168,   .8759,   .8733,    
     4  .8841,   .8894,   .8986,   .9044,   .9082,   .9239,   .9342,    
     5  .9367,   .9331,   .9119,   .8719,   .8692,   .8515,   .8424,    
     6  .8287,   .8059,   .7742,   .7354,   .6554,   .5557,   .4720,    
     7  .3713,   .2990,   .1846,   .1156,   .0000/                      
      DATA CALEXT /                                                     
     1  .97331,  .98106,  .98472, 1.00000, 1.00850, 1.03090, 1.05770,   
     2 1.08070, 1.09390, 1.11530, 1.20260, 1.08250, 1.13480, 1.16770,   
     3 1.26750, 1.33520, 1.41110, 1.18200, 1.28390, 1.38040, 1.38430,   
     4 1.31200, 1.26540, 1.17160, 1.10410, 1.05640,  .83383,  .66530,   
     5  .61995,  .62907,  .77190,  .96660,  .97609, 1.02520, 1.04380,   
     6 1.06270, 1.02550,  .95714,  .82508,  .63464,  .60962,  .54998,   
     7  .34165,  .22587,  .10647,  .07067, 0.00000/                     
      DATA CALABS /                                                     
     1  .00004,  .00000,  .00000,  .00000,  .00000,  .00036,  .00607,   
     2  .04771,  .01579,  .05734,  .33199,  .54434,  .35157,  .08528,   
     3  .21785,  .18813,  .15982,  .52068,  .52125,  .35294,  .28359,   
     4  .26999,  .26668,  .26477,  .26484,  .26565,  .27546,  .30540,   
     5  .36011,  .41780,  .51479,  .60420,  .60818,  .62781,  .63339,   
     6  .63544,  .60762,  .56843,  .50067,  .44739,  .45910,  .42486,   
     7  .27527,  .19352,  .09932,  .06832, 0.00000/                     
      DATA CALSYM /                                                     
     1  .8523,   .8632,   .8623,   .8573,   .8532,   .8422,   .8297,    
     2  .8252,   .8145,   .8317,   .9312,   .9383,   .8291,   .7640,    
     3  .8202,   .8276,   .8547,   .9224,   .8859,   .8621,   .8706,    
     4  .8780,   .8804,   .8833,   .8849,   .8858,   .8889,   .8899,    
     5  .8872,   .8790,   .8513,   .7984,   .7944,   .7683,   .7545,    
     6  .7333,   .6939,   .6405,   .5727,   .4313,   .3156,   .2437,    
     7  .1693,   .1185,   .0574,   .0332,   .0000/                      
      DATA CSTEXT /                                                     
     1  .97430,  .98324,  .98570, 1.00000, 1.00890, 1.03100, 1.05590,   
     2 1.08130, 1.09760, 1.12170, 1.16390, 1.07880, 1.13660, 1.16990,   
     3 1.22930, 1.26720, 1.31080, 1.15290, 1.23270, 1.29770, 1.31180,   
     4 1.27830, 1.25190, 1.19190, 1.14390, 1.10790,  .91743,  .74497,   
     5  .68246,  .67604,  .80234,  .98329,  .99219, 1.03880, 1.05710,   
     6 1.07730, 1.05460, 1.00640,  .90146,  .71967,  .69823,  .65179,   
     7  .44906,  .30781,  .14114,  .08913, 0.00000/                     
      DATA CSTABS /                                                     
     1  .00005,  .00001,  .00000,  .00000,  .00000,  .00042,  .00681,   
     2  .05317,  .01779,  .06484,  .35033,  .53843,  .36321,  .09457,   
     3  .23629,  .20663,  .17789,  .52440,  .52484,  .37331,  .30681,   
     4  .29375,  .29057,  .28880,  .28887,  .28969,  .29913,  .32789,   
     5  .37961,  .43212,  .51866,  .60025,  .60398,  .62285,  .62874,   
     6  .63229,  .61185,  .58151,  .52536,  .47993,  .49571,  .47074,   
     7  .33104,  .24066,  .12346,  .08312, 0.00000/                     
      DATA CSTSYM /                                                     
     1  .8519,   .8633,   .8629,   .8590,   .8546,   .8432,   .8328,    
     2  .8330,   .8251,   .8439,   .9332,   .9388,   .8422,   .7823,    
     3  .8288,   .8291,   .8482,   .9255,   .8906,   .8613,   .8675,    
     4  .8772,   .8810,   .8869,   .8905,   .8927,   .9016,   .9069,    
     5  .9060,   .8989,   .8714,   .8204,   .8168,   .7932,   .7811,    
     6  .7628,   .7319,   .6905,   .6401,   .5324,   .4233,   .3459,    
     7  .2636,   .2027,   .1120,   .0663,   .0000/                      
      DATA CSCEXT /                                                     
     1  .96965,  .97960,  .98266, 1.00000, 1.01040, 1.03530, 1.06590,   
     2 1.09980, 1.12280, 1.16020, 1.20330, 1.08630, 1.16840, 1.21860,   
     3 1.28860, 1.32310, 1.33780, 1.11630, 1.24450, 1.30260, 1.26260,   
     4 1.17670, 1.12990, 1.04180,  .98070,  .93828,  .74401,  .59962,   
     5  .56489,  .57976,  .72193,  .90905,  .91772,  .96075,  .97500,   
     6  .98623,  .93761,  .86388,  .73722,  .56926,  .54699,  .49341,   
     7  .31131,  .20846,  .09872,  .06531, 0.00000/                     
      DATA CSCABS /                                                     
     1  .00004,  .00000,  .00000,  .00000,  .00000,  .00035,  .00553,   
     2  .04382,  .01430,  .05271,  .30881,  .54982,  .32983,  .07796,   
     3  .20033,  .17269,  .14662,  .49557,  .49304,  .32632,  .26104,   
     4  .24829,  .24525,  .24349,  .24358,  .24437,  .25378,  .28239,   
     5  .33510,  .39227,  .49203,  .58265,  .58638,  .60338,  .60677,   
     6  .60472,  .56954,  .52556,  .45708,  .40717,  .41646,  .38375,   
     7  .25009,  .17726,  .09148,  .06291, 0.00000/                     
      DATA CSCSYM /                                                     
     1  .8495,   .8597,   .8594,   .8535,   .8479,   .8349,   .8214,    
     2  .8192,   .8151,   .8395,   .9321,   .9329,   .8156,   .7722,    
     3  .8270,   .8319,   .8533,   .9138,   .8772,   .8562,   .8628,    
     4  .8691,   .8713,   .8742,   .8759,   .8768,   .8805,   .8818,    
     5  .8783,   .8685,   .8362,   .7776,   .7734,   .7458,   .7317,    
     6  .7106,   .6738,   .6250,   .5655,   .4409,   .3338,   .2655,    
     7  .1947,   .1427,   .0727,   .0422,   .0000/                      
      DATA CNIEXT /                                                     
     1  .97967,  .98623,  .98795, 1.00000, 1.00710, 1.02340, 1.04300,   
     2 1.06100, 1.07130, 1.08440, 1.10650, 1.06540, 1.10200, 1.12040,   
     3 1.15490, 1.17990, 1.21730, 1.15000, 1.18140, 1.22610, 1.26770,   
     4 1.28840, 1.29070, 1.28200, 1.26650, 1.25130, 1.12860,  .95670,   
     5  .85784,  .81564,  .90486, 1.05950, 1.06760, 1.11240, 1.13250,   
     6 1.15910, 1.16960, 1.16290, 1.11130,  .94771,  .93251,  .91151,   
     7  .73279,  .55018,  .26554,  .15656, 0.00000/                     
      DATA CNIABS /                                                     
     1  .00007,  .00001,  .00000,  .00000,  .00001,  .00058,  .00948,   
     2  .07084,  .02436,  .08711,  .40714,  .52024,  .40688,  .12335,   
     3  .29163,  .26107,  .23098,  .54886,  .55047,  .43579,  .37552,   
     4  .36411,  .36140,  .36017,  .36043,  .36132,  .37019,  .39640,   
     5  .44146,  .48184,  .54304,  .60651,  .60988,  .62882,  .63682,   
     6  .64613,  .64572,  .63682,  .60584,  .57559,  .60014,  .59283,   
     7  .47587,  .37364,  .20267,  .13269, 0.00000/                     
      DATA CNISYM /                                                     
     1  .8550,   .8670,   .8677,   .8645,   .8616,   .8538,   .8474,    
     2  .8534,   .8439,   .8609,   .9411,   .9449,   .8822,   .8101,    
     3  .8486,   .8403,   .8475,   .9405,   .9134,   .8749,   .8732,    
     4  .8833,   .8882,   .8968,   .9025,   .9061,   .9217,   .9322,    
     5  .9346,   .9308,   .9086,   .8669,   .8641,   .8457,   .8364,    
     6  .8222,   .7992,   .7677,   .7298,   .6525,   .5558,   .4752,    
     7  .3796,   .3105,   .1995,   .1287,   .0000/                      
C          EXTINCTION  COEFFICIENTS                                     
      DATA CI64XT/                                                      
     1   9.947E-01,  9.968E-01,  9.972E-01,  1.000E+00,  1.002E+00,     
     2   1.005E+00,  1.010E+00,  1.013E+00,  1.016E+00,  1.018E+00,     
     3   1.019E+00,  1.016E+00,  1.023E+00,  1.026E+00,  1.030E+00,     
     4   1.033E+00,  1.036E+00,  1.037E+00,  1.038E+00,  1.040E+00,     
     5   1.043E+00,  1.047E+00,  1.049E+00,  1.051E+00,  1.052E+00,     
     6   1.053E+00,  1.055E+00,  1.032E+00,  1.034E+00,  1.047E+00,     
     7   1.060E+00,  1.074E+00,  1.075E+00,  1.081E+00,  1.085E+00,     
     8   1.090E+00,  1.102E+00,  1.117E+00,  1.131E+00,  1.094E+00,     
     9   1.168E+00,  1.187E+00,  1.244E+00,  1.297E+00,  1.475E+00,     
     X   1.695E+00,  1.556E+00 /                                        
C         ABSORPTION  COEFFICIENTS                                      
      DATA CI64AB/                                                      
     1   7.893E-05,  1.914E-05,  1.450E-05,  5.904E-06,  3.905E-05,     
     2   1.917E-03,  2.604E-01,  3.732E-01,  8.623E-02,  2.253E-01,     
     3   4.152E-01,  4.460E-01,  4.660E-01,  4.589E-01,  4.848E-01,     
     4   4.786E-01,  4.915E-01,  4.944E-01,  4.936E-01,  4.947E-01,     
     5   4.978E-01,  5.012E-01,  5.028E-01,  5.070E-01,  5.095E-01,     
     6   5.111E-01,  5.205E-01,  5.126E-01,  4.969E-01,  4.868E-01,     
     7   4.836E-01,  4.982E-01,  4.999E-01,  5.097E-01,  5.126E-01,     
     8   5.188E-01,  5.108E-01,  4.915E-01,  5.559E-01,  5.515E-01,     
     9   5.600E-01,  5.948E-01,  6.225E-01,  6.348E-01,  5.693E-01,     
     X   3.306E-01,  8.661E-02 /                                        
C         ASYMMETRY  PARAMETER  -  G                                    
      DATA CI64G/                                                       
     1   .8626,  .8824,  .8851,  .8893,  .8904,  .8913,  .9332,  .9549, 
     2   .9141,  .9407,  .9763,  .9428,  .9509,  .9580,  .9699,  .9679, 
     3   .9735,  .9737,  .9717,  .9712,  .9712,  .9715,  .9721,  .9744, 
     4   .9756,  .9764,  .9822,  .9849,  .9721,  .9530,  .9341,  .9352, 
     5   .9366,  .9426,  .9425,  .9448,  .9365,  .9256,  .9485,  .9417, 
     6   .8868,  .8983,  .8589,  .8115,  .6810,  .5923,  .5703 /        
C          EXTINCTION COEFFICIENTS                                      
      DATA CIR4XT/                                                      
     1   9.685E-01,  9.803E-01,  9.826E-01,  1.000E+00,  1.011E+00,     
     2   1.038E+00,  1.066E+00,  1.090E+00,  1.118E+00,  1.201E+00,     
     3   1.374E+00,  1.019E+00,  1.143E+00,  1.198E+00,  1.331E+00,     
     4   1.434E+00,  1.424E+00,  1.283E+00,  1.298E+00,  1.326E+00,     
     5   1.287E+00,  1.230E+00,  1.191E+00,  1.048E+00,  9.634E-01,     
     6   9.093E-01,  6.067E-01,  5.216E-01,  6.953E-01,  8.902E-01,     
     7   1.083E+00,  1.228E+00,  1.214E+00,  1.076E+00,  1.032E+00,     
     8   8.881E-01,  6.275E-01,  3.462E-01,  2.118E-01,  3.955E-01,     
     9   5.089E-01,  3.012E-01,  1.235E-01,  5.377E-02,  2.068E-02,     
     X   6.996E-03,  1.560E-03 /                                        
C          ABSORPTION  COEFFICIENTS                                     
      DATA CIR4AB/                                                      
     1   5.316E-06,  1.461E-06,  9.045E-07,  4.431E-07,  2.746E-06,     
     2   1.413E-04,  2.920E-02,  5.578E-02,  6.844E-03,  2.151E-02,     
     3   6.322E-02,  5.051E-01,  4.578E-01,  1.360E-01,  3.269E-01,     
     4   1.572E-01,  2.246E-01,  4.176E-01,  4.282E-01,  3.802E-01,     
     5   3.517E-01,  3.037E-01,  2.543E-01,  2.410E-01,  2.432E-01,     
     6   2.438E-01,  2.346E-01,  3.747E-01,  4.839E-01,  5.722E-01,     
     7   6.368E-01,  5.303E-01,  5.085E-01,  3.920E-01,  3.437E-01,     
     8   2.481E-01,  1.175E-01,  7.172E-02,  1.108E-01,  3.459E-01,     
     9   4.044E-01,  2.545E-01,  9.594E-02,  4.410E-02,  1.887E-02,     
     X   6.433E-03,  1.456E-03 /                                        
C        ASYMMETRY  PARAMETER  -  G                                     
      DATA CIR4G/                                                       
     1   .8517,  .8654,  .8661,  .8615,  .8574,  .8447,  .8321,  .8248, 
     2   .8227,  .8612,  .9363,  .9231,  .8419,  .7550,  .8481,  .8358, 
     3   .8718,  .8953,  .8884,  .8786,  .8731,  .8660,  .8625,  .8652, 
     4   .8659,  .8658,  .8676,  .8630,  .8434,  .8194,  .7882,  .7366, 
     5   .7339,  .7161,  .7015,  .6821,  .6383,  .5823,  .4845,  .2977, 
     6   .2295,  .1716,  .1228,  .0748,  .0329,  .0186,  .0081 /        
      END                                                               
      BLOCK DATA MARDTA                                                 
C>    BLOCK DATA                                                        
C                                                                       
C     MARINE AEROSOL EXTINCTION AND ABSORPTION DATA                     
C            CODED BY STU GATHMAN                  -  NRL               
C                                                                       
      COMMON/A/T1QEXT(40,4),T2QEXT(40,4),T3QEXT(40,4),                  
     1T1QABS(40,4),T2QABS(40,4),T3QABS(40,4),ALAM(40),AREL(4)           
      DIMENSION A1(40),A2(40),A3(40),A4(40)                             
      DIMENSION B1(40),B2(40),B3(40),B4(40)                             
      DIMENSION C1(40),C2(40),C3(40),C4(40)                             
      DIMENSION D1(40),D2(40),D3(40),D4(40)                             
      DIMENSION E1(40),E2(40),E3(40),E4(40)                             
      DIMENSION F1(40),F2(40),F3(40),F4(40)                             
      EQUIVALENCE (A1(1), T1QEXT(1,1)), (A2(1), T1QEXT(1,2)),           
     +            (A3(1), T1QEXT(1,3)), (A4(1), T1QEXT(1,4))            
      EQUIVALENCE (B1(1), T2QEXT(1,1)), (B2(1), T2QEXT(1,2)),           
     +            (B3(1), T2QEXT(1,3)), (B4(1), T2QEXT(1,4))            
      EQUIVALENCE (C1(1), T3QEXT(1,1)), (C2(1), T3QEXT(1,2)),           
     +            (C3(1), T3QEXT(1,3)), (C4(1), T3QEXT(1,4))            
      EQUIVALENCE (D1(1), T1QABS(1,1)), (D2(1), T1QABS(1,2)),           
     +            (D3(1), T1QABS(1,3)), (D4(1), T1QABS(1,4))            
      EQUIVALENCE (E1(1), T2QABS(1,1)), (E2(1), T2QABS(1,2)),           
     +            (E3(1), T2QABS(1,3)), (E4(1), T2QABS(1,4))            
      EQUIVALENCE (F1(1), T3QABS(1,1)), (F2(1), T3QABS(1,2)),           
     +            (F3(1), T3QABS(1,3)), (F4(1), T3QABS(1,4))            
      DATA AREL/50.,85.,95.,98./                                        
      DATA ALAM/                                                        
     * 0.2000,   0.3000,   0.3371,   0.5500,   0.6943,   1.0600,        
     * 1.5360,   2.0000,   2.2500,   2.5000,   2.7000,   3.0000,        
     * 3.3923,   3.7500,   4.5000,   5.0000,   5.5000,   6.0000,        
     * 6.2000,   6.5000,   7.2000,   7.9000,   8.2000,   8.7000,        
     * 9.0000,   9.2000,  10.0000,  10.5910,  11.0000,  11.5000,        
     *12.5000,  14.8000,  15.0000,  16.4000,  17.2000,  18.5000,        
     *21.3000,  25.0000,  30.0000,  40.0000/                            
      DATA A1/                                                          
     *-3.2949,  -3.4662,  -3.5275,  -3.8505,  -4.0388,  -4.4410,        
     *-4.8584,  -5.1720,  -5.3272,  -5.4342,  -5.2765,  -4.5101,        
     *-5.3730,  -5.7468,  -5.7579,  -5.8333,  -5.8552,  -5.1780,        
     *-5.2910,  -5.5959,  -5.6295,  -5.6748,  -5.6051,  -5.5363,        
     *-5.5330,  -5.5136,  -5.6568,  -5.6040,  -5.5221,  -5.3902,        
     *-5.1724,  -5.0903,  -5.0901,  -5.1285,  -5.1444,  -5.1963,        
     *-5.3101,  -5.3994,  -5.4873,  -5.4779/                            
      DATA A2/                                                          
     *-2.8302,  -2.9446,  -2.9904,  -3.2510,  -3.4104,  -3.7635,        
     *-4.1452,  -4.4466,  -4.6160,  -4.7772,  -4.7030,  -3.8461,        
     *-4.6466,  -5.0105,  -5.0747,  -5.1810,  -5.2705,  -4.5537,        
     *-4.6594,  -4.9872,  -5.0872,  -5.1229,  -5.0985,  -5.0623,        
     *-5.0544,  -5.0407,  -5.0793,  -4.9796,  -4.8748,  -4.7298,        
     *-4.5063,  -4.4260,  -4.4280,  -4.4650,  -4.4912,  -4.5474,        
     *-4.6672,  -4.7711,  -4.8814,  -4.9073/                            
      DATA A3/                                                          
     *-2.3712,  -2.4231,  -2.4512,  -2.6377,  -2.7631,  -3.0569,        
     *-3.3918,  -3.6682,  -3.8305,  -4.0111,  -4.0467,  -3.2055,        
     *-3.8717,  -4.1908,  -4.3282,  -4.4495,  -4.5780,  -3.9249,        
     *-4.0136,  -4.3349,  -4.4674,  -4.5088,  -4.5083,  -4.4973,        
     *-4.4923,  -4.4845,  -4.4753,  -4.3617,  -4.2509,  -4.1029,        
     *-3.8779,  -3.7963,  -3.7989,  -3.8345,  -3.8639,  -3.9215,        
     *-4.0438,  -4.1532,  -4.2719,  -4.3120/                            
      DATA A4/                                                          
     *-1.9911,  -1.9989,  -2.0126,  -2.1342,  -2.2283,  -2.4663,        
     *-2.7552,  -3.0036,  -3.1528,  -3.3328,  -3.4468,  -2.6649,        
     *-3.1986,  -3.4769,  -3.6571,  -3.7821,  -3.9284,  -3.3776,        
     *-3.4435,  -3.7436,  -3.8910,  -3.9455,  -3.9573,  -3.9633,        
     *-3.9639,  -3.9610,  -3.9427,  -3.8304,  -3.7203,  -3.5733,        
     *-3.3489,  -3.2650,  -3.2675,  -3.3017,  -3.3317,  -3.3893,        
     *-3.5126,  -3.6243,  -3.7467,  -3.7927/                            
      DATA B1/                                                          
     *-0.5781,  -0.5525,  -0.5484,  -0.5147,  -0.5094,  -0.5324,        
     *-0.6138,  -0.7139,  -0.7776,  -0.8624,  -0.9838,  -0.7720,        
     *-0.8542,  -0.9535,  -1.0873,  -1.1624,  -1.2647,  -1.2123,        
     *-1.1811,  -1.2905,  -1.4126,  -1.4643,  -1.5227,  -1.4560,        
     *-1.4177,  -1.4144,  -1.5746,  -1.6348,  -1.6431,  -1.6023,        
     *-1.4648,  -1.3910,  -1.3898,  -1.4056,  -1.4196,  -1.4655,        
     *-1.5795,  -1.6825,  -1.7924,  -1.8224/                            
      DATA B2/                                                          
     *-0.1809,  -0.1651,  -0.1566,  -0.1258,  -0.1113,  -0.1046,        
     *-0.1468,  -0.2157,  -0.2679,  -0.3480,  -0.4988,  -0.2657,        
     *-0.2991,  -0.3924,  -0.5266,  -0.5983,  -0.7037,  -0.6671,        
     *-0.6074,  -0.7134,  -0.8352,  -0.9080,  -0.9577,  -0.9579,        
     *-0.9542,  -0.9629,  -1.0867,  -1.1219,  -1.1032,  -1.0330,        
     *-0.8663,  -0.7677,  -0.7667,  -0.7768,  -0.7919,  -0.8304,        
     *-0.9354,  -1.0400,  -1.1640,  -1.2357/                            
      DATA B3/                                                          
     * 0.2483,   0.2574,   0.2626,   0.2887,   0.3055,   0.3312,        
     * 0.3262,   0.2922,   0.2589,   0.1989,   0.0548,   0.2322,        
     * 0.2487,   0.1816,   0.0685,   0.0090,  -0.0846,  -0.0876,        
     *-0.0110,  -0.0936,  -0.2013,  -0.2799,  -0.3216,  -0.3575,        
     *-0.3769,  -0.3944,  -0.5018,  -0.5379,  -0.5179,  -0.4473,        
     *-0.2822,  -0.1730,  -0.1713,  -0.1737,  -0.1850,  -0.2141,        
     *-0.3046,  -0.4002,  -0.5221,  -0.6163/                            
      DATA B4/                                                          
     * 0.6276,   0.6324,   0.6363,   0.6570,   0.6715,   0.7006,        
     * 0.7172,   0.7091,   0.6925,   0.6543,   0.5356,   0.6473,        
     * 0.6924,   0.6516,   0.5661,   0.5206,   0.4440,   0.4091,        
     * 0.4902,   0.4325,   0.3427,   0.2691,   0.2336,   0.1872,        
     * 0.1593,   0.1386,   0.0348,  -0.0131,  -0.0031,   0.0566,        
     * 0.2093,   0.3214,   0.3238,   0.3278,   0.3211,   0.3007,        
     * 0.2257,   0.1426,   0.0304,  -0.0739/                            
      DATA C1/                                                          
     * 2.1434,   2.1454,   2.1469,   2.1539,   2.1577,   2.1673,        
     * 2.1812,   2.1970,   2.2030,   2.2115,   2.2149,   2.1931,        
     * 2.2220,   2.2326,   2.2425,   2.2479,   2.2494,   2.2203,        
     * 2.2382,   2.2473,   2.2380,   2.2373,   2.2179,   2.2310,        
     * 2.2417,   2.2421,   2.2244,   2.1950,   2.1686,   2.1370,        
     * 2.1193,   2.1454,   2.1477,   2.1703,   2.1725,   2.1729,        
     * 2.1580,   2.1324,   2.0878,   2.0131/                            
      DATA C2/                                                          
     * 2.5480,   2.5512,   2.5511,   2.5562,   2.5601,   2.5669,        
     * 2.5792,   2.5874,   2.5950,   2.6022,   2.6081,   2.5875,        
     * 2.6093,   2.6184,   2.6319,   2.6391,   2.6439,   2.6138,        
     * 2.6319,   2.6437,   2.6442,   2.6421,   2.6336,   2.6336,        
     * 2.6353,   2.6325,   2.6075,   2.5680,   2.5340,   2.5025,        
     * 2.5122,   2.5652,   2.5681,   2.5869,   2.5925,   2.5986,        
     * 2.5947,   2.5835,   2.5566,   2.4949/                            
      DATA C3/                                                          
     * 2.9825,   2.9831,   2.9847,   2.9893,   2.9929,   2.9976,        
     * 3.0090,   3.0130,   3.0179,   3.0233,   3.0294,   3.0148,        
     * 3.0293,   3.0357,   3.0481,   3.0563,   3.0627,   3.0410,        
     * 3.0532,   3.0646,   3.0713,   3.0733,   3.0716,   3.0701,        
     * 3.0681,   3.0662,   3.0457,   3.0067,   2.9733,   2.9460,        
     * 2.9643,   3.0156,   3.0182,   3.0337,   3.0399,   3.0477,        
     * 3.0511,   3.0501,   3.0384,   2.9943/                            
      DATA C4/                                                          
     * 3.3635,   3.3621,   3.3652,   3.3699,   3.3729,   3.3768,        
     * 3.3868,   3.3888,   3.3916,   3.3952,   3.4000,   3.3911,        
     * 3.4013,   3.4056,   3.4152,   3.4218,   3.4280,   3.4148,        
     * 3.4222,   3.4312,   3.4393,   3.4442,   3.4452,   3.4463,        
     * 3.4455,   3.4452,   3.4329,   3.4016,   3.3719,   3.3468,        
     * 3.3617,   3.4046,   3.4068,   3.4198,   3.4255,   3.4334,        
     * 3.4402,   3.4447,   3.4428,   3.4144/                            
      DATA D1/                                                          
     *-7.7562,  -7.8498,  -7.8630,  -7.8493,  -7.7889,  -7.5044,        
     *-7.0058,  -6.3955,  -6.3210,  -6.0026,  -5.4176,  -4.5443,        
     *-5.6380,  -6.2635,  -5.9512,  -5.9860,  -5.9526,  -5.1907,        
     *-5.3115,  -5.6289,  -5.6502,  -5.6922,  -5.6157,  -5.5462,        
     *-5.5437,  -5.5234,  -5.6647,  -5.6087,  -5.5250,  -5.3918,        
     *-5.1733,  -5.0909,  -5.0907,  -5.1291,  -5.1450,  -5.1968,        
     *-5.3105,  -5.3997,  -5.4875,  -5.4779/                            
      DATA D2/                                                          
     *-7.5869,  -7.6977,  -7.7070,  -7.6883,  -7.6227,  -7.2788,        
     *-6.6637,  -5.9117,  -6.0351,  -5.6292,  -4.8814,  -3.8947,        
     *-5.0236,  -5.7607,  -5.3390,  -5.4052,  -5.4335,  -4.5711,        
     *-4.6910,  -5.0400,  -5.1263,  -5.1522,  -5.1200,  -5.0797,        
     *-5.0708,  -5.0554,  -5.0883,  -4.9842,  -4.8775,  -4.7313,        
     *-4.5074,  -4.4271,  -4.4290,  -4.4661,  -4.4923,  -4.5484,        
     *-4.6679,  -4.7716,  -4.8817,  -4.9075/                            
      DATA D3/                                                          
     *-7.3806,  -7.5324,  -7.5421,  -7.5190,  -7.4456,  -6.9683,        
     *-6.1934,  -5.3374,  -5.6261,  -5.1328,  -4.2936,  -3.2785,        
     *-4.3895,  -5.1770,  -4.7151,  -4.7944,  -4.8513,  -3.9542,        
     *-4.0698,  -4.4296,  -4.5444,  -4.5647,  -4.5533,  -4.5320,        
     *-4.5225,  -4.5111,  -4.4899,  -4.3685,  -4.2548,  -4.1053,        
     *-3.8800,  -3.7987,  -3.8013,  -3.8369,  -3.8663,  -3.9238,        
     *-4.0456,  -4.1545,  -4.2728,  -4.3123/                            
      DATA D4/                                                          
     *-7.1591,  -7.3911,  -7.3998,  -7.3737,  -7.2891,  -6.6133,        
     *-5.7137,  -4.8091,  -5.1828,  -4.6408,  -3.7712,  -2.7644,        
     *-3.8361,  -4.6426,  -4.1724,  -4.2573,  -4.3263,  -3.4249,        
     *-3.5341,  -3.8962,  -4.0222,  -4.0421,  -4.0386,  -4.0258,        
     *-4.0169,  -4.0077,  -3.9676,  -3.8419,  -3.7270,  -3.5776,        
     *-3.3529,  -3.2698,  -3.2724,  -3.3066,  -3.3365,  -3.3940,        
     *-3.5164,  -3.6272,  -3.7486,  -3.7935/                            
      DATA E1/                                                          
     *-4.1531,  -4.2017,  -4.0836,  -4.1441,  -4.0515,  -3.7234,        
     *-3.2022,  -2.5924,  -2.5215,  -2.2244,  -1.7099,  -1.0243,        
     *-1.8178,  -2.4304,  -2.1483,  -2.1897,  -2.1768,  -1.5025,        
     *-1.5770,  -1.8688,  -1.9132,  -1.9550,  -1.9023,  -1.8200,        
     *-1.8019,  -1.7822,  -1.9415,  -1.9082,  -1.8419,  -1.7290,        
     *-1.5359,  -1.4523,  -1.4511,  -1.4744,  -1.4875,  -1.5339,        
     *-1.6446,  -1.7377,  -1.8338,  -1.8404/                            
      DATA E2/                                                          
     *-4.0237,  -4.0786,  -4.0596,  -4.0117,  -3.9167,  -3.5334,        
     *-2.8890,  -2.1314,  -2.2533,  -1.8686,  -1.2114,  -0.5112,        
     *-1.2226,  -1.9313,  -1.5503,  -1.6190,  -1.6646,  -0.9328,        
     *-0.9892,  -1.2921,  -1.3909,  -1.4236,  -1.4060,  -1.3666,        
     *-1.3550,  -1.3429,  -1.3966,  -1.3198,  -1.2346,  -1.1147,        
     *-0.9248,  -0.8332,  -0.8328,  -0.8490,  -0.8658,  -0.9072,        
     *-1.0110,  -1.1088,  -1.2210,  -1.2642/                            
      DATA E3/                                                          
     *-3.8225,  -3.9189,  -3.8934,  -3.8788,  -3.7792,  -3.2584,        
     *-2.4500,  -1.5859,  -1.8664,  -1.3920,  -0.6602,  -0.0250,        
     *-0.6305,  -1.3614,  -0.9442,  -1.0200,  -1.0892,  -0.3681,        
     *-0.4088,  -0.6976,  -0.8140,  -0.8430,  -0.8410,  -0.8268,        
     *-0.8209,  -0.8142,  -0.8176,  -0.7305,  -0.6447,  -0.5305,        
     *-0.3534,  -0.2582,  -0.2574,  -0.2661,  -0.2802,  -0.3137,        
     *-0.4046,  -0.4954,  -0.6063,  -0.6635/                            
      DATA E4/                                                          
     *-3.6380,  -3.8218,  -3.8158,  -3.6544,  -3.6442,  -2.9366,        
     *-1.9981,  -1.0852,  -1.4468,  -0.9222,  -0.1746,   0.3789,        
     *-0.1326,  -0.8516,  -0.4270,  -0.5021,  -0.5774,   0.1072,        
     * 0.0779,  -0.1890,  -0.3060,  -0.3330,  -0.3362,  -0.3320,        
     *-0.3290,  -0.3248,  -0.3123,  -0.2275,  -0.1469,  -0.0421,        
     * 0.1192,   0.2136,   0.2149,   0.2122,   0.2019,   0.1760,        
     * 0.0989,   0.0190,  -0.0836,  -0.1437/                            
      DATA F1/                                                          
     *-0.5486,  -0.6082,  -0.5956,  -0.5356,  -0.4402,  -0.0871,        
     * 0.4527,   1.0366,   1.1096,   1.3655,   1.7101,   1.8903,        
     * 1.6543,   1.2291,   1.4722,   1.4553,   1.4742,   1.8427,        
     * 1.8260,   1.6925,   1.6714,   1.6561,   1.6818,   1.7408,        
     * 1.7604,   1.7735,   1.6870,   1.6975,   1.7266,   1.7732,        
     * 1.8476,   1.8953,   1.8977,   1.9100,   1.9121,   1.9074,        
     * 1.8820,   1.8553,   1.8167,   1.8034/                            
      DATA F2/                                                          
     *-0.4081,  -0.4784,  -0.4660,  -0.4117,  -0.3046,   0.0831,        
     * 0.7409,   1.4609,   1.3780,   1.7134,   2.1471,   2.2808,        
     * 2.1315,   1.6742,   1.9804,   1.9449,   1.9238,   2.2748,        
     * 2.2689,   2.1587,   2.1154,   2.1037,   2.1124,   2.1387,        
     * 2.1490,   2.1552,   2.1238,   2.1535,   2.1840,   2.2226,        
     * 2.2790,   2.3247,   2.3268,   2.3387,   2.3422,   2.3439,        
     * 2.3339,   2.3198,   2.2926,   2.2751/                            
      DATA F3/                                                          
     *-0.2242,  -0.3289,  -0.3406,  -0.2786,  -0.1532,   0.3414,        
     * 1.1618,   1.9783,   1.7412,   2.1629,   2.6182,   2.6999,        
     * 2.6101,   2.1844,   2.4931,   2.4589,   2.4253,   2.7204,        
     * 2.7182,   2.6391,   2.5975,   2.5896,   2.5918,   2.6017,        
     * 2.6055,   2.6086,   2.6049,   2.6334,   2.6574,   2.6843,        
     * 2.7225,   2.7601,   2.7620,   2.7734,   2.7780,   2.7832,        
     * 2.7839,   2.7809,   2.7677,   2.7571/                            
      DATA F4/                                                          
     *-0.0119,  -0.2110,  -0.2063,  -0.1444,  -0.0667,   0.6542,        
     * 1.5923,   2.4405,   2.1326,   2.5924,   3.0247,   3.0696,        
     * 3.0154,   2.6365,   2.9257,   2.8957,   2.8634,   3.1026,        
     * 3.1009,   3.0465,   3.0135,   3.0090,   3.0097,   3.0147,        
     * 3.0167,   3.0193,   3.0233,   3.0464,   3.0635,   3.0808,        
     * 3.1047,   3.1337,   3.1354,   3.1458,   3.1506,   3.1572,        
     * 3.1639,   3.1680,   3.1651,   3.1624/                            
      END                                                               
      BLOCK DATA MDTA                                                   
C>    BLOCK DATA                                                        
C                                                                       
C     CLOUD AND RAIN   DATA                                             
C                                                                       
C      COMMON /MDATA/  Z(50),P(50),T(50),WH(50),WCO2(50),WO(50),        
C    X WN2O(50),WCO(50),WCH4(50),WO2(50),                               
C    X CLD(50,7),RR(50,7)                                               
      COMMON /MDATA/  Z(50),P(50),T(50),WH(50),WCO2(50),WO(50),         
     X WN2O(50),WCO(50),WCH4(50),WO2(50),                               
     X CLD1(50),CLD2(50),CLD3(50),CLD4(50),CLD5(50),CLD6(50),CLD7(50)   
     X ,RR1(50), RR2(50), RR3(50), RR4(50), RR5(50), RR6(50), RR7(50)   
C                                                                       
      DATA  Z/                                                          
     C       0.0,       1.0,       2.0,       3.0,       4.0,           
     C       5.0,       6.0,       7.0,       8.0,       9.0,           
     C      10.0,      11.0,      12.0,      13.0,      14.0,           
     C      15.0,      16.0,      17.0,      18.0,      19.0,           
     C      20.0,      21.0,      22.0,      23.0,      24.0,           
     C      25.0,      27.5,      30.0,      32.5,      35.0,           
     C      37.5,      40.0,      42.5,      45.0,      47.5,           
     C      50.0,      55.0,      60.0,      65.0,      70.0,           
     C      75.0,      80.0,      85.0,      90.0,      95.0,           
     C     100.0,     105.0,     110.0,     115.0,     120.0/           
CCC   CLOUD MODELS 1-5                                                  
      DATA CLD1/ 0.0,0.0,0.0,0.2,0.35,1.0,1.0,1.0,0.3,0.15,40*0.0/      
      DATA CLD2/ 0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.3,0.4,0.3,40*0.0/        
      DATA CLD3/ 0.0,0.0,0.15,0.30,0.15,45*0.0/                         
      DATA CLD4/ 0.0,0.0,0.0,0.10,0.15,0.15,0.10,43*0.0/                
      DATA CLD5/ 0.0,0.30,0.65,0.40,46*0.0/                             
      DATA CLD6/ 50*0.0/                                                
      DATA CLD7/ 50*0.0/                                                
CCC   RAIN MODELS 1-5                                                   
      DATA RR1/ 2.0,1.78,1.43,1.22,0.86,0.22,44*0.0/                    
      DATA RR2/ 5.0,4.0,3.4,2.6,0.8,0.2,44*0.0/                         
      DATA RR3/ 12.5,10.5,8.0,6.0,2.5,0.8,0.2,43*0.0/                   
      DATA RR4/ 25.0,21.5,17.5,12.0,7.5,4.2,2.5,1.0,0.7,0.2,40*0.0/     
      DATA RR5/ 75.0,70.0,65.0,60.0,45.0,20.0,12.5,7.0,3.5,             
     + 1.0,0.2,39*0.0/                                                  
      DATA RR6/ 50*0.0/                                                 
      DATA RR7/ 50*0.0/                                                 
C     DATA CO2       /                                                  
      END                                                               
      BLOCK DATA MLATMB                                                 
C>    BLOCK DATA                                                        
C***********************************************************************
C     THIS SUBROUTINE INITIALIZES THE 6 BUILT-IN ATMOSPHERIC PROFILES   
C     (FROM 'OPTICAL PROPERTIES OF THE ATMOSPHERE, THIRD EDITION'       
C     AFCRL-72-0497 (AD 753 075), 'U.S. STANDARD ATMOSPHERE 1976' AND   
C     'SUPPLEMENTS 1966'), PLUS COLLECTED CONSTITUENT PROFILES (REF)    
C     AND SETS OTHER CONSTANTS RELATED TO THE ATMOSPHERIC PROFILES      
C***********************************************************************
      COMMON /MLATM/  ALT(50),P1(50),P2(50),P3(50),P4(50),P5(50),P6(50),
     +T1(50),T2(50),T3(50),T4(50),T5(50),T6(50),                        
     +AMOL11(50),AMOL12(50),AMOL13(50),AMOL14(50),AMOL15(50),AMOL16(50),
     +AMOL17(50),AMOL18(50),                                            
     +AMOL21(50),AMOL22(50),AMOL23(50),AMOL24(50),AMOL25(50),AMOL26(50),
     +AMOL27(50),AMOL28(50),                                            
     +AMOL31(50),AMOL32(50),AMOL33(50),AMOL34(50),AMOL35(50),AMOL36(50),
     +AMOL37(50),AMOL38(50),                                            
     +AMOL41(50),AMOL42(50),AMOL43(50),AMOL44(50),AMOL45(50),AMOL46(50),
     +AMOL47(50),AMOL48(50),                                            
     +AMOL51(50),AMOL52(50),AMOL53(50),AMOL54(50),AMOL55(50),AMOL56(50),
     +AMOL57(50),AMOL58(50),                                            
     +AMOL61(50),AMOL62(50),AMOL63(50),AMOL64(50),AMOL65(50),AMOL66(50),
     +AMOL67(50),AMOL68(50)                                             
C     COMMON /TRAC/ TRAC(50,21)                                         
      COMMON /TRAC/ ANO(50),SO2(50),ANO2(50),ANH3(50),HNO3(50),OH(50),  
     X HF(50),HCL(50),HBR(50),HI(50),CLO(50),OCS(50),H2CO(50),          
     X HOCL(50),AN2(50),HCN(50),CH3CL(50),H2O2(50),C2H2(50),            
     X C2H6(50),PH3(50)                                                 
C     DATA ALT (KM)  /                                                  
      DATA ALT/                                                         
     C       0.0,       1.0,       2.0,       3.0,       4.0,           
     C       5.0,       6.0,       7.0,       8.0,       9.0,           
     C      10.0,      11.0,      12.0,      13.0,      14.0,           
     C      15.0,      16.0,      17.0,      18.0,      19.0,           
     C      20.0,      21.0,      22.0,      23.0,      24.0,           
     C      25.0,      27.5,      30.0,      32.5,      35.0,           
     C      37.5,      40.0,      42.5,      45.0,      47.5,           
     C      50.0,      55.0,      60.0,      65.0,      70.0,           
     C      75.0,      80.0,      85.0,      90.0,      95.0,           
     C     100.0,     105.0,     110.0,     115.0,     120.0/           
C     DATA PRESSURE  /                                                  
      DATA P1/                                                          
     C 1.013E+03, 9.040E+02, 8.050E+02, 7.150E+02, 6.330E+02,           
     C 5.590E+02, 4.920E+02, 4.320E+02, 3.780E+02, 3.290E+02,           
     C 2.860E+02, 2.470E+02, 2.130E+02, 1.820E+02, 1.560E+02,           
     C 1.320E+02, 1.110E+02, 9.370E+01, 7.890E+01, 6.660E+01,           
     C 5.650E+01, 4.800E+01, 4.090E+01, 3.500E+01, 3.000E+01,           
     C 2.570E+01, 1.763E+01, 1.220E+01, 8.520E+00, 6.000E+00,           
     C 4.260E+00, 3.050E+00, 2.200E+00, 1.590E+00, 1.160E+00,           
     C 8.540E-01, 4.560E-01, 2.390E-01, 1.210E-01, 5.800E-02,           
     C 2.600E-02, 1.100E-02, 4.400E-03, 1.720E-03, 6.880E-04,           
     C 2.890E-04, 1.300E-04, 6.470E-05, 3.600E-05, 2.250E-05/           
      DATA P2/                                                          
     C 1.013E+03, 9.020E+02, 8.020E+02, 7.100E+02, 6.280E+02,           
     C 5.540E+02, 4.870E+02, 4.260E+02, 3.720E+02, 3.240E+02,           
     C 2.810E+02, 2.430E+02, 2.090E+02, 1.790E+02, 1.530E+02,           
     C 1.300E+02, 1.110E+02, 9.500E+01, 8.120E+01, 6.950E+01,           
     C 5.950E+01, 5.100E+01, 4.370E+01, 3.760E+01, 3.220E+01,           
     C 2.770E+01, 1.907E+01, 1.320E+01, 9.300E+00, 6.520E+00,           
     C 4.640E+00, 3.330E+00, 2.410E+00, 1.760E+00, 1.290E+00,           
     C 9.510E-01, 5.150E-01, 2.720E-01, 1.390E-01, 6.700E-02,           
     C 3.000E-02, 1.200E-02, 4.480E-03, 1.640E-03, 6.250E-04,           
     C 2.580E-04, 1.170E-04, 6.110E-05, 3.560E-05, 2.270E-05/           
      DATA P3/                                                          
     C 1.018E+03, 8.973E+02, 7.897E+02, 6.938E+02, 6.081E+02,           
     C 5.313E+02, 4.627E+02, 4.016E+02, 3.473E+02, 2.993E+02,           
     C 2.568E+02, 2.199E+02, 1.882E+02, 1.611E+02, 1.378E+02,           
     C 1.178E+02, 1.007E+02, 8.610E+01, 7.360E+01, 6.280E+01,           
     C 5.370E+01, 4.580E+01, 3.910E+01, 3.340E+01, 2.860E+01,           
     C 2.440E+01, 1.646E+01, 1.110E+01, 7.560E+00, 5.180E+00,           
     C 3.600E+00, 2.530E+00, 1.800E+00, 1.290E+00, 9.400E-01,           
     C 6.830E-01, 3.620E-01, 1.880E-01, 9.500E-02, 4.700E-02,           
     C 2.220E-02, 1.030E-02, 4.560E-03, 1.980E-03, 8.770E-04,           
     C 4.074E-04, 2.000E-04, 1.057E-04, 5.980E-05, 3.600E-05/           
      DATA P4/                                                          
     C 1.010E+03, 8.960E+02, 7.929E+02, 7.000E+02, 6.160E+02,           
     C 5.410E+02, 4.740E+02, 4.130E+02, 3.590E+02, 3.108E+02,           
     C 2.677E+02, 2.300E+02, 1.977E+02, 1.700E+02, 1.460E+02,           
     C 1.260E+02, 1.080E+02, 9.280E+01, 7.980E+01, 6.860E+01,           
     C 5.900E+01, 5.070E+01, 4.360E+01, 3.750E+01, 3.228E+01,           
     C 2.780E+01, 1.923E+01, 1.340E+01, 9.400E+00, 6.610E+00,           
     C 4.720E+00, 3.400E+00, 2.480E+00, 1.820E+00, 1.340E+00,           
     C 9.870E-01, 5.370E-01, 2.880E-01, 1.470E-01, 7.100E-02,           
     C 3.200E-02, 1.250E-02, 4.510E-03, 1.610E-03, 6.060E-04,           
     C 2.480E-04, 1.130E-04, 6.000E-05, 3.540E-05, 2.260E-05/           
      DATA P5/                                                          
     C 1.013E+03, 8.878E+02, 7.775E+02, 6.798E+02, 5.932E+02,           
     C 5.158E+02, 4.467E+02, 3.853E+02, 3.308E+02, 2.829E+02,           
     C 2.418E+02, 2.067E+02, 1.766E+02, 1.510E+02, 1.291E+02,           
     C 1.103E+02, 9.431E+01, 8.058E+01, 6.882E+01, 5.875E+01,           
     C 5.014E+01, 4.277E+01, 3.647E+01, 3.109E+01, 2.649E+01,           
     C 2.256E+01, 1.513E+01, 1.020E+01, 6.910E+00, 4.701E+00,           
     C 3.230E+00, 2.243E+00, 1.570E+00, 1.113E+00, 7.900E-01,           
     C 5.719E-01, 2.990E-01, 1.550E-01, 7.900E-02, 4.000E-02,           
     C 2.000E-02, 9.660E-03, 4.500E-03, 2.022E-03, 9.070E-04,           
     C 4.230E-04, 2.070E-04, 1.080E-04, 6.000E-05, 3.590E-05/           
      DATA P6/                                                          
     C 1.013E+03, 8.988E+02, 7.950E+02, 7.012E+02, 6.166E+02,           
     C 5.405E+02, 4.722E+02, 4.111E+02, 3.565E+02, 3.080E+02,           
     C 2.650E+02, 2.270E+02, 1.940E+02, 1.658E+02, 1.417E+02,           
     C 1.211E+02, 1.035E+02, 8.850E+01, 7.565E+01, 6.467E+01,           
     C 5.529E+01, 4.729E+01, 4.047E+01, 3.467E+01, 2.972E+01,           
     C 2.549E+01, 1.743E+01, 1.197E+01, 8.010E+00, 5.746E+00,           
     C 4.150E+00, 2.871E+00, 2.060E+00, 1.491E+00, 1.090E+00,           
     C 7.978E-01, 4.250E-01, 2.190E-01, 1.090E-01, 5.220E-02,           
     C 2.400E-02, 1.050E-02, 4.460E-03, 1.840E-03, 7.600E-04,           
     C 3.200E-04, 1.450E-04, 7.100E-05, 4.010E-05, 2.540E-05/           
C     DATA TEMPERATUR/                                                  
      DATA T1/                                                          
     C    299.70,    293.70,    287.70,    283.70,    277.00,           
     C    270.30,    263.60,    257.00,    250.30,    243.60,           
     C    237.00,    230.10,    223.60,    217.00,    210.30,           
     C    203.70,    197.00,    194.80,    198.80,    202.70,           
     C    206.70,    210.70,    214.60,    217.00,    219.20,           
     C    221.40,    227.00,    232.30,    237.70,    243.10,           
     C    248.50,    254.00,    259.40,    264.80,    269.60,           
     C    270.20,    263.40,    253.10,    236.00,    218.90,           
     C    201.80,    184.80,    177.10,    177.00,    184.30,           
     C    190.70,    212.00,    241.60,    299.70,    380.00/           
      DATA T2/                                                          
     C    294.20,    289.70,    285.20,    279.20,    273.20,           
     C    267.20,    261.20,    254.70,    248.20,    241.70,           
     C    235.30,    228.80,    222.30,    215.80,    215.70,           
     C    215.70,    215.70,    215.70,    216.80,    217.90,           
     C    219.20,    220.40,    221.60,    222.80,    223.90,           
     C    225.10,    228.45,    233.70,    239.00,    245.20,           
     C    251.30,    257.50,    263.70,    269.90,    275.20,           
     C    275.70,    269.30,    257.10,    240.10,    218.10,           
     C    196.10,    174.10,    165.10,    165.00,    178.30,           
     C    190.50,    222.20,    262.40,    316.80,    380.00/           
      DATA T3/                                                          
     C    272.20,    268.70,    265.20,    261.70,    255.70,           
     C    249.70,    243.70,    237.70,    231.70,    225.70,           
     C    219.70,    219.20,    218.70,    218.20,    217.70,           
     C    217.20,    216.70,    216.20,    215.70,    215.20,           
     C    215.20,    215.20,    215.20,    215.20,    215.20,           
     C    215.20,    215.50,    217.40,    220.40,    227.90,           
     C    235.50,    243.20,    250.80,    258.50,    265.10,           
     C    265.70,    260.60,    250.80,    240.90,    230.70,           
     C    220.40,    210.10,    199.80,    199.50,    208.30,           
     C    218.60,    237.10,    259.50,    293.00,    333.00/           
      DATA T4/                                                          
     C    287.20,    281.70,    276.30,    270.90,    265.50,           
     C    260.10,    253.10,    246.10,    239.20,    232.20,           
     C    225.20,    225.20,    225.20,    225.20,    225.20,           
     C    225.20,    225.20,    225.20,    225.20,    225.20,           
     C    225.20,    225.20,    225.20,    225.20,    226.60,           
     C    228.10,    231.00,    235.10,    240.00,    247.20,           
     C    254.60,    262.10,    269.50,    273.60,    276.20,           
     C    277.20,    274.00,    262.70,    239.70,    216.60,           
     C    193.60,    170.60,    161.70,    161.60,    176.80,           
     C    190.40,    226.00,    270.10,    322.70,    380.00/           
      DATA T5/                                                          
     C    257.20,    259.10,    255.90,    252.70,    247.70,           
     C    240.90,    234.10,    227.30,    220.60,    217.20,           
     C    217.20,    217.20,    217.20,    217.20,    217.20,           
     C    217.20,    216.60,    216.00,    215.40,    214.80,           
     C    214.20,    213.60,    213.00,    212.40,    211.80,           
     C    211.20,    213.60,    216.00,    218.50,    222.30,           
     C    228.50,    234.70,    240.80,    247.00,    253.20,           
     C    259.30,    259.10,    250.90,    248.40,    245.40,           
     C    234.70,    223.90,    213.10,    202.30,    211.00,           
     C    218.50,    234.00,    252.60,    288.50,    333.00/           
      DATA T6/                                                          
     C    288.20,    281.70,    275.20,    268.70,    262.20,           
     C    255.70,    249.20,    242.70,    236.20,    229.70,           
     C    223.30,    216.80,    216.70,    216.70,    216.70,           
     C    216.70,    216.70,    216.70,    216.70,    216.70,           
     C    216.70,    217.60,    218.60,    219.60,    220.60,           
     C    221.60,    224.00,    226.50,    230.00,    236.50,           
     C    242.90,    250.40,    257.30,    264.20,    270.60,           
     C    270.70,    260.80,    247.00,    233.30,    219.60,           
     C    208.40,    198.60,    188.90,    186.90,    188.40,           
     C    195.10,    208.80,    240.00,    300.00,    360.00/           
C     DATA  H2O      /                                                  
      DATA AMOL11/                                                      
     C 2.593E+04, 1.949E+04, 1.534E+04, 8.600E+03, 4.441E+03,           
     C 3.346E+03, 2.101E+03, 1.289E+03, 7.637E+02, 4.098E+02,           
     C 1.912E+02, 7.306E+01, 2.905E+01, 9.900E+00, 6.220E+00,           
     C 4.000E+00, 3.000E+00, 2.900E+00, 2.750E+00, 2.600E+00,           
     C 2.600E+00, 2.650E+00, 2.800E+00, 2.900E+00, 3.200E+00,           
     C 3.250E+00, 3.600E+00, 4.000E+00, 4.300E+00, 4.600E+00,           
     C 4.900E+00, 5.200E+00, 5.500E+00, 5.700E+00, 5.900E+00,           
     C 6.000E+00, 6.000E+00, 6.000E+00, 5.400E+00, 4.500E+00,           
     C 3.300E+00, 2.100E+00, 1.300E+00, 8.500E-01, 5.400E-01,           
     C 4.000E-01, 3.400E-01, 2.800E-01, 2.400E-01, 2.000E-01/           
      DATA AMOL21/                                                      
     C 1.876E+04, 1.378E+04, 9.680E+03, 5.984E+03, 3.813E+03,           
     C 2.225E+03, 1.510E+03, 1.020E+03, 6.464E+02, 4.129E+02,           
     C 2.472E+02, 9.556E+01, 2.944E+01, 8.000E+00, 5.000E+00,           
     C 3.400E+00, 3.300E+00, 3.200E+00, 3.150E+00, 3.200E+00,           
     C 3.300E+00, 3.450E+00, 3.600E+00, 3.850E+00, 4.000E+00,           
     C 4.200E+00, 4.450E+00, 4.700E+00, 4.850E+00, 4.950E+00,           
     C 5.000E+00, 5.100E+00, 5.300E+00, 5.450E+00, 5.500E+00,           
     C 5.500E+00, 5.350E+00, 5.000E+00, 4.400E+00, 3.700E+00,           
     C 2.950E+00, 2.100E+00, 1.330E+00, 8.500E-01, 5.400E-01,           
     C 4.000E-01, 3.400E-01, 2.800E-01, 2.400E-01, 2.000E-01/           
      DATA AMOL31/                                                      
     C 4.316E+03, 3.454E+03, 2.788E+03, 2.088E+03, 1.280E+03,           
     C 8.241E+02, 5.103E+02, 2.321E+02, 1.077E+02, 5.566E+01,           
     C 2.960E+01, 1.000E+01, 6.000E+00, 5.000E+00, 4.800E+00,           
     C 4.700E+00, 4.600E+00, 4.500E+00, 4.500E+00, 4.500E+00,           
     C 4.500E+00, 4.500E+00, 4.530E+00, 4.550E+00, 4.600E+00,           
     C 4.650E+00, 4.700E+00, 4.750E+00, 4.800E+00, 4.850E+00,           
     C 4.900E+00, 4.950E+00, 5.000E+00, 5.000E+00, 5.000E+00,           
     C 4.950E+00, 4.850E+00, 4.500E+00, 4.000E+00, 3.300E+00,           
     C 2.700E+00, 2.000E+00, 1.330E+00, 8.500E-01, 5.400E-01,           
     C 4.000E-01, 3.400E-01, 2.800E-01, 2.400E-01, 2.000E-01/           
      DATA AMOL41/                                                      
     C 1.194E+04, 8.701E+03, 6.750E+03, 4.820E+03, 3.380E+03,           
     C 2.218E+03, 1.330E+03, 7.971E+02, 3.996E+02, 1.300E+02,           
     C 4.240E+01, 1.330E+01, 6.000E+00, 4.450E+00, 4.000E+00,           
     C 4.000E+00, 4.000E+00, 4.050E+00, 4.300E+00, 4.500E+00,           
     C 4.600E+00, 4.700E+00, 4.800E+00, 4.830E+00, 4.850E+00,           
     C 4.900E+00, 4.950E+00, 5.000E+00, 5.000E+00, 5.000E+00,           
     C 5.000E+00, 5.000E+00, 5.000E+00, 5.000E+00, 5.000E+00,           
     C 4.950E+00, 4.850E+00, 4.500E+00, 4.000E+00, 3.300E+00,           
     C 2.700E+00, 2.000E+00, 1.330E+00, 8.500E-01, 5.400E-01,           
     C 4.000E-01, 3.400E-01, 2.800E-01, 2.400E-01, 2.000E-01/           
      DATA AMOL51/                                                      
     C 1.405E+03, 1.615E+03, 1.427E+03, 1.166E+03, 7.898E+02,           
     C 4.309E+02, 2.369E+02, 1.470E+02, 3.384E+01, 2.976E+01,           
     C 2.000E+01, 1.000E+01, 6.000E+00, 4.450E+00, 4.500E+00,           
     C 4.550E+00, 4.600E+00, 4.650E+00, 4.700E+00, 4.750E+00,           
     C 4.800E+00, 4.850E+00, 4.900E+00, 4.950E+00, 5.000E+00,           
     C 5.000E+00, 5.000E+00, 5.000E+00, 5.000E+00, 5.000E+00,           
     C 5.000E+00, 5.000E+00, 5.000E+00, 5.000E+00, 5.000E+00,           
     C 4.950E+00, 4.850E+00, 4.500E+00, 4.000E+00, 3.300E+00,           
     C 2.700E+00, 2.000E+00, 1.330E+00, 8.500E-01, 5.400E-01,           
     C 4.000E-01, 3.400E-01, 2.800E-01, 2.400E-01, 2.000E-01/           
      DATA AMOL61/                                                      
     C 7.745E+03, 6.071E+03, 4.631E+03, 3.182E+03, 2.158E+03,           
     C 1.397E+03, 9.254E+02, 5.720E+02, 3.667E+02, 1.583E+02,           
     C 6.996E+01, 3.613E+01, 1.906E+01, 1.085E+01, 5.927E+00,           
     C 5.000E+00, 3.950E+00, 3.850E+00, 3.825E+00, 3.850E+00,           
     C 3.900E+00, 3.975E+00, 4.065E+00, 4.200E+00, 4.300E+00,           
     C 4.425E+00, 4.575E+00, 4.725E+00, 4.825E+00, 4.900E+00,           
     C 4.950E+00, 5.025E+00, 5.150E+00, 5.225E+00, 5.250E+00,           
     C 5.225E+00, 5.100E+00, 4.750E+00, 4.200E+00, 3.500E+00,           
     C 2.825E+00, 2.050E+00, 1.330E+00, 8.500E-01, 5.400E-01,           
     C 4.000E-01, 3.400E-01, 2.800E-01, 2.400E-01, 2.000E-01/           
C     DATA CO2       /                                                  
      DATA AMOL12/                                                      
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.280E+02, 3.200E+02, 3.100E+02, 2.700E+02,           
     C 1.950E+02, 1.100E+02, 6.000E+01, 4.000E+01, 3.500E+01/           
C     DATA CO2       /                                                  
      DATA AMOL22/                                                      
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.280E+02, 3.200E+02, 3.100E+02, 2.700E+02,           
     C 1.950E+02, 1.100E+02, 6.000E+01, 4.000E+01, 3.500E+01/           
C     DATA CO2       /                                                  
      DATA AMOL32/                                                      
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.280E+02, 3.200E+02, 3.100E+02, 2.700E+02,           
     C 1.950E+02, 1.100E+02, 6.000E+01, 4.000E+01, 3.500E+01/           
C     DATA CO2       /                                                  
      DATA AMOL42/                                                      
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.280E+02, 3.200E+02, 3.100E+02, 2.700E+02,           
     C 1.950E+02, 1.100E+02, 6.000E+01, 4.000E+01, 3.500E+01/           
C     DATA CO2       /                                                  
      DATA AMOL52/                                                      
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.280E+02, 3.200E+02, 3.100E+02, 2.700E+02,           
     C 1.950E+02, 1.100E+02, 6.000E+01, 4.000E+01, 3.500E+01/           
C     DATA CO2       /                                                  
      DATA AMOL62/                                                      
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02, 3.300E+02,           
     C 3.300E+02, 3.280E+02, 3.200E+02, 3.100E+02, 2.700E+02,           
     C 1.950E+02, 1.100E+02, 6.000E+01, 4.000E+01, 3.500E+01/           
C     DATA OZONE     /                                                  
      DATA AMOL13/                                                      
     C 2.869E-02, 3.150E-02, 3.342E-02, 3.504E-02, 3.561E-02,           
     C 3.767E-02, 3.989E-02, 4.223E-02, 4.471E-02, 5.000E-02,           
     C 5.595E-02, 6.613E-02, 7.815E-02, 9.289E-02, 1.050E-01,           
     C 1.256E-01, 1.444E-01, 2.500E-01, 5.000E-01, 9.500E-01,           
     C 1.400E+00, 1.800E+00, 2.400E+00, 3.400E+00, 4.300E+00,           
     C 5.400E+00, 7.800E+00, 9.300E+00, 9.850E+00, 9.700E+00,           
     C 8.800E+00, 7.500E+00, 5.900E+00, 4.500E+00, 3.450E+00,           
     C 2.800E+00, 1.800E+00, 1.100E+00, 6.500E-01, 3.000E-01,           
     C 1.800E-01, 3.300E-01, 5.000E-01, 5.200E-01, 5.000E-01,           
     C 4.000E-01, 2.000E-01, 5.000E-02, 5.000E-03, 5.000E-04/           
      DATA AMOL23/                                                      
     C 3.017E-02, 3.337E-02, 3.694E-02, 4.222E-02, 4.821E-02,           
     C 5.512E-02, 6.408E-02, 7.764E-02, 9.126E-02, 1.111E-01,           
     C 1.304E-01, 1.793E-01, 2.230E-01, 3.000E-01, 4.400E-01,           
     C 5.000E-01, 6.000E-01, 7.000E-01, 1.000E+00, 1.500E+00,           
     C 2.000E+00, 2.400E+00, 2.900E+00, 3.400E+00, 4.000E+00,           
     C 4.800E+00, 6.000E+00, 7.000E+00, 8.100E+00, 8.900E+00,           
     C 8.700E+00, 7.550E+00, 5.900E+00, 4.500E+00, 3.500E+00,           
     C 2.800E+00, 1.800E+00, 1.300E+00, 8.000E-01, 4.000E-01,           
     C 1.900E-01, 2.000E-01, 5.700E-01, 7.500E-01, 7.000E-01,           
     C 4.000E-01, 2.000E-01, 5.000E-02, 5.000E-03, 5.000E-04/           
      DATA AMOL33/                                                      
     C 2.778E-02, 2.800E-02, 2.849E-02, 3.200E-02, 3.567E-02,           
     C 4.720E-02, 5.837E-02, 7.891E-02, 1.039E-01, 1.567E-01,           
     C 2.370E-01, 3.624E-01, 5.232E-01, 7.036E-01, 8.000E-01,           
     C 9.000E-01, 1.100E+00, 1.400E+00, 1.800E+00, 2.300E+00,           
     C 2.900E+00, 3.500E+00, 3.900E+00, 4.300E+00, 4.700E+00,           
     C 5.100E+00, 5.600E+00, 6.100E+00, 6.800E+00, 7.100E+00,           
     C 7.200E+00, 6.900E+00, 5.900E+00, 4.600E+00, 3.700E+00,           
     C 2.750E+00, 1.700E+00, 1.000E-00, 5.500E-01, 3.200E-01,           
     C 2.500E-01, 2.300E-01, 5.500E-01, 8.000E-01, 8.000E-01,           
     C 4.000E-01, 2.000E-01, 5.000E-02, 5.000E-03, 5.000E-04/           
      DATA AMOL43/                                                      
     C 2.412E-02, 2.940E-02, 3.379E-02, 3.887E-02, 4.478E-02,           
     C 5.328E-02, 6.564E-02, 7.738E-02, 9.114E-02, 1.420E-01,           
     C 1.890E-01, 3.050E-01, 4.100E-01, 5.000E-01, 6.000E-01,           
     C 7.000E-01, 8.500E-01, 1.000E+00, 1.300E+00, 1.700E+00,           
     C 2.100E+00, 2.700E+00, 3.300E+00, 3.700E+00, 4.200E+00,           
     C 4.500E+00, 5.300E+00, 5.700E+00, 6.900E+00, 7.700E+00,           
     C 7.800E+00, 7.000E+00, 5.400E+00, 4.200E+00, 3.200E+00,           
     C 2.500E+00, 1.700E+00, 1.200E+00, 8.000E-01, 4.000E-01,           
     C 2.000E-01, 1.800E-01, 6.500E-01, 9.000E-01, 8.000E-01,           
     C 4.000E-01, 2.000E-01, 5.000E-02, 5.000E-03, 5.000E-04/           
      DATA AMOL53/                                                      
     C 1.802E-02, 2.072E-02, 2.336E-02, 2.767E-02, 3.253E-02,           
     C 3.801E-02, 4.446E-02, 7.252E-02, 1.040E-01, 2.100E-01,           
     C 3.000E-01, 3.500E-01, 4.000E-01, 6.500E-01, 9.000E-01,           
     C 1.200E+00, 1.500E+00, 1.900E+00, 2.450E+00, 3.100E+00,           
     C 3.700E+00, 4.000E+00, 4.200E+00, 4.500E+00, 4.600E+00,           
     C 4.700E+00, 4.900E+00, 5.400E+00, 5.900E+00, 6.200E+00,           
     C 6.250E+00, 5.900E+00, 5.100E+00, 4.100E+00, 3.000E+00,           
     C 2.600E+00, 1.600E+00, 9.500E-01, 6.500E-01, 5.000E-01,           
     C 3.300E-01, 1.300E-01, 7.500E-01, 8.000E-01, 8.000E-01,           
     C 4.000E-01, 2.000E-01, 5.000E-02, 5.000E-03, 5.000E-04/           
      DATA AMOL63/                                                      
     C 2.660E-02, 2.931E-02, 3.237E-02, 3.318E-02, 3.387E-02,           
     C 3.768E-02, 4.112E-02, 5.009E-02, 5.966E-02, 9.168E-02,           
     C 1.313E-01, 2.149E-01, 3.095E-01, 3.846E-01, 5.030E-01,           
     C 6.505E-01, 8.701E-01, 1.187E+00, 1.587E+00, 2.030E+00,           
     C 2.579E+00, 3.028E+00, 3.647E+00, 4.168E+00, 4.627E+00,           
     C 5.118E+00, 5.803E+00, 6.553E+00, 7.373E+00, 7.837E+00,           
     C 7.800E+00, 7.300E+00, 6.200E+00, 5.250E+00, 4.100E+00,           
     C 3.100E+00, 1.800E+00, 1.100E+00, 7.000E-01, 3.000E-01,           
     C 2.500E-01, 3.000E-01, 5.000E-01, 7.000E-01, 7.000E-01,           
     C 4.000E-01, 2.000E-01, 5.000E-02, 5.000E-03, 5.000E-04/           
C     DATA  N2O      /                                                  
      DATA AMOL14/                                                      
     C 3.200E-01, 3.200E-01, 3.200E-01, 3.200E-01, 3.200E-01,           
     C 3.200E-01, 3.200E-01, 3.200E-01, 3.200E-01, 3.195E-01,           
     C 3.179E-01, 3.140E-01, 3.095E-01, 3.048E-01, 2.999E-01,           
     C 2.944E-01, 2.877E-01, 2.783E-01, 2.671E-01, 2.527E-01,           
     C 2.365E-01, 2.194E-01, 2.051E-01, 1.967E-01, 1.875E-01,           
     C 1.756E-01, 1.588E-01, 1.416E-01, 1.165E-01, 9.275E-02,           
     C 6.693E-02, 4.513E-02, 2.751E-02, 1.591E-02, 9.378E-03,           
     C 4.752E-03, 3.000E-03, 2.065E-03, 1.507E-03, 1.149E-03,           
     C 8.890E-04, 7.056E-04, 5.716E-04, 4.708E-04, 3.932E-04,           
     C 3.323E-04, 2.837E-04, 2.443E-04, 2.120E-04, 1.851E-04/           
C     DATA  N2O      /                                                  
      DATA AMOL24/                                                      
     C 3.200E-01, 3.200E-01, 3.200E-01, 3.200E-01, 3.200E-01,           
     C 3.200E-01, 3.200E-01, 3.200E-01, 3.195E-01, 3.163E-01,           
     C 3.096E-01, 2.989E-01, 2.936E-01, 2.860E-01, 2.800E-01,           
     C 2.724E-01, 2.611E-01, 2.421E-01, 2.174E-01, 1.843E-01,           
     C 1.607E-01, 1.323E-01, 1.146E-01, 1.035E-01, 9.622E-02,           
     C 8.958E-02, 8.006E-02, 6.698E-02, 4.958E-02, 3.695E-02,           
     C 2.519E-02, 1.736E-02, 1.158E-02, 7.665E-03, 5.321E-03,           
     C 3.215E-03, 2.030E-03, 1.397E-03, 1.020E-03, 7.772E-04,           
     C 6.257E-04, 5.166E-04, 4.352E-04, 3.727E-04, 3.237E-04,           
     C 2.844E-04, 2.524E-04, 2.260E-04, 2.039E-04, 1.851E-04/           
C     DATA  N2O      /                                                  
      DATA AMOL34/                                                      
     C 3.200E-01, 3.200E-01, 3.200E-01, 3.200E-01, 3.200E-01,           
     C 3.200E-01, 3.200E-01, 3.200E-01, 3.195E-01, 3.163E-01,           
     C 3.096E-01, 2.989E-01, 2.936E-01, 2.860E-01, 2.800E-01,           
     C 2.724E-01, 2.611E-01, 2.421E-01, 2.174E-01, 1.843E-01,           
     C 1.621E-01, 1.362E-01, 1.230E-01, 1.124E-01, 1.048E-01,           
     C 9.661E-02, 8.693E-02, 7.524E-02, 6.126E-02, 5.116E-02,           
     C 3.968E-02, 2.995E-02, 2.080E-02, 1.311E-02, 8.071E-03,           
     C 4.164E-03, 2.629E-03, 1.809E-03, 1.321E-03, 1.007E-03,           
     C 7.883E-04, 6.333E-04, 5.194E-04, 4.333E-04, 3.666E-04,           
     C 3.140E-04, 2.717E-04, 2.373E-04, 2.089E-04, 1.851E-04/           
C     DATA  N2O      /                                                  
      DATA AMOL44/                                                      
     C 3.100E-01, 3.100E-01, 3.100E-01, 3.100E-01, 3.079E-01,           
     C 3.024E-01, 2.906E-01, 2.822E-01, 2.759E-01, 2.703E-01,           
     C 2.651E-01, 2.600E-01, 2.549E-01, 2.494E-01, 2.433E-01,           
     C 2.355E-01, 2.282E-01, 2.179E-01, 2.035E-01, 1.817E-01,           
     C 1.567E-01, 1.350E-01, 1.218E-01, 1.102E-01, 9.893E-02,           
     C 8.775E-02, 7.327E-02, 5.941E-02, 4.154E-02, 3.032E-02,           
     C 1.949E-02, 1.274E-02, 9.001E-03, 6.286E-03, 4.558E-03,           
     C 2.795E-03, 1.765E-03, 1.214E-03, 8.866E-04, 6.756E-04,           
     C 5.538E-04, 4.649E-04, 3.979E-04, 3.459E-04, 3.047E-04,           
     C 2.713E-04, 2.439E-04, 2.210E-04, 2.017E-04, 1.851E-04/           
C     DATA  N2O      /                                                  
      DATA AMOL54/                                                      
     C 3.200E-01, 3.200E-01, 3.200E-01, 3.200E-01, 3.200E-01,           
     C 3.200E-01, 3.200E-01, 3.200E-01, 3.195E-01, 3.163E-01,           
     C 3.096E-01, 2.989E-01, 2.936E-01, 2.860E-01, 2.800E-01,           
     C 2.724E-01, 2.611E-01, 2.421E-01, 2.174E-01, 1.843E-01,           
     C 1.621E-01, 1.362E-01, 1.230E-01, 1.122E-01, 1.043E-01,           
     C 9.570E-02, 8.598E-02, 7.314E-02, 5.710E-02, 4.670E-02,           
     C 3.439E-02, 2.471E-02, 1.631E-02, 1.066E-02, 7.064E-03,           
     C 3.972E-03, 2.508E-03, 1.726E-03, 1.260E-03, 9.602E-04,           
     C 7.554E-04, 6.097E-04, 5.024E-04, 4.210E-04, 3.579E-04,           
     C 3.080E-04, 2.678E-04, 2.350E-04, 2.079E-04, 1.851E-04/           
C     DATA  N2O      /                                                  
      DATA AMOL64/                                                      
     C 3.200E-01, 3.200E-01, 3.200E-01, 3.200E-01, 3.200E-01,           
     C 3.200E-01, 3.200E-01, 3.200E-01, 3.200E-01, 3.195E-01,           
     C 3.179E-01, 3.140E-01, 3.095E-01, 3.048E-01, 2.999E-01,           
     C 2.944E-01, 2.877E-01, 2.783E-01, 2.671E-01, 2.527E-01,           
     C 2.365E-01, 2.194E-01, 2.051E-01, 1.967E-01, 1.875E-01,           
     C 1.756E-01, 1.588E-01, 1.416E-01, 1.165E-01, 9.275E-02,           
     C 6.693E-02, 4.513E-02, 2.751E-02, 1.591E-02, 9.378E-03,           
     C 4.752E-03, 3.000E-03, 2.065E-03, 1.507E-03, 1.149E-03,           
     C 8.890E-04, 7.056E-04, 5.716E-04, 4.708E-04, 3.932E-04,           
     C 3.323E-04, 2.837E-04, 2.443E-04, 2.120E-04, 1.851E-04/           
C     DATA CO        /                                                  
      DATA AMOL15/                                                      
     C 1.500E-01, 1.450E-01, 1.399E-01, 1.349E-01, 1.312E-01,           
     C 1.303E-01, 1.288E-01, 1.247E-01, 1.185E-01, 1.094E-01,           
     C 9.962E-02, 8.964E-02, 7.814E-02, 6.374E-02, 5.025E-02,           
     C 3.941E-02, 3.069E-02, 2.489E-02, 1.966E-02, 1.549E-02,           
     C 1.331E-02, 1.232E-02, 1.232E-02, 1.307E-02, 1.400E-02,           
     C 1.521E-02, 1.722E-02, 1.995E-02, 2.266E-02, 2.487E-02,           
     C 2.738E-02, 3.098E-02, 3.510E-02, 3.987E-02, 4.482E-02,           
     C 5.092E-02, 5.985E-02, 6.960E-02, 9.188E-02, 1.938E-01,           
     C 5.688E-01, 1.549E+00, 3.849E+00, 6.590E+00, 1.044E+01,           
     C 1.705E+01, 2.471E+01, 3.358E+01, 4.148E+01, 5.000E+01/           
C     DATA CO        /                                                  
      DATA AMOL25/                                                      
     C 1.500E-01, 1.450E-01, 1.399E-01, 1.349E-01, 1.312E-01,           
     C 1.303E-01, 1.288E-01, 1.247E-01, 1.185E-01, 1.094E-01,           
     C 9.962E-02, 8.964E-02, 7.814E-02, 6.374E-02, 5.025E-02,           
     C 3.941E-02, 3.069E-02, 2.489E-02, 1.966E-02, 1.549E-02,           
     C 1.331E-02, 1.232E-02, 1.232E-02, 1.307E-02, 1.400E-02,           
     C 1.521E-02, 1.722E-02, 1.995E-02, 2.266E-02, 2.487E-02,           
     C 2.716E-02, 2.962E-02, 3.138E-02, 3.307E-02, 3.487E-02,           
     C 3.645E-02, 3.923E-02, 4.673E-02, 6.404E-02, 1.177E-01,           
     C 2.935E-01, 6.815E-01, 1.465E+00, 2.849E+00, 5.166E+00,           
     C 1.008E+01, 1.865E+01, 2.863E+01, 3.890E+01, 5.000E+01/           
C     DATA CO        /                                                  
      DATA AMOL35/                                                      
     C 1.500E-01, 1.450E-01, 1.399E-01, 1.349E-01, 1.312E-01,           
     C 1.303E-01, 1.288E-01, 1.247E-01, 1.185E-01, 1.094E-01,           
     C 9.962E-02, 8.964E-02, 7.814E-02, 6.374E-02, 5.025E-02,           
     C 3.941E-02, 3.069E-02, 2.489E-02, 1.966E-02, 1.549E-02,           
     C 1.331E-02, 1.232E-02, 1.232E-02, 1.307E-02, 1.400E-02,           
     C 1.498E-02, 1.598E-02, 1.710E-02, 1.850E-02, 1.997E-02,           
     C 2.147E-02, 2.331E-02, 2.622E-02, 3.057E-02, 3.803E-02,           
     C 6.245E-02, 1.480E-01, 2.926E-01, 5.586E-01, 1.078E+00,           
     C 1.897E+00, 2.960E+00, 4.526E+00, 6.862E+00, 1.054E+01,           
     C 1.709E+01, 2.473E+01, 3.359E+01, 4.149E+01, 5.000E+01/           
C     DATA CO        /                                                  
      DATA AMOL45/                                                      
     C 1.500E-01, 1.450E-01, 1.399E-01, 1.349E-01, 1.312E-01,           
     C 1.303E-01, 1.288E-01, 1.247E-01, 1.185E-01, 1.094E-01,           
     C 9.962E-02, 8.964E-02, 7.814E-02, 6.374E-02, 5.025E-02,           
     C 3.941E-02, 3.069E-02, 2.489E-02, 1.966E-02, 1.549E-02,           
     C 1.331E-02, 1.232E-02, 1.232E-02, 1.307E-02, 1.400E-02,           
     C 1.510E-02, 1.649E-02, 1.808E-02, 1.997E-02, 2.183E-02,           
     C 2.343E-02, 2.496E-02, 2.647E-02, 2.809E-02, 2.999E-02,           
     C 3.220E-02, 3.650E-02, 4.589E-02, 6.375E-02, 1.176E-01,           
     C 3.033E-01, 7.894E-01, 1.823E+00, 3.402E+00, 5.916E+00,           
     C 1.043E+01, 1.881E+01, 2.869E+01, 3.892E+01, 5.000E+01/           
C     DATA CO        /                                                  
      DATA AMOL55/                                                      
     C 1.500E-01, 1.450E-01, 1.399E-01, 1.349E-01, 1.312E-01,           
     C 1.303E-01, 1.288E-01, 1.247E-01, 1.185E-01, 1.094E-01,           
     C 9.962E-02, 8.964E-02, 7.814E-02, 6.374E-02, 5.025E-02,           
     C 3.941E-02, 3.069E-02, 2.489E-02, 1.966E-02, 1.549E-02,           
     C 1.331E-02, 1.232E-02, 1.232E-02, 1.307E-02, 1.400E-02,           
     C 1.521E-02, 1.722E-02, 2.037E-02, 2.486E-02, 3.168E-02,           
     C 4.429E-02, 6.472E-02, 1.041E-01, 1.507E-01, 2.163E-01,           
     C 3.141E-01, 4.842E-01, 7.147E-01, 1.067E+00, 1.516E+00,           
     C 2.166E+00, 3.060E+00, 4.564E+00, 6.877E+00, 1.055E+01,           
     C 1.710E+01, 2.473E+01, 3.359E+01, 4.149E+01, 5.000E+01/           
C     DATA CO        /                                                  
      DATA AMOL65/                                                      
     C 1.500E-01, 1.450E-01, 1.399E-01, 1.349E-01, 1.312E-01,           
     C 1.303E-01, 1.288E-01, 1.247E-01, 1.185E-01, 1.094E-01,           
     C 9.962E-02, 8.964E-02, 7.814E-02, 6.374E-02, 5.025E-02,           
     C 3.941E-02, 3.069E-02, 2.489E-02, 1.966E-02, 1.549E-02,           
     C 1.331E-02, 1.232E-02, 1.232E-02, 1.307E-02, 1.400E-02,           
     C 1.498E-02, 1.598E-02, 1.710E-02, 1.850E-02, 2.009E-02,           
     C 2.220E-02, 2.497E-02, 2.824E-02, 3.241E-02, 3.717E-02,           
     C 4.597E-02, 6.639E-02, 1.073E-01, 1.862E-01, 3.059E-01,           
     C 6.375E-01, 1.497E+00, 3.239E+00, 5.843E+00, 1.013E+01,           
     C 1.692E+01, 2.467E+01, 3.356E+01, 4.148E+01, 5.000E+01/           
C     DATA  CH4      /                                                  
      DATA AMOL16/                                                      
     C 1.700E+00, 1.700E+00, 1.700E+00, 1.700E+00, 1.700E+00,           
     C 1.700E+00, 1.700E+00, 1.699E+00, 1.697E+00, 1.693E+00,           
     C 1.685E+00, 1.675E+00, 1.662E+00, 1.645E+00, 1.626E+00,           
     C 1.605E+00, 1.582E+00, 1.553E+00, 1.521E+00, 1.480E+00,           
     C 1.424E+00, 1.355E+00, 1.272E+00, 1.191E+00, 1.118E+00,           
     C 1.055E+00, 9.870E-01, 9.136E-01, 8.300E-01, 7.460E-01,           
     C 6.618E-01, 5.638E-01, 4.614E-01, 3.631E-01, 2.773E-01,           
     C 2.100E-01, 1.651E-01, 1.500E-01, 1.500E-01, 1.500E-01,           
     C 1.500E-01, 1.500E-01, 1.500E-01, 1.400E-01, 1.300E-01,           
     C 1.200E-01, 1.100E-01, 9.500E-02, 6.000E-02, 3.000E-02/           
C     DATA  CH4      /                                                  
      DATA AMOL26/                                                      
     C 1.700E+00, 1.700E+00, 1.700E+00, 1.700E+00, 1.697E+00,           
     C 1.687E+00, 1.672E+00, 1.649E+00, 1.629E+00, 1.615E+00,           
     C 1.579E+00, 1.542E+00, 1.508E+00, 1.479E+00, 1.451E+00,           
     C 1.422E+00, 1.390E+00, 1.356E+00, 1.323E+00, 1.281E+00,           
     C 1.224E+00, 1.154E+00, 1.066E+00, 9.730E-01, 8.800E-01,           
     C 7.888E-01, 7.046E-01, 6.315E-01, 5.592E-01, 5.008E-01,           
     C 4.453E-01, 3.916E-01, 3.389E-01, 2.873E-01, 2.384E-01,           
     C 1.944E-01, 1.574E-01, 1.500E-01, 1.500E-01, 1.500E-01,           
     C 1.500E-01, 1.500E-01, 1.500E-01, 1.400E-01, 1.300E-01,           
     C 1.200E-01, 1.100E-01, 9.500E-02, 6.000E-02, 3.000E-02/           
C     DATA  CH4      /                                                  
      DATA AMOL36/                                                      
     C 1.700E+00, 1.700E+00, 1.700E+00, 1.700E+00, 1.697E+00,           
     C 1.687E+00, 1.672E+00, 1.649E+00, 1.629E+00, 1.615E+00,           
     C 1.579E+00, 1.542E+00, 1.508E+00, 1.479E+00, 1.451E+00,           
     C 1.422E+00, 1.390E+00, 1.356E+00, 1.323E+00, 1.281E+00,           
     C 1.224E+00, 1.154E+00, 1.066E+00, 9.730E-01, 8.800E-01,           
     C 7.931E-01, 7.130E-01, 6.438E-01, 5.746E-01, 5.050E-01,           
     C 4.481E-01, 3.931E-01, 3.395E-01, 2.876E-01, 2.386E-01,           
     C 1.944E-01, 1.574E-01, 1.500E-01, 1.500E-01, 1.500E-01,           
     C 1.500E-01, 1.500E-01, 1.500E-01, 1.400E-01, 1.300E-01,           
     C 1.200E-01, 1.100E-01, 9.500E-02, 6.000E-02, 3.000E-02/           
C     DATA  CH4      /                                                  
      DATA AMOL46/                                                      
     C 1.700E+00, 1.700E+00, 1.700E+00, 1.700E+00, 1.697E+00,           
     C 1.687E+00, 1.672E+00, 1.649E+00, 1.629E+00, 1.615E+00,           
     C 1.579E+00, 1.542E+00, 1.506E+00, 1.471E+00, 1.434E+00,           
     C 1.389E+00, 1.342E+00, 1.290E+00, 1.230E+00, 1.157E+00,           
     C 1.072E+00, 9.903E-01, 9.170E-01, 8.574E-01, 8.013E-01,           
     C 7.477E-01, 6.956E-01, 6.442E-01, 5.888E-01, 5.240E-01,           
     C 4.506E-01, 3.708E-01, 2.992E-01, 2.445E-01, 2.000E-01,           
     C 1.660E-01, 1.500E-01, 1.500E-01, 1.500E-01, 1.500E-01,           
     C 1.500E-01, 1.500E-01, 1.500E-01, 1.400E-01, 1.300E-01,           
     C 1.200E-01, 1.100E-01, 9.500E-02, 6.000E-02, 3.000E-02/           
C     DATA  CH4      /                                                  
      DATA AMOL56/                                                      
     C 1.700E+00, 1.700E+00, 1.700E+00, 1.700E+00, 1.697E+00,           
     C 1.687E+00, 1.672E+00, 1.649E+00, 1.629E+00, 1.615E+00,           
     C 1.579E+00, 1.542E+00, 1.506E+00, 1.471E+00, 1.434E+00,           
     C 1.389E+00, 1.342E+00, 1.290E+00, 1.230E+00, 1.161E+00,           
     C 1.084E+00, 1.014E+00, 9.561E-01, 9.009E-01, 8.479E-01,           
     C 7.961E-01, 7.449E-01, 6.941E-01, 6.434E-01, 5.883E-01,           
     C 5.238E-01, 4.505E-01, 3.708E-01, 3.004E-01, 2.453E-01,           
     C 1.980E-01, 1.590E-01, 1.500E-01, 1.500E-01, 1.500E-01,           
     C 1.500E-01, 1.500E-01, 1.500E-01, 1.400E-01, 1.300E-01,           
     C 1.200E-01, 1.100E-01, 9.500E-02, 6.000E-02, 3.000E-02/           
C     DATA  CH4      /                                                  
      DATA AMOL66/                                                      
     C 1.700E+00, 1.700E+00, 1.700E+00, 1.700E+00, 1.700E+00,           
     C 1.700E+00, 1.700E+00, 1.699E+00, 1.697E+00, 1.693E+00,           
     C 1.685E+00, 1.675E+00, 1.662E+00, 1.645E+00, 1.626E+00,           
     C 1.605E+00, 1.582E+00, 1.553E+00, 1.521E+00, 1.480E+00,           
     C 1.424E+00, 1.355E+00, 1.272E+00, 1.191E+00, 1.118E+00,           
     C 1.055E+00, 9.870E-01, 9.136E-01, 8.300E-01, 7.460E-01,           
     C 6.618E-01, 5.638E-01, 4.614E-01, 3.631E-01, 2.773E-01,           
     C 2.100E-01, 1.650E-01, 1.500E-01, 1.500E-01, 1.500E-01,           
     C 1.500E-01, 1.500E-01, 1.500E-01, 1.400E-01, 1.300E-01,           
     C 1.200E-01, 1.100E-01, 9.500E-02, 6.000E-02, 3.000E-02/           
C     DATA O2        /                                                  
      DATA AMOL17/                                                      
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.000E+05, 1.900E+05, 1.800E+05,           
     C 1.600E+05, 1.400E+05, 1.200E+05, 9.400E+04, 7.250E+04/           
C     DATA O2        /                                                  
      DATA AMOL27/                                                      
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.000E+05, 1.900E+05, 1.800E+05,           
     C 1.600E+05, 1.400E+05, 1.200E+05, 9.400E+04, 7.250E+04/           
C     DATA O2        /                                                  
      DATA AMOL37/                                                      
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.000E+05, 1.900E+05, 1.800E+05,           
     C 1.600E+05, 1.400E+05, 1.200E+05, 9.400E+04, 7.250E+04/           
C     DATA O2        /                                                  
      DATA AMOL47/                                                      
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.000E+05, 1.900E+05, 1.800E+05,           
     C 1.600E+05, 1.400E+05, 1.200E+05, 9.400E+04, 7.250E+04/           
C     DATA O2        /                                                  
      DATA AMOL57/                                                      
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.000E+05, 1.900E+05, 1.800E+05,           
     C 1.600E+05, 1.400E+05, 1.200E+05, 9.400E+04, 7.250E+04/           
C     DATA O2        /                                                  
      DATA AMOL67/                                                      
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05, 2.090E+05,           
     C 2.090E+05, 2.090E+05, 2.000E+05, 1.900E+05, 1.800E+05,           
     C 1.600E+05, 1.400E+05, 1.200E+05, 9.400E+04, 7.250E+04/           
C     DATA DENSITY   /                                                  
      DATA AMOL18/                                                      
     C 2.450E+19, 2.231E+19, 2.028E+19, 1.827E+19, 1.656E+19,           
     C 1.499E+19, 1.353E+19, 1.218E+19, 1.095E+19, 9.789E+18,           
     C 8.747E+18, 7.780E+18, 6.904E+18, 6.079E+18, 5.377E+18,           
     C 4.697E+18, 4.084E+18, 3.486E+18, 2.877E+18, 2.381E+18,           
     C 1.981E+18, 1.651E+18, 1.381E+18, 1.169E+18, 9.920E+17,           
     C 8.413E+17, 5.629E+17, 3.807E+17, 2.598E+17, 1.789E+17,           
     C 1.243E+17, 8.703E+16, 6.147E+16, 4.352E+16, 3.119E+16,           
     C 2.291E+16, 1.255E+16, 6.844E+15, 3.716E+15, 1.920E+15,           
     C 9.338E+14, 4.314E+14, 1.801E+14, 7.043E+13, 2.706E+13,           
     C 1.098E+13, 4.445E+12, 1.941E+12, 8.706E+11, 4.225E+11/           
      DATA AMOL28/                                                      
     C 2.496E+19, 2.257E+19, 2.038E+19, 1.843E+19, 1.666E+19,           
     C 1.503E+19, 1.351E+19, 1.212E+19, 1.086E+19, 9.716E+18,           
     C 8.656E+18, 7.698E+18, 6.814E+18, 6.012E+18, 5.141E+18,           
     C 4.368E+18, 3.730E+18, 3.192E+18, 2.715E+18, 2.312E+18,           
     C 1.967E+18, 1.677E+18, 1.429E+18, 1.223E+18, 1.042E+18,           
     C 8.919E+17, 6.050E+17, 4.094E+17, 2.820E+17, 1.927E+17,           
     C 1.338E+17, 9.373E+16, 6.624E+16, 4.726E+16, 3.398E+16,           
     C 2.500E+16, 1.386E+16, 7.668E+15, 4.196E+15, 2.227E+15,           
     C 1.109E+15, 4.996E+14, 1.967E+14, 7.204E+13, 2.541E+13,           
     C 9.816E+12, 3.816E+12, 1.688E+12, 8.145E+11, 4.330E+11/           
      DATA AMOL38/                                                      
     C 2.711E+19, 2.420E+19, 2.158E+19, 1.922E+19, 1.724E+19,           
     C 1.542E+19, 1.376E+19, 1.225E+19, 1.086E+19, 9.612E+18,           
     C 8.472E+18, 7.271E+18, 6.237E+18, 5.351E+18, 4.588E+18,           
     C 3.931E+18, 3.368E+18, 2.886E+18, 2.473E+18, 2.115E+18,           
     C 1.809E+18, 1.543E+18, 1.317E+18, 1.125E+18, 9.633E+17,           
     C 8.218E+17, 5.536E+17, 3.701E+17, 2.486E+17, 1.647E+17,           
     C 1.108E+17, 7.540E+16, 5.202E+16, 3.617E+16, 2.570E+16,           
     C 1.863E+16, 1.007E+16, 5.433E+15, 2.858E+15, 1.477E+15,           
     C 7.301E+14, 3.553E+14, 1.654E+14, 7.194E+13, 3.052E+13,           
     C 1.351E+13, 6.114E+12, 2.952E+12, 1.479E+12, 7.836E+11/           
      DATA AMOL48/                                                      
     C 2.549E+19, 2.305E+19, 2.080E+19, 1.873E+19, 1.682E+19,           
     C 1.508E+19, 1.357E+19, 1.216E+19, 1.088E+19, 9.701E+18,           
     C 8.616E+18, 7.402E+18, 6.363E+18, 5.471E+18, 4.699E+18,           
     C 4.055E+18, 3.476E+18, 2.987E+18, 2.568E+18, 2.208E+18,           
     C 1.899E+18, 1.632E+18, 1.403E+18, 1.207E+18, 1.033E+18,           
     C 8.834E+17, 6.034E+17, 4.131E+17, 2.839E+17, 1.938E+17,           
     C 1.344E+17, 9.402E+16, 6.670E+16, 4.821E+16, 3.516E+16,           
     C 2.581E+16, 1.421E+16, 7.946E+15, 4.445E+15, 2.376E+15,           
     C 1.198E+15, 5.311E+14, 2.022E+14, 7.221E+13, 2.484E+13,           
     C 9.441E+12, 3.624E+12, 1.610E+12, 7.951E+11, 4.311E+11/           
      DATA AMOL58/                                                      
     C 2.855E+19, 2.484E+19, 2.202E+19, 1.950E+19, 1.736E+19,           
     C 1.552E+19, 1.383E+19, 1.229E+19, 1.087E+19, 9.440E+18,           
     C 8.069E+18, 6.898E+18, 5.893E+18, 5.039E+18, 4.308E+18,           
     C 3.681E+18, 3.156E+18, 2.704E+18, 2.316E+18, 1.982E+18,           
     C 1.697E+18, 1.451E+18, 1.241E+18, 1.061E+18, 9.065E+17,           
     C 7.742E+17, 5.134E+17, 3.423E+17, 2.292E+17, 1.533E+17,           
     C 1.025E+17, 6.927E+16, 4.726E+16, 3.266E+16, 2.261E+16,           
     C 1.599E+16, 8.364E+15, 4.478E+15, 2.305E+15, 1.181E+15,           
     C 6.176E+14, 3.127E+14, 1.531E+14, 7.244E+13, 3.116E+13,           
     C 1.403E+13, 6.412E+12, 3.099E+12, 1.507E+12, 7.814E+11/           
      DATA AMOL68/                                                      
     C 2.548E+19, 2.313E+19, 2.094E+19, 1.891E+19, 1.704E+19,           
     C 1.532E+19, 1.373E+19, 1.228E+19, 1.094E+19, 9.719E+18,           
     C 8.602E+18, 7.589E+18, 6.489E+18, 5.546E+18, 4.739E+18,           
     C 4.050E+18, 3.462E+18, 2.960E+18, 2.530E+18, 2.163E+18,           
     C 1.849E+18, 1.575E+18, 1.342E+18, 1.144E+18, 9.765E+17,           
     C 8.337E+17, 5.640E+17, 3.830E+17, 2.524E+17, 1.761E+17,           
     C 1.238E+17, 8.310E+16, 5.803E+16, 4.090E+16, 2.920E+16,           
     C 2.136E+16, 1.181E+16, 6.426E+15, 3.386E+15, 1.723E+15,           
     C 8.347E+14, 3.832E+14, 1.711E+14, 7.136E+13, 2.924E+13,           
     C 1.189E+13, 5.033E+12, 2.144E+12, 9.688E+11, 5.114E+11/           
                                                                        
      DATA ANO        /                                                 
     C  3.00E-04,  3.00E-04,  3.00E-04,  3.00E-04,  3.00E-04,           
     C  3.00E-04,  3.00E-04,  3.00E-04,  3.00E-04,  3.00E-04,           
     C  3.00E-04,  3.00E-04,  3.00E-04,  2.99E-04,  2.95E-04,           
     C  2.83E-04,  2.68E-04,  2.52E-04,  2.40E-04,  2.44E-04,           
     C  2.55E-04,  2.77E-04,  3.07E-04,  3.60E-04,  4.51E-04,           
     C  6.85E-04,  1.28E-03,  2.45E-03,  4.53E-03,  7.14E-03,           
     C  9.34E-03,  1.12E-02,  1.19E-02,  1.17E-02,  1.10E-02,           
     C  1.03E-02,  1.01E-02,  1.01E-02,  1.03E-02,  1.15E-02,           
     C  1.61E-02,  2.68E-02,  7.01E-02,  2.13E-01,  7.12E-01,           
     C  2.08E+00,  4.50E+00,  7.98E+00,  1.00E+01,  1.00E+01/           
      DATA SO2       /                                                  
     C  3.00E-04,  2.74E-04,  2.36E-04,  1.90E-04,  1.46E-04,           
     C  1.18E-04,  9.71E-05,  8.30E-05,  7.21E-05,  6.56E-05,           
     C  6.08E-05,  5.79E-05,  5.60E-05,  5.59E-05,  5.64E-05,           
     C  5.75E-05,  5.75E-05,  5.37E-05,  4.78E-05,  3.97E-05,           
     C  3.19E-05,  2.67E-05,  2.28E-05,  2.07E-05,  1.90E-05,           
     C  1.75E-05,  1.54E-05,  1.34E-05,  1.21E-05,  1.16E-05,           
     C  1.21E-05,  1.36E-05,  1.65E-05,  2.10E-05,  2.77E-05,           
     C  3.56E-05,  4.59E-05,  5.15E-05,  5.11E-05,  4.32E-05,           
     C  2.83E-05,  1.33E-05,  5.56E-06,  2.24E-06,  8.96E-07,           
     C  3.58E-07,  1.43E-07,  5.73E-08,  2.29E-08,  9.17E-09/           
      DATA ANO2       /                                                 
     C  2.30E-05,  2.30E-05,  2.30E-05,  2.30E-05,  2.30E-05,           
     C  2.30E-05,  2.30E-05,  2.30E-05,  2.30E-05,  2.32E-05,           
     C  2.38E-05,  2.62E-05,  3.15E-05,  4.45E-05,  7.48E-05,           
     C  1.71E-04,  3.19E-04,  5.19E-04,  7.71E-04,  1.06E-03,           
     C  1.39E-03,  1.76E-03,  2.16E-03,  2.58E-03,  3.06E-03,           
     C  3.74E-03,  4.81E-03,  6.16E-03,  7.21E-03,  7.28E-03,           
     C  6.26E-03,  4.03E-03,  2.17E-03,  1.15E-03,  6.66E-04,           
     C  4.43E-04,  3.39E-04,  2.85E-04,  2.53E-04,  2.31E-04,           
     C  2.15E-04,  2.02E-04,  1.92E-04,  1.83E-04,  1.76E-04,           
     C  1.70E-04,  1.64E-04,  1.59E-04,  1.55E-04,  1.51E-04/           
      DATA ANH3       /                                                 
     C  5.00E-04,  5.00E-04,  4.63E-04,  3.80E-04,  2.88E-04,           
     C  2.04E-04,  1.46E-04,  9.88E-05,  6.48E-05,  3.77E-05,           
     C  2.03E-05,  1.09E-05,  6.30E-06,  3.12E-06,  1.11E-06,           
     C  4.47E-07,  2.11E-07,  1.10E-07,  6.70E-08,  3.97E-08,           
     C  2.41E-08,  1.92E-08,  1.72E-08,  1.59E-08,  1.44E-08,           
     C  1.23E-08,  9.37E-09,  6.35E-09,  3.68E-09,  1.82E-09,           
     C  9.26E-10,  2.94E-10,  8.72E-11,  2.98E-11,  1.30E-11,           
     C  7.13E-12,  4.80E-12,  3.66E-12,  3.00E-12,  2.57E-12,           
     C  2.27E-12,  2.04E-12,  1.85E-12,  1.71E-12,  1.59E-12,           
     C  1.48E-12,  1.40E-12,  1.32E-12,  1.25E-12,  1.19E-12/           
      DATA HNO3      /                                                  
     C  5.00E-05,  5.96E-05,  6.93E-05,  7.91E-05,  8.87E-05,           
     C  9.75E-05,  1.11E-04,  1.26E-04,  1.39E-04,  1.53E-04,           
     C  1.74E-04,  2.02E-04,  2.41E-04,  2.76E-04,  3.33E-04,           
     C  4.52E-04,  7.37E-04,  1.31E-03,  2.11E-03,  3.17E-03,           
     C  4.20E-03,  4.94E-03,  5.46E-03,  5.74E-03,  5.84E-03,           
     C  5.61E-03,  4.82E-03,  3.74E-03,  2.59E-03,  1.64E-03,           
     C  9.68E-04,  5.33E-04,  2.52E-04,  1.21E-04,  7.70E-05,           
     C  5.55E-05,  4.45E-05,  3.84E-05,  3.49E-05,  3.27E-05,           
     C  3.12E-05,  3.01E-05,  2.92E-05,  2.84E-05,  2.78E-05,           
     C  2.73E-05,  2.68E-05,  2.64E-05,  2.60E-05,  2.57E-05/           
      DATA OH        /                                                  
     C  4.40E-08,  4.40E-08,  4.40E-08,  4.40E-08,  4.40E-08,           
     C  4.40E-08,  4.40E-08,  4.41E-08,  4.45E-08,  4.56E-08,           
     C  4.68E-08,  4.80E-08,  4.94E-08,  5.19E-08,  5.65E-08,           
     C  6.75E-08,  8.25E-08,  1.04E-07,  1.30E-07,  1.64E-07,           
     C  2.16E-07,  3.40E-07,  5.09E-07,  7.59E-07,  1.16E-06,           
     C  2.18E-06,  5.00E-06,  1.17E-05,  3.40E-05,  8.35E-05,           
     C  1.70E-04,  2.85E-04,  4.06E-04,  5.11E-04,  5.79E-04,           
     C  6.75E-04,  9.53E-04,  1.76E-03,  3.74E-03,  7.19E-03,           
     C  1.12E-02,  1.13E-02,  6.10E-03,  1.51E-03,  2.42E-04,           
     C  4.47E-05,  1.77E-05,  1.19E-05,  1.35E-05,  2.20E-05/           
      DATA HF        /                                                  
     C  1.00E-08,  1.00E-08,  1.23E-08,  1.97E-08,  3.18E-08,           
     C  5.63E-08,  9.18E-08,  1.53E-07,  2.41E-07,  4.04E-07,           
     C  6.57E-07,  1.20E-06,  1.96E-06,  3.12E-06,  4.62E-06,           
     C  7.09E-06,  1.05E-05,  1.69E-05,  2.57E-05,  4.02E-05,           
     C  5.77E-05,  7.77E-05,  9.90E-05,  1.23E-04,  1.50E-04,           
     C  1.82E-04,  2.30E-04,  2.83E-04,  3.20E-04,  3.48E-04,           
     C  3.72E-04,  3.95E-04,  4.10E-04,  4.21E-04,  4.24E-04,           
     C  4.25E-04,  4.25E-04,  4.25E-04,  4.25E-04,  4.25E-04,           
     C  4.25E-04,  4.25E-04,  4.25E-04,  4.25E-04,  4.25E-04,           
     C  4.25E-04,  4.25E-04,  4.25E-04,  4.25E-04,  4.25E-04/           
      DATA HCL       /                                                  
     C  1.00E-03,  7.49E-04,  5.61E-04,  4.22E-04,  3.19E-04,           
     C  2.39E-04,  1.79E-04,  1.32E-04,  9.96E-05,  7.48E-05,           
     C  5.68E-05,  4.59E-05,  4.36E-05,  6.51E-05,  1.01E-04,           
     C  1.63E-04,  2.37E-04,  3.13E-04,  3.85E-04,  4.42E-04,           
     C  4.89E-04,  5.22E-04,  5.49E-04,  5.75E-04,  6.04E-04,           
     C  6.51E-04,  7.51E-04,  9.88E-04,  1.28E-03,  1.57E-03,           
     C  1.69E-03,  1.74E-03,  1.76E-03,  1.79E-03,  1.80E-03,           
     C  1.80E-03,  1.80E-03,  1.80E-03,  1.80E-03,  1.80E-03,           
     C  1.80E-03,  1.80E-03,  1.80E-03,  1.80E-03,  1.80E-03,           
     C  1.80E-03,  1.80E-03,  1.80E-03,  1.80E-03,  1.80E-03/           
      DATA HBR       /                                                  
     C  1.70E-06,  1.70E-06,  1.70E-06,  1.70E-06,  1.70E-06,           
     C  1.70E-06,  1.70E-06,  1.70E-06,  1.70E-06,  1.70E-06,           
     C  1.70E-06,  1.70E-06,  1.70E-06,  1.70E-06,  1.70E-06,           
     C  1.70E-06,  1.70E-06,  1.70E-06,  1.70E-06,  1.70E-06,           
     C  1.70E-06,  1.70E-06,  1.70E-06,  1.70E-06,  1.70E-06,           
     C  1.71E-06,  1.76E-06,  1.90E-06,  2.26E-06,  2.82E-06,           
     C  3.69E-06,  4.91E-06,  6.13E-06,  6.85E-06,  7.08E-06,           
     C  7.14E-06,  7.15E-06,  7.15E-06,  7.15E-06,  7.15E-06,           
     C  7.15E-06,  7.15E-06,  7.15E-06,  7.15E-06,  7.15E-06,           
     C  7.15E-06,  7.15E-06,  7.15E-06,  7.15E-06,  7.15E-06/           
      DATA HI        /                                                  
     C  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,           
     C  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,           
     C  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,           
     C  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,           
     C  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,           
     C  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,           
     C  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,           
     C  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,           
     C  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,           
     C  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06,  3.00E-06/           
      DATA CLO       /                                                  
     C  1.00E-08,  1.00E-08,  1.00E-08,  1.00E-08,  1.00E-08,           
     C  1.00E-08,  1.00E-08,  1.00E-08,  1.01E-08,  1.05E-08,           
     C  1.21E-08,  1.87E-08,  3.18E-08,  5.61E-08,  9.99E-08,           
     C  1.78E-07,  3.16E-07,  5.65E-07,  1.04E-06,  2.04E-06,           
     C  4.64E-06,  8.15E-06,  1.07E-05,  1.52E-05,  2.24E-05,           
     C  3.97E-05,  8.48E-05,  1.85E-04,  3.57E-04,  5.08E-04,           
     C  6.07E-04,  5.95E-04,  4.33E-04,  2.51E-04,  1.56E-04,           
     C  1.04E-04,  7.69E-05,  6.30E-05,  5.52E-05,  5.04E-05,           
     C  4.72E-05,  4.49E-05,  4.30E-05,  4.16E-05,  4.03E-05,           
     C  3.93E-05,  3.83E-05,  3.75E-05,  3.68E-05,  3.61E-05/           
      DATA OCS       /                                                  
     C  6.00E-04,  5.90E-04,  5.80E-04,  5.70E-04,  5.62E-04,           
     C  5.55E-04,  5.48E-04,  5.40E-04,  5.32E-04,  5.25E-04,           
     C  5.18E-04,  5.09E-04,  4.98E-04,  4.82E-04,  4.60E-04,           
     C  4.26E-04,  3.88E-04,  3.48E-04,  3.09E-04,  2.74E-04,           
     C  2.41E-04,  2.14E-04,  1.88E-04,  1.64E-04,  1.37E-04,           
     C  1.08E-04,  6.70E-05,  2.96E-05,  1.21E-05,  4.31E-06,           
     C  1.60E-06,  6.71E-07,  4.35E-07,  3.34E-07,  2.80E-07,           
     C  2.47E-07,  2.28E-07,  2.16E-07,  2.08E-07,  2.03E-07,           
     C  1.98E-07,  1.95E-07,  1.92E-07,  1.89E-07,  1.87E-07,           
     C  1.85E-07,  1.83E-07,  1.81E-07,  1.80E-07,  1.78E-07/           
      DATA H2CO      /                                                  
     C  2.40E-03,  1.07E-03,  4.04E-04,  2.27E-04,  1.40E-04,           
     C  1.00E-04,  7.44E-05,  6.04E-05,  5.01E-05,  4.22E-05,           
     C  3.63E-05,  3.43E-05,  3.39E-05,  3.50E-05,  3.62E-05,           
     C  3.62E-05,  3.58E-05,  3.50E-05,  3.42E-05,  3.39E-05,           
     C  3.43E-05,  3.68E-05,  4.03E-05,  4.50E-05,  5.06E-05,           
     C  5.82E-05,  7.21E-05,  8.73E-05,  1.01E-04,  1.11E-04,           
     C  1.13E-04,  1.03E-04,  7.95E-05,  4.82E-05,  1.63E-05,           
     C  5.10E-06,  2.00E-06,  1.05E-06,  6.86E-07,  5.14E-07,           
     C  4.16E-07,  3.53E-07,  3.09E-07,  2.76E-07,  2.50E-07,           
     C  2.30E-07,  2.13E-07,  1.98E-07,  1.86E-07,  1.75E-07/           
      DATA HOCL      /                                                  
     C  7.70E-06,  1.06E-05,  1.22E-05,  1.14E-05,  9.80E-06,           
     C  8.01E-06,  6.42E-06,  5.42E-06,  4.70E-06,  4.41E-06,           
     C  4.34E-06,  4.65E-06,  5.01E-06,  5.22E-06,  5.60E-06,           
     C  6.86E-06,  8.77E-06,  1.20E-05,  1.63E-05,  2.26E-05,           
     C  3.07E-05,  4.29E-05,  5.76E-05,  7.65E-05,  9.92E-05,           
     C  1.31E-04,  1.84E-04,  2.45E-04,  2.96E-04,  3.21E-04,           
     C  3.04E-04,  2.48E-04,  1.64E-04,  9.74E-05,  4.92E-05,           
     C  2.53E-05,  1.50E-05,  1.05E-05,  8.34E-06,  7.11E-06,           
     C  6.33E-06,  5.78E-06,  5.37E-06,  5.05E-06,  4.78E-06,           
     C  4.56E-06,  4.37E-06,  4.21E-06,  4.06E-06,  3.93E-06/           
      DATA AN2        /                                                 
     C  7.81E+05,  7.81E+05,  7.81E+05,  7.81E+05,  7.81E+05,           
     C  7.81E+05,  7.81E+05,  7.81E+05,  7.81E+05,  7.81E+05,           
     C  7.81E+05,  7.81E+05,  7.81E+05,  7.81E+05,  7.81E+05,           
     C  7.81E+05,  7.81E+05,  7.81E+05,  7.81E+05,  7.81E+05,           
     C  7.81E+05,  7.81E+05,  7.81E+05,  7.81E+05,  7.81E+05,           
     C  7.81E+05,  7.81E+05,  7.81E+05,  7.81E+05,  7.81E+05,           
     C  7.81E+05,  7.81E+05,  7.81E+05,  7.81E+05,  7.81E+05,           
     C  7.81E+05,  7.81E+05,  7.81E+05,  7.81E+05,  7.81E+05,           
     C  7.81E+05,  7.81E+05,  7.81E+05,  7.80E+05,  7.79E+05,           
     C  7.77E+05,  7.74E+05,  7.70E+05,  7.65E+05,  7.60E+05/           
      DATA HCN       /                                                  
     C  1.70E-04,  1.65E-04,  1.63E-04,  1.61E-04,  1.60E-04,           
     C  1.60E-04,  1.60E-04,  1.60E-04,  1.60E-04,  1.60E-04,           
     C  1.60E-04,  1.60E-04,  1.60E-04,  1.59E-04,  1.57E-04,           
     C  1.55E-04,  1.52E-04,  1.49E-04,  1.45E-04,  1.41E-04,           
     C  1.37E-04,  1.34E-04,  1.30E-04,  1.25E-04,  1.19E-04,           
     C  1.13E-04,  1.05E-04,  9.73E-05,  9.04E-05,  8.46E-05,           
     C  8.02E-05,  7.63E-05,  7.30E-05,  7.00E-05,  6.70E-05,           
     C  6.43E-05,  6.21E-05,  6.02E-05,  5.88E-05,  5.75E-05,           
     C  5.62E-05,  5.50E-05,  5.37E-05,  5.25E-05,  5.12E-05,           
     C  5.00E-05,  4.87E-05,  4.75E-05,  4.62E-05,  4.50E-05/           
      DATA CH3CL     /                                                  
     C  7.00E-04,  6.70E-04,  6.43E-04,  6.22E-04,  6.07E-04,           
     C  6.02E-04,  6.00E-04,  6.00E-04,  5.98E-04,  5.94E-04,           
     C  5.88E-04,  5.79E-04,  5.66E-04,  5.48E-04,  5.28E-04,           
     C  5.03E-04,  4.77E-04,  4.49E-04,  4.21E-04,  3.95E-04,           
     C  3.69E-04,  3.43E-04,  3.17E-04,  2.86E-04,  2.48E-04,           
     C  1.91E-04,  1.10E-04,  4.72E-05,  1.79E-05,  7.35E-06,           
     C  3.03E-06,  1.32E-06,  8.69E-07,  6.68E-07,  5.60E-07,           
     C  4.94E-07,  4.56E-07,  4.32E-07,  4.17E-07,  4.05E-07,           
     C  3.96E-07,  3.89E-07,  3.83E-07,  3.78E-07,  3.73E-07,           
     C  3.69E-07,  3.66E-07,  3.62E-07,  3.59E-07,  3.56E-07/           
      DATA H2O2      /                                                  
     C  2.00E-04,  1.95E-04,  1.92E-04,  1.89E-04,  1.84E-04,           
     C  1.77E-04,  1.66E-04,  1.49E-04,  1.23E-04,  9.09E-05,           
     C  5.79E-05,  3.43E-05,  1.95E-05,  1.08E-05,  6.59E-06,           
     C  4.20E-06,  2.94E-06,  2.30E-06,  2.24E-06,  2.68E-06,           
     C  3.68E-06,  5.62E-06,  1.03E-05,  1.97E-05,  3.70E-05,           
     C  6.20E-05,  1.03E-04,  1.36E-04,  1.36E-04,  1.13E-04,           
     C  8.51E-05,  6.37E-05,  5.17E-05,  4.44E-05,  3.80E-05,           
     C  3.48E-05,  3.62E-05,  5.25E-05,  1.26E-04,  3.77E-04,           
     C  1.12E-03,  2.00E-03,  1.68E-03,  4.31E-04,  4.98E-05,           
     C  6.76E-06,  8.38E-07,  9.56E-08,  1.00E-08,  1.00E-09/           
      DATA C2H2      /                                                  
     C  3.00E-04,  1.72E-04,  9.57E-05,  6.74E-05,  5.07E-05,           
     C  3.99E-05,  3.19E-05,  2.80E-05,  2.55E-05,  2.40E-05,           
     C  2.27E-05,  2.08E-05,  1.76E-05,  1.23E-05,  7.32E-06,           
     C  4.52E-06,  2.59E-06,  1.55E-06,  8.63E-07,  5.30E-07,           
     C  3.10E-07,  1.89E-07,  1.04E-07,  5.75E-08,  2.23E-08,           
     C  8.51E-09,  4.09E-09,  2.52E-09,  1.86E-09,  1.52E-09,           
     C  1.32E-09,  1.18E-09,  1.08E-09,  9.97E-10,  9.34E-10,           
     C  8.83E-10,  8.43E-10,  8.10E-10,  7.83E-10,  7.60E-10,           
     C  7.40E-10,  7.23E-10,  7.07E-10,  6.94E-10,  6.81E-10,           
     C  6.70E-10,  6.59E-10,  6.49E-10,  6.40E-10,  6.32E-10/           
      DATA C2H6      /                                                  
     C  2.00E-03,  2.00E-03,  2.00E-03,  2.00E-03,  1.98E-03,           
     C  1.95E-03,  1.90E-03,  1.85E-03,  1.79E-03,  1.72E-03,           
     C  1.58E-03,  1.30E-03,  9.86E-04,  7.22E-04,  4.96E-04,           
     C  3.35E-04,  2.14E-04,  1.49E-04,  1.05E-04,  7.96E-05,           
     C  6.01E-05,  4.57E-05,  3.40E-05,  2.60E-05,  1.89E-05,           
     C  1.22E-05,  5.74E-06,  2.14E-06,  8.49E-07,  3.42E-07,           
     C  1.34E-07,  5.39E-08,  2.25E-08,  1.04E-08,  6.57E-09,           
     C  4.74E-09,  3.79E-09,  3.28E-09,  2.98E-09,  2.79E-09,           
     C  2.66E-09,  2.56E-09,  2.49E-09,  2.43E-09,  2.37E-09,           
     C  2.33E-09,  2.29E-09,  2.25E-09,  2.22E-09,  2.19E-09/           
      DATA PH3       /                                                  
     C  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,           
     C  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,           
     C  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,           
     C  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,           
     C  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,           
     C  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,           
     C  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,           
     C  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,           
     C  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,           
     C  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14,  1.00E-14/           
      END                                                               
      BLOCK DATA O3UVFD                                                 
C>    BLOCK DATA                                                        
      COMMON /O3UVF / V1O1,V2O1,DVO1,NPT1,C02281(80),C02361(53)         
C                                                                       
C        OZONE UV  VISIBLE ABSORPTION COEFFICIENTS                      
C                     (CM-ATM)-1                                        
C     DATA DERIVED FROM MOLINA & MOLINA, JGR,91,14501-14508,1986.       
C     VALUES BETWEEN 245 AND 185NM (40800 AND 54054CM-1) USED AS        
C     DIRECT AVERAGE WITH NO TEMPERATURE DEPENDENCE.                    
C                                                                       
C     O3 LOCATION  1    V =  40800  CM-1                                
C     O3 LOCATION  133  V =  54054  CM-1                                
C        DV = 100  CM-1                                                 
C                                                                       
      DATA V1O1,V2O1,DVO1,NPT1/ 40800.,54000.,100.,133/                 
      DATA C02281/                                                      
     C 9.91204E+02, 9.76325E+02, 9.72050E+02, 9.51049E+02, 9.23530E+02, 
     C 9.02306E+02, 8.90510E+02, 8.60115E+02, 8.39094E+02, 8.27926E+02, 
     C 7.95525E+02, 7.73583E+02, 7.55018E+02, 7.31076E+02, 7.10415E+02, 
     C 6.87747E+02, 6.66639E+02, 6.39484E+02, 6.27101E+02, 6.01019E+02, 
     C 5.77594E+02, 5.60403E+02, 5.40837E+02, 5.21289E+02, 4.99329E+02, 
     C 4.81742E+02, 4.61608E+02, 4.45707E+02, 4.28261E+02, 4.09672E+02, 
     C 3.93701E+02, 3.77835E+02, 3.61440E+02, 3.45194E+02, 3.30219E+02, 
     C 3.15347E+02, 3.01164E+02, 2.87788E+02, 2.74224E+02, 2.61339E+02, 
     C 2.48868E+02, 2.36872E+02, 2.25747E+02, 2.14782E+02, 2.03997E+02, 
     C 1.94281E+02, 1.84525E+02, 1.75275E+02, 1.67151E+02, 1.58813E+02, 
     C 1.50725E+02, 1.43019E+02, 1.35825E+02, 1.28878E+02, 1.22084E+02, 
     C 1.15515E+02, 1.09465E+02, 1.03841E+02, 9.83780E+01, 9.31932E+01, 
     C 8.83466E+01, 8.38631E+01, 7.96631E+01, 7.54331E+01, 7.13805E+01, 
     C 6.78474E+01, 6.44340E+01, 6.13104E+01, 5.81777E+01, 5.53766E+01, 
     C 5.27036E+01, 5.03555E+01, 4.82633E+01, 4.61483E+01, 4.42014E+01, 
     C 4.23517E+01, 4.07774E+01, 3.93060E+01, 3.80135E+01, 3.66348E+01/ 
      DATA C02361/                                                      
     C 3.53665E+01, 3.47884E+01, 3.39690E+01, 3.34288E+01, 3.29135E+01, 
     C 3.23104E+01, 3.18875E+01, 3.16800E+01, 3.15925E+01, 3.12932E+01, 
     C 3.12956E+01, 3.15522E+01, 3.14950E+01, 3.15924E+01, 3.19059E+01, 
     C 3.23109E+01, 3.27873E+01, 3.33788E+01, 3.39804E+01, 3.44925E+01, 
     C 3.50502E+01, 3.55853E+01, 3.59416E+01, 3.68933E+01, 3.78284E+01, 
     C 3.86413E+01, 3.98049E+01, 4.04700E+01, 4.12958E+01, 4.23482E+01, 
     C 4.31203E+01, 4.41885E+01, 4.52651E+01, 4.61492E+01, 4.70493E+01, 
     C 4.80497E+01, 4.90242E+01, 4.99652E+01, 5.10316E+01, 5.21510E+01, 
     C 5.32130E+01, 5.43073E+01, 5.56207E+01, 5.61756E+01, 5.66799E+01, 
     C 5.85545E+01, 5.92409E+01, 5.96168E+01, 6.12497E+01, 6.20231E+01, 
     C 6.24621E+01, 6.34160E+01, 6.43622E+01/                           
      END                                                               
      BLOCK DATA PHSDTA                                                 
C>    BLOCK DATA                                                        
CCC                                                                     
CCC   ROUTINE TO STORE TABLE TO CALL UP PROPER PHASE FUNCTION           
CCC   AND 70 AVERAGE PHASE FUNCTIONS                                    
CCC                                                                     
C     COMMON/MNMPHS/ MNUM(27,26),PHSFNC(34,70)                          
      COMMON/MNMPHS/MUM1(27),MUM2(27),MUM3(27),MUM4(27),MUM5(27),       
     1MUM6(27),MUM7(27),MUM8(27),MUM9(27),MUM10(27),MUM11(27),MUM12(27),
     2MUM13(27),MUM14(27),MUM15(27),MUM16(27),MUM17(27),MUM18(27),      
     3MUM19(27),MUM20(27),MUM21(27),MUM22(27),MUM23(27),MUM24(27),      
     4MUM25(27),MUM26(27),PHSF1(34),PHSF2(34),PHSF3(34),PHSF4(34),      
     5PHSF5(34),PHSF6(34),PHSF7(34),PHSF8(34),PHSF9(34),                
     6PHSF10(34),PHSF11(34),PHSF12(34),PHSF13(34),PHSF14(34),PHSF15(34),
     7PHSF16(34),PHSF17(34),PHSF18(34),PHSF19(34),PHSF20(34),PHSF21(34),
     8PHSF22(34),PHSF23(34),PHSF24(34),PHSF25(34),PHSF26(34),PHSF27(34),
     9PHSF28(34),PHSF29(34),PHSF30(34),PHSF31(34),PHSF32(34),PHSF33(34),
     9PHSF34(34),PHSF35(34),PHSF36(34),PHSF37(34),PHSF38(34),PHSF39(34),
     1PHSF40(34),PHSF41(34),PHSF42(34),PHSF43(34),PHSF44(34),PHSF45(34),
     2PHSF46(34),PHSF47(34),PHSF48(34),PHSF49(34),PHSF50(34),PHSF51(34),
     3PHSF52(34),PHSF53(34),PHSF54(34),PHSF55(34),PHSF56(34),PHSF57(34),
     4PHSF58(34),PHSF59(34),PHSF60(34),PHSF61(34),PHSF62(34),PHSF63(34),
     5PHSF64(34),PHSF65(34),PHSF66(34),PHSF67(34),PHSF68(34),PHSF69(34),
     6PHSF70(34)                                                        
      DATA MUM1/ 3, 5, 4, 4, 4, 6, 8,22,21,22,26,26,                    
     C26,27,29, 1,34,34,34,34,33,33,36,36,36,36,23/                     
      DATA MUM2/ 3, 5, 4, 4, 4, 6, 8,22,21,21,22,26,                    
     C26,27,29, 1,34,33,33,33,46,46,34,34,36,36,23/                     
      DATA MUM3/ 3, 5, 5, 5,19, 6, 8,21, 7,21,22, 8,                    
     C26, 1,27, 1,46,46,46,29,29,46,34,34,34,36,23/                     
      DATA MUM4/58,58,62,62,62,63,63,63,60,64,64,64,                    
     C21,70,65,65,65,65,66,66,65,27,29,29,46,33,34/                     
      DATA MUM5/59,11,11,11,20,20,20,28,28,16,16,16,                    
     C16,37,37,37,32,36,32,32,32,36,23,23,23,38,25/                     
      DATA MUM6/ 9,59,11,13,13,26,26,26,27,29,46,28,                    
     C28,29,28,28,37,37,37,37,34,36,36,36,23,23,38/                     
      DATA MUM7/ 9, 9,14,14,14,15,15,15,66,65,27,26,                    
     C29,27,29,29,29,29,29,29,46,34,36,36,36,23,23/                     
      DATA MUM8/57,57,69,69,69,68,68,68,61,70,60,21,                    
     C 7,66, 1, 1, 1, 1,66,66, 1,29,46,46,33,34,36/                     
      DATA MUM9/ 2,18,18,19,19, 6,22,22,22,22,22,22,                    
     C29,29,46,29,34,34,34,34,34,34,36,36,36,23,23/                     
      DATA MUM10/ 2, 3,18,18,19, 6,22,22,21,22,22,22,                   
     C27,27,29,27,33,33,46,46,46,33,34,34,36,36,23/                     
      DATA MUM11/ 2, 3,18,18,19, 6,22,21, 7,22,22,22,                   
     C27,27,27,27,46,29,29,29,29,46,33,34,34,36,36/                     
      DATA MUM12/58,58,62,62,62,62,63,63,60,64,64,64,                   
     C21,60, 7,65,65,65,66,67,65, 7,27,27,29,46,33/                     
      DATA MUM13/10,59,11,11,13,20,20,28,28,16,16,16,                   
     C16,37,37,37,32,36,32,32,32,36,23,23,23,38,25/                     
      DATA MUM14/10,10,14,14,13,13,26,26,27,29,29,28,                   
     C28,29,28,28,37,37,37,37,33,32,36,36,23,23,38/                     
      DATA MUM15/10,69,14,14,14,15,15, 7,66,65,27,26,                   
     C29, 1,29,29,29,29,29,29,46,34,36,36,36,23,23/                     
      DATA MUM16/47,57,69,69,69,68,68,68,61,70,60,21,                   
     C 7,66, 1, 1, 1, 1,66,66, 1,29,46,46,33,34,36/                     
      DATA MUM17/29,16,32,32,36,36,23,23,23,38,38,38,                   
     C25,25,25,25,25,25,25,25,35,35,35,35,35,40,39/                     
      DATA MUM18/29,16,32,32,32,36,23,23,23,38,38,38,                   
     C38,25,25,25,25,25,25,25,35,35,35,35,35,40,39/                     
      DATA MUM19/29,28,37,37,32,36,36,23,23,23,23,23,                   
     C38,25,25,25,25,25,25,25,35,35,35,35,35,40,40/                     
      DATA MUM20/15,26,28,28,37,37,32,32,32,23,23,23,                   
     C23,38,38,38,38,25,25,25,25,35,35,35,35,35,40/                     
      DATA MUM21/20,20,37,37,24,23,38,25,25,35,35,35,                   
     C40,40,39,39,39,39,39,39,39,39,39,39,39,39,39/                     
      DATA MUM22/ 7,20,16,37,32,32,24,23,23,23,38,38,                   
     C25,25,35,35,35,25,35,35,40,40,40,40,40,39,39/                     
      DATA MUM23/17,51,13,13,20,20,28,28,37,37,37,37,                   
     C32,32,24,24,23,23,38,38,38,38,38,38,38,25,35/                     
      DATA MUM24/47,30,55,55,55,13,15,12,42,12, 1,26,                   
     C44,52,44,44,45,45,45,45,24,23,38,38,38,25,35/                     
      DATA MUM25/48,53,31,31,31,41,41,41,49,17,17,17,                   
     C56,50,43,43,67,61,42,54,42,12,12,12,12, 1,44/                     
      DATA MUM26/59,59,11,11,20,20,28,28,46,46,46,46,                   
     C33,33,34,34,34,34,36,36,36,36,23,23,23,38,38/                     
      DATA PHSF1/                                                       
     C     4.81387,     4.26047,     3.42600,     2.74953,     2.21493, 
     C     1.78847,     1.44553,      .94765,      .62704,      .42183, 
     C      .28987,      .20375,      .14632,      .10720,      .05307, 
     C      .02882,      .01703,      .01093,      .00764,      .00582, 
     C      .00482,      .00431,      .00418,      .00411,      .00409, 
     C      .00412,      .00419,      .00428,      .00436,      .00442, 
     C      .00443,      .00433,      .00421,      .00435/              
      DATA PHSF2/                                                       
     C   100.88000,     4.36700,     2.73667,     2.10567,     1.68067, 
     C     1.36333,     1.11900,      .77513,      .55317,      .40393, 
     C      .30047,      .22690,      .17367,      .13437,      .07407, 
     C      .04350,      .02714,      .01795,      .01266,      .00958, 
     C      .00780,      .00683,      .00656,      .00639,      .00633, 
     C      .00636,      .00649,      .00669,      .00682,      .00671, 
     C      .00626,      .00582,      .00606,      .00646/              
      DATA PHSF3/                                                       
     C    75.07600,     3.77580,     2.33100,     1.82620,     1.49120, 
     C     1.23720,     1.03680,      .74470,      .54766,      .41000, 
     C      .31120,      .23880,      .18506,      .14476,      .08148, 
     C      .04851,      .03047,      .02022,      .01431,      .01086, 
     C      .00886,      .00785,      .00763,      .00756,      .00762, 
     C      .00780,      .00809,      .00843,      .00868,      .00861, 
     C      .00813,      .00790,      .00871,      .00948/              
      DATA PHSF4/                                                       
     C    14.11167,     3.29400,     1.58300,     1.07677,      .85635, 
     C      .73207,      .64758,      .52827,      .43880,      .36565, 
     C      .30452,      .25337,      .21070,      .17523,      .11108, 
     C      .07169,      .04755,      .03283,      .02388,      .01855, 
     C      .01557,      .01420,      .01396,      .01397,      .01424, 
     C      .01473,      .01545,      .01641,      .01758,      .01894, 
     C      .01999,      .02139,      .02376,      .02512/              
      DATA PHSF5/                                                       
     C    31.33400,     3.01260,     1.63600,     1.27260,     1.08020, 
     C      .94204,      .83026,      .65326,      .51696,      .40994, 
     C      .32558,      .25926,      .20702,      .16590,      .09733, 
     C      .05921,      .03764,      .02534,      .01809,      .01382, 
     C      .01155,      .01059,      .01051,      .01070,      .01115, 
     C      .01192,      .01303,      .01447,      .01610,      .01727, 
     C      .01780,      .01838,      .02091,      .02258/              
      DATA PHSF6/                                                       
     C    13.63333,     5.76067,     2.86717,     1.73500,     1.19267, 
     C      .89500,      .71377,      .50818,      .39290,      .31612, 
     C      .25947,      .21512,      .17950,      .15035,      .09782, 
     C      .06489,      .04418,      .03126,      .02336,      .01872, 
     C      .01625,      .01521,      .01510,      .01520,      .01550, 
     C      .01600,      .01670,      .01758,      .01860,      .01958, 
     C      .02003,      .01962,      .01969,      .02072/              
      DATA PHSF7/                                                       
     C    10.69213,     7.32563,     4.66850,     3.15175,     2.23700, 
     C     1.65050,     1.25550,      .77671,      .51168,      .35194, 
     C      .24998,      .18219,      .13565,      .10291,      .05530, 
     C      .03232,      .02036,      .01381,      .01015,      .00813, 
     C      .00711,      .00672,      .00671,      .00680,      .00698, 
     C      .00723,      .00753,      .00783,      .00813,      .00841, 
     C      .00864,      .00843,      .00793,      .00865/              
      DATA PHSF8/                                                       
     C    10.29225,     5.75700,     3.34100,     2.19450,     1.56850, 
     C     1.18950,      .94123,      .64033,      .46530,      .35098, 
     C      .27068,      .21203,      .16803,      .13445,      .07989, 
     C      .04975,      .03251,      .02247,      .01667,      .01344, 
     C      .01188,      .01148,      .01166,      .01210,      .01285, 
     C      .01392,      .01522,      .01656,      .01776,      .01897, 
     C      .02003,      .01932,      .01776,      .02043/              
      DATA PHSF9/                                                       
     C   232.30000,    13.73667,     3.92300,     1.97167,     1.29767, 
     C      .97050,      .77753,      .55393,      .41583,      .31763, 
     C      .24957,      .19523,      .15503,      .12260,      .06875, 
     C      .04015,      .02414,      .01485,      .01040,      .00803, 
     C      .00674,      .00569,      .00549,      .00550,      .00615, 
     C      .00775,      .01205,      .01820,      .02141,      .02076, 
     C      .02123,      .02409,      .03397,      .05439/              
      DATA PHSF10/                                                      
     C   286.85000,    20.19500,     5.34175,     2.25050,     1.24273, 
     C      .81960,      .60855,      .40505,      .30698,      .24148, 
     C      .19903,      .16210,      .13158,      .10705,      .06313, 
     C      .03807,      .02275,      .01373,      .00983,      .00704, 
     C      .00512,      .00400,      .00412,      .00401,      .00456, 
     C      .00580,      .00954,      .01947,      .03101,      .03784, 
     C      .04018,      .04524,      .06312,      .08295/              
      DATA PHSF11/                                                      
     C    15.36571,     6.08614,     3.15543,     1.98500,     1.39671, 
     C     1.05749,      .84297,      .58904,      .44120,      .34216, 
     C      .27140,      .21837,      .17669,      .14371,      .08723, 
     C      .05498,      .03568,      .02444,      .01753,      .01339, 
     C      .01087,      .00986,      .00983,      .01019,      .01094, 
     C      .01243,      .01473,      .01871,      .02423,      .03204, 
     C      .03592,      .03792,      .04492,      .05004/              
      DATA PHSF12/                                                      
     C     5.64100,     5.44440,     4.90680,     4.15680,     3.34180, 
     C     2.57840,     1.93040,     1.03104,      .54702,      .30330, 
     C      .18026,      .11514,      .07816,      .05557,      .02729, 
     C      .01547,      .00986,      .00697,      .00542,      .00457, 
     C      .00413,      .00392,      .00387,      .00385,      .00385, 
     C      .00385,      .00385,      .00386,      .00391,      .00401, 
     C      .00400,      .00368,      .00352,      .00365/              
      DATA PHSF13/                                                      
     C     8.90311,     6.06467,     3.93056,     2.63178,     1.82878, 
     C     1.32733,     1.00856,      .65342,      .46637,      .34863, 
     C      .26662,      .20709,      .16222,      .12811,      .07347, 
     C      .04425,      .02794,      .01867,      .01336,      .01033, 
     C      .00874,      .00818,      .00837,      .00894,      .01001, 
     C      .01171,      .01423,      .01759,      .02129,      .02494, 
     C      .02767,      .02690,      .02658,      .03550/              
      DATA PHSF14/                                                      
     C    41.20875,    11.84363,     5.00750,     2.73850,     1.74425, 
     C     1.23475,      .93516,      .60986,      .43641,      .32733, 
     C      .24819,      .19145,      .14831,      .11555,      .06356, 
     C      .03649,      .02176,      .01390,      .00974,      .00759, 
     C      .00657,      .00643,      .00671,      .00741,      .00906, 
     C      .01210,      .01618,      .01839,      .01979,      .02104, 
     C      .02356,      .02652,      .02694,      .04004/              
      DATA PHSF15/                                                      
     C     7.98100,     5.58389,     3.81067,     2.75011,     2.05900, 
     C     1.58178,     1.24011,      .80424,      .55144,      .39021, 
     C      .28203,      .20701,      .15369,      .11570,      .05985, 
     C      .03329,      .01999,      .01295,      .00920,      .00726, 
     C      .00645,      .00646,      .00683,      .00743,      .00833, 
     C      .00942,      .01038,      .01112,      .01187,      .01290, 
     C      .01451,      .01415,      .01176,      .01646/              
      DATA PHSF16/                                                      
     C     1.52473,     1.44645,     1.30800,     1.16736,     1.03716, 
     C      .92088,      .81802,      .64725,      .51405,      .40964, 
     C      .32742,      .26255,      .21129,      .17075,      .10236, 
     C      .06361,      .04130,      .02819,      .02041,      .01583, 
     C      .01330,      .01222,      .01213,      .01235,      .01288, 
     C      .01373,      .01491,      .01635,      .01784,      .01906, 
     C      .02003,      .02225,      .02715,      .03082/              
      DATA PHSF17/                                                      
     C   143.02500,    55.03750,    11.00250,     3.10675,     1.29675, 
     C      .67675,      .40423,      .18580,      .10582,      .06884, 
     C      .04883,      .03665,      .02858,      .02291,      .01418, 
     C      .00942,      .00664,      .00497,      .00397,      .00337, 
     C      .00302,      .00283,      .00277,      .00273,      .00272, 
     C      .00275,      .00283,      .00298,      .00314,      .00324, 
     C      .00332,      .00347,      .00373,      .00359/              
      DATA PHSF18/                                                      
     C    26.74167,     3.70000,     1.73800,     1.24150,     1.02157, 
     C      .88398,      .78022,      .62040,      .49727,      .39937, 
     C      .32113,      .25863,      .20880,      .16910,      .10153, 
     C      .06289,      .04050,      .02733,      .01952,      .01491, 
     C      .01225,      .01083,      .01046,      .01025,      .01017, 
     C      .01020,      .01030,      .01043,      .01053,      .01059, 
     C      .01061,      .01071,      .01107,      .01136/              
      DATA PHSF19/                                                      
     C    16.76800,     4.67840,     2.10000,     1.29420,      .94964, 
     C      .76794,      .65496,      .51386,      .41986,      .34756, 
     C      .28896,      .24060,      .20054,      .16730,      .10712, 
     C      .06978,      .04668,      .03245,      .02379,      .01863, 
     C      .01572,      .01429,      .01397,      .01384,      .01389, 
     C      .01407,      .01438,      .01481,      .01529,      .01572, 
     C      .01603,      .01613,      .01637,      .01668/              
      DATA PHSF20/                                                      
     C     3.35750,     2.77033,     2.20467,     1.77208,     1.43950, 
     C     1.18167,      .98083,      .69731,      .51368,      .38864, 
     C      .29989,      .23472,      .18552,      .14785,      .08680, 
     C      .05339,      .03443,      .02340,      .01689,      .01308, 
     C      .01097,      .01015,      .01022,      .01062,      .01145, 
     C      .01289,      .01512,      .01829,      .02228,      .02580, 
     C      .02615,      .02523,      .02990,      .03617/              
      DATA PHSF21/                                                      
     C    13.35245,     7.86691,     4.51555,     2.89018,     1.99645, 
     C     1.45664,     1.10655,      .69522,      .47093,      .33483, 
     C      .24620,      .18557,      .14266,      .11148,      .06369, 
     C      .03890,      .02523,      .01742,      .01294,      .01044, 
     C      .00921,      .00881,      .00886,      .00906,      .00940, 
     C      .00985,      .01039,      .01098,      .01163,      .01232, 
     C      .01277,      .01220,      .01131,      .01247/              
      DATA PHSF22/                                                      
     C     9.49578,     6.01133,     3.71372,     2.49106,     1.77633, 
     C     1.32572,     1.02483,      .66094,      .45784,      .33285, 
     C      .25044,      .19334,      .15224,      .12179,      .07358, 
     C      .04717,      .03185,      .02271,      .01730,      .01421, 
     C      .01264,      .01208,      .01207,      .01220,      .01245, 
     C      .01280,      .01321,      .01365,      .01405,      .01436, 
     C      .01447,      .01422,      .01407,      .01456/              
      DATA PHSF23/                                                      
     C      .45555,      .45332,      .44686,      .43683,      .42405, 
     C      .40929,      .39319,      .35887,      .32388,      .28985, 
     C      .25771,      .22804,      .20101,      .17671,      .12722, 
     C      .09162,      .06691,      .05037,      .03979,      .03345, 
     C      .03009,      .02875,      .02860,      .02871,      .02902, 
     C      .02946,      .03000,      .03059,      .03120,      .03179, 
     C      .03232,      .03276,      .03305,      .03315/              
      DATA PHSF24/                                                      
     C      .51072,      .50922,      .50476,      .49744,      .48752, 
     C      .47514,      .46072,      .42698,      .38890,      .34888, 
     C      .30902,      .27072,      .23504,      .20254,      .13652, 
     C      .09070,      .06070,      .04186,      .03042,      .02372, 
     C      .02000,      .01816,      .01773,      .01753,      .01753, 
     C      .01767,      .01792,      .01826,      .01866,      .01907, 
     C      .01948,      .01984,      .02009,      .02019/              
      DATA PHSF25/                                                      
     C      .21327,      .21298,      .21208,      .21060,      .20856, 
     C      .20606,      .20305,      .19588,      .18741,      .17798, 
     C      .16793,      .15754,      .14702,      .13659,      .11191, 
     C      .09060,      .07368,      .06147,      .05381,      .05020, 
     C      .04990,      .05207,      .05380,      .05581,      .05801, 
     C      .06028,      .06253,      .06468,      .06664,      .06834, 
     C      .06973,      .07077,      .07140,      .07161/              
      DATA PHSF26/                                                      
     C     4.10720,     3.38127,     2.61113,     2.06147,     1.66320, 
     C     1.36400,     1.13140,      .79725,      .57362,      .41947, 
     C      .31103,      .23368,      .17766,      .13659,      .07413, 
     C      .04288,      .02647,      .01753,      .01255,      .00978, 
     C      .00837,      .00791,      .00800,      .00831,      .00888, 
     C      .00974,      .01087,      .01219,      .01347,      .01448, 
     C      .01468,      .01320,      .01237,      .01467/              
      DATA PHSF27/                                                      
     C     4.37885,     3.78265,     2.97685,     2.33720,     1.85900, 
     C     1.49815,     1.22035,      .83140,      .58200,      .41624, 
     C      .30308,      .22426,      .16839,      .12816,      .06844, 
     C      .03932,      .02424,      .01607,      .01151,      .00894, 
     C      .00753,      .00684,      .00668,      .00661,      .00661, 
     C      .00668,      .00679,      .00692,      .00706,      .00715, 
     C      .00715,      .00705,      .00703,      .00721/              
      DATA PHSF28/                                                      
     C     1.99262,     1.84586,     1.62814,     1.42586,     1.24733, 
     C     1.09157,      .95572,      .73435,      .56567,      .43699, 
     C      .33874,      .26371,      .20635,      .16235,      .09181, 
     C      .05440,      .03397,      .02253,      .01601,      .01230, 
     C      .01031,      .00946,      .00938,      .00951,      .00985, 
     C      .01043,      .01123,      .01222,      .01328,      .01405, 
     C      .01405,      .01340,      .01391,      .01521/              
      DATA PHSF29/                                                      
     C     2.72707,     2.52017,     2.15725,     1.81463,     1.52555, 
     C     1.28665,     1.08932,      .78963,      .58023,      .43161, 
     C      .32473,      .24695,      .18977,      .14727,      .08150, 
     C      .04783,      .02980,      .01981,      .01414,      .01091, 
     C      .00911,      .00819,      .00796,      .00784,      .00781, 
     C      .00787,      .00798,      .00812,      .00825,      .00831, 
     C      .00830,      .00829,      .00847,      .00868/              
      DATA PHSF30/                                                      
     C   183.60000,    32.48000,     3.18400,     1.30100,      .85020, 
     C      .63540,      .54470,      .41140,      .33110,      .26080, 
     C      .20850,      .16570,      .12700,      .09546,      .04755, 
     C      .02460,      .01160,      .00650,      .00370,      .00264, 
     C      .00234,      .00355,      .00326,      .00308,      .00528, 
     C      .01403,      .02285,      .01565,      .01398,      .01362, 
     C      .01240,      .01544,      .02607,      .04655/              
      DATA PHSF31/                                                      
     C  1565.50000,     9.96867,     1.73233,      .92547,      .70240, 
     C      .59477,      .52513,      .42173,      .33793,      .26700, 
     C      .20973,      .16157,      .11973,      .09043,      .04400, 
     C      .01947,      .00793,      .00346,      .00177,      .00138, 
     C      .00166,      .00254,      .00438,      .00358,      .00653, 
     C      .02986,      .01362,      .01200,      .00992,      .00867, 
     C      .00765,      .00818,      .00986,      .05756/              
      DATA PHSF32/                                                      
     C      .79503,      .78714,      .76605,      .73601,      .70017, 
     C      .66092,      .61994,      .53736,      .45896,      .38796, 
     C      .32563,      .27208,      .22676,      .18879,      .11979, 
     C      .07727,      .05125,      .03541,      .02586,      .02025, 
     C      .01717,      .01576,      .01552,      .01551,      .01571, 
     C      .01607,      .01656,      .01710,      .01764,      .01814, 
     C      .01872,      .01965,      .02093,      .02164/              
      DATA PHSF33/                                                      
     C     1.56125,     1.49306,     1.34900,     1.19444,     1.05048, 
     C      .92302,      .81176,      .63177,      .49621,      .39304, 
     C      .31378,      .25238,      .20435,      .16659,      .10271, 
     C      .06594,      .04424,      .03123,      .02338,      .01868, 
     C      .01592,      .01439,      .01392,      .01360,      .01339, 
     C      .01325,      .01315,      .01310,      .01308,      .01314, 
     C      .01330,      .01355,      .01381,      .01392/              
      DATA PHSF34/                                                      
     C     1.22457,     1.18085,     1.08610,      .98058,      .87944, 
     C      .78708,      .70433,      .56565,      .45677,      .37107, 
     C      .30321,      .24916,      .20585,      .17099,      .11000, 
     C      .07323,      .05066,      .03666,      .02794,      .02253, 
     C      .01924,      .01727,      .01663,      .01614,      .01577, 
     C      .01550,      .01532,      .01522,      .01523,      .01536, 
     C      .01562,      .01596,      .01627,      .01640/              
      DATA PHSF35/                                                      
     C      .15944,      .15931,      .15893,      .15825,      .15734, 
     C      .15620,      .15479,      .15131,      .14701,      .14199, 
     C      .13638,      .13030,      .12389,      .11727,      .10065, 
     C      .08527,      .07250,      .06322,      .05782,      .05621, 
     C      .05792,      .06222,      .06505,      .06817,      .07146, 
     C      .07479,      .07805,      .08112,      .08390,      .08631, 
     C      .08826,      .08970,      .09058,      .09088/              
      DATA PHSF36/                                                      
     C      .72999,      .72086,      .69632,      .66227,      .62369, 
     C      .58366,      .54390,      .46850,      .40091,      .34178, 
     C      .29081,      .24724,      .21025,      .17893,      .12047, 
     C      .08253,      .05810,      .04253,      .03278,      .02688, 
     C      .02352,      .02183,      .02142,      .02122,      .02118, 
     C      .02127,      .02146,      .02171,      .02202,      .02235, 
     C      .02273,      .02314,      .02351,      .02367/              
      DATA PHSF37/                                                      
     C     1.15457,     1.13481,     1.08637,     1.02208,      .95035, 
     C      .87581,      .80158,      .66139,      .53812,      .43402, 
     C      .34834,      .27905,      .22360,      .17950,      .10538, 
     C      .06398,      .04056,      .02712,      .01935,      .01490, 
     C      .01250,      .01143,      .01126,      .01130,      .01153, 
     C      .01191,      .01242,      .01301,      .01357,      .01399, 
     C      .01422,      .01450,      .01526,      .01585/              
      DATA PHSF38/                                                      
     C      .31056,      .30982,      .30766,      .30415,      .29944, 
     C      .29365,      .28698,      .27149,      .25411,      .23575, 
     C      .21708,      .19865,      .18081,      .16385,      .12623, 
     C      .09621,      .07365,      .05766,      .04714,      .04092, 
     C      .03792,      .03722,      .03748,      .03804,      .03881, 
     C      .03972,      .04071,      .04172,      .04270,      .04358, 
     C      .04433,      .04490,      .04526,      .04539/              
      DATA PHSF39/                                                      
     C      .12377,      .12369,      .12346,      .12308,      .12254, 
     C      .12185,      .12102,      .11893,      .11632,      .11324, 
     C      .10974,      .10592,      .10181,      .09752,      .08650, 
     C      .07613,      .06762,      .06192,      .05964,      .06097, 
     C      .06565,      .07304,      .07747,      .08219,      .08708, 
     C      .09196,      .09670,      .10114,      .10516,      .10862, 
     C      .11144,      .11349,      .11477,      .11519/              
      DATA PHSF40/                                                      
     C      .13400,      .13391,      .13367,      .13321,      .13259, 
     C      .13180,      .13085,      .12842,      .12541,      .12185, 
     C      .11785,      .11344,      .10872,      .10383,      .09125, 
     C      .07940,      .06955,      .06267,      .05932,      .05961, 
     C      .06323,      .06951,      .07336,      .07751,      .08181, 
     C      .08613,      .09032,      .09426,      .09782,      .10091, 
     C      .10339,      .10522,      .10634,      .10673/              
      DATA PHSF41/                                                      
     C   227.93333,    32.03000,     4.13167,     1.54367,      .95123, 
     C      .71613,      .58840,      .43330,      .33043,      .25093, 
     C      .18920,      .14303,      .10800,      .08045,      .03915, 
     C      .01854,      .00866,      .00431,      .00239,      .00168, 
     C      .00157,      .00266,      .00434,      .00724,      .01132, 
     C      .01476,      .00983,      .00835,      .00785,      .00711, 
     C      .00717,      .00803,      .01265,      .02951/              
      DATA PHSF42/                                                      
     C    10.12167,     9.39467,     7.61833,     5.59200,     3.87533, 
     C     2.62733,     1.78200,      .85247,      .43620,      .23983, 
     C      .14187,      .08952,      .05950,      .04115,      .01854, 
     C      .00956,      .00552,      .00354,      .00251,      .00195, 
     C      .00163,      .00145,      .00139,      .00134,      .00129, 
     C      .00125,      .00122,      .00120,      .00120,      .00120, 
     C      .00120,      .00115,      .00105,      .00106/              
      DATA PHSF43/                                                      
     C    23.70500,    19.81000,    12.14500,     6.16400,     2.96850, 
     C     1.51300,      .86515,      .39850,      .24525,      .17225, 
     C      .12825,      .09809,      .07598,      .05932,      .03272, 
     C      .01871,      .01120,      .00710,      .00485,      .00363, 
     C      .00303,      .00286,      .00290,      .00302,      .00318, 
     C      .00334,      .00345,      .00349,      .00354,      .00388, 
     C      .00510,      .00600,      .00344,      .00472/              
      DATA PHSF44/                                                      
     C     1.13310,     1.12586,     1.10518,     1.07182,     1.02708, 
     C      .97348,      .91266,      .77952,      .64406,      .51826, 
     C      .40884,      .31800,      .24506,      .18784,      .09626, 
     C      .05060,      .02818,      .01701,      .01126,      .00818, 
     C      .00651,      .00563,      .00539,      .00526,      .00522, 
     C      .00525,      .00536,      .00551,      .00571,      .00595, 
     C      .00624,      .00656,      .00681,      .00692/              
      DATA PHSF45/                                                      
     C      .61443,      .61273,      .60783,      .59967,      .58847, 
     C      .57447,      .55783,      .51803,      .47153,      .42127, 
     C      .36970,      .31913,      .27140,      .22780,      .14030, 
     C      .08293,      .04868,      .02942,      .01892,      .01327, 
     C      .01027,      .00875,      .00834,      .00811,      .00800, 
     C      .00801,      .00810,      .00824,      .00842,      .00861, 
     C      .00879,      .00893,      .00903,      .00906/              
      DATA PHSF46/                                                      
     C     2.06615,     1.93640,     1.69345,     1.45610,     1.24945, 
     C     1.07421,      .92677,      .69739,      .53175,      .41021, 
     C      .31969,      .25144,      .19943,      .15944,      .09421, 
     C      .05837,      .03804,      .02624,      .01931,      .01523, 
     C      .01288,      .01160,      .01123,      .01099,      .01084, 
     C      .01077,      .01073,      .01072,      .01070,      .01068, 
     C      .01069,      .01078,      .01095,      .01105/              
      DATA PHSF47/                                                      
     C  1888.10000,    16.32500,     2.35900,     1.00950,      .67300, 
     C      .53970,      .46415,      .37245,      .30310,      .24865, 
     C      .20715,      .15820,      .13160,      .10710,      .05669, 
     C      .02778,      .01325,      .00679,      .00344,      .00306, 
     C      .00420,      .00189,      .00154,      .00137,      .00145, 
     C      .00265,      .01227,      .03321,      .02025,      .01971, 
     C      .01869,      .02153,      .03166,      .09376/              
      DATA PHSF48/                                                      
     C 18500.00000,     2.83400,      .85070,      .58200,      .49050, 
     C      .44240,      .40380,      .35560,      .31400,      .25730, 
     C      .19510,      .17010,      .12770,      .10750,      .05190, 
     C      .02554,      .01105,      .00365,      .00203,      .00200, 
     C      .00370,      .00118,      .00112,      .00112,      .00113, 
     C      .00113,      .00549,      .02603,      .02019,      .01751, 
     C      .01439,      .01308,      .01407,      .10720/              
      DATA PHSF49/                                                      
     C   190.90000,    60.01000,     8.56500,     2.26600,      .98870, 
     C      .55520,      .36100,      .19580,      .12640,      .08822, 
     C      .06382,      .04693,      .03478,      .02590,      .01264, 
     C      .00642,      .00348,      .00208,      .00143,      .00120, 
     C      .00124,      .00131,      .00123,      .00108,      .00097, 
     C      .00092,      .00090,      .00089,      .00091,      .00096, 
     C      .00107,      .00136,      .00251,      .00246/              
      DATA PHSF50/                                                      
     C    44.01000,    33.47000,    16.38000,     6.54600,     2.66800, 
     C     1.24800,      .68020,      .27930,      .14670,      .08818, 
     C      .05760,      .03977,      .02856,      .02111,      .01087, 
     C      .00620,      .00387,      .00265,      .00198,      .00161, 
     C      .00141,      .00129,      .00125,      .00122,      .00120, 
     C      .00119,      .00118,      .00117,      .00117,      .00117, 
     C      .00118,      .00118,      .00113,      .00113/              
      DATA PHSF51/                                                      
     C    45.72000,    22.68000,     8.45200,     3.68600,     1.89400, 
     C     1.11400,      .72990,      .39640,      .26220,      .19430, 
     C      .15350,      .12410,      .10220,      .08533,      .05455, 
     C      .03546,      .02333,      .01580,      .01103,      .00801, 
     C      .00615,      .00530,      .00517,      .00509,      .00547, 
     C      .00614,      .00763,      .01038,      .01534,      .02235, 
     C      .02692,      .02902,      .03071,      .03320/              
      DATA PHSF52/                                                      
     C     1.35800,     1.34900,     1.32400,     1.28300,     1.22900, 
     C     1.16200,     1.08700,      .91840,      .74460,      .58190, 
     C      .44060,      .32530,      .23580,      .16900,      .07319, 
     C      .03392,      .01766,      .01037,      .00676,      .00484, 
     C      .00377,      .00317,      .00298,      .00284,      .00274, 
     C      .00269,      .00267,      .00268,      .00274,      .00283, 
     C      .00294,      .00306,      .00314,      .00317/              
      DATA PHSF53/                                                      
     C  8232.00000,     3.82700,      .95120,      .65890,      .52640, 
     C      .49710,      .52530,      .38980,      .33700,      .25360, 
     C      .21110,      .16430,      .12260,      .09209,      .04939, 
     C      .01954,      .00754,      .00272,      .00161,      .00134, 
     C      .00166,      .00334,      .00383,      .00124,      .00127, 
     C      .01906,      .01831,      .01420,      .01077,      .00904, 
     C      .00782,      .00667,      .00690,      .04228/              
      DATA PHSF54/                                                      
     C    13.90000,    12.72000,     9.87700,     6.74400,     4.24600, 
     C     2.58600,     1.58500,      .66190,      .32580,      .18150, 
     C      .10950,      .06977,      .04630,      .03174,      .01380, 
     C      .00682,      .00376,      .00228,      .00153,      .00111, 
     C      .00088,      .00073,      .00068,      .00064,      .00061, 
     C      .00059,      .00057,      .00056,      .00055,      .00055, 
     C      .00056,      .00054,      .00050,      .00050/              
      DATA PHSF55/                                                      
     C    36.42000,    23.44333,     8.52800,     3.11067,     1.49100, 
     C      .91783,      .67607,      .46263,      .34257,      .26417, 
     C      .20367,      .15540,      .12417,      .09463,      .05233, 
     C      .02803,      .01629,      .00958,      .00583,      .00472, 
     C      .00438,      .00458,      .00534,      .00777,      .01141, 
     C      .01545,      .01958,      .01880,      .01607,      .01696, 
     C      .01907,      .03025,      .03881,      .05215/              
      DATA PHSF56/                                                      
     C    46.49000,    31.63000,    12.30000,     4.19500,     1.72400, 
     C      .91960,      .59580,      .34070,      .23500,      .17450, 
     C      .13450,      .10490,      .08291,      .06559,      .03717, 
     C      .02135,      .01252,      .00762,      .00490,      .00346, 
     C      .00283,      .00278,      .00305,      .00366,      .00464, 
     C      .00584,      .00670,      .00683,      .00640,      .00651, 
     C      .00846,      .01345,      .01103,      .01440/              
      DATA PHSF57/                                                      
     C  1698.00000,    15.47000,     3.11967,     1.46900,      .97483, 
     C      .76003,      .62317,      .46853,      .36270,      .28193, 
     C      .22163,      .17287,      .13357,      .10470,      .05409, 
     C      .02799,      .01396,      .00794,      .00479,      .00390, 
     C      .00409,      .00407,      .00363,      .00324,      .00464, 
     C      .01060,      .01826,      .01957,      .01599,      .01547, 
     C      .01597,      .01678,      .02321,      .05917/              
      DATA PHSF58/                                                      
     C   525.35000,     5.54850,     3.39200,     2.40225,     1.79275, 
     C     1.38725,     1.10400,      .74203,      .52213,      .37803, 
     C      .27970,      .20945,      .15915,      .12258,      .06615, 
     C      .03783,      .02289,      .01510,      .01074,      .00837, 
     C      .00717,      .00653,      .00661,      .00699,      .00781, 
     C      .00922,      .01127,      .01364,      .01588,      .01743, 
     C      .01838,      .01583,      .01491,      .02015/              
      DATA PHSF59/                                                      
     C    56.57000,    10.86983,     4.30450,     2.32817,     1.48817, 
     C     1.05608,      .80615,      .53590,      .39175,      .30123, 
     C      .23833,      .19167,      .15528,      .12653,      .07717, 
     C      .04870,      .03126,      .02128,      .01493,      .01091, 
     C      .00856,      .00765,      .00767,      .00787,      .00840, 
     C      .00973,      .01199,      .01623,      .02446,      .03802, 
     C      .04421,      .04801,      .05991,      .06067/              
      DATA PHSF60/                                                      
     C    37.27000,    14.69200,     6.78420,     3.81000,     2.39800, 
     C     1.62640,     1.16200,      .66076,      .41350,      .27594, 
     C      .19292,      .13976,      .10406,      .07926,      .04328, 
     C      .02568,      .01635,      .01116,      .00822,      .00657, 
     C      .00569,      .00527,      .00516,      .00510,      .00508, 
     C      .00511,      .00518,      .00528,      .00537,      .00537, 
     C      .00527,      .00528,      .00536,      .00549/              
      DATA PHSF61/                                                      
     C    24.80333,    14.28000,     8.35167,     5.06833,     3.14833, 
     C     2.03700,     1.38367,      .72373,      .42163,      .26167, 
     C      .16947,      .11343,      .07807,      .05503,      .02512, 
     C      .01283,      .00726,      .00455,      .00317,      .00247, 
     C      .00214,      .00196,      .00187,      .00177,      .00168, 
     C      .00159,      .00153,      .00150,      .00151,      .00161, 
     C      .00185,      .00209,      .00168,      .00168/              
      DATA PHSF62/                                                      
     C   101.15286,     5.39657,     2.28843,     1.62671,     1.32757, 
     C     1.13054,      .97696,      .73870,      .56023,      .42529, 
     C      .32319,      .24639,      .18874,      .14550,      .07827, 
     C      .04428,      .02652,      .01699,      .01182,      .00901, 
     C      .00763,      .00715,      .00718,      .00742,      .00797, 
     C      .00901,      .01007,      .01036,      .01076,      .01129, 
     C      .01176,      .01204,      .01243,      .01444/              
      DATA PHSF63/                                                      
     C    48.02600,    10.67620,     3.98180,     2.14360,     1.42080, 
     C     1.06302,      .85178,      .60524,      .45450,      .34880, 
     C      .26996,      .21070,      .16526,      .13048,      .07415, 
     C      .04380,      .02714,      .01784,      .01271,      .00998, 
     C      .00877,      .00871,      .00917,      .00990,      .01086, 
     C      .01174,      .01200,      .01185,      .01202,      .01250, 
     C      .01377,      .01588,      .01523,      .01909/              
      DATA PHSF64/                                                      
     C    34.21833,    12.06500,     4.94933,     2.57983,     1.56550, 
     C     1.05695,      .77238,      .48407,      .34568,      .26490, 
     C      .21097,      .17168,      .14155,      .11773,      .07609, 
     C      .05056,      .03467,      .02483,      .01884,      .01536, 
     C      .01352,      .01276,      .01267,      .01273,      .01293, 
     C      .01326,      .01371,      .01427,      .01491,      .01553, 
     C      .01582,      .01535,      .01512,      .01573/              
      DATA PHSF65/                                                      
     C     8.59757,     6.79429,     4.60071,     3.23457,     2.36214, 
     C     1.77586,     1.36529,      .84849,      .55343,      .37399, 
     C      .25995,      .18501,      .13442,      .09951,      .05039, 
     C      .02794,      .01684,      .01103,      .00787,      .00614, 
     C      .00521,      .00476,      .00465,      .00460,      .00460, 
     C      .00464,      .00470,      .00479,      .00490,      .00502, 
     C      .00509,      .00498,      .00479,      .00491/              
      DATA PHSF66/                                                      
     C     7.73378,     6.31989,     4.61211,     3.41189,     2.56922, 
     C     1.96389,     1.51900,      .93560,      .59521,      .38946, 
     C      .26146,      .17967,      .12618,      .09038,      .04241, 
     C      .02194,      .01241,      .00766,      .00519,      .00386, 
     C      .00314,      .00278,      .00267,      .00259,      .00254, 
     C      .00251,      .00251,      .00252,      .00256,      .00261, 
     C      .00268,      .00274,      .00268,      .00273/              
      DATA PHSF67/                                                      
     C    13.24333,    11.06100,     7.42300,     4.70567,     2.98533, 
     C     1.97200,     1.37267,      .75370,      .45857,      .29573, 
     C      .19823,      .13693,      .09689,      .07004,      .03369, 
     C      .01789,      .01040,      .00660,      .00460,      .00353, 
     C      .00298,      .00273,      .00268,      .00266,      .00265, 
     C      .00265,      .00265,      .00266,      .00270,      .00282, 
     C      .00308,      .00319,      .00262,      .00275/              
      DATA PHSF68/                                                      
     C    37.10000,    12.65667,     5.63100,     3.16800,     2.05233, 
     C     1.45750,     1.09982,      .69772,      .47462,      .33515, 
     C      .24170,      .17635,      .13072,      .09747,      .04922, 
     C      .02644,      .01502,      .00935,      .00640,      .00503, 
     C      .00468,      .00549,      .00635,      .00767,      .00953, 
     C      .01124,      .01140,      .01090,      .01055,      .01125, 
     C      .01355,      .01701,      .01486,      .02554/              
      DATA PHSF69/                                                      
     C   256.51429,    19.73571,     5.24714,     2.30771,     1.36100, 
     C      .94431,      .72756,      .50319,      .37583,      .28504, 
     C      .22174,      .17010,      .13151,      .10155,      .05367, 
     C      .02848,      .01561,      .00902,      .00592,      .00443, 
     C      .00434,      .00493,      .00535,      .00629,      .00897, 
     C      .01636,      .01849,      .01647,      .01539,      .01496, 
     C      .01673,      .02178,      .02754,      .05075/              
      DATA PHSF70/                                                      
     C    27.44667,    14.67667,     7.63033,     4.46200,     2.82633, 
     C     1.89500,     1.32600,      .71323,      .41983,      .26377, 
     C      .17420,      .11977,      .08514,      .06224,      .03144, 
     C      .01785,      .01118,      .00766,      .00573,      .00466, 
     C      .00407,      .00377,      .00368,      .00363,      .00360, 
     C      .00359,      .00360,      .00361,      .00363,      .00365, 
     C      .00366,      .00367,      .00367,      .00369/              
C>    END                                                               
C>      SUBROUTINE RANSET(I)                                            
C>      COMMON/RST/ II                                                  
C>      RANET= RAN(I)                                                   
C>        II=RANET                                                      
C>      RETURN                                                          
C>      END                                                             
C>      FUNCTION RANF                                                   
C>      COMMON/RST/ II                                                  
C>      RANF= RAN(II)                                                   
C>        II=RANF                                                       
C>      RETURN                                                          
      END                                                               
      BLOCK DATA PRFDTA                                                 
C>    BLOCK DATA                                                        
C                                                                       
C        AEROSOL PROFILE DATA                                           
C                                                                       
CCC         0-2KM                                                       
CCC           HZ2K=5 VIS PROFILES- 50KM,23KM,10KM,5KM,2KM               
CCC         >2-10KM                                                     
CCC           FAWI50=FALL/WINTER   50KM VIS                             
CCC           FAWI23=FALL/WINTER    23KM VIS                            
CCC           SPSU50=SPRING/SUMMER  50KM VIS                            
CCC           SPSU23=SPRING/SUMMER  23KM VIS                            
CCC         >10-30KM                                                    
CCC           BASTFW=BACKGROUND STRATOSPHERIC   FALL/WINTER             
CCC           VUMOFW=MODERATE VOLCANIC          FALL/WINTER             
CCC           HIVUFW=HIGH VOLCANIC              FALL/WINTER             
CCC           EXVUFW=EXTREME VOLCANIC           FALL/WINTER             
CCC           BASTSS,VUMOSS,HIVUSS,EXVUSS=      SPRING/SUMMER           
CCC         >30-100KM                                                   
CCC           UPNATM=NORMAL UPPER ATMOSPHERIC                           
CCC           VUTONO=TRANSITION FROM VOLCANIC TO NORMAL                 
CCC           VUTOEX=TRANSITION FROM VOLCANIC TO EXTREME                
CCC           EXUPAT=EXTREME UPPER ATMOSPHERIC                          
      COMMON/PRFD  /ZHT(34),HZ2K(34,5),FAWI50(34),FAWI23(34),SPSU50(34),
     1SPSU23(34),BASTFW(34),VUMOFW(34),HIVUFW(34),EXVUFW(34),BASTSS(34),
     2VUMOSS(34),HIVUSS(34),EXVUSS(34),UPNATM(34),VUTONO(34),           
     3VUTOEX(34),EXUPAT(34)                                             
      DATA ZHT/                                                         
     *    0.,    1.,    2.,    3.,    4.,    5.,    6.,    7.,    8.,   
     *    9.,   10.,   11.,   12.,   13.,   14.,   15.,   16.,   17.,   
     *   18.,   19.,   20.,   21.,   22.,   23.,   24.,   25.,   30.,   
     *   35.,   40.,   45.,   50.,   70.,  100.,99999./                 
       DATA HZ2K(1,1),HZ2K(1,2),HZ2K(1,3),HZ2K(1,4),HZ2K(1,5)/          
     1 6.62E-02, 1.58E-01, 3.79E-01, 7.70E-01, 1.94E+00/                
       DATA HZ2K(2,1),HZ2K(2,2),HZ2K(2,3),HZ2K(2,4),HZ2K(2,5)/          
     1 4.15E-02, 9.91E-02, 3.79E-01, 7.70E-01, 1.94E+00/                
       DATA HZ2K(3,1),HZ2K(3,2),HZ2K(3,3),HZ2K(3,4),HZ2K(3,5)/          
     1 2.60E-02, 6.21E-02, 6.21E-02, 6.21E-02, 6.21E-02/                
      DATA FAWI50  /3*0.,                                               
     1 1.14E-02, 6.43E-03, 4.85E-03, 3.54E-03, 2.31E-03, 1.41E-03,      
     2 9.80E-04,7.87E-04,23*0./                                         
      DATA FAWI23              /3*0.,                                   
     1 2.72E-02, 1.20E-02, 4.85E-03, 3.54E-03, 2.31E-03, 1.41E-03,      
     2 9.80E-04,7.87E-04,23*0./                                         
      DATA  SPSU50              / 3*0.,                                 
     1 1.46E-02, 1.02E-02, 9.31E-03, 7.71E-03, 6.23E-03, 3.37E-03,      
     2 1.82E-03  ,1.14E-03,23*0./                                       
      DATA  SPSU23              / 3*0.,                                 
     1 3.46E-02, 1.85E-02, 9.31E-03, 7.71E-03, 6.23E-03, 3.37E-03,      
     2 1.82E-03  ,1.14E-03,23*0./                                       
      DATA BASTFW       /11*0.,                                         
     1           7.14E-04, 6.64E-04, 6.23E-04, 6.45E-04, 6.43E-04,      
     2 6.41E-04, 6.00E-04, 5.62E-04, 4.91E-04, 4.23E-04, 3.52E-04,      
     3 2.95E-04, 2.42E-04, 1.90E-04, 1.50E-04, 3.32E-05 ,7*0./          
      DATA    VUMOFW       /11*0.,                                      
     1           1.79E-03, 2.21E-03, 2.75E-03, 2.89E-03, 2.92E-03,      
     2 2.73E-03, 2.46E-03, 2.10E-03, 1.71E-03, 1.35E-03, 1.09E-03,      
     3 8.60E-04, 6.60E-04, 5.15E-04, 4.09E-04, 7.60E-05 ,7*0./          
      DATA    HIVUFW       /11*0.,                                      
     1           2.31E-03, 3.25E-03, 4.52E-03, 6.40E-03, 7.81E-03,      
     2 9.42E-03, 1.07E-02, 1.10E-02, 8.60E-03, 5.10E-03, 2.70E-03,      
     3 1.46E-03, 8.90E-04, 5.80E-04, 4.09E-04, 7.60E-05 ,7*0./          
      DATA    EXVUFW       /11*0.,                                      
     1           2.31E-03, 3.25E-03, 4.52E-03, 6.40E-03, 1.01E-02,      
     2 2.35E-02, 6.10E-02, 1.00E-01, 4.00E-02, 9.15E-03, 3.13E-03,      
     3 1.46E-03, 8.90E-04, 5.80E-04, 4.09E-04, 7.60E-05 ,7*0./          
      DATA    BASTSS       /11*0.,                                      
     1           7.99E-04, 6.41E-04, 5.17E-04, 4.42E-04, 3.95E-04,      
     2 3.82E-04, 4.25E-04, 5.20E-04, 5.81E-04, 5.89E-04, 5.02E-04,      
     3 4.20E-04, 3.00E-04, 1.98E-04, 1.31E-04, 3.32E-05 ,7*0./          
      DATA    VUMOSS       /11*0.,                                      
     1           2.12E-03, 2.45E-03, 2.80E-03, 2.89E-03, 2.92E-03,      
     2 2.73E-03, 2.46E-03, 2.10E-03, 1.71E-03, 1.35E-03, 1.09E-03,      
     3 8.60E-04, 6.60E-04, 5.15E-04, 4.09E-04, 7.60E-05 ,7*0./          
      DATA    HIVUSS       /11*0.,                                      
     1           2.12E-03, 2.45E-03, 2.80E-03, 3.60E-03, 5.23E-03,      
     2 8.11E-03, 1.20E-02, 1.52E-02, 1.53E-02, 1.17E-02, 7.09E-03,      
     3 4.50E-03, 2.40E-03, 1.28E-03, 7.76E-04, 7.60E-05 ,7*0./          
      DATA    EXVUSS       /11*0.,                                      
     1           2.12E-03, 2.45E-03, 2.80E-03, 3.60E-03, 5.23E-03,      
     2 8.11E-03, 1.27E-02, 2.32E-02, 4.85E-02, 1.00E-01, 5.50E-02,      
     3 6.10E-03, 2.40E-03, 1.28E-03, 7.76E-04, 7.60E-05 ,7*0./          
      DATA UPNATM       /26*0.,                                         
     1 3.32E-05, 1.64E-05, 7.99E-06, 4.01E-06, 2.10E-06, 1.60E-07,      
     2 9.31E-10, 0.      /                                              
      DATA VUTONO       /26*0.,                                         
     1 7.60E-05, 2.45E-05, 7.99E-06, 4.01E-06, 2.10E-06, 1.60E-07,      
     2 9.31E-10, 0.      /                                              
      DATA VUTOEX       /26*0.,                                         
     1 7.60E-05, 7.20E-05, 6.95E-05, 6.60E-05, 5.04E-05, 1.03E-05,      
     2 4.50E-07, 0.      /                                              
      DATA EXUPAT       /26*0.,                                         
     1 3.32E-05, 4.25E-05, 5.59E-05, 6.60E-05, 5.04E-05, 1.03E-05,      
     2 4.50E-07, 0.      /                                              
      END                                                               
      BLOCK DATA SF260                                                  
C>    BLOCK DATA                                                        
C               06/28/82                                                
C               UNITS OF (CM**3/MOL) * 1.E-20                           
      COMMON /S260/ V1,V2,DV,NPT,S0000(2),                              
     1      S0001(50),S0051(50),S0101(50),S0151(50),S0201(50),S0251(50),
     2      S0301(50),S0351(50),S0401(50),S0451(50),S0501(50),S0551(50),
     3      S0601(50),S0651(50),S0701(50),S0751(50),S0801(50),S0851(50),
     4      S0901(50),S0951(50),S1001(50),S1051(50),S1101(50),S1151(50),
     5      S1201(50),S1251(50),S1301(50),S1351(50),S1401(50),S1451(50),
     6      S1501(50),S1551(50),S1601(50),S1651(50),S1701(50),S1751(50),
     7      S1801(50),S1851(50),S1901(50),S1951(50),S2001(1)            
C                                                                       
C                                                                       
       DATA V1,V2,DV,NPT /                                              
     1      -20.0,     20000.0,       10.0,  2003/                      
C                                                                       
C                                                                       
      DATA S0000/ 1.7750E-01, 1.7045E-01/                               
      DATA S0001/                                                       
     C 1.6457E-01, 1.7045E-01, 1.7750E-01, 2.0036E-01, 2.1347E-01,      
     C 2.2454E-01, 2.3428E-01, 2.3399E-01, 2.3022E-01, 2.0724E-01,      
     C 1.9712E-01, 1.8317E-01, 1.6724E-01, 1.4780E-01, 1.2757E-01,      
     C 1.1626E-01, 1.0098E-01, 8.9033E-02, 7.9770E-02, 6.7416E-02,      
     C 5.9588E-02, 5.1117E-02, 4.6218E-02, 4.2179E-02, 3.4372E-02,      
     C 2.9863E-02, 2.5252E-02, 2.2075E-02, 1.9209E-02, 1.5816E-02,      
     C 1.3932E-02, 1.1943E-02, 1.0079E-02, 8.7667E-03, 7.4094E-03,      
     C 6.4967E-03, 5.5711E-03, 4.8444E-03, 4.2552E-03, 3.6953E-03,      
     C 3.2824E-03, 2.9124E-03, 2.6102E-03, 2.3370E-03, 2.1100E-03,      
     C 1.9008E-03, 1.7145E-03, 1.5573E-03, 1.4206E-03, 1.2931E-03/      
      DATA S0051/                                                       
     C 1.1803E-03, 1.0774E-03, 9.8616E-04, 9.0496E-04, 8.3071E-04,      
     C 7.6319E-04, 7.0149E-04, 6.4637E-04, 5.9566E-04, 5.4987E-04,      
     C 5.0768E-04, 4.6880E-04, 4.3317E-04, 4.0037E-04, 3.7064E-04,      
     C 3.4325E-04, 3.1809E-04, 2.9501E-04, 2.7382E-04, 2.5430E-04,      
     C 2.3630E-04, 2.1977E-04, 2.0452E-04, 1.9042E-04, 1.7740E-04,      
     C 1.6544E-04, 1.5442E-04, 1.4425E-04, 1.3486E-04, 1.2618E-04,      
     C 1.1817E-04, 1.1076E-04, 1.0391E-04, 9.7563E-05, 9.1696E-05,      
     C 8.6272E-05, 8.1253E-05, 7.6607E-05, 7.2302E-05, 6.8311E-05,      
     C 6.4613E-05, 6.1183E-05, 5.8001E-05, 5.5048E-05, 5.2307E-05,      
     C 4.9761E-05, 4.7395E-05, 4.5197E-05, 4.3155E-05, 4.1256E-05/      
      DATA S0101/                                                       
     C 3.9491E-05, 3.7849E-05, 3.6324E-05, 3.4908E-05, 3.3594E-05,      
     C 3.2374E-05, 3.1244E-05, 3.0201E-05, 2.9240E-05, 2.8356E-05,      
     C 2.7547E-05, 2.6814E-05, 2.6147E-05, 2.5551E-05, 2.5029E-05,      
     C 2.4582E-05, 2.4203E-05, 2.3891E-05, 2.3663E-05, 2.3531E-05,      
     C 2.3483E-05, 2.3516E-05, 2.3694E-05, 2.4032E-05, 2.4579E-05,      
     C 2.5234E-05, 2.6032E-05, 2.7119E-05, 2.8631E-05, 3.0848E-05,      
     C 3.3262E-05, 3.6635E-05, 4.0732E-05, 4.5923E-05, 5.3373E-05,      
     C 6.1875E-05, 7.2031E-05, 8.5980E-05, 9.8642E-05, 1.1469E-04,      
     C 1.3327E-04, 1.5390E-04, 1.7513E-04, 2.0665E-04, 2.3609E-04,      
     C 2.6220E-04, 2.8677E-04, 3.2590E-04, 3.8624E-04, 4.1570E-04/      
      DATA S0151/                                                       
     C 4.5207E-04, 4.9336E-04, 5.4500E-04, 5.8258E-04, 5.8086E-04,      
     C 5.6977E-04, 5.3085E-04, 4.8020E-04, 4.3915E-04, 4.0343E-04,      
     C 3.7853E-04, 3.7025E-04, 3.9637E-04, 4.4675E-04, 4.7072E-04,      
     C 4.9022E-04, 5.2076E-04, 5.3676E-04, 5.2755E-04, 4.8244E-04,      
     C 4.5473E-04, 4.3952E-04, 3.9614E-04, 3.4086E-04, 2.9733E-04,      
     C 2.6367E-04, 2.3767E-04, 2.0427E-04, 1.7595E-04, 1.5493E-04,      
     C 1.3851E-04, 1.1874E-04, 1.0735E-04, 9.0490E-05, 8.1149E-05,      
     C 7.4788E-05, 6.5438E-05, 5.8248E-05, 4.8076E-05, 4.3488E-05,      
     C 3.7856E-05, 3.3034E-05, 2.9592E-05, 2.6088E-05, 2.3497E-05,      
     C 2.0279E-05, 1.7526E-05, 1.5714E-05, 1.3553E-05, 1.2145E-05/      
      DATA S0201/                                                       
     C 1.0802E-05, 9.7681E-06, 8.8196E-06, 7.8291E-06, 7.1335E-06,      
     C 6.4234E-06, 5.8391E-06, 5.3532E-06, 4.9079E-06, 4.5378E-06,      
     C 4.1716E-06, 3.8649E-06, 3.5893E-06, 3.3406E-06, 3.1199E-06,      
     C 2.9172E-06, 2.7348E-06, 2.5644E-06, 2.4086E-06, 2.2664E-06,      
     C 2.1359E-06, 2.0159E-06, 1.9051E-06, 1.8031E-06, 1.7074E-06,      
     C 1.6185E-06, 1.5356E-06, 1.4584E-06, 1.3861E-06, 1.3179E-06,      
     C 1.2545E-06, 1.1951E-06, 1.1395E-06, 1.0873E-06, 1.0384E-06,      
     C 9.9250E-07, 9.4935E-07, 9.0873E-07, 8.7050E-07, 8.3446E-07,      
     C 8.0046E-07, 7.6834E-07, 7.3800E-07, 7.0931E-07, 6.8217E-07,      
     C 6.5648E-07, 6.3214E-07, 6.0909E-07, 5.8725E-07, 5.6655E-07/      
      DATA S0251/                                                       
     C 5.4693E-07, 5.2835E-07, 5.1077E-07, 4.9416E-07, 4.7853E-07,      
     C 4.6381E-07, 4.5007E-07, 4.3728E-07, 4.2550E-07, 4.1450E-07,      
     C 4.0459E-07, 3.9532E-07, 3.8662E-07, 3.7855E-07, 3.7041E-07,      
     C 3.6254E-07, 3.5420E-07, 3.4617E-07, 3.3838E-07, 3.3212E-07,      
     C 3.2655E-07, 3.1865E-07, 3.1203E-07, 3.0670E-07, 3.0252E-07,      
     C 2.9749E-07, 2.9184E-07, 2.8795E-07, 2.8501E-07, 2.8202E-07,      
     C 2.7856E-07, 2.7509E-07, 2.7152E-07, 2.6844E-07, 2.6642E-07,      
     C 2.6548E-07, 2.6617E-07, 2.6916E-07, 2.7372E-07, 2.8094E-07,      
     C 2.9236E-07, 3.1035E-07, 3.2854E-07, 3.5481E-07, 3.9377E-07,      
     C 4.4692E-07, 5.0761E-07, 5.7715E-07, 6.7725E-07, 8.0668E-07/      
      DATA S0301/                                                       
     C 9.3716E-07, 1.0797E-06, 1.1689E-06, 1.3217E-06, 1.4814E-06,      
     C 1.5627E-06, 1.6519E-06, 1.7601E-06, 1.9060E-06, 2.0474E-06,      
     C 2.0716E-06, 2.0433E-06, 1.9752E-06, 1.8466E-06, 1.7526E-06,      
     C 1.6657E-06, 1.5870E-06, 1.5633E-06, 1.6520E-06, 1.8471E-06,      
     C 1.9953E-06, 2.0975E-06, 2.2016E-06, 2.2542E-06, 2.3081E-06,      
     C 2.3209E-06, 2.2998E-06, 2.3056E-06, 2.2757E-06, 2.2685E-06,      
     C 2.2779E-06, 2.2348E-06, 2.2445E-06, 2.3174E-06, 2.4284E-06,      
     C 2.5290E-06, 2.7340E-06, 2.9720E-06, 3.2332E-06, 3.5392E-06,      
     C 3.9013E-06, 4.3334E-06, 4.9088E-06, 5.3428E-06, 5.9142E-06,      
     C 6.6106E-06, 7.4709E-06, 8.5019E-06, 9.6835E-06, 1.0984E-05/      
      DATA S0351/                                                       
     C 1.2831E-05, 1.4664E-05, 1.7080E-05, 2.0103E-05, 2.4148E-05,      
     C 2.7948E-05, 3.2855E-05, 3.9046E-05, 4.6429E-05, 5.6633E-05,      
     C 6.6305E-05, 7.6048E-05, 8.7398E-05, 1.0034E-04, 1.1169E-04,      
     C 1.2813E-04, 1.3354E-04, 1.3952E-04, 1.4204E-04, 1.4615E-04,      
     C 1.5144E-04, 1.5475E-04, 1.6561E-04, 1.7135E-04, 1.6831E-04,      
     C 1.6429E-04, 1.6353E-04, 1.6543E-04, 1.5944E-04, 1.5404E-04,      
     C 1.5458E-04, 1.6287E-04, 1.7277E-04, 1.8387E-04, 1.7622E-04,      
     C 1.6360E-04, 1.5273E-04, 1.3667E-04, 1.2364E-04, 9.7576E-05,      
     C 7.9140E-05, 6.4241E-05, 5.1826E-05, 4.1415E-05, 3.1347E-05,      
     C 2.5125E-05, 2.0027E-05, 1.6362E-05, 1.3364E-05, 1.1117E-05/      
      DATA S0401/                                                       
     C 9.4992E-06, 8.1581E-06, 7.1512E-06, 6.2692E-06, 5.5285E-06,      
     C 4.9000E-06, 4.3447E-06, 3.8906E-06, 3.4679E-06, 3.1089E-06,      
     C 2.8115E-06, 2.5496E-06, 2.2982E-06, 2.0861E-06, 1.8763E-06,      
     C 1.7035E-06, 1.5548E-06, 1.4107E-06, 1.2839E-06, 1.1706E-06,      
     C 1.0709E-06, 9.8099E-07, 8.9901E-07, 8.2394E-07, 7.5567E-07,      
     C 6.9434E-07, 6.3867E-07, 5.8845E-07, 5.4263E-07, 5.0033E-07,      
     C 4.6181E-07, 4.2652E-07, 3.9437E-07, 3.6497E-07, 3.3781E-07,      
     C 3.1292E-07, 2.9011E-07, 2.6915E-07, 2.4989E-07, 2.3215E-07,      
     C 2.1582E-07, 2.0081E-07, 1.8700E-07, 1.7432E-07, 1.6264E-07,      
     C 1.5191E-07, 1.4207E-07, 1.3306E-07, 1.2484E-07, 1.1737E-07/      
      DATA S0451/                                                       
     C 1.1056E-07, 1.0451E-07, 9.9060E-08, 9.4135E-08, 8.9608E-08,      
     C 8.5697E-08, 8.1945E-08, 7.8308E-08, 7.4808E-08, 7.1686E-08,      
     C 6.8923E-08, 6.5869E-08, 6.3308E-08, 6.0840E-08, 5.8676E-08,      
     C 5.6744E-08, 5.5016E-08, 5.3813E-08, 5.2792E-08, 5.2097E-08,      
     C 5.1737E-08, 5.1603E-08, 5.1656E-08, 5.1989E-08, 5.2467E-08,      
     C 5.2918E-08, 5.3589E-08, 5.4560E-08, 5.5869E-08, 5.7403E-08,      
     C 5.8968E-08, 6.0973E-08, 6.3432E-08, 6.6245E-08, 6.9353E-08,      
     C 7.2686E-08, 7.6541E-08, 8.0991E-08, 8.5950E-08, 9.1429E-08,      
     C 9.7851E-08, 1.0516E-07, 1.1349E-07, 1.2295E-07, 1.3335E-07,      
     C 1.4488E-07, 1.5864E-07, 1.7412E-07, 1.9140E-07, 2.1078E-07/      
      DATA S0501/                                                       
     C 2.3369E-07, 2.5996E-07, 2.8848E-07, 3.2169E-07, 3.5991E-07,      
     C 4.0566E-07, 4.5969E-07, 5.3094E-07, 6.1458E-07, 7.1155E-07,      
     C 8.3045E-07, 9.9021E-07, 1.2042E-06, 1.4914E-06, 1.8145E-06,      
     C 2.2210E-06, 2.7831E-06, 3.4533E-06, 4.4446E-06, 5.1989E-06,      
     C 6.2289E-06, 7.1167E-06, 8.3949E-06, 9.6417E-06, 1.0313E-05,      
     C 1.0485E-05, 1.0641E-05, 1.0898E-05, 1.0763E-05, 1.0506E-05,      
     C 1.0497E-05, 1.1696E-05, 1.2654E-05, 1.3029E-05, 1.3175E-05,      
     C 1.4264E-05, 1.4985E-05, 1.4999E-05, 1.4317E-05, 1.4616E-05,      
     C 1.4963E-05, 1.5208E-05, 1.4942E-05, 1.3879E-05, 1.3087E-05,      
     C 1.1727E-05, 1.0515E-05, 9.0073E-06, 7.3133E-06, 6.1181E-06/      
      DATA S0551/                                                       
     C 5.0623E-06, 4.1105E-06, 3.3915E-06, 2.6711E-06, 2.1464E-06,      
     C 1.7335E-06, 1.4302E-06, 1.1847E-06, 9.9434E-07, 8.2689E-07,      
     C 7.0589E-07, 6.0750E-07, 5.3176E-07, 4.6936E-07, 4.1541E-07,      
     C 3.6625E-07, 3.2509E-07, 2.9156E-07, 2.6308E-07, 2.3819E-07,      
     C 2.1421E-07, 1.9366E-07, 1.7626E-07, 1.5982E-07, 1.4567E-07,      
     C 1.3354E-07, 1.2097E-07, 1.1029E-07, 1.0063E-07, 9.2003E-08,      
     C 8.4245E-08, 7.7004E-08, 7.0636E-08, 6.4923E-08, 5.9503E-08,      
     C 5.4742E-08, 5.0450E-08, 4.6470E-08, 4.2881E-08, 3.9550E-08,      
     C 3.6541E-08, 3.3803E-08, 3.1279E-08, 2.8955E-08, 2.6858E-08,      
     C 2.4905E-08, 2.3146E-08, 2.1539E-08, 2.0079E-08, 1.8746E-08/      
      DATA S0601/                                                       
     C 1.7517E-08, 1.6396E-08, 1.5369E-08, 1.4426E-08, 1.3543E-08,      
     C 1.2724E-08, 1.1965E-08, 1.1267E-08, 1.0617E-08, 1.0010E-08,      
     C 9.4662E-09, 8.9553E-09, 8.4988E-09, 8.0807E-09, 7.7043E-09,      
     C 7.3721E-09, 7.0707E-09, 6.8047E-09, 6.5702E-09, 6.3634E-09,      
     C 6.1817E-09, 6.0239E-09, 5.8922E-09, 5.7824E-09, 5.7019E-09,      
     C 5.6368E-09, 5.5940E-09, 5.5669E-09, 5.5583E-09, 5.5653E-09,      
     C 5.5837E-09, 5.6243E-09, 5.6883E-09, 5.7800E-09, 5.8964E-09,      
     C 6.0429E-09, 6.2211E-09, 6.4282E-09, 6.6634E-09, 6.9306E-09,      
     C 7.2336E-09, 7.5739E-09, 7.9562E-09, 8.3779E-09, 8.8575E-09,      
     C 9.3992E-09, 1.0004E-08, 1.0684E-08, 1.1450E-08, 1.2320E-08/      
      DATA S0651/                                                       
     C 1.3311E-08, 1.4455E-08, 1.5758E-08, 1.7254E-08, 1.8927E-08,      
     C 2.0930E-08, 2.3348E-08, 2.6074E-08, 2.9221E-08, 3.2770E-08,      
     C 3.7485E-08, 4.2569E-08, 4.8981E-08, 5.5606E-08, 6.2393E-08,      
     C 7.1901E-08, 8.2921E-08, 9.5513E-08, 1.1111E-07, 1.3143E-07,      
     C 1.5971E-07, 1.8927E-07, 2.2643E-07, 2.7860E-07, 3.2591E-07,      
     C 3.7024E-07, 4.2059E-07, 4.9432E-07, 5.5543E-07, 5.7498E-07,      
     C 5.9210E-07, 6.1005E-07, 6.1577E-07, 5.9193E-07, 5.6602E-07,      
     C 5.7403E-07, 6.0050E-07, 6.4723E-07, 6.7073E-07, 7.5415E-07,      
     C 8.0982E-07, 8.7658E-07, 9.1430E-07, 9.4459E-07, 9.8347E-07,      
     C 9.8768E-07, 1.0153E-06, 1.0066E-06, 1.0353E-06, 1.0353E-06/      
      DATA S0701/                                                       
     C 1.0722E-06, 1.1138E-06, 1.1923E-06, 1.2947E-06, 1.4431E-06,      
     C 1.6537E-06, 1.8662E-06, 2.2473E-06, 2.6464E-06, 3.1041E-06,      
     C 3.4858E-06, 4.0167E-06, 4.6675E-06, 5.0983E-06, 5.7997E-06,      
     C 6.0503E-06, 6.4687E-06, 6.5396E-06, 6.7986E-06, 7.0244E-06,      
     C 7.2305E-06, 7.6732E-06, 7.9783E-06, 7.9846E-06, 7.7617E-06,      
     C 7.7657E-06, 7.7411E-06, 7.8816E-06, 7.8136E-06, 8.0051E-06,      
     C 8.5799E-06, 9.1659E-06, 9.8646E-06, 9.4920E-06, 8.7670E-06,      
     C 8.2034E-06, 7.2297E-06, 6.2324E-06, 4.9315E-06, 3.9128E-06,      
     C 3.1517E-06, 2.4469E-06, 1.8815E-06, 1.4627E-06, 1.1698E-06,      
     C 9.4686E-07, 7.8486E-07, 6.6970E-07, 5.8811E-07, 5.2198E-07/      
      DATA S0751/                                                       
     C 4.6809E-07, 4.1671E-07, 3.7006E-07, 3.3066E-07, 2.9387E-07,      
     C 2.6415E-07, 2.3409E-07, 2.0991E-07, 1.9132E-07, 1.7519E-07,      
     C 1.5939E-07, 1.4368E-07, 1.3050E-07, 1.1883E-07, 1.0772E-07,      
     C 9.6884E-08, 8.7888E-08, 7.8956E-08, 7.1024E-08, 6.3824E-08,      
     C 5.7256E-08, 5.1769E-08, 4.7037E-08, 4.2901E-08, 3.8970E-08,      
     C 3.5467E-08, 3.2502E-08, 2.9827E-08, 2.7389E-08, 2.5111E-08,      
     C 2.3056E-08, 2.1267E-08, 1.9610E-08, 1.8133E-08, 1.6775E-08,      
     C 1.5491E-08, 1.4329E-08, 1.3265E-08, 1.2300E-08, 1.1420E-08,      
     C 1.0593E-08, 9.8475E-09, 9.1585E-09, 8.5256E-09, 7.9525E-09,      
     C 7.4226E-09, 6.9379E-09, 6.4950E-09, 6.0911E-09, 5.7242E-09/      
      DATA S0801/                                                       
     C 5.3877E-09, 5.0821E-09, 4.8051E-09, 4.5554E-09, 4.3315E-09,      
     C 4.1336E-09, 3.9632E-09, 3.8185E-09, 3.7080E-09, 3.6296E-09,      
     C 3.5804E-09, 3.5776E-09, 3.6253E-09, 3.7115E-09, 3.8151E-09,      
     C 3.9804E-09, 4.1742E-09, 4.3581E-09, 4.5306E-09, 4.7736E-09,      
     C 5.1297E-09, 5.5291E-09, 5.9125E-09, 6.4956E-09, 7.0362E-09,      
     C 7.5318E-09, 7.9947E-09, 8.6438E-09, 9.7227E-09, 1.0130E-08,      
     C 1.0549E-08, 1.1064E-08, 1.1702E-08, 1.2043E-08, 1.1781E-08,      
     C 1.1838E-08, 1.1917E-08, 1.2131E-08, 1.2476E-08, 1.3611E-08,      
     C 1.4360E-08, 1.5057E-08, 1.6247E-08, 1.7284E-08, 1.8420E-08,      
     C 1.8352E-08, 1.8722E-08, 1.9112E-08, 1.9092E-08, 1.9311E-08/      
      DATA S0851/                                                       
     C 1.9411E-08, 1.9884E-08, 2.0508E-08, 2.1510E-08, 2.3143E-08,      
     C 2.5050E-08, 2.7596E-08, 3.1231E-08, 3.6260E-08, 4.3410E-08,      
     C 5.2240E-08, 6.3236E-08, 7.7522E-08, 9.8688E-08, 1.1859E-07,      
     C 1.4341E-07, 1.6798E-07, 1.9825E-07, 2.2898E-07, 2.6257E-07,      
     C 2.9884E-07, 3.3247E-07, 3.4936E-07, 3.5583E-07, 3.7150E-07,      
     C 3.6580E-07, 3.7124E-07, 3.7030E-07, 4.1536E-07, 4.6656E-07,      
     C 4.6677E-07, 4.7507E-07, 4.9653E-07, 5.3795E-07, 5.4957E-07,      
     C 5.2238E-07, 5.4690E-07, 5.6569E-07, 5.9844E-07, 5.9835E-07,      
     C 5.6522E-07, 5.4123E-07, 4.7904E-07, 4.2851E-07, 3.5603E-07,      
     C 2.8932E-07, 2.3655E-07, 1.8592E-07, 1.4943E-07, 1.1971E-07/      
      DATA S0901/                                                       
     C 9.8482E-08, 8.3675E-08, 7.1270E-08, 6.2496E-08, 5.4999E-08,      
     C 4.9821E-08, 4.5387E-08, 4.1340E-08, 3.7453E-08, 3.3298E-08,      
     C 3.0120E-08, 2.7032E-08, 2.4236E-08, 2.1500E-08, 1.8988E-08,      
     C 1.7414E-08, 1.5706E-08, 1.4192E-08, 1.3204E-08, 1.1759E-08,      
     C 1.0737E-08, 9.6309E-09, 8.8179E-09, 8.2619E-09, 7.2264E-09,      
     C 6.4856E-09, 5.8037E-09, 5.2093E-09, 4.7205E-09, 4.1749E-09,      
     C 3.7852E-09, 3.3915E-09, 3.0089E-09, 2.7335E-09, 2.4398E-09,      
     C 2.2031E-09, 1.9786E-09, 1.7890E-09, 1.6266E-09, 1.4830E-09,      
     C 1.3576E-09, 1.2518E-09, 1.1587E-09, 1.0726E-09, 9.9106E-10,      
     C 9.1673E-10, 8.5084E-10, 7.9147E-10, 7.2882E-10, 6.7342E-10/      
      DATA S0951/                                                       
     C 6.2593E-10, 5.8294E-10, 5.4435E-10, 5.0997E-10, 4.7806E-10,      
     C 4.4931E-10, 4.2357E-10, 4.0023E-10, 3.7909E-10, 3.5999E-10,      
     C 3.4285E-10, 3.2776E-10, 3.1468E-10, 3.0377E-10, 2.9479E-10,      
     C 2.8877E-10, 2.8512E-10, 2.8617E-10, 2.8976E-10, 3.0001E-10,      
     C 3.1718E-10, 3.3898E-10, 3.5857E-10, 3.8358E-10, 4.3131E-10,      
     C 4.5741E-10, 4.6948E-10, 4.7594E-10, 4.9529E-10, 5.1563E-10,      
     C 4.9475E-10, 4.8369E-10, 4.8829E-10, 5.0047E-10, 5.0203E-10,      
     C 5.1954E-10, 5.5352E-10, 5.9928E-10, 6.7148E-10, 7.1121E-10,      
     C 7.4317E-10, 7.6039E-10, 7.8313E-10, 8.0684E-10, 7.8553E-10,      
     C 7.8312E-10, 7.8537E-10, 7.8872E-10, 8.0185E-10, 8.1004E-10/      
      DATA S1001/                                                       
     C 8.2608E-10, 8.2525E-10, 8.3857E-10, 8.7920E-10, 9.2451E-10,      
     C 9.8661E-10, 1.0629E-09, 1.1659E-09, 1.2922E-09, 1.4387E-09,      
     C 1.6254E-09, 1.8425E-09, 2.1428E-09, 2.5477E-09, 3.0379E-09,      
     C 3.7570E-09, 4.4354E-09, 5.1802E-09, 6.2769E-09, 7.4894E-09,      
     C 8.7474E-09, 9.8037E-09, 1.1582E-08, 1.3293E-08, 1.4471E-08,      
     C 1.5025E-08, 1.5580E-08, 1.6228E-08, 1.6413E-08, 1.6020E-08,      
     C 1.6393E-08, 1.7545E-08, 1.9590E-08, 2.1449E-08, 2.3856E-08,      
     C 2.7050E-08, 3.0214E-08, 3.3733E-08, 3.6487E-08, 3.9353E-08,      
     C 4.2660E-08, 4.6385E-08, 4.9955E-08, 5.5313E-08, 6.0923E-08,      
     C 6.8948E-08, 7.3649E-08, 8.2602E-08, 9.2212E-08, 9.9080E-08/      
      DATA S1051/                                                       
     C 1.1319E-07, 1.1790E-07, 1.2941E-07, 1.3199E-07, 1.3914E-07,      
     C 1.4843E-07, 1.5300E-07, 1.6419E-07, 1.7095E-07, 1.6988E-07,      
     C 1.6494E-07, 1.6327E-07, 1.6067E-07, 1.6909E-07, 1.7118E-07,      
     C 1.8106E-07, 1.9857E-07, 2.1696E-07, 2.3385E-07, 2.2776E-07,      
     C 2.1402E-07, 1.9882E-07, 1.7362E-07, 1.4308E-07, 1.1158E-07,      
     C 8.8781E-08, 6.8689E-08, 5.2062E-08, 4.0427E-08, 3.2669E-08,      
     C 2.7354E-08, 2.3200E-08, 2.0580E-08, 1.8676E-08, 1.7329E-08,      
     C 1.6621E-08, 1.6433E-08, 1.6953E-08, 1.7134E-08, 1.7948E-08,      
     C 1.9107E-08, 1.9875E-08, 2.1416E-08, 2.1556E-08, 2.2265E-08,      
     C 2.2171E-08, 2.2534E-08, 2.3029E-08, 2.2828E-08, 2.3143E-08/      
      DATA S1101/                                                       
     C 2.2965E-08, 2.2223E-08, 2.1108E-08, 2.0265E-08, 1.9516E-08,      
     C 1.9941E-08, 2.0312E-08, 2.1080E-08, 2.2611E-08, 2.4210E-08,      
     C 2.6069E-08, 2.5097E-08, 2.3318E-08, 2.1543E-08, 1.8942E-08,      
     C 1.5960E-08, 1.2386E-08, 9.9340E-09, 7.7502E-09, 5.9462E-09,      
     C 4.5113E-09, 3.5523E-09, 2.8844E-09, 2.3394E-09, 1.9584E-09,      
     C 1.6749E-09, 1.4624E-09, 1.2809E-09, 1.1359E-09, 1.0087E-09,      
     C 9.0166E-10, 8.1079E-10, 7.2219E-10, 6.4922E-10, 5.8803E-10,      
     C 5.3290E-10, 4.8590E-10, 4.4111E-10, 4.0184E-10, 3.6644E-10,      
     C 3.3529E-10, 3.0789E-10, 2.8286E-10, 2.6089E-10, 2.4125E-10,      
     C 2.2355E-10, 2.0783E-10, 1.9370E-10, 1.8088E-10, 1.6948E-10/      
      DATA S1151/                                                       
     C 1.5929E-10, 1.5013E-10, 1.4193E-10, 1.3470E-10, 1.2841E-10,      
     C 1.2307E-10, 1.1865E-10, 1.1502E-10, 1.1243E-10, 1.1099E-10,      
     C 1.1066E-10, 1.1216E-10, 1.1529E-10, 1.2171E-10, 1.3128E-10,      
     C 1.4153E-10, 1.5962E-10, 1.8048E-10, 2.0936E-10, 2.3165E-10,      
     C 2.5746E-10, 2.9600E-10, 3.3707E-10, 3.5267E-10, 3.5953E-10,      
     C 3.6822E-10, 3.8363E-10, 3.8286E-10, 3.5883E-10, 3.6154E-10,      
     C 3.6653E-10, 3.8507E-10, 4.0250E-10, 4.4435E-10, 4.9889E-10,      
     C 5.6932E-10, 6.3599E-10, 7.0281E-10, 7.5777E-10, 8.1279E-10,      
     C 8.8910E-10, 9.3400E-10, 1.0076E-09, 1.0945E-09, 1.1898E-09,      
     C 1.3108E-09, 1.4725E-09, 1.7028E-09, 1.9619E-09, 2.3527E-09/      
      DATA S1201/                                                       
     C 2.6488E-09, 3.0327E-09, 3.4396E-09, 3.8797E-09, 4.4115E-09,      
     C 4.6853E-09, 4.9553E-09, 4.9551E-09, 5.1062E-09, 5.0996E-09,      
     C 5.1119E-09, 5.2283E-09, 5.8297E-09, 6.3439E-09, 6.2675E-09,      
     C 6.3296E-09, 6.5173E-09, 7.1685E-09, 7.0528E-09, 6.8856E-09,      
     C 7.3182E-09, 7.6990E-09, 8.3461E-09, 8.1946E-09, 7.7153E-09,      
     C 7.2411E-09, 6.4511E-09, 5.7336E-09, 4.6105E-09, 3.6962E-09,      
     C 2.9944E-09, 2.4317E-09, 1.9399E-09, 1.5331E-09, 1.2633E-09,      
     C 1.0613E-09, 9.0136E-10, 7.9313E-10, 7.1543E-10, 6.6485E-10,      
     C 6.4225E-10, 6.3980E-10, 6.4598E-10, 6.7428E-10, 7.0270E-10,      
     C 7.4694E-10, 7.7946E-10, 7.9395E-10, 7.8716E-10, 7.6933E-10/      
      DATA S1251/                                                       
     C 7.6220E-10, 7.4825E-10, 7.4805E-10, 7.6511E-10, 7.6492E-10,      
     C 7.4103E-10, 7.1979E-10, 7.1686E-10, 7.3403E-10, 7.1142E-10,      
     C 7.0212E-10, 7.1548E-10, 7.5253E-10, 8.0444E-10, 8.2378E-10,      
     C 7.8004E-10, 7.1712E-10, 6.4978E-10, 5.7573E-10, 4.8675E-10,      
     C 3.7945E-10, 3.0118E-10, 2.4241E-10, 1.9100E-10, 1.4816E-10,      
     C 1.1567E-10, 9.4183E-11, 7.7660E-11, 6.5270E-11, 5.6616E-11,      
     C 4.9576E-11, 4.4137E-11, 3.9459E-11, 3.5759E-11, 3.2478E-11,      
     C 2.9419E-11, 2.6703E-11, 2.4365E-11, 2.2412E-11, 2.0606E-11,      
     C 1.9067E-11, 1.7800E-11, 1.6695E-11, 1.5729E-11, 1.4887E-11,      
     C 1.4135E-11, 1.3519E-11, 1.2992E-11, 1.2563E-11, 1.2223E-11/      
      DATA S1301/                                                       
     C 1.1962E-11, 1.1775E-11, 1.1657E-11, 1.1605E-11, 1.1619E-11,      
     C 1.1697E-11, 1.1839E-11, 1.2046E-11, 1.2319E-11, 1.2659E-11,      
     C 1.3070E-11, 1.3553E-11, 1.4113E-11, 1.4754E-11, 1.5480E-11,      
     C 1.6298E-11, 1.7214E-11, 1.8236E-11, 1.9372E-11, 2.0635E-11,      
     C 2.2036E-11, 2.3590E-11, 2.5317E-11, 2.7242E-11, 2.9400E-11,      
     C 3.1849E-11, 3.4654E-11, 3.7923E-11, 4.1695E-11, 4.6055E-11,      
     C 5.0940E-11, 5.5624E-11, 6.0667E-11, 6.6261E-11, 7.2692E-11,      
     C 7.9711E-11, 8.7976E-11, 9.6884E-11, 1.0775E-10, 1.2093E-10,      
     C 1.3531E-10, 1.5404E-10, 1.7315E-10, 1.9862E-10, 2.3341E-10,      
     C 2.7014E-10, 3.1716E-10, 3.6957E-10, 4.3233E-10, 5.2566E-10/      
      DATA S1351/                                                       
     C 6.2251E-10, 7.2149E-10, 8.3958E-10, 9.5931E-10, 1.1388E-09,      
     C 1.2973E-09, 1.4442E-09, 1.5638E-09, 1.6974E-09, 1.8489E-09,      
     C 1.9830E-09, 2.1720E-09, 2.3662E-09, 2.6987E-09, 3.1697E-09,      
     C 3.6907E-09, 4.2625E-09, 4.7946E-09, 5.3848E-09, 6.0897E-09,      
     C 6.4730E-09, 7.1483E-09, 7.7432E-09, 8.0851E-09, 8.5013E-09,      
     C 8.5909E-09, 9.1890E-09, 9.3124E-09, 9.5936E-09, 9.8787E-09,      
     C 9.9036E-09, 9.6712E-09, 9.2036E-09, 9.0466E-09, 8.9380E-09,      
     C 9.1815E-09, 9.5092E-09, 1.0027E-08, 1.0876E-08, 1.1744E-08,      
     C 1.1853E-08, 1.1296E-08, 1.0134E-08, 8.8245E-09, 7.3930E-09,      
     C 5.7150E-09, 4.4884E-09, 3.4027E-09, 2.6054E-09, 2.0790E-09/      
      DATA S1401/                                                       
     C 1.7267E-09, 1.4724E-09, 1.2722E-09, 1.1234E-09, 1.0186E-09,      
     C 9.4680E-10, 8.8854E-10, 8.5127E-10, 8.3157E-10, 8.2226E-10,      
     C 8.3395E-10, 8.3294E-10, 8.4725E-10, 8.8814E-10, 9.3697E-10,      
     C 1.0112E-09, 1.0412E-09, 1.0948E-09, 1.1810E-09, 1.2267E-09,      
     C 1.3690E-09, 1.4512E-09, 1.5568E-09, 1.6552E-09, 1.7321E-09,      
     C 1.8797E-09, 1.9210E-09, 1.9686E-09, 1.9917E-09, 1.9357E-09,      
     C 1.8486E-09, 1.7575E-09, 1.7113E-09, 1.7163E-09, 1.7623E-09,      
     C 1.8536E-09, 1.9765E-09, 2.1334E-09, 2.3237E-09, 2.3259E-09,      
     C 2.1833E-09, 1.9785E-09, 1.7308E-09, 1.4596E-09, 1.1198E-09,      
     C 8.7375E-10, 6.5381E-10, 4.8677E-10, 3.6756E-10, 2.9155E-10/      
      DATA S1451/                                                       
     C 2.3735E-10, 1.9590E-10, 1.6638E-10, 1.4549E-10, 1.2947E-10,      
     C 1.1511E-10, 1.0548E-10, 9.6511E-11, 9.0469E-11, 8.5170E-11,      
     C 7.7804E-11, 7.1971E-11, 6.6213E-11, 6.1063E-11, 5.5881E-11,      
     C 5.0508E-11, 4.5932E-11, 4.1997E-11, 3.7672E-11, 3.3972E-11,      
     C 3.0318E-11, 2.6769E-11, 2.3874E-11, 2.1336E-11, 1.9073E-11,      
     C 1.7313E-11, 1.5904E-11, 1.4684E-11, 1.3698E-11, 1.2873E-11,      
     C 1.2175E-11, 1.1542E-11, 1.1024E-11, 1.0602E-11, 1.0267E-11,      
     C 1.0012E-11, 9.8379E-12, 9.7482E-12, 9.7564E-12, 9.8613E-12,      
     C 1.0092E-11, 1.0418E-11, 1.0868E-11, 1.1585E-11, 1.2351E-11,      
     C 1.3372E-11, 1.4841E-11, 1.6457E-11, 1.8681E-11, 2.0550E-11/      
      DATA S1501/                                                       
     C 2.2912E-11, 2.5958E-11, 2.9137E-11, 3.2368E-11, 3.4848E-11,      
     C 3.8462E-11, 4.2190E-11, 4.5629E-11, 4.9022E-11, 5.4232E-11,      
     C 6.1900E-11, 7.1953E-11, 8.5368E-11, 9.9699E-11, 1.1734E-10,      
     C 1.4185E-10, 1.7017E-10, 1.9813E-10, 2.3859E-10, 2.7304E-10,      
     C 3.0971E-10, 3.5129E-10, 3.9405E-10, 4.5194E-10, 4.8932E-10,      
     C 5.2436E-10, 5.4098E-10, 5.5542E-10, 5.7794E-10, 5.6992E-10,      
     C 5.8790E-10, 6.1526E-10, 6.8034E-10, 6.7956E-10, 6.6864E-10,      
     C 6.9329E-10, 7.2971E-10, 7.6546E-10, 7.5078E-10, 7.8406E-10,      
     C 8.3896E-10, 9.0111E-10, 9.1994E-10, 8.7189E-10, 8.1426E-10,      
     C 7.3097E-10, 6.3357E-10, 5.1371E-10, 4.0936E-10, 3.2918E-10/      
      DATA S1551/                                                       
     C 2.6255E-10, 2.0724E-10, 1.6879E-10, 1.4165E-10, 1.1989E-10,      
     C 1.0125E-10, 8.9629E-11, 7.8458E-11, 6.8826E-11, 6.0935E-11,      
     C 5.5208E-11, 5.2262E-11, 5.0260E-11, 4.8457E-11, 4.7888E-11,      
     C 4.8032E-11, 5.0838E-11, 5.4668E-11, 5.5790E-11, 6.0056E-11,      
     C 6.3811E-11, 6.8848E-11, 7.4590E-11, 7.8249E-11, 8.3371E-11,      
     C 8.3641E-11, 8.6591E-11, 8.9599E-11, 9.3487E-11, 1.0066E-10,      
     C 1.0765E-10, 1.0851E-10, 1.0619E-10, 1.0557E-10, 1.0460E-10,      
     C 1.0796E-10, 1.0523E-10, 1.0674E-10, 1.1261E-10, 1.1431E-10,      
     C 1.1408E-10, 1.0901E-10, 9.9105E-11, 8.8077E-11, 6.9928E-11,      
     C 5.4595E-11, 4.5401E-11, 3.6313E-11, 2.6986E-11, 1.9463E-11/      
      DATA S1601/                                                       
     C 1.4577E-11, 1.1583E-11, 9.5492E-12, 8.0770E-12, 6.9642E-12,      
     C 6.0966E-12, 5.4046E-12, 4.8431E-12, 4.3815E-12, 3.9987E-12,      
     C 3.6790E-12, 3.4113E-12, 3.1868E-12, 2.9992E-12, 2.8434E-12,      
     C 2.7153E-12, 2.6120E-12, 2.5311E-12, 2.4705E-12, 2.4290E-12,      
     C 2.4053E-12, 2.3988E-12, 2.4087E-12, 2.4349E-12, 2.4771E-12,      
     C 2.5355E-12, 2.6103E-12, 2.7019E-12, 2.8110E-12, 2.9383E-12,      
     C 3.0848E-12, 3.2518E-12, 3.4405E-12, 3.6527E-12, 3.8902E-12,      
     C 4.1555E-12, 4.4510E-12, 4.7801E-12, 5.1462E-12, 5.5539E-12,      
     C 6.0086E-12, 6.5171E-12, 7.0884E-12, 7.7357E-12, 8.4831E-12,      
     C 9.3096E-12, 1.0282E-11, 1.1407E-11, 1.2690E-11, 1.4148E-11/      
      DATA S1651/                                                       
     C 1.5888E-11, 1.7992E-11, 2.0523E-11, 2.3342E-11, 2.6578E-11,      
     C 3.0909E-11, 3.6228E-11, 4.2053E-11, 4.9059E-11, 5.9273E-11,      
     C 7.0166E-11, 8.2298E-11, 9.7071E-11, 1.1673E-10, 1.4010E-10,      
     C 1.6621E-10, 2.0127E-10, 2.3586E-10, 2.7050E-10, 3.0950E-10,      
     C 3.6584E-10, 4.1278E-10, 4.6591E-10, 5.2220E-10, 5.5246E-10,      
     C 6.1500E-10, 6.5878E-10, 7.1167E-10, 7.9372E-10, 8.6975E-10,      
     C 9.6459E-10, 9.7368E-10, 9.8142E-10, 1.0202E-09, 1.0200E-09,      
     C 1.0356E-09, 1.0092E-09, 1.0269E-09, 1.0366E-09, 1.0490E-09,      
     C 1.0717E-09, 1.0792E-09, 1.1016E-09, 1.0849E-09, 1.0929E-09,      
     C 1.0971E-09, 1.0969E-09, 1.0460E-09, 9.2026E-10, 8.1113E-10/      
      DATA S1701/                                                       
     C 6.8635E-10, 5.5369E-10, 4.2908E-10, 3.3384E-10, 2.6480E-10,      
     C 2.0810E-10, 1.6915E-10, 1.4051E-10, 1.1867E-10, 1.0158E-10,      
     C 8.8990E-11, 7.9175E-11, 7.0440E-11, 6.3453E-11, 5.7009E-11,      
     C 5.1662E-11, 4.7219E-11, 4.3454E-11, 4.0229E-11, 3.7689E-11,      
     C 3.6567E-11, 3.5865E-11, 3.5955E-11, 3.5928E-11, 3.6298E-11,      
     C 3.7629E-11, 3.9300E-11, 4.1829E-11, 4.4806E-11, 5.0534E-11,      
     C 5.6672E-11, 6.2138E-11, 6.8678E-11, 7.6111E-11, 8.4591E-11,      
     C 9.2634E-11, 9.8085E-11, 1.0830E-10, 1.1949E-10, 1.2511E-10,      
     C 1.3394E-10, 1.3505E-10, 1.4342E-10, 1.4874E-10, 1.4920E-10,      
     C 1.5872E-10, 1.5972E-10, 1.5821E-10, 1.5425E-10, 1.4937E-10/      
      DATA S1751/                                                       
     C 1.5089E-10, 1.5521E-10, 1.6325E-10, 1.6924E-10, 1.8265E-10,      
     C 1.9612E-10, 2.0176E-10, 1.9359E-10, 1.7085E-10, 1.5197E-10,      
     C 1.2646E-10, 9.8552E-11, 7.4530E-11, 5.5052E-11, 4.2315E-11,      
     C 3.2736E-11, 2.6171E-11, 2.1909E-11, 1.8286E-11, 1.5752E-11,      
     C 1.3859E-11, 1.2288E-11, 1.1002E-11, 9.7534E-12, 8.8412E-12,      
     C 8.0169E-12, 7.2855E-12, 6.8734E-12, 6.4121E-12, 6.1471E-12,      
     C 5.7780E-12, 5.3478E-12, 4.9652E-12, 4.4043E-12, 3.9862E-12,      
     C 3.4684E-12, 2.9681E-12, 2.5791E-12, 2.2339E-12, 1.9247E-12,      
     C 1.6849E-12, 1.4863E-12, 1.3291E-12, 1.2021E-12, 1.0947E-12,      
     C 1.0015E-12, 9.1935E-13, 8.4612E-13, 7.8036E-13, 7.2100E-13/      
      DATA S1801/                                                       
     C 6.6718E-13, 6.1821E-13, 5.7353E-13, 5.3269E-13, 4.9526E-13,      
     C 4.6093E-13, 4.2937E-13, 4.0034E-13, 3.7361E-13, 3.4895E-13,      
     C 3.2621E-13, 3.0520E-13, 2.8578E-13, 2.6782E-13, 2.5120E-13,      
     C 2.3581E-13, 2.2154E-13, 2.0832E-13, 1.9605E-13, 1.8466E-13,      
     C 1.7408E-13, 1.6425E-13, 1.5511E-13, 1.4661E-13, 1.3869E-13,      
     C 1.3131E-13, 1.2444E-13, 1.1803E-13, 1.1205E-13, 1.0646E-13,      
     C 1.0124E-13, 9.6358E-14, 9.1789E-14, 8.7509E-14, 8.3498E-14,      
     C 7.9735E-14, 7.6202E-14, 7.2882E-14, 6.9760E-14, 6.6822E-14,      
     C 6.4053E-14, 6.1442E-14, 5.8978E-14, 5.6650E-14, 5.4448E-14,      
     C 5.2364E-14, 5.0389E-14, 4.8516E-14, 4.6738E-14, 4.5048E-14/      
      DATA S1851/                                                       
     C 4.3441E-14, 4.1911E-14, 4.0453E-14, 3.9063E-14, 3.7735E-14,      
     C 3.6467E-14, 3.5254E-14, 3.4093E-14, 3.2980E-14, 3.1914E-14,      
     C 3.0891E-14, 2.9909E-14, 2.8965E-14, 2.8058E-14, 2.7185E-14,      
     C 2.6344E-14, 2.5535E-14, 2.4755E-14, 2.4002E-14, 2.3276E-14,      
     C 2.2576E-14, 2.1899E-14, 2.1245E-14, 2.0613E-14, 2.0002E-14,      
     C 1.9411E-14, 1.8839E-14, 1.8285E-14, 1.7749E-14, 1.7230E-14,      
     C 1.6727E-14, 1.6240E-14, 1.5768E-14, 1.5310E-14, 1.4867E-14,      
     C 1.4436E-14, 1.4019E-14, 1.3614E-14, 1.3221E-14, 1.2840E-14,      
     C 1.2471E-14, 1.2112E-14, 1.1764E-14, 1.1425E-14, 1.1097E-14,      
     C 1.0779E-14, 1.0469E-14, 1.0169E-14, 9.8775E-15, 9.5943E-15/      
      DATA S1901/                                                       
     C 9.3193E-15, 9.0522E-15, 8.7928E-15, 8.5409E-15, 8.2962E-15,      
     C 8.0586E-15, 7.8278E-15, 7.6036E-15, 7.3858E-15, 7.1742E-15,      
     C 6.9687E-15, 6.7691E-15, 6.5752E-15, 6.3868E-15, 6.2038E-15,      
     C 6.0260E-15, 5.8533E-15, 5.6856E-15, 5.5226E-15, 5.3642E-15,      
     C 5.2104E-15, 5.0610E-15, 4.9158E-15, 4.7748E-15, 4.6378E-15,      
     C 4.5047E-15, 4.3753E-15, 4.2497E-15, 4.1277E-15, 4.0091E-15,      
     C 3.8939E-15, 3.7820E-15, 3.6733E-15, 3.5677E-15, 3.4651E-15,      
     C 3.3655E-15, 3.2686E-15, 3.1746E-15, 3.0832E-15, 2.9944E-15,      
     C 2.9082E-15, 2.8244E-15, 2.7431E-15, 2.6640E-15, 2.5872E-15,      
     C 2.5126E-15, 2.4401E-15, 2.3697E-15, 2.3014E-15, 2.2349E-15/      
      DATA S1951/                                                       
     C 2.1704E-15, 2.1077E-15, 2.0468E-15, 1.9877E-15, 1.9302E-15,      
     C 1.8744E-15, 1.8202E-15, 1.7675E-15, 1.7164E-15, 1.6667E-15,      
     C 1.6184E-15, 1.5716E-15, 1.5260E-15, 1.4818E-15, 1.4389E-15,      
     C 1.3971E-15, 1.3566E-15, 1.3172E-15, 1.2790E-15, 1.2419E-15,      
     C 1.2058E-15, 1.1708E-15, 1.1368E-15, 1.1037E-15, 1.0716E-15,      
     C 1.0405E-15, 1.0102E-15, 9.8079E-16, 9.5224E-16, 9.2451E-16,      
     C 8.9758E-16, 8.7142E-16, 8.4602E-16, 8.2136E-16, 7.9740E-16,      
     C 7.7414E-16, 7.5154E-16, 7.2961E-16, 7.0830E-16, 6.8761E-16,      
     C 6.6752E-16, 6.4801E-16, 6.2906E-16, 6.1066E-16, 5.9280E-16,      
     C 5.7545E-16, 5.5860E-16, 5.4224E-16, 5.2636E-16, 5.1094E-16/      
      DATA S2001/                                                       
     C 4.9596E-16/                                                      
C                                                                       
      END                                                               
      BLOCK DATA SF296                                                  
C>    BLOCK DATA                                                        
C               06/28/82                                                
C               UNITS OF (CM**3/MOL) * 1.E-20                           
      COMMON /SH2O/ V1,V2,DV,NPT,S0000(2),                              
     1      S0001(50),S0051(50),S0101(50),S0151(50),S0201(50),S0251(50),
     2      S0301(50),S0351(50),S0401(50),S0451(50),S0501(50),S0551(50),
     3      S0601(50),S0651(50),S0701(50),S0751(50),S0801(50),S0851(50),
     4      S0901(50),S0951(50),S1001(50),S1051(50),S1101(50),S1151(50),
     5      S1201(50),S1251(50),S1301(50),S1351(50),S1401(50),S1451(50),
     6      S1501(50),S1551(50),S1601(50),S1651(50),S1701(50),S1751(50),
     7      S1801(50),S1851(50),S1901(50),S1951(50),S2001(1)            
C                                                                       
C                                                                       
       DATA V1,V2,DV,NPT /                                              
     1      -20.0,     20000.0,       10.0,  2003/                      
C                                                                       
C                                                                       
      DATA S0000/ 1.1109E-01 ,1.0573E-01/                               
      DATA S0001/                                                       
     C 1.0162E-01, 1.0573E-01, 1.1109E-01, 1.2574E-01, 1.3499E-01,      
     C 1.4327E-01, 1.5065E-01, 1.5164E-01, 1.5022E-01, 1.3677E-01,      
     C 1.3115E-01, 1.2253E-01, 1.1271E-01, 1.0070E-01, 8.7495E-02,      
     C 8.0118E-02, 6.9940E-02, 6.2034E-02, 5.6051E-02, 4.7663E-02,      
     C 4.2450E-02, 3.6690E-02, 3.3441E-02, 3.0711E-02, 2.5205E-02,      
     C 2.2113E-02, 1.8880E-02, 1.6653E-02, 1.4626E-02, 1.2065E-02,      
     C 1.0709E-02, 9.1783E-03, 7.7274E-03, 6.7302E-03, 5.6164E-03,      
     C 4.9089E-03, 4.1497E-03, 3.5823E-03, 3.1124E-03, 2.6414E-03,      
     C 2.3167E-03, 2.0156E-03, 1.7829E-03, 1.5666E-03, 1.3928E-03,      
     C 1.2338E-03, 1.0932E-03, 9.7939E-04, 8.8241E-04, 7.9173E-04/      
      DATA S0051/                                                       
     C 7.1296E-04, 6.4179E-04, 5.8031E-04, 5.2647E-04, 4.7762E-04,      
     C 4.3349E-04, 3.9355E-04, 3.5887E-04, 3.2723E-04, 2.9919E-04,      
     C 2.7363E-04, 2.5013E-04, 2.2876E-04, 2.0924E-04, 1.9193E-04,      
     C 1.7618E-04, 1.6188E-04, 1.4891E-04, 1.3717E-04, 1.2647E-04,      
     C 1.1671E-04, 1.0786E-04, 9.9785E-05, 9.2350E-05, 8.5539E-05,      
     C 7.9377E-05, 7.3781E-05, 6.8677E-05, 6.3993E-05, 5.9705E-05,      
     C 5.5788E-05, 5.2196E-05, 4.8899E-05, 4.5865E-05, 4.3079E-05,      
     C 4.0526E-05, 3.8182E-05, 3.6025E-05, 3.4038E-05, 3.2203E-05,      
     C 3.0511E-05, 2.8949E-05, 2.7505E-05, 2.6170E-05, 2.4933E-05,      
     C 2.3786E-05, 2.2722E-05, 2.1736E-05, 2.0819E-05, 1.9968E-05/      
      DATA S0101/                                                       
     C 1.9178E-05, 1.8442E-05, 1.7760E-05, 1.7127E-05, 1.6541E-05,      
     C 1.5997E-05, 1.5495E-05, 1.5034E-05, 1.4614E-05, 1.4230E-05,      
     C 1.3883E-05, 1.3578E-05, 1.3304E-05, 1.3069E-05, 1.2876E-05,      
     C 1.2732E-05, 1.2626E-05, 1.2556E-05, 1.2544E-05, 1.2604E-05,      
     C 1.2719E-05, 1.2883E-05, 1.3164E-05, 1.3581E-05, 1.4187E-05,      
     C 1.4866E-05, 1.5669E-05, 1.6717E-05, 1.8148E-05, 2.0268E-05,      
     C 2.2456E-05, 2.5582E-05, 2.9183E-05, 3.3612E-05, 3.9996E-05,      
     C 4.6829E-05, 5.5055E-05, 6.5897E-05, 7.5360E-05, 8.7213E-05,      
     C 1.0046E-04, 1.1496E-04, 1.2943E-04, 1.5049E-04, 1.6973E-04,      
     C 1.8711E-04, 2.0286E-04, 2.2823E-04, 2.6780E-04, 2.8766E-04/      
      DATA S0151/                                                       
     C 3.1164E-04, 3.3640E-04, 3.6884E-04, 3.9159E-04, 3.8712E-04,      
     C 3.7433E-04, 3.4503E-04, 3.1003E-04, 2.8027E-04, 2.5253E-04,      
     C 2.3408E-04, 2.2836E-04, 2.4442E-04, 2.7521E-04, 2.9048E-04,      
     C 3.0489E-04, 3.2646E-04, 3.3880E-04, 3.3492E-04, 3.0987E-04,      
     C 2.9482E-04, 2.8711E-04, 2.6068E-04, 2.2683E-04, 1.9996E-04,      
     C 1.7788E-04, 1.6101E-04, 1.3911E-04, 1.2013E-04, 1.0544E-04,      
     C 9.4224E-05, 8.1256E-05, 7.3667E-05, 6.2233E-05, 5.5906E-05,      
     C 5.1619E-05, 4.5140E-05, 4.0273E-05, 3.3268E-05, 3.0258E-05,      
     C 2.6440E-05, 2.3103E-05, 2.0749E-05, 1.8258E-05, 1.6459E-05,      
     C 1.4097E-05, 1.2052E-05, 1.0759E-05, 9.1400E-06, 8.1432E-06/      
      DATA S0201/                                                       
     C 7.1460E-06, 6.4006E-06, 5.6995E-06, 4.9372E-06, 4.4455E-06,      
     C 3.9033E-06, 3.4740E-06, 3.1269E-06, 2.8059E-06, 2.5558E-06,      
     C 2.2919E-06, 2.0846E-06, 1.8983E-06, 1.7329E-06, 1.5929E-06,      
     C 1.4631E-06, 1.3513E-06, 1.2461E-06, 1.1519E-06, 1.0682E-06,      
     C 9.9256E-07, 9.2505E-07, 8.6367E-07, 8.0857E-07, 7.5674E-07,      
     C 7.0934E-07, 6.6580E-07, 6.2580E-07, 5.8853E-07, 5.5333E-07,      
     C 5.2143E-07, 4.9169E-07, 4.6431E-07, 4.3898E-07, 4.1564E-07,      
     C 3.9405E-07, 3.7403E-07, 3.5544E-07, 3.3819E-07, 3.2212E-07,      
     C 3.0714E-07, 2.9313E-07, 2.8003E-07, 2.6777E-07, 2.5628E-07,      
     C 2.4551E-07, 2.3540E-07, 2.2591E-07, 2.1701E-07, 2.0866E-07/      
      DATA S0251/                                                       
     C 2.0082E-07, 1.9349E-07, 1.8665E-07, 1.8027E-07, 1.7439E-07,      
     C 1.6894E-07, 1.6400E-07, 1.5953E-07, 1.5557E-07, 1.5195E-07,      
     C 1.4888E-07, 1.4603E-07, 1.4337E-07, 1.4093E-07, 1.3828E-07,      
     C 1.3569E-07, 1.3270E-07, 1.2984E-07, 1.2714E-07, 1.2541E-07,      
     C 1.2399E-07, 1.2102E-07, 1.1878E-07, 1.1728E-07, 1.1644E-07,      
     C 1.1491E-07, 1.1305E-07, 1.1235E-07, 1.1228E-07, 1.1224E-07,      
     C 1.1191E-07, 1.1151E-07, 1.1098E-07, 1.1068E-07, 1.1109E-07,      
     C 1.1213E-07, 1.1431E-07, 1.1826E-07, 1.2322E-07, 1.3025E-07,      
     C 1.4066E-07, 1.5657E-07, 1.7214E-07, 1.9449E-07, 2.2662E-07,      
     C 2.6953E-07, 3.1723E-07, 3.7028E-07, 4.4482E-07, 5.3852E-07/      
      DATA S0301/                                                       
     C 6.2639E-07, 7.2175E-07, 7.7626E-07, 8.7248E-07, 9.6759E-07,      
     C 1.0102E-06, 1.0620E-06, 1.1201E-06, 1.2107E-06, 1.2998E-06,      
     C 1.3130E-06, 1.2856E-06, 1.2350E-06, 1.1489E-06, 1.0819E-06,      
     C 1.0120E-06, 9.4795E-07, 9.2858E-07, 9.8060E-07, 1.0999E-06,      
     C 1.1967E-06, 1.2672E-06, 1.3418E-06, 1.3864E-06, 1.4330E-06,      
     C 1.4592E-06, 1.4598E-06, 1.4774E-06, 1.4726E-06, 1.4820E-06,      
     C 1.5050E-06, 1.4984E-06, 1.5181E-06, 1.5888E-06, 1.6850E-06,      
     C 1.7690E-06, 1.9277E-06, 2.1107E-06, 2.3068E-06, 2.5347E-06,      
     C 2.8069E-06, 3.1345E-06, 3.5822E-06, 3.9051E-06, 4.3422E-06,      
     C 4.8704E-06, 5.5351E-06, 6.3454E-06, 7.2690E-06, 8.2974E-06/      
      DATA S0351/                                                       
     C 9.7609E-06, 1.1237E-05, 1.3187E-05, 1.5548E-05, 1.8784E-05,      
     C 2.1694E-05, 2.5487E-05, 3.0092E-05, 3.5385E-05, 4.2764E-05,      
     C 4.9313E-05, 5.5800E-05, 6.2968E-05, 7.1060E-05, 7.7699E-05,      
     C 8.7216E-05, 8.9335E-05, 9.2151E-05, 9.2779E-05, 9.4643E-05,      
     C 9.7978E-05, 1.0008E-04, 1.0702E-04, 1.1026E-04, 1.0828E-04,      
     C 1.0550E-04, 1.0432E-04, 1.0428E-04, 9.8980E-05, 9.4992E-05,      
     C 9.5159E-05, 1.0058E-04, 1.0738E-04, 1.1550E-04, 1.1229E-04,      
     C 1.0596E-04, 1.0062E-04, 9.1742E-05, 8.4492E-05, 6.8099E-05,      
     C 5.6295E-05, 4.6502E-05, 3.8071E-05, 3.0721E-05, 2.3297E-05,      
     C 1.8688E-05, 1.4830E-05, 1.2049E-05, 9.6754E-06, 7.9192E-06/      
      DATA S0401/                                                       
     C 6.6673E-06, 5.6468E-06, 4.8904E-06, 4.2289E-06, 3.6880E-06,      
     C 3.2396E-06, 2.8525E-06, 2.5363E-06, 2.2431E-06, 1.9949E-06,      
     C 1.7931E-06, 1.6164E-06, 1.4431E-06, 1.2997E-06, 1.1559E-06,      
     C 1.0404E-06, 9.4300E-07, 8.4597E-07, 7.6133E-07, 6.8623E-07,      
     C 6.2137E-07, 5.6345E-07, 5.1076E-07, 4.6246E-07, 4.1906E-07,      
     C 3.8063E-07, 3.4610E-07, 3.1554E-07, 2.8795E-07, 2.6252E-07,      
     C 2.3967E-07, 2.1901E-07, 2.0052E-07, 1.8384E-07, 1.6847E-07,      
     C 1.5459E-07, 1.4204E-07, 1.3068E-07, 1.2036E-07, 1.1095E-07,      
     C 1.0237E-07, 9.4592E-08, 8.7530E-08, 8.1121E-08, 7.5282E-08,      
     C 6.9985E-08, 6.5189E-08, 6.0874E-08, 5.6989E-08, 5.3530E-08/      
      DATA S0451/                                                       
     C 5.0418E-08, 4.7745E-08, 4.5367E-08, 4.3253E-08, 4.1309E-08,      
     C 3.9695E-08, 3.8094E-08, 3.6482E-08, 3.4897E-08, 3.3500E-08,      
     C 3.2302E-08, 3.0854E-08, 2.9698E-08, 2.8567E-08, 2.7600E-08,      
     C 2.6746E-08, 2.5982E-08, 2.5510E-08, 2.5121E-08, 2.4922E-08,      
     C 2.4909E-08, 2.5013E-08, 2.5216E-08, 2.5589E-08, 2.6049E-08,      
     C 2.6451E-08, 2.6978E-08, 2.7687E-08, 2.8600E-08, 2.9643E-08,      
     C 3.0701E-08, 3.2058E-08, 3.3695E-08, 3.5558E-08, 3.7634E-08,      
     C 3.9875E-08, 4.2458E-08, 4.5480E-08, 4.8858E-08, 5.2599E-08,      
     C 5.7030E-08, 6.2067E-08, 6.7911E-08, 7.4579E-08, 8.1902E-08,      
     C 8.9978E-08, 9.9870E-08, 1.1102E-07, 1.2343E-07, 1.3732E-07/      
      DATA S0501/                                                       
     C 1.5394E-07, 1.7318E-07, 1.9383E-07, 2.1819E-07, 2.4666E-07,      
     C 2.8109E-07, 3.2236E-07, 3.7760E-07, 4.4417E-07, 5.2422E-07,      
     C 6.1941E-07, 7.4897E-07, 9.2041E-07, 1.1574E-06, 1.4126E-06,      
     C 1.7197E-06, 2.1399E-06, 2.6266E-06, 3.3424E-06, 3.8418E-06,      
     C 4.5140E-06, 5.0653E-06, 5.8485E-06, 6.5856E-06, 6.8937E-06,      
     C 6.9121E-06, 6.9005E-06, 6.9861E-06, 6.8200E-06, 6.6089E-06,      
     C 6.5809E-06, 7.3496E-06, 8.0311E-06, 8.3186E-06, 8.4260E-06,      
     C 9.0644E-06, 9.4965E-06, 9.4909E-06, 9.0160E-06, 9.1494E-06,      
     C 9.3629E-06, 9.5944E-06, 9.5459E-06, 8.9919E-06, 8.6040E-06,      
     C 7.8613E-06, 7.1567E-06, 6.2677E-06, 5.1899E-06, 4.4188E-06/      
      DATA S0551/                                                       
     C 3.7167E-06, 3.0636E-06, 2.5573E-06, 2.0317E-06, 1.6371E-06,      
     C 1.3257E-06, 1.0928E-06, 8.9986E-07, 7.4653E-07, 6.1111E-07,      
     C 5.1395E-07, 4.3500E-07, 3.7584E-07, 3.2633E-07, 2.8413E-07,      
     C 2.4723E-07, 2.1709E-07, 1.9294E-07, 1.7258E-07, 1.5492E-07,      
     C 1.3820E-07, 1.2389E-07, 1.1189E-07, 1.0046E-07, 9.0832E-08,      
     C 8.2764E-08, 7.4191E-08, 6.7085E-08, 6.0708E-08, 5.4963E-08,      
     C 4.9851E-08, 4.5044E-08, 4.0916E-08, 3.7220E-08, 3.3678E-08,      
     C 3.0663E-08, 2.7979E-08, 2.5495E-08, 2.3286E-08, 2.1233E-08,      
     C 1.9409E-08, 1.7770E-08, 1.6260E-08, 1.4885E-08, 1.3674E-08,      
     C 1.2543E-08, 1.1551E-08, 1.0655E-08, 9.8585E-09, 9.1398E-09/      
      DATA S0601/                                                       
     C 8.4806E-09, 7.8899E-09, 7.3547E-09, 6.8670E-09, 6.4131E-09,      
     C 5.9930E-09, 5.6096E-09, 5.2592E-09, 4.9352E-09, 4.6354E-09,      
     C 4.3722E-09, 4.1250E-09, 3.9081E-09, 3.7118E-09, 3.5372E-09,      
     C 3.3862E-09, 3.2499E-09, 3.1324E-09, 3.0313E-09, 2.9438E-09,      
     C 2.8686E-09, 2.8050E-09, 2.7545E-09, 2.7149E-09, 2.6907E-09,      
     C 2.6724E-09, 2.6649E-09, 2.6642E-09, 2.6725E-09, 2.6871E-09,      
     C 2.7056E-09, 2.7357E-09, 2.7781E-09, 2.8358E-09, 2.9067E-09,      
     C 2.9952E-09, 3.1020E-09, 3.2253E-09, 3.3647E-09, 3.5232E-09,      
     C 3.7037E-09, 3.9076E-09, 4.1385E-09, 4.3927E-09, 4.6861E-09,      
     C 5.0238E-09, 5.4027E-09, 5.8303E-09, 6.3208E-09, 6.8878E-09/      
      DATA S0651/                                                       
     C 7.5419E-09, 8.3130E-09, 9.1952E-09, 1.0228E-08, 1.1386E-08,      
     C 1.2792E-08, 1.4521E-08, 1.6437E-08, 1.8674E-08, 2.1160E-08,      
     C 2.4506E-08, 2.8113E-08, 3.2636E-08, 3.7355E-08, 4.2234E-08,      
     C 4.9282E-08, 5.7358E-08, 6.6743E-08, 7.8821E-08, 9.4264E-08,      
     C 1.1542E-07, 1.3684E-07, 1.6337E-07, 2.0056E-07, 2.3252E-07,      
     C 2.6127E-07, 2.9211E-07, 3.3804E-07, 3.7397E-07, 3.8205E-07,      
     C 3.8810E-07, 3.9499E-07, 3.9508E-07, 3.7652E-07, 3.5859E-07,      
     C 3.6198E-07, 3.7871E-07, 4.0925E-07, 4.2717E-07, 4.8241E-07,      
     C 5.2008E-07, 5.6530E-07, 5.9531E-07, 6.1994E-07, 6.5080E-07,      
     C 6.6355E-07, 6.9193E-07, 6.9930E-07, 7.3058E-07, 7.4678E-07/      
      DATA S0701/                                                       
     C 7.9193E-07, 8.3627E-07, 9.1267E-07, 1.0021E-06, 1.1218E-06,      
     C 1.2899E-06, 1.4447E-06, 1.7268E-06, 2.0025E-06, 2.3139E-06,      
     C 2.5599E-06, 2.8920E-06, 3.3059E-06, 3.5425E-06, 3.9522E-06,      
     C 4.0551E-06, 4.2818E-06, 4.2892E-06, 4.4210E-06, 4.5614E-06,      
     C 4.6739E-06, 4.9482E-06, 5.1118E-06, 5.0986E-06, 4.9417E-06,      
     C 4.9022E-06, 4.8449E-06, 4.8694E-06, 4.8111E-06, 4.9378E-06,      
     C 5.3231E-06, 5.7362E-06, 6.2350E-06, 6.0951E-06, 5.7281E-06,      
     C 5.4585E-06, 4.9032E-06, 4.3009E-06, 3.4776E-06, 2.8108E-06,      
     C 2.2993E-06, 1.7999E-06, 1.3870E-06, 1.0750E-06, 8.5191E-07,      
     C 6.7951E-07, 5.5336E-07, 4.6439E-07, 4.0243E-07, 3.5368E-07/      
      DATA S0751/                                                       
     C 3.1427E-07, 2.7775E-07, 2.4486E-07, 2.1788E-07, 1.9249E-07,      
     C 1.7162E-07, 1.5115E-07, 1.3478E-07, 1.2236E-07, 1.1139E-07,      
     C 1.0092E-07, 9.0795E-08, 8.2214E-08, 7.4691E-08, 6.7486E-08,      
     C 6.0414E-08, 5.4584E-08, 4.8754E-08, 4.3501E-08, 3.8767E-08,      
     C 3.4363E-08, 3.0703E-08, 2.7562E-08, 2.4831E-08, 2.2241E-08,      
     C 1.9939E-08, 1.8049E-08, 1.6368E-08, 1.4863E-08, 1.3460E-08,      
     C 1.2212E-08, 1.1155E-08, 1.0185E-08, 9.3417E-09, 8.5671E-09,      
     C 7.8292E-09, 7.1749E-09, 6.5856E-09, 6.0588E-09, 5.5835E-09,      
     C 5.1350E-09, 4.7395E-09, 4.3771E-09, 4.0476E-09, 3.7560E-09,      
     C 3.4861E-09, 3.2427E-09, 3.0240E-09, 2.8278E-09, 2.6531E-09/      
      DATA S0801/                                                       
     C 2.4937E-09, 2.3511E-09, 2.2245E-09, 2.1133E-09, 2.0159E-09,      
     C 1.9330E-09, 1.8669E-09, 1.8152E-09, 1.7852E-09, 1.7752E-09,      
     C 1.7823E-09, 1.8194E-09, 1.8866E-09, 1.9759E-09, 2.0736E-09,      
     C 2.2083E-09, 2.3587E-09, 2.4984E-09, 2.6333E-09, 2.8160E-09,      
     C 3.0759E-09, 3.3720E-09, 3.6457E-09, 4.0668E-09, 4.4541E-09,      
     C 4.7976E-09, 5.0908E-09, 5.4811E-09, 6.1394E-09, 6.3669E-09,      
     C 6.5714E-09, 6.8384E-09, 7.1918E-09, 7.3741E-09, 7.2079E-09,      
     C 7.2172E-09, 7.2572E-09, 7.3912E-09, 7.6188E-09, 8.3291E-09,      
     C 8.7885E-09, 9.2412E-09, 1.0021E-08, 1.0752E-08, 1.1546E-08,      
     C 1.1607E-08, 1.1949E-08, 1.2346E-08, 1.2516E-08, 1.2826E-08/      
      DATA S0851/                                                       
     C 1.3053E-08, 1.3556E-08, 1.4221E-08, 1.5201E-08, 1.6661E-08,      
     C 1.8385E-08, 2.0585E-08, 2.3674E-08, 2.7928E-08, 3.3901E-08,      
     C 4.1017E-08, 4.9595E-08, 6.0432E-08, 7.6304E-08, 9.0764E-08,      
     C 1.0798E-07, 1.2442E-07, 1.4404E-07, 1.6331E-07, 1.8339E-07,      
     C 2.0445E-07, 2.2288E-07, 2.3083E-07, 2.3196E-07, 2.3919E-07,      
     C 2.3339E-07, 2.3502E-07, 2.3444E-07, 2.6395E-07, 2.9928E-07,      
     C 3.0025E-07, 3.0496E-07, 3.1777E-07, 3.4198E-07, 3.4739E-07,      
     C 3.2696E-07, 3.4100E-07, 3.5405E-07, 3.7774E-07, 3.8285E-07,      
     C 3.6797E-07, 3.5800E-07, 3.2283E-07, 2.9361E-07, 2.4881E-07,      
     C 2.0599E-07, 1.7121E-07, 1.3641E-07, 1.1111E-07, 8.9413E-08/      
      DATA S0901/                                                       
     C 7.3455E-08, 6.2078E-08, 5.2538E-08, 4.5325E-08, 3.9005E-08,      
     C 3.4772E-08, 3.1203E-08, 2.8132E-08, 2.5250E-08, 2.2371E-08,      
     C 2.0131E-08, 1.7992E-08, 1.6076E-08, 1.4222E-08, 1.2490E-08,      
     C 1.1401E-08, 1.0249E-08, 9.2279E-09, 8.5654E-09, 7.6227E-09,      
     C 6.9648E-09, 6.2466E-09, 5.7252E-09, 5.3800E-09, 4.6960E-09,      
     C 4.2194E-09, 3.7746E-09, 3.3813E-09, 3.0656E-09, 2.6885E-09,      
     C 2.4311E-09, 2.1572E-09, 1.8892E-09, 1.7038E-09, 1.4914E-09,      
     C 1.3277E-09, 1.1694E-09, 1.0391E-09, 9.2779E-10, 8.3123E-10,      
     C 7.4968E-10, 6.8385E-10, 6.2915E-10, 5.7784E-10, 5.2838E-10,      
     C 4.8382E-10, 4.4543E-10, 4.1155E-10, 3.7158E-10, 3.3731E-10/      
      DATA S0951/                                                       
     C 3.0969E-10, 2.8535E-10, 2.6416E-10, 2.4583E-10, 2.2878E-10,      
     C 2.1379E-10, 2.0073E-10, 1.8907E-10, 1.7866E-10, 1.6936E-10,      
     C 1.6119E-10, 1.5424E-10, 1.4847E-10, 1.4401E-10, 1.4068E-10,      
     C 1.3937E-10, 1.3943E-10, 1.4281E-10, 1.4766E-10, 1.5701E-10,      
     C 1.7079E-10, 1.8691E-10, 2.0081E-10, 2.1740E-10, 2.4847E-10,      
     C 2.6463E-10, 2.7087E-10, 2.7313E-10, 2.8352E-10, 2.9511E-10,      
     C 2.8058E-10, 2.7227E-10, 2.7356E-10, 2.8012E-10, 2.8034E-10,      
     C 2.9031E-10, 3.1030E-10, 3.3745E-10, 3.8152E-10, 4.0622E-10,      
     C 4.2673E-10, 4.3879E-10, 4.5488E-10, 4.7179E-10, 4.6140E-10,      
     C 4.6339E-10, 4.6716E-10, 4.7024E-10, 4.7931E-10, 4.8503E-10/      
      DATA S1001/                                                       
     C 4.9589E-10, 4.9499E-10, 5.0363E-10, 5.3184E-10, 5.6451E-10,      
     C 6.0932E-10, 6.6469E-10, 7.4076E-10, 8.3605E-10, 9.4898E-10,      
     C 1.0935E-09, 1.2593E-09, 1.4913E-09, 1.8099E-09, 2.1842E-09,      
     C 2.7284E-09, 3.2159E-09, 3.7426E-09, 4.5226E-09, 5.3512E-09,      
     C 6.1787E-09, 6.8237E-09, 7.9421E-09, 9.0002E-09, 9.6841E-09,      
     C 9.9558E-09, 1.0232E-08, 1.0591E-08, 1.0657E-08, 1.0441E-08,      
     C 1.0719E-08, 1.1526E-08, 1.2962E-08, 1.4336E-08, 1.6150E-08,      
     C 1.8417E-08, 2.0725E-08, 2.3426E-08, 2.5619E-08, 2.7828E-08,      
     C 3.0563E-08, 3.3438E-08, 3.6317E-08, 4.0400E-08, 4.4556E-08,      
     C 5.0397E-08, 5.3315E-08, 5.9185E-08, 6.5311E-08, 6.9188E-08/      
      DATA S1051/                                                       
     C 7.7728E-08, 7.9789E-08, 8.6598E-08, 8.7768E-08, 9.1773E-08,      
     C 9.7533E-08, 1.0007E-07, 1.0650E-07, 1.0992E-07, 1.0864E-07,      
     C 1.0494E-07, 1.0303E-07, 1.0031E-07, 1.0436E-07, 1.0537E-07,      
     C 1.1184E-07, 1.2364E-07, 1.3651E-07, 1.4881E-07, 1.4723E-07,      
     C 1.4118E-07, 1.3371E-07, 1.1902E-07, 1.0007E-07, 7.9628E-08,      
     C 6.4362E-08, 5.0243E-08, 3.8133E-08, 2.9400E-08, 2.3443E-08,      
     C 1.9319E-08, 1.6196E-08, 1.4221E-08, 1.2817E-08, 1.1863E-08,      
     C 1.1383E-08, 1.1221E-08, 1.1574E-08, 1.1661E-08, 1.2157E-08,      
     C 1.2883E-08, 1.3295E-08, 1.4243E-08, 1.4240E-08, 1.4614E-08,      
     C 1.4529E-08, 1.4685E-08, 1.4974E-08, 1.4790E-08, 1.4890E-08/      
      DATA S1101/                                                       
     C 1.4704E-08, 1.4142E-08, 1.3374E-08, 1.2746E-08, 1.2172E-08,      
     C 1.2336E-08, 1.2546E-08, 1.3065E-08, 1.4090E-08, 1.5215E-08,      
     C 1.6540E-08, 1.6144E-08, 1.5282E-08, 1.4358E-08, 1.2849E-08,      
     C 1.0998E-08, 8.6956E-09, 7.0881E-09, 5.5767E-09, 4.2792E-09,      
     C 3.2233E-09, 2.5020E-09, 1.9985E-09, 1.5834E-09, 1.3015E-09,      
     C 1.0948E-09, 9.4141E-10, 8.1465E-10, 7.1517E-10, 6.2906E-10,      
     C 5.5756E-10, 4.9805E-10, 4.3961E-10, 3.9181E-10, 3.5227E-10,      
     C 3.1670E-10, 2.8667E-10, 2.5745E-10, 2.3212E-10, 2.0948E-10,      
     C 1.8970E-10, 1.7239E-10, 1.5659E-10, 1.4301E-10, 1.3104E-10,      
     C 1.2031E-10, 1.1095E-10, 1.0262E-10, 9.5130E-11, 8.8595E-11/      
      DATA S1151/                                                       
     C 8.2842E-11, 7.7727E-11, 7.3199E-11, 6.9286E-11, 6.5994E-11,      
     C 6.3316E-11, 6.1244E-11, 5.9669E-11, 5.8843E-11, 5.8832E-11,      
     C 5.9547E-11, 6.1635E-11, 6.4926E-11, 7.0745E-11, 7.8802E-11,      
     C 8.6724E-11, 1.0052E-10, 1.1575E-10, 1.3626E-10, 1.5126E-10,      
     C 1.6751E-10, 1.9239E-10, 2.1748E-10, 2.2654E-10, 2.2902E-10,      
     C 2.3240E-10, 2.4081E-10, 2.3930E-10, 2.2378E-10, 2.2476E-10,      
     C 2.2791E-10, 2.4047E-10, 2.5305E-10, 2.8073E-10, 3.1741E-10,      
     C 3.6592E-10, 4.1495E-10, 4.6565E-10, 5.0990E-10, 5.5607E-10,      
     C 6.1928E-10, 6.6779E-10, 7.3350E-10, 8.1434E-10, 8.9635E-10,      
     C 9.9678E-10, 1.1256E-09, 1.2999E-09, 1.4888E-09, 1.7642E-09/      
      DATA S1201/                                                       
     C 1.9606E-09, 2.2066E-09, 2.4601E-09, 2.7218E-09, 3.0375E-09,      
     C 3.1591E-09, 3.2852E-09, 3.2464E-09, 3.3046E-09, 3.2710E-09,      
     C 3.2601E-09, 3.3398E-09, 3.7446E-09, 4.0795E-09, 4.0284E-09,      
     C 4.0584E-09, 4.1677E-09, 4.5358E-09, 4.4097E-09, 4.2744E-09,      
     C 4.5449E-09, 4.8147E-09, 5.2656E-09, 5.2476E-09, 5.0275E-09,      
     C 4.7968E-09, 4.3654E-09, 3.9530E-09, 3.2447E-09, 2.6489E-09,      
     C 2.1795E-09, 1.7880E-09, 1.4309E-09, 1.1256E-09, 9.1903E-10,      
     C 7.6533E-10, 6.3989E-10, 5.5496E-10, 4.9581E-10, 4.5722E-10,      
     C 4.3898E-10, 4.3505E-10, 4.3671E-10, 4.5329E-10, 4.6827E-10,      
     C 4.9394E-10, 5.1122E-10, 5.1649E-10, 5.0965E-10, 4.9551E-10/      
      DATA S1251/                                                       
     C 4.8928E-10, 4.7947E-10, 4.7989E-10, 4.9071E-10, 4.8867E-10,      
     C 4.7260E-10, 4.5756E-10, 4.5400E-10, 4.5993E-10, 4.4042E-10,      
     C 4.3309E-10, 4.4182E-10, 4.6735E-10, 5.0378E-10, 5.2204E-10,      
     C 5.0166E-10, 4.6799E-10, 4.3119E-10, 3.8803E-10, 3.3291E-10,      
     C 2.6289E-10, 2.1029E-10, 1.7011E-10, 1.3345E-10, 1.0224E-10,      
     C 7.8207E-11, 6.2451E-11, 5.0481E-11, 4.1507E-11, 3.5419E-11,      
     C 3.0582E-11, 2.6900E-11, 2.3778E-11, 2.1343E-11, 1.9182E-11,      
     C 1.7162E-11, 1.5391E-11, 1.3877E-11, 1.2619E-11, 1.1450E-11,      
     C 1.0461E-11, 9.6578E-12, 8.9579E-12, 8.3463E-12, 7.8127E-12,      
     C 7.3322E-12, 6.9414E-12, 6.6037E-12, 6.3285E-12, 6.1095E-12/      
      DATA S1301/                                                       
     C 5.9387E-12, 5.8118E-12, 5.7260E-12, 5.6794E-12, 5.6711E-12,      
     C 5.7003E-12, 5.7670E-12, 5.8717E-12, 6.0151E-12, 6.1984E-12,      
     C 6.4232E-12, 6.6918E-12, 7.0065E-12, 7.3705E-12, 7.7873E-12,      
     C 8.2612E-12, 8.7972E-12, 9.4009E-12, 1.0079E-11, 1.0840E-11,      
     C 1.1692E-11, 1.2648E-11, 1.3723E-11, 1.4935E-11, 1.6313E-11,      
     C 1.7905E-11, 1.9740E-11, 2.1898E-11, 2.4419E-11, 2.7426E-11,      
     C 3.0869E-11, 3.4235E-11, 3.7841E-11, 4.1929E-11, 4.6776E-11,      
     C 5.2123E-11, 5.8497E-11, 6.5294E-11, 7.4038E-11, 8.4793E-11,      
     C 9.6453E-11, 1.1223E-10, 1.2786E-10, 1.4882E-10, 1.7799E-10,      
     C 2.0766E-10, 2.4523E-10, 2.8591E-10, 3.3386E-10, 4.0531E-10/      
      DATA S1351/                                                       
     C 4.7663E-10, 5.4858E-10, 6.3377E-10, 7.1688E-10, 8.4184E-10,      
     C 9.5144E-10, 1.0481E-09, 1.1356E-09, 1.2339E-09, 1.3396E-09,      
     C 1.4375E-09, 1.5831E-09, 1.7323E-09, 1.9671E-09, 2.2976E-09,      
     C 2.6679E-09, 3.0777E-09, 3.4321E-09, 3.8192E-09, 4.2711E-09,      
     C 4.4903E-09, 4.8931E-09, 5.2253E-09, 5.4040E-09, 5.6387E-09,      
     C 5.6704E-09, 6.0345E-09, 6.1079E-09, 6.2576E-09, 6.4039E-09,      
     C 6.3776E-09, 6.1878E-09, 5.8616E-09, 5.7036E-09, 5.5840E-09,      
     C 5.6905E-09, 5.8931E-09, 6.2478E-09, 6.8291E-09, 7.4528E-09,      
     C 7.6078E-09, 7.3898E-09, 6.7573E-09, 5.9827E-09, 5.0927E-09,      
     C 4.0099E-09, 3.1933E-09, 2.4296E-09, 1.8485E-09, 1.4595E-09/      
      DATA S1401/                                                       
     C 1.2017E-09, 1.0164E-09, 8.7433E-10, 7.7108E-10, 7.0049E-10,      
     C 6.5291E-10, 6.1477E-10, 5.9254E-10, 5.8150E-10, 5.7591E-10,      
     C 5.8490E-10, 5.8587E-10, 5.9636E-10, 6.2408E-10, 6.5479E-10,      
     C 7.0480E-10, 7.2313E-10, 7.5524E-10, 8.0863E-10, 8.3386E-10,      
     C 9.2342E-10, 9.6754E-10, 1.0293E-09, 1.0895E-09, 1.1330E-09,      
     C 1.2210E-09, 1.2413E-09, 1.2613E-09, 1.2671E-09, 1.2225E-09,      
     C 1.1609E-09, 1.0991E-09, 1.0600E-09, 1.0570E-09, 1.0818E-09,      
     C 1.1421E-09, 1.2270E-09, 1.3370E-09, 1.4742E-09, 1.4946E-09,      
     C 1.4322E-09, 1.3210E-09, 1.1749E-09, 1.0051E-09, 7.8387E-10,      
     C 6.1844E-10, 4.6288E-10, 3.4164E-10, 2.5412E-10, 1.9857E-10/      
      DATA S1451/                                                       
     C 1.5876E-10, 1.2966E-10, 1.0920E-10, 9.4811E-11, 8.3733E-11,      
     C 7.3906E-11, 6.7259E-11, 6.1146E-11, 5.7119E-11, 5.3546E-11,      
     C 4.8625E-11, 4.4749E-11, 4.1089E-11, 3.7825E-11, 3.4465E-11,      
     C 3.1018E-11, 2.8109E-11, 2.5610E-11, 2.2859E-11, 2.0490E-11,      
     C 1.8133E-11, 1.5835E-11, 1.3949E-11, 1.2295E-11, 1.0799E-11,      
     C 9.6544E-12, 8.7597E-12, 7.9990E-12, 7.3973E-12, 6.9035E-12,      
     C 6.4935E-12, 6.1195E-12, 5.8235E-12, 5.5928E-12, 5.4191E-12,      
     C 5.2993E-12, 5.2338E-12, 5.2272E-12, 5.2923E-12, 5.4252E-12,      
     C 5.6523E-12, 5.9433E-12, 6.3197E-12, 6.9016E-12, 7.5016E-12,      
     C 8.2885E-12, 9.4050E-12, 1.0605E-11, 1.2257E-11, 1.3622E-11/      
      DATA S1501/                                                       
     C 1.5353E-11, 1.7543E-11, 1.9809E-11, 2.2197E-11, 2.4065E-11,      
     C 2.6777E-11, 2.9751E-11, 3.2543E-11, 3.5536E-11, 3.9942E-11,      
     C 4.6283E-11, 5.4556E-11, 6.5490E-11, 7.6803E-11, 9.0053E-11,      
     C 1.0852E-10, 1.2946E-10, 1.4916E-10, 1.7748E-10, 2.0073E-10,      
     C 2.2485E-10, 2.5114E-10, 2.7715E-10, 3.1319E-10, 3.3305E-10,      
     C 3.5059E-10, 3.5746E-10, 3.6311E-10, 3.7344E-10, 3.6574E-10,      
     C 3.7539E-10, 3.9434E-10, 4.3510E-10, 4.3340E-10, 4.2588E-10,      
     C 4.3977E-10, 4.6062E-10, 4.7687E-10, 4.6457E-10, 4.8578E-10,      
     C 5.2344E-10, 5.6752E-10, 5.8702E-10, 5.6603E-10, 5.3784E-10,      
     C 4.9181E-10, 4.3272E-10, 3.5681E-10, 2.8814E-10, 2.3320E-10/      
      DATA S1551/                                                       
     C 1.8631E-10, 1.4587E-10, 1.1782E-10, 9.8132E-11, 8.2528E-11,      
     C 6.9174E-11, 6.1056E-11, 5.3459E-11, 4.7116E-11, 4.1878E-11,      
     C 3.8125E-11, 3.6347E-11, 3.5071E-11, 3.3897E-11, 3.3541E-11,      
     C 3.3563E-11, 3.5469E-11, 3.8111E-11, 3.8675E-11, 4.1333E-11,      
     C 4.3475E-11, 4.6476E-11, 4.9761E-11, 5.1380E-11, 5.4135E-11,      
     C 5.3802E-11, 5.5158E-11, 5.6864E-11, 5.9311E-11, 6.3827E-11,      
     C 6.7893E-11, 6.8230E-11, 6.6694E-11, 6.6018E-11, 6.4863E-11,      
     C 6.5893E-11, 6.3813E-11, 6.4741E-11, 6.8630E-11, 7.0255E-11,      
     C 7.0667E-11, 6.8810E-11, 6.4104E-11, 5.8136E-11, 4.7242E-11,      
     C 3.7625E-11, 3.1742E-11, 2.5581E-11, 1.8824E-11, 1.3303E-11/      
      DATA S1601/                                                       
     C 9.6919E-12, 7.5353E-12, 6.0986E-12, 5.0742E-12, 4.3094E-12,      
     C 3.7190E-12, 3.2520E-12, 2.8756E-12, 2.5680E-12, 2.3139E-12,      
     C 2.1025E-12, 1.9257E-12, 1.7777E-12, 1.6539E-12, 1.5508E-12,      
     C 1.4657E-12, 1.3966E-12, 1.3417E-12, 1.2998E-12, 1.2700E-12,      
     C 1.2514E-12, 1.2437E-12, 1.2463E-12, 1.2592E-12, 1.2823E-12,      
     C 1.3157E-12, 1.3596E-12, 1.4144E-12, 1.4806E-12, 1.5588E-12,      
     C 1.6497E-12, 1.7544E-12, 1.8738E-12, 2.0094E-12, 2.1626E-12,      
     C 2.3354E-12, 2.5297E-12, 2.7483E-12, 2.9941E-12, 3.2708E-12,      
     C 3.5833E-12, 3.9374E-12, 4.3415E-12, 4.8079E-12, 5.3602E-12,      
     C 5.9816E-12, 6.7436E-12, 7.6368E-12, 8.6812E-12, 9.8747E-12/      
      DATA S1651/                                                       
     C 1.1350E-11, 1.3181E-11, 1.5406E-11, 1.7868E-11, 2.0651E-11,      
     C 2.4504E-11, 2.9184E-11, 3.4159E-11, 3.9979E-11, 4.8704E-11,      
     C 5.7856E-11, 6.7576E-11, 7.9103E-11, 9.4370E-11, 1.1224E-10,      
     C 1.3112E-10, 1.5674E-10, 1.8206E-10, 2.0576E-10, 2.3187E-10,      
     C 2.7005E-10, 3.0055E-10, 3.3423E-10, 3.6956E-10, 3.8737E-10,      
     C 4.2630E-10, 4.5154E-10, 4.8383E-10, 5.3582E-10, 5.8109E-10,      
     C 6.3741E-10, 6.3874E-10, 6.3870E-10, 6.5818E-10, 6.5056E-10,      
     C 6.5291E-10, 6.3159E-10, 6.3984E-10, 6.4549E-10, 6.5444E-10,      
     C 6.7035E-10, 6.7665E-10, 6.9124E-10, 6.8451E-10, 6.9255E-10,      
     C 6.9923E-10, 7.0396E-10, 6.7715E-10, 6.0371E-10, 5.3774E-10/      
      DATA S1701/                                                       
     C 4.6043E-10, 3.7635E-10, 2.9484E-10, 2.2968E-10, 1.8185E-10,      
     C 1.4191E-10, 1.1471E-10, 9.4790E-11, 7.9613E-11, 6.7989E-11,      
     C 5.9391E-11, 5.2810E-11, 4.7136E-11, 4.2618E-11, 3.8313E-11,      
     C 3.4686E-11, 3.1669E-11, 2.9110E-11, 2.6871E-11, 2.5074E-11,      
     C 2.4368E-11, 2.3925E-11, 2.4067E-11, 2.4336E-11, 2.4704E-11,      
     C 2.5823E-11, 2.7177E-11, 2.9227E-11, 3.1593E-11, 3.5730E-11,      
     C 4.0221E-11, 4.3994E-11, 4.8448E-11, 5.3191E-11, 5.8552E-11,      
     C 6.3458E-11, 6.6335E-11, 7.2457E-11, 7.9091E-11, 8.2234E-11,      
     C 8.7668E-11, 8.7951E-11, 9.2952E-11, 9.6157E-11, 9.5926E-11,      
     C 1.0120E-10, 1.0115E-10, 9.9577E-11, 9.6633E-11, 9.2891E-11/      
      DATA S1751/                                                       
     C 9.3315E-11, 9.5584E-11, 1.0064E-10, 1.0509E-10, 1.1455E-10,      
     C 1.2443E-10, 1.2963E-10, 1.2632E-10, 1.1308E-10, 1.0186E-10,      
     C 8.5880E-11, 6.7863E-11, 5.1521E-11, 3.7780E-11, 2.8842E-11,      
     C 2.2052E-11, 1.7402E-11, 1.4406E-11, 1.1934E-11, 1.0223E-11,      
     C 8.9544E-12, 7.9088E-12, 7.0675E-12, 6.2222E-12, 5.6051E-12,      
     C 5.0502E-12, 4.5578E-12, 4.2636E-12, 3.9461E-12, 3.7599E-12,      
     C 3.5215E-12, 3.2467E-12, 3.0018E-12, 2.6558E-12, 2.3928E-12,      
     C 2.0707E-12, 1.7575E-12, 1.5114E-12, 1.2941E-12, 1.1004E-12,      
     C 9.5175E-13, 8.2894E-13, 7.3253E-13, 6.5551E-13, 5.9098E-13,      
     C 5.3548E-13, 4.8697E-13, 4.4413E-13, 4.0600E-13, 3.7188E-13/      
      DATA S1801/                                                       
     C 3.4121E-13, 3.1356E-13, 2.8856E-13, 2.6590E-13, 2.4533E-13,      
     C 2.2663E-13, 2.0960E-13, 1.9407E-13, 1.7990E-13, 1.6695E-13,      
     C 1.5512E-13, 1.4429E-13, 1.3437E-13, 1.2527E-13, 1.1693E-13,      
     C 1.0927E-13, 1.0224E-13, 9.5767E-14, 8.9816E-14, 8.4335E-14,      
     C 7.9285E-14, 7.4626E-14, 7.0325E-14, 6.6352E-14, 6.2676E-14,      
     C 5.9274E-14, 5.6121E-14, 5.3195E-14, 5.0479E-14, 4.7953E-14,      
     C 4.5602E-14, 4.3411E-14, 4.1367E-14, 3.9456E-14, 3.7670E-14,      
     C 3.5996E-14, 3.4427E-14, 3.2952E-14, 3.1566E-14, 3.0261E-14,      
     C 2.9030E-14, 2.7868E-14, 2.6770E-14, 2.5730E-14, 2.4745E-14,      
     C 2.3809E-14, 2.2921E-14, 2.2076E-14, 2.1271E-14, 2.0504E-14/      
      DATA S1851/                                                       
     C 1.9772E-14, 1.9073E-14, 1.8404E-14, 1.7764E-14, 1.7151E-14,      
     C 1.6564E-14, 1.6000E-14, 1.5459E-14, 1.4939E-14, 1.4439E-14,      
     C 1.3958E-14, 1.3495E-14, 1.3049E-14, 1.2620E-14, 1.2206E-14,      
     C 1.1807E-14, 1.1422E-14, 1.1050E-14, 1.0691E-14, 1.0345E-14,      
     C 1.0010E-14, 9.6870E-15, 9.3747E-15, 9.0727E-15, 8.7808E-15,      
     C 8.4986E-15, 8.2257E-15, 7.9617E-15, 7.7064E-15, 7.4594E-15,      
     C 7.2204E-15, 6.9891E-15, 6.7653E-15, 6.5488E-15, 6.3392E-15,      
     C 6.1363E-15, 5.9399E-15, 5.7499E-15, 5.5659E-15, 5.3878E-15,      
     C 5.2153E-15, 5.0484E-15, 4.8868E-15, 4.7303E-15, 4.5788E-15,      
     C 4.4322E-15, 4.2902E-15, 4.1527E-15, 4.0196E-15, 3.8907E-15/      
      DATA S1901/                                                       
     C 3.7659E-15, 3.6451E-15, 3.5281E-15, 3.4149E-15, 3.3052E-15,      
     C 3.1991E-15, 3.0963E-15, 2.9967E-15, 2.9004E-15, 2.8071E-15,      
     C 2.7167E-15, 2.6293E-15, 2.5446E-15, 2.4626E-15, 2.3833E-15,      
     C 2.3064E-15, 2.2320E-15, 2.1600E-15, 2.0903E-15, 2.0228E-15,      
     C 1.9574E-15, 1.8942E-15, 1.8329E-15, 1.7736E-15, 1.7163E-15,      
     C 1.6607E-15, 1.6069E-15, 1.5548E-15, 1.5044E-15, 1.4557E-15,      
     C 1.4084E-15, 1.3627E-15, 1.3185E-15, 1.2757E-15, 1.2342E-15,      
     C 1.1941E-15, 1.1552E-15, 1.1177E-15, 1.0813E-15, 1.0461E-15,      
     C 1.0120E-15, 9.7900E-16, 9.4707E-16, 9.1618E-16, 8.8628E-16,      
     C 8.5734E-16, 8.2933E-16, 8.0223E-16, 7.7600E-16, 7.5062E-16/      
      DATA S1951/                                                       
     C 7.2606E-16, 7.0229E-16, 6.7929E-16, 6.5703E-16, 6.3550E-16,      
     C 6.1466E-16, 5.9449E-16, 5.7498E-16, 5.5610E-16, 5.3783E-16,      
     C 5.2015E-16, 5.0305E-16, 4.8650E-16, 4.7049E-16, 4.5500E-16,      
     C 4.4002E-16, 4.2552E-16, 4.1149E-16, 3.9792E-16, 3.8479E-16,      
     C 3.7209E-16, 3.5981E-16, 3.4792E-16, 3.3642E-16, 3.2530E-16,      
     C 3.1454E-16, 3.0413E-16, 2.9406E-16, 2.8432E-16, 2.7490E-16,      
     C 2.6579E-16, 2.5697E-16, 2.4845E-16, 2.4020E-16, 2.3223E-16,      
     C 2.2451E-16, 2.1705E-16, 2.0984E-16, 2.0286E-16, 1.9611E-16,      
     C 1.8958E-16, 1.8327E-16, 1.7716E-16, 1.7126E-16, 1.6555E-16,      
     C 1.6003E-16, 1.5469E-16, 1.4952E-16, 1.4453E-16, 1.3970E-16/      
      DATA S2001/                                                       
     C 1.3503E-16/                                                      
C                                                                       
      END                                                               
      BLOCK DATA SHUMG                                                  
C>    BLOCK DATA                                                        
C                                                                       
C     SCHUMANN-RUNGE O2 BAND MODEL - SAMPLE CODING                      
C                                                                       
       COMMON /SHUR/ SHN001(70),SHN076(75),SHN151(75),                  
     X  SHN226(75),SHN301(75),SHN376(54),SHDUM(6)                       
       DATA SHN001/                                                     
     X  -8.00000,  -8.00000,  -8.00000,  -6.30103,  -6.00000,           
     X  -5.94896,  -5.94896,  -5.55139,  -5.17613,  -4.90612,           
     X  -4.56059,  -4.30010,  -4.30739,  -4.34455,  -4.35231,           
     X  -4.50777,  -4.41705,  -3.93569,  -3.70298,  -3.84254,           
     X  -4.01007,  -4.13821,  -3.92122,  -3.55006,  -3.22681,           
     X  -3.17363,  -3.55224,  -3.66208,  -3.32331,  -3.00804,           
     X  -2.99732,  -3.30951,  -3.20867,  -2.69141,  -2.49670,           
     X  -2.74355,  -2.69834,  -2.67293,  -2.67371,  -2.89603,           
     X  -3.13808,  -3.45473,  -3.54812,  -3.00636,  -2.72446,           
     X  -2.90208,  -2.93847,  -3.03693,  -3.15944,  -3.43764,           
     X  -3.67262,  -3.53970,  -2.84182,  -2.51909,  -2.50557,           
     X  -2.44459,  -2.72040,  -2.95979,  -3.02842,  -2.92391,           
     X  -2.61329,  -2.24839,  -2.03988,  -1.98147,  -1.97078,           
     X  -2.14548,  -2.51734,  -2.47024,  -2.02579,  -1.70360/           
       DATA SHN076/                                                     
     X  -1.64178,  -2.05789,  -2.41111,  -2.30034,  -1.91818,           
     X  -1.50450,  -1.32084,  -1.80380,  -2.13878,  -1.94658,           
     X  -1.61627,  -1.55771,  -1.88813,  -1.64415,  -1.43970,           
     X  -1.72633,  -1.50064,  -1.29499,  -1.47224,  -1.42286,           
     X  -1.84903,  -2.42249,  -2.95877,  -3.43342,  -3.85023,           
     X  -4.92183,  -4.92959,  -4.80852,  -4.67030,  -4.72573,           
     X  -4.84445,  -4.86951,  -4.90354,  -4.80891,  -4.61211,           
     X  -4.48205,  -4.51391,  -4.66502,  -4.84670,  -4.88606,           
     X  -4.82391,  -4.69897,  -4.51203,  -4.13960,  -3.87805,           
     X  -3.80311,  -3.77114,  -3.88260,  -4.14615,  -4.39649,           
     X  -4.62899,  -4.78494,  -4.69514,  -4.27200,  -3.92731,           
     X  -3.72681,  -3.60335,  -3.49142,  -3.38223,  -3.52349,           
     X  -3.64037,  -3.58526,  -3.48978,  -3.36320,  -3.37270,           
     X  -3.58359,  -3.83908,  -4.06157,  -3.96920,  -3.24875,           
     X  -2.78627,  -2.54861,  -2.56192,  -2.79838,  -2.89008/           
       DATA SHN151/                                                     
     X  -2.97200,  -2.91496,  -2.85783,  -3.00554,  -3.22285,           
     X  -3.17575,  -2.82405,  -2.44375,  -2.24512,  -2.13519,           
     X  -2.17638,  -2.12548,  -2.24833,  -2.42286,  -2.48889,           
     X  -2.57284,  -2.67481,  -2.84576,  -2.57849,  -2.23621,           
     X  -1.97914,  -2.01655,  -2.08918,  -2.25852,  -2.60669,           
     X  -2.91101,  -3.24343,  -3.54870,  -3.05507,  -2.41260,           
     X  -1.97192,  -1.74591,  -1.70757,  -1.86170,  -2.21955,           
     X  -2.52520,  -2.86220,  -2.96082,  -2.42138,  -1.96791,           
     X  -1.71099,  -1.68871,  -1.86617,  -2.21148,  -2.51694,           
     X  -2.77760,  -2.37949,  -1.89083,  -1.58900,  -1.52710,           
     X  -1.68850,  -2.03635,  -2.31319,  -2.17366,  -1.60655,           
     X  -1.27097,  -1.14262,  -1.34089,  -1.68119,  -1.78236,           
     X  -1.45853,  -1.19063,  -1.11210,  -1.38628,  -1.48342,           
     X  -1.12039,   -.85543,   -.77060,  -1.05684,  -1.05423,           
     X   -.93689,   -.86922,   -.94306,   -.76850,   -.59062/           
       DATA SHN226/                                                     
     X   -.50208,   -.53499,   -.88884,  -1.18360,  -1.52243,           
     X  -1.84564,  -2.17740,  -2.50559,  -2.83351,  -3.15308,           
     X  -3.41587,  -3.41025,  -3.23752,  -3.13656,  -3.30149,           
     X  -3.55280,  -3.77885,  -3.71929,  -3.36467,  -3.06275,           
     X  -2.83782,  -2.68294,  -2.55793,  -2.63001,  -2.90714,           
     X  -3.18561,  -3.46714,  -3.70067,  -3.62895,  -3.02605,           
     X  -2.65584,  -2.46195,  -2.48991,  -2.44044,  -2.29494,           
     X  -2.28839,  -2.29827,  -2.22063,  -2.12801,  -2.18940,           
     X  -2.48029,  -2.74669,  -2.83833,  -2.45937,  -2.16507,           
     X  -2.02067,  -2.03314,  -1.80888,  -1.51479,  -1.38580,           
     X  -1.37993,  -1.63534,  -1.83905,  -1.87999,  -1.82492,           
     X  -1.89398,  -1.90149,  -1.78545,  -1.65285,  -1.40144,           
     X  -1.17488,  -1.07228,  -1.15343,  -1.37759,  -1.70025,           
     X  -2.01075,  -2.33004,  -2.62771,  -2.87105,  -2.84082,           
     X  -2.00293,  -1.31932,   -.92860,   -.76253,   -.84790/           
       DATA SHN301/                                                     
     X  -1.16306,  -1.46677,  -1.79051,  -2.09491,  -2.34556,           
     X  -2.13867,  -1.37321,   -.82048,   -.53990,   -.47636,           
     X   -.72816,  -1.03484,  -1.33688,  -1.61955,  -1.78843,           
     X  -1.43388,   -.81369,   -.44878,   -.28512,   -.40431,           
     X   -.72200,  -1.00945,  -1.28895,  -1.31856,   -.85686,           
     X   -.42072,   -.19421,   -.18317,   -.46858,   -.73309,           
     X   -.93390,   -.77552,   -.37922,   -.12965,   -.05480,           
     X   -.26659,   -.48423,   -.50987,   -.24666,   -.01742,           
     X    .07660,   -.06367,   -.20185,   -.11253,    .06726,           
     X    .17955,    .14879,    .15975,    .28769,    .41632,           
     X    .49995,    .61664,    .76706,    .82624,    .76615,           
     X    .43165,    .13821,   -.18926,   -.48784,   -.77913,           
     X  -1.08972,  -1.39948,  -1.70006,  -1.94700,  -1.96249,           
     X  -1.67500,  -1.41241,  -1.29981,  -1.40100,  -1.69529,           
     X  -1.96904,  -2.25253,  -2.44942,  -2.13985,  -1.80460/           
       DATA SHN376/                                                     
     X  -1.60216,  -1.72517,  -1.98472,  -2.08115,  -1.62632,           
     X  -1.12971,   -.86160,   -.81141,  -1.07504,  -1.34407,           
     X  -1.50074,  -1.47345,  -1.41077,  -1.59810,  -1.67103,           
     X  -1.53208,  -1.36215,  -1.26724,   -.91307,   -.50826,           
     X   -.27840,   -.24468,   -.46373,   -.76619,  -1.07304,           
     X  -1.37968,  -1.66148,  -1.89046,  -2.02811,  -1.97679,           
     X  -1.55840,   -.94089,   -.46463,   -.21757,   -.16985,           
     X   -.41642,   -.69469,   -.98624,  -1.26028,  -1.48661,           
     X  -1.58100,  -1.42675,  -1.01563,   -.52312,   -.13686,           
     X    .06300,    .07682,   -.16825,   -.42809,   -.69506,           
     X   -.91898,  -1.03253,   -.90609,   -.42809           /           
      END                                                               
      BLOCK DATA SOLAR                                                  
C>    BLOCK DATA                                                        
C                                                                       
C                                                                       
C     COMMON /SUNDAT/   SOLARA(1440), SOLARB(2910)                      
      COMMON /SUNDAT/   SUNA01( 41),SUNA02(144),SUNA03(144),SUNA04(144),
     A      SUNA05(144),SUNA06(144),SUNA07(144),SUNA08(144),SUNA09(144),
     B      SUNA10(144),SUNA11(103),SUNB01(144),SUNB02(144),SUNB03(144),
     C      SUNB04(144),SUNB05(144),SUNB06(144),SUNB07(144),SUNB08(144),
     D      SUNB09(144),SUNB10(144),SUNB11(144),SUNB12(144),SUNB13(144),
     E      SUNB14(144),SUNB15(144),SUNB16(144),SUNB17(144),SUNB18(144),
     F      SUNB19(144),SUNB20(144),SUNB21( 30)                         
C                                                                       
C         SOLAR SPECTRUM FROM      0 TO    800 CM-1,  IN STEPS OF 20 CM-
      DATA SUNA01  /                                                    
     A 0.0000E+00, 4.5756E-08, 7.0100E-07, 3.4580E-06, 1.0728E-05,      
     B 2.5700E-05, 5.2496E-05, 9.6003E-05, 1.6193E-04, 2.5766E-04,      
     C 3.9100E-04, 5.6923E-04, 8.0203E-04, 1.1006E-03, 1.4768E-03,      
     D 1.9460E-03, 2.5213E-03, 3.2155E-03, 4.0438E-03, 5.0229E-03,      
     E 6.1700E-03, 7.5145E-03, 9.0684E-03, 1.0853E-02, 1.2889E-02,      
     F 1.5213E-02, 1.7762E-02, 2.0636E-02, 2.3888E-02, 2.7524E-02,      
     G 3.1539E-02, 3.5963E-02, 4.0852E-02, 4.6236E-02, 5.2126E-02,      
     H 5.8537E-02, 6.5490E-02, 7.3017E-02, 8.1169E-02, 9.0001E-02,      
     I 9.9540E-02 /                                                     
C         SOLAR SPECTRUM FROM    820 TO   3680 CM-1,  IN STEPS OF 20 CM-
      DATA SUNA02  /                                                    
     A .10980, .12080, .13260, .14520, .15860, .17310, .18850, .20490,  
     B .22240, .24110, .26090, .28200, .30430, .32790, .35270, .37890,  
     C .40650, .43550, .46600, .49800, .53160, .56690, .60390, .64260,  
     D .68320, .72560, .76990, .81620, .86440, .91470, .96710, 1.0220,  
     E 1.0780, 1.1370, 1.1990, 1.2630, 1.3290, 1.3990, 1.4710, 1.5460,  
     F 1.6250, 1.7060, 1.7910, 1.8800, 1.9710, 2.0670, 2.1660, 2.2680,  
     G 2.3740, 2.4840, 2.5970, 2.7140, 2.8350, 2.9600, 3.0890, 3.2210,  
     H 3.3570, 3.4980, 3.6420, 3.7900, 3.9440, 4.1040, 4.2730, 4.4450,  
     I 4.6150, 4.7910, 4.9830, 5.1950, 5.4210, 5.6560, 5.8930, 6.1270,  
     J 6.3560, 6.5820, 6.8080, 7.0360, 7.2700, 7.5170, 7.7890, 8.0910,  
     K 8.4070, 8.7120, 8.9900, 9.2490, 9.5000, 9.7550, 10.010, 10.250,  
     L 10.480, 10.700, 10.950, 11.230, 11.550, 11.900, 12.250, 12.600,  
     M 12.930, 13.250, 13.530, 13.780, 14.040, 14.320, 14.660, 15.070,  
     N 15.530, 16.011, 16.433, 16.771, 17.077, 17.473, 17.964, 18.428,  
     O 18.726, 18.906, 19.141, 19.485, 19.837, 20.160, 20.509, 21.024,  
     P 21.766, 22.568, 23.190, 23.577, 23.904, 24.335, 24.826, 25.236,  
     Q 25.650, 26.312, 27.208, 27.980, 28.418, 28.818, 29.565, 30.533,  
     R 31.247, 31.667, 32.221, 33.089, 33.975, 34.597, 35.004, 35.395 / 
C         SOLAR SPECTRUM FROM   3700 TO   6560 CM-1,  IN STEPS OF 20 CM-
      DATA SUNA03  /                                                    
     A 36.026, 36.985, 37.890, 38.401, 38.894, 39.857, 40.926, 41.570,  
     B 42.135, 43.083, 44.352, 45.520, 45.982, 46.281, 48.335, 51.987,  
     C 54.367, 54.076, 52.174, 50.708, 52.153, 55.707, 56.549, 54.406,  
     D 53.267, 56.084, 61.974, 64.406, 60.648, 55.146, 53.067, 57.476,  
     E 64.645, 68.348, 69.055, 69.869, 70.943, 71.662, 72.769, 74.326,  
     F 75.257, 74.883, 73.610, 73.210, 74.886, 78.042, 80.204, 80.876,  
     G 82.668, 84.978, 86.244, 88.361, 91.998, 95.383, 98.121, 100.29,  
     H 100.64, 99.997, 101.82, 105.06, 107.50, 109.99, 112.45, 113.90,  
     I 113.79, 119.23, 121.96, 124.58, 127.14, 125.19, 124.37, 125.00,  
     J 127.88, 130.67, 131.98, 133.74, 136.69, 136.18, 135.02, 137.44,  
     K 138.44, 137.25, 136.35, 142.60, 144.54, 148.37, 151.90, 151.55,  
     L 155.35, 157.59, 159.70, 162.28, 168.44, 171.43, 169.82, 170.33,  
     M 172.28, 176.68, 181.92, 186.06, 187.85, 186.00, 189.82, 189.35,  
     N 192.86, 202.00, 209.63, 205.76, 212.88, 215.63, 216.51, 219.20,  
     O 220.29, 221.12, 227.12, 229.97, 233.23, 233.95, 234.52, 234.45,  
     P 235.77, 239.80, 243.11, 241.19, 242.34, 243.69, 242.84, 246.19,  
     Q 246.11, 246.76, 251.75, 255.38, 258.74, 260.26, 263.40, 268.68,  
     R 271.81, 272.95, 273.93, 274.74, 274.43, 279.69, 287.76, 287.72 / 
C         SOLAR SPECTRUM FROM   6580 TO   9440 CM-1,  IN STEPS OF 20 CM-
      DATA SUNA04  /                                                    
     A 287.96, 290.01, 291.92, 295.28, 296.78, 300.46, 302.19, 299.14,  
     B 301.43, 305.68, 309.29, 310.63, 313.24, 314.61, 309.58, 318.81,  
     C 320.54, 321.62, 328.58, 331.66, 337.20, 345.62, 345.54, 342.96,  
     D 344.38, 346.23, 349.17, 351.79, 354.71, 356.97, 358.29, 362.29,  
     E 364.15, 364.97, 367.81, 368.98, 369.07, 372.17, 377.79, 381.25,  
     F 384.22, 388.66, 393.58, 396.98, 398.72, 400.61, 404.06, 408.23,  
     G 412.47, 415.58, 416.17, 416.53, 419.55, 425.88, 433.30, 437.73,  
     H 438.13, 439.79, 441.51, 438.71, 434.25, 437.54, 448.95, 448.86,  
     I 439.46, 437.10, 439.34, 444.33, 455.00, 467.05, 473.04, 469.64,  
     J 467.53, 473.78, 477.50, 477.50, 480.96, 483.94, 482.19, 479.08,  
     K 482.09, 493.43, 498.40, 492.05, 489.53, 493.34, 495.51, 496.52,  
     L 499.57, 504.65, 509.68, 512.00, 512.05, 512.31, 515.00, 520.70,  
     M 527.30, 531.88, 532.16, 530.48, 532.33, 539.26, 548.57, 553.00,  
     N 548.96, 546.05, 551.00, 556.41, 557.21, 557.85, 560.95, 564.02,  
     O 565.57, 566.38, 567.88, 571.48, 576.68, 581.54, 586.51, 593.62,  
     P 600.70, 602.79, 601.39, 603.00, 606.88, 605.95, 600.97, 600.79,  
     Q 607.21, 612.87, 614.13, 614.39, 616.61, 620.53, 625.19, 629.78,  
     R 633.79, 637.31, 640.47, 642.53, 642.62, 641.93, 643.11, 646.68 / 
C         SOLAR SPECTRUM FROM   9460 TO  12320 CM-1,  IN STEPS OF 20 CM-
       DATA SUNA05  /                                                   
     A 650.57, 654.30, 660.95, 672.10, 682.31, 684.89, 682.20, 682.53,  
     B 687.79, 691.42, 689.62, 688.14, 693.71, 703.25, 708.07, 706.22,  
     C 704.64, 708.97, 717.35, 725.43, 731.08, 734.17, 735.41, 736.60,  
     D 739.34, 742.90, 745.04, 744.29, 742.44, 749.53, 755.70, 758.82,  
     E 766.31, 761.53, 762.09, 769.68, 764.18, 763.75, 768.88, 762.69,  
     F 753.93, 762.38, 765.79, 772.19, 760.67, 762.10, 766.76, 766.98,  
     G 769.35, 773.50, 766.84, 763.60, 773.82, 777.18, 779.61, 792.48,  
     H 797.54, 787.81, 793.75, 805.96, 804.77, 806.62, 821.72, 830.28,  
     I 827.54, 831.06, 830.20, 826.22, 823.28, 822.18, 833.92, 854.58,  
     J 859.80, 862.56, 871.16, 875.16, 867.67, 863.87, 883.30, 893.40,  
     K 897.74, 905.24, 905.38, 911.07, 930.21, 939.24, 934.74, 935.15,  
     L 942.38, 948.13, 947.00, 951.88, 960.12, 951.88, 954.22, 959.07,  
     M 963.36, 980.16, 983.66, 978.76, 979.38, 985.24, 977.08, 919.94,  
     N 899.68, 962.91, 997.17, 999.93, 995.65, 999.93, 1014.9, 951.57,  
     O 893.52, 955.14, 1003.1, 990.13, 978.79, 1011.2, 1034.7, 1031.9,  
     P 1029.9, 1039.7, 1045.5, 1044.1, 1049.6, 1056.1, 1049.8, 1038.0,  
     Q 1051.9, 1072.2, 1075.5, 1077.0, 1079.3, 1078.0, 1075.7, 1079.7,  
     R 1081.0, 1069.8, 1078.4, 1104.3, 1111.4, 1111.7, 1117.6, 1119.6 / 
C         SOLAR SPECTRUM FROM  12340 TO  15200 CM-1,  IN STEPS OF 20 CM-
       DATA SUNA06  /                                                   
     A 1109.3, 1100.6, 1112.9, 1122.7, 1119.5, 1123.9, 1136.1, 1143.7,  
     B 1140.5, 1141.2, 1151.5, 1148.7, 1138.3, 1141.0, 1150.6, 1160.1,  
     C 1170.6, 1177.7, 1179.8, 1181.7, 1182.4, 1179.8, 1181.8, 1188.3,  
     D 1190.0, 1191.4, 1197.0, 1196.0, 1192.2, 1200.6, 1210.4, 1209.1,  
     E 1207.5, 1205.3, 1193.3, 1192.9, 1220.0, 1243.3, 1245.4, 1241.5,  
     F 1240.2, 1241.1, 1244.0, 1248.5, 1253.2, 1257.1, 1259.9, 1261.9,  
     G 1263.6, 1265.7, 1269.6, 1277.0, 1284.2, 1284.4, 1282.7, 1287.2,  
     H 1286.8, 1272.3, 1262.2, 1270.7, 1288.8, 1304.8, 1311.8, 1312.2,  
     I 1314.4, 1320.2, 1326.2, 1328.4, 1325.3, 1322.5, 1325.4, 1334.6,  
     J 1346.4, 1354.0, 1353.7, 1347.3, 1338.3, 1331.0, 1329.7, 1338.0,  
     K 1351.9, 1363.0, 1368.8, 1372.0, 1375.9, 1382.1, 1387.8, 1388.8,  
     L 1388.2, 1392.2, 1401.7, 1412.9, 1418.2, 1410.7, 1395.9, 1385.7,  
     M 1388.1, 1405.0, 1424.0, 1428.1, 1422.2, 1423.6, 1434.5, 1445.2,  
     N 1450.7, 1451.8, 1451.5, 1453.9, 1459.9, 1466.9, 1471.3, 1469.4,  
     O 1462.5, 1460.4, 1468.9, 1481.8, 1490.8, 1495.3, 1497.9, 1500.7,  
     P 1505.2, 1510.0, 1512.3, 1512.7, 1515.6, 1521.6, 1524.2, 1520.7,  
     Q 1520.3, 1531.6, 1545.7, 1548.2, 1541.7, 1542.2, 1553.6, 1563.6,  
     R 1563.6, 1559.9, 1561.3, 1569.9, 1581.6, 1577.6, 1529.7, 1447.0 / 
C         SOLAR SPECTRUM FROM  15220 TO  18080 CM-1,  IN STEPS OF 20 CM-
      DATA SUNA07  /                                                    
     A 1396.9, 1428.7, 1506.4, 1567.1, 1594.0, 1606.1, 1613.5, 1609.0,  
     B 1588.6, 1567.8, 1567.3, 1587.2, 1610.2, 1624.4, 1630.2, 1630.9,  
     C 1628.1, 1622.3, 1616.9, 1618.9, 1631.6, 1648.1, 1658.2, 1659.7,  
     D 1658.1, 1658.0, 1659.4, 1660.4, 1659.2, 1653.7, 1645.3, 1642.1,  
     E 1652.7, 1674.2, 1694.1, 1700.6, 1703.4, 1697.6, 1654.5, 1644.4,  
     F 1661.6, 1676.3, 1707.7, 1703.1, 1710.8, 1732.3, 1716.5, 1719.6,  
     G 1729.6, 1683.1, 1628.5, 1683.5, 1727.0, 1707.8, 1689.4, 1698.4,  
     H 1733.1, 1737.8, 1714.1, 1734.6, 1750.1, 1750.1, 1760.3, 1764.3,  
     I 1765.3, 1769.4, 1779.9, 1793.0, 1765.1, 1729.4, 1745.9, 1753.4,  
     J 1758.1, 1775.0, 1768.4, 1767.9, 1789.5, 1806.6, 1799.3, 1782.6,  
     K 1779.3, 1792.1, 1809.7, 1808.0, 1794.4, 1818.6, 1774.2, 1648.5,  
     L 1674.3, 1789.3, 1847.2, 1848.3, 1812.9, 1796.4, 1840.3, 1868.3,  
     M 1864.6, 1873.2, 1872.2, 1856.0, 1845.0, 1842.4, 1823.9, 1795.1,  
     N 1819.6, 1861.5, 1857.7, 1838.6, 1840.5, 1863.5, 1876.8, 1884.4,  
     O 1894.9, 1875.2, 1821.2, 1779.4, 1810.2, 1855.3, 1831.8, 1837.3,  
     P 1882.3, 1866.4, 1819.6, 1804.8, 1831.4, 1861.6, 1867.1, 1862.9,  
     Q 1851.9, 1834.7, 1835.2, 1845.1, 1831.9, 1803.6, 1792.5, 1821.8,  
     R 1845.8, 1832.3, 1847.6, 1894.2, 1909.2, 1901.0, 1891.2, 1869.9 / 
C         SOLAR SPECTRUM FROM  18100 TO  20960 CM-1,  IN STEPS OF 20 CM-
      DATA SUNA08  /                                                    
     A 1854.4, 1865.8, 1873.7, 1868.8, 1881.7, 1897.1, 1884.2, 1856.2,  
     B 1840.6, 1855.1, 1885.3, 1903.6, 1900.1, 1887.4, 1887.7, 1879.0,  
     C 1844.5, 1844.1, 1877.1, 1847.3, 1785.1, 1792.6, 1848.7, 1894.4,  
     D 1908.8, 1892.8, 1867.4, 1885.6, 1959.9, 1971.9, 1895.8, 1883.5,  
     E 1917.6, 1853.8, 1793.0, 1875.6, 1974.0, 1975.7, 1943.9, 1926.4,  
     F 1914.4, 1902.7, 1882.5, 1813.3, 1710.8, 1717.9, 1859.7, 1965.1,  
     G 1970.1, 1941.4, 1902.5, 1852.0, 1836.3, 1879.3, 1901.6, 1862.9,  
     H 1839.1, 1840.9, 1780.0, 1684.9, 1677.3, 1718.7, 1697.3, 1684.3,  
     I 1784.5, 1898.0, 1910.3, 1877.2, 1866.6, 1862.6, 1860.3, 1899.7,  
     J 1971.0, 1999.9, 1970.9, 1936.5, 1922.8, 1922.8, 1924.0, 1917.2,  
     K 1912.0, 1926.2, 1959.7, 1995.4, 1995.9, 1938.8, 1883.5, 1894.7,  
     L 1933.3, 1935.1, 1899.3, 1852.7, 1820.2, 1821.5, 1865.2, 1935.5,  
     M 1966.1, 1919.6, 1881.2, 1931.5, 2015.6, 2050.0, 2021.4, 1960.8,  
     N 1938.2, 1997.0, 2051.0, 2003.4, 1912.1, 1880.2, 1895.2, 1898.0,  
     O 1898.8, 1938.3, 1994.2, 2010.0, 1982.4, 1948.8, 1927.3, 1911.6,  
     P 1877.7, 1791.6, 1679.8, 1645.0, 1727.3, 1845.2, 1926.2, 1973.4,  
     Q 2005.2, 2021.6, 2021.8, 2025.7, 2054.3, 2086.5, 2082.6, 2052.9,  
     R 2047.1, 2070.2, 2072.4, 2038.1, 2020.2, 2049.9, 2074.0, 2038.1 / 
C         SOLAR SPECTRUM FROM  20980 TO  23840 CM-1,  IN STEPS OF 20 CM-
       DATA SUNA09  /                                                   
     A 1978.6, 1963.5, 1996.8, 2037.5, 2057.5, 2048.2, 2018.4, 1999.2,  
     B 2011.4, 2039.5, 2056.0, 2040.2, 1981.8, 1911.4, 1891.8, 1938.3,  
     C 1991.7, 2005.5, 2000.8, 2011.3, 2022.7, 1997.5, 1947.7, 1936.3,  
     D 1986.6, 2037.9, 2032.8, 1995.7, 1984.0, 2012.0, 2055.5, 2091.6,  
     E 2106.5, 2094.9, 2070.4, 2052.8, 2046.7, 2043.8, 2035.5, 2016.6,  
     F 1988.4, 1973.3, 1999.0, 2057.4, 2103.8, 2109.4, 2089.4, 2068.5,  
     G 2051.8, 2031.2, 2005.9, 1986.7, 1981.5, 1979.4, 1964.1, 1943.6,  
     H 1951.8, 2007.3, 2083.2, 2139.1, 2158.0, 2143.3, 2103.2, 2050.9,  
     I 2001.9, 1974.5, 1988.0, 2037.8, 2075.1, 2050.6, 1971.5, 1884.5,  
     J 1828.5, 1820.9, 1866.4, 1935.3, 1974.2, 1958.7, 1925.1, 1920.2,  
     K 1949.7, 1984.6, 1996.4, 1966.4, 1884.8, 1781.9, 1726.8, 1759.4,  
     L 1817.4, 1800.4, 1692.6, 1593.2, 1598.6, 1700.3, 1823.8, 1909.7,  
     M 1937.7, 1902.5, 1822.4, 1737.8, 1683.2, 1666.8, 1682.7, 1715.3,  
     N 1734.1, 1712.4, 1668.2, 1655.0, 1698.1, 1727.2, 1636.9, 1415.7,  
     O 1204.2, 1155.8, 1278.4, 1450.0, 1560.5, 1595.1, 1587.8, 1570.6,  
     P 1565.8, 1590.3, 1640.5, 1688.4, 1708.1, 1703.6, 1700.7, 1718.5,  
     Q 1749.0, 1772.2, 1772.5, 1745.2, 1690.2, 1624.9, 1589.0, 1618.5,  
     R 1701.3, 1783.2, 1816.4, 1800.7, 1765.0, 1734.1, 1714.6, 1705.0 / 
C         SOLAR SPECTRUM FROM  23860 TO  26720 CM-1,  IN STEPS OF 20 CM-
       DATA SUNA10  /                                                   
     A 1701.6, 1696.6, 1682.0, 1661.4, 1657.2, 1693.0, 1763.2, 1826.5,  
     B 1841.6, 1806.1, 1755.6, 1725.8, 1724.2, 1736.8, 1749.0, 1756.1,  
     C 1759.5, 1762.1, 1770.2, 1791.7, 1826.8, 1848.9, 1819.6, 1720.7,  
     D 1595.5, 1513.9, 1522.5, 1602.0, 1706.2, 1793.4, 1837.9, 1820.3,  
     E 1738.3, 1631.1, 1553.1, 1539.2, 1574.3, 1623.9, 1660.6, 1676.8,  
     F 1673.1, 1652.9, 1626.4, 1606.7, 1604.2, 1620.9, 1654.5, 1701.2,  
     G 1752.2, 1796.2, 1822.8, 1827.4, 1808.5, 1767.0, 1713.9, 1667.3,  
     H 1643.7, 1643.5, 1652.5, 1655.3, 1638.7, 1592.2, 1506.4, 1377.3,  
     I 1209.5, 1010.5, 807.59, 666.84, 664.53, 835.23, 1099.6, 1330.7,  
     J 1423.2, 1363.7, 1194.1, 961.77, 725.04, 551.29, 504.01, 596.30,  
     K 775.15, 975.62, 1150.2, 1287.2, 1386.1, 1447.5, 1473.7, 1468.5,  
     L 1435.2, 1376.9, 1296.0, 1195.5, 1085.3, 985.40, 917.25, 894.59,  
     M 910.86, 951.53, 1001.7, 1046.4, 1070.7, 1061.2, 1021.2, 977.16,  
     N 959.15, 982.06, 1020.5, 1032.6, 983.44, 879.83, 762.66, 675.28,  
     O 643.33, 662.65, 721.49, 808.35, 913.24, 1027.0, 1139.9, 1236.2,  
     P 1293.2, 1287.1, 1210.4, 1102.1, 1021.6, 1022.8, 1109.3, 1232.6,  
     Q 1337.0, 1383.1, 1372.8, 1324.7, 1257.7, 1188.8, 1133.5, 1106.5,  
     R 1113.7, 1136.8, 1147.9, 1121.4, 1054.1, 968.10, 889.19, 837.87 / 
C         SOLAR SPECTRUM FROM  26740 TO  28780 CM-1,  IN STEPS OF 20 CM-
      DATA SUNA11  /                                                    
     A 817.64, 823.72, 851.04, 896.53, 959.85, 1041.2, 1137.6, 1231.2,  
     B 1294.4, 1299.9, 1241.2, 1155.0, 1092.0, 1097.1, 1170.2, 1263.5,  
     C 1322.4, 1307.4, 1233.6, 1146.1, 1090.8, 1092.5, 1134.6, 1188.9,  
     D 1228.9, 1245.5, 1248.5, 1250.3, 1260.5, 1274.6, 1279.5, 1261.8,  
     E 1214.3, 1145.4, 1069.6, 1001.4, 952.52, 930.48, 941.68, 990.34,  
     F 1064.4, 1135.2, 1171.5, 1149.1, 1076.3, 984.35, 906.25, 868.17,  
     G 873.75, 915.33, 984.41, 1067.2, 1137.1, 1163.1, 1115.5, 990.55,  
     H 830.93, 692.29, 627.44, 654.10, 739.24, 838.88, 911.69, 941.90,  
     I 944.42, 939.58, 946.10, 970.23, 1005.2, 1042.4, 1073.8, 1097.0,  
     J 1114.3, 1128.8, 1142.9, 1153.4, 1152.4, 1131.5, 1084.2, 1016.7,  
     K 945.95, 890.37, 866.15, 876.54, 913.13, 966.10, 1025.4, 1080.2,  
     L 1119.0, 1102.7, 1243.5, 1209.9, 1079.2, 852.20, 956.80, 842.31,  
     M 897.44, 1081.8, 914.23, 993.09, 1049.8, 844.95, 839.16/          
C         SOLAR SPECTRUM FROM  28400 TO  29830 CM-1,  IN STEPS OF 10 CM-
      DATA SUNB01  /                                                    
     A 876.54, 892.17, 913.13, 938.18, 966.10, 995.62, 1025.4, 1054.1,  
     B 1080.2, 1102.1, 1119.0, 1132.2, 1102.7, 1159.3, 1243.5, 1238.3,  
     C 1209.9, 1196.2, 1079.2, 895.60, 852.20, 935.59, 956.80, 897.09,  
     D 842.31, 821.15, 897.44, 1042.7, 1081.8, 988.79, 914.23, 929.38,  
     E 993.09, 1041.9, 1049.8, 984.33, 844.95, 770.76, 839.16, 939.65,  
     F 1026.1, 1121.1, 1162.6, 1142.6, 1077.9, 1027.3, 1078.2, 1094.3,  
     G 969.83, 853.72, 849.91, 909.12, 995.68, 1095.0, 1146.9, 1086.3,  
     H 1010.4, 1065.4, 1128.9, 1080.6, 987.93, 898.18, 835.20, 771.63,  
     I 687.12, 614.52, 606.14, 737.09, 908.13, 997.64, 1080.6, 1126.3,  
     J 1056.7, 1028.4, 1141.7, 1252.6, 1225.3, 1103.2, 1038.6, 1043.4,  
     K 1002.9, 965.51, 1035.0, 1150.7, 1200.9, 1152.0, 1068.5, 995.84,  
     L 889.52, 818.48, 907.01, 1042.2, 1055.6, 1000.6, 972.00, 985.72,  
     M 1027.2, 1054.8, 1078.0, 1126.6, 1205.3, 1245.7, 1201.0, 1144.7,  
     N 1097.5, 1030.1, 926.85, 836.71, 864.11, 993.50, 1075.3, 1032.6,  
     O 1008.9, 1066.1, 1067.4, 1004.8, 971.54, 923.18, 815.71, 799.70,  
     P 946.19, 1100.1, 1126.4, 1032.2, 895.14, 784.30, 734.77, 726.53,  
     Q 726.88, 765.54, 863.90, 992.24, 1070.9, 1028.1, 858.78, 647.15,  
     R 563.18, 679.98, 906.40, 1094.3, 1155.3, 1124.3, 1098.4, 1109.5 / 
C         SOLAR SPECTRUM FROM  29840 TO  31270 CM-1,  IN STEPS OF 10 CM-
      DATA SUNB02  /                                                    
     A 1076.2, 944.17, 849.20, 928.54, 1062.0, 1118.9, 1119.2, 1074.6,  
     B 1005.8, 980.02, 999.11, 1002.4, 939.78, 838.12, 816.13, 908.73,  
     C 1014.9, 1058.3, 1043.7, 987.54, 946.35, 981.40, 1055.8, 1094.3,  
     D 1028.3, 916.41, 908.99, 991.83, 1049.6, 1076.2, 1093.5, 1076.3,  
     E 1014.5, 949.61, 947.26, 1001.2, 1051.5, 1072.8, 1068.0, 1012.5,  
     F 907.81, 866.30, 950.89, 1037.5, 1079.5, 1183.9, 1291.3, 1268.6,  
     G 1199.3, 1188.6, 1188.0, 1186.6, 1198.2, 1171.3, 1132.6, 1131.6,  
     H 1096.0, 971.10, 847.07, 836.62, 922.78, 990.99, 987.51, 969.24,  
     I 981.46, 981.36, 971.95, 985.34, 1003.0, 1037.2, 1071.2, 1065.7,  
     J 1026.7, 984.84, 1002.7, 1070.3, 1117.5, 1116.0, 1048.9, 965.34,  
     K 972.27, 1045.7, 1096.6, 1127.5, 1133.5, 1099.6, 1079.3, 1082.9,  
     L 1026.8, 927.50, 879.08, 858.83, 831.01, 807.82, 789.56, 813.75,  
     M 893.46, 937.62, 901.56, 864.46, 873.35, 891.03, 862.46, 810.30,  
     N 787.36, 752.93, 715.34, 708.07, 728.93, 786.79, 807.73, 736.28,  
     O 645.08, 616.90, 649.17, 691.77, 749.18, 820.21, 820.68, 791.26,  
     P 854.27, 940.56, 956.38, 909.42, 824.18, 767.17, 722.06, 653.42,  
     Q 624.67, 633.73, 655.14, 707.93, 784.94, 880.79, 961.15, 985.60,  
     R 986.18, 966.53, 921.47, 888.89, 855.85, 851.66, 886.78, 850.97 / 
C         SOLAR SPECTRUM FROM  31280 TO  32710 CM-1,  IN STEPS OF 10 CM-
      DATA SUNB03  /                                                    
     A 766.97, 738.95, 724.53, 657.61, 587.77, 616.86, 760.61, 903.23,  
     B 917.27, 838.49, 784.80, 759.41, 719.61, 671.48, 624.63, 588.57,  
     C 574.70, 596.68, 698.02, 866.39, 974.82, 960.37, 930.10, 962.65,  
     D 1007.1, 1001.9, 926.29, 816.64, 763.25, 772.93, 762.66, 729.39,  
     E 725.01, 727.16, 672.73, 581.42, 520.97, 488.80, 478.60, 542.08,  
     F 663.71, 749.48, 785.87, 811.05, 818.19, 813.80, 824.54, 836.62,  
     G 799.66, 728.00, 660.36, 559.28, 473.28, 550.16, 752.04, 885.84,  
     H 906.80, 912.21, 929.32, 899.72, 830.20, 774.56, 736.42, 724.09,  
     I 740.12, 754.11, 764.96, 780.76, 788.94, 784.87, 758.80, 725.91,  
     J 751.84, 804.24, 777.73, 703.36, 665.27, 663.99, 679.36, 706.09,  
     K 757.57, 836.09, 880.02, 881.18, 907.91, 929.26, 894.32, 874.01,  
     L 918.56, 953.50, 922.32, 866.61, 836.54, 825.28, 752.54, 586.02,  
     M 427.46, 374.05, 437.23, 534.32, 556.74, 563.11, 629.31, 631.26,  
     N 518.76, 438.31, 460.31, 530.45, 608.50, 657.99, 662.08, 686.17,  
     O 775.18, 843.11, 797.46, 685.33, 611.33, 628.74, 711.36, 754.94,  
     P 728.80, 722.79, 726.38, 679.68, 665.83, 710.48, 723.10, 724.09,  
     Q 760.18, 784.01, 742.78, 634.33, 546.55, 563.54, 611.03, 623.16,  
     R 665.36, 743.55, 764.46, 671.14, 513.18, 401.86, 405.77, 515.72 / 
C         SOLAR SPECTRUM FROM  32720 TO  34150 CM-1,  IN STEPS OF 10 CM-
      DATA SUNB04  /                                                    
     A 639.90, 677.85, 679.55, 759.33, 848.11, 819.89, 751.75, 710.50,  
     B 615.33, 525.09, 583.35, 715.23, 767.53, 739.10, 664.05, 580.57,  
     C 572.85, 634.13, 648.77, 561.27, 497.72, 591.71, 737.83, 794.19,  
     D 802.51, 799.33, 735.79, 658.41, 659.47, 718.18, 761.67, 697.24,  
     E 545.14, 474.47, 526.96, 597.65, 584.74, 447.28, 291.35, 261.28,  
     F 330.26, 401.96, 466.32, 531.26, 572.34, 584.86, 585.17, 569.46,  
     G 558.27, 559.41, 512.02, 426.37, 378.14, 398.26, 473.49, 542.18,  
     H 531.76, 437.48, 341.85, 305.82, 299.88, 328.12, 440.04, 586.46,  
     I 660.32, 625.22, 510.26, 418.85, 447.36, 534.89, 605.86, 667.07,  
     J 687.31, 636.79, 549.63, 472.88, 419.53, 370.06, 327.98, 320.49,  
     K 354.00, 399.17, 450.98, 528.34, 608.25, 696.07, 774.28, 760.75,  
     L 690.58, 648.20, 580.63, 477.96, 453.91, 488.74, 464.02, 421.59,  
     M 444.32, 446.59, 375.95, 342.13, 397.49, 510.97, 646.38, 725.14,  
     N 703.06, 639.06, 619.10, 654.66, 665.99, 611.40, 580.22, 607.29,  
     O 591.05, 542.30, 583.82, 673.02, 673.21, 582.44, 465.73, 377.25,  
     P 377.04, 487.27, 607.93, 617.52, 583.46, 601.68, 615.94, 575.47,  
     Q 541.63, 542.06, 522.28, 472.49, 423.29, 438.09, 556.72, 664.34,  
     R 669.88, 657.45, 684.71, 705.70, 683.11, 600.81, 509.90, 497.64 / 
C         SOLAR SPECTRUM FROM  34160 TO  35590 CM-1,  IN STEPS OF 10 CM-
      DATA SUNB05  /                                                    
     A 511.07, 496.07, 500.32, 518.70, 529.91, 563.00, 609.20, 626.49,  
     B 622.11, 615.72, 600.44, 591.26, 598.12, 593.07, 590.94, 631.58,  
     C 696.48, 718.48, 676.11, 631.56, 619.64, 620.53, 624.10, 636.56,  
     D 658.02, 688.78, 724.81, 742.60, 722.31, 675.86, 665.96, 704.73,  
     E 703.70, 645.00, 598.26, 587.77, 590.94, 575.93, 528.03, 477.92,  
     F 457.52, 456.80, 454.91, 448.65, 445.47, 445.38, 444.43, 446.04,  
     G 455.91, 468.02, 454.34, 393.32, 301.22, 211.44, 167.11, 193.99,  
     H 254.01, 305.35, 353.03, 385.08, 387.03, 391.60, 406.20, 415.34,  
     I 435.34, 469.77, 492.15, 472.73, 409.86, 353.25, 340.68, 355.27,  
     J 379.77, 401.81, 409.67, 406.89, 393.16, 378.89, 375.20, 373.52,  
     K 360.19, 322.79, 273.55, 237.76, 212.33, 184.80, 156.20, 127.75,  
     L 96.269, 68.806, 62.047, 77.143, 100.47, 127.56, 159.88, 194.05,  
     M 225.20, 254.64, 285.75, 300.14, 294.40, 308.92, 340.83, 346.26,  
     N 336.29, 347.54, 373.81, 388.78, 372.68, 325.29, 294.40, 317.56,  
     O 360.30, 378.08, 374.22, 374.03, 383.34, 387.88, 377.55, 356.96,  
     P 340.67, 328.71, 314.00, 316.91, 344.51, 355.54, 335.66, 318.68,  
     Q 318.65, 322.43, 318.61, 304.92, 284.84, 268.13, 265.80, 273.55,  
     R 274.18, 252.38, 215.04, 188.60, 181.31, 181.31, 180.78, 175.24 / 
C         SOLAR SPECTRUM FROM  35600 TO  37030 CM-1,  IN STEPS OF 10 CM-
      DATA SUNB06  /                                                    
     A 162.06, 145.08, 128.76, 113.76, 98.078, 83.072, 76.222, 78.359,  
     B 78.434, 74.235, 75.843, 80.321, 77.859, 70.298, 64.651, 67.049,  
     C 77.810, 83.167, 75.286, 71.202, 80.549, 92.008, 100.17, 108.63,  
     D 119.44, 130.78, 142.31, 158.94, 177.12, 186.40, 186.60, 181.47,  
     E 175.30, 175.54, 179.00, 177.04, 172.60, 172.67, 178.98, 193.77,  
     F 215.13, 233.62, 252.05, 277.68, 298.91, 298.40, 280.81, 274.21,  
     G 286.52, 285.46, 259.71, 241.39, 246.98, 259.87, 274.27, 298.47,  
     H 316.85, 303.19, 263.69, 229.31, 227.90, 256.12, 281.58, 300.19,  
     I 310.56, 279.54, 211.93, 152.18, 129.94, 147.47, 181.62, 215.37,  
     J 239.50, 233.12, 191.55, 139.41, 110.51, 118.93, 134.79, 129.05,  
     K 124.39, 143.53, 158.29, 141.84, 116.32, 111.59, 128.93, 149.17,  
     L 153.44, 145.63, 148.52, 159.25, 155.84, 154.17, 177.28, 203.40,  
     M 207.35, 205.27, 222.85, 253.18, 271.28, 279.27, 302.17, 321.47,  
     N 288.83, 230.14, 206.40, 213.22, 216.49, 207.46, 196.20, 195.21,  
     O 202.03, 194.33, 164.86, 136.65, 123.87, 128.14, 161.89, 216.99,  
     P 253.68, 249.26, 222.89, 213.11, 243.64, 293.10, 309.42, 286.40,  
     Q 269.61, 272.23, 271.67, 265.84, 265.61, 264.77, 266.03, 289.51,  
     R 325.67, 337.34, 321.17, 300.30, 282.60, 287.14, 322.06, 335.79 / 
C         SOLAR SPECTRUM FROM  37040 TO  38470 CM-1,  IN STEPS OF 10 CM-
       DATA SUNB07  /                                                   
     A 297.22, 254.10, 243.47, 239.49, 219.32, 211.94, 239.28, 271.43,  
     B 279.37, 272.26, 264.77, 250.52, 229.93, 222.15, 235.30, 256.79,  
     C 275.28, 286.92, 284.85, 269.52, 255.05, 253.46, 263.22, 274.78,  
     D 279.19, 270.17, 249.41, 229.04, 221.64, 231.38, 252.70, 280.64,  
     E 310.06, 328.33, 325.01, 290.26, 238.97, 223.38, 257.24, 282.60,  
     F 264.32, 243.34, 253.18, 272.89, 271.32, 256.12, 260.24, 271.35,  
     G 257.11, 236.61, 238.72, 248.92, 255.90, 272.04, 291.78, 297.40,  
     H 288.09, 283.28, 292.92, 301.74, 309.07, 322.05, 320.42, 295.43,  
     I 269.65, 254.41, 240.88, 228.18, 221.23, 213.72, 201.23, 197.17,  
     J 212.29, 233.39, 247.65, 261.74, 286.17, 322.49, 349.47, 338.28,  
     K 297.06, 261.55, 252.28, 264.65, 286.92, 298.94, 280.45, 244.37,  
     L 213.47, 193.03, 182.07, 168.54, 143.12, 114.10, 89.615, 73.589,  
     M 73.990, 87.912, 96.265, 94.813, 96.604, 102.30, 102.15, 103.07,  
     N 117.81, 137.41, 146.09, 144.28, 137.89, 128.11, 122.82, 128.19,  
     O 130.66, 117.31, 98.912, 93.397, 105.63, 122.73, 126.39, 113.05,  
     P 92.317, 76.340, 69.032, 66.324, 71.280, 87.431, 105.94, 114.02,  
     Q 107.91, 91.872, 75.208, 69.123, 75.930, 90.928, 109.71, 125.70,  
     R 135.79, 141.14, 138.14, 121.33, 91.806, 63.497, 52.106, 59.555 / 
C         SOLAR SPECTRUM FROM  38480 TO  39910 CM-1,  IN STEPS OF 10 CM-
      DATA SUNB08  /                                                    
     A 81.015, 106.67, 118.97, 116.36, 110.82, 100.88, 89.056, 90.431,  
     B 104.41, 114.95, 124.85, 148.87, 171.72, 167.22, 142.25, 118.42,  
     C 98.653, 78.908, 68.133, 77.286, 100.93, 120.08, 125.49, 131.79,  
     D 155.69, 180.75, 181.81, 166.77, 150.06, 133.24, 116.14, 97.728,  
     E 81.629, 76.695, 87.607, 110.23, 134.88, 149.13, 147.64, 139.88,  
     F 135.19, 135.07, 138.00, 136.73, 128.84, 122.22, 120.48, 121.98,  
     G 123.08, 116.30, 101.43, 86.303, 74.719, 68.800, 71.327, 80.626,  
     H 90.485, 96.739, 100.69, 100.81, 93.677, 84.740, 81.532, 82.893,  
     I 84.564, 87.584, 91.780, 91.272, 87.014, 87.386, 90.149, 84.917,  
     J 71.266, 57.873, 51.863, 53.876, 57.909, 58.508, 57.020, 57.432,  
     K 60.671, 64.667, 67.362, 67.511, 64.233, 59.035, 55.697, 56.636,  
     L 59.400, 59.070, 56.522, 55.834, 55.860, 54.039, 51.976, 52.344,  
     M 54.667, 56.450, 56.751, 56.769, 58.002, 60.029, 59.602, 53.134,  
     N 42.926, 35.588, 33.447, 35.171, 39.379, 44.371, 47.745, 46.933,  
     O 42.441, 37.879, 35.595, 36.458, 41.048, 47.300, 51.098, 50.024,  
     P 45.331, 41.282, 40.082, 40.000, 39.104, 37.329, 36.632, 37.792,  
     Q 39.189, 41.058, 45.214, 50.737, 54.281, 55.015, 56.138, 60.931,  
     R 67.383, 69.534, 65.159, 56.372, 47.326, 44.322, 49.944, 59.696 / 
C         SOLAR SPECTRUM FROM  39920 TO  41350 CM-1,  IN STEPS OF 10 CM-
       DATA SUNB09  /                                                   
     A 67.929, 71.334, 69.905, 65.620, 59.303, 54.016, 55.880, 65.155,  
     B 74.065, 76.217, 73.506, 71.406, 70.849, 69.749, 69.268, 71.380,  
     C 72.721, 68.929, 61.665, 54.896, 47.420, 38.325, 32.219, 31.243,  
     D 33.310, 35.358, 35.623, 36.840, 41.551, 47.499, 51.176, 50.344,  
     E 45.362, 38.341, 33.130, 33.801, 40.140, 49.121, 55.385, 55.174,  
     F 50.450, 46.511, 47.495, 51.883, 56.354, 59.603, 61.584, 63.215,  
     G 64.603, 64.101, 59.027, 50.956, 47.633, 52.543, 58.883, 59.829,  
     H 57.617, 56.727, 57.371, 57.898, 57.177, 55.129, 52.952, 52.018,  
     I 52.186, 52.044, 50.269, 46.592, 42.515, 40.755, 41.887, 44.119,  
     J 46.536, 48.858, 50.490, 51.919, 54.085, 54.707, 51.927, 49.449,  
     K 49.865, 50.933, 50.496, 48.616, 46.717, 46.070, 46.263, 46.733,  
     L 48.009, 50.187, 52.420, 53.536, 52.507, 51.380, 53.214, 56.985,  
     M 60.614, 63.139, 63.999, 63.869, 65.100, 69.385, 74.743, 78.184,  
     N 78.103, 74.113, 67.371, 60.849, 58.924, 62.682, 68.032, 69.117,  
     O 64.604, 59.110, 55.998, 56.838, 61.778, 65.874, 65.079, 63.038,  
     P 64.809, 69.911, 74.841, 76.439, 73.587, 68.853, 67.497, 72.675,  
     Q 80.602, 83.422, 78.957, 72.228, 66.737, 62.842, 61.535, 63.574,  
     R 69.248, 76.577, 79.922, 77.755, 73.938, 70.518, 68.003, 66.339 / 
C         SOLAR SPECTRUM FROM  41360 TO  42790 CM-1,  IN STEPS OF 10 CM-
      DATA SUNB10  /                                                    
     A 63.979, 61.098, 59.421, 58.103, 55.741, 52.549, 48.079, 42.578,  
     B 38.373, 37.297, 37.455, 34.861, 30.483, 29.634, 34.734, 42.460,  
     C 47.066, 45.848, 40.157, 34.290, 31.584, 30.650, 29.054, 27.788,  
     D 30.427, 37.570, 44.196, 46.880, 47.848, 49.166, 49.180, 45.002,  
     E 38.135, 35.055, 38.095, 41.750, 40.899, 35.722, 28.884, 24.835,  
     F 28.670, 39.646, 50.310, 55.725, 57.401, 58.110, 59.406, 59.360,  
     G 53.420, 43.004, 34.787, 33.697, 39.682, 47.554, 52.605, 53.632,  
     H 51.001, 45.266, 37.844, 31.030, 25.936, 22.799, 21.882, 23.484,  
     I 27.857, 33.447, 37.319, 39.195, 42.826, 50.398, 58.752, 63.301,  
     J 61.094, 53.532, 46.046, 41.118, 37.646, 36.304, 40.426, 50.893,  
     K 61.553, 65.395, 62.680, 58.087, 54.622, 51.330, 46.874, 42.870,  
     L 40.547, 39.760, 40.217, 40.359, 39.559, 40.667, 46.260, 53.413,  
     M 56.041, 52.566, 46.674, 41.073, 35.511, 31.231, 31.082, 35.955,  
     N 45.199, 55.464, 61.802, 63.505, 61.850, 56.412, 49.388, 46.369,  
     O 50.058, 56.694, 60.884, 61.030, 58.107, 54.303, 51.940, 50.508,  
     P 46.749, 39.155, 31.535, 28.959, 30.973, 32.670, 31.567, 29.340,  
     Q 27.275, 25.184, 24.264, 27.068, 34.296, 42.475, 47.230, 47.425,  
     R 44.435, 40.538, 36.868, 33.020, 29.405, 28.753, 34.079, 44.246 / 
C         SOLAR SPECTRUM FROM  42800 TO  44230 CM-1,  IN STEPS OF 10 CM-
      DATA SUNB11  /                                                    
     A 53.780, 57.974, 56.376, 51.200, 45.308, 40.273, 35.900, 33.344,  
     B 34.011, 36.858, 41.283, 47.374, 53.088, 56.201, 55.633, 50.843,  
     C 43.997, 38.767, 36.248, 36.380, 40.762, 50.700, 63.371, 73.432,  
     D 76.418, 70.373, 58.741, 47.034, 38.598, 34.664, 35.794, 42.084,  
     E 49.973, 54.338, 53.956, 52.287, 52.778, 55.571, 59.034, 60.268,  
     F 56.247, 47.362, 38.056, 32.889, 31.739, 31.734, 32.476, 35.060,  
     G 39.091, 43.398, 48.131, 53.574, 58.749, 63.599, 68.971, 73.421,  
     H 73.861, 69.003, 60.557, 51.865, 44.879, 42.060, 44.802, 47.950,  
     I 46.882, 42.973, 39.293, 37.711, 37.137, 35.222, 32.243, 30.488,  
     J 32.605, 40.429, 51.099, 57.710, 57.150, 52.992, 50.275, 49.986,  
     K 49.778, 48.371, 46.421, 44.604, 42.730, 41.244, 41.565, 43.805,  
     L 47.013, 48.992, 46.428, 40.595, 37.840, 42.353, 52.248, 60.529,  
     M 61.566, 56.800, 52.041, 52.260, 57.077, 61.019, 60.712, 57.048,  
     N 51.481, 46.352, 44.366, 44.947, 45.478, 44.944, 43.825, 42.105,  
     O 39.466, 36.826, 35.907, 36.357, 35.661, 33.947, 33.690, 34.429,  
     P 34.000, 32.645, 31.410, 30.281, 29.409, 29.127, 29.326, 29.869,  
     Q 30.601, 31.311, 32.099, 32.779, 32.757, 32.098, 31.975, 33.484,  
     R 36.048, 39.169, 43.365, 47.244, 48.214, 45.786, 41.586, 38.775 / 
C         SOLAR SPECTRUM FROM  44240 TO  45670 CM-1,  IN STEPS OF 10 CM-
      DATA SUNB12  /                                                    
     A 40.753, 46.752, 51.684, 52.597, 51.449, 50.684, 49.450, 46.747,  
     B 45.369, 47.685, 50.240, 48.961, 46.693, 48.600, 53.694, 56.465,  
     C 54.341, 50.722, 49.877, 51.246, 52.088, 52.765, 56.254, 63.326,  
     D 69.744, 71.066, 68.349, 65.123, 62.551, 59.195, 53.705, 48.161,  
     E 46.236, 47.710, 49.660, 50.799, 51.836, 54.537, 59.647, 64.707,  
     F 65.844, 61.634, 55.570, 54.083, 58.781, 64.888, 69.777, 74.008,  
     G 76.492, 76.226, 74.746, 74.941, 77.801, 79.619, 76.190, 67.190,  
     H 55.231, 45.813, 43.141, 45.647, 49.466, 52.231, 52.221, 48.886,  
     I 44.716, 42.613, 43.385, 45.968, 48.121, 48.998, 49.885, 50.707,  
     J 49.893, 48.319, 48.198, 50.280, 53.830, 55.914, 54.822, 52.939,  
     K 51.944, 49.438, 42.956, 34.614, 28.100, 24.503, 24.203, 27.839,  
     L 34.604, 41.615, 45.324, 45.444, 45.527, 47.179, 45.756, 36.862,  
     M 26.037, 20.569, 20.329, 24.263, 30.863, 35.939, 36.711, 35.693,  
     N 37.256, 40.862, 44.416, 48.800, 54.182, 57.655, 58.427, 59.965,  
     O 63.940, 66.820, 65.465, 59.482, 49.396, 39.422, 34.182, 35.388,  
     P 42.875, 52.034, 57.595, 59.093, 57.272, 52.172, 45.493, 39.419,  
     Q 35.581, 35.902, 40.354, 46.732, 53.309, 58.781, 61.785, 59.255,  
     R 50.030, 41.567, 40.523, 43.584, 44.875, 42.754, 40.077, 39.941 / 
C         SOLAR SPECTRUM FROM  45680 TO  47110 CM-1,  IN STEPS OF 10 CM-
      DATA SUNB13  /                                                    
     A 40.977, 39.567, 34.955, 30.424, 31.039, 38.687, 47.480, 49.830,  
     B 46.790, 44.829, 46.546, 50.415, 54.602, 57.656, 58.463, 57.276,  
     C 55.621, 54.514, 53.338, 50.026, 42.817, 33.636, 27.134, 25.516,  
     D 27.897, 31.392, 32.125, 29.463, 26.581, 25.956, 27.737, 31.175,  
     E 34.959, 37.671, 38.641, 37.958, 36.733, 35.681, 33.877, 30.849,  
     F 28.059, 27.615, 29.319, 29.375, 25.390, 20.659, 19.484, 22.297,  
     G 27.282, 32.467, 35.906, 37.137, 37.895, 39.130, 39.777, 39.872,  
     H 40.778, 42.317, 42.934, 40.430, 34.227, 27.701, 23.880, 22.174,  
     I 21.639, 22.589, 25.184, 29.017, 32.981, 36.110, 38.580, 41.239,  
     J 44.426, 46.939, 47.010, 44.165, 39.659, 35.556, 32.838, 31.546,  
     K 32.676, 36.963, 42.333, 44.931, 43.704, 40.943, 37.973, 35.199,  
     L 33.574, 33.339, 34.185, 36.347, 39.963, 43.964, 47.162, 48.987,  
     M 48.976, 47.948, 48.004, 49.892, 51.065, 47.834, 40.489, 32.665,  
     N 26.795, 24.461, 26.655, 31.928, 37.634, 41.345, 40.956, 36.827,  
     O 32.110, 28.612, 26.482, 26.602, 28.831, 30.877, 30.976, 30.063,  
     P 29.887, 30.305, 29.974, 28.265, 26.517, 27.066, 30.403, 34.539,  
     Q 37.104, 37.598, 37.252, 37.060, 36.498, 34.167, 29.814, 24.192,  
     R 18.515, 15.086, 15.040, 17.158, 20.807, 25.682, 30.352, 34.203 / 
C         SOLAR SPECTRUM FROM  47120 TO  48550 CM-1,  IN STEPS OF 10 CM-
      DATA SUNB14  /                                                    
     A 37.902, 42.531, 47.832, 50.509, 48.019, 42.616, 38.321, 37.370,  
     B 40.172, 44.395, 46.132, 43.911, 38.396, 31.379, 26.275, 25.075,  
     C 26.652, 28.963, 31.168, 34.168, 38.050, 40.231, 38.347, 32.741,  
     D 26.199, 21.863, 20.249, 20.185, 21.726, 25.562, 30.318, 33.431,  
     E 34.453, 34.959, 36.374, 37.870, 36.655, 31.966, 25.920, 21.264,  
     F 20.663, 24.658, 30.263, 34.021, 34.336, 31.356, 26.926, 23.109,  
     G 20.867, 20.684, 22.416, 24.878, 26.779, 27.334, 26.537, 25.210,  
     H 24.013, 22.944, 21.800, 20.449, 19.290, 19.528, 21.742, 24.125,  
     I 23.994, 21.559, 19.555, 18.915, 18.342, 17.335, 16.549, 16.479,  
     J 17.211, 18.445, 19.294, 18.980, 17.912, 17.156, 17.103, 17.256,  
     K 16.925, 15.842, 14.485, 13.683, 13.647, 13.914, 14.009, 13.770,  
     L 13.456, 13.399, 13.547, 13.760, 14.060, 14.427, 14.644, 14.438,  
     M 13.986, 13.749, 13.927, 14.390, 14.759, 14.822, 14.679, 14.448,  
     N 14.186, 13.937, 13.754, 13.657, 13.540, 13.308, 13.053, 12.841,  
     O 12.704, 12.742, 12.811, 12.662, 12.355, 12.100, 12.003, 12.014,  
     P 12.067, 12.223, 12.444, 12.472, 12.164, 11.732, 11.515, 11.619,  
     Q 11.873, 12.028, 11.947, 11.722, 11.399, 10.930, 10.473, 10.205,  
     R 10.224, 10.694, 11.468, 12.007, 12.083, 11.905, 11.498, 10.891 / 
C         SOLAR SPECTRUM FROM  48560 TO  49990 CM-1,  IN STEPS OF 10 CM-
      DATA SUNB15  /                                                    
     A 10.575, 10.846, 11.353, 11.612, 11.411, 10.876, 10.383, 10.305,  
     B 10.695, 11.245, 11.636, 11.828, 11.918, 11.865, 11.674, 11.510,  
     C 11.407, 11.303, 11.216, 11.143, 11.039, 10.983, 11.004, 10.900,  
     D 10.653, 10.562, 10.781, 11.186, 11.605, 11.806, 11.582, 11.056,  
     E 10.567, 10.335, 10.408, 10.729, 11.165, 11.540, 11.646, 11.372,  
     F 10.933, 10.524, 9.9973, 9.3783, 8.9883, 9.0163, 9.4125, 9.9179,  
     G 10.278, 10.472, 10.553, 10.575, 10.519, 10.216, 9.6821, 9.1499,  
     H 8.7057, 8.3894, 8.3442, 8.6241, 9.1371, 9.7184, 10.191, 10.443,  
     I 10.458, 10.289, 9.9772, 9.5829, 9.3097, 9.3195, 9.4694, 9.5182,  
     J 9.4326, 9.2478, 8.8197, 7.9809, 6.9996, 6.4856, 6.7462, 7.5406,  
     K 8.2813, 8.7258, 9.0682, 9.1665, 8.8637, 8.4638, 8.2393, 8.1656,  
     L 8.1880, 8.3578, 8.6488, 8.8980, 9.0117, 9.0659, 9.1955, 9.4207,  
     M 9.5526, 9.4237, 9.1290, 8.8441, 8.6138, 8.4237, 8.2979, 8.2598,  
     N 8.2859, 8.3475, 8.4533, 8.6285, 8.8310, 8.8866, 8.6750, 8.3312,  
     O 8.0091, 7.7296, 7.6239, 7.8692, 8.2725, 8.4086, 8.2515, 8.0914,  
     P 8.0003, 7.9367, 7.9266, 7.9580, 8.0492, 8.2376, 8.4263, 8.4811,  
     Q 8.3309, 8.0263, 7.7632, 7.6987, 7.8124, 7.9390, 8.0183, 8.0816,  
     R 8.0428, 7.8923, 7.6963, 7.4969, 7.4013, 7.4289, 7.4489, 7.4059 / 
C         SOLAR SPECTRUM FROM  50000 TO  51430 CM-1,  IN STEPS OF 10 CM-
      DATA SUNB16  /                                                    
     A 7.4198, 7.5261, 7.5252, 7.3239, 7.1263, 7.1423, 7.3340, 7.5049,  
     B 7.5484, 7.5319, 7.5163, 7.4995, 7.5728, 7.8104, 8.0588, 8.0948,  
     C 7.9140, 7.6978, 7.5116, 7.2138, 6.8063, 6.5430, 6.5232, 6.5869,  
     D 6.5610, 6.3984, 6.1889, 6.0587, 6.0676, 6.1988, 6.3140, 6.2527,  
     E 6.0929, 6.0277, 6.0941, 6.3031, 6.6594, 6.9398, 6.9566, 6.8310,  
     F 6.7374, 6.6812, 6.6558, 6.8336, 7.2020, 7.4012, 7.2950, 7.0488,  
     G 6.7966, 6.6293, 6.5868, 6.5980, 6.6007, 6.6501, 6.7627, 6.7853,  
     H 6.6321, 6.4856, 6.5198, 6.6486, 6.7271, 6.7227, 6.6696, 6.6189,  
     I 6.5979, 6.6188, 6.7110, 6.8343, 6.8750, 6.8250, 6.7885, 6.8266,  
     J 6.8556, 6.8068, 6.8377, 7.0467, 7.2779, 7.4139, 7.4712, 7.4621,  
     K 7.4071, 7.3592, 7.3372, 7.3220, 7.2938, 7.2531, 7.2052, 7.1335,  
     L 7.0298, 6.8533, 6.5535, 6.2227, 6.0139, 5.9384, 5.9038, 5.8568,  
     M 5.7909, 5.7326, 5.7745, 5.9608, 6.1865, 6.3681, 6.4997, 6.5437,  
     N 6.4637, 6.2708, 6.0451, 5.9557, 6.0855, 6.2542, 6.2454, 6.0795,  
     O 5.9102, 5.8447, 5.9218, 6.1063, 6.2895, 6.3271, 6.1097, 5.7421,  
     P 5.4452, 5.2981, 5.3256, 5.4935, 5.6819, 5.8245, 5.8933, 5.9630,  
     Q 6.1703, 6.4525, 6.6325, 6.6965, 6.7185, 6.6238, 6.3107, 5.9241,  
     R 5.6987, 5.6651, 5.7428, 5.8790, 5.9715, 5.9618, 5.9674, 6.0754 / 
C         SOLAR SPECTRUM FROM  51440 TO  52870 CM-1,  IN STEPS OF 10 CM-
      DATA SUNB17  /                                                    
     A 6.2541, 6.4300, 6.4968, 6.4564, 6.4082, 6.3024, 6.0135, 5.6431,  
     B 5.3963, 5.2989, 5.2635, 5.2227, 5.1279, 4.9315, 4.6348, 4.3168,  
     C 4.0151, 3.6625, 3.2906, 3.1028, 3.1349, 3.1994, 3.2596, 3.4144,  
     D 3.5949, 3.6534, 3.6296, 3.6281, 3.5876, 3.4292, 3.2659, 3.2284,  
     E 3.2576, 3.3002, 3.4535, 3.7372, 4.0573, 4.3558, 4.5999, 4.7781,  
     F 4.8855, 4.8999, 4.8392, 4.7624, 4.7059, 4.6981, 4.7666, 4.8453,  
     G 4.8236, 4.7293, 4.6861, 4.7132, 4.7725, 4.8713, 4.9596, 4.9527,  
     H 4.8957, 4.9252, 5.0736, 5.2229, 5.2505, 5.1537, 5.0156, 4.8880,  
     I 4.7686, 4.6549, 4.5534, 4.4828, 4.4661, 4.5040, 4.5905, 4.7033,  
     J 4.7858, 4.8334, 4.9283, 5.0377, 5.0065, 4.8471, 4.6828, 4.5586,  
     K 4.4812, 4.4314, 4.3903, 4.3830, 4.4066, 4.3900, 4.2973, 4.1978,  
     L 4.1462, 4.1084, 4.1495, 4.3897, 4.6859, 4.8206, 4.7938, 4.6781,  
     M 4.5222, 4.3959, 4.3358, 4.2947, 4.2259, 4.1452, 4.1060, 4.1462,  
     N 4.2149, 4.2549, 4.3061, 4.3742, 4.3738, 4.2718, 4.1389, 4.0405,  
     O 3.9457, 3.8127, 3.7099, 3.7344, 3.8589, 3.9598, 3.9525, 3.8377,  
     P 3.6708, 3.5357, 3.4929, 3.5375, 3.6381, 3.7890, 3.9671, 4.0995,  
     Q 4.1421, 4.1302, 4.1235, 4.1623, 4.2506, 4.2948, 4.2231, 4.0993,  
     R 3.9680, 3.9475, 4.1958, 4.5131, 4.6101, 4.5130, 4.3474, 4.1749 / 
C         SOLAR SPECTRUM FROM  52880 TO  54310 CM-1,  IN STEPS OF 10 CM-
      DATA SUNB18  /                                                    
     A 4.0467, 3.9956, 4.0078, 4.0374, 4.0255, 3.9379, 3.8192, 3.7529,  
     B 3.7675, 3.8260, 3.8654, 3.8518, 3.8148, 3.8028, 3.8098, 3.7934,  
     C 3.7660, 3.7944, 3.8689, 3.8978, 3.8856, 3.8923, 3.8570, 3.6940,  
     D 3.4693, 3.3222, 3.2824, 3.2887, 3.3039, 3.3222, 3.3313, 3.3326,  
     E 3.3482, 3.3807, 3.4188, 3.4602, 3.4972, 3.5151, 3.5155, 3.5165,  
     F 3.5258, 3.5406, 3.5478, 3.5345, 3.5339, 3.5820, 3.6396, 3.6448,  
     G 3.5872, 3.5112, 3.4804, 3.5257, 3.6238, 3.7290, 3.8023, 3.8024,  
     H 3.7268, 3.6578, 3.6439, 3.6422, 3.6373, 3.6397, 3.6410, 3.6494,  
     I 3.6608, 3.6251, 3.5212, 3.4020, 3.2845, 3.1230, 2.9483, 2.8515,  
     J 2.8432, 2.8638, 2.8967, 2.9505, 3.0025, 3.0552, 3.1106, 3.1178,  
     K 3.0596, 2.9854, 2.9316, 2.8903, 2.8590, 2.8500, 2.8450, 2.8121,  
     L 2.7626, 2.7424, 2.7667, 2.8024, 2.8165, 2.8111, 2.8128, 2.8569,  
     M 2.9659, 3.1062, 3.1990, 3.2128, 3.2088, 3.2391, 3.2661, 3.2364,  
     N 3.1173, 2.9094, 2.6952, 2.5324, 2.3959, 2.2953, 2.2510, 2.2245,  
     O 2.1811, 2.1301, 2.1482, 2.3257, 2.5856, 2.7226, 2.6495, 2.4508,  
     P 2.2444, 2.0850, 1.9891, 1.9843, 2.0816, 2.2233, 2.3248, 2.3551,  
     Q 2.3479, 2.3606, 2.4296, 2.5361, 2.6128, 2.6216, 2.6069, 2.6196,  
     R 2.6464, 2.6427, 2.5823, 2.4682, 2.3320, 2.2405, 2.2637, 2.3973 / 
C         SOLAR SPECTRUM FROM  54320 TO  55750 CM-1,  IN STEPS OF 10 CM-
      DATA SUNB19  /                                                    
     A 2.5524, 2.6891, 2.8508, 3.0103, 3.0681, 3.0064, 2.9114, 2.8609,  
     B 2.8517, 2.8374, 2.7894, 2.7288, 2.7138, 2.7729, 2.8707, 2.9536,  
     C 2.9953, 2.9911, 2.9398, 2.8550, 2.7732, 2.7303, 2.7366, 2.7650,  
     D 2.7705, 2.7374, 2.6830, 2.6218, 2.5663, 2.5341, 2.5351, 2.5681,  
     E 2.6124, 2.6305, 2.6024, 2.5431, 2.4840, 2.4546, 2.4684, 2.5100,  
     F 2.5445, 2.5532, 2.5564, 2.5889, 2.6616, 2.7553, 2.8466, 2.9290,  
     G 2.9958, 3.0175, 2.9774, 2.8990, 2.8001, 2.6927, 2.6171, 2.5931,  
     H 2.5809, 2.5276, 2.4284, 2.3365, 2.3162, 2.3855, 2.4872, 2.5455,  
     I 2.5773, 2.6809, 2.9720, 3.5757, 4.4006, 5.0044, 5.0295, 4.5135,  
     J 3.7071, 2.9059, 2.3600, 2.1418, 2.1119, 2.0871, 2.0301, 2.0043,  
     K 2.0361, 2.0963, 2.1520, 2.1878, 2.1955, 2.1864, 2.1899, 2.2170,  
     L 2.2574, 2.2895, 2.2783, 2.2148, 2.1641, 2.2343, 2.4726, 2.8119,  
     M 3.1288, 3.2984, 3.2206, 2.8859, 2.4473, 2.1436, 2.0729, 2.1391,  
     N 2.2171, 2.2580, 2.2654, 2.2481, 2.2103, 2.1657, 2.1356, 2.1321,  
     O 2.1438, 2.1461, 2.1396, 2.1460, 2.1588, 2.1581, 2.1481, 2.1343,  
     P 2.1101, 2.0754, 2.0400, 2.0121, 1.9930, 1.9799, 1.9699, 1.9613,  
     Q 1.9537, 1.9454, 1.9312, 1.9058, 1.8726, 1.8470, 1.8465, 1.8693,  
     R 1.8844, 1.8635, 1.8143, 1.7618, 1.7188, 1.6853, 1.6656, 1.6708 / 
C         SOLAR SPECTRUM FROM  55760 TO  57190 CM-1,  IN STEPS OF 10 CM-
      DATA SUNB20  /                                                    
     A 1.7036, 1.7519, 1.8120, 1.9015, 2.0124, 2.0980, 2.1385, 2.1481,  
     B 2.1347, 2.1086, 2.0953, 2.1062, 2.1095, 2.0685, 2.0001, 1.9461,  
     C 1.9194, 1.9088, 1.9023, 1.8977, 1.9049, 1.9300, 1.9588, 1.9635,  
     D 1.9357, 1.9019, 1.8887, 1.8939, 1.9018, 1.9038, 1.8975, 1.8747,  
     E 1.8289, 1.7716, 1.7303, 1.7330, 1.7900, 1.8782, 1.9548, 1.9907,  
     F 1.9807, 1.9430, 1.9173, 1.9218, 1.9203, 1.8717, 1.7832, 1.6965,  
     G 1.6389, 1.6077, 1.5924, 1.5818, 1.5583, 1.5142, 1.4616, 1.4237,  
     H 1.4252, 1.4834, 1.5970, 1.7410, 1.8771, 1.9784, 2.0451, 2.0872,  
     I 2.0909, 2.0384, 1.9573, 1.9002, 1.8824, 1.8663, 1.8193, 1.7540,  
     J 1.6874, 1.6222, 1.5726, 1.5450, 1.5290, 1.5312, 1.5699, 1.6411,  
     K 1.7186, 1.7678, 1.7546, 1.6623, 1.5115, 1.3588, 1.2605, 1.2348,  
     L 1.2611, 1.3091, 1.3588, 1.3884, 1.3800, 1.3482, 1.3224, 1.3159,  
     M 1.3437, 1.4142, 1.4950, 1.5443, 1.5521, 1.5282, 1.4902, 1.4606,  
     N 1.4465, 1.4398, 1.4399, 1.4544, 1.4760, 1.4781, 1.4506, 1.4229,  
     O 1.4185, 1.4221, 1.4119, 1.3908, 1.3779, 1.3813, 1.3933, 1.4087,  
     P 1.4268, 1.4417, 1.4408, 1.4188, 1.3861, 1.3548, 1.3261, 1.2980,  
     Q 1.2769, 1.2731, 1.2856, 1.3002, 1.3056, 1.2987, 1.2817, 1.2590,  
     R 1.2291, 1.1868, 1.1428, 1.1183, 1.1141, 1.1120, 1.1009, 1.0797 / 
C         SOLAR SPECTRUM FROM  57200 TO  57490 CM-1,  IN STEPS OF 10 CM-
      DATA SUNB21  /                                                    
     A 1.0523, 1.0284, 1.0251, 1.0577, 1.1195, 1.1791, 1.2061, 1.2013,  
     B 1.1936, 1.2000, 1.2040, 1.1824, 1.1489, 1.1400, 1.1539, 1.1629,  
     C 1.1617, 1.1586, 1.1564, 1.1572, 1.1565, 1.1399, 1.1037, 1.0627,  
     D 1.0341, 1.0223, 1.0199, 1.0188, 1.0174, 1.0163  /                
      END                                                               
      BLOCK DATA TITLE                                                  
C>    BLOCK DATA                                                        
C     TITLE INFORMATION                                                 
      CHARACTER*4  HHAZE      ,HSEASN     ,HVULCN     ,BLANK,           
     X            HMET        ,HMODEL     ,HTRRAD                       
      COMMON /TITL/ HHAZE(5,16),HSEASN(5,2),HVULCN(5,8),BLANK,          
     X HMET(5,2),HMODEL(5,8),HTRRAD(6,4)                                
      COMMON /VSBD/ VSB(10)                                             
      DATA VSB /23.,5.,0.,23.,5.,50.,23.,0.2,0.5,0./                    
      DATA BLANK/'    '/                                                
      DATA HHAZE /                                                      
     1 'RURA','L   ','    ','    ','    ',                              
     2 'RURA','L   ','    ','    ','    ',                              
     3 'NAVY',' MAR','ITIM','E   ','    ',                              
     4 'MARI','TIME','    ','    ','    ',                              
     5 'URBA','N   ','    ','    ','    ',                              
     6 'TROP','OSPH','ERIC','    ','    ',                              
     7 'USER',' DEF','INED','    ','    ',                              
     8 'FOG1',' (AD','VECT','TION',')   ',                              
     9 'FOG2','(RAD','IATI','0N) ','    ',                              
     X 'DESE','RT A','EROS','OL  ','    ',                              
     A 'BACK','GROU','ND S','TRAT','O   ',                              
     B 'AGED',' VOL','CANI','C   ','    ',                              
     C 'FRES','H VO','LCAN','IC  ','    ',                              
     D 'AGED',' VOL','CANI','C   ','    ',                              
     E 'FRES','H VO','LCAN','IC  ','    ',                              
     F 'METE','ORIC',' DUS','T   ','    '/                              
      DATA HSEASN /                                                     
     1 'SPRI','NG-S','UMME','R   ','    ',                              
     2 'FALL','-WIN','TER ','    ','    ' /                             
      DATA HVULCN /                                                     
     1 'BACK','GROU','ND S','TRAT','O   ',                              
     2 'MODE','RATE',' VOL','CANI','C   ',                              
     3 'HIGH','    ',' VOL','CANI','C   ',                              
     4 'HIGH','    ',' VOL','CANI','C   ',                              
     5 'MODE','RATE',' VOL','CANI','C   ',                              
     6 'MODE','RATE',' VOL','CANI','C   ',                              
     7 'HIGH','    ',' VOL','CANI','C   ',                              
     8 'EXTR','EME ',' VOL','CANI','C   '/                              
      DATA HMET/                                                        
     1 'NORM','AL  ','    ','    ','    ',                              
     2 'TRAN','SITI','ON  ','    ','    '/                              
      DATA HMODEL /                                                     
     1 'TROP','ICAL',' MOD','EL  ','    ',                              
     2 'MIDL','ATIT','UDE ','SUMM','ER  ',                              
     3 'MIDL','ATIT','UDE ','WINT','ER  ',                              
     4 'SUBA','RCTI','C   ','SUMM','ER  ',                              
     5 'SUBA','RCTI','C   ','WINT','ER  ',                              
     6 '1976',' U S',' STA','NDAR','D   ',                              
     7 '   ','    ','    ','    ','    ',                               
     8 'MODE','L =0','HORI','ZONT','AL  '/                              
      DATA HTRRAD/                                                      
     1 'TRAN','SMIT','TANC','E   ','    ','    ',                       
     2 'RADI','ANCE','    ','    ','    ','    ',                       
     3 'RADI','ANCE','+SOL','AR S','CATT','ERNG',                       
     4 'TRAN','SMIT','TED ','SOLA','R IR','RAD.'/                       
      END                                                               
      BLOCK DATA WVBNRG                                                 
C>    BLOCK DATA                                                        
C     WAVENUMBER-LOW AND WAVENUMBER-HIGH SPECIFY A BAND REGION          
C     FOR A MOLECULAR ABSORBER.                                         
C     THE UNIT FOR WAVENUMBER IS 1/CM.                                  
C     -999 IS AN INDICATOR TO INDICATE THE END OF ABSORPTION BANDS      
C     FOR ANY SPECIFIC ABSORBER.                                        
      COMMON /WNLOHI/                                                   
     L   IWLH2O(15),IWLO3 ( 6),IWLCO2(11),IWLCO ( 4),IWLCH4( 5),        
     L   IWLN2O(12),IWLO2 ( 7),IWLNH3( 3),IWLNO ( 2),IWLNO2( 4),        
     L   IWLSO2( 5),                                                    
     H   IWHH2O(15),IWHO3 ( 6),IWHCO2(11),IWHCO ( 4),IWHCH4( 5),        
     H   IWHN2O(12),IWHO2 ( 7),IWHNH3( 3),IWHNO ( 2),IWHNO2( 4),        
     H   IWHSO2( 5)                                                     
C                                                                       
      DATA IWLH2O/   0,    350,   1005,   1645,   2535,   3425,   4315, 
     L    6155,   8005,   9620,  11545,  13075,  14865,  16340,   -999/ 
      DATA IWHH2O/ 345,   1000,   1640,   2530,   3420,   4310,   6150, 
     H    8000,   9615,  11540,  13070,  14860,  16045,  17860,   -999/ 
C                                                                       
      DATA IWLO3 /   0,    515,   1630,   2670,   2850,   -999/         
      DATA IWHO3 / 200,   1275,   2295,   2845,   3260,   -999/         
C                                                                       
      DATA IWLCO2/ 425,    840,   1805,   3070,   3760,   4530,   5905, 
     L    7395,   8030,   9340,   -999/                                 
      DATA IWHCO2/ 835,   1440,   2855,   3755,   4065,   5380,   7025, 
     H    7785,   8335,   9670,   -999/                                 
C                                                                       
      DATA IWLCO /   0,   1940,   4040,   -999/                         
      DATA IWHCO / 175,   2285,   4370,   -999/                         
C                                                                       
      DATA IWLCH4/1065,   2345,   4110,   5865,   -999/                 
      DATA IWHCH4/1775,   3230,   4690,   6135,   -999/                 
C                                                                       
      DATA IWLN2O/   0,    490,    865,   1065,   1545,   2090,   2705, 
     L    3245,   4260,   4540,   4910,   -999/                         
      DATA IWHN2O/ 120,    775,    995,   1385,   2040,   2655,   2865, 
     H    3925,   4470,   4785,   5165,   -999/                         
C                                                                       
      DATA IWLO2 /   0,   7650,   9235,  12850,  14300,  15695,   -999/ 
      DATA IWHO2 / 265,   8080,   9490,  13220,  14600,  15955,   -999/ 
C                                                                       
      DATA IWLNH3/   0,    390,   -999/                                 
      DATA IWHNH3/ 385,   2150,   -999/                                 
C                                                                       
      DATA IWLNO /1700,   -999/                                         
      DATA IWHNO /2005,   -999/                                         
C                                                                       
      DATA IWLNO2/ 580,   1515,   2800,   -999/                         
      DATA IWHNO2/ 925,   1695,   2970,   -999/                         
C                                                                       
      DATA IWLSO2/   0,    400,    950,   2415,   -999/                 
      DATA IWHSO2/ 185,    650,   1460,   2580,   -999/                 
      END                                                               
      FUNCTION   AB(WAVL,A,CEN,B,C)                                     
CCC                                                                     
CCC    DESCRIBES THE IMAGINARY PART OF THE DIELECTRIC CONSTANT          
CCC                                                                     
      AB=-A*EXP(-ABS((ALOG10(10000.*WAVL/CEN)/B))**C)                   
      RETURN                                                            
      END                                                               
      SUBROUTINE ABCDTA(IV)                                             
Crea0892     COMMON RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63)     
Crea0892C    COMMON             WPATH(68, 63),TBBY(68)                  
Crea0892 COMMON IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12)
Crea0892      COMMON ABSC(5,47),EXTC(5,47),ASYM(5,47),VX2(47),AWCCON(5) 
      COMMON /UNLABEL/ RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63), 
     +         IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12),
     +         ABSC(5,47),EXTC(5,47),ASYM(5,47),VX2(47),AWCCON(5)       
C                                                                       
      COMMON /ABC/ FACTOR(3),ANH3(2),ACO2(10),ACO(3),                   
     X             ACH4(4),ANO2(3),AN2O(11),AO2(6),AO3(5),              
     X             ASO2(4),AH2O(14),ANO,                                
     X             AANH3(2),BBNH3(2),CCNH3(2),                          
     X             AACO2(10),BBCO2(10),CCCO2(10),                       
     X             AACO(3),BBCO(3),CCCO(3),                             
     X             AACH4(4),BBCH4(4),CCCH4(4),                          
     X             AANO2(3),BBNO2(3),CCNO2(3),                          
     X             AAN2O(11),BBN2O(11),CCN2O(11),                       
     X             AAO2(6),BBO2(6),CCO2(6),                             
     X             AAO3(5),BBO3(5),CCO3(5),                             
     X             AASO2(4),BBSO2(4),CCSO2(4),                          
     X             AAH2O(14),BBH2O(14),CCH2O(14),                       
     X             AANO     ,BBNO     ,CCNO                             
C                                                                       
      COMMON /AABBCC/ AA(11),BB(11),CC(11),IBND(11),A(11),CPS(11)       
      DIMENSION TJO(10)                                                 
      DATA TJO /.9,.8,.7,.6,.5,.4,.3,.2,.1,.02/                         
C                                                                       
C    MOL                                                                
C     1    H2O (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C     2    CO2 (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C     3    O3  (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C     4    N2O (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C     5    CO  (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C     6    CH4 (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C     7    O2  (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C     8    NO  (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C     9    SO2 (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C    10    NO2 (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C    11    NH3 (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C                                                                       
C  ---H2O                                                               
      IMOL = 1                                                          
      IW = -1                                                           
      IF(IV.GE.     0.AND.IV.LE.   345) IW = 17                         
      IF(IV.GE.   350.AND.IV.LE.  1000) IW = 18                         
      IF(IV.GE.  1005.AND.IV.LE.  1640) IW = 19                         
      IF(IV.GE.  1645.AND.IV.LE.  2530) IW = 20                         
      IF(IV.GE.  2535.AND.IV.LE.  3420) IW = 21                         
      IF(IV.GE.  3425.AND.IV.LE.  4310) IW = 22                         
      IF(IV.GE.  4315.AND.IV.LE.  6150) IW = 23                         
      IF(IV.GE.  6155.AND.IV.LE.  8000) IW = 24                         
      IF(IV.GE.  8005.AND.IV.LE.  9615) IW = 25                         
      IF(IV.GE.  9620.AND.IV.LE. 11540) IW = 26                         
      IF(IV.GE. 11545.AND.IV.LE. 13070) IW = 27                         
      IF(IV.GE. 13075.AND.IV.LE. 14860) IW = 28                         
      IF(IV.GE. 14865.AND.IV.LE. 16045) IW = 29                         
      IF(IV.GE. 16340.AND.IV.LE. 17860) IW = 30                         
      IBAND = IW - 16                                                   
      IBND(IMOL) = IW                                                   
      IF(IW .GT.  0) THEN                                               
           A(IMOL)  =   AH2O(IBAND)                                     
           AA(IMOL)  = AAH2O(IBAND)                                     
           BB(IMOL)  = BBH2O(IBAND)                                     
           CC(IMOL)  = CCH2O(IBAND)                                     
      ENDIF                                                             
C  ---O3                                                                
      IMOL = 3                                                          
      IW = -1                                                           
      IF (IV .GE.     0 .AND. IV .LE.   200)  IW = 31                   
      IF (IV .GE.   515 .AND. IV .LE.  1275)  IW = 32                   
      IF (IV .GE.  1630 .AND. IV .LE.  2295)  IW = 33                   
      IF (IV .GE.  2670 .AND. IV .LE.  2845)  IW = 34                   
      IF (IV .GE.  2850 .AND. IV .LE.  3260)  IW = 35                   
      IBAND      = IW - 30                                              
      IBND(IMOL) = IW                                                   
      IF(IW .GT.  0) THEN                                               
           A(IMOL)  =  AO3(IBAND)                                       
           AA(IMOL) = AAO3(IBAND)                                       
           BB(IMOL) = BBO3(IBAND)                                       
           CC(IMOL) = CCO3(IBAND)                                       
      ENDIF                                                             
C  ---CO2                                                               
      IMOL = 2                                                          
      IW = -1                                                           
      IF (IV .GE.   425 .AND. IV .LE.   835)  IW = 36                   
      IF (IV .GE.   840 .AND. IV .LE.  1440)  IW = 37                   
      IF (IV .GE.  1805 .AND. IV .LE.  2855)  IW = 38                   
      IF (IV .GE.  3070 .AND. IV .LE.  3755)  IW = 39                   
      IF (IV .GE.  3760 .AND. IV .LE.  4065)  IW = 40                   
      IF (IV .GE.  4530 .AND. IV .LE.  5380)  IW = 41                   
      IF (IV .GE.  5905 .AND. IV .LE.  7025)  IW = 42                   
      IF((IV .GE.  7395 .AND. IV .LE.  7785) .OR.                       
     *   (IV .GE.  8030 .AND. IV .LE.  8335) .OR.                       
     *   (IV .GE.  9340 .AND. IV .LE.  9670)) IW = 43                   
      IBAND = IW - 35                                                   
      IBND(IMOL) = IW                                                   
      IF(IW .GT.  0) THEN                                               
           A(IMOL)  =  ACO2(IBAND)                                      
           AA(IMOL) = AACO2(IBAND)                                      
           BB(IMOL) = BBCO2(IBAND)                                      
           CC(IMOL) = CCCO2(IBAND)                                      
      ENDIF                                                             
C  ---CO                                                                
      IMOL = 5                                                          
      IW = -1                                                           
      IF (IV .GE.     0 .AND. IV .LE.   175) IW = 44                    
      IF((IV .GE.  1940 .AND. IV .LE.  2285) .OR.                       
     *   (IV .GE.  4040 .AND. IV .LE.  4370)) IW = 45                   
      IBAND = IW - 43                                                   
      IBND(IMOL) = IW                                                   
      IF(IW .GT.  0) THEN                                               
           A(IMOL)  =  ACO(IBAND)                                       
           AA(IMOL) = AACO(IBAND)                                       
           BB(IMOL) = BBCO(IBAND)                                       
           CC(IMOL) = CCCO(IBAND)                                       
      ENDIF                                                             
C  ---CH4                                                               
      IMOL = 6                                                          
      IW = -1                                                           
      IF((IV .GE.  1065 .AND. IV .LE.  1775) .OR.                       
     *   (IV .GE.  2345 .AND. IV .LE.  3230) .OR.                       
     *   (IV .GE.  4110 .AND. IV .LE.  4690) .OR.                       
     *   (IV .GE.  5865 .AND. IV .LE.  6135))IW = 46                    
      IBAND = IW - 45                                                   
      IBND(IMOL) = IW                                                   
      IF(IW .GT.  0) THEN                                               
           A(IMOL)  =  ACH4(IBAND)                                      
           AA(IMOL) = AACH4(IBAND)                                      
           BB(IMOL) = BBCH4(IBAND)                                      
           CC(IMOL) = CCCH4(IBAND)                                      
      ENDIF                                                             
C  ---N2O                                                               
      IMOL = 4                                                          
      IW = -1                                                           
      IF (IV .GE.     0 .AND. IV .LE.   120)  IW = 47                   
      IF((IV .GE.   490 .AND. IV .LE.   775) .OR.                       
     *   (IV .GE.   865 .AND. IV .LE.   995) .OR.                       
     *   (IV .GE.  1065 .AND. IV .LE.  1385) .OR.                       
     *   (IV .GE.  1545 .AND. IV .LE.  2040) .OR.                       
     *   (IV .GE.  2090 .AND. IV .LE.  2655)) IW = 48                   
      IF((IV .GE.  2705 .AND. IV .LE.  2865) .OR.                       
     *   (IV .GE.  3245 .AND. IV .LE.  3925) .OR.                       
     *   (IV .GE.  4260 .AND. IV .LE.  4470) .OR.                       
     *   (IV .GE.  4540 .AND. IV .LE.  4785) .OR.                       
     *   (IV .GE.  4910 .AND. IV .LE.  5165)) IW = 49                   
      IBAND = IW - 46                                                   
      IBND(IMOL) = IW                                                   
      IF(IW .GT.  0) THEN                                               
           A(IMOL)  =  AN2O(IBAND)                                      
           AA(IMOL) = AAN2O(IBAND)                                      
           BB(IMOL) = BBN2O(IBAND)                                      
           CC(IMOL) = CCN2O(IBAND)                                      
      ENDIF                                                             
C  ---O2                                                                
      IMOL = 7                                                          
      IW = -1                                                           
      IF (IV .GE.     0 .AND. IV .LE.   265)  IW = 50                   
      IF((IV .GE.  7650 .AND. IV .LE.  8080) .OR.                       
     *   (IV .GE.  9235 .AND. IV .LE.  9490) .OR.                       
     *   (IV .GE. 12850 .AND. IV .LE. 13220) .OR.                       
     *   (IV .GE. 14300 .AND. IV .LE. 14600) .OR.                       
     *   (IV .GE. 15695 .AND. IV .LE. 15955)) IW = 51                   
       IF(IV .GE. 49600 .AND. IV. LE. 52710)  IW = 51                   
      IBAND = IW - 49                                                   
      IBND(IMOL) = IW                                                   
      IF(IW .GT.  0) THEN                                               
           A(IMOL)  =  AO2(IBAND)                                       
           IF(IV .GE. 49600 .AND. IV. LE. 52710)  A(IMOL)  = .4704      
           AA(IMOL) = AAO2(IBAND)                                       
           BB(IMOL) = BBO2(IBAND)                                       
           CC(IMOL) = CCO2(IBAND)                                       
      ENDIF                                                             
C  ---NH3                                                               
      IMOL = 11                                                         
      IW = -1                                                           
      IF (IV .GE.     0 .AND. IV .LE.   385)  IW = 52                   
      IF (IV .GE.   390 .AND. IV .LE.  2150)  IW = 53                   
      IBAND = IW - 51                                                   
      IBND(IMOL) = IW                                                   
      IF(IW .GT.  0) THEN                                               
           A(IMOL)  =  ANH3(IBAND)                                      
           AA(IMOL) = AANH3(IBAND)                                      
           BB(IMOL) = BBNH3(IBAND)                                      
           CC(IMOL) = CCNH3(IBAND)                                      
      ENDIF                                                             
C  ---NO                                                                
      IMOL = 8                                                          
      IW = -1                                                           
      IF (IV .GE.  1700 .AND. IV .LE.  2005) IW  = 54                   
      IBAND = IW - 53                                                   
      IBND(IMOL) = IW                                                   
      IF(IW .GT.  0) THEN                                               
           A(IMOL)  =  ANO                                              
           AA(IMOL) = AANO                                              
           BB(IMOL) = BBNO                                              
           CC(IMOL) = CCNO                                              
      ENDIF                                                             
C  ---NO2                                                               
      IW = -1                                                           
      IMOL = 10                                                         
      IF((IV .GE.   580 .AND. IV .LE.   925) .OR.                       
     *   (IV .GE.  1515 .AND. IV .LE.  1695) .OR.                       
     *   (IV .GE.  2800 .AND. IV .LE.  2970)) IW = 55                   
      IBAND = IW - 54                                                   
      IBND(IMOL) = IW                                                   
      IF(IW .GT.  0) THEN                                               
           A(IMOL)  =  ANO2(IBAND)                                      
           AA(IMOL) = AANO2(IBAND)                                      
           BB(IMOL) = BBNO2(IBAND)                                      
           CC(IMOL) = CCNO2(IBAND)                                      
      ENDIF                                                             
C  ---SO2                                                               
      IMOL = 9                                                          
      IW = -1                                                           
      IF (IV .GE.     0 .AND. IV .LE.   185)  IW = 56                   
      IF((IV .GE.   400 .AND. IV .LE.   650) .OR.                       
     *   (IV .GE.   950 .AND. IV .LE.  1460) .OR.                       
     *   (IV .GE.  2415 .AND. IV .LE.  2580)) IW = 57                   
      IBAND = IW - 55                                                   
      IBND(IMOL) = IW                                                   
      IF(IW .GT.  0) THEN                                               
           A(IMOL)  =  ASO2(IBAND)                                      
           AA(IMOL) = AASO2(IBAND)                                      
           BB(IMOL) = BBSO2(IBAND)                                      
           CC(IMOL) = CCSO2(IBAND)                                      
      ENDIF                                                             
      RETURN                                                            
      END                                                               
      FUNCTION   ABSLIM(TK,AWLWC)                                       
CCC                                                                     
CCC    FOR CLOUD OR AEROSOL ATTENUATION AS FREQ APPROACHES ZERO         
CCC    MODIFIED DEBYE EQUATIONS FROM RAY (1972) APPL. OPTICS VOL 11     
CCC                                                                     
CCC    ANO= 8.0*10**(-2)  (CM-4)                                        
CCC    ALM= 41.*RR**(-0.21)  (CM-1)  RR IN (MM/HR)                      
CCC                                                                     
      DATA PI/3.14159265/                                               
CCC   ANO=0.08                                                          
CCC   ALM=41./RR**0.21                                                  
      TC=TK-273.15                                                      
CCC                                                                     
      EFIN=5.27137+.0216474*TC-.00131198*TC*TC                          
      ES=78.54*(1.-4.579E-03*(TC-25.)+1.19E-05*                         
     1 (TC-25.)**2-2.8E-08*(TC-25.)**3)                                 
      SLAMBD=3.3836E-04*EXP(2513.98/TK)                                 
CCC                                                                     
CCC   VOL=PI*ANO*ALM**(-4)                                              
      ESMIE2=(ES-EFIN)/(ES+2.0)**2                                      
CCC                                                                     
CCC    DIVIDE VOLUME EQUIVALENT LIQUID BY 10 FOR UNITS CONVERSION       
CCC                                                                     
      EQLWC=AWLWC/10.0                                                  
CCC                                                                     
      ABSLIM=0.6951*TK*36.0*PI*EQLWC*SLAMBD*ESMIE2                      
CCC                                                                     
      RETURN                                                            
      END                                                               
      SUBROUTINE AEREXT (V)                                             
C                                                                       
C     INTERPOLATES AEROSOL EXTINCTION, ABSORPTION, AND ASYMMETRY        
C     COEFFICIENTS FOR THE WAVENUMBER, V.                               
C                                                                       
C     MODIFIED FOR ASYMMETRY  - JAN 1986 (A.E.R. INC.)                  
C                                                                       
      COMMON /CARD1/ MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB  
     1  ,MODTRN                                                         
      LOGICAL MODTRN                                                    
      COMMON /CARD2/ IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,VIS,WSS,WHH,   
     1    RAINRT                                                        
      COMMON /CARD3/ H1,H2,ANGLE,RANGE,BETA,RE,LEN                      
C     COMMON /CARD4/ V1,V2,DV                                           
      COMMON /CNTRL/ KMAX,M,IKMAX,NL,ML,IKLO,ISSGEO,IMULT               
Crea0892      COMMON RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63)    
Crea0892C     COMMON             WPATH(68, 63),TBBY(68)                 
Crea0892 COMMON IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12)
Crea0892      COMMON ABSC(5,47),EXTC(5,47),ASYC(5,47),VX2(47),AWCCON(5) 
      COMMON /UNLABEL/ RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63), 
     +        IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12), 
     +        ABSC(5,47),EXTC(5,47),ASYC(5,47),VX2(47),AWCCON(5)        
      COMMON/MODEL/ ZMDL(34),PM(34),TM(34),RFNDX(34),DENSTY(63,34),     
     1 CLDAMT(34),RRAMT(34),EQLWC(34),HAZEC(34)                         
      COMMON /AER/ EXTV(5),ABSV(5),ASYV(5)                              
      COMMON /AERTM/TAER(5)                                             
C                                                                       
      DO 5 I=1,5                                                        
      EXTV(I)=0.                                                        
      ABSV(I)=0.                                                        
      ASYV(I)=0.                                                        
    5 CONTINUE                                                          
      IF(V.LE.1.0E-5) GO TO 50                                          
      IF(V.LE.33.333) GO TO 30                                          
CCC                                                                     
CCC   COMPUTE INFRARED ATTENUATION COEFFICIENT                          
CCC                                                                     
      IF(V.LE.50.0) THEN                                                
           DO 2 MR=1,5                                                  
           EXTC(MR,47)=GAMFOG(MR,33.333,TAER(MR),AWCCON(MR))            
           ABSC(MR,47)=EXTC(MR,47)                                      
           ASYC(MR,47)= 0.                                              
2          CONTINUE                                                     
      END IF                                                            
CC    IF (IHAZE.EQ.0) RETURN                                            
      V0=V                                                              
      ALAM=1.0E+4/V0                                                    
      DO 10 N=2,47                                                      
      XD=ALAM-VX2(N)                                                    
      IF (XD) 15,10,10                                                  
   10 CONTINUE                                                          
      N=47                                                              
   15 VXD=VX2(N)-VX2(N-1)                                               
      DO 20 I=1,5                                                       
      EXTV(I)=(EXTC(I,N)-EXTC(I,N-1))*XD/VXD+EXTC(I,N)                  
      ABSV(I)=(ABSC(I,N)-ABSC(I,N-1))*XD/VXD+ABSC(I,N)                  
      ASYV(I)=(ASYC(I,N)-ASYC(I,N-1))*XD/VXD+ASYC(I,N)                  
   20 CONTINUE                                                          
      RETURN                                                            
CCC                                                                     
30    CONTINUE                                                          
CCC    COMPUTE MICROWAVE ATTENUATION COEFFICIENTS                       
CCC                                                                     
      DO 40 I=1,5                                                       
      EXTV(I)=GAMFOG( I,V,TAER(I),AWCCON(I))                            
      ABSV(I)=EXTV(I)                                                   
      ASYV(I)=0.                                                        
40    CONTINUE                                                          
      RETURN                                                            
CCC                                                                     
C     V LE 1.0E-5                                                       
50    CONTINUE                                                          
CCC                                                                     
CCC   EQL=EQLWC(IL)                                                     
      DO 60 I=1,5                                                       
      EXTV(I)=0.0                                                       
      ABSV(I)=0.                                                        
      ASYV(I)=0.                                                        
C     WRITE (6,300) I,AWCCON(I)                                         
300   FORMAT(5X,'I,AWCCON=',I5,5X,1PE12.5)                              
60    CONTINUE                                                          
100   FORMAT(5X,'IL,IK,EQL,EXTV=',2I5,1P5E12.5)                         
      RETURN                                                            
      END                                                               
      SUBROUTINE AERNSM(JPRT,GNDALT,ZMDLX,PX,TXX,WMOLX,JCHARX,AHAZEX,   
     +                  EQLWCZX,RRATZX,IHA1X,ICLD1X,IVUL1X,ISEA1X,      
     +                  ICHRX,H2OFAC,CO2FAC,O3FAC,O2FAC,CH4FAC,SO2FAC)  
Crea0892      SUBROUTINE AERNSM(JPRT,  GNDALT)                          
C********************************************************************** 
C     DEFINES ALTITUDE DEPENDENT VARIABLES Z,P,T,WH,WO AND HAZE         
C     CLD RAIN  CLDTYPE                                                 
C     IT ALSO DEFINES ALTITUDE DEPENDENT VARIABLES WAIR,WCO2,WCO,       
C     WCH4,WN2O,WO2,WNH3,WNO,WNO2, AND WSO2                             
C     LOADS HAZE INTO APPROPRATE LOCATION                               
C********************************************************************** 
Crea0892      COMMON RELHUM(34),WHNO3(34),ICH(4),VH(17),TX(63),W(63)    
Crea0892C     COMMON             WPATH(68, 63),TBBY(68)                 
Crea0892 COMMON IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12)
Crea0892      COMMON ABSC(5,47),EXTC(5,47),ASYM(5,47),VX2(47),AWCCON(5) 
      COMMON /UNLABEL/ RELHUM(34),WHNO3(34),ICH(4),VH(17),TX(63),W(63), 
     +        IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12), 
     +        ABSC(5,47),EXTC(5,47),ASYM(5,47),VX2(47),AWCCON(5)        
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1                                 
      COMMON /CARD1/ MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB  
     1  ,MODTRN                                                         
      LOGICAL MODTRN                                                    
      COMMON /CARD1A/ M4,M5,M6,MDEF,IRD1,IRD2                           
      COMMON /CARD1B/ JUNIT(15),WMOL(12),WAIR1,JLOW                     
      COMMON /CARD2/ IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,VIS,WSS,WHH,   
     1    RAINRT                                                        
      COMMON /CARD2A/ CTHIK,CALT,CEXT                                   
      COMMON /CARD2D/ IREG(4),ALTB(4),IREGC(4)                          
      COMMON /CARD3/ H1,H2,ANGLE,RANGE,BETA,RE,LEN                      
C     COMMON /CARD4/ V1,V2,DV                                           
      COMMON /CNTRL/ KMAX,M,IKMAX,NL,ML,IKLO,ISSGEO,IMULT               
      COMMON /MART/ RHH                                                 
      COMMON /MDATA/  Z(50),P(50),T(50),WH(50),WCO2(50),WO(50),         
     X WN2O(50),WCO(50),WCH4(50),WO2(50),                               
     X CLD(50,7),RR(50,7)                                               
      COMMON /MDATA1/ WNO(50),WSO2(50),WNO2(50),WNH3(50),WAIR(50)       
      COMMON /TRAC/ ANO(50),ASO2(50),ANO2(50),ANH3(50),ANO3(50),OH(50), 
     X HF(50),HCL(50),HBR(50),HI(50),CLO(50),OCS(50),H2CO(50),          
     X HOCL(50),AN2(50),HCN(50),CH3CL(50),H2O2(50),C2H2(50),            
     X C2H6(50),PH3(50)                                                 
      COMMON/MODEL/ ZMDL(34),PM(34),TM(34),RFNDX(34),DENSTY(63,34),     
     1 CLDAMT(34),RRAMT(34),EQLWC(34),HAZEC(34)                         
      COMMON /ZVSALY/ ZVSA(10),RHVSA(10),AHVSA(10),IHVSA(10)            
      COMMON /MDLZ/HMDLZ(8)                                             
      CHARACTER*4  HZ         ,SEASN     ,VULCN     ,BLANK,             
     X            HMET        ,HMODEL     ,HTRRAD                       
      COMMON /TITL/ HZ(5,16),SEASN(5,2),VULCN(5,8),BLANK,               
     X HMET(5,2),HMODEL(5,8),HTRRAD(6,4)                                
      COMMON /VSBD/ VSB(10)                                             
      CHARACTER*4  AHOL1,AHOL2   ,AHOL3   ,          AHLVSA   ,AHUS     
      DIMENSION AHOL1(5),AHOL2(5),AHOL3(5),          AHLVSA(5),AHUS(5)  
      DIMENSION  ITY1(34),IH1(34),IS1(34),IVL1(34),ZGN(34)              
      CHARACTER*4  AHAHOL   ,HHOL                                       
      DIMENSION AHAHOL(5,13),HHOL(5)                                    
      DIMENSION AMWT(35),CLDTOP(10),AHAST(34)                           
      CHARACTER*1 JCHAR,BL                                              
      DIMENSION  JCHAR(15)                                              
      REAL ZMDLX(34),PX(34),TXX(34),WMOLX(12,34),AHAZEX(34),EQLWCZX(34) 
      REAL RRATZX(34)                                                   
      INTEGER IHA1X(34),ICLD1X(34),IVUL1X(34),ISEA1X(34),ICHRX(34)      
      CHARACTER*1 JCHARX(14,34)                                         
      DATA AHLVSA/'VSA ','DEFI','NED ','    ','    '/                   
      DATA  AHUS /'USER',' DEF','INED','    ','    '/                   
      DATA AHAHOL/                                                      
     1 'CUMU','LUS ','    ','    ','    ',                              
     2 'ALTO','STRA','TUS ','    ','    ',                              
     3 'STRA','TUS ','    ','    ','    ',                              
     4 'STRA','TUS ','STRA','TO C','UM  ',                              
     5 'NIMB','OSTR','ATUS','    ','    ',                              
     6 'DRIZ','ZLE ','2.0 ','MM/H','R   ',                              
     7 'LT R','AIN ','5.0 ','MM/H','R   ',                              
     8 'MOD ','RAIN',' 12.','5 MM','/HR ',                              
     9 'HEAV','Y RA','IN 2','5 MM','/HR ',                              
     A 'EXTR','EME ','RAIN',' 75M','M/HR',                              
     B 'USER',' ATM','OSPH','ERE ','    ',                              
     C 'USER',' RAI','N NO',' CLO','UD  ',                              
     D 'CIRR','US C','LOUD','    ','    ' /                             
      DATA AVOGAD/6.022045E+23/,ALOSMT/2.68675E+19/,                    
     1    GASCON/8.31441E+7/,PLANK/6.626176E-27/,BOLTZ/1.380662E-16/,   
     2    CLIGHT/2.99792458E10/                                         
      DATA AIRMWT/28.964/,AMWT/18.015,44.010,47.998,44.01,28.011,       
     1    16.043,31.999,30.01,64.06,46.01,17.03,63.01,17.00,20.01,      
     2    36.46,80.92,127.91,51.45,60.08,30.03,52.46,28.014,            
     3    27.03, 50.49, 34.01, 26.03, 30.07, 34.00, 7*0./               
      DATA CLDTOP / 3.,3.,1.,2.,.66,1.,.66,.66,3.,3./                   
C                                                                       
C     F(A) IS SATURATED WATER WAPOR DENSITY AT TEMP T,A=TZERO/T         
C                                                                       
      F(A)=EXP(18.9766-14.9595*A-2.43882*A*A)*A                         
C                                                                       
C                                                                       
C     ZMDL COMMON /MODEL/ FINAL ALTITUDE FOR LOWTRAN                    
C     Z   COMMON  /MDATA/ ALTITUDE OF THE PRESSURES,TEMP IN MDATA       
C     ZK  ALTITUDE FOR CLOUD                                            
C     ZSC ALTITUDE FOR AEROSOLS  GNDALT                                 
C                                                                       
C                                                                       
      IREGC(1) = 0                                                      
      IREGC(2) = 0                                                      
      IREGC(3) = 0                                                      
      IREGC(4) = 0                                                      
      ICONV =1                                                          
      IRD0 = 1                                                          
      ICLDL = ICLD                                                      
      IF((MODEL .EQ. 0.) . OR. (MODEL .EQ. 7)) THEN                     
            IF(IM. NE. 1) RETURN                                        
      ENDIF                                                             
      IF((MODEL .GT. 0.) .AND. (MODEL .LT. 7)) IRD0 = 0                 
      IF((IRD0  .EQ. 1)  .AND. (IVSA.EQ.1)   ) THEN                     
           IRD0 = 0                                                     
           IRD1 = 0                                                     
           IRD2 = 0                                                     
           ICONV =0                                                     
           ML = ML + 10 - JLOW                                          
           IF(ML.GT.34)WRITE(IPR,910)                                   
           IF(ML.GT.34)ML=34                                            
           ZVSA(10)=ZVSA(9)+0.01                                        
           RHVSA(10)=0.                                                 
           AHVSA(10)=0.                                                 
           IHVSA(10)=0                                                  
           IF(MODEL.EQ.0)WRITE (IPR,900)                                
900   FORMAT('   ERROR MODEL EQ 0 AND ARMY MODEL CANNOT MIX')           
           IF(MODEL.EQ.0)STOP                                           
910   FORMAT('  ERROR ML GT 24 AND ARMY MODEL TOP LAYER TRUNCATED')     
      ENDIF                                                             
      ICL=0                                                             
      IDSR=0                                                            
      IF(ICLD .EQ. 18 .OR. ICLD. EQ. 19)  THEN                          
           CALL CIRR18                                                  
           CLDD =  0.1 * CTHIK                                          
           CLD0 = CALT - 0.5*CLDD                                       
           IF(CLD0 .LE. 0.) CLD0 = 0.                                   
           CLD1 = CLD0 + CLDD                                           
           CLD2 = CLD1 + CTHIK - CLDD                                   
C          CLD3 = CLD2 + CLDD                                           
C                                                                       
C          CLD1 1ST Z OF CIRRUS                                         
C          CLD2 LST Z OF CIRRUS                                         
C                                                                       
      ENDIF                                                             
      CALL FLAYZ(ML,MODEL,ICLD,ZMDL,GNDALT,IVSA)                        
      JPRT=1                                                            
      IF(MODEL.EQ.0  .OR. MODEL.EQ.7) JPRT=0                            
      IF(IVSA.EQ.1) JPRT=0                                              
      IF(ICLD.GE.1 .AND.ICLD.LT.20) JPRT=0                              
      IF(RAINRT.GT.0.) JPRT=0                                           
      IF(GNDALT.GT.0.) JPRT=0                                           
C                                                                       
      DO 5 I=1,ML                                                       
      HAZEC(I)=0.0                                                      
5     CONTINUE                                                          
      DO 6 II = 1,4                                                     
6     ALTB(II) = 0.                                                     
      T0=273.15                                                         
      IC1=1                                                             
      N=7                                                               
      IF(IVULCN.LE.0) IVULCN=1                                          
      IF(ISEASN.LE.0) ISEASN=1                                          
      IF(JPRT.EQ.0) THEN                                                
                  WRITE(IPR,925) MODEL,ICLD                             
      IF(MODEL .EQ.7)WRITE(IPR,94)                                      
94    FORMAT(/,10X,' MODEL 0 / 7 USER INPUT DATA ',//)                  
C                                                                       
      ENDIF                                                             
C                                                                       
C                                                                       
      DO 100 K=1,ML                                                     
C                                                                       
C    LOOP OVER LAYERS                                                   
C                                                                       
      RH = 0.                                                           
      WH(K)  =0.                                                        
      WO(K)  =0.                                                        
C                                                                       
      IHA1=0                                                            
      ICLD1=0                                                           
      ISEA1=0                                                           
      IVUL1=0                                                           
      VIS1=0.                                                           
      AHAZE=0.                                                          
      EQLWCZ=0.                                                         
      RRATZ=0.                                                          
      ICHR = 0                                                          
C     NEW                                                               
C                                                                       
      WAIR(K) = 0                                                       
      WCO2(K) = 0                                                       
      WCO(K)  = 0                                                       
      WCH4(K) = 0                                                       
      WN2O(K) = 0                                                       
      WO2(K)  = 0                                                       
      WNH3(K) = 0                                                       
      WNO (K) = 0                                                       
      WNO2(K) = 0                                                       
      WSO2(K) = 0                                                       
      WHNO3(K)= 0                                                       
      DO 10 KM = 1,15                                                   
      JCHAR(KM) = ' '                                                   
      IF(KM. GT. 12) GO TO 10                                           
      WMOL(KM) = 0.                                                     
10    CONTINUE                                                          
C                                                                       
C                                                                       
C        PARAMETERS - JCHAR = INPUT KEY (SEE BELOW)                     
C                                                                       
C                                                                       
C     ***  ROUTINE ALSO ACCEPTS VARIABLE UNITS ON PRESS AND TEMP        
C                                                                       
C          SEE INPUT KEY BELOW                                          
C                                                                       
C                                                                       
C                                                                       
C     FOR MOLECULAR SPECIES ONLY                                        
C                                                                       
C       JCHAR   JUNIT                                                   
C                                                                       
C     " ",A      10    VOLUME MIXING RATIO (PPMV)                       
C         B      11    NUMBER DENSITY (CM-3)                            
C         C      12    MASS MIXING RATIO (GM(K)/KG(AIR))                
C         D      13    MASS DENSITY (GM M-3)                            
C         E      14    PARTIAL PRESSURE (MB)                            
C         F      15    DEW POINT TEMP (TD IN T(K)) - H2O ONLY           
C         G      16     "    "     "  (TD IN T(C)) - H2O ONLY           
C         H      17    RELATIVE HUMIDITY (RH IN PERCENT) - H2O ONLY     
C         I      18    AVAILABLE FOR USER DEFINITION                    
C        1-6    1-6    DEFAULT TO SPECIFIED MODEL ATMOSPHERE            
C                                                                       
C     ****************************************************************  
C     ****************************************************************  
C                                                                       
C     ***** OTHER 'JCHAR' SPECIFICATIONS -                              
C                                                                       
C       JCHAR   JUNIT                                                   
C                                                                       
C      " ",A     10    PRESSURE IN (MB)                                 
C          B     11       "     "  (ATM)                                
C          C     12       "     "  (TORR)                               
C         1-6   1-6    DEFAULT TO SPECIFIED MODEL ATMOSPHERE            
C                                                                       
C      " ",A     10    AMBIENT TEMPERATURE IN DEG(K)                    
C          B     11       "         "       "  " (C)                    
C          C     12       "         "       "  " (F)                    
C         1-6   1-6    DEFAULT TO SPECIFIED MODEL ATMOSPHERE            
C                                                                       
C     ***** DEFINITION OF "DEFAULT" CHOICES FOR PROFILE SELECTION ***** 
C                                                                       
C      FOR THE USER WHO WISHES TO ENTER ONLY SELECTED ORIGINAL          
C      VERTICAL PROFILES AND WANTS STANDARD ATMOSPHERE SPECIFICATIONS   
C      FOR THE OTHERS, THE FOLLOWING OPTION IS AVAILABLE                
C                                                                       
C     *** JCHAR(P,T OR K) MUST = 1-6 (AS ABOVE)                         
C                                                                       
C      FOR MOLECULES 8-35, ONLY US STD PROFILES ARE AVIALABLE           
C      THEREFORE, WHEN  'JCHAR(K) = 1-5', JCHAR(K) WILL BE RESET TO 6   
C                                                                       
C                                                                       
      IF(IRD0 .EQ. 1) THEN                                              
Crea0892          READ(IRD,80)ZMDL(K),P(K),T(K),WMOL(1),WMOL(2),WMOL(3),
Crea0892     X     (JCHAR(KM),KM=1,14)                                  
Crea089280         FORMAT ( F10.3,5E10.3,15A1)                          
          ZMDL(K) = ZMDLX(K)                                            
          P(K) = PX(K)                                                  
          T(K) = TXX(K)                                                 
          WMOL(1) = WMOLX(1,K)                                          
          WMOL(2) = WMOLX(2,K)                                          
          WMOL(3) = WMOLX(3,K)                                          
          DO 80 KM=1,14                                                 
              JCHAR(KM) = JCHARX(KM,K)                                  
   80     CONTINUE                                                      
          WRITE(IPR,81)ZMDL(K),P(K),T(K),WMOL(1),WMOL(2),WMOL(3),       
     X     (JCHAR(KM),KM=1,14)                                          
81         FORMAT ( F10.3,1P5E10.3,10X,15A1)                            
      ENDIF                                                             
      IF(IRD1 .EQ. 1) THEN                                              
Crea0892           READ(IRD,83)(WMOL(KM),KM=4,12)                       
Crea089283         FORMAT((8E10.3))                                     
           DO 83 KM=4,12                                                
               WMOL(KM) = WMOLX(KM,K)                                   
   83      CONTINUE                                                     
           WRITE(IPR,84)(WMOL(KM),KM=4,12)                              
84         FORMAT((1P8E10.3))                                           
      ENDIF                                                             
C                                                                       
C                                                                       
C     AHAZE =  AEROSOL VISIBLE EXTINCTION COFF (KM-1)                   
C     AT A WAVELENGTH OF 0.55 MICROMETERS                               
C                                                                       
C     EQLWCZ=LIQUID WATER CONTENT (PPMV) AT ALT Z                       
C            FOR AEROSOL, CLOUD OR FOG MODELS                           
C                                                                       
C     RRATZ=RAIN RATE (MM/HR) AT ALT Z                                  
C                                                                       
C     IHA1 AEROSOL MODEL USED FOR SPECTRAL DEPENDENCE OF EXTINCTION     
C                                                                       
C     IVUL1 STRATOSPHERIC AERSOL MODEL USED FOR SPECTRAL DEPENDENCE     
C     OF EXT AT Z                                                       
C                                                                       
C     ICLD1 CLOUD MODEL USED FOR SPECTRAL DEPENDENCE OF EXT AT Z        
C                                                                       
C     ONLY ONE OF IHA1,ICLD1  OR IVUL1 IS ALLOWED                       
C     IHA1 NE 0 OTHERS IGNORED                                          
C     IHA1 EQ 0 AND ICLD1 NE 0 USE ICLD1                                
C                                                                       
C     IF AHAZE AND EQLWCZ ARE BOUTH ZERO                                
C        DEFAULT PROFILE ARE LOADED FROM IHA1,ICLD1,IVUL1               
C     ISEA1 = AERSOL SEASON CONTROL FOR ALTITUDE Z                      
C                                                                       
C     ICHR  CHANGE AERSOL PROFILE REGION FOR IHA1 = 7                   
C                                                                       
      IF(IRD2 .EQ. 1) THEN                                              
Crea0892   READ(IRD,82)    AHAZE,EQLWCZ,RRATZ,IHA1,ICLD1,IVUL1,ISEA1,   
Crea0892     X ICHR                                                     
           AHAZE = AHAZEX(K)                                            
           EQLWCZ = EQLWCZX(K)                                          
           RRATZ = RRATZX(K)                                            
           IHA1 = IHA1X(K)                                              
           ICLD1 = ICLD1X(K)                                            
           IVUL1 = IVUL1X(K)                                            
           ISEA1 = ISEA1X(K)                                            
           ICHR = ICHRX(K)                                              
           WRITE(IPR,82)    AHAZE,EQLWCZ,RRATZ,IHA1,ICLD1,IVUL1,ISEA1,  
     X ICHR                                                             
82         FORMAT(10X,3F10.3,5I5)                                       
      ELSE                                                              
           RRATZ = RAINRT                                               
           IF(ZMDL(K) . GT. 6.) RRATZ = 0                               
      ENDIF                                                             
      ICLDS = ICLD1                                                     
      IF( ICHR.EQ. 1) THEN                                              
         IF(IHA1. EQ. 0) THEN                                           
             IF(ICLD1. NE. 11) ICHR = 0                                 
         ELSE                                                           
             IF(IHA1 . NE.  7) ICHR = 0                                 
         ENDIF                                                          
      ENDIF                                                             
      IF(MODEL .EQ. 0) THEN                                             
           HMDLZ(1) = ZMDL(K)                                           
           HMDLZ(2) =    P(K)                                           
           HMDLZ(3) =    T(K)                                           
           HMDLZ(4) = WMOL(1)                                           
           HMDLZ(5) = WMOL(2)                                           
           HMDLZ(6) = WMOL(3)                                           
           HMDLZ(7) = AHAZE                                             
           HMDLZ(4) = HMDLZ(4)*H2OFAC                                   
           HMDLZ(5) = HMDLZ(5)*CO2FAC                                   
           HMDLZ(6) = HMDLZ(6)*O3FAC                                    
      ENDIF                                                             
      DO 12 KM = 1,15                                                   
12    JUNIT(KM) = JOU(JCHAR(KM))                                        
      IF(IRD0 .EQ. 0) THEN                                              
          JUNIT(1) = M1                                                 
          JUNIT(2) = M1                                                 
          JUNIT(3) = M2                                                 
          JUNIT(4) =  6                                                 
          JUNIT(5) = M3                                                 
          JUNIT(6) = M5                                                 
          JUNIT(7) = M6                                                 
          JUNIT(8) = M4                                                 
          JUNIT(9) =  6                                                 
          JUNIT(10)=  6                                                 
          JUNIT(11)=  6                                                 
          JUNIT(12)=  6                                                 
          JUNIT(13)=  6                                                 
          JUNIT(14)=  6                                                 
          JUNIT(15)=  6                                                 
      ELSE                                                              
          BL = ' '                                                      
          IF((M1   .GT.0).AND.(JCHAR(1).EQ.BL))                         
     X    JUNIT(1) = M1                                                 
          IF((M1   .GT.0).AND.(JCHAR(2).EQ.BL))                         
     X    JUNIT(2) = M1                                                 
          IF((M2   .GT.0).AND.(JCHAR(3).EQ.BL))                         
     X    JUNIT(3) = M2                                                 
          IF((MDEF .GT.0).AND.(JCHAR(4).EQ.BL))                         
     X    JUNIT(4) = 6                                                  
          IF((M3   .GT.0).AND.(JCHAR(5).EQ.BL))                         
     X    JUNIT(5) = M3                                                 
          IF((M5   .GT.0).AND.(JCHAR(6).EQ.BL))                         
     X    JUNIT(6) = M5                                                 
          IF((M6   .GT.0).AND.(JCHAR(7).EQ.BL))                         
     X    JUNIT(7) = M6                                                 
          IF((M4   .GT.0).AND.(JCHAR(8).EQ.BL))                         
     X    JUNIT(8) = M4                                                 
          IF((MDEF .GT.0).AND.(JCHAR(9).EQ.BL))                         
     X    JUNIT(9) = 6                                                  
          IF((MDEF .GT.0).AND.(JCHAR(10).EQ.BL))                        
     X    JUNIT(10)= 6                                                  
          IF((MDEF .GT.0).AND.(JCHAR(11).EQ.BL))                        
     X    JUNIT(11)= 6                                                  
          IF((MDEF .GT.0).AND.(JCHAR(12).EQ.BL))                        
     X    JUNIT(12)= 6                                                  
          IF((MDEF .GT.0).AND.(JCHAR(13).EQ.BL))                        
     X    JUNIT(13)= 6                                                  
          IF((MDEF .GT.0).AND.(JCHAR(14).EQ.BL))                        
     X    JUNIT(14)= 6                                                  
      ENDIF                                                             
      IF(ICONV .EQ. 1) THEN                                             
           CALL CHECK(P(K),JUNIT(1),1)                                  
           CALL CHECK(T(K),JUNIT(2),2)                                  
           CALL DEFALT(ZMDL(K),P(K),T(K))                               
           CALL CONVRT (P(K),T(K) )                                     
            WH(K)    = WMOL(1)                                          
            WCO2(K)  = WMOL(2)                                          
            WO(K)    = WMOL(3)                                          
            WN2O(K)  = WMOL(4)                                          
            WCO(K)   = WMOL(5)                                          
            WCH4(K)  = WMOL(6)                                          
            WO2(K)   = WMOL(7)                                          
            WNO(K)   = WMOL(8)                                          
            WSO2(K)  = WMOL(9)                                          
            WNO2(K)  = WMOL(10)                                         
            WNH3(K)  = WMOL(11)                                         
            WHNO3(K) = WMOL(12)                                         
            WAIR(K)  = WAIR1                                            
            WH(K)    = WH(K)*H2OFAC                                     
            WCO2(K)  = WCO2(K)*CO2FAC                                   
            WO(K)    = WO(K)*O3FAC                                      
            WCH4(K)  = WCH4(K)*CH4FAC                                   
            WO2(K)   = WO2(K)*O2FAC                                     
            WSO2(K)  = WSO2(K)*SO2FAC                                   
      ELSE                                                              
Crea0892           CALL VSANSM(K,AHAZE,IHA1)                            
            CALL VSANSM(K,AHAZE,IHA1,H2OFAC,CO2FAC,O3FAC,CH4FAC,O2FAC,  
     +                  SO2FAC)                                         
           ZMDL(K) = Z(K)                                               
      ENDIF                                                             
C                                                                       
C                                                                       
C     GNDALT NOT ZERO                                                   
C                                                                       
      ZSC=ZMDL(K)                                                       
      IF((GNDALT.GT.0.).AND.(ZMDL(K).LT.6.0)) THEN                      
           ASC=6./(6.-GNDALT)                                           
           CON=-ASC*GNDALT                                              
           ZSC=ASC*ZMDL(K)+CON - 1.0E-04                                
           IF(ZSC.LT.0.)ZSC=0.                                          
      ENDIF                                                             
      ZGN(K)=ZSC                                                        
C                                                                       
C                                                                       
      IF(ICLD1.EQ.0) ICLD1=ICLD                                         
      ICLDL = ICLD1                                                     
      IF(ICLD1.GT.11) ICLD1=0                                           
      IF(IHA1.NE.0) IVUL1=0                                             
      IF(IHA1.NE.0) ICLD1=0                                             
      IF(ICLD1.NE.0) IVUL1=0                                            
      IF((AHAZE.NE.0.).OR.(EQLWCZ.NE.0.)) GO TO 8                       
C      ********        ERRATA SEPT 19                                   
CC    IF(RRATZ.NE.0.) GO TO 8                                           
C      *****           END ERRATA                                       
      IF((IVSA.EQ.1).AND.(ICLD1.EQ.0)) THEN                             
           IF(MODEL.NE.7)CALL LAYVSA(K,RH,AHAZE,IHA1,ZMDL)              
      ELSE                                                              
           CALL LAYCLD(K,EQLWCZ,RRATZ,ICLD1,GNDALT,RAINRT)              
C          ***********************  ERRATA SEPT 19                      
           IF(RAINRT .GT. 0. AND. ZMDL(K) .LT. 6.)RRATZ = RAINRT        
C           *********************      END ERRATA                       
           IF(ICLD1 . LT.  1) GO TO 8                                   
           IF(ICLD1 . GT. 10) GO TO 8                                   
C     ***************  ERRATA JUNE 21 89 NEXT CARD                      
CC         IF(ZMDL(K). GT.CLDTOP(ICLD1) ) THEN                          
           IF(ZMDL(K). GT.CLDTOP(ICLD1)+ GNDALT ) THEN                  
C     ***************  END ERRATA                                       
              RRATZ = 0.                                                
           ENDIF                                                        
      ENDIF                                                             
8     CONTINUE                                                          
      ICLDC = ICLD                                                      
      IF(ICLDS .NE. 0) ICLDC = ICLDS                                    
C                                                                       
      IF(ICLDS. EQ. 18 .OR. ICLDS .EQ. 19) THEN                         
           IF(AHAZE . GT. 0) THEN                                       
                DENSTY(16,K) = AHAZE                                    
                AHAZE    = 0.                                           
                GO TO 46                                                
           ENDIF                                                        
           IF(EQLWCZ .GT. 0) THEN                                       
                IF(ICLDS .EQ. 18) CON = 3.446E-3                        
                IF(ICLDS .EQ. 19) CON = 5.811E-2                        
                DENSTY(16,K) = EQLWCZ/CON                               
                EQLWCZ = 0                                              
                GO TO 46                                                
           ENDIF                                                        
      ENDIF                                                             
      IF(ICLDC .EQ. 18 .OR. ICLDC.EQ. 19) THEN                          
           DENSTY(16,K) = 0.                                            
           IF(ZMDL(K)  .GE.  CLD1 .AND. ZMDL(K) .LE. CLD2)              
     X     DENSTY(16,K) = CEXT                                          
      ENDIF                                                             
46    CLDAMT(K)=EQLWCZ                                                  
      IF(ICLDS .EQ. 0. AND. CLDAMT(K) .EQ. 0.)ICLD1 = 0                 
      RRAMT(K)=RRATZ                                                    
      IF(MODEL  .EQ. 0 .OR. MODEL .EQ. 7) THEN                          
C     DONT CHANGE RH                                                    
      ELSE                                                              
            IF(EQLWCZ.GT.0.0) RH=100.0                                  
            IF(RRATZ .GT.0.0) RH=100.0                                  
      ENDIF                                                             
      AHAST(K)=AHAZE                                                    
C     IHA1  IS IHAZE FOR THIS LAYER                                     
C     ISEA1 IS ISEASN FOR THIS LAYER                                    
C     IVUL1 IS IVULCN FOR THE LAYER                                     
      IF(ISEA1.EQ.0) ISEA1=ISEASN                                       
      ITYAER=IHAZE                                                      
      IF(IHA1.GT.0) ITYAER=IHA1                                         
      IF(IVUL1.GT.0) IVULCN=IVUL1                                       
      IF(IVUL1.LE.0) IVUL1=IVULCN                                       
C                                                                       
      IF(K.EQ.1) GO TO 23                                               
      IF(ICHR .EQ. 1) GO TO 20                                          
      IF(ICLD1.NE.IREGC(IC1))GO TO 19                                   
      IF(IHA1 .EQ. 0 .AND. ICLD1. EQ. 0) THEN                           
           IF(ZSC.GT.2.)ITYAER=6                                        
           IF(ZSC.GT.10.)ITYAER=IVULCN+10                               
           IF(ZSC.GT.30.) ITYAER=19                                     
           IF(ITYAER.EQ.ICH(IC1))GO TO 23                               
      ENDIF                                                             
      IF(ICLD1 .EQ. 0 .AND. IHA1.EQ. 0) GO TO 20                        
      N = 7                                                             
      IF(IC1 .GT. 1) N= IC1 + 10                                        
      IF(IHA1 .EQ. 0) GO TO 23                                          
      IF(IHA1 .NE.ICH(IC1)) GO TO 20                                    
      GO TO 23                                                          
19    IF(ICLD1 .NE. 0) THEN                                             
           IF(ICLD1. EQ. IREGC(1)) THEN                                 
               N = 7                                                    
               ALTB(1) = ZMDL(K)                                        
               GO TO 24                                                 
           ENDIF                                                        
           IF(IC1 .EQ. 1) GO TO 20                                      
           IF(ICLD1. EQ. IREGC(2)) THEN                                 
               N = 12                                                   
               ALTB(2) = ZMDL(K)                                        
               GO TO 24                                                 
           ENDIF                                                        
           IF(IC1 .EQ. 2) GO TO 20                                      
           IF(ICLD1. EQ. IREGC(3)) THEN                                 
               N = 13                                                   
               ALTB(3) = ZMDL(K)                                        
               GO TO 24                                                 
           ENDIF                                                        
      ELSE                                                              
            IF(IHA1 .EQ. 0 .AND. ICLD1. EQ. 0) THEN                     
                 IF(ZSC.GT.2.)ITYAER=6                                  
                 IF(ZSC.GT.10.)ITYAER=IVULCN+10                         
                 IF(ZSC.GT.30.) ITYAER=19                               
            ENDIF                                                       
           IF(ITYAER.EQ.ICH(  1))THEN                                   
               N = 7                                                    
               ALTB(1) = ZMDL(K)                                        
               GO TO 24                                                 
           ENDIF                                                        
           IF(IC1 .EQ. 1) GO TO 20                                      
           IF(ITYAER.EQ.ICH(  2))THEN                                   
               N = 12                                                   
               ALTB(2) = ZMDL(K)                                        
               GO TO 24                                                 
           ENDIF                                                        
           IF(IC1 .EQ. 2) GO TO 20                                      
           IF(ITYAER.EQ.ICH(  3))THEN                                   
               N = 13                                                   
               ALTB(3) = ZMDL(K)                                        
               GO TO 24                                                 
           ENDIF                                                        
      ENDIF                                                             
20    IC1=IC1+1                                                         
C                                                                       
C                                                                       
C                                                                       
      N=IC1+10                                                          
      IF(RH.GT.0.) RHH=RH                                               
      IF(IC1.LE.4) GO TO 23                                             
      IC1=4                                                             
      N=14                                                              
      ITYAER=ICH(IC1)                                                   
23    ICH(IC1)=ITYAER                                                   
      IREGC(IC1) = ICLD1                                                
      ALTB(IC1) = ZMDL(K)                                               
C                                                                       
C     FOR LVSA OR CLD OR RAIN ONLY                                      
C                                                                       
24    IF (RH.GT.  0.0) THEN                                             
            TA=T0/T(K)                                                  
            WH(K)  =F(TA)*0.01*RH                                       
C                                                                       
      ENDIF                                                             
   40 CONTINUE                                                          
      DENSTY(7,K)=0.                                                    
      DENSTY(12,K)=0.                                                   
      DENSTY(13,K)=0.                                                   
      DENSTY(14,K)=0.                                                   
      DENSTY(15,K)=0.                                                   
      TS=273.15/T(K)                                                    
      WTEMP=WH(K)                                                       
      RELHUM(K)=0.                                                      
      IF(WTEMP.LE.0.) GO TO 45                                          
      RELHUM(K) = 100.0*WTEMP/F(TS)                                     
      IF(RELHUM(K).GT.100.)WRITE(IPR,930)RELHUM(K),ZMDL(K)              
      IF( RELHUM(K) .GT. 100.) RELHUM(K)=100.                           
      IF(RELHUM(K).LT.0.)WRITE(IPR,930)RELHUM(K),ZMDL(K)                
930   FORMAT(' ***ERROR RELHUM ' ,E15.4,'  AT ALT  ',F12.3)             
      IF( RELHUM(K) .LT.   0.) RELHUM(K)=0.                             
45    RHH=RELHUM(K)                                                     
      RH=RHH                                                            
      IF (VIS1.LE.0.0) VIS1=VIS                                         
      IF (AHAZE.EQ.0.0) GO TO 47                                        
      DENSTY(N,K)=AHAZE                                                 
      IF(ITYAER.EQ.3) GO TO 47                                          
      IF(ITYAER.EQ.10)GO TO 47                                          
C     AHAZE IS IN LOWTRAN NUMBER DENSTY UNITS                           
      GO TO 50                                                          
47    CONTINUE                                                          
C                                                                       
C     AHAZE NOT INPUT OR NAVY MARITIME MODEL IS CALLED                  
C                                                                       
C     CHECK IF GNDALT NOT ZERO                                          
C                                                                       
      IF((GNDALT.GT.0.).AND.(ZMDL(K).LT.6.0)) THEN                      
           J=IFIX(ZSC+1.0E-6)+1                                         
           FAC=ZSC-FLOAT(J-1)                                           
      ELSE                                                              
      J=IFIX(ZMDL(K)+1.0E-6)+1                                          
      IF (ZMDL(K).GE.25.0) J=(ZMDL(K)-25.0)/5.0+26.                     
      IF (ZMDL(K).GE.50.0) J=(ZMDL(K)-50.0)/20.0+31.                    
      IF (ZMDL(K).GE.70.0) J=(ZMDL(K)-70.0)/30.0+32.                    
      IF (J.GT.32) J=32                                                 
      FAC=ZMDL(K)-FLOAT(J-1)                                            
      IF (J.LT.26) GO TO 125                                            
      FAC=(ZMDL(K)-5.0*FLOAT(J-26)-25.)/5.                              
      IF (J.GE.31) FAC=(ZMDL(K)-50.0)/20.                               
      IF (J.GE.32) FAC=(ZMDL(K)-70.0)/30.                               
      ENDIF                                                             
125   L=J+1                                                             
      IF (FAC.GT.1.0) FAC=1.0                                           
      IF(ITYAER.EQ.3.AND.ICL.EQ.0)THEN                                  
           CALL MARINE(VIS1,MODEL,WSS,WHH,ICSTL,EXTC,ABSC,IC1)          
           IREG(IC1) = 1                                                
           VIS=VIS1                                                     
           ICL = ICL + 1                                                
      ENDIF                                                             
      IF(ITYAER.EQ.10.AND.IDSR.EQ.0)THEN                                
           CALL DESATT(WSS,VIS1)                                        
           IREG(IC1) = 1                                                
           VIS=VIS1                                                     
           IDSR = IDSR + 1                                              
      ENDIF                                                             
      IF(AHAZE.GT.0.0) GO TO 50                                         
      IF(IHA1.LE.0) IHA1=IHAZE                                          
      CALL CLDPRF(K,ICLD1,IHA1,IC1)                                     
      CALL AERPRF(J,  VIS1,HAZ1,IHA1,      ISEA1,IVUL1,NN)              
      CALL AERPRF(L,  VIS1,HAZ2,IHA1,      ISEA1,IVUL1,NN)              
      HAZE=0.                                                           
      IF ((HAZ1.LE.0.0).OR.(HAZ2.LE.0.0)) GO TO 48                      
      HAZE=HAZ1*(HAZ2/HAZ1)**FAC                                        
48    CONTINUE                                                          
      IF(CLDAMT(K).GT.0.0) HAZE=HAZEC(K)                                
      DENSTY(N,K)=HAZE                                                  
50    CONTINUE                                                          
      ITY1(K)=ITYAER                                                    
      IH1(K)=IHA1                                                       
      IF(AHAZE.NE.0)IH1(K)=-99                                          
      IS1(K)=ISEA1                                                      
      IVL1(K)=IVUL1                                                     
100   CONTINUE                                                          
C                                                                       
C     END OF LOOP                                                       
C                                                                       
      IHH=ICLD                                                          
      IF(IHH.LE.0) IHH=12                                               
      IF(IHH.GT.12)IHH=12                                               
      IF(ICLD.GE.18)IHH=13                                              
      DO 105 II=1,5                                                     
      HHOL(II)=AHAHOL(II,IHH)                                           
      IF(IVSA.NE.0) HHOL(II)=AHLVSA(II)                                 
105   CONTINUE                                                          
      IF(ICLD .NE. 0) THEN                                              
           IF(JPRT.EQ.0)WRITE (IPR,904) HHOL                            
904        FORMAT(//'0 CLOUD AND OR RAIN TYPE CHOSEN IS   ',5A4)        
      ENDIF                                                             
      IF(JPRT.EQ.0)WRITE(IPR,905)                                       
C                                                                       
C 905 FORMAT(//,T7,'Z',T17,'P',T26,'T',T32,'REL H', T41,'H2O',          
905   FORMAT(1H1,//,T7,'Z',T17,'P',T26,'T',T32,'REL H', T41,'H2O',      
     1 T49,'CLD AMT',T59,'RAIN RATE', T90,'AEROSOL'/,                   
     2 T6,'(KM)',T16,'(MB)',T25,'(K)',T33,'(%)',T39,'(GM M-3)',T49,     
     3 '(GM M-3)',T59,'(MM HR-1)',T69,                                  
     4 'TYPE', T90,'PROFILE')                                           
      IF(JPRT.EQ.1) RETURN                                              
      DO 60 KK=1,ML                                                     
      DO 52 IJ=1,5                                                      
      AHOL1(IJ)=BLANK                                                   
      AHOL2(IJ)=BLANK                                                   
52    AHOL3(IJ)=BLANK                                                   
      ITYAER=ITY1(KK)                                                   
      IF(ITYAER.LE.0) ITYAER=1                                          
      IF(ITYAER . EQ.  16) ITYAER = 11                                  
      IF(ITYAER . EQ.  17) ITYAER = 11                                  
      IF(ITYAER . EQ.  18) ITYAER = 13                                  
C     ***************  ERRATA JUNE 21 89 NEXT CARD                      
      IF(ITYAER . EQ.  19) ITYAER = 11                                  
C     ***************  END ERRATA                                       
      IHA1=IH1(KK)                                                      
      ISEA1=IS1(KK)                                                     
      IVUL1=IVL1(KK)                                                    
      DO 54 IJ=1,5                                                      
      AHOL1(IJ)=  HZ(IJ,ITYAER)                                         
      IF(IVSA.EQ.1) AHOL1(IJ)=HHOL(IJ)                                  
      IF(CLDAMT(KK).GT.0.0 .OR. RRAMT(KK).GT.0.0) AHOL1(IJ)=HHOL(IJ)    
      IF(IHAZE.EQ.0) AHOL1(IJ)=HHOL(IJ)                                 
      AHOL2(IJ)=AHUS(IJ)                                                
      IF(AHAST(KK).EQ.0) AHOL2(IJ)=AHOL1(IJ)                            
      IF(CLDAMT(KK).GT.0.0 .OR. RRAMT(KK).GT.0.0) AHOL2(IJ)=HHOL(IJ)    
54    IF (ZGN(KK).GT.2.0) AHOL3(IJ)=SEASN(IJ,ISEA1)                     
60    WRITE(IPR,915)ZMDL(KK),P(KK  ),T(KK  ),RELHUM(KK),WH(KK  ),       
     X CLDAMT(KK),RRAMT(KK),AHOL1,AHOL2,AHOL3                           
915   FORMAT(2F10.3,2F8.2,1P3E10.3,1X,5A4,5A4,5A4)                      
      RETURN                                                            
C                                                                       
925   FORMAT(//,' MODEL ATMOSPHERE NO. ',I5,' ICLD =',I5,//)            
      END                                                               
      SUBROUTINE AERPRF (I,  VIS,HAZE,IHAZE,     ISEASN,IVULCN,N)       
C***********************************************************************
C     WILL COMPUTE DENSITY    PROFILES FOR AEROSOLS                     
C***********************************************************************
      COMMON/PRFD  /ZHT(34),HZ2K(34,5),FAWI50(34),FAWI23(34),SPSU50(34),
     1SPSU23(34),BASTFW(34),VUMOFW(34),HIVUFW(34),EXVUFW(34),BASTSS(34),
     2VUMOSS(34),HIVUSS(34),EXVUSS(34),UPNATM(34),VUTONO(34),           
     3VUTOEX(34),EXUPAT(34)                                             
      DIMENSION VS(5)                                                   
      DATA VS/50.,23.,10.,5.,2./                                        
      HAZE=0.                                                           
      N=7                                                               
      IF (IHAZE.EQ.0) RETURN                                            
      IF (ZHT(I).GT.2.0) GO TO 15                                       
      DO 5 J=2,5                                                        
      IF (VIS.GE.VS(J)) GO TO 10                                        
    5 CONTINUE                                                          
      J=5                                                               
   10 CONST=1./(1./VS(J)-1./VS(J-1))                                    
      HAZE=CONST*( (HZ2K(I,J)-HZ2K(I,J-1))/VIS +                        
     1 HZ2K(I,J-1)/VS(J) - HZ2K(I,J )/VS(J-1) )                         
      IF(ZHT(I).GT.2.0) GO TO 15                                        
      RETURN                                                            
   15 IF (ZHT(I).GT.10.) GO TO 35                                       
      CONST=1./(1./23.-1./50.)                                          
      IF (ISEASN.GT.1) GO TO 25                                         
      IF (VIS.LE.23.) HAZI=SPSU23(I)                                    
      IF (VIS.LE.23.) GO TO 200                                         
      IF (ZHT(I).GT.4.0) GO TO 20                                       
      HAZI=CONST*((SPSU23(I)-SPSU50(I))/VIS+SPSU50(I)/23.-SPSU23(I)/50.)
      GO TO 200                                                         
   20 HAZI=SPSU50(I)                                                    
      GO TO 200                                                         
   25 IF (VIS.LE.23.) HAZI=FAWI23(I)                                    
      IF (VIS.LE.23.) GO TO 200                                         
      IF (ZHT(I).GT.4.0) GO TO 30                                       
      HAZI=CONST*((FAWI23(I)-FAWI50(I))/VIS+FAWI50(I)/23.-FAWI23(I)/50.)
      GO TO 200                                                         
   30 HAZI=FAWI50(I)                                                    
      GO TO 200                                                         
   35 IF (ZHT(I).GT.30.0) GO TO 75                                      
      HAZI=BASTSS(I)                                                    
      IF (ISEASN.GT.1) GO TO 55                                         
      IF (IVULCN.EQ.0) HAZI=BASTSS(I)                                   
      IF (IVULCN.EQ.0) GO TO 200                                        
      GO TO (40,45,50,50,45,45,50,52), IVULCN                           
   40 HAZI=BASTSS(I)                                                    
      GO TO 200                                                         
   45 HAZI=VUMOSS(I)                                                    
      GO TO 200                                                         
   50 HAZI=HIVUSS(I)                                                    
      GO TO 200                                                         
52    HAZI=EXVUSS(I)                                                    
      GO TO 200                                                         
   55 IF (IVULCN.EQ.0) HAZI=BASTFW(I)                                   
      IF (IVULCN.EQ.0) GO TO 200                                        
      GO TO (60,65,70,70,65,65,70,72), IVULCN                           
   60 HAZI=BASTFW(I)                                                    
      GO TO 200                                                         
   65 HAZI=VUMOFW(I)                                                    
      GO TO 200                                                         
   70 HAZI=HIVUFW(I)                                                    
      GO TO 200                                                         
72    HAZI=EXVUFW(I)                                                    
      GO TO 200                                                         
   75 N=14                                                              
      IF (IVULCN.GT.1) GO TO 80                                         
      HAZI=UPNATM(I)                                                    
      GO TO 200                                                         
   80 HAZI=VUTONO(I)                                                    
200   IF(HAZI.GT.0) HAZE=HAZI                                           
      RETURN                                                            
      END                                                               
      SUBROUTINE AERTMP                                                 
Crea0892      COMMON RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63)    
Crea0892C     COMMON             WPATH(68, 63),TBBY(68)                 
Crea0892 COMMON IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12)
Crea0892      COMMON ABSC(5,47),EXTC(5,47),ASYM(5,47),VX2(47),AWCCON(5) 
      COMMON /UNLABEL/ RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63), 
     +         IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12),
     +         ABSC(5,47),EXTC(5,47),ASYM(5,47),VX2(47),AWCCON(5)       
      COMMON /IFIL/ IRD,IPR,IPU,NPR,IPR1                                
      COMMON /CNTRL/ KMAX,M,IKMAX,NL,ML,IKLO,ISSGEO,IMULT               
      COMMON /AERTM/TAE7,TAE12,TAE13,TAE14,TAE16                        
      SUM7  = 0.                                                        
      SUM12 = 0.                                                        
      SUM13 = 0.                                                        
      SUM14 = 0.                                                        
      SUM16 = 0.                                                        
      TAE7  = 0.                                                        
      TAE12 = 0.                                                        
      TAE13 = 0.                                                        
      TAE14 = 0.                                                        
      TAE16 = 0.                                                        
      DO 10 KK = 1,IKMAX                                                
      IF(KK .EQ. 1) THEN                                                
           WDF7  = WPATH(KK,7)                                          
           WDF12 = WPATH(KK,12)                                         
           WDF13 = WPATH(KK,13)                                         
           WDF14 = WPATH(KK,14)                                         
           WDF16 = WPATH(KK,16)                                         
      ELSE                                                              
           WDF7  = WPATH(KK,7) -WPATH(KK-1,7)                           
           WDF12 = WPATH(KK,12)-WPATH(KK-1,12)                          
           WDF13 = WPATH(KK,13)-WPATH(KK-1,13)                          
           WDF14 = WPATH(KK,14)-WPATH(KK-1,14)                          
           WDF16 = WPATH(KK,16)-WPATH(KK-1,16)                          
      ENDIF                                                             
      SUM7 = SUM7  + WDF7                                               
      SUM12= SUM12 + WDF12                                              
      SUM13= SUM13 + WDF13                                              
      SUM14= SUM14 + WDF14                                              
      SUM16= SUM16 + WDF16                                              
      TAE7 = TAE7  + WDF7   * TBBY(KK)                                  
      TAE12= TAE12 + WDF12  * TBBY(KK)                                  
      TAE13= TAE13 + WDF13  * TBBY(KK)                                  
      TAE14= TAE14 + WDF14  * TBBY(KK)                                  
   10 TAE16= TAE16 + WDF16  * TBBY(KK)                                  
      IF(SUM7   .GT. 0.) THEN                                           
            TAE7 = TAE7 /SUM7                                           
      ELSE                                                              
            TAE7 = TBBY(1)                                              
      ENDIF                                                             
      IF(SUM12 .GT. 0.) THEN                                            
            TAE12= TAE12/SUM12                                          
      ELSE                                                              
            TAE12= TBBY(1)                                              
      ENDIF                                                             
      IF(SUM13 .GT. 0.) THEN                                            
            TAE13= TAE13/SUM13                                          
      ELSE                                                              
            TAE13= TBBY(1)                                              
      ENDIF                                                             
      IF(SUM14 .GT. 0.) THEN                                            
            TAE14= TAE14/SUM14                                          
      ELSE                                                              
            TAE14= TBBY(1)                                              
      ENDIF                                                             
      IF(SUM16 .GT. 0.) THEN                                            
            TAE16= TAE16/SUM16                                          
      ELSE                                                              
            TAE16= TBBY(1)                                              
      ENDIF                                                             
      RETURN                                                            
      END                                                               
      FUNCTION   AITK(ARG,VAL,X,NDIM)                                   
C                                                                       
C      IBM SCIENTIFIC SUBROUTINE                                        
C     AITKEN INTERPOLATION ROUTINE                                      
C                                                                       
      DIMENSION ARG(NDIM),VAL(NDIM)                                     
      IF(NDIM-1)9,7,1                                                   
C                                                                       
C     START OF AITKEN-LOOP                                              
    1 DO 6 J=2,NDIM                                                     
      IEND=J-1                                                          
      DO 2 I=1,IEND                                                     
      H=ARG(I)-ARG(J)                                                   
      IF(H)2,13,2                                                       
    2 VAL(J)=(VAL(I)*(X-ARG(J))-VAL(J)*(X-ARG(I)))/H                    
    6 CONTINUE                                                          
C     END OF AITKEN-LOOP                                                
C                                                                       
    7 J=NDIM                                                            
    8 AITK=VAL(J)                                                       
    9 RETURN                                                            
C                                                                       
C     THERE ARE TWO IDENTICAL ARGUMENT VALUES IN VECTOR ARG             
   13 IER=3                                                             
      J=IEND                                                            
      GO TO 8                                                           
      END                                                               
      FUNCTION   ANDEX(H,SH,GAMMA)                                      
C***********************************************************************
C     COMPUTES THE INDEX OF REFRACTION AT HEIGHT H, SH IS THE           
C     SCALE HEIGHT, GAMMA IS THE VALUE AT H=0 OF THE REFRACTIVITY =     
C     INDEX-1                                                           
C***********************************************************************
      COMMON /CNSTNS/ PI,CA,DEG,GCAIR,BIGNUM,BIGEXP                     
      IF(SH.EQ.0.0) GO TO 10                                            
      IF(H. LE. 0.) GO TO 10                                            
      HSH = H/SH                                                        
      IF(HSH .GT.BIGEXP) GO TO 20                                       
      ANDEX = 1.0+GAMMA*EXP(-HSH )                                      
      RETURN                                                            
   10 ANDEX = 1.0+GAMMA                                                 
      RETURN                                                            
   20 ANDEX = 1.                                                        
      RETURN                                                            
      END                                                               
      FUNCTION   BBFN(T,V)                                              
C***********************************************************************
C   PLANCK BLACK BODY FUNCTION IN UNITS OF WATTS/(CM2 STER MICROMETER)  
C***********************************************************************
      COMMON /CNSTNS/ PI,CA,DEG,GCAIR,BIGNUM,BIGEXP                     
      BBFN = 0.0                                                        
      IF(V. LE. 0.) RETURN                                              
      X = 1.43879*V/T                                                   
C*****PROTECT AGAINST EXPONENTIAL OVERLOW                               
      IF(X.GT.BIGEXP) RETURN                                            
      BBFN = 1.190956E-16*V**5/(EXP(X)-1.0)                             
      RETURN                                                            
      END                                                               
      FUNCTION   BETABS(U,G)                                            
C                                                                       
C   FUNCTION BETABS SUPPLIES THE BACK SCATTER FRACTION FOR A GIVEN      
C   ASYMMETRY FACTOR AND COSINE OF ANGLE                                
C                                             A.E.R. 1986               
C                                                                       
      DIMENSION A9(10,5),U8(9)                                          
      DATA U8/0.0,.1,.2,.3,.4,.5,.6,.8,1.0/                             
      DATA A9/.5, .5, .5, .5, .5, .5, .5, .5, .5, .5, .0, .13979292889, 
     1   -.12019000482,   -.46017123188,  -.406828796532, -.3001541656, 
     2   -.553474414782,  -.626794663911, -.84678101,   -.406823676662, 
     3  .0, -1.5989873995, -.2724219928,  1.18747390274, .49409050834,  
     4   -.35928947292,    .37397957743,   .18057740986, .50718036245,  
     5    .01406832224, .0, 3.5184116963,  .6385960123, -2.081230849,   
     6  -1.0144699491,     .1589475781,   -.74761782865, -.37416958202, 
     7   -.374040109,   .1055607702, .0, -2.5592172257,  -.7459840146,  
     8    .85392041407,    .4272082373,    .00049606046,  .42711266606, 
     9    .32038683614,    .2136746594,   -.2128054157 /                
C                                                                       
C     BACKSCATTERING INTERPOLATION                                      
C                                                                       
      IQ=0                                                              
      IF(U .LT. .1) IQ=1                                                
      IF(U .LT. .2 .AND. U .GE. .1) IQ=2                                
      IF(U .LT. .3 .AND. U .GE. .2) IQ=3                                
      IF(U .LT. .4 .AND. U .GE. .3) IQ=4                                
      IF(U .LT. .5 .AND. U .GE. .4) IQ=5                                
      IF(U .LT. .6 .AND. U .GE. .5) IQ=6                                
      IF(U .LT. .8 .AND. U .GE. .6) IQ=7                                
      IF(U .LE.1.0 .AND. U .GE. .8) IQ=8                                
      IF (IQ .EQ. 0) THEN                                               
      WRITE(16,105) U                                                   
  105 FORMAT(//,' THE VALUE FOR MU OF ',F12.6,' IS > 1.0 ]]')           
      STOP ' ERROR ***'                                                 
      END IF                                                            
C                                                                       
      Y5=0.0                                                            
      Y6=0.0                                                            
      Y7=0.0                                                            
      IQP1=IQ+1                                                         
C                                                                       
      DO 30 J=1,5                                                       
      JM1=J-1                                                           
      Y9=A9(IQ,J)*G**JM1                                                
      Y8=A9(IQP1,J)*G**JM1                                              
      Y3=A9(10,J)*G**JM1                                                
      Y7=Y7+Y9                                                          
      Y6=Y6+Y8                                                          
      Y5=Y5+Y3                                                          
  30  CONTINUE                                                          
      BETABS=Y7+(Y6-Y7)*(U-U8(IQ))/(U8(IQP1)-U8(IQ))                    
C                                                                       
      RETURN                                                            
      END                                                               
      SUBROUTINE BMDATA(IV1,IFWHM,IDVX,IKMX,MXFREQ)                     
C                                                                       
C     BMDATA (CALLED BY TRANS) MAKES THE INITIAL BAND MODEL TAPE READ   
C     AND CALCULATES WAVENUMBER-INDEPENDENT PARAMETERS FOR USE BY BMOD  
C                                                                       
      LOGICAL MODTRN                                                    
Crea0892      COMMON RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63)    
Crea0892COMMON IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12) 
Crea0892      COMMON ABSC(5,47),EXTC(5,47),ASYC(5,47),VX2(47),AWCCON(5) 
      COMMON /UNLABEL/ RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63), 
     +        IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12), 
     +        ABSC(5,47),EXTC(5,47),ASYC(5,47),VX2(47),AWCCON(5)        
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1                                  
      COMMON/SOLS/AH1(68),ARH(68),                                      
     1  WPATHS(102,63),PA(68),PR(68),ATHETA(35),ADBETA(35),LJ(69),      
     2  JTURN,ANGSUN,CSZEN(68),TBBYS(102,12),PATMS(102,12)              
      COMMON/CARD1/MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB    
     1  ,MODTRN                                                         
      COMMON/CNTRL/KMAX,M,IKMAX,NL,ML,IKLO,ISSGEO,IMULT                 
      COMMON/BMDCOM/IBNDWD,IP,IPRM,IBLK,IBLOCK,IPARAM(232),NTEMP,       
     1  TBAND(5),SDZ(5,250),ODZ(5,250),IBIN(250),IMOL(250),IALF(250),   
     2  SD(5,24),OD(5,12),ALF0(12),WT(102),WTS(102,12),ITB,             
     3  JJ(102),FF(102),JJS(102,12),FFS(102,12),                        
     4          DOPFAC(12),DOP0(12),DOPSUM(12),COLSUM(12),ODSUM(12),    
     5  SDSUM(24)                                                       
      DIMENSION IFREQ(232)                                              
      DATA TZERO/273.15/                                                
C                                                                       
C     OPEN THE UNFORMATTED BAND MODEL TAPE, FILE ITB = 9.  AN ERROR     
C     OCCURS IF THE TAPE WAS OPENED DURING A PREVIOUS LOWTRAN RUN       
C     (IMPLYING IRPT WAS NOT ZERO).  IN THAT CASE, REWIND THE TAPE.     
C                                                                       
      ITB = 9                                                           
Crea1092      OPEN(ITB,FILE='UFTAPE',STATUS='OLD',FORM='UNFORMATTED')   
      OPEN(ITB,FILE='/usr/export/bin/uftape.dat',STATUS='OLD',          
     +     FORM='UNFORMATTED')                                          
   10 REWIND(ITB)                                                       
C                                                                       
C     READ THE BAND MODEL TAPE HEADER.  IBNDWD IS THE WIDTH (CM-1) OF   
C     EACH BAND, IBLOCK IS THE NUMBER OF STORAGE BLOCKS, IFREQ(IBLK) IS 
C     THE FREQUENCY OF THE LAST BAND MODEL "PARAMETER SET" IN BLOCK IBLK
C     AND IPARAM(IBLK) IS THE NUMBER OF PARAMETER SETS IN THE BLOCK IBLK
C                                                                       
      READ(ITB)IBNDWD,IBLOCK,(IFREQ(IBLK),IPARAM(IBLK),IBLK=1,IBLOCK),  
     1  NTEMP,(TBAND(IT),IT=1,NTEMP)                                    
C                                                                       
C     PASS THE BAND WIDTH TO TRANS THROUGH IDVX.  ALSO DETERMINE THE    
C     MINIMUM FREQUENCY AT WHICH BAND MODEL DATA IS NEEDED.             
      IDVX=IBNDWD                                                       
      IV=5*((IV1-IFWHM/IBNDWD+1)/5)                                     
C                                                                       
C     PERFORM THE STANDARD LOWTRAN CALCULATION IF NO BAND MODEL DATA    
C     EXISTS FOR THE CHOSEN FREQUENCY RANGE.                            
C                                                                       
      MXFREQ=IFREQ(IBLOCK)                                              
      IF(IV.GT.MXFREQ)THEN                                              
          WRITE(IPR,'(//43H (THE BAND MODEL TAPE DOES NOT HAVE DATA IN, 
     1      32H THE REQUESTED WAVENUMBER RANGE))')                      
          RETURN                                                        
      ENDIF                                                             
C                                                                       
C     ADVANCE THE TAPE TO DESIRED FREQUENCY BLOCK                       
C                                                                       
      IBLK=0                                                            
   20 IBLK=IBLK+1                                                       
      IF(IV.GT.IFREQ(IBLK))THEN                                         
          IPRM=IPARAM(IBLK)                                             
          READ(ITB)(IDUMMY,IDUMMY,(DUMMY,IT=1,NTEMP),                   
     1      IDUMMY,(DUMMY,IT=1,NTEMP),IP=1,IPRM)                        
          GOTO20                                                        
      ENDIF                                                             
C                                                                       
C     READ THE FIRST BLOCK OF REQUIRED BAND MODEL DATA                  
C                                                                       
      IPRM=IPARAM(IBLK)                                                 
      READ(ITB)(IBIN(IP),IMOL(IP),(SDZ(IT,IP),IT=1,NTEMP),IALF(IP),     
     1  (ODZ(IT,IP),IT=1,NTEMP),IP=1,IPRM)                              
C                                                                       
C     DETERMINE FIRST REQUIRED PARAMETER SET                            
C                                                                       
      IP=0                                                              
   30 IP=IP+1                                                           
      IF(IV.GT.IBIN(IP))GOTO30                                          
C                                                                       
C     SET MSMAX TO 68 FOR MULTIPLE SCATTERING                           
C                                                                       
      MSMAX=IMULT*68                                                    
C                                                                       
C     SET TEMPERATURE INTERPOLATION INDICES FOR EACH LAYER              
C                                                                       
      IKHI=IKMX                                                         
      DO 70 MSOFF=0,MSMAX,68                                            
          DO 60 IK=1,IKHI                                               
              IKOFF=IK+MSOFF                                            
              TT=TBBY(IKOFF)                                            
              IF(TT.LE.TBAND(1))THEN                                    
                  JJ(IKOFF)=2                                           
                  FF(IKOFF)=1.                                          
              ELSEIF(TT.GE.TBAND(NTEMP))THEN                            
                  JJ(IKOFF)=NTEMP                                       
                  FF(IKOFF)=0.                                          
              ELSE                                                      
                  DO 40 J=2,NTEMP                                       
                      IF(TT.LE.TBAND(J))GOTO50                          
   40             CONTINUE                                              
   50             JJ(IKOFF)=J                                           
                  FF(IKOFF)=(TBAND(J)-TT)/(TBAND(J)-TBAND(J-1))         
              ENDIF                                                     
C                                                                       
C     SET TEMPERATURE SCALING PARAMETERS                                
C                                                                       
   60     WT(IKOFF)=SQRT(TT/TZERO)                                      
   70 IKHI=IMSMX                                                        
C                                                                       
C     IF NO SINGLE SCATTER SOLAR, RETURN                                
C                                                                       
      IF(IEMSCT.NE.2)RETURN                                             
C                                                                       
C     SET TEMPERATURE INTERPOLATION INDICES FOR SOLAR LAYERS            
C                                                                       
      IKHI=IKMX+1                                                       
      DO 110 MSOFF=0,MSMAX,68                                           
          DO 100 IK=1,IKHI                                              
              IKOFF=IK+MSOFF                                            
              DO 100 K=1,NSPEC                                          
                  TT=TBBYS(IKOFF,K)                                     
                  IF(TT.LE.TBAND(1))THEN                                
                      JJS(IKOFF,K)=2                                    
                      FFS(IKOFF,K)=1.                                   
                  ELSEIF(TT.GE.TBAND(NTEMP))THEN                        
                      JJS(IKOFF,K)=NTEMP                                
                      FFS(IKOFF,K)=0.                                   
                  ELSE                                                  
                      DO 80 J=2,NTEMP                                   
                          IF(TT.LE.TBAND(J))GOTO90                      
   80                 CONTINUE                                          
   90                 JJS(IKOFF,K)=J                                    
                      FFS(IKOFF,K)=(TBAND(J)-TT)/(TBAND(J)-TBAND(J-1))  
                  ENDIF                                                 
  100     WTS(IKOFF,K)=SQRT(TT/TZERO)                                   
  110 IKHI=IMSMX+1                                                      
      RETURN                                                            
      END                                                               
      FUNCTION BMERFU(Y)                                                
C                                                                       
C ... APPROXIMATION FOR EXP(-Y*Y) + SQRT(PI) * Y * ERF(Y) - 1           
      DATA P,A1,A2,A3,A4,A5,RTPI/.3275911,.451673692,-.504257335,       
     1  2.519390259,-2.575644906,1.881292140,1.772453851/               
      IF(Y.LT.2.33)THEN                                                 
      T=1./(1.+P*Y)                                                     
      BMERFU=(1.-Y*T*(A1+T*(A2+T*(A3+T*(A4+T*A5)))))*EXP(-Y*Y)+RTPI*Y-1.
      ELSE                                                              
      T=Y*Y                                                             
      BMERFU=(1.75+T*.5)/(3.75+T*(5.+T))*EXP(-T)+RTPI*Y-1.              
      ENDIF                                                             
      RETURN                                                            
      END                                                               
      SUBROUTINE BMFLUX(TLE,COSBAR,TAER,TAUT,OMEGA0,UPF,DNF,IWAVN,IKMAX,
     1  CSZEN,S0,STRN,FDNSRF,FDNTRF,DMF,DMFS,UMF,UMFS)                  
C                                                                       
C     MODTRAN VERSION OF FLXADD (NO K LOOP)                             
C                                                                       
      LOGICAL MODTRN                                                    
      DOUBLE PRECISION AER1,AER2,AERA,AERU,AERV,AERC,AERCX,EX1,EX2,     
     1  DENO,DNMO,DNM1                                                  
      COMMON/CARD1/MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB    
     1  ,MODTRN                                                         
      COMMON/TRAN/BTOP(50),TMOLS(34),TAERS(34),TCONT(34),DCONT(68)      
      COMMON/CNTRL/KMAX,M7,JKMAX,NL,ML,IKLO,ISSGEO,IMULT                
      COMMON/CNSTNS/PI,CA,DEG,GCAIR,BIGNUM,BIGEXP                       
      COMMON/DIRST/SUN,UMB(34),DMB(34),UMBS(34),DMBS(34)                
      DIMENSION COSBAR(34),DNF(10,34),EDN(50),EUP(50),EUPC(50),TDF(50), 
     1  TLE(34),OMEGA0(68),UPF(10,34),RUPC(50),TAER(50),REF(50),        
     2  EUPS(34),EDNS(34),UPFS(34),DNFS(34),EUPCS(34),CSZEN(68),        
     3  STRN(0:34),BETS(34),RUPCS(34),UMF(34),DMF(34),UMFS(34),DMFS(34),
     4  REFS(34),TDFS(34),TAUT(34)                                      
C***********************************************************************
C                                                                       
C   INPUT PARAMETERS:                                                   
C   ----------------                                                    
C   TLE(N)     - TEMPERATURE (KELVIN) OF UPPER EDGE OF LAYER N          
C   COSBAR(N)  - ASYMMETRY FACTOR FOR LAYER N                           
C   TAER(N)    - TOTAL AEROSOL OPTICAL THICKNESS OF LAYER N             
C   TAERS(N)   - AEROSOL SCATTERING OPTICAL THICKNESS OF LAYER N        
C   TCONT(N)   - MOLECULAR CONTINUUM OPTICAL THICKNESS FOR LAYER N      
C   TMOLS(N)   - RAYLEIGH SCATTERING OPTICAL THICKNESS FOR LAYER N      
C   CSZEN(N)   - COSINE OF SOLAR ZENITH ANGLE FOR LAYER N               
C   IWAVN      - FREQUENCY (WAVENUMBER)                                 
C   S0         - SOLAR INTENSITY AT TOP OF ATMOSPHERE                   
C   STRN(N)    - SOLAR TRANSMISSION TO BOTTOM OF LAYER N                
C                                                                       
C   OUTPUT PARAMETERS:                                                  
C   -----------------                                                   
C   BTOP(N)    - BLACK BODY FLUX FOR UPPER EDGE TEMPERATURE OF LAYER N  
C   OMEGA0(N)  - SCATTERING ALBEDO FOR LAYER N                          
C   UPF(1,N)   - UPWARD THERMAL FLUX AT UPPER EDGE OF LAYER N           
C   DNF(1,N)   - DOWNWARD THERMAL FLUX AT UPPER EDGE OF LAYER N         
C   UMF(N)     - MEAN UPWARD THERMAL FLUX OF LAYER N                    
C   UMFS(N)    - MEAN UPWARD SOLAR FLUX OF LAYER N                      
C   DMF(N)     - MEAN DOWNWARD THERMAL FLUX OF LAYER N                  
C   DMFS(N)    - MEAN DOWNWARD SOLAR FLUX OF LAYER N                    
C   FDNSRF     - DOWNWARD SOLAR FLUX AT THE SURFACE                     
C   FDNTRF     - DOWNWARD THERMAL FLUX AT THE SURFACE                   
C                                                                       
C   INTERNAL PARAMETERS:                                                
C   -------------------                                                 
C   UPFS(N)    - UPWARD SOLAR FLUX AT UPPER EDGE OF LAYER N             
C   DNFS(N)    - DOWNWARD SOLAR FLUX AT UPPER EDGE OF LAYER N           
C   BETS(N)    - BACKSCATTER FRACTION ALONG SOLAR PATH AT LAYER N       
C   EUP(N)     - INTRINSIC UPWARD THERMAL FLUX OF LAYER N               
C   EDN(N)     - INTRINSIC DOWNWARD THERMAL FLUX OF LAYER N             
C   TDF(N)     - INTRINSIC THERMAL TRANSMISSION OF LAYER N              
C   REF(N)     - INTRINSIC THERMAL REFLECTANCE OF LAYER N               
C   TDFS(N)    - INTRINSIC SOLAR TRANSMISSION OF LAYER N                
C   REFS(N)    - INTRINSIC SOLAR REFLECTANCE OF LAYER N                 
C   X          - OPTICAL THICKNESS OF A GIVEN LAYER                     
C                                                                       
C***********************************************************************
      DATA RUPC/50*0./,RUPCS/34*0./,EUPS/34*0./,EDNS/34*0./             
      DATA REFS/34*0./,TDFS/34*0./,UPFS/34*0./,DNFS/34*0./              
      V=FLOAT(IWAVN)                                                    
      NG=ML                                                             
      NG1=NG+1                                                          
      NLAYRS=NG-1                                                       
C                                                                       
C     SURFACE THERMAL EMISSION                                          
C                                                                       
      TLE(NG1)=TLE(NG)                                                  
      BTOP(NG1)=BBFN(TLE(NG1),V)*PI                                     
      BTOP(NG)=BBFN(TLE(NG),V)*PI                                       
      DO 98 N=1,NLAYRS                                                  
C                                                                       
C         BLACK BODY FLUX FOR LAYER EDGE TEMPERATURE                    
C                                                                       
          BTOP(N)=BBFN(TLE(N),V)*PI                                     
C                                                                       
C         CALCULATE BACKSCATTER PARAMETERS                              
C                                                                       
          IF(COSBAR(N).EQ.0.)THEN                                       
              BETS(N)=.5                                                
          ELSE                                                          
              IF(IEMSCT.EQ.2 .OR. IEMSCT.EQ.3)                          
     1          BETS(N)=BETABS(CSZEN(N),COSBAR(N))                      
          ENDIF                                                         
   98 CONTINUE                                                          
C**** COMPOSITE DOWNWARDS REFLECTION                                    
      RDNCN=0.                                                          
      RDNCNS=0.                                                         
C***********************************************************************
C*    ADDING GROUND LAYER                                              *
C***********************************************************************
C     DEFINE INITIAL UPWARD COMPOSITE SURFACE REFLECTANCE               
C                                                                       
      RUPCN=SALB                                                        
      RUPCNS=SALB                                                       
C                                                                       
C     SURFACE EMISSION                                                  
C                                                                       
      EUPCN=(1.-RUPCN)*BTOP(NG1)                                        
      EUP(NG)=EUPCN                                                     
      EUPC(NG)=EUPCN                                                    
      IF(IEMSCT.EQ.2)THEN                                               
          EUPCNS=RUPCNS*CSZEN(NLAYRS)*STRN(NLAYRS)*S0                   
      ELSE                                                              
          EUPCNS=0.                                                     
      ENDIF                                                             
      EUPS(NG)=EUPCNS                                                   
      EUPCS(NG)=EUPCNS                                                  
C***********************************************************************
C*    UPWARD ADDING LOOP(1-N)                                          *
C***********************************************************************
      DO 101 N=NLAYRS,1,-1                                              
          M=N-1                                                         
C                                                                       
C         NOTE: TOP LAYER IS LAYER 1                                    
C                                                                       
          X=TAUT(N)+TAER(N)+TCONT(N)+TMOLS(N)                           
          OMEGA0(N)=0.                                                  
          IF(X.GT.0.)OMEGA0(N)=(TAERS(N)+TMOLS(N))/X                    
C                                                                       
C         USE TWO STREAM APPROXIMATION FOR THERMAL                      
C                                                                       
          IF(OMEGA0(N).GT.0.99999)GOTO115                               
          AER1=1.-OMEGA0(N)                                             
          AER2=1.-OMEGA0(N)*COSBAR(N)                                   
          AERA=SQRT(AER1/AER2)                                          
          AERU=(1.-AERA)/2.                                             
          AERV=(1.+AERA)/2.                                             
          AERC=SQRT(3.*AER1*AER2)                                       
          IF(X. LT. 1.E-4/AERC) THEN                                    
              AERCX=AERC*X                                              
              EX1 = 1. - AERCX + .5 * AERCX * AERCX                     
              DNMO=(BTOP(N)-BTOP(N+1))*(1.-AERCX+.5*AERA*AERCX)         
          ELSEIF(X.LT.BIGEXP/AERC) THEN                                 
               AERCX=AERC*X                                             
               EX1 = EXP(-AERCX)                                        
             DNMO=(BTOP(N)-BTOP(N+1))*(AERV-EX1*(AERA+EX1*AERU))/AERCX  
          ELSE                                                          
                EX1 = 0.                                                
                DNMO =((BTOP(N)-BTOP(N+1))*AERV/AERC)/X                 
          ENDIF                                                         
CC        IF(AERCX.LT.BIGEXP)THEN                                       
CC            EX1=EXP(-AERCX)                                           
CC        ELSE                                                          
CC            EX1=1./BIGNUM                                             
CC        ENDIF                                                         
          EX2=EX1*EX1                                                   
          DNM1=AERV+AERU*EX2                                            
          DENO=AERV*AERV-AERU*AERU*EX2                                  
CC        DENO=(AERV*AERV-AERU*AERU*EX2)                                
CC        IF(AERCX.LT.1.E-4)THEN                                        
CC            DNMO=(BTOP(N)-BTOP(N+1))*(1.-AERCX+.5*AERA*AERCX)         
CC        ELSE                                                          
CC            DNMO=(BTOP(N)-BTOP(N+1))*(AERV-AERU*EX2-AERA*EX1)/AERCX   
CC        ENDIF                                                         
CC        DNM1=AERV+AERU*EX2                                            
          EUP(N)=(BTOP(N)*DNM1-DNMO-BTOP(N+1)*EX1)/DENO*AERA            
          EDN(N)=(BTOP(N+1)*DNM1+DNMO-BTOP(N)*EX1)/DENO*AERA            
          IF(EUP(N).LT.0)EUP(N)=0.                                      
          IF(EDN(N).LT.0)EDN(N)=0.                                      
          REF(N)=AERU*AERV*(1.-EX2)/DENO                                
          TDF(N)=AERA/DENO*EX1                                          
          GOTO114                                                       
115       TDF(N)=1./(1.+SQRT(3.)*(1.-COSBAR(N))/2.*X)                   
          REF(N)=1.-TDF(N)                                              
          EUP(N)=0.                                                     
          EDN(N)=0.                                                     
114       CONTINUE                                                      
          IF(IEMSCT.EQ.2)THEN                                           
C                                                                       
C             CALCULATE PARAMETERS FOR SOLAR HYBRID MODIFIED            
C             DELTA EDDINGTON 2-STREAM APPROXIMATION                    
C                                                                       
              SMU=CSZEN(N)                                              
              B0=BETS(N)                                                
              OME0=OMEGA0(N)                                            
              IF(OME0.GE.0.999999)OME0=0.999999                         
              G=COSBAR(N)                                               
              Q=4.*(1.-G**2.*(1.-SMU))                                  
              GM1=(7.-3*G**2.-OME0*(4.+3*G)+OME0*G**2.*(4*B0+3*G))/Q    
              GM2=-(1.-G**2.-OME0*(4.-3*G)-OME0*G**2.*(4*B0+3*G-4.))/Q  
              IF(GM2.EQ.0.)GM2=1.E-10                                   
              SK=SQRT(GM1*GM1-GM2*GM2)                                  
              CS=OME0*(BETS(N)-SMU*(GM1*BETS(N)+GM2*(1.-BETS(N))))      
     1          /(1.-SK*SK*SMU*SMU)                                     
              YS=CS*(1.+SMU*GM1)-OME0*BETS(N)                           
              CS=SMU*CS                                                 
C                                                                       
C             CALCULATE UPWARD & DOWNWARD FLUX, EACH LAYER ALONE        
C                                                                       
              EKTL=SK*X                                                 
              IF(EKTL.LT.BIGEXP)THEN                                    
                  EKT=EXP(-EKTL)                                        
              ELSE                                                      
                  EKT=1./BIGNUM                                         
              ENDIF                                                     
              EKT2=EKT*EKT                                              
              IF(X.LT.SMU*BIGEXP)THEN                                   
                  ETMU=EXP(-X/SMU)                                      
              ELSE                                                      
                  ETMU=1./BIGNUM                                        
              ENDIF                                                     
              GMPSK=GM1+SK                                              
              GMMSK=GM1-SK                                              
              DENOM=(EKT2*GMMSK)-GMPSK                                  
              ASXP=-GMMSK*(YS*EKT-GMPSK*CS*ETMU)/DENOM                  
              ASNEW=-(-GMPSK*CS*ETMU*EKT+YS*EKT2)/DENOM                 
              BSNEW=(YS-CS*ETMU*EKT*GMMSK)/DENOM                        
              EUPS(N)=ASNEW+BSNEW+CS                                    
              EDNS(N)=(ASXP+BSNEW*GMPSK*EKT+YS*ETMU)/GM2                
              FC=1./(CSZEN(N))                                          
              REFS(N)=EUPS(N)*FC                                        
              XCSZEN=X/CSZEN(N)                                         
              IF(XCSZEN.LT.BIGEXP)THEN                                  
                  TDFS(N)=EDNS(N)*FC+EXP(-XCSZEN)                       
              ELSE                                                      
                  TDFS(N)=EDNS(N)*FC                                    
              ENDIF                                                     
              EUPS(N)=EUPS(N)*S0*STRN(M)                                
              EDNS(N)=EDNS(N)*S0*STRN(M)                                
          ENDIF                                                         
          DENO=1.-RUPCN*REF(N)                                          
          DENOS=1.-RUPCNS*REFS(N)                                       
C                                                                       
C         CALCULATE COMPOSITE FLUXES AND REFLECTANCES                   
C                                                                       
          EUPCN=EUP(N)+(EUPCN+EDN(N)*RUPCN)*TDF(N)/DENO                 
          EUPCNS=EUPS(N)+(EUPCNS+EDNS(N)*RUPCNS)*TDFS(N)/DENOS          
          RUPCNS=REFS(N)+TDFS(N)*RUPCNS*TDFS(N)/DENOS                   
          RUPCN=REF(N)+TDF(N)*RUPCN*TDF(N)/DENO                         
          EUPC(N)=EUPCN                                                 
          EUPCS(N)=EUPCNS                                               
          RUPC(N)=RUPCN                                                 
          RUPCS(N)=RUPCNS                                               
101   CONTINUE                                                          
C***********************************************************************
C*        NOW ADD DOWNWARD FROM TOP LAYER (N=1)                        *
C***********************************************************************
      EDNCN=0.                                                          
      EDNCNS=0.                                                         
      DNF(1,1)=EDNCN                                                    
      UPF(1,1)=EUPC(1)                                                  
      IF(IEMSCT.EQ.2)THEN                                               
          DNFS(1)=EDNCNS                                                
          UPFS(1)=EUPCS(1)                                              
      ENDIF                                                             
      RDNCN=0.                                                          
      RDNCNS=0.                                                         
      DO 130 N=2,NG                                                     
          M=N-1                                                         
          DENO=1.-RDNCN*REF(M)                                          
          DENOS=1.-RDNCNS*REFS(M)                                       
          EDNCN=EDN(M)+(EDNCN+EUP(M)*RDNCN)*TDF(M)/DENO                 
          RDNCN=REF(M)+TDF(M)*TDF(M)*RDNCN/DENO                         
          PEFUP=(EUPC(N)+EDNCN*RUPC(N))/DENO                            
          PEFDN=(EDNCN+EUPC(N)*RDNCN)/DENO                              
          IF(IEMSCT.EQ.2)THEN                                           
              EDNCNS=EDNS(M)+(EDNCNS+EUPS(M)*RDNCNS)*TDFS(M)/DENOS      
              RDNCNS=REFS(M)+TDFS(M)*TDFS(M)*RDNCNS/DENOS               
              PEFUPS=(EUPCS(N)+EDNCNS*RUPCS(N))/DENOS                   
              PEFDNS=(EDNCNS+EUPCS(N)*RDNCNS)/DENOS                     
              UPFS(N)=PEFUPS                                            
              DNFS(N)=PEFDNS                                            
          ENDIF                                                         
          UPF(1,N)=PEFUP                                                
          DNF(1,N)=PEFDN                                                
  130 CONTINUE                                                          
      DO 117 N=2,NG                                                     
          M=N-1                                                         
          UMF(M)=.5*(UPF(1,M)+UPF(1,N))                                 
          UMFS(M)=.5*(UPFS(M)+UPFS(N))                                  
          DMF(M)=.5*(DNF(1,M)+DNF(1,N))                                 
          DMFS(M)=.5*(DNFS(M)+DNFS(N))                                  
          UMB(N)=UPF(1,N)                                               
          UMBS(N)=UPFS(N)                                               
          DMB(M)=DNF(1,M)                                               
          DMBS(M)=DNFS(M)                                               
  117 CONTINUE                                                          
      FDNSRF=DNFS(NG)                                                   
      FDNTRF=DNF(1,NG)                                                  
      UMB(1)=UPF(1,1)                                                   
      UMBS(1)=UPFS(1)                                                   
      DMB(NG)=FDNTRF                                                    
      DMBS(NG)=FDNSRF                                                   
      SUN=S0                                                            
      RETURN                                                            
      END                                                               
      SUBROUTINE BMLOAD                                                 
C                                                                       
C  THIS SUBROUTINE (CALLED BY BMOD) LOADS BAND MODEL DATA FOR A SINGLE  
C  PARAMETER SET INTO THE MATRICES SD, OD AND ALF0 (FOUND IN /BMDCOM/). 
C                                                                       
C  ORIGINALLY, THE BAND MODEL PARAMETERS ARE STORE IN COMPACT PARAMETER 
C  SETS.  THERE ARE TWO TYPES OF PARAMETER SETS CORRESPONDING TO LINE   
C  CENTER AND LINE TAIL CONTRIBUTIONS.  IF IMOL(IP) IS 12 OR LESS, THE  
C  PARAMETER SET IP CONTAINS LINE CENTER MOLECULAR ABSORPTION INFO:     
C      IBIN(IP) = THE BIN NUMBER (MULTIPLIED BY IBNDWD GIVES THE        
C                                 FREQUENCY OF THE BIN CENTER)          
C      IMOL(IP) =  1 FOR H2O                                            
C               =  2 FOR CO2                                            
C               =  3 FOR O3                                             
C               =  4 FOR N2O                                            
C               =  5 FOR CO                                             
C               =  6 FOR CH4                                            
C               =  7 FOR O2                                             
C               =  8 FOR NO                                             
C               =  9 FOR SO2                                            
C               = 10 FOR NO2                                            
C               = 11 FOR NH3                                            
C               = 12 FOR HNO3                                           
C    SDZ(IT,IP) = AVERAGE MOLECULAR ABSORPTION COEFFICIENT PARAMETER    
C                 FOR THE IT'TH TEMPERATURE (CM-1/AMAGAT)               
C      IALF(IP) = LORENTZ LINE WIDTH PARAMETER AT STANDARD PRESSURE AND 
C                 TEMPERATURE (1.E-04 CM-1/ATM)                         
C    ODZ(IT,IP) = LINE DENSITY PARAMETER FOR THE TEMPERATURE IT (CM-1)  
C                                                                       
C  IF IMOL(IP) IS 12 OR MORE, THE PARAMETER SET IP CONTAINS CONTINUUM   
C  ABSORPTION INFORMATION AND                                           
C              IBIN(IP) = THE BIN NUMBER                                
C     IMOL(IP),IALF(IP) = 13 FOR  H2O TAIL CONTRIBUTION                 
C                       = 14 FOR  CO2 TAIL CONTRIBUTION                 
C                       = 15 FOR   O3 TAIL CONTRIBUTION                 
C                       = 16 FOR  N2O TAIL CONTRIBUTION                 
C                       = 17 FOR   CO TAIL CONTRIBUTION                 
C                       = 18 FOR  CH4 TAIL CONTRIBUTION                 
C                       = 19 FOR   O2 TAIL CONTRIBUTION                 
C                       = 20 FOR   NO TAIL CONTRIBUTION                 
C                       = 21 FOR  SO2 TAIL CONTRIBUTION                 
C                       = 22 FOR  NO2 TAIL CONTRIBUTION                 
C                       = 23 FOR  NH3 TAIL CONTRIBUTION                 
C                       = 24 FOR HNO3 TAIL CONTRIBUTION                 
C            SDZ(IT,IP) = MOLECULAR LINE WING CONTINUUM ABSORPTION      
C                         COEFFICIENT FOR SPECIES IMOL(IP) AT THE       
C                         IT'TH TEMPERATURE (CM-1/AMAGAT)               
C            ODZ(IT,IP) = MOLECULAR LINE WING CONTINUUM ABSORPTION      
C                         COEFFICIENT FOR SPECIES IALF(IP) AT THE       
C                         IT'TH TEMPERATURE (CM-1/AMAGAT)               
C                                                                       
      COMMON/BMDCOM/IBNDWD,IP,IPRM,IBLK,IBLOCK,IPARAM(232),NTEMP,       
     1  TBAND(5),SDZ(5,250),ODZ(5,250),IBIN(250),IMOL(250),IALF(250),   
     2  SD(5,24),OD(5,12),ALF0(12),WT(102),WTS(102,12),ITB,             
     3  JJ(102),FF(102),JJS(102,12),FFS(102,12),                        
     4          DOPFAC(12),DOP0(12),DOPSUM(12),COLSUM(12),ODSUM(12),    
     5  SDSUM(24)                                                       
C                                                                       
C  FILL THE SD, OD AND ALF0 MATRICES.                                   
C                                                                       
      IM=IMOL(IP)                                                       
      IF(IM.LE.12)THEN                                                  
C                                                                       
C         LINE CENTER CONTRIBUTIONS                                     
C                                                                       
          IMTAIL=IM+12                                                  
          DO 10 IT=1,NTEMP                                              
              SD(IT,IM)=SDZ(IT,IP)                                      
              OD(IT,IM)=ODZ(IT,IP)                                      
   10     SD(IT,IMTAIL)=0.                                              
          ALF0(IM)=1.E-04*IALF(IP)                                      
      ELSE                                                              
C                                                                       
C         LINE TAIL CONTRIBUTIONS                                       
C                                                                       
          JM=IALF(IP)                                                   
          IF(JM.EQ.0)THEN                                               
C                                                                       
C             ONE TAIL                                                  
C                                                                       
              DO 20 IT=1,NTEMP                                          
   20         SD(IT,IM)=SDZ(IT,IP)                                      
          ELSE                                                          
C                                                                       
C             TWO TAILS                                                 
C                                                                       
              DO 30 IT=1,NTEMP                                          
                  SD(IT,JM)=ODZ(IT,IP)                                  
   30         SD(IT,IM)=SDZ(IT,IP)                                      
          ENDIF                                                         
      ENDIF                                                             
      RETURN                                                            
      END                                                               
      SUBROUTINE BMOD(IK,IKMX,IPATH,IV,MSOFF,MXFREQ)                    
C                                                                       
C     THIS ROUTINE RETURNS THE TRANSMITTANCE AT A SPECTRAL RESOLUTION   
C     OF 1 CM-1 FOR THE "NSPEC" SPECIES                                 
C           K = ( 1, 13)      H2O LINE (CENTERS, TAILS)                 
C             = ( 2, 14)      CO2 LINE (CENTERS, TAILS)                 
C             = ( 3, 15)       O3 LINE (CENTERS, TAILS)                 
C             = ( 4, 16)      N2O LINE (CENTERS, TAILS)                 
C             = ( 5, 17)       CO LINE (CENTERS, TAILS)                 
C             = ( 6, 18)      CH4 LINE (CENTERS, TAILS)                 
C             = ( 7, 19)       O2 LINE (CENTERS, TAILS)                 
C             = ( 8, 20)       NO LINE (CENTERS, TAILS)                 
C             = ( 9, 21)      SO2 LINE (CENTERS, TAILS)                 
C             = (10, 22)      NO2 LINE (CENTERS, TAILS)                 
C             = (11, 23)      NH3 LINE (CENTERS, TAILS)                 
C             = (12, 24)     HNO3 LINE (CENTERS, TAILS)                 
C                                                                       
CC@   SAVE COLSUM,DOPSUM,ODSUM,SDSUM,DOP0,MOLTRN                        
      LOGICAL MODTRN,MOLTRN                                             
Crea0892      COMMON RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63)    
Crea0892COMMON IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12) 
Crea0892      COMMON ABSC(5,47),EXTC(5,47),ASYC(5,47),VX2(47),AWCCON(5) 
      COMMON /UNLABEL/ RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63), 
     +        IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12), 
     +        ABSC(5,47),EXTC(5,47),ASYC(5,47),VX2(47),AWCCON(5)        
      COMMON/SOLS/AH1(68),ARH(68),                                      
     1  WPATHS(102,63),PA(68),PR(68),ATHETA(35),ADBETA(35),LJ(69),      
     2  JTURN,ANGSUN,CSZEN(68),TBBYS(102,12),PATMS(102,12)              
      COMMON/CARD1/MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB,   
     1  MODTRN                                                          
      COMMON/BMDCOM/IBNDWD,IP,IPRM,IBLK,IBLOCK,IPARAM(232),NTEMP,       
     1  TBAND(5),SDZ(5,250),ODZ(5,250),IBIN(250),IMOL(250),IALF(250),   
     2  SD(5,24),OD(5,12),ALF0(12),WT(102),WTS(102,12),ITB,             
     3  JJ(102),FF(102),JJS(102,12),FFS(102,12),                        
     4          DOPFAC(12),DOP0(12),DOPSUM(12),COLSUM(12),ODSUM(12),    
     5  SDSUM(24)                                                       
C                                                                       
C     DOPFAC (UNITLESS) EQUALS SQRT(2 LN2 R T / M)/C WHERE T IS THE     
C     STANDARD TEMPERATURE (273.15K) AND M IS MOLECULAR WEIGHT.         
C                                                                       
      DATA DV/1./                                                       
      DATA COLSOL,DOPSOL,ODSOL,SDSOL,SDTSOL /5*0./                      
C                                                                       
C     IF IV IS BEYOND BAND MODEL TAPE RANGE, SET TRANSMITTANCES TO 1    
C                                                                       
      IF(IV.GT.MXFREQ)THEN                                              
          DO 10 K=1,NSPEC                                               
   10     TX(KPOINT(K))=1.                                              
          RETURN                                                        
      ENDIF                                                             
C                                                                       
C     IK=0 IS THE INITIAL CALL FOR EACH WAVENUMBER AND IS MADE PRIOR    
C     TO THE LOOP OVER LAYERS                                           
C                                                                       
      IF(IK.EQ.0)THEN                                                   
          IF(MSOFF.EQ.0)THEN                                            
C                                                                       
C             IS THERE MOLECULAR DATA FOR FREQUENCY IV?                 
C                                                                       
              IF(IBIN(IP).NE.IV)THEN                                    
                  MOLTRN=.FALSE.                                        
                  RETURN                                                
              ENDIF                                                     
              MOLTRN=.TRUE.                                             
C                                                                       
C             FOR EACH SPECIES, SET THE 'NO DATA' INDICATOR             
C                                                                       
              DO 20 IM=1,24                                             
   20         SD(1,IM)=0.                                               
C                                                                       
C             LOAD MOLECULAR DATA FOR PARAMETER SET IP                  
C                                                                       
   30         CALL BMLOAD                                               
C                                                                       
C             IS IP THE LAST PARAMETER SET IN BLOCK IBLK?               
C                                                                       
              IF(IP.LT.IPRM)THEN                                        
                  IP=IP+1                                               
                  IF(IBIN(IP).EQ.IV)GOTO30                              
              ELSE                                                      
C                                                                       
C                     READ THE NEXT BLOCK OF THE BAND MODEL TAPE        
C                                                                       
                  IF(IBLK.LT.IBLOCK)THEN                                
                      IBLK=IBLK+1                                       
                      IPRM=IPARAM(IBLK)                                 
                      READ(ITB)(IBIN(IP),IMOL(IP),                      
     1                  (SDZ(IT,IP),IT=1,NTEMP),IALF(IP),               
     2                  (ODZ(IT,IP),IT=1,NTEMP),IP=1,IPRM)              
                      IP=1                                              
                  ENDIF                                                 
              ENDIF                                                     
              DV=IBNDWD                                                 
C                                                                       
C             IF NO SOLAR PATH, ZERO SOLAR PATH VARIABLES               
C                                                                       
              IF(IEMSCT.NE.2)THEN                                       
                  COLSOL=0.                                             
                  DOPSOL=0.                                             
                  ODSOL=0.                                              
                  SDSOL=0.                                              
                  SDTSOL=0.                                             
              ENDIF                                                     
C                                                                       
C             ZERO LAYER LOOP QUANTITIES; DEFINE STANDARD DOPPLER WIDTH 
C                                                                       
              DO 40 K=1,NSPEC                                           
                  DOP0(K)=IV*DOPFAC(K)                                  
                  COLSUM(K)=0.                                          
                  DOPSUM(K)=0.                                          
                  ODSUM(K)=0.                                           
                  SDSUM(K)=0.                                           
   40         SDSUM(K+NSPEC)=0.                                         
          ELSE                                                          
              DO 50 K=1,NSPEC                                           
                  COLSUM(K)=0.                                          
                  DOPSUM(K)=0.                                          
                  ODSUM(K)=0.                                           
                  SDSUM(K)=0.                                           
   50         SDSUM(K+NSPEC)=0.                                         
          ENDIF                                                         
          RETURN                                                        
      ENDIF                                                             
      IF(.NOT.MOLTRN)THEN                                               
          DO 60 K=1,NSPEC                                               
   60     TX(KPOINT(K))=1.                                              
          RETURN                                                        
      ENDIF                                                             
C                                                                       
C     START CALCULATION OF MOLECULAR TRANSMITTANCE                      
C                                                                       
      IF(IEMSCT.EQ.0 .OR. IEMSCT.EQ.3)THEN                              
C         LOOP OVER ALL LAYERS FOR TRANSMITTANCE CALCULATIONS           
          LMAX=IKMX                                                     
      ELSEIF(IEMSCT.EQ.1)THEN                                           
C         LOOP OVER SINGLE LAYER FOR RADIANCE CALCULATION WITHOUT SOLAR 
          LMAX=IK                                                       
      ELSE                                                              
          GOTO(70,80,90),IPATH                                          
C         SKIP LAYER LOOP COMPLETELY FOR FIRST SOLAR PATH WITH IPATH=1  
   70     LMAX=0                                                        
          LS=1                                                          
          GOTO100                                                       
C         LOOP OVER SINGLE LAYER ONLY FOR "L PATH" WITH IPATH=2         
   80     LMAX=IK                                                       
          IF(MSOFF.GT.0)LMAX=0                                          
          LS=IK+1                                                       
          GOTO100                                                       
C         THERE IS NO SOLAR CONTRIBUTION FOR IPATH=3                    
   90     COLSOL=0.                                                     
          DOPSOL=0.                                                     
          ODSOL=0.                                                      
          SDSOL=0.                                                      
          SDTSOL=0.                                                     
C         LOOP OVER SINGLE LAYER IF NOT PERFORMED WHEN IPATH EQUALED 2  
          LMAX=0                                                        
          IF(MSOFF.GT.0)LMAX=IK                                         
  100     CONTINUE                                                      
      ENDIF                                                             
C                                                                       
C     START SPECIES LOOP                                                
C                                                                       
      DO 130 K=1,NSPEC                                                  
          KP=KPOINT(K)                                                  
          KTAIL=K+NSPEC                                                 
C                                                                       
C         CHECK IF LINE CENTER CONTRIBUTES TO ABSORPTION                
C                                                                       
          IF(SD(1,K).GT.0.)THEN                                         
C                                                                       
C             LOOP OVER LAYERS                                          
C                                                                       
              DO 110 L = IK,LMAX                                        
C                                                                       
C                 INTERPOLATE BAND MODEL PARAMETERS OVER TEMPERATURE    
C                                                                       
                  MSOFFL=MSOFF+L                                        
                  J=JJ(MSOFFL)                                          
                  F=FF(MSOFFL)                                          
                  JM1=J-1                                               
                  STORE=SD(J,K)                                         
                  ABSM=STORE+F*(SD(JM1,K)-STORE)                        
                  STORE=OD(J,K)                                         
                  DINV=STORE+F*(OD(JM1,K)-STORE)                        
                  STORE=SD(J,KTAIL)                                     
                  TAIL=STORE+F*(SD(JM1,KTAIL)-STORE)                    
C                                                                       
C                 PERFORM CURTIS-GODSON SUMS                            
C                                                                       
                  PL=PATM(MSOFFL)                                       
                  WL=WT(MSOFFL)                                         
                  STORE=WPATH(MSOFFL,KP)                                
                  SDSUM(KTAIL)=SDSUM(KTAIL)+STORE*TAIL*PL               
                  STORE=ABSM*STORE                                      
                  SDSUM(K)=SDSUM(K)+STORE                               
                  STORE=DINV*STORE                                      
                  ODSUM(K)=ODSUM(K)+STORE                               
                  DOPSUM(K)=DOPSUM(K)+STORE*WL                          
                  STORE=STORE*PL/WL                                     
                  IF(K.EQ.2)THEN                                        
                      COLSUM(K)=COLSUM(K)+STORE/SQRT(WL)                
                  ELSE                                                  
                      COLSUM(K)=COLSUM(K)+STORE                         
                  ENDIF                                                 
  110         CONTINUE                                                  
C                                                                       
C             IF SOLAR PATH, CALCULATE ADDITIONAL LAYER                 
C                                                                       
              IF(IEMSCT.EQ.2 .AND. IPATH.NE.3)THEN                      
                  MSOFFL=MSOFF+LS                                       
                  J=JJS(MSOFFL,K)                                       
                  F=FFS(MSOFFL,K)                                       
                  JM1=J-1                                               
                  STORE=SD(J,K)                                         
                  ABSM=STORE+F*(SD(JM1,K)-STORE)                        
                  STORE=OD(J,K)                                         
                  DINV=STORE+F*(OD(JM1,K)-STORE)                        
                  STORE=SD(J,KTAIL)                                     
                  TAIL=STORE+F*(SD(JM1,KTAIL)-STORE)                    
                  PL=PATMS(MSOFFL,K)                                    
                  WL=WTS(MSOFFL,K)                                      
                  STORE=WPATHS(MSOFFL,KP)                               
                  SDTSOL=STORE*TAIL*PL                                  
                  SDSOL=ABSM*STORE                                      
                  ODSOL=DINV*SDSOL                                      
                  DOPSOL=ODSOL*WL                                       
C                                                                       
C                              bug                                      
C                       division by 0.0 if no H2O                       
                  IF (ODSOL .GT. 0.0) THEN                              
                      COLSOL=ODSOL*PL/WL                                
                      IF(K.EQ.2)COLSOL=COLSOL/SQRT(WL)                  
                  ELSE                                                  
                      COLSOL=0.0                                        
                  END IF                                                
Crea1092                  COLSOL=ODSOL*PL/WL                            
Crea1092                  IF(K.EQ.2)COLSOL=COLSOL/SQRT(WL)              
              ENDIF                                                     
C                                                                       
C             CHECK FOR WEAK LINE                                       
C                                                                       
              STORE=SDSUM(K)+SDSOL                                      
              IF(STORE.LT.0.001)THEN                                    
                  TRANSM=1.-STORE                                       
              ELSE                                                      
C                                                                       
C                 CALCULATE EQUIVALENT WIDTH TRANSMITTANCE              
C                                                                       
                  ACBAR=ALF0(K)*(COLSUM(K)+COLSOL)/STORE                
                  ADBAR=DOP0(K)*(DOPSUM(K)+DOPSOL)/STORE                
                  ODBAR=(ODSUM(K)+ODSOL)/STORE                          
                  CALL BMTRAN(STORE,ACBAR,ADBAR,ODBAR,DV,TRANSM)        
              ENDIF                                                     
C                                                                       
C         ADD LINE TAIL CONTRIBUTIONS                                   
C                                                                       
              TX(KP)=TRANSM*EXP(-SDSUM(KTAIL)-SDTSOL)                   
C                                                                       
C         CHECK IF LINE TAILS CONTRIBUTE TO ABSORPTION                  
C                                                                       
          ELSEIF(SD(1,KTAIL).GT.0.)THEN                                 
C                                                                       
C             LOOP OVER LAYERS                                          
C                                                                       
              DO 120 L = IK,LMAX                                        
C                                                                       
C                 INTERPOLATE BAND MODEL PARAMETERS OVER TEMPERATURE    
C                                                                       
                  MSOFFL=MSOFF+L                                        
                  J=JJ(MSOFFL)                                          
                  STORE=SD(J,KTAIL)                                     
                  TAIL=STORE+FF(MSOFFL)*(SD(J-1,KTAIL)-STORE)           
C                                                                       
C                 PERFORM CURTIS-GODSON SUMS                            
C                                                                       
                  STORE=WPATH(MSOFFL,KP)*TAIL*PATM(MSOFFL)              
                  SDSUM(KTAIL)=SDSUM(KTAIL)+STORE                       
  120         CONTINUE                                                  
C                                                                       
C             IF SOLAR PATH, CALCULATE ADDITIONAL LAYER.                
C                                                                       
              IF(IEMSCT.EQ.2 .AND. IPATH.NE.3)THEN                      
                  MSOFFL=MSOFF+LS                                       
                  J=JJS(MSOFFL,K)                                       
                  STORE=SD(J,KTAIL)                                     
                  TAIL=STORE+FFS(MSOFFL,K)*(SD(J-1,KTAIL)-STORE)        
                  SDTSOL=WPATHS(MSOFFL,KP)*TAIL*PATMS(MSOFFL,K)         
              ENDIF                                                     
C                                                                       
C             CALCULATE LINE TAIL TRANSMITTANCE                         
C                                                                       
              TX(KP)=EXP(-SDSUM(KTAIL)-SDTSOL)                          
              IF(TX(KP) .GT. 1.)TX(KP) = 1.                             
          ELSE                                                          
              TX(KP)=1.                                                 
          ENDIF                                                         
  130 CONTINUE                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE BMTRAN(XSTAR,ACBAR,ADBAR,ODBAR,DV,TTRANS)              
C                                                                       
C ... EQUIVALENT WIDTH OF A VOIGT LINE IN A FINITE SPECTRAL INTERVAL.   
C     IT USES THE NASA CURVE-OF-GROWTH FORMULATION                      
C        XSTAR     AVERAGE VALUE OF  (S/D)U                             
C        ACBAR        "      "   "   LORENTZ LINE WIDTH / LINE DENSITY  
C        ADBAR        "      "   "   DOPPLER  "     "   "   "     "     
C        ODBAR        "      "   "   (1/D)                              
C         DV       WIDTH OF SPECTRAL INTERVAL                           
C         WSL      EQUIVALENT WIDTH OF A SINGLE LINE                    
C        TTRANS    TRANSMITTANCE OF THE INTERVAL                        
C                                                                       
C ... LIST DATA                                                         
C        P5LN2 = .5 * LN(2)                                             
C        C     = 2. / SQRT(PI)                                          
      DATA P5LN2,C/0.346573590,1.128379167/                             
C                                                                       
C     CALCULATE SINGLE (AVERAGE) LINE STRENGTH                          
      XS=XSTAR/ODBAR                                                    
C                                                                       
C ... CALCULATE (LORENTZ EQUIVALENT WIDTH / LINE STRENGTH) SQUARED      
      WL=4./(4.+XSTAR/ACBAR)                                            
C                                                                       
C ... CALCULATE (DOPPLER EQUIVALENT WIDTH / LINE STRENGTH) SQUARED      
      WD=XSTAR/ADBAR                                                    
      WD=P5LN2*WD*WD                                                    
      WD=LOG(1.+WD)/WD                                                  
C                                                                       
C ... INTERPOLATE TO FIND EQUIVALENT WIDTH                              
      STORE=WL*WD*(2.-WL)*(2.-WD)                                       
      IF(STORE.LT..01)THEN                                              
C         WSL=XS*SQRT(1.-(1.-WL)*(1.-WD)*(1.+.5*STORE))                 
          WSL=XS*SQRT((WL+WD-WL*WD)*(1.+.5*STORE)+.5*STORE)             
      ELSE                                                              
          STORE=(1.-WL)*(1.-WD)/SQRT(1.000001-STORE)                    
          IF(STORE.LT..01)THEN                                          
              WSL=XS*(1.-STORE)                                         
          ELSE                                                          
              WSL=XS*SQRT(1.-STORE)                                     
          ENDIF                                                         
      ENDIF                                                             
      WSL0=WSL                                                          
C                                                                       
C ... SUBTRACT TAIL CONTRIBUTION IF SIGNIFICANT                         
      IF(WL*XS*XS.GT..01)THEN                                           
          U0=C*SQRT(XS*ACBAR/ODBAR)/DV                                  
          WSL=WSL-DV*BMERFU(U0)                                         
      ENDIF                                                             
C                                                                       
C ... CALCULATE TRANSMITTANCE                                           
      IF(WSL.GE.DV)THEN                                                 
          TTRANS=0.                                                     
      ELSE                                                              
          TTRANS=(1.-WSL/DV)**(DV*ODBAR)                                
      ENDIF                                                             
C                                                                       
      RETURN                                                            
      END                                                               
      SUBROUTINE BS(I,A,B,N,S)                                          
C********************************************************************** 
      DIMENSION B(9)                                                    
C                                                                       
C             THIS SUBROUTINE DOES THE BINARY SEARCH FOR THE INDEX I    
C             SUCH THAT A IS IN BETWEEN B(I) AND B(I+1)                 
C             AND CALCULATES THE INTERPOLATION PARAMETER S              
C             SUCH THAT A=S*B(I+1)+(1.-S)*B(I)                          
C                                                                       
      I=1                                                               
      J=N                                                               
   10 M=(I+J)/2                                                         
      IF(A.LE.B(M)) THEN                                                
      J=M                                                               
      ELSE                                                              
      I=M                                                               
      END IF                                                            
      IF(J.GT.I+1) GO TO 10                                             
      S=(A-B(I))/(B(I+1)-B(I))                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE C4DTA (C4L,V)                                          
C **  N2 CONTINUUM                                                      
      COMMON /C4C8/ C4(133),C8(102)                                     
      C4L=0.                                                            
      IF(V.LT.2080.) RETURN                                             
      IF(V.GT.2740.) RETURN                                             
      IV=V                                                              
      L=(IV-2080)/5+1                                                   
      C4L=C4(L)                                                         
      RETURN                                                            
      END                                                               
      SUBROUTINE C6DTA(C6L,V)                                           
C     CALCULATES MOLECULAR RAYLEIGH SCATTERING COEFFICIENT              
C     USES APPROXIMATION OF SHETTLE ET AL., 1980 (APPL OPT, 2873-4)     
C        WITH THE DEPOLARIZATION = 0.0279 (INSTED OF 0.035)             
C     INPUT:  V = FREQUENCY IN WAVENUMBERS (CM-1)                       
C     OUTPUT: C6L = MOLECULAR SCATTERING COEFFICIENT (KM-1)             
C                    FOR TEMPERATURE = 273 K & PRESSURE 1 ATM.          
C                                                                       
      C6L=V**4/(9.38076E+18  -1.08426E+09 * V**2)                       
      RETURN                                                            
      END                                                               
      SUBROUTINE C8DTA (C8L,V)                                          
C **  OZONE U.V + VISIBLE                                               
      COMMON /C4C8/ C4(133),C8(102)                                     
      C8L=0.                                                            
      IF(V.LT.13000.) RETURN                                            
      IF(V.GT.50000.) RETURN                                            
      IV=V                                                              
      IF(IV.GT.24200.AND.IV.LT.27500) RETURN                            
      XI=(V-13000.0)/200.0+1.                                           
      IF(IV.GE.27500) XI=(V-27500.0)/500.+57.                           
      N=XI+1.001                                                        
      XD=XI-FLOAT(N)                                                    
      C8L=C8(N)+XD*(C8(N)-C8(N-1))                                      
      RETURN                                                            
      END                                                               
      SUBROUTINE CHECK(V,IV,KEY)                                        
C                                                                       
C      UNITS CONVERSION FOR P AND T                                     
C                                                                       
C     V = P OR T     AND  IV =JUNITP(I.E. MB,ATM,TORR)                  
C                            =JUNITT(I.E. DEG K OR C)                   
C                            =JUNITR(I.E. KM,M,OR CM)                   
C                                                                       
      DATA PMB/1013.25/,PTORR/760./,DEGK/273.15/                        
      IF(IV.LE.10) RETURN                                               
      GO TO(100,200,300) KEY                                            
C                                                                       
C      PRESSURE CONVERSIONS                                             
C                                                                       
  100 IF(IV.EQ.11)GO TO 110                                             
      IF(IV.EQ.12)GO TO 120                                             
      STOP'CHECK(P)'                                                    
  110 V=V*PMB                                                           
      RETURN                                                            
  120 V=V*PMB/PTORR                                                     
      RETURN                                                            
C                                                                       
C      TEMPERATURE COMVERSIONS                                          
C                                                                       
  200 IF(IV.GT.11)STOP'CHECK(T)'                                        
      V=V+DEGK                                                          
      RETURN                                                            
C                                                                       
C      RANGE CONVERSIONS                                                
C                                                                       
  300 IF(IV.EQ.11)GO TO 310                                             
      IF(IV.EQ.12)GO TO 320                                             
      STOP'CHECK(R)'                                                    
  310 V=V/1.E3                                                          
      RETURN                                                            
  320 V=V/1.E5                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE CIRR18                                                 
C*********************************************************************  
C*  ROUTINE TO SET CTHIK CALT CEXT  FOR  CIRRUS CLOUDS 18 19        **  
C*  INPUTS]                                                         **  
C*           CHTIK    -  CIRRUS THICKNESS (KM)                      **  
C*                       0 = USE THICKNESS STATISTICS               **  
C*                       .NE. 0 = USER DEFINES THICKNESS            **  
C*                                                                  **  
C*           CALT     -  CIRRUS BASE ALTITUDE (KM)                  **  
C*                       0 = USE CALCULATED VALUE                   **  
C*                       .NE. 0 = USER DEFINES BASE ALTITUDE        **  
C*                                                                  **  
C*           ICLD     -  CIRRUS PRESENCE FLAG                       **  
C*                       0 = NO CIRRUS                              **  
C*                       18  19 = USE CIRRUS PROFILE                **  
C*                                                                  **  
C*           MODEL    -  ATMOSPHERIC MODEL                          **  
C*                       1-5  AS IN MAIN PROGRAM                    **  
C*                       MODEL = 0,6,7 NOT USED SET TO 2            **  
C*                                                                  **  
C*  OUTPUTS]                                                        **  
C*         CTHIK        -  CIRRUS THICKNESS (KM)                    **  
C*         CALT         -  CIRRUS BASE ALTITUDE (KM)                **  
C          CEXT IS THE EXTINCTION COEFFIENT(KM-1) AT 0.55               
C               DEFAULT VALUE 0.14*CTHIK                                
C*                                                                  **  
C*********************************************************************  
C                                                                       
      COMMON /CARD1/ MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB  
     1  ,MODTRN                                                         
      LOGICAL MODTRN                                                    
      COMMON /CARD2/ IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,VIS,WSS,WHH,   
     1    RAINRT                                                        
      COMMON /CARD2A/ CTHIK,CALT,CEXT                                   
Crea0892      COMMON RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63)    
Crea0892C     COMMON             WPATH(68, 63),TBBY(68)                 
Crea0892COMMON IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12) 
      COMMON /UNLABEL/ RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63), 
     +        IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12), 
     +        ABSC(5,47),EXTC(5,47),ASYC(5,47),VX2(47),AWCCON(5)        
      COMMON /CNTRL/ KMAX,M,IKMAX,NL,ML,IKLO,ISSGEO,IMULT               
C     COMMON /CARD4/ V1,V2,DV                                           
      COMMON /MODEL/ Z (34),PM(34),TM(34),RFNDX(34),DENSTY(63,34),      
     1 CLDAMT(34),RRAMT(34),EQLWC(34),HAZEC(34)                         
      COMMON /IFIL/ IRD,IPR,IPU,NPR,IPR1                                
      DIMENSION CBASE(5,2),TSTAT(11),PTAB(5),CAMEAN(5)                  
      DIMENSION CBASE1(5),CBASE2(5)                                     
      EQUIVALENCE (CBASE1(1),CBASE(1,1)),(CBASE2(1),CBASE(1,2))         
C                                                                       
      DATA  CAMEAN           / 11.0, 10.0, 8.0, 7.0, 5.0 /              
      DATA  PTAB           / 0.8, 0.4, 0.5, 0.45, 0.4/                  
      DATA  CBASE1            / 7.5, 7.3, 4.5, 4.5, 2.5 /               
      DATA  CBASE2            /16.5,13.5,14.0, 9.5,10.0 /               
      DATA  TSTAT             / 0.0,.291,.509,.655,.764,.837,.892,      
     + 0.928, 0.960, 0.982, 1.00 /                                      
      MDL = MODEL                                                       
C                                                                       
C  CHECK IF USER WANTS TO USE A THICKNESS VALUE HE PROVIDES             
C  DEFAULTED MEAN CIRRUS THICKNESS IS 1.0KM  OR 0.2 KM.                 
C                                                                       
      IF ( CTHIK .GT. 0.0 ) GO TO 25                                    
      IF(ICLD.EQ.18) CTHIK=1.0                                          
      IF(ICLD.EQ.19) CTHIK=0.2                                          
25    IF(CEXT .EQ. 0.) CEXT = 0.14 * CTHIK                              
C                                                                       
C  BASE HEIGHT CALCULATIONS                                             
C                                                                       
      IF ( MODEL .LT. 1  .OR.  MODEL .GT. 5 ) MDL = 2                   
C                                                                       
      HMAX = CBASE(MDL,2) - CTHIK                                       
C     BRANGE = HMAX - CBASE(MDL,1)                                      
      IF ( CALT .GT. 0.0 ) GO TO 27                                     
      CALT = CAMEAN(MDL)                                                
C                                                                       
 27   IF(ICLD. EQ. 18) WRITE(IPR,1219)                                  
1219  FORMAT(15X,'CIRRUS ATTENUATION INCLUDED   (STANDARD CIRRUS)')     
      IF(ICLD. EQ. 19) WRITE(IPR,1220)                                  
1220  FORMAT(15X,'CIRRUS ATTENUATION INCLUDED   (THIN     CIRRUS)')     
      WRITE(IPR,1221) CTHIK                                             
1221  FORMAT(15X,'CIRRUS THICKNESS ',                                   
     X F10.3,'KM')                                                      
      WRITE(IPR,1224)CALT                                               
1224  FORMAT(15X,'CIRRUS BASE ALTITUDE ',                               
     X F10.3,' KM')                                                     
       WRITE(IPR,1226) CEXT                                             
1226    FORMAT(15X,'CIRRUS PROFILE EXTINCT ',F10.3)                     
C                                                                       
C       END OF CIRRUS MODEL SET UP                                      
      RETURN                                                            
      END                                                               
      SUBROUTINE CIRRUS(CTHIK,CALT,ISEED,CPROB,CEXT)                    
C*********************************************************************  
C*  ROUTINE TO GENERATE ALTITUDE PROFILES OF CIRRUS DENSITY         **  
C*  PROGRAMMED BY   M.J. POST                                       **  
C*                  R.A. RICHTER        NOAA/WPL                    **  
C*                                      BOULDER, COLORADO           **  
C*                                      01/27/1981                  **  
C*                                                                  **  
C*  INPUTS!                                                         **  
C*           CHTIK    -  CIRRUS THICKNESS (KM)                      **  
C*                       0 = USE THICKNESS STATISTICS               **  
C*                       .NE. 0 = USER DEFINES THICKNESS            **  
C*                                                                  **  
C*           CALT     -  CIRRUS BASE ALTITUDE (KM)                  **  
C*                       0 = USE CALCULATED VALUE                   **  
C*                       .NE. 0 = USER DEFINES BASE ALTITUDE        **  
C*                                                                  **  
C*           ICIR     -  CIRRUS PRESENCE FLAG                       **  
C*                       0 = NO CIRRUS                              **  
C*                       .NE. 0 = USE CIRRUS PROFILE                **  
C*                                                                  **  
C*           MODEL    -  ATMOSPHERIC MODEL                          **  
C*                       1-5  AS IN MAIN PROGRAM                    **  
C*                       MODEL = 0,6,7 NOT USED SET TO 2            **  
C*                                                                  **  
C*           ISEED    -  RANDOM NUMBER INITIALIZATION FLAG.         **  
C*                       0 = USE DEFAULT MEAN VALUES FOR CIRRUS     **  
C*                       .NE. 0 = INITIAL VALUE OF SEED FOR RANF    **  
C*                       FUNCTION. CHANGE SEED VALUE EACH RUN FOR   **  
C*                       DIFFERENT RANDOM NUMBER SEQUENCES. THIS    **  
C*                       PROVIDES FOR STATISTICAL DETERMINATION     **  
C*                       OF CIRRUS BASE ALTITUDE AND THICKNESS.     **  
C*                                                                  **  
C*  OUTPUTS!                                                        **  
C*         CTHIK        -  CIRRUS THICKNESS (KM)                    **  
C*         CALT         -  CIRRUS BASE ALTITUDE (KM)                **  
C*         DENSTY(16,I) -  ARRAY, ALTITUDE PROFILE OF CIRRUS DENSITY**  
C*         CPROB        -  CIRRUS PROBABILITY                       **  
C*                                                                  **  
C*********************************************************************  
C                                                                       
      COMMON /CARD1/ MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB  
     1  ,MODTRN                                                         
      LOGICAL MODTRN                                                    
      COMMON /CARD2/ IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,VIS,WSS,WHH,   
     1    RAINRT                                                        
Crea0892      COMMON RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63)    
Crea0892C     COMMON             WPATH(68, 63),TBBY(68)                 
Crea0892COMMON IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12) 
Crea0892      COMMON ABSC(5,47),EXTC(5,47),ASYC(5,47),VX2(47),AWCCON(5) 
      COMMON /UNLABEL/ RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63), 
     +        IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12), 
     +        ABSC(5,47),EXTC(5,47),ASYC(5,47),VX2(47),AWCCON(5)        
      COMMON /CNTRL/ KMAX,M,IKMAX,NL,ML,IKLO,ISSGEO,IMULT               
C     COMMON /CARD4/ V1,V2,DV                                           
      COMMON /MODEL/ Z(34),PM(34),TM(34),RFNDX(34),DENSTY(63,34),       
     1 CLDAMT(34),RRAMT(34),EQLWC(34),HAZEC(34)                         
      DIMENSION CBASE(5,2),TSTAT(11),PTAB(5),CAMEAN(5)                  
      DIMENSION CBASE1(5),CBASE2(5)                                     
      EQUIVALENCE (CBASE1(1),CBASE(1,1)),(CBASE2(1),CBASE(1,2))         
C                                                                       
      DATA  CAMEAN           / 11.0, 10.0, 8.0, 7.0, 5.0 /              
      DATA  PTAB           / 0.8, 0.4, 0.5, 0.45, 0.4/                  
      DATA  CBASE1            / 7.5, 7.3, 4.5, 4.5, 2.5 /               
      DATA  CBASE2            /16.5,13.5,14.0, 9.5,10.0 /               
      DATA  TSTAT             / 0.0,.291,.509,.655,.764,.837,.892,      
     + 0.928, 0.960, 0.982, 1.00 /                                      
C                                                                       
C  SET CIRRUS PROBABILITY AND PROFILE TO ALL ZEROES                     
C                                                                       
      CPROB = 0.0                                                       
      MDL = MODEL                                                       
C                                                                       
      DO 10 I=1,34                                                      
10    DENSTY(16,I)=0.                                                   
C                                                                       
C  CHECK IF USER WANTS TO USE A THICKNESS VALUE HE PROVIDES, CALCULATE  
C  A STATISTICAL THICKNESS, OR USE A MEAN THICKNESS (ISEED = 0).        
C  DEFAULTED MEAN CIRRUS THICKNESS IS 1.0 KM.                           
C                                                                       
      IF ( CTHIK .GT. 0.0 ) GO TO 25                                    
      IF ( ISEED .NE. 0 ) GO TO 15                                      
      CTHIK = 1.0                                                       
      GO TO 25                                                          
C                                                                       
C  CALCULATE CLOUD THICKNESS USING LOWTRAN CIRRUS THICKNESS STATISTICS  
C  NOTE - THIS ROUTINE USES A UNIFORM RANDOM NUMBER GENERATOR           
C  FUNCTION (RANF) WHICH RETURNS A NUMBER BETWEEN 0 AND 1.              
C  THIS FEATURE IS MACHINE DEPENDENT!!                                  
C                                                                       
Crea0892   15 CALL RANSET(ISEED)                                        
   15 CONTINUE                                                          
      IDUM = ISEED                                                      
      URN = RANFUN(IDUM)                                                
      DO 20 I = 1, 10                                                   
         IF (URN .GE. TSTAT(I) .AND. URN .LT. TSTAT(I+1)) CTHIK = I-1   
   20 CONTINUE                                                          
      CTHIK = CTHIK / 2.0  +  RANFUN(IDUM) / 2.0                        
C                                                                       
C  DENCIR IS CIRRUS DENSITY IN KM-1                                     
C                                                                       
25    IF(CEXT .GT. 0.) THEN                                             
           DENCIR = CEXT / 2.                                           
      ELSE                                                              
           DENCIR = 0.07 * CTHIK                                        
      ENDIF                                                             
C                                                                       
C  BASE HEIGHT CALCULATIONS                                             
C                                                                       
      IF ( MODEL .LT. 1  .OR.  MODEL .GT. 5 ) MDL = 2                   
      CPROB = 100.0 * PTAB(MDL)                                         
C                                                                       
      HMAX = CBASE(MDL,2) - CTHIK                                       
      BRANGE = HMAX - CBASE(MDL,1)                                      
      IF ( CALT .GT. 0.0 ) GO TO 27                                     
      IF ( ISEED .NE. 0 ) GO TO 26                                      
      CALT = CAMEAN(MDL)                                                
      GO TO 27                                                          
   26 CALT = BRANGE * RANFUN(IDUM)+ CBASE(MDL,1)                        
C                                                                       
C  PUT CIRRUS DENSITY IN CORRECT ALTITUDE BINS. IF MODEL = 7,           
C  INTERPOLATE EH(16,I) FOR NON-STANDARD ALTITUDE BOUNDARIES.           
C                                                                       
   27 IF(MODEL .EQ. 7) GO TO 60                                         
      IV1=INT(CALT )                                                    
      IV2=INT(CALT+CTHIK )                                              
      DO 30 I = 2, 16                                                   
         IF(I .GE. IV1 .AND. I .LE. IV2) DENSTY(16,I+1) =  DENCIR       
   30 CONTINUE                                                          
C                                                                       
C  ADJUST FIRST AND LAST CIRRUS LEVEL IF CLOUD DOES NOT ENTIRELY        
C  FILL EACH LEVEL.                                                     
C                                                                       
      IHGT1 = INT( CALT )                                               
      IHGT2 = INT( CALT + CTHIK)                                        
      IF( IHGT1 . NE . IHGT2 ) GO TO 35                                 
      DENSTY(16,IHGT1+1) = DENSTY( 16,IHGT1+1)*CTHIK                    
      RETURN                                                            
   35 PCT1  = 1.0 - ( CALT - IHGT1 )                                    
      DENSTY(16,IHGT1+1) = DENSTY(16,IHGT1+1) * PCT1                    
      PCT2 =  ( CALT + CTHIK) - IHGT2                                   
      DENSTY(16,IHGT2+1) = DENSTY(16,IHGT2+1) * PCT2                    
      RETURN                                                            
C                                                                       
C  INTERPOLATE DENSTY(16,I) FOR USER SUPPLIED ALTITUDE BOUNDARIES       
C                                                                       
   60 TOP = CALT + CTHIK                                                
      BOTTOM = CALT                                                     
      IF (TOP .LT. Z(1)) RETURN                                         
      IF (BOTTOM .GT. Z(ML)) RETURN                                     
      IML = ML - 1                                                      
      DO 70 I=1,IML                                                     
         ZMIN = Z(I)                                                    
         ZMAX = Z(I+1)                                                  
         DENOM = ZMAX - ZMIN                                            
         IF(BOTTOM.LE.ZMIN .AND. TOP.GE.ZMAX) DENSTY(16,I) = DENCIR     
         IF(BOTTOM.GE.ZMIN .AND. TOP.LT.ZMAX)                           
     +        DENSTY(16,I) = DENCIR * CTHIK/DENOM                       
         IF(BOTTOM.GE.ZMIN .AND. TOP.GE.ZMAX .AND. BOTTOM.LT.ZMAX)      
     +        DENSTY(16,I) = DENCIR * (ZMAX - BOTTOM)/ DENOM            
         IF(BOTTOM.LT.ZMIN .AND. TOP.LE.ZMAX .AND.TOP.GT.ZMIN)          
     +        DENSTY(16,I) = DENCIR * (TOP - ZMIN) / DENOM              
   70 CONTINUE                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE CLDPRF (K,ICLD,IHA1,IC1)                               
C***********************************************************************
C     WILL COMPUTE DENSITY    PROFILES FOR CLOUDS                       
C***********************************************************************
      REAL MDLWC                                                        
Crea0892      COMMON RELHUM(34),WHNO3(34),ICH(4),VH(17),TX(63),W(63)    
Crea0892C     COMMON             WPATH(68, 63),TBBY(68)                 
Crea0892COMMON IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12) 
Crea0892      COMMON ABSC(5,47),EXTC(5,47),ASYM(5,47),VX2(47),AWCCON(5) 
      COMMON /UNLABEL/ RELHUM(34),WHNO3(34),ICH(4),VH(17),TX(63),W(63), 
     +        IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12), 
     +        ABSC(5,47),EXTC(5,47),ASYM(5,47),VX2(47),AWCCON(5)        
      COMMON/MODEL/ ZMDL(34),PM(34),TM(34),RFNDX(34),DENSTY(63,34),     
     1 CLDAMT(34),RRAMT(34),EQLWC(34),HAZEC(34)                         
      DIMENSION RHZONE(4)                                               
      DIMENSION ELWCR(4),ELWCU(4),ELWCM(4),ELWCT(4)                     
      DATA RHZONE/0.,70.,80.,99./                                       
      DATA ELWCR/3.517E-04,3.740E-04,4.439E-04,9.529E-04/               
      DATA ELWCM/4.675E-04,6.543E-04,1.166E-03,3.154E-03/               
      DATA ELWCU/3.102E-04,3.802E-04,4.463E-04,9.745E-04/               
      DATA ELWCT/1.735E-04,1.820E-04,2.020E-04,2.408E-04/               
      DATA AFLWC/1.295E-02/,RFLWC/1.804E-03/,CULWC/7.683E-03/           
      DATA ASLWC/4.509E-03/,STLWC/5.272E-03/,SCLWC/4.177E-03/           
      DATA SNLWC/7.518E-03/,BSLWC/1.567E-04/,FVLWC/5.922E-04/           
      DATA AVLWC/1.675E-04/,MDLWC/4.775E-04/                            
      DATA TNLWC/3.446E-3/ ,TKLWC/5.811E-2/                             
      IF(CLDAMT(K).LE.0.) GO TO 15                                      
      IH=ICLD                                                           
      IF(IH .EQ. 0) GO TO 200                                           
      IF(ICLD .EQ. 18) THEN                                             
           HAZEC(K) = CLDAMT(K)/TNLWC                                   
           RETURN                                                       
      ENDIF                                                             
      IF(ICLD .EQ. 19) THEN                                             
           HAZEC(K) = CLDAMT(K)/TKLWC                                   
           RETURN                                                       
      ENDIF                                                             
      IF(ICLD .EQ. 20) THEN                                             
           RETURN                                                       
      ENDIF                                                             
      GO TO(114,115,116,117,118,116,118,118,114,114,114),IH             
114   HAZEC(K)=CLDAMT(K)/CULWC                                          
      RETURN                                                            
115   HAZEC(K)=CLDAMT(K)/ASLWC                                          
      RETURN                                                            
116   HAZEC(K)=CLDAMT(K)/STLWC                                          
      RETURN                                                            
117   HAZEC(K)=CLDAMT(K)/SCLWC                                          
      RETURN                                                            
118   HAZEC(K)=CLDAMT(K)/SNLWC                                          
 15   RETURN                                                            
200   IF(IHA1 .GT. 0) GO TO 205                                         
      PRINT*,' WARNING ICLD NOT SET '                                   
      RETURN                                                            
205   CONTINUE                                                          
      WRH = RELHUM(K)                                                   
C                                                                       
      M = IC1                                                           
      IF (ICH(M).EQ.6.AND.M.NE.1) WRH=70.                               
C     THIS CODING  DOES NOT ALLOW TROP RH DEPENDENT  ABOVE EH(7,I)      
C     DEFAULTS TO TROPOSPHERIC AT 70. PERCENT                           
      DO 210 I=2,4                                                      
      IF (WRH.LT.RHZONE(I)) GO TO 215                                   
  210 CONTINUE                                                          
      I=4                                                               
  215 II=I-1                                                            
      IF(WRH.GT.0.0.AND.WRH.LT.99.)X=ALOG(100.0-WRH)                    
      X1=ALOG(100.0-RHZONE(II))                                         
      X2=ALOG(100.0-RHZONE(I))                                          
      IF (WRH.GE.99.0) X=X2                                             
      IF (WRH.LE.0.0) X=X1                                              
      ITA=ICH(M)                                                        
      IF(ITA.EQ.3. AND. M.EQ.1) GO TO 218                               
      IF(ITA.GT.6) GO TO 245                                            
CC                                                                      
CC    MICROWAVE                                                         
      N = 41                                                            
CC                                                                      
218   IF(N.GE.41. AND. ITA.EQ.3) ITA = 4                                
C     RH DEPENDENT AEROSOLS                                             
      GO TO (220,220,222,225,230,235), ITA                              
 220  E2=ALOG(ELWCR(I))                                                 
      E1=ALOG(ELWCR(II))                                                
      GO TO 240                                                         
 222  IF(M.GT.1) GO TO 225                                              
      E2=ALOG(ELWCM(I))                                                 
      E1=ALOG(ELWCM(II))                                                
      GO TO 240                                                         
  225 E2=ALOG(ELWCM(I))                                                 
      E1=ALOG(ELWCM(II))                                                
      GO TO 240                                                         
  230 E2=ALOG(ELWCU(I))                                                 
      E1=ALOG(ELWCU(II))                                                
      GO TO 240                                                         
  235 E2=ALOG(ELWCT(I))                                                 
      E1=ALOG(ELWCT(II))                                                
  240 EC=E1+(E2-E1)*(X-X1)/(X2-X1)                                      
      CON=EXP(EC)                                                       
      HAZEC(K) = CLDAMT(K)/CON                                          
      RETURN                                                            
  245 IF (ITA.GT.19) GO TO 275                                          
      ITC=ICH(M)-7                                                      
      IF (ITC.LT.1) RETURN                                              
      GO TO (250,255,280,260,265,270,265,270,260,260,270,275), ITC      
250   CON=AFLWC                                                         
      GO TO 280                                                         
255   CON=RFLWC                                                         
      GO TO 280                                                         
260   CON=BSLWC                                                         
      GO TO 280                                                         
265   CON=AVLWC                                                         
      GO TO 280                                                         
270   CON=FVLWC                                                         
      GO TO 280                                                         
275   CON=MDLWC                                                         
280   CONTINUE                                                          
      HAZEC(K) = CLDAMT(K)/CON                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE CONVRT (P,T)                                           
C*************************************************************          
C                                                                       
C        WRITTEN APR, 1985 TO ACCOMMODATE 'JCHAR' DEFINITIONS FOR       
C        UNIFORM DATA INPUT -                                           
C                                                                       
C      JCHAR    JUNIT                                                   
C                                                                       
C    " ",A       10    VOLUME MIXING RATIO (PPMV)                       
C        B       11    NUMBER DENSITY (CM-3)                            
C        C       12    MASS MIXING RATIO (GM(K)/KG(AIR))                
C        D       13    MASS DENSITY (GM M-3)                            
C        E       14    PARTIAL PRESSURE (MB)                            
C        F       15    DEW POINT TEMP (TD IN T(K)) - H2O ONLY           
C        G       16     "    "     "  (TD IN T(C)) - H2O ONLY           
C        H       17    RELATIVE HUMIDITY (RH IN PERCENT) - H2O ONLY     
C        I       18    AVAILABLE FOR USER DEFINITION                    
C        J       19    REQUEST DEFAULT TO SPECIFIED MODEL ATMOSPHERE    
C                                                                       
C***************************************************************        
C                                                                       
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1                                 
      COMMON /CONSTN/ PZERO,TZERO,AVOGAD,ALOSMT,GASCON,PLANK,BOLTZ,     
     1    CLIGHT,ADCON,ALZERO,AVMWT,AIRMWT,AMWT(35)                     
      COMMON /CARD1B/ JUNITP,JUNITT,JUNIT1(13),WMOL1(12),WAIR1,JLOW     
      DATA C1/18.9766/,C2/-14.9595/,C3/-2.43882/                        
C     DENSAT(ATEMP) = ATEMP*B*EXP(C1+C2*ATEMP+C3*ATEMP**2)*1.0E-6       
C*****                                                                  
      RHOAIR = ALOSMT*(P/PZERO)*(TZERO/T)                               
C     NOPRNT = 0                                                        
C     A = TZERO/T                                                       
      DO 200 K = 1,12                                                   
      B = AVOGAD/AMWT(K)                                                
      R = AIRMWT/AMWT(K)                                                
      JUNIT = JUNIT1(K)                                                 
      WMOL  = WMOL1(K)                                                  
      IF(K.NE.1) GO TO 100                                              
      CALL WATVAP(P,T)                                                  
      GO TO 200                                                         
100   CONTINUE                                                          
      IF(JUNIT.GT.10) GO TO 110                                         
C*****GIVEN VOL. MIXING RATIO                                           
CC    WMOL1(K)=WMOL*RHOAIR*1.E-6                                        
      GO TO 200                                                         
110   IF(JUNIT.NE.11) GO TO 120                                         
C*****GIVEN NUMBER DENSITY (CM-3)                                       
CC    WMOL1(K) = WMOL                                                   
      WMOL1(K)=WMOL/(RHOAIR*1.E-6)                                      
      GO TO 200                                                         
120   CONTINUE                                                          
      IF(JUNIT.NE.12) GO TO 130                                         
C*****GIVEN MASS MIXING RATIO (GM KG-1)                                 
CC    WMOL1(K)= R*WMOL*1.0E-3*RHOAIR                                    
      WMOL1(K)= R*WMOL*1.0E+3                                           
      GO TO 200                                                         
130   CONTINUE                                                          
      IF(JUNIT.NE.13) GO TO 140                                         
C*****GIVEN MASS DENSITY (GM M-3)                                       
CC    WMOL1(K) = B*WMOL*1.0E-6                                          
      WMOL1(K) = B*WMOL/RHOAIR                                          
      GO TO 200                                                         
140   CONTINUE                                                          
      IF(JUNIT.NE.14) GO TO 150                                         
C*****GIVEN  PARTIAL PRESSURE (MB)                                      
CC    WMOL1(K)= ALOSMT*(WMOL/PZERO)*(TZERO/T)                           
      WTEM    = ALOSMT*(WMOL/PZERO)*(TZERO/T)                           
      WMOL1(K)=WTEM/(RHOAIR*1.E-6)                                      
      GO TO 200                                                         
150   CONTINUE                                                          
      IF(JUNIT.GT.14) GO TO 299                                         
200   CONTINUE                                                          
      RETURN                                                            
299   CONTINUE                                                          
      WRITE(IPR,951)JUNIT                                               
  951 FORMAT(/,'   **** ERROR IN CONVERT ****, JUNIT = ',I5)            
      STOP                                                              
      END                                                               
      SUBROUTINE CXDTA (CPRIME,V,IWL,IWH,CP,IND)                        
C     THIS SUBROUTINE FINDS THE CPRIME FOR THE WAVENUMBER V.            
C     INPUT:         V --- WAVENUMBER                                   
C            (IWL,IWH) --- WAVENUMBER PAIR SPECIFIES THE ABSORPTION     
C                          REGION. BOTH ARE ARRAYS AND TERMINATED       
C                          WITH THE VALUE -999                          
C                   CP --- ARRAY CONTAINS THE CPRIMES                   
C     OUTPUT:   CPRIME --- THE CPRIME CORRESPONDING TO V                
C     I/O:         IND --- INDICATOR INDICATES THE ABSORPTION REGION    
C                          WHERE THE WAVENUMBER IS EXPECTED TO BE IN    
C                          OR NEARBY (IT SERVES FOR THE PURPOSE         
C                          TO SPEED UP THE SEARCHING PROCESS)           
      DIMENSION IWL(*),IWH(*),CP(*)                                     
      IV=V                                                              
      CPRIME=-20.0                                                      
      IF (IWL(IND+1) .EQ. -999 .AND. IV .GT. IWH(IND)) RETURN           
      IF (IV .LT. IWL(1)) RETURN                                        
      IC=0                                                              
  100 IF (IV .GE. IWL(IND) .AND. IV .LE. IWH(IND)) GO TO 200            
      IF (IV .GT. IWH(IND) .AND. IV .LT. IWL(IND+1)) RETURN             
      IND=IND+1                                                         
      IF (IWL(IND) .NE. -999) GO TO 100                                 
      IND=IND-1                                                         
      IF (IV .GT. IWH(IND)) RETURN                                      
      IND=1                                                             
      GO TO 100                                                         
  200 IF (IND .EQ. 1) GO TO 400                                         
      INDM1=IND-1                                                       
      DO 300 I=1,INDM1                                                  
        IC=IC+(IWH(I)-IWL(I))/5+1                                       
  300 CONTINUE                                                          
  400 IC=IC+(IV-IWL(IND))/5+1                                           
      CPRIME=CP(IC)                                                     
      RETURN                                                            
      END                                                               
      FUNCTION   DBLTX(W,CPRIME,QA)                                     
      DBLTX=1.0                                                         
      IF (W .LT. 1.0E-20) RETURN                                        
      IF (CPRIME .LT. -20) RETURN                                       
      WS=ALOG10(W)+CPRIME                                               
      QAWS=QA*WS                                                        
      IF (QAWS .LT. 2.0) GO TO 100                                      
      DBLTX=0.0                                                         
      RETURN                                                            
  100 IF (QAWS .GT. -6.0) GO TO 200                                     
      DBLTX=1.0                                                         
      RETURN                                                            
  200 DBLTX=EXP(-10**QAWS)                                              
      RETURN                                                            
      END                                                               
      SUBROUTINE DEBYE(WAVL,TC,KEY,RE,AI)                               
CCC                                                                     
CCC    CALCULATES WAVENUMBER DEPENDENCE OF DIELECTRIC CONSTANT          
CCC    OF WATER                                                         
CCC                                                                     
      COMMON /CNSTNS/ PI,CA,DEG,GCAIR,BIGNUM,BIGEXP                     
      T=TC+273.15                                                       
      IF(KEY.NE.0) GO TO 1                                              
      GO TO 2                                                           
    1 EFIN=5.27137+.0216474*TC-.00131198*TC*TC                          
      ALPHA=-16.8129/T+.0609265                                         
      TAU=.00033836*EXP(2513.98/T)                                      
      SIG=12.5664E+08                                                   
      ES=78.54*(1.-.004579*(TC-25.)+.0000119*(TC-25.)**2-.000000028*    
     1(TC-25.)**3)                                                      
      GO TO 3                                                           
    2 EFIN=3.168                                                        
      ALPHA=.00023*TC*TC+.0052*TC+.288                                  
      T125 = 12500./(T*1.9869)                                          
      IF(T125. LE.BIGEXP) THEN                                          
           SIG=1.26*EXP(-T125)                                          
      ELSE                                                              
           SIG = 0.                                                     
      ENDIF                                                             
      TAU=9.990288E-05*EXP(13200./(T*1.9869))                           
      ES=3.168+.15*TC*TC+2.5*TC+200.                                    
    3 C1=TAU/WAVL                                                       
CCC                                                                     
CCC    TEMPORARY FIX TO CLASSICAL DEBYE EQUATION                        
CCC    TO HANDLE ZERO CM-1 PROBLEM                                      
CCC                                                                     
      ALPHA=0.0                                                         
      SIG=0.0                                                           
CCC                                                                     
      C2=1.5708*ALPHA                                                   
      DEM=1.+2.*C1**(1.-ALPHA)*SIN(C2)+C1**(2.*(1.-ALPHA))              
      E1=EFIN+(ES-EFIN)*(1.+(C1**(1.-ALPHA)*SIN(C2)))/DEM               
      IF(KEY.NE.0.AND.WAVL.GE.300.) E1=87.53-0.3956*TC                  
      IF(KEY.NE.0 .AND. WAVL.GE.300.) E1=ES                             
      E2=(ES-EFIN)*C1**(1.-ALPHA)*COS(C2)/DEM+SIG*WAVL/18.8496E+10      
CCC                                                                     
CCC    PERMANENT FIX TO CLSSICAL DEBYE EQUATION                         
CCC    TO HANDLE ZERO CM-1 PROBLEM                                      
CCC                                                                     
      E1=EFIN+(ES-EFIN)/(1.0+C1**2)                                     
CCC                                                                     
      E2=((ES-EFIN)*C1)/(1.0+C1**2)                                     
CCC                                                                     
      RE=SQRT((E1+SQRT(E1*E1+E2*E2))/2.)                                
      AI=-E2/(2.*RE)                                                    
      RETURN                                                            
      END                                                               
      SUBROUTINE DEFALT  (Z,P,T)                                        
C                                                                       
C     ******************************************************************
C                                                                       
C     THIS SUBROUTINE LOADS ONE OF THE 6 BUILT IN ATMOSPHERIC PROFILES  
C     FROM WHICH IT WILL INTERPOLATE "DEFAULT" VALUES FOR ALTITUDE "Z"  
C                                                                       
C                                                                       
C      ***  THIS SUBROUTINE IS CALLED BY "RDUNIT" WHICH                 
C      ***  READS USER SUPPLIED INPUT PROFILES OR SINGLE VALUES         
C      ***  UNDER "MODEL = 0     " SPECIFICATIONS                       
C                                                                       
C      *** SEE DOCUMENTATION FOR CLARIFICATION ***                      
C                                                                       
C     SUBROUTINE "DEFALT"IS TRIGGERRED WHENEVER ANY ONE OF              
C     THE INPUT PARAMETERS JCHARP, JCART, (JCHAR(K),K=1,NMOL) IS = 1-6  
C                                                                       
C     FOR SIMPLICITY, ALL INTERPOLATIONS ARE DONE AT ONE TIME BECAUSE   
C     THE LAGRANGE WEIGHTS (4PT), BASED ON (ALT-Z), REMAIN UNCHANGED    
C                                                                       
C                   JCHAR(K) FOR K<8 ALLOW MODEL-DEPENDENT CHOICES      
C                                                                       
C                   JCHAR=JUNIT                                         
C                                                                       
C                        1       CHOOSES TROPICAL                       
C                        2         "     MID-LATITUDE SUMMER            
C                        3         "     MID-LATITUDE WINTER            
C                        4         "     HIGH-LAT SUMMER                
C                        5         "     HIGH-LAT WINTER                
C                        6         "     US STANDARD                    
C                                                                       
C                                                                       
C    JUNIT(K) FOR K>7 CHOOSES FROM THE SINGLE TRACE CONSTITUENT         
C        PROFILES, ALL APPRORIATE FOR THE US STD ATMOSPHERE             
C                                                                       
C     ***  NOTE ***  T<0 WILL ALSO PRINT OUT A MESSAGE INDICATING       
C     ***  A POSSIBLE MISAPPLICATION OF TEMPERATURE UNITS, (K) VS (C)   
C                                                                       
C     ******************************************************************
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1                                 
      COMMON /CARD1B/ JUNITP,JUNITT,JUNIT(13),WMOL(12),WAIR,JLOW        
      COMMON /MLATM / ALT(50),PMATM(50,6),TMATM(50,6),AMOL(50,8,6)      
      COMMON /TRAC/ TRAC(50,21)                                         
C                                                                       
      DATA PZERO /1013.25/,TZERO/273.15/,XLOSCH/2.6868E19/              
C                                                                       
C     *** 4PT INTERPOLATION FUNCTION                                    
C                                                                       
      VAL(A1,A2,A3,A4,X1,X2,X3,X4)=A1*X1+A2*X2+A3*X3+A4*X4              
C                                                                       
C                                                                       
      NMOL = 12                                                         
      ILOWER=0                                                          
      IUPPER=0                                                          
      IM50=50                                                           
      DO 15 IM=2,IM50                                                   
      I2=IM                                                             
      IF (ALT(IM).GE.Z) GO TO 20                                        
   15 CONTINUE                                                          
      I2=IM50                                                           
   20 I1=I2-1                                                           
      I0=I2-2                                                           
      I3=I2+1                                                           
      IF(I0.LT.1) GO TO 25                                              
      IF(I3.GT.IM50) GO TO 26                                           
C                                                                       
      GO TO 28                                                          
C                                                                       
C     LOWER ENDPOINT CORRECTION                                         
C                                                                       
25    CONTINUE                                                          
      ILOWER=1                                                          
      I0=I1                                                             
      I1=I2                                                             
      I2=I3                                                             
      I3=I3+1                                                           
      GO TO 28                                                          
C                                                                       
C     UPPER ENDPOINT CORRECTION                                         
C                                                                       
26    CONTINUE                                                          
      IUPPER=1                                                          
      IF(Z.GT.ALT(IM50))GO TO 29                                        
      I3=I2                                                             
      I2=I1                                                             
      I1=I0                                                             
      I0=I1-1                                                           
      GO TO 28                                                          
C                                                                       
C      UPPER ENDPOINT EXTRAPOLATION                                     
C                                                                       
29    CONTINUE                                                          
      Z0=ALT(I0)                                                        
      Z1=ALT(I1)                                                        
      Z2=ALT(I2)                                                        
      Z3=Z2+2.*(Z-Z2)                                                   
      IUPPER=2                                                          
      WRITE(IPR,80)Z                                                    
80    FORMAT(/,'   *** Z IS GREATER THAN 120 KM ***, Z = ',F10.3)       
      STOP'DEFAULTZ'                                                    
C     I3=I2                                                             
C     GO TO 31                                                          
C                                                                       
C     LAGRANGE CONTINUATION                                             
C                                                                       
28    CONTINUE                                                          
C                                                                       
C      LAGRANGE COEF DETERMINATION                                      
C                                                                       
      Z1=ALT(I1)                                                        
      Z2=ALT(I2)                                                        
      Z0=ALT(I0)                                                        
      Z3=ALT(I3)                                                        
31    CONTINUE                                                          
      DEN1=(Z0-Z1)*(Z0-Z2)*(Z0-Z3)                                      
      DEN2=(Z1-Z2)*(Z1-Z3)*(Z1-Z0)                                      
      DEN3=(Z2-Z3)*(Z2-Z0)*(Z2-Z1)                                      
      DEN4=(Z3-Z0)*(Z3-Z1)*(Z3-Z2)                                      
      A1=((Z-Z1)*(Z-Z2)*(Z-Z3))/DEN1                                    
      A2=((Z-Z2)*(Z-Z3)*(Z-Z0))/DEN2                                    
      A3=((Z-Z3)*(Z-Z0)*(Z-Z1))/DEN3                                    
      A4=((Z-Z0)*(Z-Z1)*(Z-Z2))/DEN4                                    
C                                                                       
C                                                                       
C     TEST INPUT PARAMETERS (JUNIT'S) SEQUENTIALLY FOR TRIGGER          
C      I.E.  JUNIT(P,T,K) = 1-6                                         
C                                                                       
      IF (JUNITP.GT.6) GO TO 35                                         
      MATM=JUNITP                                                       
C     WRITE (IPR,60) Z,MATM                                             
      X1=ALOG(PMATM(I0,MATM))                                           
      X2=ALOG(PMATM(I1,MATM))                                           
      X3=ALOG(PMATM(I2,MATM))                                           
      X4=ALOG(PMATM(I3,MATM))                                           
      IF(IUPPER.EQ.2)X4=X3+2*(X3-X2)                                    
      P=VAL(A1,A2,A3,A4,X1,X2,X3,X4)                                    
      P=EXP(P)                                                          
   35 IF (JUNITT.GT.6) GO TO 40                                         
      MATM=JUNITT                                                       
C     WRITE (IPR,65) Z,MATM                                             
      X1=TMATM(I0,MATM)                                                 
      X2=TMATM(I1,MATM)                                                 
      X3=TMATM(I2,MATM)                                                 
      X4=TMATM(I3,MATM)                                                 
      T=VAL(A1,A2,A3,A4,X1,X2,X3,X4)                                    
  40  DO 55 K=1,NMOL                                                    
      IF (JUNIT(K).GT.6) GO TO 55                                       
C                                                                       
      IF (K.GT.7) GO TO 45                                              
      MATM=JUNIT(K)                                                     
C                                                                       
      X1=AMOL(I0,K,MATM)                                                
      X2=AMOL(I1,K,MATM)                                                
      X3=AMOL(I2,K,MATM)                                                
      X4=AMOL(I3,K,MATM)                                                
      GO TO 50                                                          
   45 ITR=K-7                                                           
      MATM=6                                                            
C                                                                       
      X1=TRAC(I0,ITR)                                                   
      X2=TRAC(I1,ITR)                                                   
      X3=TRAC(I2,ITR)                                                   
      X4=TRAC(I3,ITR)                                                   
   50 WMOL(K)=VAL(A1,A2,A3,A4,X1,X2,X3,X4)                              
      JUNIT(K)=10                                                       
      GO TO 55                                                          
C  53 JUNIT(K)=10                                                       
C     WRITE(IPR,54)K                                                    
C  54 FORMAT('  **** INCONSISTENCY IN THE USER SPECIFICATION',          
C    A ' , JUNIT = 9 AND WMOL(K) = 0 , K =',I2,/,                       
C    B '  ****   DENNUM(K) HAS BEEN SET TO 0, NOT DEFAULT VALUE')       
   55 CONTINUE                                                          
      WMOL(12)   =WMOL(12)   *1.0E+3                                    
C     THE UNIT FOR NEW PROFILE IS PPMV.                                 
      RETURN                                                            
C100  CONTINUE                                                          
  110 FORMAT(/,'  *** FATAL INPUT ERROR ***',/,                         
     A '  DEFAULT SPECIFICATIONS EXCEED MODEL = 6',/,                   
     B  0PF10.2,' KM',1PE10.3,' MB',0PF10.3,' K',/,                     
     C (5(I5,1PE10.3)))                                                 
C     STOP'DEFAULT'                                                     
C                                                                       
   60 FORMAT ('   DEFAULT PRESSURE AT Z=',F7.2,' KM FROM MODEL',I5)     
   65 FORMAT ('   DEFAULT TEMPERATURE AT Z=',F7.2,' KM FROM MODEL',I5)  
   70 FORMAT ('   DEFAULT,K =',I3,',',A10,',','AT Z=',F7.2,             
     A ' KM FROM MODEL',I5)                                             
      END                                                               
      FUNCTION   DEL(PSIO,DELO,BETA,IARBO)                              
C                                                                       
C     FUNCTION DEL RETURNS THE VALUE OF THE SUN'S ZENITH ANGLE          
C     AT ANY POINT ALONG THE OPTICAL PATH BASED UPON STRAIGHT           
C     LINE GEOMETRY (NO REFRACTION). THIS ANGLE IS USED TO SPECIFY      
C     THE SCATTERING POINT TO SUN PATHS. THE BENDING DUE TO REFRACTION  
C     ALONG THIS PATH IS DETERMINED BY THE GEO ROUTINES. IF THE BENDING 
C     IS GREATER THAN ONE DEGREE THE ZENITH ANGLE IS CORRECTED ACCORDING
C     AND THE PATH CALCULATION IS REPEATED.                             
      COMMON /PARMTR/ RE,DELTAS,ZMAX,IMAX,IMOD,IBMAX,IPATH              
      COMMON /CNSTNS/ PI,CA,DEG,GCAIR,BIGNUM,BIGEXP                     
      DATA  EPSILN/1.0E-5/                                              
C                                                                       
      IF(IARBO.EQ.0) GO TO 10                                           
C     SPECIAL CASES IF PSIO IS ARBITRARY                                
      IF(IARBO.EQ.1) DEL=DELO                                           
      IF(IARBO.EQ.2) DEL=BETA                                           
      IF(IARBO.EQ.3) DEL=0.0                                            
      RETURN                                                            
10    CONTINUE                                                          
      PSIOR=PSIO/DEG                                                    
      DELOR=DELO/DEG                                                    
      BETAR=BETA/DEG                                                    
C     GENERAL CASE                                                      
      X=COS(DELOR)*COS(BETAR)+SIN(DELOR)*SIN(BETAR)*COS(PSIOR)          
      DEL=DEG*ACOS(X)                                                   
      RETURN                                                            
      END                                                               
      SUBROUTINE DESATT(WSPD,VIS)                                       
C********************************************************************** 
C*                                                                    * 
C*    THIS SUBROUTINE CALCULATES THE ATTENUATION COEFFICIENTS AND     * 
C*    ASYMMETRY PARAMETER FOR THE DESERT AEROSOL BASED ON THE WIND    * 
C*    SPEED AND METEOROLOGICAL RANGE                                  * 
C*                                                                    * 
C*                                                                    * 
C*                                                                    * 
C*    PROGRAMMED BY:  D. R. LONGTIN         OPTIMETRICS, INC.         * 
C*                                          BURLINGTON, MASSACHUSETTS * 
C*                                          JULY 1987                 * 
C*                                                                    * 
C*                                                                    * 
C*    INPUTS:    WSPD    -  WIND SPEED (IN M/S) AT 10 M               * 
C*               VIS     -  METEOROLOGICAL RANGE (KM)                 * 
C*                                                                    * 
C*    OUTPUTS:   DESEXT  -  EXTINCTION COEFFICIENT AT 47 WAVELENGTHS  * 
C*               DESSCA  -  SCATTERING COEFFICIENT AT 47 WAVELENGTHS  * 
C*    *****      DESABS  -  ABSORPTION COEFFICIENT AT 47 WAVELENGTHS  * 
C*               DESG    -  ASYMMETRY PARAMETER AT 47 WAVELENGTHS     * 
C*                                                                    * 
C********************************************************************** 
C                                                                       
Crea0892      COMMON RELHUM(34),WHNO3(34),ICH(4),VH(17),TX(63),W(63)    
Crea0892C     COMMON             WPATH(68, 63),TBBY(68)                 
Crea0892COMMON IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12) 
Crea0892      COMMON ABSC(5,47),EXTC(5,47),ASYM(5,47),VX2(47),AWCCON(5) 
      COMMON /UNLABEL/ RELHUM(34),WHNO3(34),ICH(4),VH(17),TX(63),W(63), 
     +        IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12), 
     +        ABSC(5,47),EXTC(5,47),ASYM(5,47),VX2(47),AWCCON(5)        
      COMMON/ DESAER/EXT(47,4),ABS(47,4),G(47,4)                        
      DIMENSION DESEXT(47),DESSCA(47),DESABS(47),DESG(47),WIND(4)       
      REAL      DESEXT    ,DESSCA    ,DESABS    ,DESG    ,WIND          
      INTEGER WAVEL                                                     
      DATA WIND/0., 10., 20., 30./                                      
      DATA RAYSCT / 0.01159 /                                           
      IF(WSPD .LT. 0.) WSPD = 10.                                       
C                                                                       
      NWSPD = INT(WSPD/10) + 1                                          
      IF (NWSPD.GE.5) WRITE(6,999)                                      
      IF (NWSPD.GE.4) NWSPD = 3                                         
C                                                                       
C     INTERPOLATE THE RADIATIVE PROPERTIES AT WIND SPEED WSPD           
C                                                                       
      DO 100 WAVEL = 1,47                                               
C                                                                       
C     EXTINCTION COEFFICIENT                                            
C                                                                       
         SLOPE = LOG(EXT(WAVEL,NWSPD+1)/EXT(WAVEL,NWSPD))/              
     *           (WIND(NWSPD+1)-WIND(NWSPD))                            
         B = LOG(EXT(WAVEL,NWSPD+1)) - SLOPE*WIND(NWSPD+1)              
         DESEXT(WAVEL) = EXP(SLOPE*WSPD + B)                            
C                                                                       
C     ABSORPTION COEFFICIENT                                            
C                                                                       
         SLOPE = LOG(ABS(WAVEL,NWSPD+1)/ABS(WAVEL,NWSPD))/              
     *           (WIND(NWSPD+1)-WIND(NWSPD))                            
         B = LOG(ABS(WAVEL,NWSPD+1)) - SLOPE*WIND(NWSPD+1)              
         DESABS(WAVEL) = EXP(SLOPE*WSPD + B)                            
C                                                                       
C     SCATTERING COEFFICIENT                                            
C                                                                       
         DESSCA(WAVEL) = DESEXT(WAVEL) - DESABS(WAVEL)                  
C                                                                       
C     ASYMMETRY PARAMETER                                               
C                                                                       
         SLOPE = (G(WAVEL,NWSPD+1)-G(WAVEL,NWSPD))/(WIND(NWSPD+1)-      
     *           WIND(NWSPD))                                           
         B = G(WAVEL,NWSPD+1) - SLOPE*(WIND(NWSPD+1))                   
         DESG(WAVEL) = SLOPE*WSPD + B                                   
100   CONTINUE                                                          
C                                                                       
          EXT55 = DESEXT(4)                                             
C                                                                       
C         DETERMINE METEROLOGICAL RANGE FROM 0.55 EXTINCTION            
C          AND KOSCHMIEDER FORMULA                                      
C                                                                       
      IF (VIS. LE .0.) THEN                                             
               VIS = 3.912/(DESEXT(4) + RAYSCT )                        
      ENDIF                                                             
C                                                                       
C        RENORMALIZE ATTENUATION COEFFICIENTS TO 1.0 KM-1 AT            
C        0.55 MICRONS FOR CAPABILTY WITH LOWTRAN                        
C                                                                       
          DO 200 WAVEL=1,47                                             
            EXTC(1,WAVEL) = DESEXT(WAVEL)       /EXT55                  
CC          DESSCA(WAVEL) = DESSCA(WAVEL)       /EXT55                  
            ABSC(1,WAVEL) = DESABS(WAVEL)       /EXT55                  
            ASYM(1,WAVEL) = DESG(WAVEL)                                 
200      CONTINUE                                                       
       WRITE(6,900) VIS,WSPD                                            
900    FORMAT(//,'  VIS = ',F10.3,' WIND = ',F10.3)                     
       RETURN                                                           
C                                                                       
999    FORMAT(' WARNING: WIND SPEED IS BEYOND 30 M/S; RADIATIVE',       
     *'PROPERTIES',/,'OF THE DESERT AEROSOL HAVE BEEN EXTRAPOLATED')    
      END                                                               
      FUNCTION   DOP(WAVL,A,CEN1,B,C,CEN2,D,E,CEN3,F,G)                 
CCC                                                                     
CCC    DESCRIBES THE REAL PART OF THE DIELECTRIC CONSTANT               
CCC                                                                     
      V=1./WAVL                                                         
      V2=V*V                                                            
      H1=CEN1**2-V2                                                     
      H2=CEN2**2-V2                                                     
      H3=CEN3**2-V2                                                     
      DOP=SQRT(A+B*H1/(H1*H1+C*V2)+D*H2/(H2*H2+E*V2)+F*H3/(H3*H3+G*V2)) 
      RETURN                                                            
      END                                                               
Crea0892      SUBROUTINE DRIVER                                         
      SUBROUTINE MODTRAN(OUTFILE,TABFILE,H2OFAC,CO2FAC,O3FAC,O2FAC,     
     +                  CH4FAC,SO2FAC,RADBUF,TRANBUF,SKYBUF,            
     +           MODTRNX,MODELX,ITYPEX,IEMSCTX,IMULTX,M1X,M2X,M3X,M4X,  
     +                  M5X,M6X,MDEFX,IMX,NOPRTX,TBOUNDX,SPECALBX,      
     +           IHAZEX,ISEASNX,IVULCNX,ICSTLX,ICLDX,IVSAX,VISX,WSSX,   
     +                  WHHX,RAINRTX,GNDALTX,                           
     +           H1X,H2X,ANGLEX,RANGEX,BETAX,ROX,LENX,                  
     +           IV1X,IV2X,IDVX,IFWHMX,                                 
     +           CTHIKX,CALTX,CEXTX,ISEEDX,                             
     +           ZCVSAX,ZTVSAX,ZINVSAX,                                 
     +           MLX,IRD1X,IRD2X,TITLEX,                                
     +           ZMDLX,PX,TXX,WMOLX,JCHARX,                             
     +           AHAZEX,EQLWCZX,RRATZX,IHA1X,ICLD1X,IVUL1X,ISEA1X,ICHRX,
     +           IREGX,AWCCONX,TITLE2DX,VXX,EXCTX,ABSCX,ASYMX,          
     +           IPARMX,IPHX,IDAYX,ISOURCX,                             
     +           PARM1X,PARM2X,PARM3X,PARM4X,TIMEX,PSIPOX,ANGLEMX,GX,   
     +           NANGLSX,ANGFX,FX)                                      
      REAL SPECALBX(50000),TITLE2DX(18,4),ZMDLX(34),PX(34),TXX(34)      
      REAL RADBUF(*),TRANBUF(*),SKYBUF(*)                               
      REAL WMOLX(12,34),AHAZEX(34),EQLWCZX(34),RRATZX(34),AWCCONX(4)    
      REAL FX(4,50),VXX(47),EXTCX(47,4),ABSCX(47,4),ASYMX(47,4)         
      REAL ANGFX(50)                                                    
      INTEGER IHA1X(34),ICLD1X(34),IVUL1X(34),ISEA1X(34),ICHRX(34)      
      INTEGER IREGX(4)                                                  
      LOGICAL MODTRNX                                                   
      CHARACTER*64 OUTFILE,TABFILE                                      
      CHARACTER*4  TITLEX(16)                                           
      CHARACTER*1  JCHARX(14,34)                                        
C                                                                       
Crea0892      COMMON RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63)    
Crea0892C     COMMON             WPATH(68, 63),TBBY(68)                 
Crea0892COMMON IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12) 
Crea0892      COMMON ABSC(5,47),EXTC(5,47),ASYM(5,47),VX2(47),AWCCON(5) 
      COMMON /UNLABEL/ RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63), 
     +        IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12), 
     +        ABSC(5,47),EXTC(5,47),ASYM(5,47),VX2(47),AWCCON(5)        
      COMMON /IFIL/ IRD,IPR,IPU,NPR,IPR1                                
      COMMON /CARD1/ MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRT,TBOUND,SALB   
     1  ,MODTRN                                                         
      LOGICAL MODTRN                                                    
      COMMON /CARD1A/ M4,M5,M6,MDEF,IRD1,IRD2                           
      COMMON /CARD2/ IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,VIS,WSS,WHH,   
     1    RAINRT                                                        
      COMMON /CARD2A/ CTHIK,CALT,CEXT                                   
      COMMON /CARD2D/ IREG(4),ALTB(4),IREGC(4)                          
      COMMON /CARD3/ H1,H2,ANGLE,RANGE,BETA,RE,LEN                      
C     COMMON /CARD4/ V1,V2,DV                                           
      COMMON/CARD4/IV1,IV2,IDV,IFWHM                                    
      COMMON /CNSTNS/ PI,CA,DEG,GCAIR,BIGNUM,BIGEXP                     
      COMMON /CNTRL/ KMAX,M,IKMAX,NL,ML,IKLO,ISSGEO,IMULT               
      COMMON /MODEL/ ZM(34),PM(34),TM(34),RFNDX(34),DENSTY(63,34),      
     1  CLDAMT(34),RRAMT(34),EQLWC(34),HAZEC(34)                        
      COMMON /SOLS/ AH1(68),ARH(68),                                    
C    X WPATHS(68,63),PA(68),PR(68),ATHETA(35),ADBETA(35),LJ(69),JTURN,  
C    X ANGSUN,CSZEN(68)                                                 
     1  WPATHS(102,63),PA(68),PR(68),ATHETA(35),ADBETA(35),LJ(69),      
     2  JTURN,ANGSUN,CSZEN(68),TBBYS(102,12),PATMS(102,12)              
      COMMON /MART/ RHH                                                 
      COMMON /USRDTA/ NANGLS,ANGF(50),F(4,50)                           
      COMMON /MDLZ/ HMDLZ(8)                                            
      COMMON /ZVSALY/ ZVSA(10),RHVSA(10),AHVSA(10),IHVSA(10)            
      CHARACTER*4 HHAZE,HSEASN,HVULCN,BLANK,HMET,HMODEL,HTRRAD          
      COMMON /TITL/ HHAZE(5,16),HSEASN(5,2),HVULCN(5,8),BLANK,          
     1  HMET(5,2),HMODEL(5,8),HTRRAD(6,4)                               
      COMMON /VSBD/ VSB(10)                                             
C     COMMON /MNLT/TBBSS(68),TBBMS(34),WPMS(34,63),IMSMX,WPMSS(34,63)   
      COMMON /PATH/PL(68),QTHETA(68),ITEST,HI,HF,AHT(68)                
      COMMON /AERTM/TAE7,TAE12,TAE13,TAE14,TAE16                        
C*****HDATE AND HTIME CARRY THE DATA AND TIME AND MUST BE DOUBLE        
C*****PRECISION ON A 32 BIT WORD COMPUTER                               
C@    DOUBLE PRECISION HDATE,HTIME                                      
      DIMENSION PLST(68),CSENSV(68),QTHETS(68)                          
      DATA IRPT / 0 /                                                   
C*****IRD, IPR, AND IPU ARE UNIT NUMBERS FOR INPUT, OUTPUT, AND         
C*****IPR1 = OUTPUT OF MOLECULAR TRANSMITTANCE                          
      DATA        MAXGEO   /    68/                                     
      IRD = 5                                                           
Crea0892      IPR = 6                                                   
Crea0494      IPU = 7                                                   
Crea0494      IPR1= 8                                                   
      IPR = 16                                                          
      IPU = 17                                                          
      IPR1 = 18                                                         
Crea0892      OPEN (IRD,FILE='tape5.dat',STATUS='OLD')                  
Crea0892      OPEN (IPR,FILE='tape6.dat',STATUS='UNKNOWN')              
Crea0892      OPEN (IPU,FILE='tape7.dat',STATUS='UNKNOWN')              
Crea0892      OPEN (IPR1,FILE='tape8.dat',STATUS='UNKNOWN')             
C                                                                       
      IF (OUTFILE(1:5).EQ.'DUMMY' .OR. OUTFILE(1:5).EQ.'dummy') THEN    
          OPEN (IPR,STATUS='SCRATCH')                                   
      ELSE                                                              
          OPEN (IPR,FILE=OUTFILE,STATUS='UNKNOWN')                      
      END IF                                                            
C                                                                       
      IF (TABFILE(1:5).EQ.'DUMMY' .OR. TABFILE(1:5).EQ.'dummy') THEN    
          OPEN (IPU,STATUS='SCRATCH')                                   
      ELSE                                                              
          OPEN (IPU,FILE=TABFILE,STATUS='UNKNOWN')                      
      END IF                                                            
C                                                                       
C     ALTITUDE PARAMETERS                                               
C                                                                       
C     ZMDL  COMMON/MODEL/  THE ALTITUDES USED IN LOWTRAN                
C     ZCVSA,ZTVSA,ZIVSA  CARD 3.3 LOWTRAN FOR VSA INPUT                 
C     ZVSA  NINE ALTITUDES GEN BY VSA ROUTINE                           
C                                                                       
      PI=2.0*ASIN(1.0)                                                  
      CA=PI/180.                                                        
      DEG= 1.0/CA                                                       
      RANGE=0.0                                                         
C*****GCAIR IS THE GAS CONSTANT FOR AIR IN UNITS OF MB/(GM CM-3 K)      
      GCAIR = 2.87053E+3                                                
C*****BIGNUM AND BIGEXP ARE THE LARGEST NUMBER AND THE LARGEST ARGUMENT 
C*****EXP ALLOWED AND ARE MACHINE DEPENDENT. THE NUMBERS USED HERE ARE F
C*****A TYPICAL 32 BIT-WORD COMPUTER.                                   
      BIGNUM = 1.0E35                                                   
      BIGEXP = 87.0                                                     
C     THE VALUES FOR BIGNUM AND BIGEXP FOLLOW THE                       
C     DESCRIPTION UNDER EXP FUNCTION IN "IBM SYSTEM 360/                
C     AND SYSTEM 370 FORTRAN IV LANGUAGE"                               
C     BIGNUM = 4.3E68                                                   
C     BIGEXP = 174.6                                                    
      KMAX=63                                                           
C*****NL IS THE NUMBER OF BOUNDARIES IN THE STANDARD MODELS 1 TO 6      
C*****BOUNDARY 34 (AT 99999 KM) IS NO LONGER USED                       
      NL = 33                                                           
C*****CALL TIME AND DATE:                                               
C*****THE USER MAY WISH TO INCLUDE SUBROUTINES FDATE AND FCLOCK WHICH   
C*****RETURN THE DATE AND TIME IN MM/DD/YY AND HH.MM.SS FORMATS         
C*****RESPECTIVELY. THE REQUIRED ROUTINES FOR A CDC 6600 ARE INCLUDED AT
C*****THE MAIN PROGRAM IN COMMENT CARDS.                                
C@    CALL FDATE(HDATE)                                                 
C@    CALL FCLOCK(HTIME)                                                
C                                                                       
C*****START CALCULATION                                                 
C                                                                       
C                                                                       
100   DO 10 II = 1,4                                                    
10    IREG(II) = 0                                                      
      WRITE(IPR,1000)                                                   
1000  FORMAT('1',20X,'*****  MODTRAN  *****')                           
C@    WRITE(IPR,1010) HDATE,HTIME                                       
1010  FORMAT('1',20X,'*****  MODTRAN  *****',10X,2(1X,A8,1X))           
      DO 80 I=1,4                                                       
          DO 80 J=1,40                                                  
              ABSC(I,J)=0.                                              
              EXTC(I,J)=0.                                              
 80   ASYM(I,J)=0.                                                      
      JPRT = 0                                                          
      IKLO=1                                                            
C                                                                       
C*****CARD 1                                                            
C                                                                       
C     READ(IRD,1110)MODEL,ITYPE,IEMSCT,IMULT,M1,M2,M3,                  
C    1  M4,M5,M6,MDEF,IM,NOPRT,TBOUND,SALB                              
Crea0892   READ(IRD,'(L1,I4,12I5,F8.3,F7.2)')MODTRN,MODEL,ITYPE,IEMSCT, 
Crea0892     1  IMULT,M1,M2,M3,M4,M5,M6,MDEF,IM,NOPRT,TBOUND,SALB       
      MODTRN = MODTRNX                                                  
      MODEL = MODELX                                                    
      ITYPE = ITYPEX                                                    
      IEMSCT = IEMSCTX                                                  
      IMULT = IMULTX                                                    
      M1 = M1X                                                          
      M2 = M2X                                                          
      M3 = M3X                                                          
      M4 = M4X                                                          
      M5 = M5X                                                          
      M6 = M6X                                                          
      MDEF = MDEFX                                                      
      IM = IMX                                                          
      NOPRT = NOPRTX                                                    
      TBOUND = TBOUNDX                                                  
      SALB = SPECALBX(IV1X)                                             
 1110 FORMAT(13I5,F8.3,F7.2)                                            
C     WRITE(IPR,1111)MODEL,ITYPE,IEMSCT,IMULT,M1,M2,M3,                 
C    1  M4,M5,M6,MDEF,IM,NOPRT,TBOUND,SALB                              
      WRITE(IPR,'(15H0 CARD 1  *****,L1,I4,12I5,F8.3,F7.2)')MODTRN,MODEL
     1  ,ITYPE,IEMSCT,IMULT,M1,M2,M3,M4,M5,M6,MDEF,IM,NOPRT,TBOUND,SALB 
 1111 FORMAT('0 CARD 1  *****',13I5,F8.3,F7.2)                          
C     IF(IMULT .EQ. 1 .AND. NOPRT.EQ. 1) NOPRT = 0                      
C                                                                       
C     SET THE NUMBER OF SPECIES TREATED WITH THE 1 CM-1 BAND MODEL.     
C     ALSO, FOR EACH SPECIES, SET THE POINTER WHICH MAPS THE HITRAN     
C     NUMERICAL LABEL TO THE LOWTRAN NUMERICAL LABEL.                   
C                                                                       
      NSPEC=12                                                          
      KPOINT( 1)=17                                                     
      KPOINT( 2)=36                                                     
      KPOINT( 3)=31                                                     
      KPOINT( 4)=47                                                     
      KPOINT( 5)=44                                                     
      KPOINT( 6)=46                                                     
      KPOINT( 7)=50                                                     
      KPOINT( 8)=54                                                     
      KPOINT( 9)=56                                                     
      KPOINT(10)=55                                                     
      KPOINT(11)=52                                                     
      KPOINT(12)=11                                                     
C                                                                       
      IRD1 = 0                                                          
      IRD2 = 0                                                          
      IF (MODEL.EQ.0) LEN = 0                                           
      IF((MODEL.EQ.0) .OR. (MODEL.EQ.7)) GO TO 110                      
      IF(M1.EQ.0) M1=MODEL                                              
      IF(M2.EQ.0) M2=MODEL                                              
      IF(M3.EQ.0) M3=MODEL                                              
      IF(M4.EQ.0) M4=MODEL                                              
      IF(M5.EQ.0) M5=MODEL                                              
      IF(M6.EQ.0) M6=MODEL                                              
      IF(MDEF.EQ.0) MDEF=1                                              
110   CONTINUE                                                          
      M=MODEL                                                           
      NPR = NOPRT                                                       
C*****CARD 2 AEROSOL MODEL                                              
Crea0892 READ(IRD,1200)IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,VIS,WSS,WHH, 
Crea0892     1  RAINRT,GNDALT                                           
      IHAZE = IHAZEX                                                    
      ISEASN = ISEASNX                                                  
      IVULCN = IVULCNX                                                  
      ICSTL = ICSTLX                                                    
      ICLD = ICLDX                                                      
      IVSA = IVSAX                                                      
      VIS = VISX                                                        
      WSS = WSSX                                                        
      WHH = WHHX                                                        
      RAINRT = RAINRTX                                                  
      GNDALT = GNDALTX                                                  
1200  FORMAT(6I5,5F10.3)                                                
      WRITE(IPR,1201)IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,VIS,WSS,WHH,   
     1  RAINRT,GNDALT                                                   
      IF(GNDALT.GT.0.) WRITE(IPR,1199)GNDALT                            
1199  FORMAT(1H0,'  GNDALT =',F10.2)                                    
      IF(GNDALT.GE.6.0) THEN                                            
          WRITE(IPR,1202)GNDALT                                         
          GNDALT=0.                                                     
      ENDIF                                                             
1201  FORMAT('0 CARD 2  *****',6I5,5F10.3)                              
1202  FORMAT('0 GNDALT GT 6.0 RESET TO ZERO, GNDALT WAS',F10.3)         
C                                                                       
      IF(VIS.LE.0.0.AND.IHAZE.GT.0) VIS=VSB(IHAZE)                      
      RHH= 0.                                                           
      IF(MODEL.EQ.0.OR.MODEL.EQ.7) GO TO 205                            
      IF((MODEL.EQ.3.OR.MODEL.EQ.5).AND.ISEASN.EQ.0) ISEASN=2           
C                                                                       
      IF(IVSA.EQ.1 .AND. IHAZE.EQ.3)                                    
     1  CALL MARINE(VIS,MODEL,WSS,WHH,ICSTL,EXTC,ABSC,1)                
      ICH(1)=IHAZE                                                      
      ICH(2)=6                                                          
      ICH(3)=9+IVULCN                                                   
205   IF(RAINRT.EQ.0) GO TO 210                                         
      WRITE(IPR,1205) RAINRT                                            
1205  FORMAT('0 RAIN MODEL CALLED, RAIN RATE = ',F9.2,' MM/HR')         
 210  ICH(4)=18                                                         
      IF(ICH(1).LE.0)ICH(1)=1                                           
      IF(ICH(3).LE.9)ICH(3)=10                                          
      IF(ICLD.GE.1 .AND. ICLD.LE.11) THEN                               
          ICH(4)=ICH(3)                                                 
          ICH(3)=ICH(2)                                                 
          ICH(2)=ICLD                                                   
      END IF                                                            
      IFLGA=0                                                           
      IFLGT=0                                                           
      CTHIK=-99.                                                        
      CALT=-99.                                                         
      CEXT=-99.                                                         
      ISEED=-99                                                         
      IF(ICLD .LT. 18) GO TO 230                                        
C*****CARD 2A CIRRUS CLOUDS                                             
Crea0892      READ(IRD,1210)CTHIK,CALT,CEXT,ISEED                       
      CTHIK = CTHIKX                                                    
      CALT = CALTX                                                      
      CEXT = CEXTX                                                      
      ISEED = ISEEDX                                                    
1210  FORMAT(3F10.3,I10)                                                
      WRITE(IPR,1211)CTHIK,CALT,CEXT,ISEED                              
1211  FORMAT('0 CARD 2A *****',3F10.3,I10)                              
230   CONTINUE                                                          
C*****CARD 2B VERTICAL STRUCTURE ALGORITHM                              
      ZCVSA=-99.                                                        
      ZTVSA=-99.                                                        
      ZINVSA=-99.                                                       
C                                                                       
      IF( IVSA. EQ. 0 ) GO TO 240                                       
Crea0892      READ (IRD,1230) ZCVSA,ZTVSA,ZINVSA                        
      ZCVSA = ZCVSAX                                                    
      ZTVSA = ZTVSAX                                                    
      ZINVSA = ZINVSAX                                                  
1230  FORMAT(3F10.3)                                                    
      WRITE(IPR,1231)ZCVSA,ZTVSA,ZINVSA                                 
1231  FORMAT('0 CARD 2B *****',3F10.3)                                  
C                                                                       
      CALL VSA(IHAZE,VIS,ZCVSA,ZTVSA,ZINVSA,ZVSA,RHVSA,AHVSA,IHVSA)     
C                                                                       
C     END OF VSA MODEL SET-UP                                           
C                                                                       
240   IF (MODEL.NE.0 .AND. MODEL.NE.7 ) ML=NL                           
      MDELS=MODEL                                                       
      DO 250 I=1,5                                                      
          IF(MDELS.NE.0)HMODEL(I,7)=HMODEL(I,MDELS)                     
250   IF(MDELS.EQ.0)HMODEL(I,7)=HMODEL(I,8)                             
C                                                                       
      IF(IM .EQ. 1) THEN                                                
          IF((MODEL.EQ.7.AND.IM.EQ.1) .OR.(MODEL.EQ.0)) THEN            
C                                                                       
C*****CARD 2C  USER SUPPLIED ATMOSPHERIC PROFILE                        
C                                                                       
Crea0892              READ (IRD,1250) ML,IRD1,IRD2,(HMODEL(I,7),I=1,5)  
              ML = MLX                                                  
              IRD1 = IRD1X                                              
              IRD2 = IRD2X                                              
              DO 1249 I=1,5                                             
                  HMODEL(I,7) = TITLEX(I)                               
1249          CONTINUE                                                  
1250          FORMAT(3I5,18A4)                                          
              WRITE(IPR,1251)ML,IRD1,IRD2,(HMODEL(I,7),I=1,5)           
Crea0892              IF(IVSA.EQ.1)CALL RDNSM                           
              IF (IVSA.EQ.1) CALL RDNSM(ZMDLX,PX,TXX,WMOLX,JCHARX,      
     +          AHAZEX,EQLWCZX,RRATZX,IHA1X,ICLD1X,IVUL1X,ISEA1X,ICHRX) 
1251          FORMAT('0 CARD 2C *****',3I5,18A4)                        
          ENDIF                                                         
      ENDIF                                                             
      M=7                                                               
Crea0892      CALL AERNSM(JPRT,  GNDALT)                                
      CALL AERNSM(JPRT,GNDALT,ZMDLX,PX,TXX,WMOLX,JCHARX,AHAZEX,EQLWCZX, 
     +            RRATZX,IHA1X,ICLD1X,IVUL1X,ISEA1X,ICHRX,H2OFAC,       
     +            CO2FAC,O3FAC,O2FAC,CH4FAC,SO2FAC)                     
      IF(ICLD .LT. 20) GO TO 260                                        
C                                                                       
C     SET UP CIRRUS MODEL                                               
C                                                                       
      IF(CTHIK.NE.0) IFLGT=1                                            
      IF(CALT.NE.0)  IFLGA=1                                            
      IF(ISEED.EQ.0) IFLGT=2                                            
      IF(ISEED.EQ.0) IFLGA=2                                            
      CALL CIRRUS(CTHIK,CALT,ISEED,CPROB,CEXT)                          
      WRITE(IPR,1220)                                                   
1220  FORMAT(15X,'CIRRUS ATTENUATION INCLUDED (N O A A CIRRUS) ')       
      IF(IFLGT.EQ.0) WRITE(IPR,1221) CTHIK                              
1221  FORMAT(15X,'CIRRUS ATTENUTION STATISTICALLY DETERMENED TO BE',    
     1  F10.3,'KM')                                                     
      IF(IFLGT.EQ.1) WRITE(IPR,1222) CTHIK                              
1222  FORMAT(15X,'CIRRUS THICKNESS USER DETERMINED TO BE',F10.3,'KM')   
      IF(IFLGT.EQ.2) WRITE(IPR,1223) CTHIK                              
1223  FORMAT(15X,'CIRRUS THICKNESS DEFAULTED TO MEAN VALUE OF    ',     
     1  F10.3,'KM')                                                     
      IF(IFLGA.EQ.0) WRITE(IPR,1224)CALT                                
1224  FORMAT(15X,'CIRRUS BASE ALTITUDE STATISCALLY DETERMINED TO BE',   
     1  F10.3,' KM')                                                    
      IF(IFLGA.EQ.1) WRITE(IPR,1225) CALT                               
1225  FORMAT(15X,'CIRRUS BASE ALTITUDE USER DETERMINED TO BE',          
     1  F10.3,' KM')                                                    
      IF(IFLGA.EQ.2) WRITE(IPR,1226) CALT                               
1226  FORMAT(15X,'CIRRUS BASE ALTITUDE DEFAULTED TO MEAN VALUE OF',     
     1  F10.3,'KM')                                                     
      WRITE(IPR,1227)CPROB                                              
1227  FORMAT(15X,'PROBABILTY OF CLOUD OCCURRING IS',F7.1,' PERCENT')    
C                                                                       
C       END OF CIRRUS MODEL SET UP                                      
C                                                                       
260   CONTINUE                                                          
C                                                                       
C                                                                       
C*****CARD 2E                                                           
C                                                                       
      IF((IHAZE.EQ.7).OR.(ICLD.EQ.11)) THEN                             
C                                                                       
C*****    CARD 2E USER SUPPLIED AEROSOL EXTINCTION, ABSORPTION, AND     
C         ASYMMETRY                                                     
Crea0892          CALL RDEXA                                            
          CALL RDEXA(IREGX,AWCCONX,TITLE2DX,VXX,EXTCX,ABSCX,ASYMX)      
C                                                                       
      ENDIF                                                             
300   CONTINUE                                                          
C                                                                       
      IPARM =-99                                                        
      IPH   =-99                                                        
      IDAY  =-99                                                        
      ISOURC=-99                                                        
C                                                                       
      PARM1 =-99.                                                       
      PARM2 =-99.                                                       
      PARM3 =-99.                                                       
      PARM4 =-99.                                                       
      TIME  =-99.                                                       
      PSIPO =-99.                                                       
      ANGLEM=-99.                                                       
      G     =-99.                                                       
C                                                                       
C*****CARD 3 GEOMETERY PARAMETERS                                       
C                                                                       
      IF(IEMSCT.EQ.3) GO TO 315                                         
Crea0892      READ(IRD,1312)H1,H2,ANGLE,RANGE,BETA,RO,LEN               
      H1 = H1X                                                          
      H2 = H2X                                                          
      ANGLE = ANGLEX                                                    
      RANGE = RANGEX                                                    
      BETA = BETAX                                                      
      RO = ROX                                                          
      LEN = LENX                                                        
1312  FORMAT(6F10.3,I5)                                                 
      WRITE(IPR,1313)H1,H2,ANGLE,RANGE,BETA,RO,LEN                      
1313  FORMAT('0 CARD 3  *****',6F10.3,I5)                               
      GO TO 320                                                         
C*****CARD 3 FOR DIRECTLY TRANSMITTED SOLAR RADIANCE (IEMSCT = 3)       
  315 CONTINUE                                                          
Crea0892      READ(IRD,1316) H1,H2,ANGLE,IDAY,RO,ISOURC,ANGLEM          
      H1 = H1X                                                          
      H2 = H2X                                                          
      ANGLE = ANGLEX                                                    
      IDAY = IDAYX                                                      
      RO = ROX                                                          
      ISOURC = ISOURCX                                                  
      ANGLEM = ANGLEMX                                                  
 1316 FORMAT(3F10.3,I5,5X,F10.3,I5,F10.3)                               
      WRITE(IPR,1317) H1,H2,ANGLE,IDAY,RO,ISOURC,ANGLEM                 
 1317 FORMAT('0 CARD 3   *****',3F10.3,I5,5X,F10.3,I5,F10.3)            
      ITYPE = 3                                                         
      RANGE = 0.0                                                       
      BETA = 0.0                                                        
      LEN = 0                                                           
C*****RO IS THE RADIUS OF THE EARTH                                     
320   RE=6371.23                                                        
C      *********  ERRATA JULY 25                                        
           IF(H1. LT. ZM(1)  ) THEN                                     
           WRITE(IPR,905) H1,ZM(1)                                      
905        FORMAT('  H1 LESS THAN FIRST ALT RESET  ',/                  
     X     ' H1 WAS ',F10.2,' 1ST ALT = ',F10.2)                        
            H1 = ZM(1)                                                  
      ENDIF                                                             
C        *********  END  ERRATA                                         
      H1S    = H1                                                       
      H2S    = H2                                                       
      ANGLES = ANGLE                                                    
      RANGS  = RANGE                                                    
      BETAS  = BETA                                                     
      ITYPES =ITYPE                                                     
      LENS   = LEN                                                      
      IRPTS = IRPT                                                      
      IF (MODEL.EQ.0) RO = RE                                           
      IF (MODEL.EQ.1) RE=6378.39                                        
      IF (MODEL.EQ.4) RE=6356.91                                        
      IF (MODEL.EQ.5) RE=6356.91                                        
      IF (RO.GT.0.0) RE=RO                                              
C                                                                       
      IF (IEMSCT.NE.2) GO TO 330                                        
C                                                                       
C*****CARD 3A1                                                          
C                                                                       
Crea0892      READ(IRD,1320) IPARM,IPH,IDAY,ISOURC                      
      IPARM = IPARMX                                                    
      IPH = IPHX                                                        
      IDAY = IDAYX                                                      
      ISOURC = ISOURCX                                                  
1320  FORMAT(4I5)                                                       
      WRITE(IPR,1321) IPARM,IPH,IDAY,ISOURC                             
1321  FORMAT('0 CARD 3A1*****',4I5)                                     
C                                                                       
C*****CARD 3A2                                                          
C                                                                       
Crea0892      READ(IRD,1322)PARM1,PARM2,PARM3,PARM4,TIME,PSIPO,ANGLEM,G 
      PARM1 = PARM1X                                                    
      PARM2 = PARM2X                                                    
      PARM3 = PARM3X                                                    
      PARM4 = PARM4X                                                    
      TIME = TIMEX                                                      
      PSIPO = PSIPOX                                                    
      ANGLEM = ANGLEMX                                                  
      G = GX                                                            
1322  FORMAT(8F10.3)                                                    
      WRITE(IPR,1323)PARM1,PARM2,PARM3,PARM4,TIME,PSIPO,ANGLEM,G        
1323  FORMAT('0 CARD 3A2*****',8F10.3)                                  
C                                                                       
      IF(IPH. EQ . 0) THEN                                              
            IF(G. GE.  1.0) G =  .9999                                  
            IF(G. LE. -1.0) G = -.9999                                  
      ENDIF                                                             
      IF (IPH.NE.1) GO TO 330                                           
C                                                                       
C*****CARD 3B1 USER DEFINED PHASE FUNCTION                              
C                                                                       
C*****READ USER DEFINED PHASE FUNCTION                                  
C                                                                       
Crea0892      READ(IRD,1326)NANGLS                                      
      NANGLS = NANGLSX                                                  
1326  FORMAT(I5)                                                        
      WRITE(IPR,1327)NANGLS                                             
1327  FORMAT(' CARD 3B1*****',I5)                                       
C                                                                       
C*****CARD 3B2                                                          
C                                                                       
Crea0892 READ(IRD,1328)(ANGF(I),F(1,I),F(2,I),F(3,I),F(4,I),I=1,NANGLS) 
Crea08921328  FORMAT(5E10.3)                                            
      DO 1328 I=1,NANGLS                                                
          ANGF(I) = ANGFX(I)                                            
          DO 13281 J=1,4                                                
              F(J,I) = FX(J,I)                                          
13281     CONTINUE                                                      
1328  CONTINUE                                                          
      WRITE(IPR,1329)(ANGF(I),F(1,I),F(2,I),F(3,I),F(4,I),I=1,NANGLS)   
1329  FORMAT('0 CARD 3B2*****',5E10.3)                                  
C                                                                       
  330 CONTINUE                                                          
C                                                                       
      IF (IRPT.EQ.3) GO TO 500                                          
C                                                                       
C*****CARD 4 WAVENUMBER                                                 
C                                                                       
 400  CONTINUE                                                          
C     READ(IRD,1400)V1,V2,DV                                            
C1400 FORMAT(3F10.3)                                                    
C     WRITE (IPR,1401) V1,V2,DV                                         
C1401 FORMAT('0 CARD 4  *****',3F10.3)                                  
Crea0892      READ(IRD,'(4I10)')IV1,IV2,IDV,IFWHM                       
      IV1 = IV1X                                                        
      IV2 = IV2X                                                        
      IDV = IDVX                                                        
      IFWHM = IFWHMX                                                    
  401 WRITE(IPR,'(15H0 CARD 4  *****,4I10)')IV1,IV2,IDV,IFWHM           
      IF(IDV . LE. 0)THEN                                               
         PRINT*,' ERROR IN IDV ',IDV                                    
         IDV = 1                                                        
      ENDIF                                                             
      IF(IFWHM . LE. 0)THEN                                             
         IF (MODTRN) PRINT *,' ERROR IN IFWHM ',IFWHM                   
         IFWHM = 2                                                      
      ENDIF                                                             
      IF(IHAZE.EQ.3) THEN                                               
C         IF(V1.LT.250.0 .OR. V2.LT.250.0) THEN                         
          IF(IV1.LT.250)THEN                                            
              IHAZE=4                                                   
              WRITE (IPR,1203)                                          
          ENDIF                                                         
1203      FORMAT('0**WARNING** NAVY MODEL IS NOT USEABLE BELOW 250CM-1'/
     1      10X,' PROGRAM WILL SWITCH TO IHAZE=4 LOWTRAN 5 MARITIME'//) 
      END IF                                                            
      IF (IRPT.EQ.4)  GO TO 550                                         
      IF (IRPT.EQ.-4) GO TO 560                                         
500   CONTINUE                                                          
      IF (IRPT.EQ.3) GO TO 555                                          
      WRITE(IPR,1410) (HTRRAD(I1,IEMSCT+1),I1=1,6)                      
1410  FORMAT('0 PROGRAM WILL COMPUTE ',6A4)                             
      IF(ISOURC .EQ. 1) WRITE(IPR,1204)                                 
1204  FORMAT('   LUNAR SOURCE ONLY  ')                                  
      IF (IMULT .EQ. 1) THEN                                            
          IF(IEMSCT.EQ.0 .OR. IEMSCT.EQ.3 ) THEN                        
              WRITE(IPR,1411)                                           
1411          FORMAT('0 MULTIPLE SCATTERING HAS BEEN TURNED OFF ')      
              IMULT=0                                                   
          ELSE                                                          
              WRITE(IPR,1412)                                           
          END IF                                                        
      END IF                                                            
1412  FORMAT('0 CALCULATIONS WILL BE DONE USING MULTIPLE SCATTERING ')  
      MDEL=MODEL                                                        
      IF(MDEL.EQ.0)MDEL=8                                               
      MM1=MDEL                                                          
      MM2=MDEL                                                          
      MM3=MDEL                                                          
      IF(M1.NE.0)MM1=M1                                                 
      IF(M2.NE.0)MM2=M2                                                 
      IF(M3.NE.0)MM3=M3                                                 
      IF(MODEL.EQ.0) GO TO 510                                          
      WRITE(IPR,1500) MM1,(HMODEL(I1,MM1),I1=1,5),MM2,(HMODEL(I2,MM2),  
     1  I2=1,5),MM3,(HMODEL(I3,MM3),I3=1,5)                             
1500  FORMAT('0 ATMOSPHERIC MODEL',/,                                   
     1  10X,'TEMPERATURE = ',I4,5X,5A4,/,                               
     1  10X,'WATER VAPOR = ',I4,5X,5A4,/,                               
     1  10X,'OZONE       = ',I4,5X,5A4)                                 
      WRITE(IPR,1501) M4,M5,M6,MDEF                                     
1501  FORMAT(20X,'  M4 = ',I5,' M5 = ',I5,' M6 = ',I5,' MDEF = ' ,I5)   
C                                                                       
510   IF(JPRT.EQ.0) GO TO 520                                           
      IF(ISEASN.EQ.0)ISEASN=1                                           
      IF(IVULCN.LE.0) IVULCN=1                                          
      IHVUL=IVULCN+10                                                   
      IF( IVULCN .EQ. 6) IHVUL = 11                                     
      IF( IVULCN .EQ. 7) IHVUL = 11                                     
      IF( IVULCN .EQ. 8) IHVUL = 13                                     
      IHMET=1                                                           
      IF(IVULCN.GT.1)IHMET=2                                            
      IF(IHAZE.EQ.0) GO TO 520                                          
      WRITE(IPR,1510)(HHAZE(I,IHAZE),I=1,5),VIS,(HHAZE(I2,6),I2=1,5),   
     1  (HHAZE(II,6),II=1,5),(HSEASN(IA,ISEASN),IA=1,5),                
     2  (HHAZE(I3,IHVUL),I3=1,5),                                       
     3  (HVULCN(IB,IVULCN),IB=1,5),(HSEASN(IC,ISEASN),IC=1,5),          
     4  (HHAZE(I4,16),I4=1,5),(HMET(I5,IHMET),I5=1,5)                   
1510  FORMAT('0 AEROSOL MODEL',/,10X,'REGIME',                          
     A  T35,'AEROSOL TYPE',T60,'PROFILE',T85,'SEASON',/,/,              
     B  10X,'BOUNDARY LAYER (0-2 KM)',T35,5A4,T60,F5.1,                 
     C  ' KM VIS AT SEA LEVEL',/,10X,'TROPOSPHERE  (2-10KM)',T35,       
     D  5A4,T60,5A4,T85,5A4,/,10X,'STRATOSPHERE (10-30KM)',             
     E  T35,5A4,T60,5A4,T85,5A4,/,10X,'UPPER ATMOS (30-100KM)',         
     F  T35,5A4,T60,5A4)                                                
520   CONTINUE                                                          
      IF(ITYPE.EQ.1) WRITE(IPR,1515) H1,RANGE                           
1515  FORMAT('0 HORIZONTAL PATH',/,10X,'ALTITUDE = ',F10.3,' KM',/,     
     1  10X,'RANGE    = ',F10.3,' KM')                                  
      IF(ITYPE.EQ.2) WRITE(IPR,1516) H1,H2,ANGLE,RANGE,BETA,LEN         
1516  FORMAT('0 SLANT PATH, H1 TO H2',/,                                
     1  10X,'H1    = ',F10.3,' KM',/,10X,'H2    = ',F10.3,' KM',/,      
     2  10X,'ANGLE = ',F10.3,' DEG',/,10X,'RANGE = ',F10.3,' KM',/,     
     3  10X,'BETA  = ',F10.3,' DEG',/,10X,'LEN   = ',I6)                
      IF(ITYPE.EQ.3) WRITE(IPR,1517) H1,H2,ANGLE                        
1517  FORMAT('0 SLANT PATH TO SPACE',/,                                 
     1  10X, 'H1    = ',F10.3,' KM',/,10X,'HMIN  = ',F10.3,' KM',/,     
     2  10X,'ANGLE = ',F10.3,' DEG')                                    
      IF (IEMSCT.NE.2) GO TO 550                                        
C                                                                       
C*****INTREPRET SOLAR SCATTERING PARAMETERS                             
C                                                                       
C                                                                       
      IF (IPARM.EQ.1) CALL SUBSOL (PARM3,PARM4,TIME,IDAY)               
C                                                                       
      WRITE (IPR,1530)                                                  
1530  FORMAT('0 SINGLE SCATTERING CONTROL PARAMETERS SUMMARY '/)        
      IF(IPARM.NE.2) WRITE (IPR,1532) PARM1,PARM2,PARM3,PARM4,TIME,PSIPO
     1,IDAY                                                             
1532  FORMAT(10X,'OBSERVER LATITUDE =',T35,F10.2,' DEG NORTH OF EQUATOR'
     1  ,/,10X,'OBSERVER LONGITUDE=',T35,F10.2,' DEG WEST OF GREENWICH',
     2  /,10X,'SUBSOLAR LATITUDE =',T35,F10.2,' NORTH OF EQUATOR',/,    
     3  10X,'SUBSOLAR LONGITUDE =',T35,F10.2,' WEST OF GREENWICH',/,    
     4  10X,'TIME (<0 IS UNDEF)=',T35,F10.3,' GREENWICH TIME',/,        
     5  10X,'PATH AZIMUTH =',T35,F10.3,' DEG EAST OF NORTH',/,          
     6  10X,'DAY OF YEAR =',T35,I10)                                    
      IF (IPARM.EQ.2) WRITE (IPR,1534)PARM1,PARM2,TIME,PSIPO,IDAY       
1534  FORMAT(10X,'RELATIVE AZIMUTH =',T35,F10.3,' DEG EAST OF NORTH',/, 
     1  10X,'SOLAR ZENITH =',T35,F10.3,' DEG ',/,                       
     2  10X,'TIME (<0 UNDEF) =',T35,F10.3,' GREENWICH TIME',/,          
     3  10X,'PATH AZIMUTH =',T35,F10.3,' DEG EAST OF NORTH',/,          
     4  10X,'DAY OF THE YEAR =',T35,I6)                                 
      IF (ISOURC.EQ.0) WRITE (IPR,1535)                                 
1535  FORMAT('0 EXTRATERRESTIAL SOURCE IS THE SUN')                     
      IF (ISOURC.EQ.1) WRITE (IPR,1536) ANGLEM                          
1536  FORMAT('0 EXTRATERRESTIAL SOURCE IS THE MOON, MOON PHASE ANGLE =',
     1  F10.2,' DEG')                                                   
      IF (IPH.EQ.0) WRITE (IPR,1538) G                                  
1538  FORMAT('O H-G PHASE FUNCTION ,G=',F10.3)                          
      IF (IPH.EQ.1) WRITE (IPR,1540)                                    
1540  FORMAT('0 USER SUPPLIED PHASE FUNCTION')                          
      IF (IPH.EQ.2) WRITE (IPR,1542)                                    
1542  FORMAT('0 PHASE FUNCTION FROM MIE DATA BASE')                     
550   CONTINUE                                                          
C     V1 =FLOAT(INT(V1/5.0+0.1))*5.0                                    
C     V2 =FLOAT(INT(V2/5.0+0.1))*5.0                                    
C     TO AVOID THE DIFFICULTY FOR V1=0                                  
      ALAM1= 99999.98                                                   
C     IF(V1.GT.0.)ALAM1=10000./V1                                       
C     ALAM2=10000./V2                                                   
C     IF(DV.LT.5.)DV=5.                                                 
C     DV=FLOAT(INT(DV/5+0.1))*5.0                                       
C     WRITE (IPR,1555) V1,ALAM1,V2,ALAM2,DV                             
C1555 FORMAT('0 FREQUENCY RANGE '/,10X,' V1 = ',F12.1,' CM-1  (',       
C    1  F10.2,' MICROMETERS)',/,10X,' V2 = ',F12.1,' CM-1  (',F10.2,    
C    2  ' MICROMETERS)',/10X,' DV = ',F12.1,' CM-1')                    
      IF(.NOT.MODTRN)THEN                                               
          IV1=5*(IV1/5)                                                 
          IV2=5*((IV2+4)/5)                                             
          IDV=5+5*((IDV-5)/5)                                           
      ENDIF                                                             
      IF(IV2.LT.IV1+IDV)THEN                                            
          WRITE(IPR,'(/41H IV2 WAS LESS THAN IV1 + IDV AND HAS BEEN,    
     1      6H RESET,/)')                                               
          IV2=IV1+IDV                                                   
      ENDIF                                                             
      IF(MODTRN)THEN                                                    
          IV1SAV=IV1                                                    
          IV2SAV=IV2                                                    
          IDVSAV=IDV                                                    
      ENDIF                                                             
      IF(IV1.NE.0)ALAM1=10000./IV1                                      
      ALAM2=10000./IV2                                                  
      IF(IFWHM.LT.1)IFWHM=1                                             
      IF(IFWHM.GT.50)IFWHM=50                                           
      WRITE(IPR,'(17H0 FREQUENCY RANGE,/10X,8H   IV1 =,I10,8H CM-1  (,  
     1  F10.2,13H MICROMETERS),/10X,8H   IV2 =,I10,8H CM-1  (,F10.2,    
     2  13H MICROMETERS),/10X,8H   IDV =,I10,5H CM-1,/10X,8H IFWHM =,   
     3  I10,5H CM-1)')IV1,ALAM1,IV2,ALAM2,IDV,IFWHM                     
C                                                                       
C*****LOAD ATMOSPHERIC PROFILE INTO /MODEL/                             
C                                                                       
      CALL STDMDL                                                       
C                                                                       
C    DEFINE COUNTER ITEST TO PREVENT ZENITH ANGLE QTHETA AND LAYER      
C    PATH LENGTH PL FROM BEING CHANGED DURING SOLAR CALCULATIONS        
555   DO 15 I=1,102                                                     
          DO 15 J=1,KMAX                                                
              WPATH(I,J)=0.0                                            
   15 WPATHS(I,J)=0.0                                                   
C                                                                       
      ITEST=0                                                           
C                                                                       
      IF (IMULT .EQ. 1) THEN                                            
          H1=ZM(1)                                                      
          H2=ZM(ML)                                                     
          ITYPE = 2                                                     
          ANGLE = 0.                                                    
          BETA = 0.                                                     
          RANGE =0.                                                     
          ISSGS = ISSGEO                                                
          ISSGEO = 0                                                    
C         CALL GEO (IERROR,BENDNG,MAXGEO)                               
          MSOFF=68                                                      
          CALL GEO (IERROR,BENDNG,MAXGEO,MSOFF)                         
          W15SV = W(15)                                                 
C                                                                       
C         W15SV  IS THE REL HUM FROM 0 TO SPACE                         
C         THIS REL HUM MAY BE DIFFERENT THAN THE PATH  REL HUM          
C         WHEN REL HUM ARE DIFFERENT THE ANSWER CAN CHANGE              
C                                                                       
          ISSGEO = ISSGS                                                
          IMSMX=IKMAX                                                   
          DO 35 N=1,IMSMX                                               
C             PLST(N)=PL(N)                                             
C             DO 35 K=1,KMAX                                            
C35       WPMS(N,K)=WPATH(N,K)                                          
   35     PLST(N)=PL(N)                                                 
C                                                                       
          IF(IEMSCT.EQ.2)  THEN                                         
              CALL SSGEO(IERROR,IPH,IPARM,PARM1,PARM2,                  
C    1          PARM3,PARM4,PSIPO,G,MAXGEO)                             
     1          PARM3,PARM4,PSIPO,G,MAXGEO,MSOFF)                       
              DO 30 N=1,IKMAX                                           
                  CSENSV(N) = ABS(CSZEN(N))                             
                  IF(CSENSV(N) .LT. 0.0174) CSENSV(N) = 0.0174          
   30         CONTINUE                                                  
C             DO 45 N=1,ML                                              
C                 DO 45 K=1,KMAX                                        
C                     WPMSS(N,K)=WPATHS(N,K)                            
C  45         CONTINUE                                                  
          ENDIF                                                         
      ENDIF                                                             
      H1     = H1S                                                      
      H2     = H2S                                                      
      ANGLE  = ANGLES                                                   
      RANGE  = RANGS                                                    
      BETA   = BETAS                                                    
      ITYPE  = ITYPES                                                   
      LEN    = LENS                                                     
C*****TRACE PATH THROUGH THE ATMOSPHERE AND CALCULATE ABSORBER AMOUNTS  
C                                                                       
      ISSGEO=0                                                          
C     RANGE=RN0                                                         
C     CALL GEO (IERROR,BENDNG,MAXGEO)                                   
      MSOFF=0                                                           
      CALL GEO(IERROR,BENDNG,MAXGEO,MSOFF)                              
      CALL AERTMP                                                       
      IF(IMULT. NE. 1) W15SV = W(15)                                    
C                                                                       
C   SAVE TEMPERATURE AND PATH INFO FOR LATER USE                        
C                                                                       
      IF(IMULT .EQ. 1)  THEN                                            
          DO 25 N=1,IKMAX                                               
   25     QTHETS(N) = QTHETA(N)                                         
      ENDIF                                                             
C                                                                       
      IF(IERROR.GT.0) GO TO 630                                         
      IF(IEMSCT.EQ.3 .AND. IERROR.EQ. -5) GO TO 557                     
      GO TO 558                                                         
  557 CONTINUE                                                          
      WRITE(IPR,1557)                                                   
 1557 FORMAT('0 DIRECT PATH TO SUN INTERSECTS THE EARTH: SKIP TO ',     
     1    'NEXT CASE')                                                  
      GO TO 630                                                         
  558 CONTINUE                                                          
C                                                                       
      IF(IEMSCT.EQ.2)CALL SSGEO(IERROR,IPH,IPARM,PARM1,PARM2,PARM3,     
C    1  PARM4,PSIPO,G,MAXGEO)                                           
     1  PARM4,PSIPO,G,MAXGEO,MSOFF)                                     
      W(15) = W15SV                                                     
C                                                                       
C     W15SV IS THE REL HUM  (FOR MULT SCAT THIS MAY BE DIFFERENT        
C     FROM PATH REL HUM)                                                
C                                                                       
C     THE SECOND CALL TO SSGEO IS TO GET THE CORRECT ANGLES FOR         
C     PHASE FUNCTIONS                                                   
C                                                                       
C     SAVE SOLAR PATH INFORMATION                                       
C                                                                       
      IF(IERROR.GT.0) GO TO 630                                         
C                                                                       
      IF(IMULT.EQ.1) THEN                                               
          DO 60 IK = 1,IMSMX                                            
              QTHETA(IK) = QTHETS(IK)                                   
              PL(IK)=PLST(IK)                                           
              IF(IEMSCT.EQ.2) CSZEN(IK)=CSENSV(IK)                      
60        CONTINUE                                                      
      ENDIF                                                             
C                                                                       
C*****LOAD AEROSOL EXTINCTION, ABSORPTION, AND ASYMMETRY COEFFICIENTS   
C                                                                       
      CALL EXABIN                                                       
C                                                                       
C*****WRITE HEADER DATA TO TAPE 7                                       
C                                                                       
C560  WRITE(IPU,1110)MODEL,ITYPE,IEMSCT,IMULT,M1,M2,M3,                 
C    1  M4,M5,M6,MDEF,IM,NOPRT,TBOUND,SALB                              
  560 CONTINUE                                                          
Crea0892  560 WRITE(IPU,'(L1,I4,12I5,F8.3,F7.2)')MODTRN,MODEL           
Crea08921,ITYPE,IEMSCT,IMULT,M1,M2,M3,M4,M5,M6,MDEF,IM,NOPRT,TBOUND,SALB
C     WRITE(IPR1,1110)MODEL,ITYPE,IEMSCT,IMULT,M1,M2,M3,                
C    1  M4,M5,M6,MDEF,IM,NOPRT,TBOUND,SALB                              
Crea0892      WRITE(IPR1,'(L1,I4,12I5,F8.3,F7.2)')MODTRN,MODEL          
Crea08921,ITYPE,IEMSCT,IMULT,M1,M2,M3,M4,M5,M6,MDEF,IM,NOPRT,TBOUND,SALB
Crea0892 WRITE(IPU,1200)IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,VIS,WSS,WHH,
Crea0892     1  RAINRT,GNDALT                                           
Crea0892WRITE(IPR1,1200)IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,VIS,WSS,WHH,
Crea0892     1  RAINRT,GNDALT                                           
Crea0892      WRITE(IPU,1210) CTHIK,CALT,CEXT,ISEED                     
Crea0892      WRITE(IPR1,1210) CTHIK,CALT,CEXT,ISEED                    
Crea0892      WRITE(IPU,1230)ZCVSA,ZTVSA,ZINVSA                         
Crea0892      WRITE(IPR1,1230)ZCVSA,ZTVSA,ZINVSA                        
Crea0892      WRITE(IPU,1255) ML,(HMODEL(I,7),I=1,5)                    
Crea0892      WRITE(IPR1,1255) ML,(HMODEL(I,7),I=1,5)                   
Crea08921255  FORMAT( I5,18A4)                                          
Crea0892   IF(MODEL.NE.0)WRITE (IPU,1312) H1,H2,ANGLE,RANGE,BETA,RO,LEN 
Crea0892  IF(MODEL.NE.0)WRITE (IPR1,1312) H1,H2,ANGLE,RANGE,BETA,RO,LEN 
      HMDLZ(8) = RANGE                                                  
Crea0892      IF(MODEL.EQ.0) WRITE(IPU,1560)(HMDLZ(K),K=1,8)            
Crea0892      IF(MODEL.EQ.0) WRITE(IPR1,1560)(HMDLZ(K),K=1,8)           
Crea08921560  FORMAT(3F10.3,5E10.3)                                     
Crea0892      WRITE(IPU,1320)  IPARM,IPH,IDAY,ISOURC                    
Crea0892      WRITE(IPR1,1320) IPARM,IPH,IDAY,ISOURC                    
Crea0892    WRITE(IPU,1322) PARM1,PARM2,PARM3,PARM4,TIME,PSIPO,ANGLEM,G 
Crea0892    WRITE(IPR1,1322)PARM1,PARM2,PARM3,PARM4,TIME,PSIPO,ANGLEM,G 
C     WRITE(IPU,1400) V1,V2,DV                                          
C     WRITE(IPR1,1400)V1,V2,DV                                          
Crea0892      WRITE(IPU,'(4I10)')IV1,IV2,IDV,IFWHM                      
Crea0892      WRITE(IPR1,'(4I10)')IV1,IV2,IDV,IFWHM                     
C                                                                       
      IRAIN=0                                                           
      IF(RAINRT.GT.0) IRAIN=1                                           
CCC                                                                     
CCC   CALCULATE EQUIVALENT LIQUID WATER CONSTANTS                       
CCC                                                                     
      CALL EQULWC                                                       
      IF(IRPT .EQ. -4) GO TO 565                                        
Crea0892      READ(IRD,1600) IRPT                                       
      IRPT = 0                                                          
      IRPTS = IRPT                                                      
  565 CONTINUE                                                          
Crea08921600  FORMAT(I5)                                                
Crea0892565   WRITE(IPU,1600) IRPT                                      
Crea0892      WRITE(IPR1,1600)IRPT                                      
C                                                                       
Crea0892      CALL TRANS(IPH,ISOURC,IDAY,ANGLEM,IRPT)                   
      CALL TRANS(IPH,ISOURC,IDAY,ANGLEM,IRPT,SPECALBX,RADBUF,TRANBUF,   
     +           SKYBUF)                                                
C                                                                       
C     TRANS RETURNS IRPT = -4 IF THE SPECTRAL RANGE EXTENDS BEYOND THE  
C     BAND MODEL TAPE.  IN THIS CASE, A LOWTRAN 7 CALCULATION IS        
C     PERFORMED FOR THE SHORT WAVELENGTHS AND THEN THE ORIGINAL INPUT   
C     IS RESTORED.                                                      
C                                                                       
      IF(IRPT.EQ.-4)THEN                                                
          IF(MODTRN)THEN                                                
              MODTRN=.FALSE.                                            
              WRITE(IPR,'(36H1 SPECTRAL RANGE EXTENDS BEYOND BAND,      
     1          48H MODEL TAPE.  FINISH CALCULATION USING LOWTRAN 7)')  
              IDV = 5                                                   
              IV1 = 17905                                               
Crea0892              WRITE(IPU,1620)                                   
Crea0892              WRITE(IPR1,1620)                                  
              GO TO 401                                                 
          ELSE                                                          
              MODTRN=.TRUE.                                             
              IV1=IV1SAV                                                
              IV2=IV2SAV                                                
              IDV=IDVSAV                                                
          ENDIF                                                         
      ENDIF                                                             
      IRPT = IRPTS                                                      
C                                                                       
C*****WRITE END OF FILE ON TAPE 7                                       
630   CONTINUE                                                          
      IRPT = 0                                                          
Crea0892630   IF(IERROR .GT. 0) THEN                                    
Crea0892          READ(IRD,1600,END=900) IRPT                           
Crea0892          WRITE(IPU,1600) IRPT                                  
Crea0892          WRITE(IPR1,1600)IRPT                                  
Crea0892      ENDIF                                                     
Crea0892      WRITE(IPU,1620)                                           
Crea0892      WRITE(IPR1,1620)                                          
Crea08921620  FORMAT(' -9999.')                                         
C                                                                       
Crea0892      WRITE(IPR,1630)IRPT                                       
Crea08921630  FORMAT('0 CARD 5 *****',I5)                               
      IF (IRPT.EQ.0) GO TO 900                                          
      IF (IRPT.EQ.4) GO TO 400                                          
      IF (IRPT.GT.1 .AND. IEMSCT.GE.2) THEN                             
          PRINT*,'/!! ERROR IN INPUT IEMSCT GE 2 IRPT GT 1!'            
          STOP                                                          
      ENDIF                                                             
      IF (IRPT.GT.4) GO TO 900                                          
      GO TO (100,900,300,400), IRPT                                     
Crea0494  900 STOP                                                      
  900 CONTINUE                                                          
      CLOSE(IPR)                                                        
      CLOSE(IPU)                                                        
      RETURN                                                            
      END                                                               
      SUBROUTINE EQULWC                                                 
CCC                                                                     
CCC   EQUIVALENT LIQUID  WATER CONSTANTS FOR BEXT (0.55UM)=1.0KM-1      
CCC   AWCCON(1-4) IS SET TO ONE OF THE CONSTANTS FOR EACH AEROSOL       
CCC   IN SUBROUTINE EXABIN AND MULTIPLIED BY THE BEXT (DENSTY(N,I))     
CCC   WHERE N=7,12,13 OR 14 AND I IS THE NUMBER OF LAYERS               
CCC                                                                     
Crea0892      COMMON RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63)    
C     COMMON             WPATH(68, 63),TBBY(68)                         
Crea0892 COMMON IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12)
Crea0892      COMMON ABSC(5,47),EXTC(5,47),ASYM(5,47),VX2(47),AWCCON(5) 
      COMMON /UNLABEL/ RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63), 
     +        IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12), 
     +        ABSC(5,47),EXTC(5,47),ASYM(5,47),VX2(47),AWCCON(5)        
      COMMON /CNTRL/ KMAX,M,IKMAX,NL,ML,IKLO,ISS,IMULT                  
      COMMON/MODEL/   ZM(34),PM(34),TM(34),RFNDX(34),DENSTY(63,34),     
     1 CLDAMT(34),RRAMT(34),EQLWC(34),HAZEC(34)                         
      DO 140 I=1,ML                                                     
      IF(DENSTY(7,I).NE.0.0) EQLWC(I)=DENSTY(7,I)*AWCCON(1)             
      IF(DENSTY(12,I).NE.0.0) EQLWC(I)=DENSTY(12,I)*AWCCON(2)           
      IF(DENSTY(13,I).NE.0.0) EQLWC(I)=DENSTY(13,I)*AWCCON(3)           
      IF(DENSTY(14,I).NE.0.0) EQLWC(I)=DENSTY(14,I)*AWCCON(4)           
140   CONTINUE                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE EXABIN                                                 
C                                                                       
C      LOADS EXTINCTION, ABSORPTION AND ASYMMETRY COEFFICIENTS          
C      FOR THE FOUR AEROSOL ALTITUDE REGIONS                            
C                                                                       
C      MODIFIED FOR ASYMMETRY - JAN 1986 (A.E.R. INC.)                  
C                                                                       
      COMMON /CARD1/ MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB  
     1  ,MODTRN                                                         
      LOGICAL MODTRN                                                    
      COMMON /CARD2/ IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,VIS,WSS,WHH,   
     1    RAINRT                                                        
      COMMON /CARD2D/ IREG(4),ALTB(4),IREGC(4)                          
      COMMON /CARD3/ H1,H2,ANGLE,RANGE,BETA,RE,LEN                      
C     COMMON /CARD4/ V1,V2,DV                                           
      COMMON /CNSTNS/ PI,CA,DEG,GCAIR,BIGNUM,BIGEXP                     
C                                                                       
Crea0892      COMMON RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63)    
C     COMMON             WPATH(68, 63),TBBY(68)                         
Crea0892 COMMON IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12)
Crea0892      COMMON ABSC(5,47),EXTC(5,47),ASYM(5,47),VX0(47),AWCCON(5) 
      COMMON /UNLABEL/ RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63), 
     +        IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12), 
     +        ABSC(5,47),EXTC(5,47),ASYM(5,47),VX0(47),AWCCON(5)        
      COMMON /EXTD  /  VX2(47),RUREXT(47,4),RURABS(47,4),RURSYM(47,4),  
     1 URBEXT(47,4),URBABS(47,4),URBSYM(47,4),OCNEXT(47,4),             
     2 OCNABS(47,4),OCNSYM(47,4),TROEXT(47,4),TROABS(47,4),             
     3 TROSYM(47,4),FG1EXT(47),FG1ABS(47),FG1SYM(47),                   
     4 FG2EXT(47),FG2ABS(47),FG2SYM(47),BSTEXT(47),BSTABS(47),          
     5 BSTSYM(47),AVOEXT(47),AVOABS(47),AVOSYM(47),FVOEXT(47),          
     6 FVOABS(47),FVOSYM(47),DMEEXT(47),DMEABS(47),DMESYM(47),          
     7 CCUEXT(47),CCUABS(47),CCUSYM(47),CALEXT(47),CALABS(47),          
     8 CALSYM(47),CSTEXT(47),CSTABS(47),CSTSYM(47),CSCEXT(47),          
     9 CSCABS(47),CSCSYM(47),CNIEXT(47),CNIABS(47),CNISYM(47)           
      COMMON/CIRR/ CI32XT(47),CI32AB(47),CI32G(47),                     
     B             CIR2XT(47),CIR2AB(47),CIR2G(47)                      
      DIMENSION RHZONE(4)                                               
      DIMENSION ELWCR(4),ELWCU(4),ELWCM(4),ELWCT(4)                     
      REAL MDLWC                                                        
      DATA RHZONE/0.,70.,80.,99./                                       
      DATA ELWCR/3.517E-04,3.740E-04,4.439E-04,9.529E-04/               
      DATA ELWCM/4.675E-04,6.543E-04,1.166E-03,3.154E-03/               
      DATA ELWCU/3.102E-04,3.802E-04,4.463E-04,9.745E-04/               
      DATA ELWCT/1.735E-04,1.820E-04,2.020E-04,2.408E-04/               
      DATA AFLWC/1.295E-02/,RFLWC/1.804E-03/,CULWC/7.683E-03/           
      DATA ASLWC/4.509E-03/,STLWC/5.272E-03/,SCLWC/4.177E-03/           
      DATA SNLWC/7.518E-03/,BSLWC/1.567E-04/,FVLWC/5.922E-04/           
      DATA AVLWC/1.675E-04/,MDLWC/4.775E-04/                            
      DATA TNLWC/3.446E-3/ ,TKLWC/5.811E-2/                             
      DO 2 I = 1,4                                                      
2     AWCCON(I) = 0                                                     
      DO 5 I=1,47                                                       
    5 VX0(I)=VX2(I)                                                     
CC    I1=1                                                              
      NB=1                                                              
      NE=46                                                             
C                                                                       
C     47 VALUE CALCULATED IN AEREXT                                     
C                                                                       
CC    IF (IHAZE.EQ.7) I1=2                                              
CC    IF(IHAZE.EQ.3)  I1 = 2                                            
      DO 185 M=1 ,4                                                     
      IF(IREG(M) .NE. 0)        GO TO 185                               
      ITA=ICH(M)                                                        
      ITC=ICH(M)-7                                                      
      ITAS = ITA                                                        
      IF(IREGC(M) .NE. 0) GO TO 100                                     
12    CONTINUE                                                          
      WRH=W(15)                                                         
      IF (ICH(M).EQ.6.AND.M.NE.1) WRH=70.                               
C     THIS CODING  DOES NOT ALLOW TROP RH DEPENDENT  ABOVE EH(7,I)      
C     DEFAULTS TO TROPOSPHERIC AT 70. PERCENT                           
      DO 10 I=2,4                                                       
      IF (WRH.LT.RHZONE(I)) GO TO 15                                    
   10 CONTINUE                                                          
      I=4                                                               
   15 II=I-1                                                            
      IF(WRH.GT.0.0.AND.WRH.LT.99.)X=ALOG(100.0-WRH)                    
      X1=ALOG(100.0-RHZONE(II))                                         
      X2=ALOG(100.0-RHZONE(I))                                          
      IF (WRH.GE.99.0) X=X2                                             
      IF (WRH.LE.0.0) X=X1                                              
17    DO 80 N=NB,NE                                                     
      ITA = ITAS                                                        
      IF(ITA.EQ.3. AND. M.EQ.1) GO TO 18                                
      ABSC(M,N)=0.                                                      
      EXTC(M,N)=0.                                                      
      ASYM(M,N)=0.                                                      
      IF(ITA.GT.6) GO TO 45                                             
      IF(ITA.LE.0) GO TO 80                                             
18    IF(N.GE.41. AND. ITA.EQ.3) ITA = 4                                
C     RH DEPENDENT AEROSOLS                                             
      GO TO (20,20,22,25,30,35), ITA                                    
   20 Y2=ALOG(RUREXT(N,I))                                              
      Y1=ALOG(RUREXT(N,II))                                             
      Z2=ALOG(RURABS(N,I))                                              
      Z1=ALOG(RURABS(N,II))                                             
      A2=ALOG(RURSYM(N,I))                                              
      A1=ALOG(RURSYM(N,II))                                             
      E2=ALOG(ELWCR(I))                                                 
      E1=ALOG(ELWCR(II))                                                
      GO TO 40                                                          
  22  IF(M.GT.1) GO TO 25                                               
      A2=ALOG(OCNSYM(N,I))                                              
      A1=ALOG(OCNSYM(N,II))                                             
      A=A1+(A2-A1)*(X-X1)/(X2-X1)                                       
      ASYM(M,N)=EXP(A)                                                  
      E2=ALOG(ELWCM(I))                                                 
      E1=ALOG(ELWCM(II))                                                
C                                                                       
C     NAVY MARITIME AEROSOL CHANGES TO MARINE IN MICROWAVE              
C     NO NEED TO DEFINE EQUIVALENT WATER                                
C                                                                       
      GO TO 80                                                          
   25 Y2=ALOG(OCNEXT(N,I))                                              
      Y1=ALOG(OCNEXT(N,II))                                             
      Z2=ALOG(OCNABS(N,I))                                              
      Z1=ALOG(OCNABS(N,II))                                             
      A2=ALOG(OCNSYM(N,I))                                              
      A1=ALOG(OCNSYM(N,II))                                             
      E2=ALOG(ELWCM(I))                                                 
      E1=ALOG(ELWCM(II))                                                
      GO TO 40                                                          
   30 Y2=ALOG(URBEXT(N,I))                                              
      Y1=ALOG(URBEXT(N,II))                                             
      Z2=ALOG(URBABS(N,I))                                              
      Z1=ALOG(URBABS(N,II))                                             
      A2=ALOG(URBSYM(N,I))                                              
      A1=ALOG(URBSYM(N,II))                                             
      E2=ALOG(ELWCU(I))                                                 
      E1=ALOG(ELWCU(II))                                                
      GO TO 40                                                          
   35 Y2=ALOG(TROEXT(N,I))                                              
      Y1=ALOG(TROEXT(N,II))                                             
      Z2=ALOG(TROABS(N,I))                                              
      Z1=ALOG(TROABS(N,II))                                             
      A2=ALOG(TROSYM(N,I))                                              
      A1=ALOG(TROSYM(N,II))                                             
      E2=ALOG(ELWCT(I))                                                 
      E1=ALOG(ELWCT(II))                                                
   40 Y=Y1+(Y2-Y1)*(X-X1)/(X2-X1)                                       
      ZK=Z1+(Z2-Z1)*(X-X1)/(X2-X1)                                      
      A=A1+(A2-A1)*(X-X1)/(X2-X1)                                       
      ABSC(M,N)=EXP(ZK)                                                 
      EXTC(M,N)=EXP(Y)                                                  
      ASYM(M,N)=EXP(A)                                                  
      IF(N.EQ.1) EC=E1+(E2-E1)*(X-X1)/(X2-X1)                           
      IF(N.EQ.1) AWCCON(M)=EXP(EC)                                      
      GO TO 80                                                          
   45 IF (ITA.GT.19) GO TO 75                                           
      IF (ITC.LT.1) GO TO 80                                            
      GO TO (50,55,80,60,65,70,65,70,60,60,70,75), ITC                  
   50 ABSC(M,N)=FG1ABS(N)                                               
      EXTC(M,N)=FG1EXT(N)                                               
      ASYM(M,N)=FG1SYM(N)                                               
      IF(N.EQ.1) AWCCON(M)=AFLWC                                        
      GO TO 80                                                          
   55 ABSC(M,N)=FG2ABS(N)                                               
      EXTC(M,N)=FG2EXT(N)                                               
      ASYM(M,N)=FG2SYM(N)                                               
      IF(N.EQ.1) AWCCON(M)=RFLWC                                        
      GO TO 80                                                          
   60 ABSC(M,N)=BSTABS(N)                                               
      EXTC(M,N)=BSTEXT(N)                                               
      ASYM(M,N)=BSTSYM(N)                                               
      IF(N.EQ.1) AWCCON(M)=BSLWC                                        
      GO TO 80                                                          
   65 ABSC(M,N)=AVOABS(N)                                               
      EXTC(M,N)=AVOEXT(N)                                               
      ASYM(M,N)=AVOSYM(N)                                               
      IF(N.EQ.1) AWCCON(M)=AVLWC                                        
      GO TO 80                                                          
   70 ABSC(M,N)=FVOABS(N)                                               
      EXTC(M,N)=FVOEXT(N)                                               
      ASYM(M,N)=FVOSYM(N)                                               
      IF(N.EQ.1) AWCCON(M)=FVLWC                                        
      GO TO 80                                                          
   75 ABSC(M,N)=DMEABS(N)                                               
      EXTC(M,N)=DMEEXT(N)                                               
      ASYM(M,N)=DMESYM(N)                                               
      IF(N.EQ.1) AWCCON(M)=MDLWC                                        
   80 CONTINUE                                                          
      GO TO 185                                                         
100   CONTINUE                                                          
CCC                                                                     
CCC       SECTION TO LOAD EXTINCTION AND ABSORPTION COEFFICIENTS        
CCC       FOR CLOUD AND OR RAIN MODELS                                  
CCC                                                                     
      DO 150 N=NB,NE                                                    
      ABSC(M,N)=0.0                                                     
      EXTC(M,N)=0.0                                                     
      ASYM(M,N)=0.0                                                     
      IC=ICLD                                                           
      GO TO (125,130,135,140,145,135,145,145,125,125,125), IC           
125   ABSC(M,N)=CCUABS(N)                                               
      EXTC(M,N)=CCUEXT(N)                                               
      ASYM(M,N)=CCUSYM(N)                                               
      IF(N.EQ.1) AWCCON(M)=CULWC                                        
      GO TO 150                                                         
130   ABSC(M,N)=CALABS(N)                                               
      EXTC(M,N)=CALEXT(N)                                               
      ASYM(M,N)=CALSYM(N)                                               
      IF(N.EQ.1) AWCCON(M)=ASLWC                                        
      GO TO 150                                                         
135   ABSC(M,N)=CSTABS(N)                                               
      EXTC(M,N)=CSTEXT(N)                                               
      ASYM(M,N)=CSTSYM(N)                                               
      IF(N.EQ.1) AWCCON(M)=STLWC                                        
      GO TO 150                                                         
140   ABSC(M,N)=CSCABS(N)                                               
      EXTC(M,N)=CSCEXT(N)                                               
      ASYM(M,N)=CSCSYM(N)                                               
      IF(N.EQ.1) AWCCON(M)=SCLWC                                        
      GO TO 150                                                         
145   ABSC(M,N)=CNIABS(N)                                               
      EXTC(M,N)=CNIEXT(N)                                               
      ASYM(M,N)=CNISYM(N)                                               
      IF(N.EQ.1) AWCCON(M)=SNLWC                                        
150   CONTINUE                                                          
185   CONTINUE                                                          
      DO 200 N=1,47                                                     
      ABSC(5,N)=0.                                                      
      EXTC(5,N)=0.                                                      
      ASYM(5,N)=0.                                                      
      AWCCON(5)=0.                                                      
      IF(ICLD .EQ. 18) THEN                                             
           EXTC(5,N)= CI32XT(N)                                         
           ABSC(5,N)= CI32AB(N)                                         
           ASYM(5,N)= CI32G(N)                                          
           AWCCON(5)=3.446E-3                                           
      ENDIF                                                             
      IF(ICLD .EQ. 19) THEN                                             
           EXTC(5,N)= CIR2XT(N)                                         
           ABSC(5,N)= CIR2AB(N)                                         
           ASYM(5,N)= CIR2G(N)                                          
           AWCCON(5)=5.811E-2                                           
      ENDIF                                                             
200   CONTINUE                                                          
      RETURN                                                            
C                                                                       
      END                                                               
      SUBROUTINE EXPINT(X,X1,X2,A)                                      
C     EXPONENTIAL INTERPOLATION                                         
      IF(X1.EQ.0.0 .OR. X2.EQ.0.0)  GO TO 100                           
      X = X1*(X2/X1)**A                                                 
      RETURN                                                            
  100 X = X1+(X2-X1)*A                                                  
      RETURN                                                            
      END                                                               
      SUBROUTINE FDBETA(H1,H2,BETAS,ANGLE,PHI,LEN,HMIN,IERROR)          
C********************************************************************** 
C     GIVEN H1,H2,AND BETA (THE EARTH CENTERED ANGLE) THIS SUBROUTINE   
C     CALCULATES THE INITIAL ZENITH ANGLE AT H1 THROUGH AN ITERATIVE    
C     PROCEDURE                                                         
C********************************************************************** 
      COMMON /IFIL/ IRD,IPR,IPU,NPR,IPR1                                
      COMMON /PARMTR/ RE,DELTAS,ZMAX,IMAX,IMOD,IBMAX,IPATH              
      COMMON /CNSTNS/ PI,CA,DEG,GCAIR,BIGNUM,BIGEXP                     
      DOUBLE PRECISION RA,RB,SG,ANGLE1,ANGLE2,BETA,DBETA                
C     DATA TOLRNC/1.0E-4/,ITERMX/10/,BETD /0.02/                        
      DATA TOLRNC/5.0E-3/,ITERMX/10/,BETD /0.04/                        
      DATA ZER /0./                                                     
      BETA = BETAS                                                      
      IFLAG = 0                                                         
      IF(H1.GT.H2) GO TO 100                                            
      IORDER = 1                                                        
      HA = H1                                                           
      HB = H2                                                           
      GO TO 120                                                         
  100 CONTINUE                                                          
      IORDER = -1                                                       
      HA = H2                                                           
      HB = H1                                                           
  120 CONTINUE                                                          
C*****SET PARAMETER TO SUPRESS CALCULATION OF AMOUNTS                   
      IAMTB = 2                                                         
C*****GUESS AT ANGLE, INTEGRATE TO FIND BETA, TEST FOR                  
C*****CONVERGENCE, AND ITERATE                                          
C*****FIRST GUESS AT ANGLE: USE THE GEOMETRIC SOLUTION(NO REFRACTION)   
      WRITE(IPR,24)                                                     
   24 FORMAT(///,' CASE 2D: GIVEN H1, H2,  BETA:',//,                   
     1    ' ITERATE AROUND ANGLE UNTIL BETA CONVERGES',//,              
     2    ' ITER    ANGLE',T21,'BETA',T30,'DBETA',T40,'RANGE',          
     3    T51,'HMIN',T61,'PHI',T70,'BENDING',/,                         
     4    T10,'(DEG)',T21,'(DEG)',T30,'(DEG)',T41,'(KM)',               
     5    T51,'(KM)',T60,'(DEG)',T71,'(DEG)',/)                         
      ITER = 0                                                          
      RA = RE+HA                                                        
      RB = RE+HB                                                        
      SG = SQRT(RA**2+RB**2-2.0*RA*RB*COS(BETA/DEG))                    
      ANGLE1 = 180.0-ACOS((RA**2+SG**2-RB**2)/(2.0*RA*SG))*DEG          
      HMIN = HA                                                         
      IF(ANGLE1.GT.90.0)  HMIN = RA*SIN(ANGLE1/DEG)-RE                  
      HMING = HMIN                                                      
      ANGLS1 = ANGLE1                                                   
      CALL FNDHMN(HA,ANGLS1,HB,LEN,ITER,HMIN,PHI,IERROR)                
      LEN = 0                                                           
      IF(HMIN.LT.HA) LEN = 1                                            
      CALL RFPATH(HA,HB,ANGLS1,PHI,LEN,HMIN,IAMTB,BETA1,RANGE,BENDNG)   
      WRITE(IPR,26)  ITER,ANGLE1,BETA ,ZER  ,SG    ,HMING,ZER,ZER       
C                                                                       
C     OBTAIN DERIVATIVE                                                 
C                                                                       
      SG = SQRT(RA**2+RB**2-2.0*RA*RB*COS((BETA+BETD)/DEG))             
      ANGLEP = 180.0-ACOS((RA**2+SG**2-RB**2)/(2.0*RA*SG))*DEG          
      DANG = ANGLE1 - ANGLEP                                            
      IF(HMIN.GE.0.0) GO TO 310                                         
      IFLAG = 1                                                         
      HMIN = 0.0                                                        
      CALL FNDHMN(HMIN,90.0,HA,LEN,ITER,HMIN,ANGLS1,IERROR)             
  310 CONTINUE                                                          
      ITER = 1                                                          
      LEN = 0                                                           
      IF(ANGLE1.GT.90.0) LEN = 1                                        
      CALL FNDHMN(HA,ANGLS1,HB,LEN,ITER,HMIN,PHI,IERROR)                
      LEN = 0                                                           
      IF(HMIN.LT.HA) LEN = 1                                            
      CALL RFPATH(HA,HB,ANGLS1,PHI,LEN,HMIN,IAMTB,BETA1,RANGE,BENDNG)   
      DBETA = BETA-BETA1                                                
      WRITE(IPR,26)  ITER,ANGLE1,BETA1,DBETA,RANGE,HMIN,PHI,BENDNG      
   26 FORMAT(I5,3F10.4,2F10.3,2F10.4)                                   
      IF(IFLAG.EQ.1 .AND. BETA1.LT.BETA) GO TO 9005                     
  320 CONTINUE                                                          
      ANGLEP = ANGLE1 -DANG                                             
      LEN = 0                                                           
      IF(ANGLEP.GT.90.0) LEN = 1                                        
      CALL FNDHMN(HA,ANGLEP,HB,LEN,ITER,HMIN,PHI,IERROR)                
      LEN = 0                                                           
      IF(HMIN.LT.HA) LEN = 1                                            
      CALL RFPATH(HA,HB,ANGLEP,PHI,LEN,HMIN,IAMTB,BETAP,RANGE,BENDNG)   
      IF(ABS(BETA1-BETAP).LT.TOLRNC) GO TO 330                          
      ITER = ITER+1                                                     
      DC = BETAP - BETA1                                                
C     DERIV = -DC/BETD                                                  
       ANGLE2 = ANGLE1+(ANGLE1-ANGLEP)*(BETA-BETA1)/(BETA1-BETAP)       
      LEN = 0                                                           
      IF(ANGLE2.GT.90.0) LEN = 1                                        
      ANGLS2 = ANGLE2                                                   
      CALL FNDHMN(HA,ANGLS2,HB,LEN,ITER,HMIN,PHI,IERROR)                
      LEN = 0                                                           
      IF(HMIN.LT.HA) LEN = 1                                            
      CALL RFPATH(HA,HB,ANGLS2,PHI,LEN,HMIN,IAMTB,BETA2,RANGE,BENDNG)   
      DBETA = BETA-BETA2                                                
      WRITE(IPR,26)  ITER,ANGLE2,BETA2,DBETA,RANGE,HMIN,PHI,BENDNG      
      IF(BETA2.LT.BETA.AND.HMIN.LT.0.0) GO TO 9005                      
      ANGLE1 = ANGLE2                                                   
      ANGLS1 = ANGLE1                                                   
C                                                                       
      BETA1 = BETA2                                                     
C     BETA2 = BETA3                                                     
      IF(ABS(BETA-BETA2).LT.TOLRNC) GO TO 340                           
      IF(ITER.GT.ITERMX) GO TO 9006                                     
      GO TO 320                                                         
  330 ANGLE2 = ANGLEP                                                   
      ANGLS2 = ANGLE2                                                   
      BETA = BETAP                                                      
  340 CONTINUE                                                          
      IF(HMIN.LT.0.0) GO TO 9005                                        
C*****CONVERGED TO A SOLUTION                                           
      ANGLE = ANGLE2                                                    
      BETA = BETA2                                                      
C*****ASSIGN ANGLE AND PHI TO PROPER H1 AND H2                          
      IF(IORDER.EQ.1) GO TO 350                                         
      TEMP = PHI                                                        
      PHI = ANGLE                                                       
      ANGLE = TEMP                                                      
  350 CONTINUE                                                          
      BETAS = BETA                                                      
      RETURN                                                            
C*****                                                                  
C*****ERROR MESSAGES                                                    
C*****                                                                  
 9005 CONTINUE                                                          
      WRITE(IPR,45)                                                     
   45 FORMAT('0FDBETA, CASE 2D(H1,H2,BETA): REFRACTED TANGENT ',        
     1    'HEIGHT IS LESS THAN ZERO-PATH INTERSECTS THE EARTH',         
     2    //,10X,'BETA IS TOO LARGE FOR THIS H1 AND H2')                
      GO TO 9900                                                        
 9006 CONTINUE                                                          
      WRITE(IPR,46) H1,H2,BETA,ITER,ANGLE1,BETA1,ANGLE2,BETA2           
C    1    ANGLE3,BETA3                                                  
   46 FORMAT('0FDBETA, CASE 2D (H1,H2,BETA): SOLUTION DID NOT ',        
     1    ' CONVERGE',//,10X,'H1 = ',F12.6,'    H2 = ',F12.6,           
     2    '    BETA = ',F12.6,'    ITERATIONS = ',I4,//,                
     3    10X,'LAST THREE ITERATIONS ',//,                              
     4    (10X,'ANGLE = ',F15.9,'    BETA = ',F15.9))                   
 9900 IERROR = 1                                                        
      RETURN                                                            
      END                                                               
      SUBROUTINE FILL(HA,HB,JNEXT)                                      
C********************************************************************   
C     THIS SUBROUTINE DEFINES THE ATMOSPHERIC BOUNDARIES OF THE PATH    
C     FROM HA TO HB AND INTERPOLATES (EXTRAPOLATES) THE DENSITIES TO    
C     THESE BOUNDARIES ASSUMING THE DENSITIES VARY EXPONENTIALLY        
C     WITH HEIGHT                                                       
C********************************************************************   
      COMMON /IFIL/ IRD,IPR,IPU,NPR,IPR1                                
      COMMON /MODEL/ Z(34),P(34),T(34),RFNDX(34),DENSTY(63,34),         
     1 CLDAMT(34),RRAMT(34),EQLWC(34),HAZEC(34)                         
      COMMON /PARMTR/ RE,DELTAS,ZMAX,IMAX,IMOD,IBMAX,IPATH              
      COMMON /CNSTNS/ PI,CA,DEG,GCAIR,BIGNUM,BIGEXP                     
      COMMON /CNTRL/ KMAX,M,IKMAX,NL,ML,IKLO,ISSGEO,IMULT               
      COMMON /RFRPTH/ ZP(35),PP(35),TP(35),RFNDXP(35),SP(35),           
     1    PPSUM(35),TPSUM(35),RHOPSM(35),DENP(63,35),AMTP(63,35)        
      IF(HA.LT.HB) GO TO 90                                             
      WRITE(IPR,22) HA,HB,JNEXT                                         
   22 FORMAT('0SUBROUTINE FILL- ERROR, HA .GE. HB',//,                  
     1    10X,'HA, HB, JNEXT = ',2E25.15,I6)                            
      STOP                                                              
   90 CONTINUE                                                          
C*****FIND Z(IA): THE SMALLEST Z(I).GT.HA                               
      DO 100 I=1,IMAX                                                   
      IF(HA.GE.Z(I)) GO TO 100                                          
      IA = I                                                            
      GO TO 110                                                         
  100 CONTINUE                                                          
      IA = IMAX+1                                                       
      IB = IA                                                           
      GO TO 130                                                         
C*****FIND Z(IB): THE SMALLEST Z(I).GE.HB                               
  110 CONTINUE                                                          
      DO 120 I=IA,IMAX                                                  
      IF(HB-Z(I).GT. .0001) GO TO 120                                   
      IB = I                                                            
      GO TO 130                                                         
  120 CONTINUE                                                          
      IB = IMAX+1                                                       
  130 CONTINUE                                                          
C*****INTERPOLATE DENSITIES TO HA, HB                                   
      ZP(JNEXT) = HA                                                    
      I2 = IA                                                           
      IF(I2.EQ.1) I2 = 2                                                
      IF(I2.GT.IMAX) I2 = IMAX                                          
      I1 = I2-1                                                         
      A = (HA-Z(I1))/(Z(I2)-Z(I1))                                      
      CALL EXPINT(PP(JNEXT),P(I1),P(I2),A)                              
      TP(JNEXT) = T(I1)+(T(I2)-T(I1))*A                                 
      CALL EXPINT(RFNDXP(JNEXT),RFNDX(I1),RFNDX(I2),A)                  
      DO 140 K=1,KMAX                                                   
      CALL EXPINT(DENP(K,JNEXT),DENSTY(K,I1),DENSTY(K,I2),A)            
  140 CONTINUE                                                          
      IF(IA.EQ.IB) GO TO 160                                            
C*****FILL IN DENSITIES BETWEEN HA AND HB                               
      I1 = IA                                                           
      I2 = IB-1                                                         
      DO 150 I=I1,I2                                                    
      JNEXT = JNEXT+1                                                   
      ZP(JNEXT) = Z(I)                                                  
      PP(JNEXT) = P(I)                                                  
      TP(JNEXT) = T(I)                                                  
      RFNDXP(JNEXT) = RFNDX(I)                                          
      DO 150 K=1,KMAX                                                   
      DENP(K,JNEXT) = DENSTY(K,I)                                       
  150 CONTINUE                                                          
  160 CONTINUE                                                          
C*****INTERPOLATE THE DENSITIES TO HB                                   
      JNEXT = JNEXT+1                                                   
      ZP(JNEXT) = HB                                                    
      I2 = IB                                                           
      IF(I2.EQ.1) I2 = 2                                                
      IF(I2.GT.IMAX) I2 = IMAX                                          
      I1 = I2-1                                                         
      A = (HB-Z(I1))/(Z(I2)-Z(I1))                                      
      CALL EXPINT(PP(JNEXT),P(I1),P(I2),A)                              
      TP(JNEXT) = T(I1)+(T(I2)-T(I1))*A                                 
      CALL EXPINT(RFNDXP(JNEXT),RFNDX(I1),RFNDX(I2),A)                  
      DO 170 K=1,KMAX                                                   
      CALL EXPINT(DENP(K,JNEXT),DENSTY(K,I1),DENSTY(K,I2),A)            
  170 CONTINUE                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE FINDSH(H,SH,GAMMA)                                     
C*****GIVEN AN ALTITUDE H, THIS SUBROUTINE FINDS THE LAYER BOUNDARIES   
C*****ZM(I1) AND ZM(I2) WHICH CONTAIN H,  THEN CALCULATES THE SCALE     
C*****HEIGHT (SH) AND THE VALUE AT THE GROUND (GAMMA+1) FOR THE         
C*****INDEX OF REFRACTION                                               
      COMMON /PARMTR/ RE,DELTAS,ZMAX,IMAX,IMOD,IBMAX,IPATH              
      COMMON /CNSTNS/ PI,CA,DEG,GCAIR,BIGNUM,BIGEXP                     
      COMMON /MODEL/ Z(34),P(34),T(34),RFNDX(34),DENSTY(63,34),         
     1 CLDAMT(34),RRAMT(34),EQLWC(34),HAZEC(34)                         
      DO 100 IM=2,IMOD                                                  
      I2 = IM                                                           
      IF(Z(IM).GE.H)  GO TO 110                                         
  100 CONTINUE                                                          
      I2 = IMOD                                                         
  110 CONTINUE                                                          
      I1 = I2-1                                                         
      CALL SCALHT(Z(I1),Z(I2),RFNDX(I1),RFNDX(I2),SH,GAMMA)             
      RETURN                                                            
      END                                                               
      SUBROUTINE FLAYZ(ML,MODEL,ICLD,ZMDL,GNDALT,IVSA)                  
C                                                                       
C     SUBROUTINE TO CREATE FINAL LOWTRAN BOUNDARIES                     
C                                                                       
C     ZMDL COMMON /MODEL/ FINAL ALTITUDE FOR LOWTRAN                    
C     ZCLD CLOUD ALTITUDE                                               
C     ZK1 USED WITH VSA                                                 
C     ZNEW ALTITUDES ABOVE THE CLOUD                                    
C     ZNEWV ALTITUDES ABOVE THE 1ST 9 VSA ALTITUDES                     
C     ZTST  =ZCLD(J)                                                    
C     ZVSA  VSA ALTITUDES                                               
C                                                                       
      COMMON /CARD2A/ CTHIK,CALT,CEXT                                   
      COMMON /ZVSALY/ ZVSA(10),RHVSA(10),AHVSA(10),IHVSA(10)            
      DIMENSION ZNEWV(24),ZMDL( *)                                      
      DIMENSION ZNEW(17),ZCLD(16),ZAER(34),ZST(34)                      
      DATA ZCLD/ 0.0,0.16,0.33,0.66,1.0,1.5,2.0,2.4,2.7,                
     1 3.0,3.5,4.0,4.5,5.0,5.5,6.0/                                     
      DATA ZNEWV/1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,                
     C 14.,16.,18.,20.,22.,25.,30.,35.,40.,50.,70.,100./                
      DATA ZNEW/ 7.,8.,9.,10.,12.,14.,16.,18.,20.,22.,25.,30.,          
     1 35.,40.,50.,70.,100./                                            
      DATA ZAER / 0., 1., 2., 3., 4., 5., 6., 7., 8., 9.,               
     1           10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,               
     1           20.,21.,22.,23.,24.,25.,30.,35.,40.,45.,               
     1           50.,70.,100.,   1000./                                 
      DATA DELZ /0.02/                                                  
      IF(MODEL .EQ.7) GO TO 600                                         
C                                                                       
      IF(MODEL.EQ.0) GO TO 600                                          
      IF(IVSA.EQ.1) THEN                                                
           DO 2 I=1,9                                                   
2          ZMDL(I)=ZVSA(I)                                              
C                                                                       
           HMXVSA=ZVSA(9)                                               
           ZK1=HMXVSA+0.01                                              
           IF(HMXVSA.LT.2.)ML=33                                        
           IF(HMXVSA.LT.1.)ML=34                                        
           IF(HMXVSA.EQ.2.)ML=32                                        
           MDEL=34-ML                                                   
           DO 4 K=1,ML                                                  
           IK=K-10+MDEL                                                 
           IF(IK.GE.1)ZMDL(K)=ZNEWV(IK)                                 
           IF(K.EQ.10)ZMDL(K)=ZK1                                       
4          CONTINUE                                                     
C                                                                       
           RETURN                                                       
      ENDIF                                                             
C                                                                       
      IF(ICLD.GE.1.AND.ICLD.LE.11) GO TO 18                             
      DO 10 I=1,ML                                                      
      IF(ZAER(I) .GT.100.) GO TO 12                                     
      IL = I                                                            
10    ZMDL(I)=ZAER(I)                                                   
12    ML = IL                                                           
C     IF(IEMSCT.NE.0) ZMDL(ML)=100.                                     
C                                                                       
      IF(GNDALT.LE.0.) GO TO  90                                        
      DALT=(6.-GNDALT)/6.                                               
      IF(DALT.LE.0.) GO TO  90                                          
C                                                                       
      DO 15 I=1,6                                                       
15    ZMDL(I)=FLOAT(I-1)*DALT+GNDALT                                    
90    IF(ICLD .EQ. 18 .OR .ICLD. EQ. 19) THEN                           
           CLDD =  0.1 * CTHIK                                          
           CLD0 = CALT - 0.5*CLDD                                       
           IF(CLD0 .LE. 0.) CLD0 = 0.                                   
           CLD1 = CLD0 + CLDD                                           
           CLD2 = CLD1 + CTHIK - CLDD                                   
           CLD3 = CLD2 + CLDD                                           
           DO 100 I = 1,ML                                              
           IJ = I                                                       
           IF(ZMDL(I) . LT. CLD0) GO TO 100                             
           GO TO 120                                                    
100        CONTINUE                                                     
           GO TO 600                                                    
120        ML1 = ML - IJ                                                
           DO 130 I = 1 ,ML1                                            
130        ZST(I)   = ZMDL(IJ+I-1)                                      
           ZMDL(IJ) = CLD0                                              
           ZMDL(IJ+1) = CLD1                                            
           ZMDL(IJ+2) = CLD2                                            
           ZMDL(IJ+3) = CLD3                                            
           II  =  3                                                     
           DO 140 I = 1,ML1                                             
           IF(ZST(I) . LT. CLD3) GO TO 140                              
           II  = II + 1                                                 
           IF((IJ + II) . EQ. ML) GO TO 145                             
           ZMDL(IJ + II) = ZST(I)                                       
           IJII = IJ + II                                               
140        CONTINUE                                                     
           ML = IJII +1                                                 
145        ZMDL(ML) = 100.                                              
      ENDIF                                                             
      GO TO 600                                                         
C                                                                       
C     STAND CLOUD                                                       
C                                                                       
18    DO 20 I=1,16                                                      
20    ZMDL(I)=ZCLD(I)+GNDALT                                            
      I=16                                                              
C                                                                       
      DO 30 K=17,ML                                                     
      J=K-16                                                            
      IF(ZNEW(J).LE.ZMDL(16)) GO TO 30                                  
      I=I+1                                                             
      ZMDL(I)=ZNEW(J)                                                   
30    CONTINUE                                                          
      ML = I                                                            
      GO TO 600                                                         
C                                                                       
C     MODEL 7                                                           
600   RETURN                                                            
      END                                                               
      SUBROUTINE FLXADD (TLE,COSBAR,TAER,OMEGA0,UPF,DNF,IWAVN,          
     1 IKMAX,     CSZEN,S0,STRN,            FDNSRF,FDNTRF,              
     2     DMF,DMFS,UMF,UMFS)                                           
C                                                                       
C         (1) CALCULATES UPWARD, F+ (UPF), AND DOWNWARD, F- (DNF),      
C             FLUX PROFILES USING ADDING METHOD                         
C         (2) MS SOURCE FUNCTION EVALUATED FROM LEVEL FLUXES VIA        
C             STREAM APPROXIMATION (SEE EQN     , ISAACS ET AL, 1986)   
C         (3) BACKSCATTER FOR SOURCE FUNCTION FOR GIVEN G FACTOR        
C             AND ZENTIH ANGLE OBTAINED USING FUNCTION BETABS           
C                                                                       
C                                          A.E.R. 1986                  
C                                                                       
      DOUBLE PRECISION AER1,AER2,AERA,AERU,AERV,AERC,AERCX,EX1,EX2,     
     1                 DENO,DNMO,DNM1                                   
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1                                 
Crea0892      COMMON RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63)    
C     COMMON             WPATH(68, 63),TBBY(68)                         
Crea0892 COMMON IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12)
Crea0892      COMMON ABSC(5,47),EXTC(5,47),ASYM(5,47),VX2(47),AWCCON(5) 
      COMMON /UNLABEL/ RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63), 
     +        IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12), 
     +        ABSC(5,47),EXTC(5,47),ASYM(5,47),VX2(47),AWCCON(5)        
C                                                                       
C     COMMON /TRAN/ABB(19),                                             
C    1                     BTOP(50),BMID(34),TMD(34),TMOLS(34),         
C    1 TAERS(34),TCONT(34),DCONT(68)                                    
      COMMON /TRAN/BTOP(50),TMOLS(34),TAERS(34),TCONT(34),DCONT(68)     
      COMMON /AABBCC/ AA(11),BB(11),CC(11),IBND(11),A(11),CPS(11)       
      COMMON/CARD1/ MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB   
     1  ,MODTRN                                                         
      COMMON/MODEL/ZM(34),PM(34),TM(34),DUM(34),DENSTY(63,34),          
     1 CLDAMT(34),RRAMT(34),EQLWC(34),HAZEC(34)                         
      COMMON /CNTRL/ KMAX,M7,JKMAX,NL,ML,JKLO,ISSGEO,IMULT              
      COMMON /PATH/ PL(68),QTHETA(68),ITEST,H1S,H2S,AHT(68)             
      COMMON /CNSTNS/PI,CA,DEG,GCAIR,BIGNUM,BIGEXP                      
      COMMON /DIRST/  SUN,UMB(34),DMB(34),UMBS(34),DMBS(34)             
      DIMENSION COSBAR(34),DNF(10,34),                                  
     1 EDN(50),EUP(50),EUPC(50),TAUM(3,50),                             
     2                        TDF(50),TLE(34),OMEGA0(34),               
     3 UPF(10,34),                  RUPC(50),TAER(50),REF(50),          
     4 EUPS(34),EDNS(34),UPFS(15,34),DNFS(15,34),EUPCS(34),             
     5 CSZEN(68),STRN(0:34),BETS(34),           TWGP(3,34),RUPCS(34),   
     6 UMF(34),DMF(34),UMFS(34),DMFS(34),REFS(34),TDFS(34)              
      DIMENSION OMEGAK(34),TAUT(34)                                     
      DIMENSION FAC(3),GKWJ(3,11),DPWJ(3,11)                            
      DIMENSION CP1S(11),DPJ(3,34)                                      
C***********************************************************************
C                                                                       
C   INPUT PARAMETERS:                                                   
C   ----------------                                                    
C   TLE(N)     - TEMPERATURE (KELVIN) OF UPPER EDGE OF LAYER N          
C   COSBAR(N)  - ASYMMETRY FACTOR FOR LAYER N                           
C   TAER(N)    - TOTAL AEROSOL OPTICAL THICKNESS OF LAYER N             
C   TAERS(N)   - AEROSOL SCATTERING OPTICAL THICKNESS OF LAYER N        
C   TCONT(N)   - MOLECULAR CONTINUUM OPTICAL THICKNESS FOR LAYER N      
C   TMOLS(N)   - RAYLEIGH SCATTERING OPTICAL THICKNESS FOR LAYER N      
C   CSZEN(N)   - COSINE OF SOLAR ZENITH ANGLE FOR LAYER N               
C   IWAVN      - FREQUENCY (WAVENUMBER)                                 
C   S0         - SOLAR INTENSITY AT TOP OF ATMOSPHERE                   
C   H1         - ALTITUDE OF OBSERVER (KM)                              
C   H2         - ALTITUDE OF TARGET (KM)                                
C   STRN(N)    - SOLAR TRANSMISSION TO BOTTOM OF LAYER N                
C                                                                       
C   OUTPUT PARAMETERS:                                                  
C   -----------------                                                   
C   OMEGAK  (N)- SINGLE SCATTERING ALBEDO OF LAYER N FOR VALUE OF K     
C   TAUM(K,N)  - MOLECULAR OPTICAL THICKNESS OF LAYER N FOR VALUE OF K  
C   BTOP(N)    - BLACK BODY FLUX FOR UPPER EDGE TEMPERATURE OF LAYER N  
C   BMID(N)    - BLACK BODY FLUX FOR AVERAGE TEMPERATURE OF LAYER N     
C                                                                       
C   INTERNAL PARAMETERS:                                                
C   -------------------                                                 
C   TWGP(K,N)  - SUM OF OPTICAL DEPTH * PROBABILITY BY MOLECULE         
C                                                                       
C   UPF(K,N)   - UPWARD THERMAL FLUX AT UPPER EDGE OF LAYER N FOR       
C                VALUE OF K                                             
C   UPFS(K,N)  - UPWARD SOLAR FLUX AT UPPER EDGE OF LAYER N FOR         
C                VALUE OF K                                             
C   DNF(K,N)   - DOWNWARD THERMAL FLUX AT UPPER EDGE OF LAYER N FOR     
C                VALUE OF K                                             
C   DNFS(K,N)  - DOWNWARD SOLAR FLUX AT UPPER EDGE OF LAYER N FOR       
C                VALUE OF K                                             
C   UMF(N)     - MEAN UPWARD THERMAL FLUX OF LAYER N FOR VALUE OF K     
C   UMFS(N)    - MEAN UPWARD SOLAR FLUX OF LAYER N FOR VALUE OF K       
C   DMF(N)     - MEAN DOWNWARD THERMAL FLUX OF LAYER N FOR VALUE OF K   
C   DMFS(N)    - MEAN DOWNWARD SOLAR FLUX OF LAYER N FOR VALUE OF K     
C   SU(K,N)    - UPWARD THERMAL RADIANCE SOURCE FUNCTION FOR N,K        
C   SUS(K,N)   - UPWARD SOLAR RADIANCE SOURCE FUNCTION FOR N,K          
C   SD(K,N)    - DOWNWARD THERMAL RADIANCE SOURCE FUNCTION FOR N,K      
C   SDS(K,N)   - DOWNWARD SOLAR RADIANCE SOURCE FUNCTION FOR N,K        
C   BETS(N)    - BACKSCATTER FRACTION ALONG SOLAR PATH AT LAYER N       
C                                                                       
C***********************************************************************
C                                                                       
C   NEW VARABLES          11 MOLECULES  BY JOSEPH H PIERLUISSI          
C   DPWJ  PROBABILITY FOR EACH MOLECULE  FIT DOUBLE EXPONENTIAL         
C   GKWJ  BAND DEPENDENT  SCALING OF DENSITIES TO GET K AMOUNT          
C   CPS IS THE STORED VALUES OF PIERLUISSI BAND MODEL COEFFIECNTS       
C   CP1S = 10**CPS                                                      
C   IBND MAPS BANDS TO MOLECULES                                        
C   DPJ REPLACES DPO  IS THE  EFFECTIVE PROBILITY BY LAYER              
C   TAUM IS DEFINED AS THE SUM OF THE OPTICAL DEPTHS BY MOLECULE        
C                                                                       
      DATA RUPC/50*0.0/,RUPCS/34*0.0/                                   
      DATA EUPS/34*0.0/,EDNS/34*0.0/                                    
      DATA REFS/34*0.0/,TDFS/34*0.0/                                    
      DATA UPFS/510*0.0/,DNFS/510*0.0/                                  
      DATA FAC /1.0,0.09,0.015/                                         
320   FORMAT(5E14.6)                                                    
300   FORMAT(10F7.2)                                                    
310   FORMAT(10F7.4)                                                    
      DPC = 1./3.                                                       
      WAVN=FLOAT(IWAVN)                                                 
      V = WAVN                                                          
CC    PRINT 1900                                                        
1900  FORMAT('      V    FLXDN     FLXDNS    FLXUP     FLXUPS')         
      NLAYRS = ML - 1                                                   
      NG=NLAYRS+1                                                       
      NG1=NG+1                                                          
      DO  1 M = 1,11                                                    
1     CP1S(M)= 10.**CPS(M)                                              
C                                                                       
      DO  4  MOL = 1,11                                                 
      DO  5    K = 1,3                                                  
      IW = IBND(MOL)                                                    
      GKWJ(K,MOL) = 0.                                                  
      DPWJ(K,MOL) = 0.                                                  
      IF(IW. LE. 0) GO TO 5                                             
      GKWJ(K,MOL) = FAC(K) * CC(MOL)                                    
      IF(K .EQ. 1) DPWJ(K,MOL) = AA(MOL)                                
      IF(K .EQ. 2) DPWJ(K,MOL) = BB(MOL)                                
      IF(K .EQ. 3) DPWJ(K,MOL) = 1. - AA(MOL) - BB(MOL)                 
      IF(K. GT. 1) GO TO 5                                              
  5   CONTINUE                                                          
 4    CONTINUE                                                          
      TLE(NG1)=TLE(NG)                                                  
      DO 98 N=1,NG                                                      
C                                                                       
C   BLACK BODY FLUX FOR LAYER EDGE TEMPERATURE                          
C                                                                       
      BTOP(N)=BBFN(TLE(N),V)*PI                                         
C                                                                       
C   BLACK BODY RADIANCE FOR LAYER MIDDLE TEMPERATURE                    
C                                                                       
C     BMID(N)=BBFN(TMD(N),V)                                            
      IF(N .LT. NG) THEN                                                
C                                                                       
C    CALCULATE COSINE OF VIEWING PATH ZENITH ANGLE                      
C                                                                       
C                                                                       
C    CALCULATE BACKSCATTER PARAMETERS                                   
C                                                                       
      IF(COSBAR(N) .EQ. 0.0) THEN                                       
      BETS(N)=.5                                                        
      ELSE                                                              
      IF((IEMSCT .EQ. 2) .OR. (IEMSCT .EQ. 3)) THEN                     
      BETS(N)=BETABS(CSZEN(N),COSBAR(N))                                
      ENDIF                                                             
      ENDIF                                                             
      ENDIF                                                             
   98 CONTINUE                                                          
C                                                                       
C   ABSORPTION COEFFICIENTS FOR WATER VAPOR, UNIFORMLY MIXED GASES      
C   AND OZONE                                                           
C                                                                       
C                                                                       
C   EVALUATE THE WEIGHTED K DISTRIBUTION QUANTITIES FOR                 
C   WATER VAPOR AND THE UNIFORMLY MIXED GASES                           
C                                                                       
      DO 70 K=1, 3                                                      
      DO 70 N=1,NLAYRS                                                  
C                                                                       
      TAUM(K,N)  = 0.                                                   
      TWGP(K,N)  = 0.                                                   
      DO 60 MOL = 1,11                                                  
      IB = IBND(MOL)                                                    
      IF(IB .LT.0) GO TO 60                                             
      W(IB) = DENSTY(IB,IKMAX-N)*PL(IKMAX-N)*GKWJ(K,MOL)                
      TAUM(K,N)= TAUM(K,N) + W(IB) * CP1S(MOL)                          
      TWGP(K,N)= TWGP(K,N) + W(IB) * CP1S(MOL) * DPWJ(K,MOL)            
60    CONTINUE                                                          
      DPJ(K,N) = DPC                                                    
      IF(TAUM(K,N) .NE .0) THEN                                         
         DPJ(K,N) = TWGP(K,N) / TAUM(K,N)                               
      ENDIF                                                             
C                                                                       
C     EFFECTIVE PROBILITY BY LAYER DPJ IS BASED ON MOLECULAR            
C     PROBILITY WEIGHTED BY OPTICAL DEPTH                               
C                                                                       
  70  CONTINUE                                                          
      DO 80 N=1,NLAYRS                                                  
      SMDPJ = DPJ(1,N) + DPJ(2,N) + DPJ(3,N)                            
      DO 80 K=1, 3                                                      
      DPJ(K,N) = DPJ(K,N)/SMDPJ                                         
  80  CONTINUE                                                          
C                                                                       
C     EFFECTIVE PROBILITY BY LAYER DPJ NORMALIZED                       
C     FOR CURRENT VALUES OF GKWJ  NORMALIZATION NOT REQUIRED            
C     PROTECTION FOR ARBITARY CHOICE OF GKWJ                            
C                                                                       
C***********************************************************************
C*    PROBABILITY INTEGRATION LOOP                                     *
C***********************************************************************
      DO 100 K=1,3                                                      
C**** COMPOSITE DOWNWARDS REFLECTION                                    
      RDNCN=0.                                                          
      RDNCNS=0.0                                                        
C***********************************************************************
C*    ADDING GROUND LAYER                                              *
C***********************************************************************
C                                                                       
C   DEFINE INITIAL UPWARD COMPOSITE SURFACE REFLECTANCE                 
C                                                                       
      RUPCN=SALB                                                        
      RUPCNS=SALB                                                       
C                                                                       
C   SURFACE THERMAL EMISSION                                            
C                                                                       
      BTOP(NG1)=BBFN(TLE(NG1),V)*PI                                     
C                                                                       
C   SURFACE EMISSION                                                    
C                                                                       
      EUPCN=(1.0-RUPCN)*BTOP(NG1)                                       
      EUP(NG)=EUPCN                                                     
      EUPC(NG)=EUPCN                                                    
      IF(IEMSCT .EQ. 2) THEN                                            
      MF = ML - 1                                                       
      EUPCNS=RUPCNS*CSZEN(MF)*STRN(MF)*S0                               
      ELSE                                                              
      EUPCNS=0.0                                                        
      ENDIF                                                             
      EUPS(NG)=EUPCNS                                                   
      EUPCS(NG)=EUPCNS                                                  
C                                                                       
C***********************************************************************
C*      UPWARD ADDING LOOP(1-N)                                        *
C***********************************************************************
      DO 101 N=NLAYRS,1,-1                                              
      M=N-1                                                             
C                                                                       
C    CALCULATE MOLECULAR OPTICAL THICKNESS OF EACH LAYER FOR EACH K     
C    NOTE: TOP LAYER IS LAYER 1                                         
C                                                                       
C                                                                       
C      EUP AND EDN ARE UPWARD AND DOWNWARD THERMAL FLUX                 
C      FOR AN ISOLATED LAYER                                            
C      TDF AND REF ARE THE THERMAL TRANSMISSION AND REFLECTANCE         
C      FOR AN ISOLATED LAYER                                            
      IF(K.EQ.1) THEN                                                   
        TAUT(N) = TAUM(K,N) * DPJ(K,N)                                  
      ELSE                                                              
        TAUT(N) = TAUM(K,N) * DPJ(K,N) + TAUT(N)                        
        DENOM =  (TAUT(N)+TAER(N)+TCONT(N)+TMOLS(N))                    
        IF(DENOM .LE. 0.) DENOM = 1.                                    
        IF(K.EQ.3) OMEGA0(N) = (TAERS(N) + TMOLS(N)) /                  
     X  DENOM                                                           
      ENDIF                                                             
C                                                                       
C    XP IS THE PATH OPTICAL THICKNESS FOR A GIVEN LAYER OF PATH         
C    LENGTH PL                                                          
C                                                                       
      XP=TAUM(K,N)+TAER(N)+TCONT(N)+TMOLS(N)                            
C                                                                       
C    X IS THE NORMAL PATH OPTICAL THICKNESS FOR A GIVEN LAYER           
C                                                                       
      X=XP*(ZM(IKMAX-N+1)-ZM(IKMAX-N))/PL(IKMAX-N)                      
      IF(XP .GT. 0.)THEN                                                
           OMEGAK(N)=(TAERS(N)+TMOLS(N))/XP                             
      ELSE                                                              
           OMEGAK(N) = 1.                                               
      ENDIF                                                             
C                                                                       
C   USE TWO STREAM APPROXIMATION FOR THERMAL                            
C                                                                       
160   CONTINUE                                                          
      IF(OMEGAK(N).GT.0.99999) GO TO 115                                
      AER1=1.0-OMEGAK(N)                                                
      AER2=1.0-OMEGAK(N)*COSBAR(N)                                      
      AERA=SQRT(AER1/AER2)                                              
      AERU=(1.0-AERA)/2.0                                               
      AERV=(1.0+AERA)/2.0                                               
      AERC=SQRT(3.0*AER1*AER2)                                          
      AERCX = AERC*X                                                    
      IF(AERCX.LT.BIGEXP) THEN                                          
           EX1=EXP(-AERCX)                                              
      ELSE                                                              
           EX1 = 1./BIGNUM                                              
      ENDIF                                                             
      EX2=EX1*EX1                                                       
      DENO=(AERV*AERV-AERU*AERU*EX2)                                    
      DNMO=(BTOP(N)-BTOP(N+1))/X/AERC*(AERV-AERU*EX2-AERA*EX1)          
      DNM1=AERV+AERU*EX2                                                
      EUP(N)=(BTOP(N)*DNM1-DNMO-BTOP(N+1)*EX1)/DENO*AERA                
      EDN(N)=(BTOP(N+1)*DNM1+DNMO-BTOP(N)*EX1)/DENO*AERA                
      IF(EUP(N) .LT. 0)EUP(N) = 0.                                      
      IF(EDN(N) .LT. 0)EDN(N) = 0.                                      
      REF(N)=AERU*AERV*(1.0-EX2)/DENO                                   
      TDF(N)=(AERV-AERU)/DENO*EX1                                       
      GOTO 114                                                          
115    TDF(N)=1./(1.+SQRT(3.)*(1.-COSBAR(N))/2.*X)                      
      REF(N)=1.-TDF(N)                                                  
      EUP(N)=0.0                                                        
      EDN(N)=0.0                                                        
114    CONTINUE                                                         
      IF(IEMSCT .EQ. 2)THEN                                             
C                                                                       
C     CALCULATE PARAMETERS FOR SOLAR HYBRID MODIFIED                    
C     DELTA EDDINGTON 2-STREAM APPROXIMATION                            
C                                                                       
      SMU=CSZEN(N)                                                      
      B0=BETS(N)                                                        
      OME0=OMEGAK(N)                                                    
      IF(OME0 .GE. .999999) OME0 = .999999                              
C                                                                       
C      OME0 TEST MAY BE MACHINE DEPENDENT                               
C                                                                       
C                                                                       
C      RECODED AS BS  FC AND AS*EXP(SK*X)  FOR IMPROVED                 
C      ACCURACY IN SOLAR FLUX CALCULATIONS FOR LARGE X                  
C      ( NON MACHINE DEPENDANT )                                        
C                                                                       
      G=COSBAR(N)                                                       
      Q=4.0*(1.0-G**2.*(1.0-SMU))                                       
      GM1=(7.0-3.0*G**2.-OME0*(4.0+3.0*G)+OME0*G**2.*(4.0*B0+3.0*G))/Q  
      GM2=-(1.0-G**2.-OME0*(4.0-3.0*G)-OME0*G**2.*(4.0*B0+3.0*G-4.0))/Q 
      IF(GM2  .EQ. 0.0) THEN                                            
          GM2=1.0E-10                                                   
      ENDIF                                                             
      SK=SQRT(GM1*GM1-GM2*GM2)                                          
      CS=           OME0*(BETS(N)/SMU-GM1*BETS(N)-GM2*                  
     2 (1.-BETS(N)))*(SMU*SMU/(1.-SK*SK*SMU*SMU))                       
      YS=CS*(GM1+1./SMU)-           OME0*BETS(N)                        
CC    E1=YS/(GM1-SK)                                                    
CC    E2=-CS                                                            
CC    E3=(GM1+SK)/(SK-GM1)                                              
CC    E4=1.                                                             
CCC   BS=(E1*EXP(SK*X)+E2*EXP(-X/SMU))/(E3*EXP(SK*X)+E4*EXP(-SK*X))     
CCC   AS=(BS*(GM1+SK)+YS)/(SK-GM1)                                      
C                                                                       
C    CALCULATE UPWARD & DOWNWARD FLUX, EACH LAYER ALONE                 
C                                                                       
CCC   EUPS(N)=AS+BS+CS                                                  
CCC   EDNS(N)=(AS*(GM1-SK)*EXP(SK*X)+BS*(GM1+SK)*EXP(-SK*X)+            
CCC  2 YS*EXP(-X/SMU))/GM2                                              
C                                                                       
C     NEW SECTION                                                       
C                                                                       
      EKTL = SK * X                                                     
      IF(EKTL .LT.BIGEXP) THEN                                          
           EKT = EXP(-EKTL)                                             
      ELSE                                                              
           EKT = 1./BIGNUM                                              
      ENDIF                                                             
      EKT2 = EKT * EKT                                                  
      ETMUL = X / SMU                                                   
      IF(ETMUL .LT. BIGEXP) THEN                                        
           ETMU = EXP(-ETMUL)                                           
      ELSE                                                              
           ETMU = 1./BIGNUM                                             
      ENDIF                                                             
CC    ASXP =-1.* ((GM1+SK)*E2*ETMU+YS*E4*EKT)/(E3+E4*EKT2)              
      GMPSK = GM1+SK                                                    
      GMMSK = GM1-SK                                                    
      DENOM = (EKT2*GMMSK)-GMPSK                                        
      ASXP =-GMMSK*(YS*EKT-GMPSK*CS*ETMU)/DENOM                         
CC    ASNEW=-1.* ((GM1+SK)*E2*ETMU*EKT+YS*E4*EKT2)/(E3+E4*EKT2)         
      ASNEW=-1.* (-GMPSK*CS*ETMU*EKT+YS*EKT2)/DENOM                     
CC    BSNEW = (E1 + E2 * ETMU * EKT)/(E3 + E4*EKT2)                     
      BSNEW = (YS -(CS * ETMU * EKT*GMMSK))/DENOM                       
      EUPS(N)=ASNEW+BSNEW+CS                                            
CC    EDNS(N)=(ASXP+BSNEW*(GM1+SK)*EXP(-SK*X)+                          
CC   2 YS*EXP(-X/SMU))/GM2                                              
      EDNS(N)=(ASXP+BSNEW*(GMPSK)*EKT+YS*ETMU)/GM2                      
      FC=1./(CSZEN(N))                                                  
C                                                                       
C   REFS & TDFS ARE REFLECT & TRANSMITT FOR INDIVIDUAL LAYERS,SOLAR     
C                                                                       
           REFS(N)=EUPS(N)*FC                                           
           XCSZEN = X/CSZEN(N)                                          
           IF(XCSZEN.LT.BIGEXP) THEN                                    
                TDFS(N)=EDNS(N)*FC+EXP(-XCSZEN)                         
      ELSE                                                              
                TDFS(N)=EDNS(N)*FC                                      
      ENDIF                                                             
           EUPS(N) = EUPS(N) * S0 * STRN(M)                             
           EDNS(N) = EDNS(N) * S0 * STRN(M)                             
      ENDIF                                                             
      DENO=1.0-RUPCN*REF(N)                                             
      DENOS=1.0-RUPCNS*REFS(N)                                          
C                                                                       
C    CALCULATE COMPOSITE FLUXES AND REFLECTANCES                        
C                                                                       
125   EUPCN=EUP(N)+(EUPCN+EDN(N)*RUPCN)*TDF(N)/DENO                     
      EUPCNS=EUPS(N)+(EUPCNS+EDNS(N)*RUPCNS)*TDFS(N)/DENOS              
      RUPCNS=REFS(N)+TDFS(N)*RUPCNS*TDFS(N)/DENOS                       
140   RUPCN=REF(N)+TDF(N)*RUPCN*TDF(N)/DENO                             
      EUPC(N)=EUPCN                                                     
      EUPCS(N)=EUPCNS                                                   
      RUPC(N)=RUPCN                                                     
      RUPCS(N)=RUPCNS                                                   
101   CONTINUE                                                          
C***********************************************************************
C*    NOW ADD DOWNWARD FROM TOP LAYER (N=1)                            *
C***********************************************************************
      EDNCN=0.0                                                         
      EDNCNS=0.0                                                        
      DNF(K,1)=EDNCN                                                    
      UPF(K,1)=EUPC(1)                                                  
      IF(IEMSCT .EQ. 2) THEN                                            
      DNFS(K,1)=EDNCNS                                                  
      UPFS(K,1)=EUPCS(1)                                                
      ENDIF                                                             
      RDNCN=0.                                                          
      RDNCNS=0.                                                         
      DO 130 N=2,NG                                                     
      M=N-1                                                             
      DENO=1.0-RDNCN*REF(M)                                             
      DENOS=1.0-RDNCNS*REFS(M)                                          
121   CONTINUE                                                          
      EDNCN=EDN(M)+(EDNCN+EUP(M)*RDNCN)*TDF(M)/DENO                     
      RDNCN=REF(M)+TDF(M)*TDF(M)*RDNCN/DENO                             
132   CONTINUE                                                          
      PEFUP =(EUPC(N)+EDNCN*RUPC(N))/DENO                               
      PEFDN =(EDNCN+EUPC(N)*RDNCN)/DENO                                 
      IF(IEMSCT .EQ. 2) THEN                                            
      EDNCNS=EDNS(M)+(EDNCNS+EUPS(M)*RDNCNS)*TDFS(M)/DENOS              
      RDNCNS=REFS(M)+TDFS(M)*TDFS(M)*RDNCNS/DENOS                       
      PEFUPS=(EUPCS(N)+EDNCNS*RUPCS(N))/DENOS                           
      PEFDNS=(EDNCNS+EUPCS(N)*RDNCNS)/DENOS                             
      UPFS(K,N)=PEFUPS                                                  
      DNFS(K,N)=PEFDNS                                                  
      ENDIF                                                             
 120  UPF(K,N)=PEFUP                                                    
      DNF(K,N)=PEFDN                                                    
 130  CONTINUE                                                          
      DPJ(K,NG) = DPJ(K,NG-1)                                           
      DO 117 N=2,NG                                                     
      M=N-1                                                             
      IF(K.EQ.1) THEN                                                   
           UMF(M)=.5*(UPF(K,M)+UPF(K,N))*DPJ(K,M)                       
           UMFS(M)=.5*(UPFS(K,M)+UPFS(K,N))*DPJ(K,M)                    
           DMF(M)=.5*(DNF(K,M)+DNF(K,N))*DPJ(K,M)                       
           DMFS(M)=.5*(DNFS(K,M)+DNFS(K,N))*DPJ(K,M)                    
           UMB(N)=    UPF(K,N)*DPJ(K,N)                                 
           UMBS(N)=   UPFS(K,N)*DPJ(K,N)                                
           DMB(M)=    DNF(K,M)*DPJ(K,M)                                 
           DMBS(M)=   DNFS(K,M)*DPJ(K,M)                                
      ELSE                                                              
           UMF(M)=UMF(M)+.5*(UPF(K,M)+UPF(K,N))*DPJ(K,M)                
           UMFS(M)=UMFS(M)+.5*(UPFS(K,M)+UPFS(K,N))*DPJ(K,M)            
           DMF(M)=DMF(M)+.5*(DNF(K,M)+DNF(K,N))*DPJ(K,M)                
           DMFS(M)=DMFS(M)+.5*(DNFS(K,M)+DNFS(K,N))*DPJ(K,M)            
           UMB(N)= UMB(N)   +  UPF(K,N)*DPJ(K,N)                        
           UMBS(N)=UMBS(N)  +  UPFS(K,N)*DPJ(K,N)                       
           DMB(M)= DMB(M)   +  DNF(K,M)*DPJ(K,M)                        
           DMBS(M)=DMBS(M)  +  DNFS(K,M)*DPJ(K,M)                       
      ENDIF                                                             
C                                                                       
C   TRNSD & TRNSU ARE CUMULATIVE DOWNWARD & UPWARD TRANSMISSION         
C                                                                       
 117    CONTINUE                                                        
C                                                                       
C   FDNSRF IS THE DOWNWARD SOLAR FLUX AT THE SURFACE                    
C   FDNTRF IS THE DOWNWARD THERMAL FLUX AT THE SURFACE                  
C                                                                       
      IF(K.EQ.1) THEN                                                   
           FDNSRF   =DNFS(K,NG)*DPJ(K,NLAYRS)                           
           FDNTRF   =DNF(K,NG) *DPJ(K,NLAYRS)                           
           FUPSRF   =UPFS(K, 1)*DPJ(K, 1)                               
           FUPTRF   =UPF(K, 1) *DPJ(K, 1)                               
      ELSE                                                              
           FDNSRF   =FDNSRF + DNFS(K,NG)*DPJ(K,NLAYRS)                  
           FDNTRF   =FDNTRF + DNF(K,NG) *DPJ(K,NLAYRS)                  
           FUPSRF   =FUPSRF + UPFS(K, 1)*DPJ(K, 1)                      
           FUPTRF   =FUPTRF + UPF(K, 1) *DPJ(K, 1)                      
      ENDIF                                                             
CC    IF(K.EQ.3)PRINT 1910,V,FDNSRF,FDNTRF,FUPSRF,FUPTRF                
1910  FORMAT(F10.0,1P4E10.3)                                            
CCC   IF(K.EQ.3)WRITE(6,1920)FDNSRF,FDNTRF,FUPSRF,FUPTRF                
1920  FORMAT(30X,' FLXDNS=',1PE10.3,' FLXDN =',E10.3,' FLXUPS =',E10.3, 
     X ' FLXUP ',E10.3)                                                 
100   CONTINUE                                                          
      UMB(1) = FUPTRF                                                   
      UMBS(1)= FUPSRF                                                   
      DMB(NG)= FDNTRF                                                   
      DMBS(NG)=FDNSRF                                                   
      SUN = S0                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE FNDHMN(H1,ANGLE,H2,LEN,ITER,HMIN,PHI,IERROR)           
C***********************************************************************
C     THIS SUBROUTINE CALCULATES THE MINIMUM ALTITUDE HMIN ALONG        
C     THE REFRACTED PATH AND THE FINAL ZENITH ANGLE PHI.                
C     THE PARAMETER LEN INDICATES WHETHER THE PATH GOES THROUGH         
C     A TANGENT HEIGHT (LEN=1) OR NOT (LEN=0).  IF ANGLE > 90 AND       
C     H1 > H2, THEN LEN CAN EITHER BE 1 OR 0, AND THE CHOICE IS         
C     LEFT TO THE USER.                                                 
C     THE (INDEX OF REFRACTION - 1.0) IS MODELED AS AN EXPONENTIAL      
C     BETWEEN THE LAYER BOUNDARIES, WITH A SCALE HEIGHT SH AND AN       
C     AMOUNT AT THE GROUND GAMMA.                                       
C     CPATH IS THE REFRACTIVE CONSTANT FOR THIS PATH AND                
C     EQUALS  INDEX(H1)*(RE+H1)*SIN(ANGLE).                             
C***********************************************************************
      COMMON /IFIL/ IRD,IPR,IPU,NPR,IPR1                                
      COMMON /PARMTR/ RE,DELTAS,ZMAX,IMAX,IMOD,IBMAX,IPATH              
      COMMON /CNSTNS/ PI,CA,DEG,GCAIR,BIGNUM,BIGEXP                     
      COMMON /CNTRL/ KMAX,M,IKMAX,NL,ML,IKLO,ISSGEO,IMULT               
      DATA DH/1.0/,ETA/5.0E-8/                                          
C*****ETA MAY BE TOO SMALL FOR SOME COMPUTERS. TRY 1.0E-7 FOR 32 BIT    
C*****WORD MACHINES                                                     
C     CRFRCT IS REFRACTIVE CONSTANT FOR THE PATH                        
C                                                                       
      CRFRCT(H) = (RE+H)*ANDEX(H,SH,GAMMA)                              
      N = 0                                                             
      CALL FINDSH(H1,SH,GAMMA)                                          
      CPATH = CRFRCT(H1)*SIN(ANGLE/DEG)                                 
      CALL FINDSH(H2,SH,GAMMA)                                          
      CH2 = CRFRCT(H2)                                                  
      IF(ABS(CPATH/CH2).GT.1.0) GO TO 200                               
      IF(ANGLE.GT.90.0)  GO TO 100                                      
      LEN = 0                                                           
      HMIN = H1                                                         
      GO TO 160                                                         
  100 CONTINUE                                                          
      IF(H1.LE.H2)  LEN = 1                                             
      IF(LEN.EQ.1)  GO TO 110                                           
      LEN = 0                                                           
      HMIN = H2                                                         
      GO TO 160                                                         
  110 CONTINUE                                                          
C*****LONG PATH THROUGH A TANGENT HEIGHT.                               
C*****SOLVE ITERATIVELY FOR THE TANGENT HEIGHT HT.                      
C*****HT IS THE HEIGHT FOR WHICH  INDEX(HT)*(RE+HT) = CPATH.            
      CALL FINDSH(0.0,SH,GAMMA)                                         
      CMIN = CRFRCT(0.0)                                                
C*****FOR BETA CASES (ITER>0), ALLOW FOR HT < 0.0                       
      IF(ITER.EQ.0 .AND. CPATH.LT.CMIN)  GO TO 150                      
      HT1 = (RE+H1)*SIN(ANGLE/DEG)-RE                                   
      CALL FINDSH(HT1,SH,GAMMA)                                         
      CT1 = CRFRCT(HT1)                                                 
      HT2 = HT1-DH                                                      
      CALL FINDSH(HT2,SH,GAMMA)                                         
      CT2 = CRFRCT(HT2)                                                 
C*****ITERATE TO FIND HT                                                
      N = 2                                                             
  120 CONTINUE                                                          
      IF(CT2 .EQ. CT1) GO TO 125                                        
      N = N+1                                                           
      HT3 = HT2+(HT2-HT1)*(CPATH-CT2)/(CT2-CT1)                         
      CALL FINDSH(HT3,SH,GAMMA)                                         
      CT3 = CRFRCT(HT3)                                                 
      DC = CPATH-CT3                                                    
      IF(ABS((CPATH-CT3)/CPATH).LT.ETA)  GO TO 130                      
      IF(N.GT.15) GO TO 210                                             
      HT1 = HT2                                                         
      CT1 = CT2                                                         
      HT2 = HT3                                                         
      CT2 = CT3                                                         
      GO TO 120                                                         
  125 HT3 = HT2                                                         
  130 CONTINUE                                                          
      HT = HT3                                                          
      HMIN = HT                                                         
      GO TO 160                                                         
  150 CONTINUE                                                          
      IF(ISSGEO.EQ.0) GO TO 155                                         
      IERROR=-5.                                                        
      RETURN                                                            
155   CONTINUE                                                          
C*****TANGENT PATH INTERSECTS EARTH                                     
      H2 = 0.0                                                          
      HMIN = 0.0                                                        
      LEN = 0                                                           
      CH2 = CMIN                                                        
      IF(ISSGEO.NE.1)WRITE(IPR,22) H1,ANGLE                             
   22 FORMAT(///,' TANGENT PATH WITH H1 = ',F10.3,' AND ANGLE = ',      
     1    F10.3,' INTERSECTS THE EARTH',//,10X,'H2 HAS BEEN RESET ',    
     2    'TO 0.0 AND LEN TO 0')                                        
  160 CONTINUE                                                          
C*****CALCULATE THE ZENITH ANGLE PHI AT H2                              
      PHI = ASIN(CPATH/CH2)*DEG                                         
      IF(ANGLE.LE.90.0 .OR. LEN.EQ.1)  PHI = 180.0-PHI                  
      RETURN                                                            
C*****H2 LT TANGENT HEIGHT FOR THIS H1 AND ANGLE                        
  200 CONTINUE                                                          
      WRITE(IPR,20)                                                     
   20 FORMAT('0H2 IS LESS THAN THE TANGENT HEIGHT FOR THIS PATH ',      
     1    'AND CANNOT BE REACHED')                                      
      IERROR = 2                                                        
      RETURN                                                            
  210 CONTINUE                                                          
      DC = CPATH-CT3                                                    
      WRITE(IPR,24)  N,CPATH,CT3,DC,HT3                                 
   24 FORMAT(///,'0FROM SUBROUTINE FNDHMN :',//,                        
     1    10X,'THE PROCEEDURE TO FIND THE TANGENT HEIGHT DID NOT ',     
     2    'CONVERG AFTER ',I3,'  ITERATIONS',//,                        
     3    10X,'CPATH   = ',F12.5,' KM',//,10X,'CT3     = ',F12.5,' KM', 
     4    //,10X,'DC      = ',E12.3,' KM',//,                           
     5    10X,'HT3     = ',F12.5,' KM')                                 
      STOP 20                                                           
      END                                                               
      SUBROUTINE FRN296(V1C,FH2O)                                       
C     LOADS FOREIGN CONTINUUM  296K                                     
      COMMON /FH2O/ V1,V2,DV,NPT,F296(2003)                             
      CALL SINT(V1,V1C,DV,NPT,F296,FH2O)                                
      RETURN                                                            
      END                                                               
      FUNCTION   GAMFOG(MR,FREQ,T,RHO)                                  
C                                                                       
C        COMPUTES ATTENUATION OF EQUIVALENT LIQUID WATER CONTENT        
C       IN CLOUDS OR FOG IN DB/KM                                       
C       CONVERTED TO NEPERS BY NEW CONSTANT 1.885                       
C                                                                       
C        FREQ = WAVENUMBER (INVERSE CM)                                 
C        T    = TEMPERATURE (DEGREES KELVIN)                            
C        RHO  = EQUIVALENT LIQUID CONTENT  (G/CUBIC METER)              
C      CINDEX=COMPLEX DIELECTRIC CONSTANT M  FROM INDEX                 
C      WAVL = WAVELENGTH IN CM                                          
C                                                                       
      COMPLEX CINDEX                                                    
      IF(RHO.GT.0.) GO TO 2                                             
      GAMFOG=0.                                                         
      RETURN                                                            
    2 CONTINUE                                                          
      KEY=1                                                             
      IF(MR. GE. 5) KEY = 0                                             
      WAVL=1.0/FREQ                                                     
      TC=T-273.2                                                        
CCC                                                                     
CCC    CHANGE TEMP SO THAT MINIMUM IS -20.0 CENT.                       
CCC                                                                     
      IF(TC.LT.-20.0) TC=-20.0                                          
      CALL INDX (WAVL,TC,KEY,REIL,AIMAK)                                
      CINDEX=CMPLX(REIL,AIMAK)                                          
CCC                                                                     
CCC   ATTENUATION = 6.0*PI*FREQ*RHO*IMAG(-K)                            
CCC    6.0*PI/10. = 1.885 (THE FACTOR OF 10 IS FOR UNITS CONVERSION)    
CCC                                                                     
C     GAMFOG=8.1888*FREQ*RHO*AIMAG( -  (CINDEX**2-1)/(CINDEX**2+2))     
      GAMFOG=1.885 *FREQ*RHO*AIMAG( -  (CINDEX**2-1)/(CINDEX**2+2))     
      RETURN                                                            
      END                                                               
C     SUBROUTINE GEO(IERROR,BENDNG,MAXGEO)                              
      SUBROUTINE GEO(IERROR,BENDNG,MAXGEO,MSOFF)                        
C*********************************************************************  
C     THIS SUBROUTINE SERVES AS AN INTERFACE BETWEEN THE MAIN           
C     LOWTRAN7 PROGRAM 'LWTRN7' AND THE NEW SET OF SUBROUTINES,         
C     INCLUDING 'GEOINP', 'REDUCE', 'FDBETA', 'EXPINT', 'FNDHMN',       
C     'FINDSH', 'SCALHT', 'ANDEX', 'RADREF', 'RFPATH', 'FILL',          
C     AND 'LAYER',  WHICH CALCULATE THE ABSORBER                        
C     AMOUNTS FOR A REFRACTED PATH THROUGH THE ATMOSPHERE.              
C     THE INPUT PARAMETERS ITYPE, H1, H2, ANGLE, RANGE, BETA, AND LEN   
C     ALL FUNCTION IN THE SAME WAY IN THE NEW ROUTINES AS IN THE OLD.   
C*********************************************************************  
C     *** IN COLM 73-76 MARK IMPROVED 32 BIT CONVERGENCE OF BETA        
C     SUGESTED BY TONY WARRIC             MCDONNELL DOUGLAS             
C     AND  MAJ ROBERT G. HUGES            AFWAL/WEA                     
C***********************************************************************
Crea0892      COMMON RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63)    
C     COMMON             WPATH(68, 63),TBBY(68)                         
Crea0892 COMMON IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12)
Crea0892      COMMON ABSC(5,47),EXTC(5,47),ASYM(5,47),VX2(47),AWCCON(5) 
      COMMON /UNLABEL/ RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63), 
     +        IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12), 
     +        ABSC(5,47),EXTC(5,47),ASYM(5,47),VX2(47),AWCCON(5)        
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1                                 
      COMMON /CARD1/ MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB  
     1  ,MODTRN                                                         
      LOGICAL MODTRN                                                    
      COMMON /CARD2/ IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,VIS,WSS,WHH,   
     1    RAINRT                                                        
      COMMON /CARD3/ H1,H2,ANGLE,RANGE,BETA,REE,LEN                     
C     COMMON /CARD4/ V1,V2,DV                                           
      COMMON /CNSTNS/ PI,CA,DEG,GCAIR,BIGNUM,BIGEXP                     
      COMMON /CNTRL/ KMAX,M,IKMAX,NL,ML,IKLO,ISSGEO,IMULT               
      COMMON/MODEL/   ZM(34),PM(34),TM(34),RFNDX(34),DENSTY(63,34),     
     1 CLDAMT(34),RRAMT(34),EQLWC(34),HAZEC(34)                         
      COMMON /PARMTR/ RE,DELTAS,ZMAX,IMAX,IMOD,IBMAX,IPATH              
      COMMON /RFRPTH/ ZP(35),PP(35),TP(35),RFNDXP(35),SP(35),           
     1    PPSUM(35),TPSUM(35),RHOPSM(35),DENP(63,35),AMTP(63,35)        
      COMMON /SOLS/ AH1(68),ARH(68),                                    
C    X   WPATHS(68,63),PA(68),PR(68),ATHETA(35),ADBETA(35),LJ(69),JTURN,
C    X ANGSUN,CSZEN(68)                                                 
     1  WPATHS(102,63),PA(68),PR(68),ATHETA(35),ADBETA(35),LJ(69),      
     2  JTURN,ANGSUN,CSZEN(68),TBBYS(102,12),PATMS(102,12)              
      COMMON /PATH/ PL(68),QTHETA(68),ITEST,HI,HF,AHT(68)               
      COMMON /RAIN/ RNPATH( 68),RRAMTK( 68)                             
      DIMENSION KMOL(17)                                                
      DATA PZERO/1013.25/                                               
C*****KMOL(K) IS A POINTER USED TO REORDER THE AMOUNTS WHEN PRINTING    
      DATA KMOL/1,2,3,11,8,5,9,10,4,6,7,12,13,14,16,15,17/              
C*****INITIALIZE CONSTANTS AND CLEAR CUMULATIVE VARIABLES               
C*****DELTAS IS THE NOMINAL PATH LENGTH INCRENMENT USED IN THE RAY TRACE
      DELTAS = 5.0                                                      
      JMAXST=1                                                          
      IERROR = 0                                                        
      RE = REE                                                          
      IMOD = ML                                                         
      IMAX = ML                                                         
C*****ZERO OUT CUMULATIVE VARIABLES                                     
      DO 100 I=1,35                                                     
      LJ(I)=0                                                           
      SP(I)=0.0                                                         
      PPSUM(I) = 0.0                                                    
      TPSUM(I) = 0.0                                                    
      RHOPSM(I) = 0.0                                                   
      DO 100 K=1,KMAX                                                   
      AMTP(K,I) = 0.0                                                   
  100 CONTINUE                                                          
      ZMAX=ZM(IMAX)                                                     
      IF(ISSGEO.EQ.1) GO TO 200                                         
      IF(ITYPE.GE.2)  GO TO 200                                         
C*****HORIZONTAL PATH, MODEL EQ 1 TO 7:  INTERPOLATE PROFILE TO H1      
      ZP(1)=H1                                                          
      IF(ML   .EQ.1)  THEN                                              
          PP(1)=PM(1)                                                   
          TP(1)=TM(1)                                                   
          LJ(1)=1                                                       
          SP(1)=RANGE                                                   
          PL(1)=RANGE                                                   
      ELSE                                                              
      IF(MODEL.EQ.0)  GO TO 145                                         
          DO 120 I=2,ML                                                 
          I2 = I                                                        
          IF(H1.LT.ZM(I))  GO TO 130                                    
  120     CONTINUE                                                      
  130     CONTINUE                                                      
          I1 = I2-1                                                     
          FAC = (H1-ZM(I1))/(ZM(I2)-ZM(I1))                             
          CALL EXPINT(PP(1),PM(I1),PM(I2),FAC)                          
          TP(1) = TM(I1)+(TM(I2)-TM(I1))*FAC                            
          II1=I1                                                        
          IF(FAC.GT.0.5) II1=I2                                         
          LJ(1)=II1                                                     
          SP(II1)=RANGE                                                 
          DO 140 K=1,KMAX                                               
          CALL EXPINT(DENP(K,1),DENSTY(K,I1),DENSTY(K,I2),FAC)          
  140     CONTINUE                                                      
      END IF                                                            
C*****CALCULATE ABSORBER AMOUNTS FOR A HORIZONTAL PATH                  
 145  WRITE(IPR,36)  H1,RANGE,MODEL                                     
   36 FORMAT('0HORIZONTAL PATH AT ALTITUDE = ',F10.3,                   
     1   ' KM WITH RANGE = ',F10.3,' KM, MODEL = ',I3)                  
      IKMAX = 1                                                         
      IMMAX = 1                                                         
C     IF(MODEL.EQ.0) TP(1)=TM(1)                                        
C     TBBY(1) = TP(1)                                                   
      JMAX=1                                                            
      IF(MODEL.EQ.0)THEN                                                
          TP(1)=TM(1)                                                   
          PP(1)=PM(1)                                                   
      ENDIF                                                             
      MSOFF1=MSOFF+1                                                    
      PATM(MSOFF1)=PP(1)/PZERO                                          
      TBBY(MSOFF1) = TP(1)                                              
      DO 160 K=1,KMAX                                                   
      IF(ML.EQ.1)  DENP(K,1) = DENSTY(K,1)                              
      W(K) = DENP(K,1)*RANGE                                            
C     WPATH(1,K) = W(K)                                                 
      WPATH(MSOFF1,K) = W(K)                                            
  160 CONTINUE                                                          
      WTEM = (296.0-TP(1))/(296.0-260.0)                                
      IF(WTEM.LT.0.)WTEM=0.                                             
      IF(WTEM.GT.1)WTEM=1.                                              
      W(9)=W(5)*WTEM                                                    
      W(59) = W(8) * .269 *(TP(1)-273.15)                               
      W(60) = W(8) * .269 *(TP(1)-273.15)**2                            
C     WPATH(1,9) = W(9)                                                 
C     WPATH(1,59) = W(59)                                               
C     WPATH(1,60) = W(60)                                               
      WPATH(MSOFF1,9)=W(9)                                              
      WPATH(MSOFF1,59)=W(59)                                            
      WPATH(MSOFF1,60)=W(60)                                            
      GO TO 320                                                         
  200 CONTINUE                                                          
C*****SLANT PATH SELECTED                                               
C*****INTERPRET SLANT PATH PARAMETERS                                   
      CALL GEOINP(H1,H2,ANGLE,RANGE,BETA,ITYPE,LEN,HMIN,PHI,IERROR)     
      IF(IERROR.EQ.0) GO TO 210                                         
      IF(ISSGEO.NE.1)WRITE(IPR,38)                                      
   38 FORMAT('0GEO:  IERROR NE 0: END THIS CALCULATION AND SKIP TO'     
     1    ,' THE NEXT CASE')                                            
      RETURN                                                            
  210 CONTINUE                                                          
C*****CALCULATE THE PATH THROUGH THE ATMOSPHERE                         
      IAMT = 1                                                          
      CALL RFPATH(H1,H2,ANGLE,PHI,LEN,HMIN,IAMT,BETA,RANGE,BENDNG)      
C*****UNFOLD LAYER AMOUNTS IN AMTP INTO THE CUMULATIVE                  
C*****AMOUNTS IN WPATH FROM H1 TO H2                                    
      DO 220 I=1,IPATH                                                  
      IF(H1.EQ.ZP(I)) IH1 = I                                           
      IF(H2.EQ.ZP(I)) IH2 = I                                           
  220 CONTINUE                                                          
      JMAX = (IPATH-1)+LEN*(MIN0(IH1,IH2)-1)                            
      IKMAX = JMAX                                                      
C*****DETERMINE LJ(J), WHICH IS THE NUMBER OF THE LAYER IN AMTP(K,L),   
C*****STARTING FROM HMIN, WHICH CORRESPONDS TO THE LAYER J IN           
C*****WPATH(J,K), STARTING FROM H1                                      
C*****WPATH(J+MSOFF,K), STARTING FROM H1                                
C*****INITIAL DIRECTION OF PATH IS DOWN                                 
      L = IH1                                                           
      LDEL = -1                                                         
      IF(LEN.EQ.1 .OR. H1.GT.H2)  GO TO 230                             
C*****INITIAL DIRECTION OF PATH IS UP                                   
      L = 0                                                             
      LDEL = 1                                                          
  230 CONTINUE                                                          
      JTURN = 0                                                         
      JMAXP1=JMAX+1                                                     
      DO 250 J=1,JMAXP1                                                 
C*****TEST FOR REVERSING DIRECTION OF PATH FROM DOWN TO UP              
      IF(L.NE.1 .OR. LDEL.NE.-1)  GO TO 240                             
      JTURN = J                                                         
      L = 0                                                             
      LDEL = +1                                                         
  240 CONTINUE                                                          
      L = L+LDEL                                                        
      LJ(J) = L                                                         
  250 CONTINUE                                                          
C*****LOAD TBBY AND WPATH                                               
C*****TBBY IS DENSITY WEIGHTED MEAN TEMPERATURE                         
      AMTTOT=0.                                                         
      MSOFF1=MSOFF+1                                                    
      DO 255 K=1,KMAX                                                   
C 255 WPATH(1,K) = 0.0                                                  
  255 WPATH(MSOFF1,K)=0.                                                
      IMAX = 0                                                          
      DO 265 J=1,JMAX                                                   
      L = LJ(J)                                                         
      IF(L.GE.ML)L = ML                                                 
      IF(L.GE.IMAX) IMAX = L                                            
C     TBBY(J) = TPSUM (L)/RHOPSM(L)                                     
      MSOFFJ=MSOFF+J                                                    
      TBBY(MSOFFJ)=TPSUM(L)/RHOPSM(L)                                   
      PATM(MSOFFJ)=PPSUM(L)/(PZERO*RHOPSM(L))                           
      AMTTOT=AMTTOT+RHOPSM(L)                                           
      J1 = J-1                                                          
      IF(J1.EQ.0)  J1 = 1                                               
      DO 260 K=1,KMAX                                                   
      IF(K.EQ.9) GO TO 260                                              
C     WPATH(J,K) = WPATH(J1,K)+AMTP(K,L)                                
      WPATH(MSOFFJ,K)=WPATH(MSOFF+J1,K)+AMTP(K,L)                       
  260 CONTINUE                                                          
C     WPATH(J,59) = AMTP(8,L) * .269 *(TBBY(J)-273.15)                  
C     WPATH(J,60) = AMTP(8,L) * .269 *(TBBY(J)-273.15) **2              
C     WTEM = (296.0-TBBY(J))/(296.0-260.0)                              
      WPATH(MSOFFJ,59)=AMTP(8,L)*.269*(TBBY(MSOFFJ)-273.15)             
      WPATH(MSOFFJ,60)=AMTP(8,L)*.269*(TBBY(MSOFFJ)-273.15)**2          
      WTEM=(296.-TBBY(MSOFFJ))/(296.-260.)                              
      IF(WTEM.LT.0.0) WTEM = 0.                                         
      IF(WTEM.GT.1.0) WTEM = 1.0                                        
C     WPATH(J,9) = WPATH(J1,9)+WTEM*AMTP(5,L)                           
      WPATH(MSOFFJ,9)=WPATH(MSOFF+J1,9)+WTEM*AMTP(5,L)                  
265   CONTINUE                                                          
      MSOFFJ=MSOFF+JMAX                                                 
      DO 270 K=1,KMAX                                                   
C     W(K) = WPATH(JMAX,K)                                              
      W(K)=WPATH(MSOFFJ,K)                                              
  270 CONTINUE                                                          
      JMAXST=JMAX                                                       
CC    JMAX = IMAX                                                       
      IMMAX = IMAX                                                      
      IKMAX=JMAX                                                        
C*****INCLUDE BOUNDARY EMISSION IF:                                     
C*****    1. NON ZERO TBOUND IS READ IN ON CARD 1                       
C*****    2. SLANT PATH INTERSECTS THE EARTH (TBOUND                    
C*****       SET TO TEMPERATURE OF LOWEST BOUNDARY)                     
      IF(TBOUND.EQ.0.0.AND.H2.EQ.ZM(1)) TBOUND=TM(1)                    
C*****PRINT CUMULATIVE ABSORBER AMOUNTS                                 
CC    IF(NPR.EQ.1) GO TO 315                                            
CC    WRITE(IPR,42)                                                     
C  42 FORMAT(////,' CUMULATIVE ABSORBER AMOUNTS FOR THE PATH FROM'      
      IF(NPR.EQ.2) GO TO 315                                            
      IF(NPR.NE.1)WRITE(IPR,42)                                         
   42 FORMAT(////,'1CUMULATIVE ABSORBER AMOUNTS FOR THE PATH FROM'      
     1    ,' H1 TO Z',//,T3,'J',T9,'Z',T18,'TBAR',T27,                  
     2    'HNO3', T39,'O3 UV',T50,'CNTMSLF1 ',                          
     +    T061,'CNTMSLF2',T73,'CNTMFRN',                                
     +    T86,'O2',                                                     
     3              /,T8,'(KM)',T19,'(K)',T25,                          
     4        '(ATM CM)',T37,'(ATM CM)',                                
     5    T49,'(MOL CM-2)',T61,'(MOL CM-2)',T73,'(MOL CM-2)',           
     +    T83,'(MOL CM-2)'/)                                            
C*****GOING DOWN, LP = 0,    GOING UP, LP = 1                           
      LP = 1                                                            
      IF(LEN.EQ.1 .OR. H1.GT.H2)  LP = 0                                
      AHT(1) = H1                                                       
      DO 300 J=1,JMAX                                                   
      L = LJ(J)                                                         
      IF(J.EQ.JTURN)  LP = 1                                            
      LZ = L+LP                                                         
      AHT(J+1) = ZP(LZ)                                                 
C     IF(NPR.NE.1)WRITE(IPR,44)J,ZP(LZ),TBBY(J),(WPATH(J,KMOL(K)),K=    
C    X 4,8),WPATH(J,58)                                                 
      MSOFFJ=MSOFF+J                                                    
      IF(NPR.NE.1)WRITE(IPR,'(I3,F9.3,F9.2,1P8E12.3)')J,ZP(LZ),         
     1  TBBY(MSOFFJ),(WPATH(MSOFFJ,KMOL(K)),K=4,8),WPATH(MSOFFJ,58)     
   44 FORMAT(I3,F9.3, F9.2,1P8E12.3)                                    
  300 CONTINUE                                                          
      IF(NPR.NE.1)WRITE(IPR,46)                                         
C  46 FORMAT(///,T3,'J',T09,'Z',T17,'N2 CONT',T28,'MOL SCAT',T43,       
   46 FORMAT(///,'1 J',T09,'Z',T17,'N2 CONT',T28,'MOL SCAT',T43,        
     1    'AER 1',T55,'AER 2',T67,'AER 3',T79,'AER 4',T091,'CIRRUS',/   
     2    ,T8,'(KM)',/)                                                 
      LP = 1                                                            
      IF(LEN.EQ.1  .OR. H1.GT.H2) LP = 0                                
      DO 310 J=1,JMAX                                                   
      L = LJ(J)                                                         
      IF(J.EQ.JTURN) LP = 1                                             
      LZ = L+LP                                                         
C     IF(NPR.NE.1)WRITE(IPR,48) J,ZP(LZ),(WPATH(J,KMOL(K)),K=9,15)      
      MSOFFJ=MSOFF+J                                                    
      IF(NPR.NE.1)WRITE(IPR,'(I3,F9.3,1P7E12.3)')J,ZP(LZ),              
     1  (WPATH(MSOFFJ,KMOL(K)),K=9,15)                                  
   48 FORMAT(I3,F9.3,1P7E12.3)                                          
  310 CONTINUE                                                          
C*****PRINT PATH SUMMARY                                                
315   IF(ISSGEO.EQ.1) GO TO 320                                         
C     IF(NPR.NE.1)WRITE(IPR,47)                                         
C  47 FORMAT(///'   J    Z       H2O       O3        CO2       CO    ', 
      IF(NPR.LT.1)THEN                                                  
          IF(MODTRN)THEN                                                
              WRITE(IPR,'(///39H1  J    Z       H2O       O3        CO2,
     1          50H       CO        CH4       N2O       O2        NH3,  
     2          30H       NO        NO2       SO2,/                     
     3          50H      (KM)    (                                   ,  
     4          50H                   ATM CM                         ,  
     5          21H                    ),/)')                           
          ELSE                                                          
              WRITE(IPR,47)                                             
          ENDIF                                                         
      ENDIF                                                             
   47 FORMAT(///'1  J    Z       H2O       O3        CO2       CO    ', 
     +'    CH4       N2O       O2        NH3       NO        NO2   ',   
     +'    SO2'/'      (KM)   (G/CM**2)  (                           ', 
     +'                 ATM CM                                     ',   
     +'        )'/)                                                     
      LP = 1                                                            
      IF(LEN.EQ.1  .OR. H1.GT.H2) LP = 0                                
      DO 312 J=1,JMAX                                                   
      L = LJ(J)                                                         
      IF(J.EQ.JTURN) LP = 1                                             
      LZ = L+LP                                                         
C     IF(NPR.NE.1)WRITE(IPR,49) J,ZP(LZ),WPATH(J,17),WPATH(J,31),       
C    + WPATH(J,36),WPATH(J,44),WPATH(J,46),WPATH(J,47),WPATH(J,50),     
C    + WPATH(J,52),WPATH(J,54),WPATH(J,55),WPATH(J,56)                  
          MSOFFJ=MSOFF+J                                                
          IF(NPR.LT.1)WRITE(IPR,49)J,ZP(LZ),WPATH(MSOFFJ,17),           
     1      WPATH(MSOFFJ,31),WPATH(MSOFFJ,36),WPATH(MSOFFJ,44),         
     2      WPATH(MSOFFJ,46),WPATH(MSOFFJ,47),WPATH(MSOFFJ,50),         
     3      WPATH(MSOFFJ,52),WPATH(MSOFFJ,54),WPATH(MSOFFJ,55),         
     4      WPATH(MSOFFJ,56)                                            
  312 CONTINUE                                                          
   49 FORMAT(I4,F8.2,1P11E10.2)                                         
      WRITE(IPR,40)H1,H2,ANGLE,RANGE,BETA,PHI,HMIN,BENDNG,LEN           
   40 FORMAT(//,'0SUMMARY OF THE GEOMETRY CALCULATION',//,              
     1 10X,'H1      = ',F10.3,' KM',/,10X,'H2      = ',F10.3,' KM',/,   
     110X,'ANGLE   = ',F10.3,' DEG',/,10X,'RANGE   = ',F10.3,' KM',/,   
     310X,'BETA    = ',F10.3,' DEG',/,10X,'PHI     = ',F10.3,' DEG',/,  
     4 10X,'HMIN    = ',F10.3,' KM',/,10X,'BENDING = ',F10.3,' DEG',/,  
     5 10X,'LEN     = ',I10)                                            
  320 CONTINUE                                                          
C*****CALCULATE THE AEROSOL WEIGHTED MEAN RH                            
      IF(W(7).GT.0.0 .AND. ICH(1).LE.7)  W15   = W(15)/W(7)             
      IF(W(12).GT.0.0 .AND. ICH(1).GT.7)  W15   = W(15)/W(12)           
C                                                                       
C     INVERSE OF LOG REL HUM                                            
C                                                                       
      IF(W(7).GT.0.0 .AND. ICH(1).LE.7)  THEN                           
           W(15) = 100. - EXP(W15)                                      
      ENDIF                                                             
      IF(W(12).GT.0.0 .AND. ICH(1).GT.7)  THEN                          
           W(15) = 100. - EXP(W15)                                      
      ENDIF                                                             
      IF (W(7).LE.0.0 .AND. ICH(1).LE.7 )W(15) = 0.                     
      IF(W(12).LE.0.0 .AND. ICH(1).GT.7)  W(15) = 0.                    
C  CONVERT WPATH TO INCREMENTAL PATH AMOUNTS FOR MODTRAN RUNS           
      IF(MODTRN)THEN                                                    
          JMAXM1=JMAX-1                                                 
          MSOFFP=MSOFF+JMAX                                             
          DO 340 J=JMAXM1,1,-1                                          
              MSOFFJ=MSOFF+J                                            
              DO 330 K=1,NSPEC                                          
                  KP=KPOINT(K)                                          
  330         WPATH(MSOFFP,KP)=WPATH(MSOFFP,KP)-WPATH(MSOFFJ,KP)        
  340     MSOFFP=MSOFFJ                                                 
      ENDIF                                                             
C                                                                       
C*****PRINT TOTAL PATH AMOUNTS                                          
      IF(ISSGEO.EQ.1) RETURN                                            
      WRITE(IPR,50)  (W(KMOL(K)),K=4,16)                                
C  50 FORMAT(////,' EQUIVALENT SEA LEVEL TOTAL ABSORBER AMOUNTS',//,    
   50 FORMAT(////,'1EQUIVALENT SEA LEVEL TOTAL ABSORBER AMOUNTS',//,    
     1    T18,'HNO3',T28,'O3 UV',                                       
     2    T40,'CNTMSLF1',T52,'CNTMSLF2',T63,'CNTMFRN',/,                
     3                   T16,'(ATM CM)',T27,'(ATM CM)',T40,             
     4    '(MOL CM-2)',T52,'(MOL CM-2)',T64,'(MOL CM-2)',               
     +    T76,'(MOL CM-2)',                                             
     +    //,10X,1P5E12.3,///,                                          
     5    T15,'N2 CONT',T26,'MOL SCAT',T41,'AER 1', T53,'AER 2',        
     6    T65,'AER 3',T77, 'AER 4',T87,'CIRRUS',T99,'MEAN RH'/,         
     7    T99,'(PRCNT)',//,10X,1P7E12.3,0PF12.2)                        
C                                                                       
      IF(MODTRN)THEN                                                    
          WRITE(IPR,'(//T18,3HH2O,T29,2HO3,T41,3HCO2,T53,2HCO,T65,3HCH4,
     1      T77,3HN2O,T90,2HO2,/T16,1H(,T57,6HATM CM,T91,1H),//10X,     
     2      1P7E12.3,//T18,3HNH3,T29,2HNO,T41,3HNO2,T53,3HSO2,/T18,1H(, 
     3      T34,6HATM CM,T55,1H),//10X,1P4E12.3)')W(17),W(31),W(36),    
     4      W(44),W(46),W(47),W(50),W(52),W(54),W(55),W(56)             
      ELSE                                                              
      WRITE(IPR,60) W(17),W(31),W(36),W(44),W(46),W(47),W(50),          
     +              W(52),W(54),W(55),W(56)                             
      ENDIF                                                             
   60 FORMAT(                                                           
     1 //T18,'H2O',T29,'O3',T41,'CO2',T53,'CO',T65,'CH4',T77,'N2O',     
     +   T90,'O2',                                                      
     2  /T15,'(G/CM**2)',T29,'(',T57,'ATM CM',T91,')',//10X,1P7E12.3,   
     3 //T18,'NH3',T29,'NO',T41,'NO2',T53,'SO2',/T18,'(',T34,'ATM CM',  
     +   T55,')',                                                       
     4 //10X,1P4E12.3)                                                  
      IF(JMAXST .GT. MAXGEO) THEN                                       
      WRITE(IPR,900)MAXGEO,JMAXST                                       
 900  FORMAT(//'  CURRENT GEOMETRY DIMENSION ',I5 ,/                    
     X,' JMAXST = ',I5,' RESET AVTRAT TDIFF1 TDIFF2 TO 2. 10. 20.')     
      STOP 'GEO :JMAXST .GT. MAXGEO'                                    
      ENDIF                                                             
      DO 350 IK=1,JMAXST                                                
      IL=LJ(IK)                                                         
      RNPATH(IK)=SP(IL)                                                 
      RRAMTK(IK)=RRAMT(IL)                                              
350   CONTINUE                                                          
C                                                                       
500   FORMAT(/10X,'ICH(1),W(15),W(7),W(12)=',I5,1P3E12.3/)              
      RETURN                                                            
      END                                                               
      SUBROUTINE GEOINP(H1,H2,ANGLE,RANGE,BETA,ITYPE,LEN,HMIN,PHI,      
     1    IERROR)                                                       
C***********************************************************************
C     GEOINP INTERPRETS THE ALLOWABLE COMBINATIONS OF INPUT PATH        
C     PARAMETERS INTO THE STANDARD SET H1,H2,ANGLE,PHI,HMIN, AND LEN.   
C     THE ALLOWABLE COMBINATIONS OF INPUT PARAMETERS ARE- FOR ITYPE = 2,
C     (SLANT PATH H1 TO H2) A. H1, H2, AND ANGLE, B. H1, ANGLE, AND     
C     RANGE, C. H1, H2, AND RANGE, D. H1, H2, AND BETA -                
C     FOR ITYPE = 3 (SLANT PATH H1 TO SPACE H2 = 100 KM),               
C     A. H1 AND ANGLE, B. H1 AND HMIN (INPUT AS H2).                    
C     THE SUBROUTINE ALSO DETECTS BAD INPUT (IMPOSSIBLE GEOMETRY) AND   
C     ITYPE = 2 CASES WHICH INTERSECT THE EARTH, AND RETURNS THESE      
C     CASES WITH ERROR FLAGS.                                           
C     THE SUBROUTINE FNDHMN IS CALLED TO CALCULATE HMIN, THE MINIMUM    
C     HEIGHT ALONG THE PATH, AND PHI, THE ZENITH ANGLE AT H2, USING THE 
C     ATMOSPHERIC PROFILE STORED IN /MODEL/                             
C***********************************************************************
      COMMON /IFIL/ IRD,IPR,IPU,NPR,IPR1                                
      COMMON /PARMTR/ RE,DELTAS,ZMAX,IMAX,IMOD,IBMAX,IPATH              
      COMMON /CNSTNS/ PI,CA,DEG,GCAIR,BIGNUM,BIGEXP                     
      ITER = 0                                                          
      IF(ITYPE.NE.3) GO TO 120                                          
C*****SLANT PATH TO SPACE                                               
C*****NOTE: IF BOTH HMIN AND ANGLE ARE ZERO, THEN ANGLE IS              
C*****ASSUMED SPECIFIED                                                 
      IF(H2.NE.0.0)  GO TO 110                                          
C*****CASE 3A: H1,SPACE,ANGLE                                           
C     IF(NPR.NE.1)WRITE(IPR,10)                                         
      IF(NPR.LT.1)WRITE(IPR,10)                                         
   10 FORMAT(//,' CASE 3A: GIVEN H1,H2=SPACE,ANGLE')                    
      H2 =  ZMAX                                                        
      CALL FNDHMN(H1,ANGLE,H2,LEN,ITER,HMIN,PHI,IERROR)                 
      IF(IERROR.EQ.-5) RETURN                                           
      GO TO 200                                                         
  110 CONTINUE                                                          
C*****CASE 3B: H1,HMIN,SPACE                                            
C     IF(NPR.NE.1)WRITE(IPR,12)                                         
      IF(NPR.LT.1)WRITE(IPR,12)                                         
   12 FORMAT(//,' CASE 3B: GIVEN H1, HMIN, H2=SPACE')                   
      HMIN = H2                                                         
      H2 = ZMAX                                                         
      IF(H1.LT.HMIN) GO TO 9001                                         
      CALL FNDHMN(HMIN,90.0,H1,LEN,ITER,HMIN,ANGLE,IERROR)              
      CALL FNDHMN(HMIN,90.0,H2,LEN,ITER,HMIN,PHI,IERROR)                
      IF(HMIN.LT.H1) LEN = 1                                            
      GO TO 200                                                         
  120 CONTINUE                                                          
      IF(ITYPE.NE.2) GO TO 9002                                         
      IF(RANGE.NE.0.0.OR.BETA.NE.0.0) GO TO 130                         
C*****CASE 2A: H1, H2, ANGLE                                            
C     IF(NPR.NE.1)WRITE(IPR,16)                                         
      IF(NPR.LT.1)WRITE(IPR,16)                                         
   16 FORMAT(//, ' CASE 2A: GIVEN H1, H2, ANGLE')                       
      IF(H1.GE.H2.AND.ANGLE.LE.90.0) GO TO 9004                         
      IF(H1.EQ.0.0 .AND. ANGLE.GT.90.0) GO TO 9007                      
C     IF(H2.LT.H1.AND.ANGLE.GT.90.0.AND.NPR.NE.1) WRITE(IPR,15) LEN     
      IF(H2.LT.H1.AND.ANGLE.GT.90.0.AND.NPR.LT.1) WRITE(IPR,15) LEN     
   15 FORMAT(//,' EITHER A SHORT PATH (LEN=0) OR A LONG PATH ',         
     1    'THROUGH A TANGENT HEIGHT (LEN=1) IS POSSIBLE: LEN = ',       
     2    I3)                                                           
      H2ST = H2                                                         
      CALL FNDHMN(H1,ANGLE,H2,LEN,ITER,HMIN,PHI,IERROR)                 
      IF(H2.NE.H2ST)  GO TO 9007                                        
      GO TO 200                                                         
  130 CONTINUE                                                          
      IF(BETA.EQ.0.0) GO TO 133                                         
      CALL FDBETA(H1,H2,BETA,ANGLE,PHI,LEN,HMIN,IERROR)                 
      GO TO 200                                                         
  133 CONTINUE                                                          
      IF(ANGLE.EQ.0.0) GO TO 140                                        
C*****CASE 2B: H1, ANGLE, RANGE                                         
C*****ASSUME NO REFRACTION                                              
C     IF(NPR.NE.1)WRITE(IPR,18)                                         
      IF(NPR.LT.1)WRITE(IPR,18)                                         
   18 FORMAT(//,' CASE 2B:, GIVEN H1, ANGLE, RANGE',//                  
     1    10X,'NOTE: H2 IS COMPUTED FROM H1, ANGLE, AND RANGE ',        
     2    'ASSUMING NO REFRACTION')                                     
      R1 = RE+H1                                                        
      R2 = SQRT(R1**2+RANGE**2+2.0*R1*RANGE*COS(+ANGLE/DEG))            
      H2 = R2-RE                                                        
      IF(H2.GE.0.0)  GO TO 135                                          
      H2 = 0.0                                                          
      R2 = RE+H2                                                        
      RANGE = -R1*COS(ANGLE/DEG)-SQRT(R2**2-R1**2*(SIN(ANGLE/DEG))**2)  
C     IF(NPR.NE.1)WRITE(IPR,17) RANGE                                   
C     IF(NPR.LT.1)WRITE(IPR,17) RANGE                                   
   17 FORMAT(//,10X,'CALCULATED H2 IS LESS THAN ZERO:',/,               
     1    10X,'RESET H2 = 0.0 AND RANGE = ',F10.3)                      
  135 CONTINUE                                                          
C*****NOTE: GEOMETRIC PHI IS NEEDED TO DETERMINE LEN(0 OR 1).           
C*****PHI IS THEN RECOMPUTED IN FNDHMN                                  
      ZARG1=(R2**2+RANGE**2-R1**2)/(2.0*R2*RANGE)                       
      ERARG1=ABS(ZARG1)-1.0                                             
      IF((ERARG1.GT.1.0E-6).OR.(ERARG1.LT.0.0)) GO TO 137               
      IF (ZARG1.LT.0.0) GO TO 138                                       
      ZARG1=1.0                                                         
      GO TO 137                                                         
  138 ZARG1=-1.0                                                        
  137 PHI = 180.0-ACOS(ZARG1)*DEG                                       
      LEN = 0                                                           
      IF(ANGLE.GT.90.0.AND.PHI.GT.90.0) LEN = 1                         
      CALL FNDHMN(H1,ANGLE,H2,LEN,ITER,HMIN,PHI,IERROR)                 
      GO TO 200                                                         
  140 CONTINUE                                                          
C*****CASE 2C: H1, H2, RANGE                                            
C     IF(NPR.NE.1)WRITE(IPR,19)                                         
      IF(NPR.LT.1)WRITE(IPR,19)                                         
   19 FORMAT(//,' CASE 2C: GIVEN H1, H2, RANGE',//,                     
     1    10X,'NOTE: ANGLE IS COMPUTED FROM H1, H2, AND RANGE ',        
     2    'ASSUMING NO REFRACTION')                                     
      IF(ABS(H1-H2).GT.RANGE) GO TO 9003                                
      R1 = H1+RE                                                        
      R2 = H2+RE                                                        
C%    PHI = 180.0-ACOS((R2**2+RANGE**2-R1**2)/(2.0*R2*RANGE))*DEG       
      ZARG2=(R1**2+RANGE**2-R2**2)/(2.0*R1*RANGE)                       
      ERARG2=ABS(ZARG2)-1.0                                             
      IF((ERARG2.GT.1.0E-6).OR.(ERARG2.LT.0.0)) GO TO 187               
      IF (ZARG2.LT.0.0) GO TO 188                                       
      ZARG2=1.0                                                         
      GO TO 187                                                         
  188 ZARG2=-1.0                                                        
  187 ANGLE = 180.0-ACOS(ZARG2)*DEG                                     
      ZARG3=(R2**2+RANGE**2-R1**2)/(2.0*R2*RANGE)                       
      ERARG3=ABS(ZARG3)-1.0                                             
      IF((ERARG3.GT.1.0E-6).OR.(ERARG3.LT.0.0)) GO TO 197               
      IF (ZARG3.LT.0.0) GO TO 198                                       
      ZARG3=1.0                                                         
      GO TO 197                                                         
  198 ZARG3=-1.0                                                        
  197 PHI = 180.0-ACOS(ZARG3)*DEG                                       
      BETA = PHI +ANGLE -180.                                           
C#    RANGE = 0.                                                        
      IF(RANGE .GT. 2.0  .AND. BETA .GT. 0)THEN                         
      CALL FDBETA(H1,H2,BETA,ANGLE,PHI,LEN,HMIN,IERROR)                 
      ELSE                                                              
CJ                                                                      
      LEN = 0                                                           
      IF(ANGLE.GT.90.0.AND.PHI.GT.90.0) LEN = 1                         
      CALL FNDHMN(H1,ANGLE,H2,LEN,ITER,HMIN,PHI,IERROR)                 
      ENDIF                                                             
  200 CONTINUE                                                          
C*****TEST IERROR AND RECHECK LEN                                       
      IF(IERROR.NE.0)  RETURN                                           
      LEN = 0                                                           
      IF(HMIN.LT.AMIN1(H1,H2)) LEN = 1                                  
C*****REDUCE PATH ENDPOINTS ABOVE ZMAX TO ZMAX                          
      IF(HMIN.GE.ZMAX) GO TO 9008                                       
      IF(H1.GT.ZMAX .OR. H2.GT.ZMAX)  CALL REDUCE(H1,H2,ANGLE,PHI,ITER) 
C*****AT THIS POINT THE FOLLOWING PARAMETERS ARE DEFINED:               
C*****    H1,H2,ANGLE,PHI,HMIN,LEN                                      
C     IF(NPR.NE.1)WRITE(IPR,20)  H1,H2,ANGLE,PHI,HMIN,LEN               
      IF(NPR.LT.1)WRITE(IPR,20)  H1,H2,ANGLE,PHI,HMIN,LEN               
   20 FORMAT(///,' SLANT PATH PARAMETERS IN STANDARD FORM',//,          
     1  10X,'H1      = ',F10.3,' KM',/,10X,'H2      = ',F10.3,' KM',/,  
     2  10X,'ANGLE   = ',F10.3,' DEG',/,10X,'PHI     = ',F10.3,' DEG',/,
     3    10X,'HMIN    = ',F10.3,' KM',/,10X,'LEN     = ',I10)          
      RETURN                                                            
C*****                                                                  
C*****ERROR MESAGES                                                     
C*****                                                                  
 9001 CONTINUE                                                          
      WRITE(IPR,40) H1,HMIN                                             
   40 FORMAT('0GEOINP, CASE 3B (H1,HMIN,SPACE): ERROR IN INPUT DATA',   
     1    //,10X,'H1 = ',F12.6,'    IS LESS THAN HMIN = ',F12.6)        
      GO TO 9900                                                        
 9002 WRITE(IPR,42) ITYPE,ITYPE                                         
   42 FORMAT('0GEOINP: ERROR IN INPUT DATA, ITYPE NOT EQUAL TO ',       
     1    ' 2, OR 3.   ITYPE = ',I10,E23.14)                            
      GO TO 9900                                                        
 9003 WRITE(IPR,43) H1,H2,RANGE                                         
   43 FORMAT('0GEOINP, CASE 2C (H1,H2,RANGE): ERROR IN INPUT DATA',//,  
     110X,'ABS(H1-H2) GT RANGE;  H1 = ',F12.6,'    H2 = ',F12.6,        
     2    '    RANGE = ',F12.6)                                         
      GO TO 9900                                                        
 9004 CONTINUE                                                          
      WRITE(IPR,44)  H1,H2,ANGLE                                        
   44 FORMAT('0GEOINP, CASE 2A (H1,H2,ANGLE): ERROR IN INPUT DATA',     
     1  //,10X,'H1 = ',F12.6,'    IS GREATER THAN OR EQUAL TO H2 = ',   
     2    F12.6 ,/,10X,'AND ANGLE = ',F12.6,'    IS LESS THAN OR ',     
     3    'EQUAL TO 90.0')                                              
      GO TO 9900                                                        
 9007 WRITE(IPR,48)                                                     
   48 FORMAT('0GEOINP, ITYPE = 2: SLANT PATH INTERSECTS THE EARTH',     
     1    ' AND CANNOT REACH H2')                                       
      GO TO 9900                                                        
 9008 WRITE(IPR,50) ZMAX,H1,H2,HMIN                                     
   50 FORMAT(' GEOINP-  THE ENTIRE PATH LIES ABOVE THE TOP ZMAX ',      
     1    'OF THE ATMOSPHERIC PROFILE',//,10X,'ZMAX = ',G12.6,5X,       
     2    '  H1 = ',G12.6,5X,'  H2 = ',G12.6,'  HMIN = ',G12.6)         
 9900 IERROR = 1                                                        
      RETURN                                                            
      END                                                               
      FUNCTION   GMRAIN(FREQ,T,RATE)                                    
C                                                                       
C        COMPUTES ATTENUATION OF CONDENSED WATER IN FORM OF RAIN        
C                                                                       
C        FREQ = WAVENUMBER (CM-1)                                       
C        T    = TEMPERATURE (DEGREES KELVIN)                            
C        RATE = PRECIPITATION RATE (MM/HR)                              
C       WVLTH = WAVELENGTH IN CM                                        
C                                                                       
C     TABLES ATTAB AND FACTOR CALCULATED FROM FULL MIE THEORY           
C     UTILIZING MARSHALL-PALMER SIZE DISTRIBUTION WITH RAYS INDEX       
C     OF REFRACTION                                                     
C                                                                       
C     ATTAB IS ATTENUATION DATA TABLE IN NEPERS FOR 20 DEG CELSIUS      
C     WITH RADIATION FIELD REMOVED                                      
C                                                                       
C     WVNTBL IS WAVENUMBER TABLE FOR WAVENUMBERS USED IN TABLE ATTAB    
C     TMPTAB IS INTERPOLATION DATA TABLE FOR TEMPERATURES IN DEG KELVIN 
C                                                                       
C     TLMDA IS INTERPOLATION DATA TABLE FOR WAVELENGTH IN CM            
C     TFREQ IS INTERPOLATION DATA TABLE FOR WAVENUMBER IN CM-1          
C                                                                       
C     RATTAB IS RAIN RATE TABLE IN MM/HR                                
C                                                                       
C     FACTOR IS TABLE OF TEMPERATURE CORRECTION FACTORS FOR             
C     TABLE ATTAB FOR REPRESENTATIVE RAINS WITHOUT RADIATION FIELD      
C                                                                       
C                                                                       
C     AITKEN INTERPOLATION SCHEME WRITTEN BY                            
C           E.T. FLORANCE O.N.R. PASADENA CA.                           
C                                                                       
C                                                                       
      DIMENSION ATTAB1(35),ATTAB2(35),ATTAB3(35),ATTAB4(35),ATTAB5(35)  
      DIMENSION ATTAB6(35),ATTAB7(35),ATTAB8(35),ATTAB9(35)             
      DIMENSION ATTAB(35,9),WVLTAB(27),RATTAB(9),FACTOR(5,8,5)          
      DIMENSION X(4),Y(4),ATTN(4),RATES(4)                              
CCC   DIMENSION X(3),Y(3),ATTN(3),RATES(3)                              
      DIMENSION TMPTAB(5),TLMDA(6),FACIT(5),TFACT(5)                    
      DIMENSION TFREQ(8),WVNTBL(35)                                     
      DIMENSION FACEQ1(5,8),FACEQ2(5,8),FACEQ3(5,8),FACEQ4(5,8)         
      DIMENSION FACEQ5(5,8)                                             
      EQUIVALENCE (ATTAB1(1),ATTAB(1,1)),(ATTAB2(1),ATTAB(1,2))         
      EQUIVALENCE (ATTAB3(1),ATTAB(1,3)),(ATTAB4(1),ATTAB(1,4))         
      EQUIVALENCE (ATTAB5(1),ATTAB(1,5)),(ATTAB6(1),ATTAB(1,6))         
      EQUIVALENCE (ATTAB7(1),ATTAB(1,7)),(ATTAB8(1),ATTAB(1,8))         
      EQUIVALENCE (ATTAB9(1),ATTAB(1,9))                                
      EQUIVALENCE (FACEQ1(1,1),FACTOR(1,1,1))                           
      EQUIVALENCE (FACEQ2(1,1),FACTOR(1,1,2))                           
      EQUIVALENCE (FACEQ3(1,1),FACTOR(1,1,3))                           
      EQUIVALENCE (FACEQ4(1,1),FACTOR(1,1,4))                           
      EQUIVALENCE (FACEQ5(1,1),FACTOR(1,1,5))                           
      DATA WVLTAB/.03,.033,.0375,.043,.05,.06,.075,.1,.15,.2,.25,.3,.5, 
     1.8,1.,2.,3.,4.,5.,5.5,6.,6.5,7.,8.,9.,10.,15./                    
      DATA WVNTBL/ 0.0000,                                              
     1    .0667,.1000,.1111,.1250,.1429,.1538,                          
     2  .1667,.1818,.2000,.2500,.3333,.5000,1.0000,                     
     3 1.2500,2.0000,3.3333,4.0000,5.0000,6.6667,10.0000,               
     4 13.3333,16.6667,20.0000,23.2558,26.6667,30.3030,33.3333,         
     5 50.0,80.0,120.0,180.0,250.0,300.0,350.0/                         
      DATA RATTAB /.25,1.25,2.5,5.,12.5,25.,50.,100.,150./              
      DATA TLMDA/.03,.1,.5,1.25,3.2,10./                                
      DATA TFREQ/0.0,0.1,0.3125,0.8,2.0,10.0,33.3333,350.0/             
      DATA TMPTAB/273.15,283.15,293.15,303.15,313.15/                   
      DATA ATTAB1/                                                      
     1 1.272E+00,1.332E+00,1.361E+00,1.368E+00,1.393E+00,1.421E+00,     
     2 1.439E+00,1.466E+00,1.499E+00,1.541E+00,1.682E+00,1.951E+00,     
     3 2.571E+00,3.575E+00,3.808E+00,4.199E+00,3.665E+00,3.161E+00,     
     4 2.462E+00,1.632E+00,8.203E-01,4.747E-01,3.052E-01,2.113E-01,     
     5 1.551E-01,1.168E-01,8.958E-02,7.338E-02,3.174E-02,1.178E-02,     
     6 5.016E-03,2.116E-03,1.123E-03,8.113E-04,6.260E-04/               
      DATA ATTAB2/                                                      
     1 4.915E+00,5.257E+00,5.518E+00,5.632E+00,5.807E+00,6.069E+00,     
     2 6.224E+00,6.452E+00,6.756E+00,7.132E+00,8.453E+00,1.132E+01,     
     3 1.685E+01,2.177E+01,2.246E+01,2.156E+01,1.470E+01,1.167E+01,     
     4 8.333E+00,5.089E+00,2.356E+00,1.320E+00,8.315E-01,5.705E-01,     
     5 4.151E-01,3.119E-01,2.385E-01,1.955E-01,8.373E-02,3.138E-02,     
     6 1.351E-02,5.789E-03,3.090E-03,2.236E-03,1.725E-03/               
      DATA ATTAB3/                                                      
     1 8.798E+00,9.586E+00,1.023E+01,1.049E+01,1.093E+01,1.159E+01,     
     2 1.205E+01,1.263E+01,1.343E+01,1.450E+01,1.832E+01,2.627E+01,     
     3 3.904E+01,4.664E+01,4.702E+01,4.152E+01,2.542E+01,1.959E+01,     
     4 1.363E+01,8.087E+00,3.660E+00,2.028E+00,1.274E+00,8.710E-01,     
     5 6.340E-01,4.757E-01,3.634E-01,2.971E-01,1.275E-01,4.795E-02,     
     6 2.072E-02,8.936E-03,4.780E-03,3.460E-03,2.670E-03/               
      DATA ATTAB4/                                                      
     1 1.575E+01,1.750E+01,1.914E+01,1.991E+01,2.108E+01,2.276E+01,     
     2 2.399E+01,2.561E+01,2.785E+01,3.097E+01,4.204E+01,6.334E+01,     
     3 8.971E+01,9.853E+01,9.609E+01,7.718E+01,4.290E+01,3.220E+01,     
     4 2.188E+01,1.271E+01,5.641E+00,3.110E+00,1.947E+00,1.327E+00,     
     5 9.657E-01,7.242E-01,5.539E-01,4.528E-01,1.942E-01,7.335E-02,     
     6 3.181E-02,1.380E-02,7.394E-03,5.354E-03,4.132E-03/               
      DATA ATTAB5/                                                      
     1 3.400E+01,3.927E+01,4.523E+01,4.796E+01,5.207E+01,5.886E+01,     
     2 6.383E+01,7.060E+01,8.005E+01,9.360E+01,1.381E+02,2.069E+02,     
     3 2.620E+02,2.534E+02,2.366E+02,1.673E+02,8.285E+01,6.059E+01,     
     4 4.013E+01,2.280E+01,9.939E+00,5.439E+00,3.400E+00,2.315E+00,     
     5 1.685E+00,1.263E+00,9.664E-01,7.914E-01,3.397E-01,1.288E-01,     
     6 5.611E-02,2.450E-02,1.316E-02,9.536E-03,7.360E-03/               
      DATA ATTAB6/                                                      
     1 6.087E+01,7.347E+01,8.886E+01,9.653E+01,1.081E+02,1.283E+02,     
     2 1.435E+02,1.649E+02,1.947E+02,2.346E+02,3.543E+02,4.991E+02,     
     3 5.705E+02,5.048E+02,4.510E+02,2.900E+02,1.335E+02,9.607E+01,     
     4 6.269E+01,3.520E+01,1.519E+01,8.295E+00,5.182E+00,3.529E+00,     
     5 2.569E+00,1.927E+00,1.474E+00,1.208E+00,5.191E-01,1.975E-01,     
     6 8.627E-02,3.784E-02,2.037E-02,1.476E-02,1.139E-02/               
      DATA ATTAB7/                                                      
     1 1.090E+02,1.396E+02,1.811E+02,2.029E+02,2.396E+02,3.039E+02,     
     2 3.536E+02,4.189E+02,5.081E+02,6.217E+02,9.038E+02,1.165E+03,     
     3 1.212E+03,9.731E+02,8.330E+02,4.901E+02,2.123E+02,1.507E+02,     
     4 9.718E+01,5.408E+01,2.316E+01,1.264E+01,7.896E+00,5.377E+00,     
     5 3.915E+00,2.939E+00,2.249E+00,1.844E+00,7.940E-01,3.029E-01,     
     6 1.327E-01,5.846E-02,3.151E-02,2.284E-02,1.763E-02/               
      DATA ATTAB8/                                                      
     1 1.950E+02,2.703E+02,3.904E+02,4.614E+02,5.825E+02,7.909E+02,     
     2 9.475E+02,1.142E+03,1.380E+03,1.656E+03,2.237E+03,2.610E+03,     
     3 2.500E+03,1.820E+03,1.491E+03,8.103E+02,3.336E+02,2.344E+02,     
     4 1.495E+02,8.273E+01,3.524E+01,1.922E+01,1.203E+01,8.182E+00,     
     5 5.961E+00,4.477E+00,3.429E+00,2.812E+00,1.216E+00,4.651E-01,     
     6 2.043E-01,9.033E-02,4.874E-02,3.534E-02,2.728E-02/               
      DATA ATTAB9/                                                      
     1 2.742E+02,4.012E+02,6.353E+02,7.829E+02,1.027E+03,1.439E+03,     
     2 1.725E+03,2.071E+03,2.475E+03,2.909E+03,3.738E+03,4.104E+03,     
     3 3.776E+03,2.589E+03,2.070E+03,1.078E+03,4.326E+02,3.023E+02,     
     4 1.918E+02,1.059E+02,4.499E+01,2.454E+01,1.539E+01,1.045E+01,     
     5 7.615E+00,5.722E+00,4.384E+00,3.596E+00,1.561E+00,5.978E-01,     
     6 2.630E-01,1.165E-01,6.292E-02,4.562E-02,3.522E-02/               
      DATA FACEQ1/                                                      
     1 1.606,1.252,1.000, .816, .680,1.603,1.246,1.000, .817, .684,     
     2 1.444,1.207,1.000, .838, .694,1.016, .985,1.000,1.034,1.058,     
     3  .950, .976,1.000,1.034,1.068, .922, .956,1.000,1.044,1.090,     
     4  .932, .966,1.000,1.034,1.068, .957, .978,1.000,1.022,1.044/     
      DATA FACEQ2/                                                      
     1 1.606,1.252,1.000, .816, .680,1.612,1.256,1.000, .817, .684,     
     2 1.193,1.101,1.000, .889, .769, .885, .927,1.000,1.086,1.175,     
     3  .941, .976,1.000,1.024,1.047, .932, .966,1.000,1.034,1.079,     
     4  .932, .966,1.000,1.034,1.068, .957, .978,1.000,1.022,1.044/     
      DATA FACEQ3/                                                      
     1 1.606,1.252,1.000, .816, .680,1.621,1.256,1.000, .817, .673,     
     2  .969, .995,1.000, .982, .940, .895, .937,1.000,1.075,1.143,     
     3  .950, .976,1.000,1.024,1.036, .932, .966,1.000,1.034,1.079,     
     4  .932, .966,1.000,1.034,1.068, .957, .978,1.000,1.022,1.044/     
      DATA FACEQ4/                                                      
     1 1.606,1.252,1.000, .816, .680,1.631,1.265,1.000, .807, .662,     
     2  .848, .927,1.000,1.044,1.079, .922, .956,1.000,1.055,1.111,     
     3  .950, .976,1.000,1.013,1.036, .932, .966,1.000,1.034,1.079,     
     4  .932, .966,1.000,1.034,1.068, .957, .978,1.000,1.022,1.044/     
      DATA FACEQ5/                                                      
     1 1.606,1.252,1.000, .816, .680,1.603,1.265,1.000, .807, .662,     
     2  .820, .918,1.000,1.075,1.132, .941, .966,1.000,1.034,1.079,     
     3  .960, .976,1.000,1.013,1.036, .932, .966,1.000,1.034,1.079,     
     4  .932, .966,1.000,1.034,1.068, .957, .978,1.000,1.022,1.044/     
      DATA RATLIM /.05/                                                 
C         GIVE ZERO ATTN IF RATE FALLS BELOW LIMIT                      
      IF(RATE.GT.RATLIM) GO TO 12                                       
      GMRAIN = 0.                                                       
      RETURN                                                            
   12 WVLTH =  1.0  /FREQ                                               
CCC   JMAX=3                                                            
      JMAX=4                                                            
CCC   IF(WVLTH.GT.WVLTAB(1)) GO TO      14                              
CCC   ILOW=0                                                            
CCC   JMAX=2                                                            
CCC   GO TO 18                                                          
CCC   THIS DO LOOP IS 2 LESS THAN NO. OF WVLTAB INPUT                   
CCC14 DO 15 I=2,25                                                      
14    DO 15 I=3,33                                                      
CCC   IF(WVLTH.LT.(.5*(WVLTAB(I)+WVLTAB(I+1)))) GO TO 16                
      IF(FREQ.LT.WVNTBL(I)) GO TO 16                                    
   15 CONTINUE                                                          
CCC   SET ILOW EQUAL TO 1 LESS THAN DO MAX                              
CCC   ILOW=24                                                           
      I=34                                                              
CCC   GO TO 18                                                          
CCC16 ILOW = I-2                                                        
16    ILOW=I-3                                                          
   18 CONTINUE                                                          
CCC   DO 190 I=2,7                                                      
      DO 190 K=3,7                                                      
CCC   IF (RATE. LT.(.5*(RATTAB(I)+RATTAB(I+1))))GO TO 195               
      IF(RATE.LT.RATTAB(K)) GO TO 195                                   
  190 CONTINUE                                                          
CCC   KMIN=6                                                            
      K=8                                                               
CCC   GO TO 198                                                         
CC195 KMIN=I-2                                                          
195   KMIN=K-3                                                          
  198 CONTINUE                                                          
      DO 20 J=1,JMAX                                                    
      IJ = ILOW + J                                                     
      X(J) =       WVNTBL(IJ)                                           
   20 CONTINUE                                                          
C        INTERPOLATE                                                    
CCC   Z = -ALOG(FREQ)                                                   
CCC   DO 25 K=1,3                                                       
      DO 25 K=1,4                                                       
      KJ=KMIN+K                                                         
      RATES(K)=RATTAB(KJ)                                               
      DO 24 J=1,JMAX                                                    
      IJ = ILOW + J                                                     
      Y(J)= ALOG(ATTAB(IJ,KJ))                                          
   24 CONTINUE                                                          
      ATTN(K)=EXP(AITK(X,Y,FREQ,JMAX) )                                 
   25 CONTINUE                                                          
C        APPLY TEMPERATURE CORRECTION                                   
      DO 31 I=2,5                                                       
      IF(T.LT.TMPTAB(I)) GO TO 33                                       
   31 CONTINUE                                                          
      ILOW = 4                                                          
      GO TO 35                                                          
   33 ILOW = I-1                                                        
   35 CONTINUE                                                          
      DO 41 J=2,8                                                       
      IF(FREQ.LT.TFREQ(J)) GO TO 43                                     
   41 CONTINUE                                                          
CCC   JLOW IS 2 LESS THAN DO MAX                                        
      JLOW=6                                                            
      GO TO 45                                                          
   43 JLOW = J-2                                                        
   45 CONTINUE                                                          
      DO 50 K=1,2                                                       
      DO 49 J=1,2                                                       
C        INTERPOLATE IN TEMPERATURE                                     
CCC   KJ=(KMIN/2)+K                                                     
      KJ=K+(KMIN+1)/2                                                   
      JI = JLOW + J                                                     
      FAC = ((TMPTAB(ILOW)-T)*FACTOR(ILOW+1,JI,KJ)+(T-TMPTAB(ILOW+1))*  
     1 FACTOR(ILOW,JI,KJ))/(TMPTAB(ILOW)-TMPTAB(ILOW+1))                
      JI = JLOW +3-J                                                    
      FACIT(J) = (TFREQ(JI)-FREQ )*FAC                                  
   49 CONTINUE                                                          
      TFACT(K) = (FACIT(2)-FACIT(1))/(TFREQ(JLOW+1)-TFREQ(JLOW+2))      
   50 CONTINUE                                                          
C        COMPUTE ATTENUATION (DB/KM)                                    
CCC   KJ=2*KMIN/2+1                                                     
      KJ=2*((KMIN+1)/2)+1                                               
CCC   GMRAIN=AITK(RATES,ATTN,RATE,3)*                                   
      GMRAIN=AITK(RATES,ATTN,RATE,4)*                                   
     1((RATE-RATTAB(KJ))*TFACT(2)+(RATTAB(KJ+2)-RATE)*                  
     2TFACT(1))/(RATTAB(KJ+2)-RATTAB(KJ))                               
CCC                                                                     
CCC    APPLY CONVERSION TO NEPERS                                       
CCC                                                                     
      RETURN                                                            
      END                                                               
      SUBROUTINE HENGNS(ZZ,SANGLE,PHFA)                                 
C                                                                       
C    CALCULATES THE PHASE FUNCTION USING THE HENREY GREENSTEIN          
C    METHOD FOR CLOUDS, DESERT AERSOL, RAIN OR USER READ IN MODEL       
C                                                                       
      COMMON /CNSTNS/ PI,CA,DEG,GCAIR,BIGNUM,BIGEXP                     
C                                                                       
      PFHG(GG,X)=(1.0-GG**2)/(4.*PI*(1.0+GG**2-2.0*GG*X)**1.5)          
      PHFA = PFHG(ZZ,SANGLE)                                            
      RETURN                                                            
      END                                                               
      SUBROUTINE HERTDA(HERZ,V)                                         
C                                                                       
C     HERZBERG O2 ABSORPTION                                            
C     HALL,1987 PRIVATE COMMUNICATION, BASED ON:                        
C                                                                       
C     REF. JOHNSTON ET.AL, JGR,89,11661-11665,1984                      
C         NICOLET, 1987 (RECENT STUDIES IN ATOMIC & MOLECULAR PROCESSES,
C                        PLEMUN PUBLISHING CORP, NY 1987)               
C     AND YOSHINO, ET.AL., 1988 (PREPRINT OF "IMPROVED ABSORPTION       
C         CROSS SECTIONS OF OXYGEN IN THE WAVELENGTH REGION 205-240NM   
C         OF THE HERZBERG CONTINUUM")                                   
C                                                                       
      COMMON /CNSTNS/ PI,CA,DEG,GCAIR,BIGNUM,BIGEXP                     
C                                                                       
      HERZ=0.0                                                          
      IF(V.LE.36000.00) RETURN                                          
C                                                                       
C     EXTRAPOLATE SMOOTHLY THROUGH THE HERZBERG BAND REGION             
C     NOTE: HERZBERG BANDS ARE NOT CORRECTLY INCLUDED                   
C                                                                       
      CORR=0.                                                           
      IF(V.LE.40000.)CORR=((40000.-V)/4000.)*7.917E-27                  
C                                                                       
C     CONVERSION TO ATM-CM /KM                                          
C                                                                       
      RLOSCH = 2.6868 E24 * 1.0E-5                                      
C                                                                       
C     HALL'S NEW HERZBERG  (LEAST SQRS FIT, LN(P))                      
C                                                                       
C     YRATIO=2048.7/WL(I)  ****IN ANGSTOMS****                          
C           =.20487/WN(I)     IN MICRONS                                
C           =WCM(I)/48811.0   IN CM-1                                   
C                                                                       
      YRATIO= V    /48811.0                                             
      HERZ=6.884E-24*(YRATIO)*EXP(-69.738*(ALOG(YRATIO))**2)-CORR       
      HERZ = HERZ * RLOSCH                                              
      RETURN                                                            
      END                                                               
      SUBROUTINE HNO3 (V,HABS)                                          
C                                                                       
C     HNO3  STATISTICAL BAND PARAMETERS                                 
C                                                                       
      DIMENSION H1(15), H2(16), H3(13)                                  
C     ARRAY H1 CONTAINS HNO3 ABS, COEF(CM-1ATM-1) FROM  850 TO 920 CM-1 
      DATA H1/2.197,3.911,6.154,8.150,9.217,9.461,11.56,11.10,11.17,12.4
     10,10.49,7.509,6.136,4.899,2.866/                                  
C     ARRAY H2 CONTAINS HNO3 ABS, COEF(CM-1ATM-1) FROM 1275 TO1350 CM-1 
      DATA H2/2.828,4.611,6.755,8.759,10.51,13.74,18.00,21.51,23.09,21.6
     18,21.32,16.82,16.42,17.87,14.86,8.716/                            
C     ARRAY H3 CONTAINS HNO3 ABS, COEF(CM-1ATM-1) FROM 1675 TO1735 CM-1 
      DATA H3/5.003,8.803,14.12,19.83,23.31,23.58,23.22,21.09,26.99,25.8
     14,24.79,17.68,9.420/                                              
      HABS=0.                                                           
      IF (V.GE.850.0.AND.V.LE.920.0) GO TO 5                            
      IF (V.GE.1275.0.AND.V.LE.1350.0) GO TO 10                         
      IF (V.GE.1675.0.AND.V.LE.1735.0) GO TO 15                         
      RETURN                                                            
    5 I=(V-845.)/5.                                                     
      HABS=H1(I)                                                        
      RETURN                                                            
   10 I=(V-1270.)/5.                                                    
      HABS=H2(I)                                                        
      RETURN                                                            
   15 I=(V-1670.)/5.                                                    
      HABS=H3(I)                                                        
      RETURN                                                            
      END                                                               
      SUBROUTINE INDX (WAVL,TC,KEY,REIL,AIMAG)                          
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
C * *                                                                   
C * * WAVELENGTH IS IN CENTIMETERS.  TEMPERATURE IS IN DEG. C.      * * 
C * *                                                                   
C * * KEY IS SET TO 1 IN SUBROUTINE GAMFOG                          * * 
C * *                                                                   
C * * KEY IS SET TO 0 IN SUBROUTINE GAMFOG    FOR CIRRUS            * * 
C * *                                                                   
C * * REAL IS THE REAL PART OF THE REFRACTIVE INDEX.                * * 
C * *                                                                   
C * * AIMAG IS THE IMAGINARY PART OF THE REFRACTIVE INDEX IT IS     * * 
C * *                                                                   
C * * RETURNED NEG. I.E.  M= REAL - I*AIMAG  .                      * * 
C * *                                                                   
C * * A SERIES OF CHECKS ARE MADE AND WARNINGS GIVEN.               * * 
C * *                                                                   
C * * RAY APPLIED OPTICS VOL 11,NO.8,AUG 72, PG. 1836-1844          * * 
C * *                                                                   
C * * CORRECTIONS HAVE BEEN MADE TO RAYS ORIGINAL PAPER             * * 
C * *                                                                   
C * *                                                                   
C * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
      COMMON /IFIL/ IRD,IPR,IPU,NPR,IPR1                                
      R1=0.0                                                            
      R2=0.0                                                            
      IF(WAVL.LT..0001) WRITE(6,1)                                      
      IF(TC.LT.-20.) WRITE(6,2)                                         
    1 FORMAT(///,30X,'ATTEMPTING TO EVALUATE FOR A WAVELENGTH LESS THAN 
     1ONE MICRON',//)                                                   
    2 FORMAT(///,30X,'ATTEMPTING TO EVALUATE FOR A TEMPERATURE LESS THAN
     2 -20. DEGREES CENTIGRADE',//)                                     
      CALL DEBYE(WAVL,TC,KEY,REIL,AIMAG)                                
C * *  TABLE 3 WATER PG. 1840                                           
    4 IF(WAVL.GT..034) GO TO 5                                          
      GO TO 7                                                           
    5 IF(WAVL.GT..1) GO TO 11                                           
    6  R2 =DOP(WAVL,1.83899,1639.,52340.4,10399.2,588.24,345005.,       
     3259913.,161.29,43319.7,27661.2)                                   
      R2=R2+R2*(TC-25.)*.0001*EXP((.000025*WAVL)**.25)                  
      REIL=REIL*(WAVL-.034)/.066+R2*(.1-WAVL)/.066                      
      GO TO 11                                                          
    7 IF(WAVL.GT..0006) GO TO 8                                         
      GO TO 10                                                          
    8 REIL=DOP(WAVL,1.83899,1639.,52340.4,10399.2,588.24,345005.,       
     4259913.,161.29,43319.7,27661.2)                                   
      REIL=REIL+REIL*(TC-25.)*.0001*EXP((.000025*WAVL)**.25)            
      IF(WAVL.GT..0007) GO TO 11                                        
    9 R1=DOP(WAVL,1.79907,3352.27,99.914E+04,15.1963E+04,1639.,50483.5, 
     59246.27,588.24,84.4697E+04,10.7615E+05)                           
      R1=R1+R1*(TC-25.)*.0001*EXP((.000025*WAVL)**.25)                  
      REIL=R1*(.0007-WAVL)/.0001+REIL*(WAVL-.0006)/.0001                
      GO TO 11                                                          
   10 REIL=DOP(WAVL,1.79907,3352.27,99.914E+04,15.1963E+04,1639.,       
     650483.5,9246.27,588.24,84.4697E+04,10.7615E+05)                   
      REIL=REIL+REIL*(TC-25.)*.0001*EXP((.000025*WAVL)**.25)            
C * *  TABLE 2 WATER PG. 1840                                           
   11 IF(WAVL.GE..3) GO TO 57                                           
      IF(WAVL.GE..03) GO TO 12                                          
      GO TO 13                                                          
   12 AIMAG=AIMAG+AB(WAVL,.25,300.,.47,3.)+AB(WAVL,.39,17.,.45,1.3)+    
     7AB(WAVL,.41,62.,.35,1.7)                                          
      GO TO 57                                                          
   13 IF(WAVL.GE..0062) GO TO 14                                        
      GO TO 15                                                          
   14 AIMAG=AIMAG+AB(WAVL,.41,62.,.35,1.7)+AB(WAVL,.39,17.,.45,1.3)+    
     8AB(WAVL,.25,300.,.4,2.)                                           
      GO TO 57                                                          
   15 IF(WAVL.GE..0017) GO TO 16                                        
      GO TO 17                                                          
   16 AIMAG=AIMAG+AB(WAVL,.39,17.,.45,1.3)+AB(WAVL,.41,62.,.22,1.8)+    
     9AB(WAVL,.25,300.,.4,2.)                                           
      GO TO 57                                                          
   17 IF(WAVL.GE..00061) GO TO 18                                       
      GO TO 19                                                          
   18 AIMAG=AIMAG+AB(WAVL,.12,6.1,.042,.6)+AB(WAVL,.39,17.,.165,2.4)+   
     1AB(WAVL,.41,62.,.22,1.8)                                          
      GO TO 57                                                          
   19 IF(WAVL.GE..000495) GO TO 20                                      
      GO TO 21                                                          
   20 AIMAG=AIMAG+AB(WAVL,.01,4.95,.05,1.)+AB(WAVL,.12,6.1,.009,2.)     
      GO TO 57                                                          
   21 IF(WAVL.GE..000297) GO TO 22                                      
      GO TO 23                                                          
   22 AIMAG=AIMAG+AB(WAVL,.27,2.97,.04,2.)+AB(WAVL,.01,4.95,.06,1.)     
      GO TO 57                                                          
   23 AIMAG=AIMAG+AB(WAVL,.27,2.97,.025,2.)+AB(WAVL,.01,4.95,.06,1.)    
   57 CONTINUE                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE INTERP(INTYPE,X,X1,X2,F,F1,F2)                         
C     SUBROUTINE INTERP INTERPOLATES TO DETERMINE THE VALUE OF F        
C     AT X, GIVEN F1 AT X1 AND F2 AT X2.                                
C     INTYPE=1 FOR LINEAR INTERPOLATION                                 
C     INTYPE=2 FOR LOGARITHMIC INTERPOLATION                            
      ITYPE=INTYPE                                                      
      IF(F1.LE.0.0.OR.F2.LE.0.0) ITYPE=1                                
      IF(ITYPE.EQ.2) GO TO 100                                          
C     LINEAR INTERPOLATION                                              
      F=F1+(X-X1)*(F2-F1)/(X2-X1)                                       
      RETURN                                                            
100   CONTINUE                                                          
      A1=ALOG(F1)                                                       
      A2=ALOG(F2)                                                       
      A=A1+(X-X1)*(A2-A1)/(X2-X1)                                       
      F=EXP(A)                                                          
      RETURN                                                            
      END                                                               
      FUNCTION   JOU(CHAR)                                              
      COMMON /IFIL/ IRD,IPR,IPU,NOPR,NFHDRF                             
C                                                                       
      CHARACTER*1 CHAR,HOLVEC(22)                                       
      DIMENSION INDX1(22)                                               
      DATA  HOLVEC                                                      
     X /'1','2','3','4','5','6','0','0','0','0',' ','A',                
     X  'B','C','D','E','F','G','H','I','J','K'/                        
      DATA  INDX1                                                       
     X /  1,  2,  3,  4,  5,  6,  0,  0,  0,  0, 10, 10,                
     X   11, 12, 13, 14, 15, 16, 17, 18, 19, 20/                        
C                                                                       
       INDX=0                                                           
      DO 100 I=1,22                                                     
       IF (HOLVEC(I) .NE. CHAR) GO TO 100                               
       INDX=INDX1(I)                                                    
       GO TO 110                                                        
100   CONTINUE                                                          
110   IF (INDX .EQ. 0) THEN                                             
        WRITE(IPR,910) CHAR                                             
910     FORMAT('0 INVALID PARAMETER :',2X,A1)                           
        STOP ' JOU: BAD PARAM '                                         
      END IF                                                            
920   FORMAT(5X,A1,I5)                                                  
      JOU=INDX                                                          
                    RETURN                                              
      END                                                               
      SUBROUTINE LAYCLD(K,CLDATZ,RRATZ,ICLD1,GNDALT,RAINRT)             
C                                                                       
C      THIS SUBROUTINE RESTRUCTURES THE ATMOSPHERIC PROFILE             
C      TO PROFIDE FINER LAYERING WITHIN THE FIRST 6 KM.                 
C                                                                       
C     ZMDL COMMON /MODEL/ FINAL ALTITUDE FOR LOWTRAN                    
C     ZK  EFFECTIVE CLOUD ALTITUDES                                     
C     ZCLD CLOUD ALTITUDE ARRAY                                         
C     ZDIF  ALT DIFF OF 2 LAYERS                                        
C     ZDA COMMON /MDATA/ CLD AND RAIN INFO IN THIS COMMON               
C                                                                       
       COMMON /MDATA/  Z(50),P(50),T(50),WH(50),WCO2(50),WO(50),        
     X WN2O(50),WCO(50),WCH4(50),WO2(50),                               
     X CLD(50,7),RR(50,7)                                               
      COMMON /MDATA1/ WNO(50),WSO2(50),WNO2(50),WNH3(50),WAIR(50)       
      COMMON/MODEL/ ZMDL(34),PM(34),TM(34),RFNDX(34),DENSTY(63,34),     
     1 CLDAMT(34),RRAMT(34),EQLWC(34),HAZEC(34)                         
      DIMENSION ZCLD(16)                                                
      DATA ZCLD/ 0.0,0.16,0.33,0.66,1.0,1.5,2.0,2.4,2.7,                
     1 3.0,3.5,4.0,4.5,5.0,5.5,6.0/                                     
      DATA CLDTP/6.0001/                                                
      DATA DELZ /0.02/                                                  
      ICLD=ICLD1                                                        
      IF(ICLD .EQ. 0) RETURN                                            
      IF(ICLD .GT. 11)RETURN                                            
      ZK=ZMDL(K)-GNDALT                                                 
      IF(ZK.LT.0.) ZK=0.                                                
      IF(ZMDL(K).GT.6.) ZK=ZMDL(K)                                      
      IF(ICLD.GT.5 )  GO TO 15                                          
CCC                                                                     
CCC    ICLD  IS  1- 5 ONE OF 5 SPECIFIC CLOUD MODELS IS CHOSEN          
CCC                                                                     
      MC=ICLD                                                           
      MR=6                                                              
      GO TO 25                                                          
15    CONTINUE                                                          
CCC                                                                     
CCC   ICLD  IS  6-10 ONE OF 5 SPECIFIC CLOUD/RAIN MODELS CHOSEN         
CCC                                                                     
      IF(ICLD .EQ. 6) MC=3                                              
      IF(ICLD .EQ. 7 .OR. ICLD .EQ. 8) MC=5                             
      IF(ICLD .GT. 8) MC=1                                              
      MR=ICLD-5                                                         
25    IF(  ZK.GT.CLDTP) GO TO 30                                        
      CLDATZ=0.                                                         
      RRATZ=0.                                                          
      IF(ZK.LE.10.)RRATZ=RAINRT                                         
      IF(MC.LT.1) GO TO 29                                              
      DO 26 MK=1,15                                                     
      IF(  ZK.GE.ZCLD(MK+1)) GO TO 26                                   
      IF(  ZK.LT.ZCLD(MK)) GO TO 26                                     
      IF(ABS(  ZK-ZCLD(MK)).LT.DELZ) GO TO 27                           
      GO TO 28                                                          
27     CLDATZ=CLD(MK,MC)                                                
       RRATZ=RR(MK,MR)                                                  
      GO TO 29                                                          
28    ZDIF=ZCLD(MK+1)-ZCLD(MK)                                          
      IF(ZDIF.LT.DELZ) GO TO 27                                         
      FAC=(ZCLD(MK+1)-  ZK)/ZDIF                                        
      CLDATZ=CLD(MK+1,MC)+FAC*(CLD(MK,MC)-CLD(MK+1,MC))                 
      RRATZ=RR(MK+1,MR)+FAC*(RR(MK,MR)-RR(MK+1,MR))                     
      GO TO 29                                                          
26    CONTINUE                                                          
29    CLDAMT(K)=CLDATZ                                                  
      CLD(K,7)=CLDATZ                                                   
      RR(K,7)=RRATZ                                                     
      RRAMT(K)=RRATZ                                                    
      RETURN                                                            
30    CONTINUE                                                          
      CLDAMT(K)=0.0                                                     
      RRAMT(K)=0.0                                                      
      CLDATZ=0.0                                                        
      RRATZ=0.0                                                         
      RETURN                                                            
C100  CONTINUE                                                          
C     RETURN                                                            
      END                                                               
      SUBROUTINE LAYER(J,SINAI,COSAI,CPATH,SH,GAMMA,IAMT,S,BEND)        
C*****************************************************************      
C     THIS SUBROUTINE CALCULATES THE REFRACTED PATH FROM Z1 TO Z2       
C     WITH THE SIN OF THE INITIAL INCIDENCE ANGLE SINAI                 
C*****************************************************************      
      COMMON /PARMTR/ RE,DELTAS,ZMAX,IMAX,IMOD,IBMAX,IPATH              
      COMMON /CNSTNS/ PI,CA,DEG,GCAIR,BIGNUM,BIGEXP                     
      COMMON /CNTRL/ KMAX,M,IKMAX,NL,ML,IKLO,ISSGEO,IMULT               
      COMMON /RFRPTH/ ZP(35),PP(35),TP(35),RFNDXP(35),SP(35),           
     1    PPSUM(35),TPSUM(35),RHOPSM(35),DENP(63,35),AMTP(63,35)        
      DIMENSION HDEN(63),DENA(63),DENB(63)                              
      DATA EPSILN/1.0E-5/                                               
C*****INITIALIZE LOOP                                                   
      N = 0                                                             
      Z1 = ZP(J)                                                        
      Z2 = ZP(J+1)                                                      
      H1 = Z1                                                           
      R1 = RE+H1                                                        
      DHMIN = DELTAS**2/(2.0*R1)                                        
      SINAI1 = SINAI                                                    
      COSAI1 = COSAI                                                    
      Y1 = COSAI1**2/2.0+COSAI1**4/8.0+COSAI1**6*3.0/48.0               
      Y3 = 0.0                                                          
      X1 = -R1*COSAI1                                                   
      RATIO1 = R1/RADREF(H1,SH,GAMMA)                                   
      DSDX1 = 1.0/(1.0-RATIO1*SINAI1**2)                                
      DBNDX1 = DSDX1*SINAI1*RATIO1/R1                                   
      S = 0.0                                                           
      BEND = 0.0                                                        
      IF(IAMT.EQ.2) GO TO 110                                           
C*****INITIALIZE THE VARIABLES FOR THE CALCULATION OF THE               
C*****ABSORBER AMOUNTS                                                  
      PA = PP(J)                                                        
      PB = PP(J+1)                                                      
      TA = TP(J)                                                        
      TB = TP(J+1)                                                      
      RHOA = PA/(GCAIR*TA)                                              
      RHOB = PB/(GCAIR*TB)                                              
      DZ = ZP(J+1)-ZP(J)                                                
      HP = -DZ/ALOG(PB/PA)                                              
      IF(ABS(RHOB/RHOA-1.0).LT.EPSILN)  GO TO 90                        
      HRHO = -DZ/ALOG(RHOB/RHOA)                                        
      GO TO 95                                                          
   90 HRHO = 1.0E30                                                     
   95 CONTINUE                                                          
      DO 105 K=1,KMAX                                                   
      DENA(K) = DENP(K,J)                                               
      DENB(K) = DENP(K,J+1)                                             
      IF(DENA(K).LE.0.0 .OR. DENB(K).LE.0.0)  GO TO 100                 
      IF(ABS(1.0-DENA(K)/DENB(K)).LE.EPSILN)  GO TO 100                 
C*****USE EXPONENTIAL INTERPOLATION                                     
      HDEN(K) = -DZ/ALOG(DENB(K)/DENA(K))                               
      GO TO 105                                                         
C*****USE LINEAR INTERPOLATION                                          
  100 HDEN(K) = 0.0                                                     
  105 CONTINUE                                                          
  110 CONTINUE                                                          
C*****                                                                  
C*****LOOP THROUGH PATH                                                 
C*****INTEGRATE PATH QUANTITIES USING QUADRATIC INTEGRATION WITH        
C*****UNEQUALLY SPACED POINTS                                           
C*****                                                                  
  115 CONTINUE                                                          
      N = N+1                                                           
      DH = -DELTAS*COSAI1                                               
      IF(DH.LT.DHMIN) DH = DHMIN                                        
      H3 = H1+DH                                                        
      IF(H3.GT.Z2) H3 = Z2                                              
      DH = H3-H1                                                        
      R3 = RE+H3                                                        
      H2 = H1+DH/2.0                                                    
      R2 = RE+H2                                                        
      SINAI2 = CPATH/(ANDEX(H2,SH,GAMMA)*R2)                            
      SINAI3 = CPATH/(ANDEX(H3,SH,GAMMA)*R3)                            
      RATIO2 = R2/RADREF(H2,SH,GAMMA)                                   
      RATIO3 = R3/RADREF(H3,SH,GAMMA)                                   
      IF((1.0-SINAI2).GT.EPSILN)  GO TO 116                             
C*****NEAR A TANGENT HEIGHT, COSAI = -SQRT(1-SINAI**2) LOSES            
C*****PRECISION. USE THE FOLLOWING ALGORITHM TO GET COSAI.              
      Y3 = Y1+(SINAI1*(1.0-RATIO1)/R1+4.0*SINAI2*(1.0-RATIO2)/R2+       
     1    SINAI3*(1.0-RATIO3)/R3)*DH/6.0                                
      COSAI3 = -SQRT(2.0*Y3-Y3**2)                                      
      X3 = -R3*COSAI3                                                   
      DX = X3-X1                                                        
      W1 = 0.5*DX                                                       
      W2 = 0.0                                                          
      W3 = 0.5*DX                                                       
      GO TO 118                                                         
C*****                                                                  
  116 CONTINUE                                                          
      COSAI2 = -SQRT(1.0-SINAI2**2)                                     
      COSAI3 = -SQRT(1.0-SINAI3**2)                                     
      X2 = -R2*COSAI2                                                   
      X3 = -R3*COSAI3                                                   
C*****CALCULATE WEIGHTS                                                 
      D31 = X3-X1                                                       
      D32 = X3-X2                                                       
      D21 = X2-X1                                                       
      IF(D32.EQ.0.0 .OR. D21.EQ.0.0) GO TO 117                          
      W1 = (2-D32/D21)*D31/6.0                                          
      W2 = D31**3/(D32*D21*6.0)                                         
      W3 = (2.0-D21/D32)*D31/6.0                                        
      GO TO 118                                                         
  117 CONTINUE                                                          
      W1 = 0.5*D31                                                      
      W2 = 0.0                                                          
      W3 = 0.5*D31                                                      
C*****                                                                  
  118 CONTINUE                                                          
      DSDX2 = 1.0/(1.0-RATIO2*SINAI2**2)                                
      DSDX3 = 1.0/(1.0-RATIO3*SINAI3**2)                                
      DBNDX2 = DSDX2*SINAI2*RATIO2/R2                                   
      DBNDX3 = DSDX3*SINAI3*RATIO3/R3                                   
C*****INTEGRATE                                                         
      DS = W1*DSDX1+W2*DSDX2+W3*DSDX3                                   
      S = S+DS                                                          
      DBEND = W1*DBNDX1+W2*DBNDX2+W3*DBNDX3                             
      BEND = BEND+DBEND                                                 
      IF(IAMT.EQ.2)  GO TO 150                                          
C*****CALCULATE AMOUNTS                                                 
      DSDZ = DS/DH                                                      
      DHHP = DH/HP                                                      
      IF(DHHP .LE. BIGEXP) THEN                                         
           PB = PA*EXP(-DHHP )                                          
      ELSE                                                              
           PB = 0.                                                      
      ENDIF                                                             
      DHRH = DH/HRHO                                                    
      IF(DHRH .LE. BIGEXP) THEN                                         
           RHOB = RHOA*EXP(-DHRH   )                                    
      ELSE                                                              
           RHOB = 0.                                                    
      ENDIF                                                             
      IF((DH/HRHO).LT.EPSILN)  GO TO 120                                
      PPSUM(J) = PPSUM(J)+DSDZ*(HP/(1.0+HP/HRHO))*(PA*RHOA-PB*RHOB)     
      TPSUM(J) = TPSUM(J)+DSDZ*HP*(PA-PB)/GCAIR                         
      RHOPSM(J) = RHOPSM(J)+DSDZ*HRHO*(RHOA-RHOB)                       
      GO TO 125                                                         
  120 CONTINUE                                                          
      PPSUM(J) = PPSUM(J)+0.5*DS*(PA*RHOA+PB*RHOB)                      
      TPSUM(J) = TPSUM(J)+0.5*DS*(PA+PB)/GCAIR                          
      RHOPSM(J) = RHOPSM(J)+0.5*DS*(RHOA+RHOB)                          
  125 CONTINUE                                                          
      DO 140 K=1,KMAX                                                   
      IF(ABS(HDEN(K)).EQ.0.0)GO TO 130                                  
      IF((DH/HDEN(K)).LT.EPSILN) GO TO 130                              
C*****EXPONENTIAL INTERPOLATION                                         
      H3Z1 =  (H3-Z1)/HDEN(K)                                           
      IF(H3Z1 .LE.BIGEXP) THEN                                          
           DENB(K) = DENP(K,J)*EXP(- H3Z1 )                             
      ELSE                                                              
           DENB(K) = 0.                                                 
      ENDIF                                                             
      AMTP(K,J) = AMTP(K,J)+DSDZ*HDEN(K)*(DENA(K)-DENB(K))              
      GO TO 140                                                         
  130 CONTINUE                                                          
C*****LINEAR INTERPOLATION                                              
      DENB(K) = DENP(K,J)+(DENP(K,J+1)-DENP(K,J))*(H3-Z1)/DZ            
      AMTP(K,J) = AMTP(K,J)+0.5*(DENA(K)+DENB(K))*DS                    
  140 CONTINUE                                                          
      PA = PB                                                           
      RHOA = RHOB                                                       
      DO 145 K=1,KMAX                                                   
  145 DENA(K) = DENB(K)                                                 
  150 CONTINUE                                                          
      IF(H3.GE.Z2) GO TO 160                                            
      H1 = H3                                                           
      R1 = R3                                                           
      SINAI1 = SINAI3                                                   
      RATIO1 = RATIO3                                                   
      Y1=Y3                                                             
      COSAI1 = COSAI3                                                   
      X1 = X3                                                           
      DSDX1 = DSDX3                                                     
      DBNDX1 = DBNDX3                                                   
      GO TO 115                                                         
  160 CONTINUE                                                          
      SINAI = SINAI3                                                    
      COSAI = COSAI3                                                    
      SP(J) = S                                                         
      RETURN                                                            
      END                                                               
      SUBROUTINE LAYVSA(K,RH,AHAZE,IHA1,ZNEW)                           
C                                                                       
C     RETURNS HAZE FOR VSA OPTION                                       
C                                                                       
      COMMON /CNTRL/ KMAX,M,IKMAX,NL,ML,IKLO,ISSGEO,IMULT               
      COMMON/MODEL/    Z(34),PM(34),TM(34),RFNDX(34),DENSTY(63,34),     
     1 CLDAMT(34),RRAMT(34),EQLWC(34),HAZEC(34)                         
      COMMON /CARD1/ MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB  
     1  ,MODTRN                                                         
      LOGICAL MODTRN                                                    
      COMMON /CARD2/ IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,VIS,WSS,WHH,   
     1    RAINRT                                                        
       COMMON /MDATA/ ZZ(50),P(50),T(50),WH(50),WCO2(50),WO(50),        
     X WN2O(50),WCO(50),WCH4(50),WO2(50),                               
     X CLD(50,7),RR(50,7)                                               
      COMMON /MDATA1/ WNO(50),WSO2(50),WNO2(50),WNH3(50),WAIR(50)       
      COMMON /ZVSALY/ ZVSA(10),RHVSA(10),AHVSA(10),IHVSA(10)            
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1                                 
C                                                                       
      DIMENSION ZNEW(64)                                                
      RH=0.                                                             
      AHAZE=0                                                           
      IHA1=0                                                            
C     HMXVSA=ZVSA(9)                                                    
      IF(MODEL.EQ.0.OR.MODEL.EQ.7) RETURN                               
      IF(K.GT.9) RETURN                                                 
      Z(K)=ZVSA(K)                                                      
      RH=RHVSA(K)                                                       
      AHAZE=AHVSA(K)                                                    
      IHA1=IHVSA(K)                                                     
      RETURN                                                            
      END                                                               
      SUBROUTINE MAPMS(ML,IKMAX,ZM,AHT,IMAP)                            
C                                                                       
C     ZM MODEL ALTITUDES                                                
C     AHT LINE OF SIGHT ALTITUDES                                       
C                                                                       
C     MULTISCATERING SET UP LOOKING UP                                  
C     GROUND TO SPACE AT 0 DEG                                          
C                                                                       
      DIMENSION ZM(*),AHT(*),IMAP(*)                                    
      DO 20 J=1,IKMAX                                                   
      DO 10 I=1,ML                                                      
      IF(ZM(I).GT.AHT(J)) GO TO 20                                      
      IMAP(J)=I                                                         
10    CONTINUE                                                          
20    CONTINUE                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE MARINE(VIS,MODEL,WS,WH,ICSTL,BEXT,BABS,NL)             
C                                                                       
C        THIS SUBROUTINE DETERMINES AEROSOL EXT + ABS COEFFICIENTS      
C          FOR THE NAVY MARITIME MODEL                                  
C            CODED BY STU GATHMAN                  -  NRL               
C                                                                       
C        INPUTS-                                                        
C        WSS = CURRENT WIND SPEED (M/S)                                 
C        WHH = 24 HOUR AVERAGE WIND SPEED (M/S)                         
C        RHH = RELATIVE HUMIDITY (PERCENTAGE)                           
C        VIS = METEOROLOGICAL RANGE (KM)                                
C        ICTL = AIR MASS CHARACTER  1 = OPEN OCEAN                      
C                      10 = STRONG CONTINENTAL INFLUENCE                
C        MODEL = MODEL ATMOSPHERE                                       
C                                                                       
C        OUTPUTS-                                                       
C        BEXT = EXTINCTION COEFFICIENT (KM-1)                           
C        BABS = ABSORPTION COEFFICIENT (KM-1)                           
C                                                                       
      COMMON /MART/ RHH                                                 
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1                                 
      COMMON /CNSTNS/ PI,CA,DEG,GCAIR,BIGNUM,BIGEXP                     
      COMMON/A/T1QEXT(40,4),T2QEXT(40,4),T3QEXT(40,4),                  
     1T1QABS(40,4),T2QABS(40,4),T3QABS(40,4),ALAM(40),AREL(4)           
CC    COMMON/AER/A1, A2, A3        X(5)                                 
      DIMENSION WSPD(8), BEXT(5,47), BABS(5,47)                         
      DIMENSION RHD(8)                                                  
      DATA WSPD/6.9, 4.1, 4.1, 10.29, 6.69, 12.35, 7.2, 6.9/            
      DATA RHD/80., 75.63, 76.2, 77.13, 75.24, 80.53, 45.89, 80./       
      PISC = PI/1000.0                                                  
      WRITE(IPR,890)                                                    
C                                                                       
C     CHECK LIMITS OF MODEL VALIDITY                                    
C                                                                       
      RH = RHH                                                          
      IF(RHH.GT.0.) GO TO 10                                            
      RH=RHD(MODEL+1)                                                   
10    IF(WS.GT.20.0) WS=20.                                             
      IF(WH.GT.20.0) WH = 20.                                           
      IF(RH.GT.98.0) RH = 98.                                           
      IF(RH.LT.50.0.AND.RH.GE.0.0) RH = 50.                             
      IF(ICSTL.LT.1.OR.ICSTL.GT.10) ICSTL = 3                           
C                                                                       
C     FIND SIZE DISTRIBUTION PARAMETERS FROM METEOROLOGY INPUT          
C                                                                       
      IF(WH.LE.0.) WRITE(IPR,920)                                       
      IF(WH .LE. 0.0) WH = WSPD(MODEL + 1)                              
      IF(WS.LE.0.) WRITE(IPR,930)                                       
      IF(WS.LE.0.0)WS=WH                                                
      WRITE(IPR,910)WS,WH,RH,ICSTL                                      
C                                                                       
C        F IS A RELATIVE HUMIDITY DEPENDENT GROWTH CORRECTION           
C        TO THE ATTENUATION COEFFICIENT.                                
C                                                                       
      F=((2.-RH/100.)/(6.*(1.-RH/100.)))**0.33333                       
      A1=2000.0*ICSTL*ICSTL                                             
      A2 = AMAX1(5.866*(WH-2.2), 0.5)                                   
CCC   A3 = AMAX1(0.01527*(WS-2.2), 1.14E-5)                             
      A3 = 10**(0.06*WS-2.8)                                            
C                                                                       
C     FIND EXTINCTION AT 0.55 MICRONS AND NORMALIZE TO 1.               
C                                                                       
C     INTERPOLATE FOR RELATIVE HUMIDITY                                 
C                                                                       
      DO 40   J=2,4                                                     
      IF(RH.LE.AREL(J)) GO TO 42                                        
 40   CONTINUE                                                          
 42   DELRH=AREL(J)-AREL(J-1)                                           
      DELRHV=RH-AREL(J-1)                                               
      RATIO=DELRHV/DELRH                                                
      QE1=T1QEXT(4,J-1)+(T1QEXT(4,J)-T1QEXT(4,J-1))*RATIO               
      QE2=T2QEXT(4,J-1)+(T2QEXT(4,J)-T2QEXT(4,J-1))*RATIO               
      QE3=T3QEXT(4,J-1)+(T3QEXT(4,J)-T3QEXT(4,J-1))*RATIO               
      TOTAL = A1*10.**QE1 + A2*10.**QE2 + A3*10.**QE3                   
      EXT55=PISC*TOTAL/F                                                
C                                                                       
C     IF METEOROLOLICAL RANGE NOT SPECIFIED,FIND FROM METEOR DATA       
C                                                                       
      IF(VIS.LE.0.) VIS=3.912/(EXT55+0.01159)                           
      C=(1./EXT55)*(PISC/F)                                             
      A1=C*A1                                                           
      A2=C*A2                                                           
      A3=C*A3                                                           
C                                                                       
C     CALCULATE NORMALIZED ATTENUATION COEFICIENTS                      
C                                                                       
      DO 45   I=1,40                                                    
      T1XV = T1QEXT(I,J-1) + (T1QEXT(I,J) - T1QEXT(I,J-1))*RATIO        
      T2XV = T2QEXT(I,J-1) + (T2QEXT(I,J) - T2QEXT(I,J-1))*RATIO        
      T3XV = T3QEXT(I,J-1) + (T3QEXT(I,J) - T3QEXT(I,J-1))*RATIO        
      T1AV = T1QABS(I,J-1) + (T1QABS(I,J) - T1QABS(I,J-1))*RATIO        
      T2AV = T2QABS(I,J-1) + (T2QABS(I,J) - T2QABS(I,J-1))*RATIO        
      T3AV = T3QABS(I,J-1) + (T3QABS(I,J) - T3QABS(I,J-1))*RATIO        
      BEXT(NL,I)=A1*10**(T1XV)+A2*10**(T2XV)+A3*10**(T3XV)              
      BABS(NL,I)=A1*10**(T1AV)+A2*10**(T2AV)+A3*10**(T3AV)              
 45   CONTINUE                                                          
      WRITE(IPR,900) VIS                                                
      RETURN                                                            
890   FORMAT('0MARINE AEROSOL MODEL USED')                              
900   FORMAT('0',T10,'VIS = ',F10.2,' KM')                              
910   FORMAT(T10,'WIND SPEED = ',F8.2,' M/SEC',/,T10,                   
     1 'WIND SPEED (24 HR AVERAGE) = ',F8.2,' M/SEC',/,                 
     2 T10,'RELATIVE HUMIDITY = ',F8.2,' PERCENT',/,                    
     3 T10,'AIRMASS CHARACTER =' ,I3)                                   
920   FORMAT('0  WS NOT SPECIFIED, A DEFAULT VALUE IS USED')            
930   FORMAT('0  WH NOT SPECIFIED, A DEFAULT VALUE IS USED')            
      END                                                               
      SUBROUTINE MSRAD(IV,V,ISOURC,IDAY,ANGLEM,SS,                      
     2     DMF,DMFS,UMF,UMFS)                                           
C                                                                       
C         (1) SETS UP OPTICAL PROPERTIES PROFILES FOR VERTICAL          
C             PATH                                                      
C         (2) CALLS FLXADD WHICH RETURNS MS SOURCE FUNCTION, J,         
C             FOR PATH                                                  
C         (3) EVALUATES PATH INTEGRAL OF SOURCE FUNCTION, I.E.          
C             MS RADIANCE CONTRIBUTION                                  
C                                                                       
C                                 A.E.R. 1986                           
C                                                                       
      COMMON /CARD1/ MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB  
     1  ,MODTRN                                                         
      LOGICAL MODTRN                                                    
      COMMON /CARD2/ IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,VIS,WSS,WHH,   
     1    RAINRT                                                        
      COMMON /CNTRL/ KMAX,M,IKMAX,NL,ML,IKLO,ISSGEO,IMULT               
Crea0892      COMMON RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63)    
C     COMMON             WPATH(68, 63),TBBY(68)                         
Crea0892 COMMON IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12)
Crea0892      COMMON ABSC(5,47),EXTC(5,47),ASYC(5,47),VX2(47),AWCCON(5) 
      COMMON /UNLABEL/ RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63), 
     +        IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12), 
     +        ABSC(5,47),EXTC(5,47),ASYC(5,47),VX2(47),AWCCON(5)        
      COMMON /AER/ XX1,XX2,XX3,XX4,XX5,                                 
     X YY1,YY2,YY3,YY4,YY5,ZZ1,ZZ2,ZZ3,ZZ4,ZZ5                          
      COMMON /SOLS/ AH1(68),ARH(68),                                    
C    X   WPATHS(68,63),PA(68),PR(68),ATHETA(35),ADBETA(35),LJ(69),JTURN,
C    X ANGSUN,CSZEN(68)                                                 
     1  WPATHS(102,63),PA(68),PR(68),ATHETA(35),ADBETA(35),LJ(69),      
     2  JTURN,ANGSUN,CSZEN(68),TBBYS(102,12),PATMS(102,12)              
C                                                                       
C     COMMON /TRAN/ABB(19),                                             
C    1                     BTOP(50),BMID(34),TMD(34),TMOLS(34),         
C    2 TAERS(34),TCONT(34),DCONT(68)                                    
C     COMMON /MNLT/TBBSS(68),TBBMS(34),WPMS(34,63),IMSMX,WPMSS(34,63)   
      COMMON /TRAN/BTOP(50),TMOLS(34),TAERS(34),TCONT(34),DCONT(68)     
Crea1193COMMON/MSRD/TLE(34),COSBAR(34),OMEGA0(68),UPF(10,34),DNF(10,34),
      COMMON /MSRD/TLE(35),COSBAR(34),OMEGA0(68),UPF(10,34),DNF(10,34), 
     1 TAER(50),                                             DTX7(68),  
     2 DAERS(68),ASYIK(68),ASYDM(68),                                   
     3 STRN(0:34),DMOLS(68), DSTRN(0:68),FDNSRF    ,FDNSRT,IKMX,        
     4               FDNTRF    ,FDNTRT                                  
     5  ,TAUT(34)                                                       
      COMMON/CNSTNS/PI,CA,DEG,GCAIR,BIGNUM,BIGEXP                       
      DIMENSION         DMF(34),DMFS(34),UMF(34),UMFS(34)               
C                                                                       
      IKMAX = IKMAX + 1                                                 
      IKM=IKMAX-1                                                       
C                                                                       
C  FOR H1 < H2, CALCULATE DOWNWARD RADIANCE                             
C                                                                       
C                                                                       
      DO 222 IK=IKLO,IKM-1                                              
C                                                                       
C  AEROSOL PATH FOR EACH LAYER (NOT CUMULATIVE)                         
C                                                                       
C                                                                       
C  SOLAR TRANSMITTANCE FROM TOP OF ATMOSPHERE                           
C                                                                       
      STRN(IK-1)=DSTRN(IKMAX-IK)                                        
      IF(IHAZE .GT. 0) THEN                                             
C                                                                       
C  CALCULATE AEROSOL ASYMMETRY FACTOR FOR GIVEN LAYER                   
C                                                                       
      DENOM  =  ASYDM(IK)                                               
      IF(DENOM .LE. 0.) THEN                                            
      COSBAR(IKM-IK) = 0.                                               
      ELSE                                                              
      COSBAR(IKM-IK)= ASYIK(IK)/DENOM                                   
      ENDIF                                                             
      ENDIF                                                             
C                                                                       
C         CONVERT TAUT FROM CUMULATIVE TRANSMITTANCE TO LAYER OPTICAL   
C         DEPTH                                                         
C                                                                       
          IF(TAUT(IK).GT.0.AND.TAUT(IK+1).GT.0.)THEN                    
              TAUT(IK)=-LOG(TAUT(IK)/TAUT(IK+1))                        
          ELSE                                                          
              TAUT(IK)=BIGEXP                                           
          ENDIF                                                         
      IF(TAUT(IK) .LT. 0.)TAUT(IK) = 0.                                 
C                                                                       
C  TAER,TAERS, AND TMOLS ARE TOTAL AEROSOL, AEROSOL SCATTERING, AND     
C  MOLECULAR SCATTERING OPTICAL THICKNESS FOR GIVEN LAYER               
C                                                                       
      TAER(IKM-IK)=DTX7(IK+1)-DTX7(IK)                                  
      TAERS(IKM-IK)=DAERS(IK+1)-DAERS(IK)                               
      TMOLS(IKM-IK)=DMOLS(IK+1)-DMOLS(IK)                               
      IKMIK = IKM - IK                                                  
      IF( TAER(IKMIK) .LT. 0.0)  TAER(IKMIK)=0.0                        
      IF(TAERS(IKMIK) .LT. 0.0) TAERS(IKMIK)=0.0                        
      IF(TMOLS(IKMIK) .LT. 0.0) TMOLS(IKMIK)=0.0                        
C                                                                       
C  WEIGHT ASYMMETRY FACTOR                                              
C                                                                       
      IF(TAERS(IKM-IK) .LE.0.) THEN                                     
            COSBAR(IKM-IK) = 0.                                         
      ELSE                                                              
      COSBAR(IKM-IK)=COSBAR(IKM-IK)*TAERS(IKM-IK)/(TAERS(IKM-IK)+       
     1 TMOLS(IKM-IK))                                                   
      ENDIF                                                             
C                                                                       
C  TCONT IS MOLECULAR CONTINUUM OPTICAL THICKNESS FOR GIVEN LAYER       
C                                                                       
      TCONT(IKM-IK)=DCONT(IK+1)-DCONT(IK)                               
222   CONTINUE                                                          
      IF(IHAZE .GT. 0) THEN                                             
C                                                                       
C  CALCULATE ASYMMETRY FACTOR FOR BOTTOM OF ATMOSPHERE                  
C                                                                       
      DENOM =  ASYDM(1)                                                 
      IF(DENOM .LE. 0.)  THEN                                           
            COSBAR(IKM) = 0.                                            
      ELSE                                                              
      COSBAR(IKM)= ASYIK(IK)/DENOM                                      
      ENDIF                                                             
      ENDIF                                                             
      STRN(IKM-1)=DSTRN(IKMAX-IKM)                                      
      STRN(IKM)=DSTRN(0)                                                
      TAER(IKM)=DTX7(1)                                                 
      TAERS(IKM)=DAERS(1)                                               
      TMOLS(IKM)=DMOLS(1)                                               
      IF(TAUT(IKM).GT.0.)THEN                                           
          TAUT(IKM)=-LOG(TAUT(IKM))                                     
      ELSE                                                              
          TAUT(IKM)=BIGEXP                                              
      ENDIF                                                             
      IF(TAUT(IKM) .LT. 0.)TAUT(IKM) = 0.                               
C                                                                       
C   WEIGHT ASYMMETRY FACTOR                                             
C                                                                       
      IF(TAERS(IKM) .LE.0.) THEN                                        
            COSBAR(IKM) = 0.                                            
      ELSE                                                              
      COSBAR(IKM)=COSBAR(IKM)*TAERS(IKM)/(TAERS(IKM)+TMOLS(IKM))        
      ENDIF                                                             
      TCONT(IKM)=DCONT(1)                                               
C                                                                       
C   FOR H1 > H2, CALCULATE UPWARD RADIANCE                              
C                                                                       
C                                                                       
C   CALCULATE SOLAR INTENSITY AT TOP OF ATMOSPHERE                      
C                                                                       
      S0 = 0.                                                           
      IF(IEMSCT .EQ. 2) CALL SOURCE(V,ISOURC,IDAY,ANGLEM,S0)            
C                                                                       
C                                                                       
C   CALL FLUX ADDING SUBROUTINE                                         
C                                                                       
      IF(MODTRN)THEN                                                    
          CALL BMFLUX(TLE,COSBAR,TAER,TAUT,OMEGA0,UPF,DNF,IV,IKMAX,     
     1      CSZEN,S0,STRN,FDNSRT,FDNTRT,DMF,DMFS,UMF,UMFS)              
      ELSE                                                              
      CALL FLXADD (TLE,COSBAR,TAER,OMEGA0,UPF,DNF,IV,     IKMAX,        
     2 CSZEN,S0,STRN,            FDNSRT,FDNTRT,                         
     3     DMF,DMFS,UMF,UMFS)                                           
      ENDIF                                                             
      RETURN                                                            
      END                                                               
      SUBROUTINE O2CONT(V,SIGMA,ALPHA,BETA)                             
C                                                                       
C     THIS ROUTINE IS DRIVEN BY FREQUENCY, RETURNING ONLY THE           
C     O2 COEFFICIENTS, INDEPENDENT OF TEMPERATURE.                      
C                                                                       
C  *******************************************************************  
C  *  THESE COMMENTS APPLY TO THE COLUME ARRAYS FOR:                 *  
C  *       PBAR*UBAR(O2)                                             *  
C  *       PBAR*UBAR(O2)*DT                                          *  
C  *   AND PBAR*UBAR(O2)*DT*DT    WHERE:  DT=TBAR-220.               *  
C  *  THAT HAVE BEEN COMPILED IN OTHER PARTS OF THE LOWTRAN CODE     *  
C  *                                                                 *  
C  *  LOWTRAN7 COMPATIBLE:                                           *  
C  *  O2 CONTINUUM SUBROUTINE FOR 1395-1760CM-1                      *  
C  *  MODIFIED BY G.P. ANDERSON, APRIL '88                           *  
C  *                                                                 *  
C  *  THE EXPONENTIAL TEMPERATURE EMPLOYED IN THE FASCOD2 ALGORITHM  *  
C  *  (SEE BELOW) IS NOT READILY SUITABLE FOR LOWTRAN.  THEREFORE    *  
C  *  THE EXPONENTIALS HAVE BEEN LINEARLY EXPANDED, KEEPING ONLY THE *  
C  *  LINEAR AND QUADRATIC TERMS:                                    *  
C  *                                                                 *  
C  *  EXP(A*DT)=1.+ A*DT + (A*DT)**2/2. + ....                       *  
C  *                                                                 *  
C  *     EXP(B*DT*DT)=1.+ B*DT*DT + (B*DT*DT)**2/2. + ....           *  
C  *                                                                 *  
C  *  THE PRODUCT OF THE TWO TERMS IS:                               *  
C  *                                                                 *  
C  *     (1. + A*DT + (A*A/2. + B)*DT*DT )                           *  
C  *                                                                 *  
C  *  THIS EXPANSION ONLY WORKS WELL FOR SMALL VALUES OF X IN EXP(X) *  
C  *                                                                 *  
C  *  SINCE DT = T-220., THE APPROXIMATION IS VERY GOOD UNTIL        *  
C  *  T.GT.260. OR DT.GT.40.   AT T=280, THE MAXIMUM ERRORS ARE STILL*  
C  *  LESS THAN 10% BUT AT T=300, THOSE ERRORS ARE AS LARGE AS 20%   *  
C  *******************************************************************  
C                                                                       
C     THE FOLLOWING COMMENTS ARE EXCERPTED DIRECTLY FROM FASCOD2        
C                                                                       
C      THIS SUBROUTINE CONTAINS THE ROGERS AND WALSHAW                  
C      EQUIVALENT COEFFICIENTS DERIVED FROM THE THEORETICAL             
C      VALUES SUPPLIED BY ROLAND DRAYSON. THESE VALUES USE              
C      THE SAME DATA AS TIMOFEYEV AND AGREE WITH TIMOFEYEV'S RESULTS.   
C      THE DATA ARE IN THE FORM OF STRENGTHS(O2SO) AND TWO              
C      COEFFICIENTS (O2A & O2B),  WHICH ARE USED TO CORRECT FOR         
C      TEMPERATURE. THE DEPENDENCY ON PRESSURE SQUARED                  
C      IS CONTAINED IN THE P*WO2 PART OF THE CONSTANT.                  
C      NOTE THAT SINCE THE COEFFICIENTS ARE FOR AIR, THE                
C      THE STRENGTHS ARE DIVIDED BY THE O2 MIXING RATIO FOR             
C      DRY AIR OF 0.20946 (THIS IS ASSUMED CONSTANT).                   
C      ORIGINAL FORMULATION OF THE COEFFICIENTS WAS BY LARRY GORDLEY.   
C      THIS VERSION WRITTEN BY EARL THOMPSON, JULY 1984.                
C                                                                       
C                                                                       
      COMMON/O2C/ O2DRAY(74),O2C001(74),O2S0(74),O2A(74),O2B(74),       
     X V1O2,V2O2,DVO2,NPTO2                                             
      SIGMA =0                                                          
      ALPHA =0                                                          
      BETA  =0                                                          
      IF(V .LT. 1395) GO TO 30                                          
      IF(V .GT. 1760) GO TO 30                                          
C                                                                       
C                                                                       
      CALL O2INT(V,V1O2,DVO2,NPTO2,C,O2S0,A,O2A,B,O2B)                  
C                                                                       
C                                                                       
C                                                                       
C     OLD 'FASCOD2' TEMPERATURE DEPENDENCE USING BLOCK DATA ARRAYS      
C                                                                       
C     C(J)=O2S0(I)* EXP(O2A(I)*TD+O2B(I)*TD*TD) /(0.20946*VJ)           
C                                                                       
C     NEW COEFFICIENT DEFINITIONS FOR LOWTRAN FORMULATION               
C                                                                       
      ALPHA= A                                                          
      BETA=A**2/2.+B                                                    
      SIGMA=C/0.20946                                                   
C                                                                       
C     NEW 'LOWTRAN7' TEMPERATURE DEPENDENCE                             
C                                                                       
C     THIS WOULD BE THE CODING FOR THE LOWTRAN7 FORMULATION, BUT        
C       BECAUSE THE T-DEPENDENCE IS INCLUDED IN THE AMOUNTS, ONLY       
C       THE COEFFICIENTS (SIGMA, ALPHA & BETA) ARE BEING RETURNED       
C                                                                       
C     C(J)=SIGMA*(1.+ALPHA*TD+BETA*TD*TD)                               
C                                                                       
30    RETURN                                                            
      END                                                               
      SUBROUTINE O2INT(V1C,V1,DV,NPT,C,CARRAY,A,AARRAY,B,BARRAY)        
C                                                                       
C     INTERPOLATION FOR O2 PRESSURE INDUCED CONTINUUM, NECESSARY FOR    
C          LOWTRAN7 FORMULATION  (MODELED AFTER THE LOWTRAN UV-O3 BANDS)
C                                                                       
      DIMENSION CARRAY(74),AARRAY(74),BARRAY(74)                        
      C=0.                                                              
      A=0.                                                              
      B=0.                                                              
      I=(V1C-V1)/DV+1.00001                                             
      IF(I.LT.1  )GO TO 10                                              
      IF(I.GT.NPT)GO TO 10                                              
      C=CARRAY(I)                                                       
      A=AARRAY(I)                                                       
      B=BARRAY(I)                                                       
10    CONTINUE                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE O3HHT0(V,C)                                            
      COMMON /O3HH0/ V1S,V2S,DVS,NPTS,S(2687)                           
C                                                                       
      CALL O3INT(V ,V1S,DVS,NPTS,S,C)                                   
      RETURN                                                            
      END                                                               
      SUBROUTINE O3HHT1(V,C)                                            
C     SUBROUTINE O3HHT1(V1C,V2C,DVC,NPTC,C)                             
      COMMON /O3HH1/ V1S,V2S,DVS,NPTS,S(2690)                           
C                                                                       
      CALL O3INT(V ,V1S,DVS,NPTS,S,C)                                   
C                                                                       
      RETURN                                                            
      END                                                               
      SUBROUTINE O3HHT2(V,C)                                            
      COMMON /O3HH2/ V1S,V2S,DVS,NPTS,S(2690)                           
C                                                                       
      CALL O3INT(V ,V1S,DVS,NPTS,S,C)                                   
C                                                                       
      RETURN                                                            
      END                                                               
      SUBROUTINE O3INT(V1C,V1,DV,NPT,CONTI,CONTO)                       
C                                                                       
C     INTERPOLATION  FOR  O3 CONTINUUM WITH LOWTRAN                     
C                                                                       
      DIMENSION CONTI(2687)                                             
      CONTO=0.                                                          
      I=(V1C-V1)/DV+1.00001                                             
      IF(I.LT.1  )GO TO 10                                              
      IF(I.GT.NPT)GO TO 10                                              
      CONTO=CONTI(I)                                                    
10    CONTINUE                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE O3UV(V,C)                                              
      COMMON /O3UVF/ V1 ,V2 ,DV ,NPT ,S(133)                            
C                                                                       
C     INTERPOLATION  FOR  O3 CONTINUUM WITH LOWTRAN                     
C                                                                       
      C    =0.                                                          
      I=(V  -V1)/DV+1.00001                                             
      IF(I.LT.1   )GO TO 10                                             
      IF(I.GT.NPT )GO TO 10                                             
      VR = I*DV + V1                                                    
      IF(VR. LE. (V+.1) .AND .VR.GE. (V-.1)) GO TO 5                    
      IF(I .EQ. NPT ) I=NPT-1                                           
      AM = (S(I+1) -S(I))/DV                                            
      C0 = S(I) - AM * VR                                               
      C  = AM * V + C0                                                  
      GO TO 10                                                          
5     C    =    S(I)                                                    
10    CONTINUE                                                          
C                                                                       
      RETURN                                                            
      END                                                               
      FUNCTION   PF(NN,I,J)                                             
C     CALL THE APPROPRIATE PHASE FUNCTION                               
      COMMON/MNMPHS/ MNUM(27,26),PHSFNC(34,70)                          
      M=MNUM(I,NN)                                                      
      PF=PHSFNC(J,M)                                                    
      RETURN                                                            
      END                                                               
      SUBROUTINE PHASEF(V,IK,ALT,SANGLE,RH,PHFA)                        
C                                                                       
C     RETURNS THE AEROSOL PHASE FUNCTION FROM THE STORED DATA BASE      
C                                                                       
C                                                                       
C     THE TRUTH TABLE MNUM(27,26) STORED IN COMMON/MNMPHS/              
C     IN SUBROUTINE PHSDTA IS QUERIED TO DETERMINE THE PROPER PHASE     
C     FUNCTION NEEDED.                                                  
C     THE 27 POSITIONS REPRESENT THE 27 SPECIFIC FREQUENCIES SHOWN IN   
C     DATA STATEMENT WAVE  .2-40 MICRONS.                               
C     THE NUMBERS STORED IN THESE 27 POSITIONS REPRESENT THE CORRECT    
C     PHASE FUNCTIONS CHOSEN FROM THE DATA STATEMENT PHSFNC'S 1-70      
C     POSSIBLE CHOICES.                                                 
C     THE 26 DATA STATEMENTS EACH HAVING 27 FREQUENCIES REPRESENT THE   
C     FOLLOWING 26 MODELS;                                              
C      1=RURAL     0%RH   2=RURAL    70%RH   3=RURAL    80%RH           
C      4=RURAL    99%RH   5=MARITIME  0%RH   6=MARITIME 70%RH           
C      7=MARITIME 80%RH   8=MARITIME 99%RH   9=URBAN     0%RH           
C     10=URBAN    70%RH  11=URBAN    80%RH  12=URBAN    99%RH           
C     13=OCEANIC   0%RH  14=OCEANIC  70%RH  15=OCEANIC  80%RH           
C     16=OCEANIC  99%RH  17=TROPOSPH  0%RH  18=TROPOSPH 70%RH           
C     19=TROPOSPH 80%RH  20=TROPOSPH 99%RH  21=STRATOSPHERIC            
C     22=AGED VOLCANIC   23=FRESH VOLCANIC  24=RADIATION FOG            
C     25=ADVECTIVE FOG   26=METEORIC DUST                               
C                                                                       
C                                                                       
C     IN THE PRESENT VERSION THE 4 OCEANIC MODELS 13-16                 
C     ARE NOT UTILIZED.                                                 
C                                                                       
      COMMON /IFIL/ IRD,IPR,IPU,NPR,IPR1                                
      COMMON /CNSTNS/ PI,CA,DEG,GCAIR,BIGNUM,BIGEXP                     
      COMMON /CARD1/ MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB  
     1  ,MODTRN                                                         
      LOGICAL MODTRN                                                    
      COMMON /CARD2/ IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,VIS,WSS,WHH,   
     1    RAINRT                                                        
      COMMON /CARD2D/ IREG(4),ALTB(4),IREGC(4)                          
      COMMON/MNMPHS/ MNUM(27,26),PHSFNC(34,70)                          
      COMMON /MODEL/ ZM(34),PM(34),TM(34),RFNDX(34),DENSTY(63,34),      
     1 CLDAMT(34),RRAMT(34),EQLWC(34),HAZEC(34)                         
      COMMON /AER/ XX1,XX2,XX3,XX4,XX5,                                 
     X YY1,YY2,YY3,YY4,YY5,ZZ1,ZZ2,ZZ3,ZZ4,ZZ5                          
      DIMENSION RHPTS(4),WAVE(27),ANG(34)                               
      DATA ANG /0.,2.,4.,6.,8.,10.,12.,16.,20.,24.,28.,32.,36.,40.      
     1,50.,60.,70.,80.,90.,100.,110.,120.,125.,130.,135.,140.,145.      
     2,150.,155.,160.,165.,170.,175.,180./                              
      DATA WAVE /.2,.3,.55,.6943,1.06,1.536,2.0,2.5,2.7,3.,3.2,3.39     
     1,5.,6.,7.2,7.9,8.7,9.2,10.0,10.59,12.5,15.0,17.2,18.5,21.3,30.    
     2,40.0/                                                            
      DATA RHPTS /0.0,70.0,80.0,99.0/                                   
C                                                                       
      PHFA=0.0                                                          
      ALAM=1.0E4/V                                                      
      IF(V .LT. 1.0E-5) ALAM = 1.0E+9                                   
      IF(SANGLE.LT.0.0.OR.SANGLE.GT.180.0) GO TO 900                    
      IF((ALAM-WAVE(1)).LT. -1.0E-6) GO TO 910                          
      IF(ALAM.GT.WAVE(27)) THEN                                         
           COSANG=COS(CA*SANGLE)                                        
           CALL HENGNS(ZZ1,COSANG,PHFA)                                 
           RETURN                                                       
      ENDIF                                                             
C     DETERMINE THE AEROSOL MODEL NUMBER                                
      IF(ALT.GT.ALTB(1)) GO TO 95                                       
C                                                                       
C                                                                       
C                                                                       
      IF(IHAZE .EQ. 0) GO TO 400                                        
      IF(IHAZE .EQ.10) THEN                                             
           COSANG=COS(CA*SANGLE)                                        
           CALL HENGNS(ZZ1,COSANG,PHFA)                                 
           RETURN                                                       
      ENDIF                                                             
C                                                                       
C     CHECK IF CLOUD,RAIN OR DESERT MODEL IS REQUESTED                  
C                                                                       
       IF(ICLD .GT. 0.  OR. IHAZE .EQ. 7 )  THEN                        
           COSANG=COS(CA*SANGLE)                                        
C                                                                       
           CALL HENGNS(ZZ1,COSANG,PHFA)                                 
              RETURN                                                    
        ENDIF                                                           
      IF(IHAZE.GE.8) GO TO 90                                           
C                                                                       
C     0-2KM BOUNDARY LAYER MODELS, RH DEPENDENT                         
      DO 50 I1=1,4                                                      
      I=I1                                                              
      IF(RHPTS(I).EQ.RH) GO TO 70                                       
      IF(RHPTS(I).GT.RH) GO TO 60                                       
50    CONTINUE                                                          
60    IRHLO=I-1                                                         
      IRHHI=I                                                           
      GO TO 80                                                          
70    IRHLO=I                                                           
      IRHHI=I                                                           
80    CONTINUE                                                          
C     RURAL MODEL                                                       
      IF(IHAZE.EQ.1.OR.IHAZE.EQ.2) NN0=0                                
C     MARITIME MODEL                                                    
      IF(IHAZE.EQ.3.OR.IHAZE.EQ.4) NN0=4                                
C     URBAN MODEL                                                       
      IF(IHAZE.EQ.5) NN0=8                                              
C     TROPOSPHERIC MODEL                                                
      IF(IHAZE.EQ.6) NN0=16                                             
      NN=NN0+IRHLO                                                      
      GO TO 130                                                         
C     0-2KM FOG MODELS, NO RH DEPENDENCE                                
90    IF(IHAZE.EQ.8) NN=24                                              
      IF(IHAZE.EQ.9) NN=25                                              
      GO TO 130                                                         
95    IF(ALT.GT.ALTB(2)) GO TO 110                                      
C     2-10KM TROPOSPHERIC MODEL                                         
       IF(ICLD .GT. 0.  OR. IHAZE .EQ. 7 )  THEN                        
           COSANG=COS(CA*SANGLE)                                        
C                                                                       
           CALL HENGNS(ZZ2,COSANG,PHFA)                                 
              RETURN                                                    
        ENDIF                                                           
      NN=18                                                             
      GO TO 130                                                         
110   IF(ALT.GT.ALTB(3)) GO TO 120                                      
C     10-30KM STRATOSPHERIC MODELS                                      
C     BACKGROUND MODEL                                                  
      IF(IVULCN.EQ.0.OR.IVULCN.EQ.1) NN=21                              
C     AGED VOLCANIC MODEL                                               
      IF(IVULCN.EQ.2.OR.IVULCN.EQ.4) NN=22                              
C     FRESH VOLCANIC                                                    
      IF(IVULCN.EQ.3.OR.IVULCN.EQ.5 .OR.IVULCN.EQ.8) NN=23              
C     BACKGROUND STRATO                                                 
      IF(IVULCN.EQ.6.OR.IVULCN.EQ.7) NN=21                              
      GO TO 130                                                         
C     30-100KM METEORIC MODEL                                           
120   NN=26                                                             
130   IRH=0                                                             
C                                                                       
C     DETERMINE THE BOUNDING ANGLE INDICES                              
140   DO 210 I1=1,34                                                    
      I=I1                                                              
      IF(ANG(I).EQ.SANGLE) GO TO 230                                    
      IF(ANG(I).GT.SANGLE) GO TO 220                                    
210   CONTINUE                                                          
220   IANG1=I-1                                                         
      IANG2=I                                                           
      GO TO 240                                                         
230   IANG1=I                                                           
      IANG2=I                                                           
240   CONTINUE                                                          
C                                                                       
C     DETERMINE THE BOUNDING WAVELENGTH INDICES                         
      DO 250 I1=1,27                                                    
      I=I1                                                              
      IF(WAVE(I).EQ.ALAM) GO TO 270                                     
      IF(WAVE(I).GT.ALAM) GO TO 260                                     
250   CONTINUE                                                          
260   IWAV1=I-1                                                         
      IWAV2=I                                                           
      GO TO 280                                                         
270   IWAV1=I                                                           
      IWAV2=I                                                           
280   CONTINUE                                                          
C                                                                       
C     FUNCTION PF CHOOSES DESIRED PHASE FUNCTION FROM LOOK UP TABLE     
C     MNUM(IWAV,NN)  WHERE IWAV IS FREQ. AND NN IS MODEL NO.            
C                                                                       
C     WAVELENGTH INTERPOLATION ONLY USES PF11 AND PF21                  
C     ANGLE INTERPOLATION ONLY USES PF11 AND PF12                       
C     WAVELENGTH AND ANGLE INTERPOLATION USES PF11,PF21 AND PF12,PF22.  
C                                                                       
      PF11=PF(NN,IWAV1,IANG1)                                           
      PF21=PF(NN,IWAV2,IANG1)                                           
      PF12=PF(NN,IWAV1,IANG2)                                           
      PF22=PF(NN,IWAV2,IANG2)                                           
C     INTERPOLATE IN WAVELENGTH THEN ANGLE                              
      IF(IWAV1.EQ.IWAV2) GO TO 310                                      
      IF(IANG1.EQ.IANG2) GO TO 290                                      
C     BOTH INTERPOLATIONS ARE NECESSARY                                 
      CALL INTERP(2,ALAM,WAVE(IWAV1),WAVE(IWAV2),YANG1,                 
     1PF11,PF21)                                                        
      CALL INTERP(2,ALAM,WAVE(IWAV1),WAVE(IWAV2),YANG2,                 
     1PF12,PF22)                                                        
      CALL INTERP(2,SANGLE,ANG(IANG1),ANG(IANG2),Y,YANG1,YANG2)         
      GO TO 330                                                         
C     ONLY WAVELENGTH INTERPOLATION IS NECESSARY                        
290   CALL INTERP(2,ALAM,WAVE(IWAV1),WAVE(IWAV2),Y,PF11,                
     1PF21)                                                             
      GO TO 330                                                         
310   IF(IANG1.EQ.IANG2) GO TO 320                                      
C     ONLY ANGLE INTERPOLATION IS NECESSARY                             
      CALL INTERP(2,SANGLE,ANG(IANG1),ANG(IANG2),Y,PF11,                
     1PF12)                                                             
      GO TO 330                                                         
C     NO INTERPOLATION IS NECESSARY                                     
320   Y=PF(NN,IWAV1,IANG1)                                              
330   CONTINUE                                                          
      PHFA=Y                                                            
C                                                                       
C     HUMIDITY DEPENDENCE                                               
      IF(ALT.GT.ALTB(1).OR.NN.GE.17.OR.IRHLO.EQ.IRHHI) GO TO 400        
      IF(IRH.EQ.1) GO TO 340                                            
      NN=NN0+IRHHI                                                      
      PHFA1=PHFA                                                        
      IRH=1                                                             
      GO TO 280                                                         
340   CONTINUE                                                          
      PHFA2=PHFA                                                        
      CALL INTERP(1,RH,RHPTS(IRHLO),RHPTS(IRHHI),                       
     CPHFA,PHFA1,PHFA2)                                                 
400   CONTINUE                                                          
      RETURN                                                            
  900 WRITE(IPR,901) SANGLE                                             
  901 FORMAT('0FROM PHASEF- SCATTERING ANGLE IS OUT OF RANGE, '         
     1    ,'ANGLE = ',E12.5)                                            
      STOP                                                              
  910 WRITE(IPR,911) ALAM                                               
  911 FORMAT('0FROM PHASEF- ALAM IS OUT OF RANGE, ALAM = ',E12.5)       
      STOP                                                              
      END                                                               
      FUNCTION   PSI(PSIO,DELO,BETA,IARB,IARBO)                         
C                                                                       
C     FUNCTION PSI RETURNS THE VALUE OF SOLAR AZIMUTH RELATIVE TO       
C     THE LINE OF SIGHT, AT THE CURRENT SCATTERING LOCATION             
      COMMON /PARMTR/ RE,DELTAS,ZMAX,IMAX,IMOD,IBMAX,IPATH              
      COMMON /CNSTNS/ PI,CA,DEG,GCAIR,BIGNUM,BIGEXP                     
      DATA  EPSILN/1.0E-5/                                              
      PSI = 0.0                                                         
C           force PSI to be zero when the azimuth is actually arbitrary 
      DELOR=DELO/DEG                                                    
      BETAR=BETA/DEG                                                    
      IF(IARBO.EQ.0) GO TO 5                                            
C     SPECIAL CASES WHEN PSIO IS ARBITRARY                              
      IARB=IARBO                                                        
      IF(IARBO.EQ.1.OR.IARBO.EQ.3) RETURN                               
      IF(BETA.LE.EPSILN) RETURN                                         
C     PSI=180.0 (MOVED OUT FROM UNDER THE SUN)                          
      IARB=0                                                            
      PSI=180.0                                                         
      RETURN                                                            
5     CONTINUE                                                          
C     GENERAL CASE                                                      
      PSIOR=PSIO/DEG                                                    
      IARB=0                                                            
      ANUMER=SIN(DELOR)*SIN(PSIOR)                                      
      DENOM=COS(BETAR)*SIN(DELOR)*COS(PSIOR)-SIN(BETAR)*COS(DELOR)      
C     SPECIAL CASES                                                     
C     NUMERATOR GOES TO ZERO IN THE FOLLOWING 3 CASES                   
C 1)  DELO=0.0                                                          
      IF(DELO.GT.EPSILN) GO TO 20                                       
      IF(BETA.GT.EPSILN) GO TO 10                                       
      IARB=2                                                            
      RETURN                                                            
10    PSI=180.0                                                         
      RETURN                                                            
C 2)  PSIO=0.0                                                          
20    IF(ABS(PSIO).GT.EPSILN) GO TO 40                                  
      IF(ABS(BETA-DELO).GE.EPSILN) GO TO 30                             
C     SCATTERING POINT IS DIRECTLY UNDER THE SUN                        
      IARB=2                                                            
      RETURN                                                            
30    IF(BETA.LT.DELO) PSI=0.0                                          
      IF(BETA.GT.DELO) PSI=180.0                                        
      RETURN                                                            
C 3)  PSIO=180.0                                                        
40    IF(ABS(PSIO).LT.(180.0-EPSILN)) GO TO 60                          
      PSI=180.0                                                         
      RETURN                                                            
60    CONTINUE                                                          
C     DENOMINATOR CAN GO TO ZERO FOR THE FOLLOWING 2 CASES              
C 1)  BETA=DELO AND PSIO=0.0                                            
C     THIS CASE WAS HANDLED EARLIER                                     
C 2)  GENERAL CASE                                                      
      IF(ABS(DENOM).GT.EPSILN) GO TO 80                                 
      IF(PSIO.LT.0.0) PSI=-90.0                                         
      IF(PSIO.GT.0.0) PSI=90.0                                          
      RETURN                                                            
80    CONTINUE                                                          
      PSI=DEG*ATAN(ANUMER/DENOM)                                        
C     NOTE ATAN RETURNS ARGUMENTS BETWEEN -90 AND 90, PSI               
C     AND PSIO SHOULD BE OF THE SAME SIGN.                              
      IF(PSIO.GT.0.0.AND.PSI.LT.0.0) PSI=PSI+180.                       
      IF(PSIO.LT.0.0.AND.PSI.GT.0.0) PSI=PSI-180.                       
      RETURN                                                            
      END                                                               
      SUBROUTINE PSIDEL(THETAS,PHIS,THETAO,PHIO,PSIPO2,PSIO,DELO,IARBO) 
C                                                                       
C     THIS ROUTINE CALCULATES PSIO (THE RELATIVE AZIMUTH BETWEEN THE    
C     LINE OF SIGHT AND THE DIRECT SOLAR PATH, AT THE OBSERVER)         
C     AND DELO (THE ANGLE SUBTENDED AT THE EARTH'S CENTER BY THE        
C     OBSERVER AND THE SUBSOLAR POINT).                                 
      COMMON /PARMTR/ RE,DELTAS,ZMAX,IMAX,IMOD,IBMAX,IPATH              
      COMMON /CNSTNS/ PI,CA,DEG,GCAIR,BIGNUM,BIGEXP                     
      DATA  EPSILN/1.0E-5/                                              
C                                                                       
C     CHANGE CONVENTION FOR PSIPO FROM (EAST OF NORTH) TO (NORTH OF EAST
C     FOR COMPUTATIONAL PURPOSES. RANGE IS -180 TO +180.                
      PSIPO=90.0-PSIPO2                                                 
      IF(PSIPO.GT.180.0) PSIPO=PSIPO-360.0                              
C                                                                       
      DPHI=PHIS-PHIO                                                    
      DTHT=THETAS-THETAO                                                
      THTS=THETAS/DEG                                                   
      THTO=THETAO/DEG                                                   
      DPH=DPHI/DEG                                                      
      STS=SIN(THTS)                                                     
      STO=SIN(THTO)                                                     
      CTS=COS(THTS)                                                     
      CTO=COS(THTO)                                                     
      SDPHI=SIN(DPH)                                                    
      CDPHI=COS(DPH)                                                    
      TTS=TAN(THTS)                                                     
      TTO=TAN(THTO)                                                     
C                                                                       
C     CALCULATE DELO,  CHECK FOR SPECIAL CASES%                         
      IF(ABS(DPHI).GT.EPSILN) GO TO 10                                  
C     COLONGITUDE                                                       
      DELO=ABS(DTHT)                                                    
      GO TO 30                                                          
10    IF(ABS(DTHT).GT.EPSILN) GO TO 20                                  
C     COLATITUDE                                                        
      DELO=ABS(DPHI)                                                    
      GO TO 30                                                          
C     GENERAL CASE                                                      
20    DELO=DEG*ACOS(CTS*CTO*CDPHI+STS*STO)                              
30    IF(DELO.LE.EPSILN) DELO=0.0                                       
C     CALCULATE PSIO (=PSISO-PSIPO)                                     
C     CHECK FOR SPECIAL CASES WHERE EITHER PSISO OR PSIPO ARE ARBITRARY 
C                                                                       
C     VERTICAL OPTICAL PATH, PSIPO IS ARBITRARY, THIS CASE WAS FLAGGED  
C     IN SSGEO BY SETTING IARBO=1                                       
C                                                                       
C     OBSERVER AND SUBSOLAR POINT COINCIDE, PSISO IS ARBITRARY          
      IF(DELO.EQ.0.0) IARBO=IARBO+2                                     
      IF(IARBO.EQ.0) GO TO 40                                           
C     IARBO=0,1,2,3 FOR% PSIO DEFINITE, PSIPO ARBITRARY, PSISO ARBITRARY
C                        BOTH PSIPO AND PSISO ARBITRARY, RESPECTIVELY.  
      RETURN                                                            
40    ANUMER=TTO*CDPHI-TTS                                              
      DENOM=(1.+TTO**2)*CTO*SDPHI                                       
      IF(ABS(ANUMER).GT.EPSILN) GO TO 50                                
C     NUMERATOR=0.0, GREAT CIRCLE CONTAINING THE OBSERVER AND THE SUBSOL
C     POINT IS DUE EAST-WEST AT THE OBSERVER                            
      PSISO=0.0                                                         
      IF(DPHI.GT.0.0) PSISO=180.0                                       
      GO TO 90                                                          
50    IF(ABS(DENOM).GT.EPSILN) GO TO 60                                 
C     DENOMINATOR =0.0, ATAN(INFINITY)=+90 OR -90                       
      PSISO=90.0                                                        
      IF(DTHT.LT.0.0) PSISO=-90.0                                       
      GO TO 90                                                          
C     GENERAL CASE                                                      
60    PSISO=DEG*ATAN(ANUMER/DENOM)                                      
C     ATAN RETURNS ARGUMENTS BETWEEN -90 AND 90, MAY NEED TO CORRECT    
C     NO CORRECTION NECESSARY                                           
      IF(DPHI.LT.0.0) GO TO 90                                          
C     CORRECTION NECESSARY                                              
      IF(DPHI.GT.0.0) GO TO 70                                          
C     DPHI=0.0                                                          
      PSISO=90.0                                                        
      IF(DTHT.LT.0.0) PSISO=-90.0                                       
      GO TO 90                                                          
C     DPHI.GT.0.0                                                       
70    IF(PSISO.GT.0.0) GO TO 80                                         
      PSISO=PSISO+180.0                                                 
      GO TO 90                                                          
80    PSISO=PSISO-180.0                                                 
90    CONTINUE                                                          
      IF(PHIS .GT. 180.)PSIPO = PSIPO + 180.                            
      IF(PSIPO .GT. 360.)PSIPO = PSIPO - 360.                           
      PSIO=PSISO-PSIPO                                                  
C     RANGE OF PSIO IS -180.0 TO 180.0, CORRECT IF NECESSARY            
      IF(PSIO.LT.-180.0) PSIO=PSIO+360.0                                
      IF(PSIO.GT. 180.0) PSIO=PSIO-360.0                                
C                                                                       
      RETURN                                                            
      END                                                               
      FUNCTION   RADREF(H,SH,GAMMA)                                     
C***********************************************************************
C     COMPUTES THE RADIUS OF CURVATURE OF THE REFRACTED RAY FOR         
C     HORIZONTAL PATH:  RADREF = ANDEX/ D(ANDEX)/D(RADIUS)              
C***********************************************************************
      COMMON /CNSTNS/ PI,CA,DEG,GCAIR,BIGNUM,BIGEXP                     
      IF(SH.EQ.0.0) GO TO 20                                            
      HSH = H/SH                                                        
      IF(HSH .GT. BIGEXP) GO TO 20                                      
      RADREF = SH*(1.0+EXP(HSH )/GAMMA)                                 
      RETURN                                                            
   20 RADREF = BIGNUM                                                   
      RETURN                                                            
      END                                                               
      FUNCTION RAN(I)                                                   
      DOUBLE PRECISION DRND,Z                                           
      DATA DRND/0.574914365D0/                                          
      DRND=97301.D0*DRND                                                
      K=DRND                                                            
      Z=K                                                               
      DRND=DRND-Z                                                       
      RAN=DRND                                                          
      RETURN                                                            
      END                                                               
      FUNCTION   RANFUN(IDUM)                                           
      RANFUN=RAN(IDUM)                                                  
      RETURN                                                            
      END                                                               
      SUBROUTINE RANSET(I)                                              
      COMMON/RST/II                                                     
      RANET=RAN(I)                                                      
      II=RANET                                                          
      RETURN                                                            
      END                                                               
      FUNCTION   RAYSCT(V)                                              
C     RADIATION FLD OUT                                                 
C **  MOLECULAR SCATTERING                                              
      RAYSCT=0.                                                         
      IF(V.LE.3000.) RETURN                                             
      RAYSCT=V**3/(9.26799E+18-1.07123E+09*V**2)                        
C     V**4 FOR RADIATION FLD IN                                         
      RETURN                                                            
      END                                                               
Crea0892      SUBROUTINE RDEXA                                          
      SUBROUTINE RDEXA(IREGX,AWCCONX,TITLE2DX,VXX,EXTCX,ABSCX,ASYMX)    
C                                                                       
C     READ IN USER DEFINED EXTINCTION ABSORPTION COEFFICIENTS AND       
C     ASYMMETRY PARAMETERS                                              
C                                                                       
Crea0892      COMMON RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63)    
C     COMMON             WPATH(68, 63),TBBY(68)                         
Crea0892 COMMON IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12)
Crea0892      COMMON ABSC(5,47),EXTC(5,47),ASYM(5,47),VX2(47),AWCCON(5) 
      COMMON /UNLABEL/ RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63), 
     +        IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12), 
     +        ABSC(5,47),EXTC(5,47),ASYM(5,47),VX2(47),AWCCON(5)        
      COMMON /IFIL/ IRD,IPR,IPU,NPR,IPR1                                
      COMMON /CARD2D/ IREG(4),ALTB(4),IREGC(4)                          
C                                                                       
      REAL AWCCONX(4),TITLE2DX(18,4),VXX(47),EXTCX(47,4),ABSCX(47,4)    
      REAL ASYMX(47,4)                                                  
      INTEGER IREGX(4)                                                  
      DIMENSION TITLE(18),VX(47)                                        
C                                                                       
Crea0892      READ (IRD,1200) (IREG(IK),IK=1,4)                         
1200  FORMAT(4I5)                                                       
      DO 100 IK=1,4                                                     
          IREG(IK) = IREGX(IK)                                          
  100 CONTINUE                                                          
      WRITE(IPR,1210) (IREG(IK),IK=1,4)                                 
1210  FORMAT('0 CARD 2D *****',4I5)                                     
C                                                                       
      DO 1300 IHC = 1,4                                                 
C                                                                       
      IF(IREG(IHC) .EQ. 0) GO TO 1300                                   
Crea0892      READ(IRD,1220) AWCCON(IHC),TITLE                          
1220  FORMAT(E10.3,18A4)                                                
      AWCCON(IHC) = AWCCONX(IHC)                                        
      DO 1215 I=1,18                                                    
          TITLE(I) = TITLE2DX(I,IHC)                                    
1215  CONTINUE                                                          
      WRITE(IPR,1230) AWCCON(IHC),TITLE                                 
1230  FORMAT('0 CARD 2D1 **** EQUIVALENT WATER = ',1PE10.3,18A4)        
      WRITE(IPR,1250)                                                   
1250  FORMAT('0 CARD 2D2 ****')                                         
C                                                                       
Crea0892READ(IRD,1260)(VX(I),EXTC(IHC,I),ABSC(IHC,I),ASYM(IHC,I),I=1,47)
1260  FORMAT(3(F6.2,2F7.5,F6.4))                                        
      DO 1265 I=1,47                                                    
          VX(I) = VXX(I)                                                
          EXTC(IHC,I) = EXTCX(IHC,I)                                    
          ABSC(IHC,I) = ABSCX(IHC,I)                                    
          ASYM(IHC,I) = ASYMX(IHC,I)                                    
1265  CONTINUE                                                          
      WRITE(IPR,1270)(VX(I),EXTC(IHC,I),ABSC(IHC,I),ASYM(IHC,I),I=1,47) 
1270  FORMAT(2X,F6.2,2F7.5,F6.4,F6.2,2F7.5,F6.4,F6.2,2F7.5,F6.4)        
1300  CONTINUE                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE RDNSM(ZMDLX,PX,TXX,WMOLX,JCHARX,AHAZEX,EQLWCZX,RRATZX, 
     +                 IHA1X,ICLD1X,IVUL1X,ISEA1X,ICHRX)                
Crea0892      SUBROUTINE RDNSM                                          
C                                                                       
C     THIS SUBROUTINE READS MODEL 7 DATA WHEN ISVA EQ 1                 
C                                                                       
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1                                 
      COMMON /CARD1/ MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB  
     1  ,MODTRN                                                         
      LOGICAL MODTRN                                                    
      COMMON /CARD1A/ M4,M5,M6,MDEF,IRD1,IRD2                           
      COMMON /CARD1B/ JUNIT(15),WMOL(12),WAIR1,JLOW                     
      COMMON /CARD2/ IHAZE,ISEASN,IVULCN,ICSTL,ICIR,IVSA,VIS,WSS,WHH,   
     1    RAINRT                                                        
      COMMON /CNTRL/ KMAX,M,IKMAX,NL,ML,IKLO,ISSGEO,IMULT               
      COMMON /NSINP/ ZMDL(40),P(40),T(40),WMDL(40,13)                   
      REAL ZMDLX(34),PX(34),TXX(34),WMOLX(12,34),AHAZEX(34),EQLWCZX(34) 
      REAL RRATZX(34)                                                   
      INTEGER IHA1X(34),ICLD1X(34),IVUL1X(34),ISEA1X(34),ICHRX(34)      
      CHARACTER*1 JCHARX(14,34)                                         
C                                                                       
      CHARACTER*1 JCHAR                                                 
      DIMENSION  JCHAR(15)                                              
      IF(ML. GT. 24) THEN                                               
         WRITE(IPR,900) ML                                              
900      FORMAT('  ML = ',I5,'  GT 24 ML RESET TO 24')                  
         ML = 24                                                        
      ENDIF                                                             
      JLOW = 1                                                          
      DO 200   K=1,ML                                                   
      DO 10 KM = 1,15                                                   
      JCHAR(KM) = ' '                                                   
      IF(KM. GT. 12) GO TO 10                                           
      WMOL(KM) = 0.                                                     
10    CONTINUE                                                          
      IRD0 = 1                                                          
      ICONV = 1                                                         
      IF((MODEL .GT. 0.) .AND. (MODEL .LT. 7)) IRD0 = 0                 
      IF((IRD0  .EQ. 1)  .AND. (IVSA.EQ.1)   ) THEN                     
           IRD0 = 0                                                     
           ICONV =0                                                     
      ENDIF                                                             
C                                                                       
C        PARAMETERS - JCHAR = INPUT KEY (SEE BELOW)                     
C                                                                       
C                                                                       
C     ***  ROUTINE ALSO ACCEPTS VARIABLE UNITS ON PRESS AND TEMP        
C                                                                       
C          SEE INPUT KEY BELOW                                          
C                                                                       
C                                                                       
C                                                                       
C     FOR MOLECULAR SPECIES ONLY                                        
C                                                                       
C       JCHAR   JUNIT                                                   
C                                                                       
C     " ",A      10    VOLUME MIXING RATIO (PPMV)                       
C         B      11    NUMBER DENSITY (CM-3)                            
C         C      12    MASS MIXING RATIO (GM(K)/KG(AIR))                
C         D      13    MASS DENSITY (GM M-3)                            
C         E      14    PARTIAL PRESSURE (MB)                            
C         F      15    DEW POINT TEMP (TD IN T(K)) - H2O ONLY           
C         G      16     "    "     "  (TD IN T(C)) - H2O ONLY           
C         H      17    RELATIVE HUMIDITY (RH IN PERCENT) - H2O ONLY     
C         I      18    AVAILABLE FOR USER DEFINITION                    
C        1-6    1-6    DEFAULT TO SPECIFIED MODEL ATMOSPHERE            
C                                                                       
C     ****************************************************************  
C     ****************************************************************  
C                                                                       
C     ***** OTHER 'JCHAR' SPECIFICATIONS -                              
C                                                                       
C       JCHAR   JUNIT                                                   
C                                                                       
C      " ",A     10    PRESSURE IN (MB)                                 
C          B     11       "     "  (ATM)                                
C          C     12       "     "  (TORR)                               
C         1-6   1-6    DEFAULT TO SPECIFIED MODEL ATMOSPHERE            
C                                                                       
C      " ",A     10    AMBIENT TEMPERATURE IN DEG(K)                    
C          B     11       "         "       "  " (C)                    
C          C     12       "         "       "  " (F)                    
C         1-6   1-6    DEFAULT TO SPECIFIED MODEL ATMOSPHERE            
C                                                                       
C     ***** DEFINITION OF "DEFAULT" CHOICES FOR PROFILE SELECTION ***** 
C                                                                       
C      FOR THE USER WHO WISHES TO ENTER ONLY SELECTED ORIGINAL          
C      VERTICAL PROFILES AND WANTS STANDARD ATMOSPHERE SPECIFICATIONS   
C      FOR THE OTHERS, THE FOLLOWING OPTION IS AVAILABLE                
C                                                                       
C     *** JCHAR(P,T OR K) MUST = 1-6 (AS ABOVE)                         
C                                                                       
C      FOR MOLECULES 8-35, ONLY US STD PROFILES ARE AVIALABLE           
C      THEREFORE, WHEN  'JCHAR(K) = 1-5', JCHAR(K) WILL BE RESET TO 6   
C                                                                       
C                                                                       
Crea0892      READ(IRD,80)ZMDL(K),P(K),T(K),WMOL(1),WMOL(2),WMOL(3),    
Crea0892     X (JCHAR(KM),KM=1,15)                                      
Crea089280    FORMAT ( F10.3,5E10.3,15A1)                               
      ZMDL(K) = ZMDLX(K)                                                
      P(K) = PX(K)                                                      
      T(K) = TXX(K)                                                     
      WMOL(1) = WMOLX(1,K)                                              
      WMOL(2) = WMOLX(2,K)                                              
      WMOL(3) = WMOLX(3,K)                                              
      DO 80 KM=1,14                                                     
          JCHAR(KM) = JCHARX(KM,K)                                      
   80 CONTINUE                                                          
       WRITE(IPR,81)ZMDL(K),P(K),T(K),WMOL(1),WMOL(2),WMOL(3),          
     X (JCHAR(KM),KM=1,15)                                              
81    FORMAT ( F10.3,1P5E10.3,10X,15A1)                                 
      IF(ZMDL(K) .LE. 2.0)JLOW = K                                      
      IF(IRD1 .EQ. 1) THEN                                              
Crea0892           READ(IRD,83)(WMOL(KM),KM=4,12)                       
Crea089283         FORMAT(8E10.3)                                       
           DO 83 KM=4,12                                                
               WMOL(KM) = WMOLX(KM,K)                                   
83         CONTINUE                                                     
           WRITE(IPR,84)(WMOL(KM),KM=4,12)                              
84         FORMAT(1P8E10.3)                                             
      ENDIF                                                             
C                                                                       
C                                                                       
C     AHAZE =  AEROSOL VISIBLE EXTINCTION COFF (KM-1)                   
C     AT A WAVELENGTH OF 0.55 MICROMETERS                               
C                                                                       
C     EQLWCZ=LIQUID WATER CONTENT (PPMV) AT ALT Z                       
C            FOR AEROSOL, CLOUD OR FOG MODELS                           
C                                                                       
C     RRATZ=RAIN RATE (MM/HR) AT ALT Z                                  
C                                                                       
C     IHA1 AEROSOL MODEL USED FOR SPECTRAL DEPENDENCE OF EXTINCTION     
C                                                                       
C     IVUL1 STRATOSPHERIC AERSOL MODEL USED FOR SPECTRAL DEPENDENCE     
C     OF EXT AT Z                                                       
C                                                                       
C     ICLD1 CLOUD MODEL USED FOR SPECTRAL DEPENDENCE OF EXT AT Z        
C                                                                       
C     ONLY ONE OF IHA1,ICLD1  OR IVUL1 IS ALLOWED                       
C     IHA1 NE 0 OTHERS IGNORED                                          
C     IHA1 EQ 0 AND ICLD1 NE 0 USE ICLD1                                
C                                                                       
C     IF AHAZE AND EQLWCZ ARE BOUTH ZERO                                
C        DEFAULT PROFILE ARE LOADED FROM IHA1,ICLD1,IVUL1               
C     ISEA1 = AERSOL SEASON CONTROL FOR ALTITUDE Z                      
C                                                                       
      IF(IRD2 .EQ. 1) THEN                                              
Crea0892       READ(IRD,82)    AHAZE,EQLWCZ,RRATZ,IHA1,ICLD1,IVUL1,ISEA1
           AHAZE = AHAZEX(K)                                            
           EQLWCZ = EQLWCZX(K)                                          
           RRATZ = RRATZX(K)                                            
           IHA1 = IHA1X(K)                                              
           ICLD1 = ICLD1X(K)                                            
           IVUL1 = IVUL1X(K)                                            
           ISEA1 = ISEA1X(K)                                            
           ICHR = ICHRX(K)                                              
           WRITE(IPR,82)    AHAZE,EQLWCZ,RRATZ,IHA1,ICLD1,IVUL1,ISEA1   
82         FORMAT(10X,3F10.3,4I5)                                       
      ENDIF                                                             
      DO 12 KM = 1,15                                                   
12    JUNIT(KM) = JOU(JCHAR(KM))                                        
      IF(M1 .NE. 0) JUNIT(1) = M1                                       
      IF(M1 .NE. 0) JUNIT(2) = M1                                       
      CALL CHECK(P(K),JUNIT(1),1)                                       
      CALL CHECK(T(K),JUNIT(2),2)                                       
      CALL DEFALT(ZMDL(K),P(K),T(K))                                    
      CALL CONVRT (P(K),T(K) )                                          
      DO 20 KM = 1,12                                                   
20    WMDL(K,KM) = WMOL(KM)                                             
      WMDL(K,13) = WAIR1                                                
200   CONTINUE                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE REDUCE(H1,H2,ANGLE,PHI,ITER)                           
C***********************************************************************
C     ZMAX IS THE HIGHEST LEVEL IN THE ATMOSPHERIC PROFILE STORED IN    
C     COMMON /MODEL/.  IF H1 AND/OR H2 ARE GREATER THAN ZMAX, THIS      
C     SUBROUTINE REDUCES THEM TO ZMAX AND RESETS ANGLE AND/OR PHI       
C     AS NECESSARY. THIS REDUCTION IS NECESSARY,FOR EXAMPLE FOR         
C     SATELLITE ALTITUDES, BECAUSE (1) THE DENSITY PROFILES ARE         
C     POORLY DEFINED ABOVE ZMAX AND (2) THE CALCULATION TIME FOR        
C     PATHS ABOVE ZMAX CAN BE EXCESSIVE ( EG. FOR GEOSYNCHRONOUS        
C     ALTITUDES)                                                        
C***********************************************************************
      COMMON /IFIL/ IRD,IPR,IPU,NPR,IPR1                                
      COMMON /PARMTR/ RE,DELTAS,ZMAX,IMAX,IMOD,IBMAX,IPATH              
      COMMON /CNSTNS/ PI,CA,DEG,GCAIR,BIGNUM,BIGEXP                     
      IF(H1.LE.ZMAX .AND. H2.LE.ZMAX)  RETURN                           
      CALL FINDSH(H1,SH,GAMMA)                                          
      CPATH = ANDEX(H1,SH,GAMMA)*(RE+H1)*SIN(ANGLE/DEG)                 
      CALL FINDSH(ZMAX,SH,GAMMA)                                        
      CZMAX = ANDEX(ZMAX,SH,GAMMA)*(RE+ZMAX)                            
      ANGMAX = 180.0-ASIN(CPATH/CZMAX)*DEG                              
      IF(H1.LE.ZMAX) GO TO 120                                          
      H1 = ZMAX                                                         
      ANGLE = ANGMAX                                                    
  120 CONTINUE                                                          
      IF(H2.LE.ZMAX)  GO TO 130                                         
      H2 = ZMAX                                                         
      PHI = ANGMAX                                                      
  130 CONTINUE                                                          
       WRITE(IPR,20) ZMAX,ANGMAX                                        
   20 FORMAT(///,' FROM SUBROUTINE REDUCE: ',/,                         
     1   4X,'ONE OR BOTH OF H1 AND H2 ARE ABOVE THE TOP OF THE ',       
     2   'ATMOSPHERIC PROFILE ZMAX = ',F10.3,' AND HAVE BEEN RESET ',   
     3   'TO ZMAX',/,4X,'ANGLE AND/OR PHI HAVE ALSO BEEN RESET TO ',    
     4    'THE ZENITH ANGLE AT ZMAX = ',F10.3,' DEG')                   
  200 CONTINUE                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE RFPATH(H1,H2,ANGLE,PHI,LEN,HMIN,IAMT,BETA,RANGE,BENDNG)
C***********************************************************************
C     THIS SUBROUTINE  TRACES THE REFRACTED RAY FROM H1 WITH A          
C     INITIAL ZENITH ANGLE ANGLE TO H2 WHERE THE ZENITH ANGLE IS PHI,   
C     AND CALCULATES THE ABSORBER AMOUNTS (IF IAMT.EQ.1) ALONG          
C     THE PATH.  IT STARTS FROM THE LOWEST POINT ALONG THE PATH         
C     (THE TANGENT HEIGHT HMIN IF LEN = 1 OR HA = MIN(H1,H2) IF LEN = 0)
C     AND PROCEEDS TO THE HIGHEST POINT.  BETA AND RANGE ARE THE        
C     EARTH CENTERED ANGLE AND THE TOTAL DISTANCE RESPECTIVELY          
C     FOR THE REFRACTED PATH FROM H1 TO H2                              
C***********************************************************************
      COMMON /IFIL/ IRD,IPR,IPU,NPR,IPR1                                
      COMMON /CARD1/ MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB  
     1  ,MODTRN                                                         
      LOGICAL MODTRN                                                    
      COMMON /PARMTR/ RE,DELTAS,ZMAX,IMAX,IMOD,IBMAX,IPATH              
      COMMON /CNSTNS/ PI,CA,DEG,GCAIR,BIGNUM,BIGEXP                     
      COMMON /RFRPTH/ ZP(35),PP(35),TP(35),RFNDXP(35),SP(35),           
     1    PPSUM(35),TPSUM(35),RHOPSM(35),DENP(63,35),AMTP(63,35)        
      COMMON /SOLS/ AH1(68),ARH(68),                                    
C    X   WPATHS(68,63),PA(68),PR(68),ATHETA(35),ADBETA(35),LJ(69),JTURN,
C    X ANGSUN,CSZEN(68)                                                 
     1  WPATHS(102,63),PA(68),PR(68),ATHETA(35),ADBETA(35),LJ(69),      
     2  JTURN,ANGSUN,CSZEN(68),TBBYS(102,12),PATMS(102,12)              
      COMMON /CNTRL/ KMAX,M,IKMAX,NL,ML,IKLO,ISSGEO,IMULT               
      COMMON /PATH/ PL(68),QTHETA(68),ITEST,HI,HF,AHT(68)               
      DIMENSION HLOW(2)                                                 
      CHARACTER*2 HLOW                                                  
      DATA HLOW/'H1','H2'/                                              
      MAX = 0                                                           
      IF(H1.GT.H2) GO TO 90                                             
      IORDER = 1                                                        
      HA = H1                                                           
      HB = H2                                                           
      ANGLEA = ANGLE                                                    
      GO TO 95                                                          
   90 CONTINUE                                                          
      IORDER = -1                                                       
      HA = H2                                                           
      HB = H1                                                           
      ANGLEA = PHI                                                      
   95 CONTINUE                                                          
      JNEXT = 1                                                         
C     IF(IAMT.EQ.1 .AND. NPR.NE.1)  WRITE(IPR,20)                       
      IF(IAMT.EQ.1 .AND. NPR.LT.1)  WRITE(IPR,20)                       
   20 FORMAT('1CALCULATION OF THE REFRACTED PATH THROUGH THE ',         
     1    'ATMOSPHERE',///,                                             
     4    T3,'I',T11,'ALTITUDE',T27,'THETA',T34,'DRANGE',T44,'RANGE',   
     5    T53,'DBETA',T63,'BETA',T72,'PHI',T80,'DBEND',T87,'BENDING',   
     6    T 98,'PBAR',T106,'TBAR',T113,'RHOBAR',/,                      
     7    T07,'FROM',T18,'TO',/,T07,'(KM)',T17,'(KM)',T27,'(DEG)',      
     8    T36,'(KM)',T45,'(KM)',T53,'(DEG)',T62,'(DEG)',T71,'(DEG)',    
     9    T80,'(DEG)',T89,'(DEG)',T098,'(MB)',T106,'(K)',               
     1    T111,'(GM CM-3)',/)                                           
      IF(LEN.EQ.0) GO TO 100                                            
C*****LONG PATH: FILL IN THE SYMMETRIC PART FROM THE TANGENT HEIGHT     
C*****TO HA                                                             
      CALL FILL(HMIN,HA,JNEXT)                                          
      JHA = JNEXT                                                       
  100 CONTINUE                                                          
C*****FILL IN THE REMAINING PATH FROM HA TO HB                          
      IF(HA.EQ.HB) GO TO 110                                            
      CALL FILL(HA,HB,JNEXT)                                            
  110 CONTINUE                                                          
      JMAX = JNEXT                                                      
      IPATH = JMAX                                                      
C*****INTEGRATE EACH SEGMENT OF THE PATH                                
C*****CALCULATE CPATH SEPERATELY FOR LEN = 0,1                          
      IF(LEN.EQ.1) GO TO 115                                            
      CALL FINDSH(HA,SH,GAMMA)                                          
      CPATH = (RE+HA)*ANDEX(HA,SH,GAMMA)*SIN(ANGLEA/DEG)                
      GO TO 116                                                         
  115 CONTINUE                                                          
      CALL FINDSH(HMIN,SH,GAMMA)                                        
      CPATH = (RE+HMIN)*ANDEX(HMIN,SH,GAMMA)                            
  116 CONTINUE                                                          
      BETA = 0.0                                                        
      S = 0.0                                                           
      BENDNG = 0.0                                                      
      IF(LEN.EQ.0) GO TO 140                                            
C*****DO SYMMETRIC PART, FROM TANGENT HEIGHT(HMIN) TO HA                
      IHLOW = 1                                                         
      IF(IORDER.EQ.-1)  IHLOW = 2                                       
C     IF(IAMT.EQ.1 .AND. NPR.NE.1) WRITE(IPR,24) HLOW(IHLOW)            
      IF(IAMT.EQ.1 .AND. NPR.LT.1) WRITE(IPR,24) HLOW(IHLOW)            
   24 FORMAT(' ',T7,'TANGENT',T17,A2,/,T7,'HEIGHT',/)                   
      SINAI = 1.0                                                       
      COSAI = 0.0                                                       
      THETA = 90.0                                                      
      J2 = JHA-1                                                        
      DO 120 J=1,J2                                                     
      CALL SCALHT(ZP(J),ZP(J+1),RFNDXP(J),RFNDXP(J+1),SH,GAMMA)         
      CALL LAYER(J,SINAI,COSAI,CPATH,SH,GAMMA,IAMT,DS,DBEND)            
      DBEND = DBEND*DEG                                                 
      PHI = ASIN(SINAI)*DEG                                             
      DBETA = THETA-PHI+DBEND                                           
      PHI = 180.0-PHI                                                   
      S = S+DS                                                          
C                                                                       
C   SAVE REFRACTED RAY PATH LENGTH FOR USE WITH MULTIPLE SCATTERING     
C                                                                       
      BENDNG = BENDNG+DBEND                                             
      BETA = BETA+DBETA                                                 
      IF(IAMT.NE.1) GO TO 118                                           
      PBAR = PPSUM(J)/RHOPSM(J)                                         
      TBAR = TPSUM(J)/RHOPSM(J)                                         
      RHOBAR = RHOPSM(J)/DS                                             
C     IF(IAMT.EQ.1 .AND. NPR.NE.1) WRITE(IPR,22) J,ZP(J),ZP(J+1),       
      IF(IAMT.EQ.1 .AND. NPR.LT.1) WRITE(IPR,22) J,ZP(J),ZP(J+1),       
     1    THETA,DS,S,DBETA,BETA,PHI,DBEND,BENDNG,PBAR,TBAR,RHOBAR       
      J2A = J2 - J +  1                                                 
      J2B = J2 + J                                                      
      QTHETA(J2A)=  PHI  *CA                                            
      QTHETA(J2B) = THETA*CA                                            
      MAX = J2B                                                         
   22 FORMAT(' ',I2,2F9.3,9F9.3,F8.2,1PE9.2)                            
  118 CONTINUE                                                          
      IF(ISSGEO.EQ.1) GO TO 119                                         
      ATHETA(J)=THETA                                                   
      ADBETA(J)=DBETA                                                   
  119 CONTINUE                                                          
      THETA = 180.0-PHI                                                 
  120 CONTINUE                                                          
C*****DOUBLE PATH QUANTITIES FOR THE OTHER PART OF THE SYMMETRIC PATH   
      BENDNG = 2.0*BENDNG                                               
      BETA = 2.0*BETA                                                   
      S = 2.0*S                                                         
C     IF(IAMT.EQ.1 .AND. NPR.NE.1) WRITE(IPR,26) S,BETA,BENDNG          
      IF(IAMT.EQ.1 .AND. NPR.LT.1) WRITE(IPR,26) S,BETA,BENDNG          
   26 FORMAT('0',T10,'DOUBLE RANGE, BETA, BENDING',/,                   
     1    T10,'FOR SYMMETRIC PART OF PATH',T40,F9.3,T58,F9.3,           
     2    T85,F9.3,/)                                                   
      JNEXT = JHA                                                       
      GO TO 150                                                         
  140 CONTINUE                                                          
C*****SHORT PATH                                                        
      JNEXT = 1                                                         
C*****ANGLEA IS THE ZENITH ANGLE AT HA IN DEG                           
C*****SINAI IS SIN OF THE INCIDENCE ANGLE                               
C*****COSAI IS CARRIED SEPERATELY TO AVOID A PRECISION PROBLEM          
C*****WHEN SINAI IS CLOSE TO 1.0                                        
      THETA = ANGLEA                                                    
      IF(ANGLEA.GT.45.0) GO TO 145                                      
      SINAI = SIN(ANGLEA/DEG)                                           
      COSAI = -COS(ANGLEA/DEG)                                          
      GO TO 150                                                         
  145 CONTINUE                                                          
      SINAI = COS((90.0-ANGLEA)/DEG)                                    
      COSAI = -SIN((90.0-ANGLEA)/DEG)                                   
  150 CONTINUE                                                          
C*****DO PATH FROM HA TO HB                                             
      IF(HA.EQ.HB) GO TO 170                                            
      JO = MAX - JNEXT + 1                                              
      J1 = JNEXT                                                        
      J2 = JMAX-1                                                       
C                                                                       
      IF(H1 .GT. H2) THEN                                               
      JD =  J2 - J1 + 1                                                 
      DO  1158 J = 1,MAX                                                
      KA = MAX - J + 1                                                  
      JA = KA + JD                                                      
      QTHETA(JA) = QTHETA(KA)                                           
1158  CONTINUE                                                          
      MAX =  MAX + JD                                                   
      JO = 0                                                            
      ENDIF                                                             
C                                                                       
      IHLOW = 1                                                         
      IF(IORDER.EQ.-1)  IHLOW = 2                                       
      IHIGH = MOD(IHLOW,2)+1                                            
C     IF(IAMT.EQ.1 .AND. NPR.NE.1) WRITE(IPR,28) HLOW(IHLOW),           
      IF(IAMT.EQ.1 .AND. NPR.LT.1) WRITE(IPR,28) HLOW(IHLOW),           
     1    HLOW(IHIGH)                                                   
   28 FORMAT(' ',T11,A2,' TO ',A2,/)                                    
      DO 160 J=J1,J2                                                    
      CALL SCALHT(ZP(J),ZP(J+1),RFNDXP(J),RFNDXP(J+1),SH,GAMMA)         
      CALL LAYER(J,SINAI,COSAI,CPATH,SH,GAMMA,IAMT,DS,DBEND)            
      DBEND = DBEND*DEG                                                 
      PHI = ASIN(SINAI)*DEG                                             
      DBETA = THETA-PHI+DBEND                                           
      PHI = 180.0-PHI                                                   
      S = S+DS                                                          
C                                                                       
C    SAVE LAYER REFRACTED PATH LENGTH FOR USE WITH MULTIPLE SCATTERING  
C                                                                       
      PL(J)=DS                                                          
      BENDNG = BENDNG+DBEND                                             
      BETA = BETA+DBETA                                                 
      IF(IAMT.NE.1) GO TO 158                                           
      PBAR = PPSUM(J)/RHOPSM(J)                                         
      TBAR = TPSUM(J)/RHOPSM(J)                                         
      RHOBAR = RHOPSM(J)/DS                                             
C     IF(IAMT.EQ.1 .AND. NPR.NE.1) WRITE(IPR,22) J,ZP(J),ZP(J+1),       
      IF(IAMT.EQ.1 .AND. NPR.LT.1) WRITE(IPR,22) J,ZP(J),ZP(J+1),       
     1    THETA,DS,S,DBETA,BETA,PHI,DBEND,BENDNG,PBAR,TBAR,RHOBAR       
  158 CONTINUE                                                          
C                                                                       
C   SAVE LAYER REFRACTED PATH ANGLE FOR USE WITH MULTIPLE SCATTERING    
C                                                                       
C                                                                       
      IF(H2 .GT. H1)  THEN                                              
      QTHETA(J + JO)=THETA*CA                                           
      MAX  = J + JO                                                     
      ELSE                                                              
      J2B  = J2 - J + 1                                                 
      QTHETA(J2B)= PHI * CA                                             
      ENDIF                                                             
C                                                                       
      IF(ISSGEO.EQ.1) GO TO 159                                         
      ADBETA(J)=DBETA                                                   
      ATHETA(J)=THETA                                                   
  159 CONTINUE                                                          
      THETA = 180.0-PHI                                                 
  160 CONTINUE                                                          
  170 CONTINUE                                                          
      IF(ISSGEO.EQ.0) ATHETA(JMAX)=THETA                                
      IF(IORDER.EQ.-1) PHI = ANGLEA                                     
      RANGE = S                                                         
      RETURN                                                            
      END                                                               
      SUBROUTINE RNSCAT(V,R,TT,PHASE,DIST,IK,CSSA,ASYMR,IENT)           
C********************************************************************** 
      INTEGER PHASE,DIST                                                
      DIMENSION SC(3,4)                                                 
C                                                                       
C          ARGUMENTS:                                                   
C                                                                       
C          F = FREQUENCY (GHZ)                                          
C          R = RAINFALL RATE (MM/HR)                                    
C          T = TEMPERATURE (DEGREES CELSIUS)                            
C          PHASE = PHASE PARAMETER (1=WATER, 2=ICE)                     
C          DIST = DROP SIZE DISTRIBUTION PARAMETER                      
C                     (1=MARSHALL-PALMER, 2=BEST)                       
C                                                                       
C          RESULTS:                                                     
C                                                                       
C          SC(1) = ABSORPTION COEFFICIENT (1/KM)                        
C          SC(2) = EXTINCTION COEFFICIENT (1/KM)                        
C          SC(I),I=3,NSC = LEGENDRE COEFFICIENTS #I-3  (NSC=10)         
C          ERR = ERROR RETURN CODE: 0=NO ERROR, 1=BAD FREQUENCY,        
C                2=BAD RAINFALL RATE, 3=BAD TEMPERATURE,                
C                4=BAD PHASE PARAMETER, 5=BAD DROP SIZE DISTRIBUTION    
C                                                                       
C          THE INTERNAL DATA:                                           
C                                                                       
      DIMENSION FR(9),TEMP(3)                                           
C                                                                       
C          FR(I),I=1,NF = TABULATED FREQUENCIES (GHZ)  (NF=9)           
C          TEMP(I),I=1,NT = TABULATED TEMPERATURES  (NT=3)              
C                                                                       
C          THE BLOCK-DATA SECTION                                       
C                                                                       
      DATA RMIN,RMAX/0.,50./,NF/9/,NT/3/,NSC/4/,MAXI/3/                 
      DATA TK/273.15/,CMT0/1.0/,C7500/0.5/,G0/0.0/,G7500/0.85/          
      DATA (TEMP(I),I=1,3)/-10.,0.,10./                                 
      DATA (FR(I),I=1,9)/19.35,37.,50.3,89.5,100.,118.,130.,183.,231./  
C                                                                       
C      THIS SUBROUTINE REQUIRES FREQUENCIES IN GHZ                      
      NOPR = 0                                                          
      IF(IK .EQ. 1) NOPR = 1                                            
      IF(IENT .GT.1) NOPR = 0                                           
      F= V *29.97925                                                    
      FSAV=F                                                            
      RSAV=R                                                            
      TSAV=T                                                            
      INT=0                                                             
C      CONVERT TEMP TO DEGREES CELSIUS                                  
      T=TT-TK                                                           
C      FREQ RANGE OF DATA 19.35-231 GHZ IF LESS THAN 19.35              
C      SET UP PARAMETERS FOR INTERPOLATION                              
      IF(F.LT.FR(1)) THEN                                               
        FL=0.0                                                          
        FM=FR(1)                                                        
        INT=1                                                           
        IF(NOPR .GT. 0) WRITE (6,801)                                   
      END IF                                                            
C      IF MORE THAN 231 GHZ SET UP PARAMETERS FOR EXTRAPOLATION         
       IF(F.GT.FR(NF)) THEN                                             
         FL=FR(NF)                                                      
         FM=7500.                                                       
         INT=2                                                          
         IF(NOPR .GT. 0) WRITE (6,801)                                  
      END IF                                                            
C      TEMP RANGE OF DATA IS -10 TO +10 DEGREES CELCIUS                 
C      IF BELOW OR ABOVE EXTREME SET AND DO CALCULATIONS AT EXTREME     
      IF (T.LT.TEMP(1)) THEN                                            
        T=TEMP(1)                                                       
        IF(NOPR .GT. 0) WRITE (6,802)                                   
      END IF                                                            
C                                                                       
      IF (T.GT.TEMP(3)) THEN                                            
        T=TEMP(3)                                                       
        IF(NOPR .GT. 0) WRITE (6,802)                                   
      END IF                                                            
C                                                                       
C      RAIN RATE OF DATA IS FOR 0-50 MM/HR                              
C      IF GT 50 TREAT CALCULATIONS AS IF 50 MM/HR WAS INPUT             
      IF(R.GT.50) THEN                                                  
        R=50.                                                           
        IF(NOPR .GT. 0) WRITE (6,803)                                   
      END IF                                                            
C                                                                       
      KI=1                                                              
C             FIGURE OUT THE SECOND INDEX                               
   10 J=PHASE+2*DIST                                                    
C                                                                       
C                                                                       
C             GET THE TEMPERATURE INTERPOLATION PARAMETER ST            
C             IF NEEDED AND AMEND THE SECOND INDEX                      
      CALL BS(J,T,TEMP,NT,ST)                                           
C                                                                       
C             FIGURE OUT THE THIRD INDEX AND THE FREQUENCY INTERPOLATION
C             PARAMETER SF                                              
      CALL BS(K,F,FR,NF,SF)                                             
C                                                                       
C             INITIALIZE SC                                             
      DO 11 I=1,NSC                                                     
      SC(KI,I)=0.                                                       
   11 CONTINUE                                                          
      SC(KI,3)=1.                                                       
C                                                                       
C             NOW DO THE CALCULATIONS                                   
C                                                                       
C             THE WATER CONTENT IS                                      
      IF(DIST.EQ.1) THEN                                                
      WC=.0889*R**.84                                                   
      ELSE                                                              
      WC=.067*R**.846                                                   
      END IF                                                            
C                                                                       
C             FOR A TEMPERATURE DEPENDENT CASE, I.E.                    
      IF(J.LT.3) THEN                                                   
      S1=(1.-SF)*(1.-ST)                                                
      S2=(1.-SF)*ST                                                     
      S3=SF*(1.-ST)                                                     
      S4=SF*ST                                                          
      DO 14 I=1,MAXI                                                    
      IF(I.LE.2) THEN                                                   
      ISC=I                                                             
      ELSE                                                              
      ISC=I+1                                                           
      END IF                                                            
      SC(KI,ISC)=S1*TAB(I,J,K,WC)+S2*TAB(I,J+1,K,WC)+                   
     *             S3*TAB(I,J,K+1,WC)+S4*TAB(I,J+1,K+1,WC)              
   14 CONTINUE                                                          
C                                                                       
C             FOR A TEMPERATURE INDEPENDENT CASE                        
      ELSE                                                              
      S1=1.-SF                                                          
      S2=SF                                                             
      DO 17 I=1,MAXI                                                    
      IF(I.LE.2) THEN                                                   
      ISC=I                                                             
      ELSE                                                              
      ISC=I+1                                                           
      END IF                                                            
      SC(KI,ISC)=S1*TAB(I,J,K,WC)+S2*TAB(I,J,K+1,WC)                    
   17 CONTINUE                                                          
      END IF                                                            
      F=FSAV                                                            
      IF(INT.EQ.3) GO TO 20                                             
      IF(INT.EQ.4) GO TO 30                                             
      IF(INT.EQ.0) THEN                                                 
        CSSA=SC(KI,1)/SC(KI,2)                                          
        IF(CSSA.GT.1.0) CSSA=1.0                                        
        ASYMR=SC(KI,4)/3.0                                              
        F=FSAV                                                          
        R=RSAV                                                          
        T=TSAV                                                          
      RETURN                                                            
      END IF                                                            
      IF(INT.EQ.1) THEN                                                 
        INT=3                                                           
        F=FM                                                            
        KI=2                                                            
      END IF                                                            
      IF(INT.EQ.2) THEN                                                 
        INT=4                                                           
        F=FL                                                            
        KI=3                                                            
      END IF                                                            
      GO TO 10                                                          
   20 CONTINUE                                                          
      FDIF=FM-F                                                         
      FTOT=FM-FL                                                        
      CM=SC(KI,1)/SC(KI,2)                                              
      IF(CM.GT.1.0) CM=1.0                                              
      CL=CMT0                                                           
      AM=SC(KI,4)/3.0                                                   
      AL=G0                                                             
      GO TO 40                                                          
   30 CONTINUE                                                          
      FDIF=FM-F                                                         
      FTOT=FM-FL                                                        
      CM=C7500                                                          
      CL=SC(KI,1)/SC(KI,2)                                              
      IF(CL.GT.1.0) CL=1.0                                              
      AM=G7500                                                          
      AL=SC(KI,4)/3.0                                                   
   40 CTOT=CM-CL                                                        
      CAMT=FDIF*CTOT/FTOT                                               
      CSSA=CM-CAMT                                                      
      ATOT=AM-AL                                                        
      AAMT=FDIF*ATOT/FTOT                                               
      ASYMR=AM-AAMT                                                     
      F=FSAV                                                            
      R=RSAV                                                            
      T=TSAV                                                            
      RETURN                                                            
801   FORMAT(2X,'***  THE ASYMMETRY PARAMETER DUE TO RAIN IS BASED ON', 
     1 'DATA BETWEEN 19 AND 231 GHZ',                                   
     2 /2X,'***  EXTRAPOLATION IS USED FOR FREQUENCIES LOWER AND',      
     3 'HIGHER THAN THIS RANGE')                                        
802   FORMAT(2X,'***  TEMPERATURE RANGE OF DATA IS -10 TO +10 ',        
     1'DEGREES CELSIUS',/2X,'***  BEYOND THESE VALUES IT IS ',          
     2'TREATED AS IF AT THE EXTREMES')                                  
803   FORMAT(2X,'***  RAIN RATES BETWEEN 0 AND 50 MM/HR ARE',           
     1'WITHIN THIS DATA RANGE',/2X,'***  ABOVE THAT THE ASYMMETRY',     
     2' PARAMETER IS CALCULATED FOR 50 MM/HR')                          
      END                                                               
      SUBROUTINE SCALHT(Z1,Z2,RFNDX1,RFNDX2,SH,GAMMA)                   
C***********************************************************************
C     THIS SUBROUTINE CALCULATES THE SCALE HEIGHT SH OF THE (INDEX OF   
C     REFRACTION-1.0) FROM THE VALUES OF THE INDEX AT THE ALTITUDES Z1  
C     AND Z2 ( Z1 < Z2). IT ALSO CALCULATES THE EXTRAPOLATED VALUE      
C     GAMMA OF THE (INDEX-1.0) AT Z = 0.0                               
C***********************************************************************
      RF1 = RFNDX1+1.0E-20                                              
      RF2 = RFNDX2+1.0E-20                                              
      RATIO = RF1/RF2                                                   
      IF(ABS(RATIO-1.0).LT.1.0E-05)  GO TO 100                          
      SH = (Z2-Z1)/ALOG(RATIO)                                          
      GAMMA = RF1*(RF2/RF1)**(-Z1/(Z2-Z1))                              
      GO TO 110                                                         
  100 CONTINUE                                                          
C*****THE VARIATION IN THE INDEX OF REFRACTION WITH HEIGHT IS           
C*****INSIGNIFICANT OR ZERO                                             
      SH = 0.0                                                          
      GAMMA = RFNDX1                                                    
  110 CONTINUE                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE SCHRUN(V,CPRUN)                                        
      COMMON /SHUR/ SHN(430)                                            
      DATA V1,V2,DV,INUM /49600.,51710.,5.,425/                         
      CPRUN = -20.                                                      
      IF(V .LT. V1) GO TO 20                                            
      IF(V .GT. V2) GO TO 20                                            
      IND = (V - V1)/DV + 1.0001                                        
      IF(IND . GT. INUM) THEN                                           
            PRINT*,'  IND GT INUM  V IND ',V,IND                        
            GO TO 20                                                    
      ENDIF                                                             
      CPRUN = SHN(IND)                                                  
20    RETURN                                                            
      END                                                               
      FUNCTION   SCTANG(ANGLST,THTST,PSIST,IARB)                        
C                                                                       
C     FUNCTION SCTANG RETURNS THE SCATTERING ANGLE (THAT IS, THE        
C     ANGLE BETWEEN THE SUN'S RAYS AND THE LINE OF SIGHT) AT ANY        
C     POINT ALONG THE OPTICAL PATH.                                     
      COMMON /PARMTR/ RE,DELTAS,ZMAX,IMAX,IMOD,IBMAX,IPATH              
      COMMON /CNSTNS/ PI,CA,DEG,GCAIR,BIGNUM,BIGEXP                     
C                                                                       
      SUNZEN=ANGLST/DEG                                                 
      PTHZEN=THTST/DEG                                                  
      IF(IARB.EQ.0) GO TO 10                                            
C     SPECIAL CASES IF PSI IS ARBITRARY                                 
      SCTANG=DEG*ACOS(COS(SUNZEN)*COS(PTHZEN))                          
      RETURN                                                            
10    CONTINUE                                                          
      PSI=PSIST/DEG                                                     
C     GENERAL CASE                                                      
      X=SIN(SUNZEN)*SIN(PTHZEN)*COS(PSI)+COS(SUNZEN)*COS(PTHZEN)        
      SCTANG=DEG*ACOS(X)                                                
      RETURN                                                            
      END                                                               
      SUBROUTINE SINT(V1,V1C,DV,NPT,CONTI,CONTO)                        
C                                                                       
C     INTERPOLATION  FOR CONTINUUM WITH LOWTRAN                         
C                                                                       
      DIMENSION CONTI(2003)                                             
      CONTO=0.                                                          
      I=(V1C-V1)/DV+1.00001                                             
      IF(I.GE.NPT)GO TO 10                                              
      CONTO=CONTI(I)                                                    
      IMOD=AMOD(V1C,10.)                                                
      IF(IMOD.GT.0) CONTO=(CONTI(I)+CONTI(I+1))/2.                      
10    CONTINUE                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE SLF260(V1C,SH2OT1)                                     
C     LOADS SELF CONTINUUM  260K                                        
      COMMON /S260/ V1,V2,DV,NPT,S260(2003)                             
      CALL SINT(V1,V1C,DV,NPT,S260,SH2OT1)                              
      RETURN                                                            
      END                                                               
      SUBROUTINE SLF296(V1C,SH2OT0)                                     
C     LOADS SELF CONTINUUM  296K                                        
      COMMON /SH2O/ V1,V2,DV,NPT,S296(2003)                             
      CALL SINT(V1,V1C,DV,NPT,S296,SH2OT0)                              
      RETURN                                                            
      END                                                               
      SUBROUTINE SOURCE(VV,ISOURC,IDAY,ANGLE,SS)                        
      COMMON /ICLL/ ICALL,FPHS,FALB,FORBIT                              
C     SUBROUITNE SOURCE CONTAINS THE SOLAR INTENSITY DATA AS A          
C     FUNTION OF WAVELENGTH. THIS ROUTINE IS ALSO CAPABLE OF CALCULATING
C     LUNAR INTENSITY BASED ON THE PHASE ANGLE BETWEEN THE SUN, MOON AND
C     EARTH. CORRECTIONS ARE MADE FOR THE SUN'S ELLIPTIC ORBIT.         
C                                                                       
      DIMENSION NDAY(13),RAT(13),PHS(17),ALB(29)                        
      DATA NDAY/1,32,60,91,121,152,182,213,244,274,305,335,366/         
      DATA RAT/1.034,1.030,1.019,1.001,.985,.972,.967,.971,.982,        
     1    .998,1.015,1.029,1.034/                                       
      DATA PHS/100.,73.2,57.8,42.3,32.0,23.3,16.7,12.4,8.7,6.7,         
     1    4.7,3.6,2.4,1.2,0.9,0.4,.002/                                 
      DATA ALB/.001,.01,.03,.075,.1,.13,.155,.17,.178,.185,.2,.211,     
     1    .231,.25,.275,.289,.285,.287,.3,.29,.3,.31,.313,.319,.329     
     1    ,.339,.345,.350,.4/                                           
      IF(VV.LE.0.) THEN                                                 
           V = 1.0E+38                                                  
      ELSE                                                              
           V=10000./VV                                                  
      ENDIF                                                             
      IF(ISOURC.NE.1) GO TO 50                                          
      IF(ICALL.EQ.1) GO TO 20                                           
C                                                                       
C     MOON PHASE ANGLE FACTOR                                           
C                                                                       
      FPHS=0.0                                                          
      IF(ANGLE.GT.160.) GO TO 20                                        
      IP=ANGLE/10.                                                      
      IF(FLOAT(IP*10).EQ.ANGLE) GO TO 10                                
      FPHS=PHS(IP+1)+(ANGLE-10.*IP)*(PHS(IP+2)-PHS(IP+1))/10.           
      GO TO 20                                                          
10    FPHS=PHS(IP+1)                                                    
C                                                                       
C     GEOMETRICAL ALBEDO OF THE MOON                                    
C                                                                       
20    FALB=0.4                                                          
      IF(V.GE.5.) GO TO 40                                              
      IF(V.GT.2.8) GO TO 30                                             
      I1=V*10                                                           
      FALB=ALB(I1)+(ALB(I1+1)-ALB(I1))*(V-I1*0.1)*10.                   
      GO TO 40                                                          
30    FALB=ALB(28)+(ALB(29)-ALB(28))*(V-2.8)/2.2                        
40    CONTINUE                                                          
C                                                                       
C     SUN ELLIPTIC ORBIT FACTOR                                         
C                                                                       
50    IF(ICALL.EQ.1) GO TO 90                                           
      FORBIT=0.0                                                        
      IF(IDAY.GT.0 .AND. IDAY.LT.367) GO TO 55                          
      FORBIT = 1.0                                                      
      GO TO 90                                                          
55    CONTINUE                                                          
      DO 60 I=1,13                                                      
      IF(NDAY(I).EQ.IDAY) GO TO 80                                      
      IF(NDAY(I).GT.IDAY) GO TO 70                                      
60    CONTINUE                                                          
70    FORBIT=RAT(I-1)+(IDAY-NDAY(I-1))*(RAT(I)-RAT(I-1))/(NDAY(I)       
     1   -NDAY(I-1))                                                    
      GO TO 90                                                          
80    FORBIT=RAT(I)                                                     
90    CONTINUE                                                          
      ICALL=1                                                           
C                                                                       
C     SOLAR INTENSITY                                                   
C                                                                       
      SS = SUN(VV)*FORBIT                                               
C     CONVERT W/M-2-MICRON TO W/CM-2-MICRON                             
      IF(ISOURC. EQ. 1) SS = SS * FPHS * FALB * 2.04472E-7              
      SS=SS*.0001                                                       
      RETURN                                                            
      END                                                               
      SUBROUTINE SSGEO(IERROR,IPH,IPARM,PARM1,PARM2,PARM3,PARM4,PSIPO,G,
C    X MAXGEO)                                                          
     1  MAXGEO,MSOFF)                                                   
C                                                                       
C     THIS ROUTINE DRIVES THE LOWTRAN GEOMETRY ROUTINES REPEATEDLY      
C     TO OBTAIN THE ABSORBER AMOUNTS FROM THE SCATTERING POINTS ON      
C     THE OPTICAL PATH TO THE EXTRATERRESTRIAL SOURCE, NECESSARY        
C     TO DO THE LAYER BY LAYER SINGLE SCATTERING RADIANCE CALCULATION.  
C                                                                       
Crea0892      COMMON RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63)    
C     COMMON             WPATH(68, 63),TBBY(68)                         
Crea0892 COMMON IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12)
Crea0892      COMMON ABSC(5,47),EXTC(5,47),ASYC(5,47),VX2(47),AWCCON(5) 
      COMMON /UNLABEL/ RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63), 
     +        IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12), 
     +        ABSC(5,47),EXTC(5,47),ASYC(5,47),VX2(47),AWCCON(5)        
      COMMON /SOLS/ AH1(68),ARH(68),                                    
C    X   WPATHS(68,63),PA(68),PR(68),ATHETA(35),ADBETA(35),LJ(69),JTURN,
C    X ANGSUN,CSZEN(68)                                                 
     1  WPATHS(102,63),PA(68),PR(68),ATHETA(35),ADBETA(35),LJ(69),      
     2  JTURN,ANGSUN,CSZEN(68),TBBYS(102,12),PATMS(102,12)              
      COMMON /IFIL/ IRD,IPR,IPU,NPR,IPR1                                
      COMMON /CARD1/ MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB  
     1  ,MODTRN                                                         
      LOGICAL MODTRN                                                    
      COMMON /CARD2/ IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,VIS,WSS,WHH,   
     1    RAINRT                                                        
      COMMON /CARD3/ H1,H2,ANGLE,RANGE,BETA,REE,LEN                     
C     COMMON /CARD4/ V1,V2,DV                                           
      COMMON /CNTRL/ KMAX,MM,IKMAX,NL,ML,IKLO,ISSGEO,IMULT              
      COMMON /MODEL/ ZM(34),PM(34),TM(34),RFNDX(34),DENSTY(63,34),      
     1 CLDAMT(34),RRAMT(34),EQLWC(34),HAZEC(34)                         
      COMMON /PARMTR/ RE,DELTAS,ZMAX,IMAX,IMOD,IBMAX,IPATH              
      COMMON /CNSTNS/ PI,CA,DEG,GCAIR,BIGNUM,BIGEXP                     
      COMMON /RFRPTH/ ZP(35),PP(35),TP(35),RFNDXP(35),SP(35),           
     1    PPSUM(35),TPSUM(35),RHOPSM(35),DENP(63,35),AMTP(63,35)        
      COMMON /USRDTA/ NANGLS,ANGF(50),F(4,50)                           
      DIMENSION WPDUM(68,63),TBDUM(68),LJD(68),AZ(35),RHD(35)           
      DIMENSION PDUM(68),WDUM(63)                                       
C     MOLECULAR AND HENYEY-GREENSTEIN PHASE FUNCTIONS                   
C     NOTE; UNITS ARE (STER-1), X=COS(SCATTERING ANGLE)                 
      PFMOL(X)=.06050402+.0572197*X**2                                  
      PFHG(GG,X)=(1.0-GG**2)/(4.*PI*(1.0+GG**2-2.0*GG*X)**1.5)          
      IKLO=1                                                            
C     NPR = 1                                                           
      NPR = 2                                                           
      ISSGEO=1                                                          
C     SPECIFY THE GEOMETRICAL CONFIGURATION                             
      IF(IPARM.EQ.2) GO TO 1                                            
      THETAO=PARM1                                                      
      PHIO=PARM2                                                        
      THETAS=PARM3                                                      
      PHIS=PARM4                                                        
      GO TO 2                                                           
1     CONTINUE                                                          
      PSIO=PARM1                                                        
      DELO=PARM2                                                        
2     IF(IPARM.NE.0) GO TO 5                                            
      IF(ABS(THETAO).LT.89.5) GO TO 5                                   
      IF(THETAO.GT.0.0) GO TO 4                                         
C     OBSERVER IS AT OR NEAR THE SOUTH POLE, REMAP TO EQUATOR           
      WRITE(IPR,960)                                                    
      PSIPO=PSIPO-PHIS                                                  
      THETAO=0.0                                                        
      PHIO=0.0                                                          
      THETAS=0.0                                                        
      PHIS=90.+THETAS                                                   
      GO TO 5                                                           
4     CONTINUE                                                          
C     OBSERVER IS AT OR NEAR THE NORTH POLE, REMAP TO EQUATOR           
      WRITE(IPR,961)                                                    
      PSIPO=PHIS-PSIPO                                                  
      THETAO=0.0                                                        
      PHIO=0.0                                                          
      THETAS=0.0                                                        
      PHIS=90.-THETAS                                                   
5     CONTINUE                                                          
      WRITE(IPR,900)                                                    
C                                                                       
C     SAVE OPTICAL PATH PARAMETERS AND AMOUNTS                          
C                                                                       
      JTURND=JTURN                                                      
      IKMAXD=IKMAX+1                                                    
      H1D=H1                                                            
      H2D=H2                                                            
      ANGD=ANGLE                                                        
      RNGD=RANGE                                                        
      BETD=BETA                                                         
      BETA=0.                                                           
      LEND=LEN                                                          
      ITD=ITYPE                                                         
      IMAX=ML                                                           
      DO 10 J=1,IMAX                                                    
      AZ(J)=ZP(J)                                                       
10    RHD(J)=RELHUM(J)                                                  
      DO 11 J=1,IKMAXD                                                  
C     TBDUM(J)=TBBY(J)                                                  
      MSOFFJ=MSOFF+J                                                    
      TBDUM(J)=TBBY(MSOFFJ)                                             
      PDUM(J)=PATM(MSOFFJ)                                              
      LJD(J)=LJ(J)                                                      
      IF(LJD(J).GT.IMAX)LJD(J)=IMAX                                     
      DO 11 K=1,KMAX                                                    
C  11 WPDUM(J,K)=WPATH(J,K)                                             
   11 WPDUM(J,K)=WPATH(MSOFFJ,K)                                        
      DO 12 K=1,KMAX                                                    
   12 WDUM(K)=W(K)                                                      
      IMAX=IMAX-1                                                       
C                                                                       
C     ESTABLISH PSIO AND DELO                                           
      IARBO=0                                                           
      IF(ANGLE.LT.0.01.OR.ANGLE.GT.179.99) IARBO=1                      
C                                                                       
      IF(IPARM.NE.2)                                                    
     1CALL PSIDEL(THETAS,PHIS,THETAO,PHIO,PSIPO,PSIO,DELO,IARBO)        
C     INITIAL CONDITIONS AT THE OBSERVER                                
      IARB=IARBO                                                        
      BETAST=0.0                                                        
      IF(IARBO.EQ.0) PSIST=PSIO                                         
      ANGL0=DELO                                                        
C                                                                       
C     LOOP OVER THE POINT TO SUN PATHS TO OBTAIN AMOUNTS                
C                                                                       
      WRITE(IPR,950)                                                    
      WRITE(IPR,952)                                                    
950   FORMAT(' SCTTR SCTTR SUBTENDED  SOLAR   PATH  RELATIVE  SCTTR   MO
     1LECULAR  ')                                                       
952   FORMAT(' POINT  ALT    ANGLE   ZENITH  ZENITH AZIMUTH   ANGLE   PH
     1ASE F    '/)                                                      
      DO 130 L=IKLO,IKMAXD                                              
      IF(LEND.EQ.1.OR.JTURND.NE.0) GO TO 20                             
C     SHORT PATH, UP                                                    
      H1=AZ(L)                                                          
      RELH=RHD(L)                                                       
      THTST=ATHETA(L)                                                   
      IF(L.GE.2) BETAST=BETAST+ADBETA(L-1)                              
      GO TO 30                                                          
20    CONTINUE                                                          
C     LONG PATH, OR SHORT PATH DOWN                                     
      IF(L.GE.2) BETAST=BETAST+ADBETA(LJD(L-1))                         
      IF(L.GE.JTURND) GO TO 25                                          
      LJP1=LJD(L)+1                                                     
      H1=AZ(LJP1)                                                       
      RELH=RHD(LJP1)                                                    
      THTST=180.-ATHETA(LJP1)                                           
      GO TO 30                                                          
25    LJDL=LJD(L)                                                       
      H1=AZ(LJDL)                                                       
      RELH=RHD(LJDL)                                                    
      THTST=ATHETA(LJDL)                                                
      IF(L.EQ.JTURND)THTST=180.-ATHETA(LJDL)                            
30    CONTINUE                                                          
      AH1(L)=H1                                                         
      ARH(L)=RELH                                                       
      IF(L.LT.2) GO TO 35                                               
      PSIST=PSI(PSIO,DELO,BETAST,IARB,IARBO)                            
      ANGL0=DEL(PSIO,DELO,BETAST,IARBO)                                 
35    CORR=0.0                                                          
C     RANGE=UNKNOWN                                                     
      ITYPE=3                                                           
      DO 90 JITER=1,4                                                   
      H2 = 0.0                                                          
      ANGLE=ANGL0-CORR                                                  
      LEN=0                                                             
      IF(ANGLE.LE.90.0) GO TO 40                                        
      LEN=1                                                             
      WRITE(IPR,955) L                                                  
955   FORMAT('  SUN PATH ',I3,' PASSES THROUGH A TANGENT HEIGHT')       
40    CONTINUE                                                          
      HTOP=ZMAX                                                         
      IF(H1.LT.HTOP.OR.LEN.EQ.1) GO TO 60                               
C     SCATTERING POINT IS AT OR ABOVE HTOP AND LEN=0,                   
C     SET W(K)=0.0 AND CONTINUE                                         
      DO 50 K=1,KMAX                                                    
50    W(K)=0.0                                                          
      GO TO 100                                                         
C                                                                       
C  60 CALL GEO(IERROR,BENDNG,MAXGEO)                                    
   60 CALL GEO(IERROR,BENDNG,MAXGEO,MSOFF)                              
C                                                                       
C     IERROR=-5 IF SCATTERING POINT IS IN THE SHADE, ALSO SET W(K)=-5.0 
      IF(IERROR.NE.-5) GO TO 80                                         
      WRITE(IPR,970) L                                                  
970   FORMAT('  SCATTERING POINT ',I3,' IS IN THE SHADE')               
      DO 70 K=1,KMAX                                                    
70    W(K)=-5.0                                                         
      IERROR=0                                                          
      GO TO 100                                                         
  80  CONTINUE                                                          
C     SOLAR ZENITH BENDING CORRECTION                                   
      IF(JITER.GT.1) WRITE(IPR,917) CORR                                
      IF(ABS(CORR-BENDNG).LT..1) GO TO 100                              
90    CORR=BENDNG                                                       
100   CONTINUE                                                          
      SANGLE=SCTANG(ANGLE,THTST,PSIST,IARB)                             
      COSANG=COS(CA*SANGLE)                                             
C     LOAD MOLECULAR PHASE FUNCTION ARRAY                               
      PR(L)=PFMOL(COSANG)                                               
C     LOAD AEROSOL PHASE FUNCTION ARRAY                                 
C     HENYEY-GREENSTEIN                                                 
      IF(IPH.NE.0) GO TO 105                                            
      PA(L)=PFHG(G,COSANG)                                              
      GO TO 115                                                         
105   CONTINUE                                                          
      IF(IPH.NE.1) GO TO 110                                            
C     USER SUPPLIED PHASE FUNCTION                                      
C     DETERMINE ALTITUDE AND ANGLE INDICES                              
      M=4                                                               
      IF(H1.LE.30.) M=3                                                 
      IF(H1.LE.10.) M=2                                                 
      IF(H1.LE.2.) M=1                                                  
      DO 106 LL=1,NANGLS                                                
C                                                                       
C    INTERPOLATION CORRECTION FOR ANGLE = TO ANGLES READ IN             
C                                                                       
      IF(ANGF(LL).EQ.SANGLE) THEN                                       
      PA(L)=F(M,LL)                                                     
      GO TO 115                                                         
      END IF                                                            
      IF(ANGF(LL).GT.SANGLE) GO TO 107                                  
106   CONTINUE                                                          
107   LP1=LL                                                            
      LL=LL-1                                                           
      CALL INTERP(2,SANGLE,ANGF(LL),ANGF(LP1),PA(L),F(M,LL),F(M,LP1))   
      GO TO 115                                                         
110   CONTINUE                                                          
C     V DEPENDENT MIE DATA BASE, SAVE SCATTERING ANGLE INSTEAD          
      PA(L)=SANGLE                                                      
115   CONTINUE                                                          
C     LOAD AMOUNTS FROM W(K) INTO WPATHS(L,K)                           
      MSOFFL=MSOFF+L                                                    
      DO 120 K=1,KMAX                                                   
C 120 WPATHS(L,K)=W(K)                                                  
  120 WPATHS(MSOFFL,K)=W(K)                                             
C         WHEN THE MODERATE RESOLUTION OPTION IS USED, A CURTIS-GODSON  
C         AVERAGE PRESSURE, PATMS, AND TEMPERATURE, TBBYS, IS DEFINED   
C         FOR THE SCATTERING POINT TO EXTRATERRESTRIAL SOURCE "LAYER"   
          IF(MODTRN)THEN                                                
              DO 126 K=1,NSPEC                                          
                  PNUM=0.                                               
                  TNUM=0.                                               
                  DEN=0.                                                
                  KP=KPOINT(K)                                          
                  DO 123 IK=1,IKMAX                                     
                      MSOFFK=MSOFF+IK                                   
                      WPTH=WPATH(MSOFFK,KP)                             
                      IF(WPTH.LE.0)GOTO123                              
                      PNUM=PNUM+PATM(MSOFFK)*WPTH                       
                      TNUM=TNUM+TBBY(MSOFFK)*WPTH                       
                      DEN=DEN+WPTH                                      
  123             CONTINUE                                              
C                                                                       
C                     bug ?                                             
C           I believe that if PNUM or TNUM is 0.0, then PATMS() or      
C           TBBYS() should also be 0.0, even when DEN=0.0               
C                                                                       
                  IF (PNUM .EQ. 0.0) THEN                               
                      PATMS(MSOFFL,K) = 0.0                             
                  ELSE                                                  
                      PATMS(MSOFFL,K) = PNUM/DEN                        
                  ENDIF                                                 
                  IF (TNUM .EQ. 0.0) THEN                               
                      TBBYS(MSOFFL,K) = 0.0                             
                  ELSE                                                  
                      TBBYS(MSOFFL,K) = TNUM/DEN                        
                  ENDIF                                                 
  126         CONTINUE                                                  
Crea1092                  PATMS(MSOFFL,K)=PNUM/DEN                      
Crea1092  126         TBBYS(MSOFFL,K)=TNUM/DEN                          
          ENDIF                                                         
C     REVERSE SIGN CONVENTION (TO + E OF N) FOR PRINTED OUTPUT          
      PSIST2=-PSIST                                                     
C                                                                       
C    CSZEN IS COSINE OF SOLAR ZENTIH FOR EACH LAYER                     
C                                                                       
      CSZEN(L)=COS(ANGLE*CA)                                            
      WRITE(IPR,951)L,H1,BETAST,ANGLE,THTST,PSIST2,SANGLE,PR(L)         
951   FORMAT(1X,I3,6(1X,F7.2), (1X,E10.3))                              
130   CONTINUE                                                          
C                                                                       
C     RESTORE OPTICAL PATH AMOUNTS                                      
C                                                                       
      IKMAX=IKMAXD-1                                                    
      H1=H1D                                                            
      H2=H2D                                                            
      ANGSUN=ANGLE                                                      
      ANGLE=ANGD                                                        
      RANGE=RNGD                                                        
      BETA=BETD                                                         
      LEN=LEND                                                          
      ITYPE=ITD                                                         
      DO 160 J=1,IKMAXD                                                 
C     TBBY(J)=TBDUM(J)                                                  
      MSOFFJ=MSOFF+J                                                    
      TBBY(MSOFFJ)=TBDUM(J)                                             
      PATM(MSOFFJ)=PDUM(J)                                              
      LJ(J)=LJD(J)                                                      
      DO 160 K=1,KMAX                                                   
C 160 WPATH(J,K)=WPDUM(J,K)                                             
  160 WPATH(MSOFFJ,K)=WPDUM(J,K)                                        
      DO 170 K=1,KMAX                                                   
  170 W(K)=WDUM(K)                                                      
      NPR = NOPRNT                                                      
C                                                                       
C     FORMATS                                                           
C                                                                       
900   FORMAT(2X,//,' SINGLE SCATTERING POINT TO SOURCE PATHS ')         
917   FORMAT('  SOLAR ZENITH CORRECTION FOR BENDING = ',F10.3)          
920   FORMAT(2X,'*** CUMMULATIVE POINT-TO-SOURCE AMOUNTS ***')          
925   FORMAT(/,2X,'L                 WPATHS(L,K) K=1,7')                
930   FORMAT(1X,I2,7(2X,E10.3))                                         
931   FORMAT(8E10.3)                                                    
940   FORMAT(2X,'L                 WPATHS(L,K) K=8,15')                 
960   FORMAT(2X,'THETAO < 89.5, OBSERVER ASSUMED TO BE AT THE SOUTH     
     1POLE, PROBLEM HAS BEEN REMAPPED TO THE EQUATOR')                  
961   FORMAT(2X,'THETAO > 89.5, OBSERVER ASSUMED TO BE AT THE NORTH     
     1POLE, PROBLEM HAS BEEN REMAPPED TO THE EQUATOR')                  
      RETURN                                                            
      END                                                               
      SUBROUTINE SSRAD(IPH,IK,ITZERO,IPATH,V,SUMSSR)                    
C                                                                       
C     SUBROUTINE SSRAD PERFORMS THE LAYER BY LAYER SINGLE SCATTERING    
C     RADIANCE SUM.                                                     
C                                                                       
      COMMON /CARD1/ MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB  
     1  ,MODTRN                                                         
      LOGICAL MODTRN                                                    
      COMMON /CARD2/ IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,VIS,WSS,WHH,   
     1    RAINRT                                                        
      COMMON /CARD3/ H1,H2,ANGLE,RANGE,BETA,RE,LEN                      
Crea0892      COMMON RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63)    
C     COMMON             WPATH(68, 63),TBBY(68)                         
Crea0892 COMMON IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12)
Crea0892      COMMON ABSC(5,47),EXTC(5,47),ASYC(5,47),VX2(47),AWCCON(5) 
      COMMON /UNLABEL/ RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63), 
     +        IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12), 
     +        ABSC(5,47),EXTC(5,47),ASYC(5,47),VX2(47),AWCCON(5)        
      COMMON /SOLS/ AH1(68),ARH(68),                                    
C    X   WPATHS(68,63),PA(68),PR(68),ATHETA(35),ADBETA(35),LJ(69),JTURN,
C    X ANGSUN,CSZEN(68)                                                 
     1  WPATHS(102,63),PA(68),PR(68),ATHETA(35),ADBETA(35),LJ(69),      
     2  JTURN,ANGSUN,CSZEN(68),TBBYS(102,12),PATMS(102,12)              
      COMMON /SRAD/ TEB1,TEB2,TASP1,TASP2,TMSP1,TMSP2,TEB2SV            
      COMMON /SRADS/ PMOL1,PMOL2,PAER1,PAER2                            
      IF(ITZERO.EQ.1) GO TO 60                                          
      TX6=TX(6)                                                         
      TX7=TX(7)                                                         
      TX9=TX(9)                                                         
      TX10=TX(10)                                                       
      IF(IPATH-2) 10,20,30                                              
10    CONTINUE                                                          
CC    ISKIP = 0                                                         
C     INITIAL CONDITIONS                                                
C     SINGLE SCATTERING RADIANCE SUM                                    
      SUMSSR=0.0                                                        
C     OPTICAL PATH TRANSMITTANCES                                       
      TASP2=1.0                                                         
      TMSP2=1.0                                                         
C     L PATH TRANSMITTANCE                                              
      TEB2=TX9                                                          
C     MOLECULAR AND AEROSOL PHASE FUNCTIONS                             
      PMOL2=PR(IK)                                                      
      PAER2=PA(IK)                                                      
      IF(IPH.EQ.2)                                                      
     1 CALL PHASEF(V,IK,AH1(IK),PA(IK),ARH(IK),PAER2)                   
      RETURN                                                            
20    CONTINUE                                                          
C     CURRENT L PATH TRANSMITTANCE                                      
      TEB1=TX9                                                          
C     CURRENT MOLECULAR AND AEROSOL PHASE FUNCTIONS                     
      PMOL1=PR(IK+1)                                                    
      PAER1=PA(IK+1)                                                    
      IKK = IK + 1                                                      
      IF(IPH.EQ.2)                                                      
     1 CALL PHASEF(V,IKK,AH1(IKK),PA(IKK),ARH(IKK),PAER1)               
      RETURN                                                            
30    CONTINUE                                                          
C     CURRENT OPTICAL PATH TRANSMITTANCES                               
      IF(TX7.GT.0.)THEN                                                 
         TASP1=TX7 /TX10                                                
      ELSE                                                              
         TASP1 = 0.                                                     
      ENDIF                                                             
      TMSP1=TX6                                                         
C     SINGLE SCATTERING RADIANCE CALCULATION                            
      IF(TASP1.EQ.0.0 .OR. TMSP1.EQ.0.0 .OR.TMSP2.EQ.0.0 .OR.           
     1    TASP2.EQ.0.0) GO TO 50                                        
      XA1=PAER1*TEB1/TASP1                                              
      XA2=PAER2*TEB2/TASP2                                              
      XM1=PMOL1*TEB1/TMSP1                                              
      XM2=PMOL2*TEB2/TMSP2                                              
      DTASP=TASP2-TASP1                                                 
      DTMSP=TMSP2-TMSP1                                                 
C     COULD ADD A CHECK FOR SMALL DTMSP,DTASP AND BYPASS CALCULATION    
      SUMSSR=SUMSSR+.5*(DTASP*(XA1+XA2)+DTMSP*(XM1+XM2))                
C     RESET L AND OPTICAL PATH  TRANSMITTANCES                          
   50 CONTINUE                                                          
      TASP2=TASP1                                                       
      TEB2SV=TEB2                                                       
      TMSP2=TMSP1                                                       
      TEB2=TEB1                                                         
C     RESET PHASE FUNTION VALUES                                        
      PAER2=PAER1                                                       
      PMOL2=PMOL1                                                       
60    CONTINUE                                                          
      RETURN                                                            
      END                                                               
      SUBROUTINE STDMDL                                                 
C***********************************************************************
C     THIS SUBROUTINE LOADS ONE OF THE 6 STANDARD ATMOSPHERIC PROFILES  
C     INTO COMMON/MODEL/ AND CALCULATES THE DENSITIES OF THE            
C     VARIOUS ABSORBING GASES AND AEROSOLS                              
C***********************************************************************
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1                                 
      COMMON /CARD1/ MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB  
     1  ,MODTRN                                                         
      LOGICAL MODTRN                                                    
      COMMON /CARD2/ IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,VIS,WSS,WHH,   
     1    RAINRT                                                        
      COMMON /CARD3/ H1,H2,ANGLE,RANGE,BETA,RE,LEN                      
C     COMMON /CARD4/ V1,V2,DV                                           
      COMMON/CARD4/IV1,IV2,IDV,IFWHM                                    
       COMMON /MDATA/  Z(50),P(50),T(50),WH(50),WCO2(50),WO(50),        
     X WN2O(50),WCO(50),WCH4(50),WO2(50),                               
     X CLD(50,7),RR(50,7)                                               
      COMMON /MDATA1/ WNO(50),WSO2(50),WNO2(50),WNH3(50),WAIR(50)       
      COMMON /CNSTNS/ PI,CA,DEG,GCAIR,BIGNUM,BIGEXP                     
      COMMON /CNTRL/ KMAX,M,IKMAX,NL,ML,IKLO,ISSGEO,IMULT               
      COMMON/MODEL/   ZM(34),PM(34),TM(34),RFNDX(34),DENSTY(63,34),     
     1 CLDAMT(34),RRAMT(34),EQLWC(34),HAZEC(34)                         
Crea0892      COMMON RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63)    
C     COMMON             WPATH(68, 63),TBBY(68)                         
Crea0892 COMMON IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12)
Crea0892      COMMON ABSC(5,47),EXTC(5,47),ASYM(5,47),VX2(47),AWCCON(5) 
      COMMON /UNLABEL/ RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63), 
     +        IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12), 
     +        ABSC(5,47),EXTC(5,47),ASYM(5,47),VX2(47),AWCCON(5)        
C     XLOSCH = LOSCHMIDT'S NUMBER,MOLECULES CM-2,KM-1                   
      DATA PZERO /1013.25/,TZERO/273.15/,XLOSCH/2.6868E24/              
C     RV GAS CONSTANT FOR WATER IN MB/(GM M-3 K)                        
C     CON CONVERTS WATER VAPOR FROM GM M-3 TO MOLECULES CM-2 KM-1       
      DATA RV/4.6152E-3/,CON/3.3429E21/                                 
C     CONSTANTS FOR INDEX OF REFRACTION, AFTER EDLEN, 1965              
      DATA A0/83.42/,A1/185.08/,A2/4.11/,                               
     X     B1/1.140E5/,B2/6.24E4/,C0/43.49/,C1/1.70E4/                  
C                                                                       
C     F(A) IS SATURATED WATER WAPOR DENSITY AT TEMP T,A=TZERO/T         
C     F(A)=EXP(18.9766-14.9595*A-2.43882*A*A)*A                         
C                                                                       
C     CONJOE=(1/XLOSCH)*1.E5*1.E-6 WITH                                 
C        1.E5 ARISING FROM CM TO KM CONVERSION AND                      
C        1.E-6  "       "  PPMV                                         
C                                                                       
      CONJOE = 3.7194E-21                                               
C                                                                       
C     H20 CONTINUUM IS STORED AT 296 K RHZERO IS AIR DENSITY AT 296 K   
C     IN UNITS OF LOSCHMIDT'S                                           
C                                                                       
      RHZERO=(273.15/296.0)                                             
C                                                                       
C     LOAD ATMOSPHERE PROFILE INTO /MODEL/                              
      DO 25 I=1,ML                                                      
      PM(I)=P(I)                                                        
      TM(I)=T(I)                                                        
      PP=PM(I)                                                          
      TT=TM(I)                                                          
      PSS=PP/PZERO                                                      
      TSS=TZERO/TT                                                      
      F1=(PP/PZERO)/(TT/TZERO)                                          
      F2=(PP/PZERO)*SQRT(TZERO/TT)                                      
      WTEMP=WH(I)                                                       
C     SCALED H2O DENSITY                                                
      IF (ZM(I).GT.2.0) GO TO 15                                        
      TS = TZERO / TT                                                   
15    CONTINUE                                                          
C     UNIFORMALLY MIXED GASES DENSITIES                                 
C     ORIGINAL TRANSMITTANCE MODEL FOR CO2+ HAS BEEN REPLACED.          
C     DENSTY(2,I)=F1*F2**0.75                                           
C     UV OZONE                                                          
C     THE UNIT FOR O3 HAS BEEN CHANGED FROM G/M**3 TO PPMV.             
      DENSTY(8,I)= CONJOE   *WAIR(I)    *WO(I)                          
C     IR OZONE                                                          
C     ORIGINAL TRANSMITTANCE MODEL HAS BEEN REPLACED.                   
C     DENSTY(3,I)= DENSTY(8,I)*F2**0.4                                  
C     N2 CONTINUUM                                                      
      DENSTY(4,I)=0.781*F1*F2                                           
C     SELF BROADENED WATER                                              
      RHOAIR = F1                                                       
      RHOH2O = CON *WTEMP/XLOSCH                                        
      RHOFRN = RHOAIR - RHOH2O                                          
      DENSTY(5,I)= XLOSCH*RHOH2O**2/RHZERO                              
C     FOREIGN BROADENED                                                 
      DENSTY(10,I)= XLOSCH*RHOH2O*RHOFRN/RHZERO                         
C     MOLECULAR SCATTERING                                              
      DENSTY(6,I) = F1                                                  
C     RELITIVE HUMIDITY WEIGHTED BY BOUNDRY LAYER AEROSOL (0 TO 2 KM)   
C                                                                       
C     LOG WEIGHTING OF REL HUMIDITY                                     
C                                                                       
      RELH = RELHUM(I)                                                  
      IF(RELHUM(I). GT.99.) RELH = 99.                                  
      RHLOG = ALOG(100. - RELH)                                         
C     DENSTY(15,I)=RELHUM(I)*DENSTY(7,I)                                
      DENSTY(15,I)=RHLOG    *DENSTY(7,I)                                
C     DENSITY (9,I) TEMP DEP OF WATER SET IN GEO                        
      DENSTY(9,I)=0.                                                    
C     IF(ICH(1).GT.7) DENSTY(15,I)=RELHUM(I)*DENSTY(12,I)               
      IF(ICH(1).GT.7) DENSTY(15,I)=RHLOG    *DENSTY(12,I)               
C     HNO3 IN ATM * CM /KM                                              
C     NEW PROFILE IS IN UNIT OF PART PER 10**6 BY VOLUME                
C     DENSTY(11,I)= F1* HMIX(I)*1.0E-4                                  
C     IF(MODEL.EQ.7) DENSTY(11,I)=F1*HSTOR(I)*1.0E-4                    
                     DENSTY(11,I)=F1*HSTOR(I)*1.0E-4                    
C                                                                       
C      O2 TEMP DEP                                                      
C                                                                       
      DT = TT  - 220.                                                   
      WO2D       = CONJOE   *WAIR(I)    *WO2(I)  * PSS                  
C                                                                       
C     DT CAN BE NEGATIVE                                                
C     EFFECTIVE DT CALCULATED IN TRANS                                  
C                                                                       
      DENSTY(1,I)  = WO2D * TT                                          
      DENSTY(2,I)  = WO2D * DT * DT                                     
      DENSTY(63,I) = WO2D                                               
C                                                                       
C   NEW  MICROWAVE TEMP  RAIN                                           
C                                                                       
      DENSTY(3,I) = 0.                                                  
      DENSTY(61,I)= 0.                                                  
      DENSTY(62,I)= 0.                                                  
      IF(RRAMT(I) .NE. 0.) THEN                                         
           DENSTY(3,I) = RRAMT(I)**(.63)                                
           DENSTY(61,I)= DENSTY(3,I) * T(I)                             
           DENSTY(62,I)= 1.                                             
      ENDIF                                                             
C                                                                       
C       CIRRIUS CLOUD                                                   
       IF(ICLD.LT.18) DENSTY(16,I) = 0.                                 
C                                                                       
C     WHEN MODERATE RESOLUTION OPTION IS USED, ACTUAL DENSITIES ARE     
C     NEEDED.  FOR ALL SPECIES, DENSITIES ARE STORED IN AMAGATS-CM/KM   
C     WHERE 1 AMAGAT = 1 ATM AT STP.  FOR WATER, THE G/CM2 VALUE,       
C     .1*WH(I), IS CONVERTED TO AMAGAT-CM BY MULTIPLYING BY             
C     RT/(MOL WT), WHICH EQUALS 1244.2 CM3-ATM/GM/K.                    
C                                                                       
      CONO2 = CONJOE   *WAIR(I)  *WO2 (I)                               
      IF(MODTRN)THEN                                                    
          DENSTY(17,I)=WH(I)*124.42                                     
          DENSTY(18,I) =0                                               
          DENSTY(19,I) =0                                               
          DENSTY(20,I) =0                                               
          DENSTY(21,I) =0                                               
          DENSTY(22,I) =0                                               
          DENSTY(23,I) =0                                               
          DENSTY(24,I) =0                                               
          DENSTY(25,I) =0                                               
          DENSTY(26,I) =0                                               
          DENSTY(27,I) =0                                               
          DENSTY(28,I) =0                                               
          DENSTY(29,I) =0                                               
          DENSTY(30,I) =0                                               
          STORE=CONJOE*WAIR(I)                                          
          DENSTY(31,I)=STORE*WO(I)                                      
          DENSTY(32,I) =0                                               
          DENSTY(33,I) =0                                               
          DENSTY(34,I) =0                                               
          DENSTY(35,I) =0                                               
          DENSTY(36,I)=STORE*WCO2(I)                                    
          DENSTY(37,I) =0                                               
          DENSTY(38,I) =0                                               
          DENSTY(39,I) =0                                               
          DENSTY(40,I) =0                                               
          DENSTY(41,I) =0                                               
          DENSTY(42,I) =0                                               
          DENSTY(43,I) =0                                               
          DENSTY(44,I)=STORE*WCO(I)                                     
          DENSTY(45,I) =0                                               
          DENSTY(46,I)=STORE*WCH4(I)                                    
          DENSTY(47,I)=STORE*WN2O(I)                                    
          DENSTY(48,I) =0                                               
          DENSTY(49,I) =0                                               
          DENSTY(50,I)=STORE*WO2(I)                                     
          DENSTY(51,I) =0                                               
          DENSTY(52,I)=STORE*WNH3(I)                                    
          DENSTY(53,I) =0                                               
          DENSTY(54,I)=STORE*WNO(I)                                     
          DENSTY(55,I)=STORE*WNO2(I)                                    
          DENSTY(56,I)=STORE*WSO2(I)                                    
          DENSTY(57,I) =0                                               
      ELSE                                                              
C  --- FOR H2O -----                                                    
      CONH2O=WH(I)  *.1                                                 
      DENSTY(17,I)=CONH2O*PSS**0.9810*TSS**( 0.3324)                    
      DENSTY(18,I)=CONH2O*PSS**1.1406*TSS**(-2.6343)                    
      DENSTY(19,I)=CONH2O*PSS**0.9834*TSS**(-2.5294)                    
      DENSTY(20,I)=CONH2O*PSS**1.0443*TSS**(-2.4359)                    
      DENSTY(21,I)=CONH2O*PSS**0.9681*TSS**(-1.9537)                    
      DENSTY(22,I)=CONH2O*PSS**0.9555*TSS**(-1.5378)                    
      DENSTY(23,I)=CONH2O*PSS**0.9362*TSS**(-1.6338)                    
      DENSTY(24,I)=CONH2O*PSS**0.9233*TSS**(-0.9398)                    
      DENSTY(25,I)=CONH2O*PSS**0.8658*TSS**(-0.1034)                    
      DENSTY(26,I)=CONH2O*PSS**0.8874*TSS**(-0.2576)                    
      DENSTY(27,I)=CONH2O*PSS**0.7982*TSS**( 0.0588)                    
      DENSTY(28,I)=CONH2O*PSS**0.8088*TSS**( 0.2816)                    
      DENSTY(29,I)=CONH2O*PSS**0.6642*TSS**( 0.2764)                    
      DENSTY(30,I)=CONH2O*PSS**0.6656*TSS**( 0.5061)                    
C  --- FOR O3                                                           
      CONO3 = CONJOE   *WAIR(I)    *WO(I)                               
      DENSTY(31,I)=CONO3 *PSS**0.4200*TSS**( 1.3909)                    
      DENSTY(32,I)=CONO3 *PSS**0.4221*TSS**( 0.7678)                    
      DENSTY(33,I)=CONO3 *PSS**0.3739*TSS**( 0.1225)                    
      DENSTY(34,I)=CONO3 *PSS**0.1770*TSS**( 0.9827)                    
      DENSTY(35,I)=CONO3 *PSS**0.3921*TSS**( 0.1942)                    
C  --- FOR CO2                                                          
      CONCO2= CONJOE   *WAIR(I)  *WCO2(I)                               
      DENSTY(36,I)=CONCO2*PSS**0.6705*TSS**(-2.2560)                    
      DENSTY(37,I)=CONCO2*PSS**0.7038*TSS**(-5.0768)                    
      DENSTY(38,I)=CONCO2*PSS**0.7258*TSS**(-1.6740)                    
      DENSTY(39,I)=CONCO2*PSS**0.6982*TSS**(-1.8107)                    
      DENSTY(40,I)=CONCO2*PSS**0.8867*TSS**(-0.5327)                    
      DENSTY(41,I)=CONCO2*PSS**0.7883*TSS**(-1.3244)                    
      DENSTY(42,I)=CONCO2*PSS**0.6899*TSS**(-0.8152)                    
      DENSTY(43,I)=CONCO2*PSS**0.6035*TSS**( 0.6026)                    
C  --- FOR CO                                                           
      CONCO = CONJOE   *WAIR(I)  *WCO (I)                               
      DENSTY(44,I)=CONCO *PSS**0.7589*TSS**( 0.6911)                    
      DENSTY(45,I)=CONCO *PSS**0.9267*TSS**( 0.1716)                    
C  --- FOR CH4                                                          
      CONCH4= CONJOE   *WAIR(I)  *WCH4(I)                               
      DENSTY(46,I)=CONCH4*PSS**0.7139*TSS**(-0.4185)                    
C  --- FOR N2O                                                          
      CONN2O= CONJOE   *WAIR(I)  *WN2O(I)                               
      DENSTY(47,I)=CONN2O*PSS**0.3783*TSS**( 0.9399)                    
      DENSTY(48,I)=CONN2O*PSS**0.7203*TSS**(-0.1836)                    
      DENSTY(49,I)=CONN2O*PSS**0.7764*TSS**( 1.1931)                    
C  --- FOR O2                                                           
      CONO2 = CONJOE   *WAIR(I)  *WO2 (I)                               
      DENSTY(50,I)=CONO2 *PSS**1.1879*TSS**( 2.9738)                    
      DENSTY(51,I)=CONO2 *PSS**0.9353*TSS**( 0.1936)                    
C  --- FOR NH3                                                          
      CONNH3= CONJOE   *WAIR(I)  *WNH3(I)                               
      DENSTY(52,I)=CONNH3*PSS**0.8023*TSS**(-0.9111)                    
      DENSTY(53,I)=CONNH3*PSS**0.6968*TSS**( 0.3377)                    
C  --- FOR NO                                                           
      CONNO = CONJOE   *WAIR(I)  *WNO (I)                               
      DENSTY(54,I)=CONNO *PSS**0.5265*TSS**(-0.4702)                    
C  --- FOR NO2                                                          
      CONNO2= CONJOE   *WAIR(I)  *WNO2(I)                               
      DENSTY(55,I)=CONNO2*PSS**0.3956*TSS**(-0.0545)                    
C  --- FOR SO2                                                          
      CONSO2= CONJOE   *WAIR(I)  *WSO2(I)                               
      DENSTY(56,I)=CONSO2*PSS**0.2943*TSS**( 1.2316)                    
      DENSTY(57,I)=CONSO2*PSS**0.2135*TSS**( 0.0733)                    
      ENDIF                                                             
C***********************************************************************
C   HERZBERG CONTINUUM PRESSURE DEPENDENCE CALCULATION, SHARDANAND 1977 
C      AND   YOSHINO ET AL 1988                                         
C                                                                       
C     OXYGEN                                                            
C                                                                       
C      ********       ERRATA JULY 25                                    
C     DENSTY(58,I)=(1.+.73*F1)*CONO2                                    
      DENSTY(58,I)=(1.+.83*F1)*CONO2                                    
C       ********      END  ERRATA                                       
      DENSTY(59,I) = 0.                                                 
      DENSTY(60,I) = 0.                                                 
C***********************************************************************
C                                                                       
C     RFNDX = REFRAXTIVITY 1-INDEX OF REFRACTION                        
C     FROM EDLEN, 1966                                                  
      PPW=RV*WTEMP*TT                                                   
C     AVW=0.5*(V1+V2)                                                   
      AVW=0.5*(IV1+IV2)                                                 
      RFNDX(I)=((A0+A1/(1.-(AVW/B1)**2) +A2/(1.0-(AVW/B2)**2))*         
     X (PP/PZERO)*(TZERO+15.0)/TT-(C0-(AVW/C1)**2)*PPW/PZERO)*1.E-6     
25    CONTINUE                                                          
      IF(NPR.EQ.1) GO TO 40                                             
      WRITE(IPR,910)                                                    
      DO 30 I=1,ML                                                      
       WRITE(IPR,905) I,ZM(I),PM(I),TM(I),(DENSTY(K,I),K=4,6),RFNDX(I), 
     X DENSTY(8,I),DENSTY(58,I)                                         
30    CONTINUE                                                          
      WRITE (IPR,915)                                                   
      DO 35 I=1,ML                                                      
      WRITE(IPR,905) I,ZM(I),PM(I),TM(I),(DENSTY(K,I),K=10,11),         
     X DENSTY(7,I),DENSTY(12,I),DENSTY(13,I),DENSTY(14,I),DENSTY(15,I), 
     X DENSTY(16,I),RELHUM(I)                                           
35    CONTINUE                                                          
      IF(MODTRN)THEN                                                    
          WRITE(IPR,'(1H1,/22H  ATMOSPHERIC PROFILES,//11H   I      Z,  
     1      51H       P       T      H2O      O3       CO2      CO,     
     2      55H       CH4      N2O      O2       NH3      NO       NO2, 
     3      9H      SO2,/42H         (KM)    (MB)    (K)  (           , 
     4      55H                      ATM CM/KM                        , 
     5      30H                             ))')                        
      ELSE                                                              
      WRITE(IPR,920)                                                    
      ENDIF                                                             
      DO 39 I = 1,ML                                                    
      WRITE(IPR,906)I,ZM(I),PM(I),TM(I),DENSTY(17,I),DENSTY(31,I),      
     + DENSTY(36,I),DENSTY(44,I),DENSTY(46,I),DENSTY(47,I),             
     + DENSTY(50,I),DENSTY(52,I),DENSTY(54,I),DENSTY(55,I),DENSTY(56,I) 
   39 CONTINUE                                                          
40    CONTINUE                                                          
      RETURN                                                            
  905 FORMAT (I4,0PF9.2,F9.3,F7.1,1X,1P9E10.3)                          
  906 FORMAT (I4,0PF9.2,F9.3,F7.1,1X,1P11E9.2)                          
910   FORMAT('1',/,'  ATMOSPHERIC PROFILES',//,                         
     1 3X,'I',T10,'Z',T18,'P',T26,'T',                                  
     2 T35,'N2',T44,'CNTMSLF',T52,'MOL SCAT',T65,'N-1', T73,            
     3 'O3 (UV)',T82,'O2 (UV)',/,                                       
     4 T9,'(KM)',T17,'(MB)',T25,'(K)',                                  
     5 T40,'(MOL/CM2 KM)',T55,'(-)',T65,'(-)',T 70,                     
     6 '(ATM CM/KM)',T82,'(ATM CM/KM)',/)                               
915   FORMAT('1',/,'  ATMOSPHERIC PROFILES',//,                         
     1 3X,'I',T10,'Z',T18,'P',T26,'T',T33,'CNTMFRN',T45,'HNO3',         
     2 T53,'AEROSOL 1',T63,'AEROSOL 2', T73,'AEROSOL 3',T83,            
     3 'AEROSOL 4',T93,'AER1*RH',T103,'CIRRUS',T118,'RH'/,              
     4 T9,'(KM)',T17,'(MB)',T25,'(K)',T31,'MOL/CM2 KM',T42,             
     5 'ATM CM/KM',T54,'(-)',T64,'(-)',T74,'(-)',T84,'(-)',T94,         
     6 '(-)',T104,'(-)',T113,'(PERCNT)',/)                              
  920 FORMAT('1',/,'  ATMOSPHERIC PROFILES',//,                         
     + '  (IF A MOLECULE HAS MORE THAN ONE BAND, THEN THE DATA FOR THE',
     + ' FIRST BAND ARE SHOWN.)'//                                      
     1 '   I      Z       P       T      H2O      O3       CO2',        
     2 '      CO       CH4      N2O      O2       NH3      NO ',        
     3 '      NO2      SO2'/                                            
     4 '         (KM)    (MB)    (K) G/CM**2/KM  (            ',        
     5 '          ATM CM/KM                                   ',        
     6 '                  )')                                           
      END                                                               
      SUBROUTINE SUBSOL(THETAS,PHIS,TIME,IDAY)                          
C                                                                       
C     SUBROUTINE SUBSOL CALCULATES THE SUBSOLAR POINT ANGLES            
C     THETAS AND PHIS BASED UPON IDAY AND TIME. SINCE EACH              
C     YEAR IS 365.25 DAYS LONG THE EXACT VALUE OF THE DECLINATION       
C     ANGLE CHANGES FROM YEAR TO YEAR.  FOR PRECISE VALUES CONSULT      
C     ' THE AMERICAN EPHEMERIS AND NAUTICAL ALMANAC' PUBLISHED YEARLY   
C     BY THE U.S. GOVT. PRINTING OFFICE.  ALSO, THE SOLAR POSITION      
C     IS CHARACTERIZED BY 25 POINTS BELOW; THIS SHOULD PREDICT THE SUBSO
C     ANGLES WITHIN ONE DEGREE.  FOR INCREASED ACCURACY ADD MORE DATA   
C     POINTS                                                            
C                                                                       
C     THE EQUATION OF TIME, EQT, IS IN MINUTES                          
C     THE DECLINATION ANGLE, DEC IS IN DEGREES                          
C                                                                       
      COMMON /MODEL/ ZM(34),PM(34),TM(34),RFNDX(34),DENSTY(63,34),      
     1 CLDAMT(34),RRAMT(34),EQLWC(34),HAZEC(34)                         
      COMMON /IFIL/ IRD,IPR,IPU,NPR,IPR1                                
      DIMENSION NDAY(25),EQT(25),DEC(25)                                
      DATA NDAY /1,9,21,32,44,60,91,121,141,152,160,172,182,            
     1 190,202,213,244,274,305,309,325,335,343,355,366/                 
      DATA DEC /-23.07,-22.22,-20.08,-17.32,-13.62,-7.88,4.23,          
     1 14.83, 20.03,21.95,22.87,23.45,23.17,22.47,20.63,18.23,8.58,     
     2 -2.88,-14.18,-15.45,-19.75,-21.68,-22.75,-23.43,-23.07/          
      DATA EQT /-3.23,-6.83,-11.17,-13.57,-14.33,-12.63,-4.2,           
     1 2.83,3.57,2.45,1.10,-1.42,-3.52,-4.93,-6.25,-6.28,-0.25,         
     2 10.02,16.35,16.38,14.3,11.27,8.02,2.32,-3.23/                    
      IF(IDAY.LT.1.OR.IDAY.GT.366)  GO TO 900                           
      IF(TIME.LT.0.0.OR.TIME.GT.24.0)  GO TO 910                        
      DO 10 I=1,25                                                      
      IF(NDAY(I).EQ.IDAY) GO TO 30                                      
10    IF(NDAY(I).GT.IDAY) GO TO 20                                      
20    I=I-1                                                             
      EQTIME=EQT(I)+(EQT(I+1)-EQT(I))*(IDAY-NDAY(I))/(NDAY(I+1)-NDAY(I))
      DECANG=DEC(I)+(DEC(I+1)-DEC(I))*(IDAY-NDAY(I))/(NDAY(I+1)-NDAY(I))
      GO TO 40                                                          
30    EQTIME=EQT(I)                                                     
      DECANG=DEC(I)                                                     
40    THETAS=DECANG                                                     
      EQTIME=EQTIME/60.0                                                
      PHIS=15.0*(TIME+EQTIME)-180.0                                     
      IF(PHIS.LT.0.0) PHIS=PHIS+360.0                                   
      RETURN                                                            
900   WRITE(IPR,901) IDAY                                               
901   FORMAT(' FROM SUBSOL - IDAY OUT OF RANGE, IDAY=',I6)              
      STOP                                                              
910   WRITE(IPR,902) TIME                                               
902   FORMAT(' FROM SUBSOL - TIME OUT OF RANGE, TIME=',E12.5)           
      STOP                                                              
      END                                                               
      FUNCTION   SUN(V)                                                 
C                                                                       
C        EVALUATES THE EXTRA-TERRESTRIAL SOLAR IRRADIANCE               
C                                                                       
C        INPUT:  V  =  FREQUENCY   (CM-1)                               
C                VALID RANGE   0 TO 57490 (CM-1)                        
C                    (EQUIVALENT TO WAVELENGTHS > 0.174 MICROMETERS)    
C                                                                       
C        OUTPUT:  SUN  =  SOLAR IRRADIANCE  (WATTS M-2 MICROMETER-1)    
C                                                                       
C        WRITES A WARNING MESSAGE TO TAPE6  &  RETURNS  SUN = 0         
C            IF THE INPUT FREQUENCY IS OUT OF RANGE                     
C                                                                       
C       USES  BLOCK DATA SOLAR   WHICH CONTAINS THE VALUES FOR SOLARA + 
C                                                                       
      COMMON /SUNDAT/ SOLARA(1440), SOLARB(2910)                        
      DATA  A, B / 3.50187E-13, 3.93281 /                               
C                                                                       
C       WM, W0, W1, W2  ARE STATEMENT FUNCTIONS USED BY                 
C            THE 4 POINT LAGRANGE INTERPOLATION                         
      WM(P) = P*(P - 1)*(P - 2)                                         
      W0(P) = 3*(P**2 - 1)*(P - 2)                                      
      W1(P) = 3*P*(P + 1)*(P - 2)                                       
      W2(P) = P*(P**2 - 1)                                              
C                                                                       
C           IF  V  IS TOO SMALL,  WRITE WARNING  +  RETURN SUN = 0      
      IF(V .LT. 0.0) THEN                                               
        SUN = 0.0                                                       
        WRITE(6, 900) V                                                 
        RETURN                                                          
C                                                                       
      ELSEIF( V .GE. 0.0  .AND.  V .LT. 100.0 ) THEN                    
C         FOR LOW FREQUENCIES USE A POWER LAW APPROXIMATION             
        SUN = A*V**B                                                    
        RETURN                                                          
C                                                                       
      ELSEIF( V .GE. 100.0  .AND.  V .LT. 28420.0 ) THEN                
C         USE  4 POINT INTERPOLATION  ON  ARRAY  SOLARA                 
C               WHICH IS AT  20 CM-1  SPACING  FROM 0 TO 28720 CM-1     
        I = 1 + INT(V/20.0)                                             
        P = MOD(V, 20.0)/20.0                                           
        SUN = ( W2(P)*SOLARA(I+2) - W1(P)*SOLARA(I+1) +                 
     +              W0(P)*SOLARA(I) - WM(P)*SOLARA(I-1) ) / 6           
        RETURN                                                          
C                                                                       
      ELSEIF( V .GE. 28420.0  .AND.  V .LE. 57470.0 ) THEN              
C         USE  4 POINT INTERPOLATION  ON  ARRAY  SOLARB                 
C             WHICH IS AT  10 CM-1  SPACING  FROM 28400 TO 57490 CM-1   
        I = INT(V/10.0) - 2839                                          
        P = MOD(V, 10.0)/10.0                                           
        SUN = ( W2(P)*SOLARB(I+2) - W1(P)*SOLARB(I+1) +                 
     +              W0(P)*SOLARB(I) - WM(P)*SOLARB(I-1) ) / 6           
        RETURN                                                          
C                                                                       
      ELSEIF( V .GT. 57470.0 ) THEN                                     
C           IF  V  IS TOO LARGE,  WRITE WARNING  +  RETURN SUN = 0      
        SUN = 0.0                                                       
        WRITE(6, 900) V                                                 
        RETURN                                                          
C                                                                       
      ENDIF                                                             
C                                                                       
      RETURN                                                            
  900 FORMAT('0 *****  WARNING - INPUT FREQUENCY = ', 1PG12.5, 'CM-1',  
     +  /, '   OUTSIDE VALID RANGE OF 0 TO 57470 CM-1    *******', / )  
      END                                                               
Crea0892      FUNCTION   TAB(I,J,K,WC)                                  
      FUNCTION TAB(II,JJ,KK,WC)                                         
C********************************************************************** 
C                                                                       
C          THE INTERNAL DATA:                                           
C                                                                       
      DIMENSION A(9,6,9),ALPHA(9,6,9),A1(5),A2(5),ALPHA1(5),            
     *    MAXI(6,9)                                                     
C                                                                       
C          A(1,J,K),J=1,3 = POWER LAW COEFFICIENT FOR THE ABSORPTION    
C            COEFICIENT FOR THE MARSHALL-PALMER WATER DROP SIZE         
C            DISTRIBUTION FOR TEMPERATURE=10.*(J-2) AND FREQUENCY=FR(K) 
C          A(2,J,K),J=1,3 = THE SAME FOR THE EXTINCTION COEFFICIENT     
C          A(I,J,K),J=1,3,I=3,9 = THE SAME FOR THE LEGENDRE             
C                                      COEFFICIENT #I-2                 
C          A(I,4,K),I=1,9 = THE SAME AS A(I,2,K), BUT FOR ICE           
C                             (NO TEMPERATURE DEPENDENCE)               
C          A(I,5,K),I=1,9 = THE SAME AS A(I,2,K), BUT FOR THE BEST DROP 
C            SIZE DISTRIBUTION (NO TEMPRATURE DEPENDENCE)               
C          A(I,6,K),I=1,9 = THE SAME AS A(I,5,K), BUT FOR ICE           
C          ALPHA(I,J,K) = THE POWER EXPONENET CORRESPONDING TO A(I,J,K) 
C          MAXI(J,K): TAB(I,J,K,WC)=0. IF I.GT.MAXI(J,K)                
C          A1, A2 AND ALPHA1 = THE POWER-LINEAR LAW COEFFICIENTS AND    
C                 EXPONENT FOR THE EXCEPTIONAL CASES                    
C                                                                       
C          THE FORMULA:                                                 
C                                                                       
C          SC=A*WC**ALPHA IF ABS(A).GT.10.**-8,                         
C          SC=A1*WC**ALPHA1+A2*WC IF ABS(A).LE.10.**-8,                 
C                    A1, A2 AND ALPHA1 ARE INDEXED BY INT(ALPHA)        
C                                                                       
C          THE BLOCK-DATA SECTION                                       
C                                                                       
      DATA ((MAXI(M,N),M=1,6),N=1,9)/4*6,14*7,36*9/                     
      DATA (A1(L),A2(L),ALPHA1(L),L=1,5)/.611,-.807,1.18,.655,-.772,1.08
     * ,.958,-1.,.99,.538,-.696,1.27,1.58,-1.50,1.02/                   
      DATA ((A(L,M,1),M=1,6),L=1,7)/.284,.285,.294,.001336,.36,.00146,  
     *.363,.365,.375,.0148,.528,.0317,3*0.,.3147,0.,.438,               
     *.4908,.487,.482,.528,.478,.538,3*.0350,.0470,.0482,.0647,         
     *.002,.00205,.00208,.00285,.0037,.0048,4*0.,.00021,.00016/         
      DATA ((ALPHA(L,M,1),M=1,6),L=1,7)/1.214,1.233,1.25,1.035,1.22,    
     *1.076,1.291,1.31,1.323,1.63,1.334,1.74,3.1,2.1,1.1,5.005,4.1,.555,
     *-.009,-.013,-.016,.028,-.019,.031,.398,.399,.4,.473,.461,.525,    
     *1.06,.97,1.03,1.03,1.18,1.16,4*0.,1.3,1.3/                        
      DATA ((A(L,M,2),M=1,6),L=1,7)/.8,.77,.73,.00344,.76,.0043,        
     *1.28,1.27,1.24,.162,1.43,.332,.254,.172,0.,.93,.32,1.29,          
     *.5,.486,.4706,.69,.481,.8,.0965,.0936,.09,.159,.151,.234,         
     *.0234,.0228,.0221,.034,.057,.065,2*.0037,.0035,.005,.011,.0106/   
      DATA ((ALPHA(L,M,2),M=1,6),L=1,7)/2*1.1,1.09,1.13,1.02,1.19,      
     *2*1.20,1.15,1.66,1.14,1.7,.29,.42,5.1,.39,.66,.44,                
     *0.,-.01,-.0199,.12,-.01,.17,.386,.378,.2,.48,.485,.56,            
     *.92,.91,.90,.97,1.15,1.13,1.32,1.26,1.32,1.41,1.69,1.67/          
      DATA ((A(L,M,3),M=1,6),L=1,7)/1.11,1.07,1.02,.0059,.92,.00775,    
     *1.88,1.89,1.87,.43,1.80,.77,.512,.425,.336,1.25,.677,1.55,        
     *.561,.534,.506,.867,.6,1.07,.175,.165,.156,.300,.292,.49,         
     *.066,.064,.061,.105,.16,.22,                                      
     *.0169,.0162,.0156,.023,.055,.056/                                 
      DATA ((ALPHA(L,M,3),M=1,6),L=1,7)/2*1.01,1.,1.18,.92,1.23,        
     *3*1.1,1.58,1.,1.57,.264,.320,.445,.27,.416,.27,                   
     *.048,.033,.018,.168,.09,.224,.429,.417,.402,.501,.528,.62,        
     *2*.83,.82,.9,1.01,1.11,1.22,1.21,1.2,1.23,1.51,1.53/              
      DATA ((A(L,M,4),M=1,6),L=1,9)/1.51,1.49,1.44,.0163,1.12,.0194,    
     *2.73,2.77,2.79,1.61,2.18,1.9,1.14,1.054,.961,1.57,1.36,1.66,      
     *.99,.93,.87,1.31,1.33,1.63,.594,.557,.516,.77,1.02,1.16,          
     *.352,.334,.315,.43,.73,.8,.171,.163,.154,.18,.47,.43,             
     *.084,.081,.077,.106,.29,.32,.037,.036,.034,.029,.16,.11/          
      DATA ((ALPHA(L,M,4),M=1,6),L=1,9)/.87,.86,.85,1.181,.79,1.16,     
     *.93,.92,.91,1.3,.84,1.18,.188,.21,.24,.09,.21,.06,                
     *2*.2,.19,.175,.275,.2,2*.461,.459,.39,.51,.41,                    
     *2*.66,.65,.58,.70,.64,2*.94,.93,.84,1.03,1.01,                    
     *3*1.22,1.09,1.37,1.4,1.58,1.56,1.54,1.5,1.8,1.9/                  
      DATA ((A(L,M,5),M=1,6),L=1,9)/1.55,1.53,1.49,.0194,1.14,.0225,    
     *2.82,2.87,2.90,1.91,2.22,2.,1.266,1.184,1.093,1.60,1.48,1.65,     
     *1.13,1.07,1.,1.4,1.51,1.69,.74,.698,.649,.87,1.24,1.23,           
     *.465,.444,.418,.52,.94,.91,.248,.238,.225,.24,.65,.53,            
     *.132,.128,.122,.15,.43,.47,.065,.063,.06,.045,.26,.16/            
      DATA ((ALPHA(L,M,5),M=1,6),L=1,9)/.85,.84,.83,1.168,.78,1.15,     
     *.9,.89,.88,1.23,.82,1.11,.172,.191,.216,.071,.181,.04,            
     *.222,.221,.22,.165,.274,.17,.452,.454,.456,.35,.48,.33,           
     *.63,.68,.63,.52,.66,.55,3*.89,.76,.94,.86,                        
     *1.14,1.13,1.12,.96,1.24,1.1,1.44,1.41,1.43,1.31,1.6,1.6/          
      DATA ((A(L,M,6),M=1,6),L=1,9)/2*1.58,1.54,.0248,1.15,.0279,       
     *2.94,2.97,3.,2.34,2.25,2.2,1.447,1.374,1.288,1.62,1.64,1.63,      
     *1.37,1.31,1.234,1.52,1.8,1.77,1.,.96,.898,1.01,1.6,1.3,           
     *.68,.66,.62,.66,1.31,1.07,.41,.4,.38,.33,.99,.66,                 
     *.25,.24,.23,.23,.71,.56,.136,.133,.127,.081,.49,.26/              
      DATA ((ALPHA(L,M,6),M=1,6),L=1,9)/.83,.81,.8,1.145,.762,1.120,    
     *.87,.86,.85,1.14,.799,1.,.149,.165,.184,.046,.148,.014,           
     *.232,.236,.238,.146,.255,.13,.428,.433,.438,.28,.44,.23,          
     *3*.59,.44,.59,.43,3*.81,.64,.83,.66,                              
     *1.02,2*1.01,.81,1.06,.89,2*1.25,1.24,1.07,1.36,1.3/               
      DATA ((A(L,M,7),M=1,6),L=1,9)/1.60,1.59,1.56,.0285,1.16,.0314,    
     *2.98,3.02,3.05,2.6,2.26,2.3,1.546,1.481,1.4,1.63,1.72,1.62,       
     *1.52,1.464,1.388,1.58,1.97,1.8,1.18,1.13,1.07,1.08,1.82,1.33,     
     *.84,.82,.78,.75,1.55,1.16,.54,.53,.5,.4,1.22,.74,                 
     *.34,.33,.32,.3,.93,.67,2*.2,.19,.112,.67,.33/                     
      DATA ((ALPHA(L,M,7),M=1,6),L=1,9)/.81,.80,.788,1.132,.753,1.105,  
     *.85,.84,.83,1.09,.788,.95,.136,.153,.167,.033,.131,.004,          
     *.232,.236,.241,.133,.24,.11,.411,.416,.422,.25,.40,.19,           
     *3*.56,.4,.55,.38,2*.77,.76,.58,.76,.56,                           
     *3*.95,.74,.97,.78,1.17,2*1.16,.98,1.23,1.11/                      
      DATA ((A(L,M,8),M=1,6),L=1,9)/2*1.60,1.58,.045,1.15,.0461,        
     *3.08,3.09,3.1,3.3,2.27,2.32,1.849,1.81,1.75,1.628,1.98,1.606,     
     *2.07,2.04,1.98,1.78,2.5,1.946,1.89,1.86,1.81,1.30,2.6,1.508,      
     *1.58,1.56,1.52,1.11,2.49,1.57,1.22,1.21,1.18,.68,2.2,1.11,        
     *2*.91,.89,.61,2.,1.18,2*.65,.64,.299,1.6,.73/                     
      DATA ((ALPHA(L,M,8),M=1,6),L=1,9)/.777,.764,.752,1.092,.729,1.057,
     *.796,.79,.784,.96,.756,.81,.1,.108,.117,.004,.089,-.006,          
     *.207,.210,.215,.093,.182,.075,2*.34,.35,.15,.30,.122,             
     *3*.46,.3,.41,.28,3*.61,.42,.55,.394,                              
     *3*.75,.56,.7,.55,2*.91,.9,.76,.87,.79/                            
      DATA ((A(L,M,9),M=1,6),L=1,9)/2*1.58,1.56,.0587,1.13,.0579,       
     *3.09,2*3.08,3.39,2.26,2.33,2.009,1.99,1.95,1.624,2.11,1.64,       
     *2.43,2.42,2.38,1.902,2.80,2.078,2*2.42,2.38,1.454,3.09,1.7,       
     *2*2.2,2.17,1.4,3.1,1.91,1.87,1.88,1.85,.94,3.,1.46,               
     *2*1.54,1.52,.93,2.8,1.64,2*1.22,1.21,.53,2.5,1.17/                
      DATA ((ALPHA(L,M,9),M=1,6),L=1,9)/.757,.746,.736,1.06,.717,1.024, 
     *.766,.764,.761,.86,.74,.763,.084,.087,.092,-.0018,.069,.007,      
     *.183,.182,.184,.078,.148,.075,3*.29,.128,.24,.13,                 
     *.4,2*.39,.264,.33,.256,2*.52,.51,.367,.44,.360,                   
     *2*.63,.62,.49,.55,.47,.76,2*.75,.67,.67,.66/                      
C                                                                       
C                                                                       
Crea0892      IF(I.GT.MAXI(J,K)) THEN                                   
      IF (II .GT. MAXI(JJ,KK)) THEN                                     
      TAB=0.                                                            
      RETURN                                                            
      END IF                                                            
Crea0892      IF(ABS(A(I,J,K)).GT.1.E-8) THEN                           
Crea0892      TAB=A(I,J,K)*WC**ALPHA(I,J,K)                             
      IF(ABS(A(II,JJ,KK)) .GT. 1.E-8) THEN                              
          TAB=A(II,JJ,KK)*WC**ALPHA(II,JJ,KK)                           
      ELSE                                                              
Crea0892      L=ALPHA(I,J,K)                                            
          L = ALPHA(II,JJ,KK)                                           
      TAB=A1(L)*WC**ALPHA1(L)+A2(L)*WC                                  
      END IF                                                            
      RETURN                                                            
      END                                                               
      FUNCTION   TNRAIN(RR,V,TM,RADFLD)                                 
CCC                                                                     
      COMMON /CNSTNS/ PI,CA,DEG,GCAIR,BIGNUM,BIGEXP                     
      COMMON /CARD3/ H1,H2,ANGLE,RANGE,BETA,RE,LEN                      
CCC   CALCULATES TRANSMISSION DUE TO RAIN AS A FUNCTION OF              
CCC   RR=RAIN RATE IN MM/HR                                             
CCC   OR WITHIN 350CM-1 USES THE MICROWAVE TABLE ROUTINE TO             
CCC   OBTAIN THE EXTINCTION DUE TO RAIN                                 
CCC   RANGE=SLANT RANGE KM                                              
CCC                                                                     
CCC   ASSUMES A MARSHALL-PALMER RAIN DROP SIZE DISTRIBUTION             
CCC   N(D)=NZERO*EXP(-A*D)                                              
CCC   NZERO=8.E3 (MM-1)  (M-3)                                          
CCC   A=41.*RR**(-0.21)                                                 
CCC   D=DROP DIAMETER (CM)                                              
CCC                                                                     
      REAL NZERO                                                        
      DATA NZERO /8000./                                                
CCC                                                                     
      A=41./RR**0.21                                                    
CCC                                                                     
      IF(RR.LE.0)TNRAIN=1.                                              
      IF(RR.LE.0)RETURN                                                 
CCC                                                                     
      IF(V.GE.350.0) THEN                                               
       TNRAIN=PI*NZERO/A**3                                             
      ELSE                                                              
       TNRAIN=GMRAIN(V,TM,RR)                                           
       TNRAIN = TNRAIN * RADFLD                                         
      END IF                                                            
      RETURN                                                            
      END                                                               
      SUBROUTINE TRANS(IPH,ISOURC,IDAY,ANGLEM,IRPT,SPECALB,RADBUF,      
     +                 TRANBUF,SKYBUF)                                  
Crea0892      SUBROUTINE TRANS(IPH,ISOURC,IDAY,ANGLEM,IRPT)             
C***********************************************************************
C     CALCULATES TRANSMITTANCE AND RADIANCE VALUES BETWEEN IV1 AND IV2  
C     FOR A GIVEN ATMOSPHERIC SLANT PATH                                
C                                                                       
C     K                                                                 
C     1-2  TEMP DEP O2 1395 CM-1 TO 1760 CM-1                           
C     3    RAIN                                                         
C     4    N2 CONTINUUM                                                 
C     5    H2O SELF BROADENED CONTINUUM AT 296                          
C     6    MOLECULAR (RAYLEIGH) SCATTERING                              
C     7    BOUNDARY (0-2 KM) LAYER AEROSOL (TX(7) = TOTAL AEROSOL TRANS)
C     8    ULTRAVIOLET OZONE                                            
C     9    H2O SELF CONTINUUM 296-260 (TX(9) = TOTAL TRANS)             
C    10    H2O FOREIGN CONTINUUM (TX(10) = AEROSOL ABSORPTION)          
C    11    HNO3 (NITRIC ACID)                                           
C    12    TROPOSPHERIC AEROSOL (2-10 KM)                               
C    13    STRATOSPHERIC AEROSOL (10-30 KM)                             
C    14    UPPER STRATOSPHERIC (ABOVE 30 KM)                            
C    15    AEROSOL WEIGHTED RELATIVE HUMIDITY (0-2 KM)                  
C    16    CIRRUS CLOUDS                                                
C    17-30 H2O (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C    31-35 O3  (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C    36-43 CO2 (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C    44-45 CO  (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C    46    CH4 (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C    47    N2O (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C    50-51 O2  (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C    52-53 NH3 (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C    54    NO  (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C    55    NO2 (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C    56-57 SO2 (ALL REGIONS) (DOUBLE EXPONENTIAL MODELS)                
C    58     O2  UV                                                      
C    59-60  TEMP DEP O3                                                 
C    61-62  TEMP DEP RAIN                                               
C    63     O2  1395 TO 1760                                            
C***********************************************************************
C                                                                       
C      MODIFIED TO ACCOMODATE MULTIPLE SCATTERING CALCULATION           
C      AS DESCRIBED IN ISAACS ET AL 1986,      A.E.R. INC.              
C                                                                       
C      MODIFICATIONS TO SET UP EVALUATION OF VERTICAL OPTICAL           
C      QUANTITIES PROFILES (I.E. OPTICAL DEPTH, SINGLE SCATTERING       
C      ALBEDO, ASYMMETRY FACTORS) FOR FLUX ADDING AND MULTIPLE          
C      SCATTERING (MS) SOURCE FUNCTION.                                 
C                                                                       
C      SUBROUTINE MSRAD                                                 
C                                                                       
C      SUBROUTINE MSRAD:                                                
C         (1) SETS UP OPTICAL PROPERTIES PROFILES FOR VERTICAL          
C             PATH                                                      
C         (2) CALLS FLXADD WHICH RETURNS MS SOURCE FUNCTION, J,         
C             FOR PATH                                                  
C                                                                       
C      SUBROUTINE    FLXADD:                                            
C         (1) CALCULATES UPWARD, F+ (UPF), AND DOWNWARD, F- (DNF),      
C             FLUX PROFILES USING ADDING METHOD                         
C         (2) MS SOURCE FUNCTION EVALUATED FROM LEVEL FLUXES VIA        
C             STREAM APPROXIMATION (SEE EQN     , ISAACS ET AL, 1986)   
C         (3) BACKSCATTER FOR SOURCE FUNCTION FOR GIVEN G FACTOR        
C             AND ZENITH ANGLE OBTAINED USING FUNCTION BETABS           
C                                                                       
C***********************************************************************
C                                                                       
      COMMON/IFIL/IRD,IPR,IPU,NPR,IPR1                                  
      COMMON/CARD1/MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB,   
     1  MODTRN                                                          
      COMMON/CARD2/IHAZE,ISEASN,IVULCN,ICSTL,ICLD,IVSA,VIS,WSS,WHH,     
     1    RAINRT                                                        
      COMMON/CARD3/H1,H2,ANGLE,RANGE,BETA,RE,LEN                        
      COMMON/CARD4/IV1,IV2,IDV,IFWHM                                    
      COMMON/CNSTNS/PI,CA,DEG,GCAIR,BIGNUM,BIGEXP                       
      COMMON/CNTRL/KMAX,M,IKMAX,NL,ML,IKLO,ISSGEO,IMULT                 
Crea0892      COMMON RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63)    
Crea0892 COMMON IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12)
Crea0892      COMMON ABSC(5,47),EXTC(5,47),ASYC(5,47),VX2(47),AWCCON(5) 
      COMMON /UNLABEL/ RELHUM(34),HSTOR(34),ICH(4),VH(17),TX(63),W(63), 
     +        IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12), 
     +        ABSC(5,47),EXTC(5,47),ASYC(5,47),VX2(47),AWCCON(5)        
      COMMON/AER/XX1,XX2,XX3,XX4,XX5,                                   
     1  YY1,YY2,YY3,YY4,YY5,ZZ1,ZZ2,ZZ3,ZZ4,ZZ5                         
      COMMON/SOLS/AH1(68),ARH(68),                                      
     1  WPATHS(102,63),PA(68),PR(68),ATHETA(35),ADBETA(35),LJ(69),      
     2  JTURN,ANGSUN,CSZEN(68),TBBYS(102,12),PATMS(102,12)              
      COMMON/SRAD/TEB1,TEB2,TASP1,TASP2,TMSP1,TMSP2,TEB2SV              
      COMMON/MODEL/ZM(34),PM(34),TM(34),RFNDX(34),DENSTY(63,34),        
     1  CLDAMT(34),RRAMT(34),EQLWC(34),HAZEC(34)                        
      COMMON/PATH/PL(68),QTHETA(68),ITEST,HI,HF,AHT(68)                 
      COMMON/TRAN/BTOP(50),TMOLS(34),TAERS(34),TCONT(34),DCONT(68)      
Crea1193COMMON/MSRD/TLE(34),COSBAR(34),OMEGA0(68),UPF(10,34),DNF(10,34),
      COMMON /MSRD/TLE(35),COSBAR(34),OMEGA0(68),UPF(10,34),DNF(10,34), 
     1  TAER(50),DTX7(68),DAERS(68),ASYIK(68),ASYDM(68),STRN(0:34),     
     2  DMOLS(68),DSTRN(0:68),FDNSRF,FDNSRT,IKDM,FDNTRF,FDNTRT,TAUT(34) 
      COMMON/ICLL/ICALL,FPHS,FALB,FORBIT                                
      COMMON/H2O/CPH2O(3515)                                            
      COMMON/O3/CPO3(447)                                               
      COMMON/UFMIX1/CPCO2(1219)                                         
      COMMON/UFMIX2/CPCO(173),CPCH4(493),CPN2O(704),CPO2(382)           
      COMMON/TRACEG/CPNH3(431),CPNO(62),CPNO2(142),CPSO2(226)           
      COMMON/WNLOHI/IWLH2O(15),IWLO3(6),IWLCO2(11),IWLCO(4),IWLCH4(5),  
     1  IWLN2O(12),IWLO2(7),IWLNH3(3),IWLNO(2),IWLNO2(4),IWLSO2(5),     
     2              IWHH2O(15),IWHO3(6),IWHCO2(11),IWHCO(4),IWHCH4(5),  
     3  IWHN2O(12),IWHO2(7),IWHNH3(3),IWHNO(2),IWHNO2(4),IWHSO2(5)      
      COMMON/AABBCC/A1(11),B1(11),C1(11),IBND(11),A(11),CPS(11)         
      COMMON/DIRST/SUN,UMB(34),DMB(34),UMBS(34),DMBS(34)                
      DIMENSION IMAP(68),BET(68),DMF(34),DMFS(34),UMF(34),UMFS(34)      
     1  ,ABB(19),WGT(99),SLIT(58,99),TXNEW(16,102,3),TXOLD(16,102,3)    
      LOGICAL MODTRN,IVTEST                                             
      INTEGER PHASE,DIST                                                
      REAL SPECALB(50000)                                               
      REAL RADBUF(*),TRANBUF(*),SKYBUF(*),SLITALB(99),SLITSKY(99)       
      LOGICAL QFIRST/.TRUE./                                            
      SAVE QFIRST                                                       
      DATA CF1/3.159E-08/,CF2/2.75E-04/                                 
      DO 1 I=1,16                                                       
      DO 1 J = 1,102                                                    
      DO 1 K = 1,3                                                      
      TXNEW(I,J,K) =0.                                                  
      TXOLD(I,J,K)=0.                                                   
1     CONTINUE                                                          
      DO 2 I = 1,63                                                     
2     TX(I) = 0.                                                        
      DO 3 I = 1,58                                                     
      DO 3 J = 1,99                                                     
3     SLIT(I,J) =0.                                                     
      DO J=1,99                                                         
          SLITALB(J) = 0.0                                              
          SLITSKY(J) = 0.0                                              
      END DO                                                            
      ALPHA2=200.**2                                                    
      IOFF=0                                                            
      IF(H1.GE.H2 .OR. ANGLE.GT.90.)IOFF=1                              
C                                                                       
C     SET UP LAYER EDGE AND MIDPOINT TEMPERATURES FOR USE IN            
C     MS FLUX ADDING                                                    
C                                                                       
      IF(IMULT.EQ.1)THEN                                                
          CALL MAPMS(ML,IKMAX,ZM,AHT,IMAP)                              
          DO 10 IK=1,ML                                                 
   10     TLE(IK)=TM(ML-IK+1)                                           
          TLE(ML+1)=TLE(ML)                                             
      ENDIF                                                             
      RADMIN=1.E+30                                                     
      RADMAX=0.                                                         
      IENT=0                                                            
      EMISS=1.-SALB                                                     
      VRMIN=0.                                                          
      VRMAX=0.                                                          
C                                                                       
C  SAVE IKMAX AND IMULT                                                 
C                                                                       
      IKMX=IKMAX                                                        
      SUMA=0.                                                           
      SUMS=-99.                                                         
      SUMSSR=-99.                                                       
      RFLS=-99.                                                         
      RFLSOL=-99.                                                       
      RADSUM=0.                                                         
      STSOL=0.                                                          
      SSOL=0.                                                           
      FACTOR=.5                                                         
      IKLO=1                                                            
      ICOUNT=50                                                         
      IF(IV1 .GE. 17905)MODTRN = .FALSE.                               
      IF(MODTRN)THEN                                                    
C                                                                       
C         WHEN THE MODERATE RESOLUTION OPTION IS USED, CALL BMDATA TO   
C         INITIALIZE PARAMETERS FOR THE 1 CM-1 OPTION AND TO SET THE    
C         FREQUENCY STEP SIZE "IDVX" TO THE BAND WIDTH.                 
C                                                                       
          IDV5=5                                                        
          CALL BMDATA(IV1,IFWHM,IDVX,IKMX,MXFREQ)                       
          IWIDM1=IFWHM/IDVX-1                                           
          IV=5*((IV1-IWIDM1)/5)                                         
          IF(IV.LT.0)IV=0                                               
CC        IF(IV.GT.MXFREQ)THEN                                          
CC            IRPT=-4                                                   
CC            RETURN                                                    
CC        ENDIF                                                         
          IVX=IV-IDVX                                                   
          IV=IV-5                                                       
          IVXMAX=IV2+IWIDM1                                             
C                     (bug ?)                                           
C             This removes the spectral region > 17900 cm-1 that is     
C             repeated in the LOWTRAN mode.                             
C                                                                       
          IF (IV2 .GT. MXFREQ) IVXMAX=MXFREQ+IWIDM1                     
CC        IF(IV2.GT.MXFREQ)IVXMAX=MXFREQ+IWIDM1                         
      ELSE                                                              
          IDV5=IDV                                                      
          IDVX=IDV5                                                     
          IWIDM1=0                                                      
          IV=IV1-IDV5                                                   
          IVX=IV                                                        
          IVXMAX=IV2+IWIDM1                                             
          IF(IVXMAX.GT.50000)IVXMAX=50000                               
          IF(IDV .LT. 5)IDV = 5                                         
      ENDIF                                                             
      IWRITE=IV1+IWIDM1                                                 
      IWIDTH=IWIDM1+1                                                   
C                                                                       
C     PERFORM TRIANGULAR SLIT INITIALIZATION.  TRANSMITTANCES AT A      
C     GIVEN FREQUENCY CONTRIBUTE TO 2*IWIDTH-1 TRIANGULAR SLITS.  THESE 
C     CONTRIBUTIONS ARE STORED IN SLIT.  WGT IS THE NORMALIZED WEIGHT   
C     USED TO DEFINE THE TRIANGLE.                                      
C                                                                       
      NWGT=2*IWIDTH                                                     
      WNORM=1./(IWIDTH*IWIDTH)                                          
      DO 20 I=1,IWIDTH                                                  
          WGT(I)=I*WNORM                                                
   20 WGT(NWGT-I)=I*WNORM                                               
      NWGT=NWGT-1                                                       
      NWGTM1=NWGT-1                                                     
      ICALL=0                                                           
      IEMISS=0                                                          
      IF(IEMSCT.EQ.1 .OR. IEMSCT.EQ.2)IEMISS=1                          
      WCRRIS=WPATH(IKMAX,16)*2.                                         
      TCRRIS=1.                                                         
      IF(ICLD.EQ.20)THEN                                                
          IF(WCRRIS.LE.BIGEXP)THEN                                      
              TCRRIS=EXP(-WCRRIS)                                       
          ELSE                                                          
              TCRRIS=0.                                                 
          ENDIF                                                         
      ENDIF                                                             
      IF (QFIRST) THEN                                                  
          QFIRST = .FALSE.                                              
          INDEX = 1                                                     
          IF (IEMSCT .EQ. 0) THEN                                       
              WRITE (IPU,931)                                           
          ELSE IF (IEMSCT .EQ. 3) THEN                                  
              WRITE (IPU,932)                                           
          ELSE IF (IEMSCT .EQ. 1) THEN                                  
              WRITE (IPU,933)                                           
          ELSE                                                          
              WRITE (IPU,934)                                           
          END IF                                                        
      END IF                                                            
  931 FORMAT('  FREQ   WAVELENGTH  TOTAL  H2O   CO2   CO    CH4   N2O', 
     +       '   O2    O3    NH3   NO    NO2   SO2  HNO3 N2CON H2OCON', 
     +       ' MSCAT AERO  -ln(TRAN)')                                  
  932 FORMAT('  IRRADIANCE (WATTS/CM2-MICRON)',/,                       
     +       '    FREQ WAVELENGTH   TRANSMITTED         SOLAR    TRAN', 
     +       ' -ln(TRAN)')                                              
  933 FORMAT('  RADIANCE(WATTS/CM2-STER-MICRON)',/,'    FREQ ',         
     +    'WAVELENGTH     ATMOS RAD  TRANSMIT    -ln(t)    SkyRad@grnd')
  934 FORMAT('  RADIANCE(WATTS/CM2-STER-MICRON)',/,                     
     +       '    FREQ  WAVELEN TRANS  REFL  ATMOS RAD  ',              
     +       'PATH SCAT GROUND REF  TOTAL RAD  -ln(t)')                 
Crea0892      IF(IEMSCT.EQ.0)THEN                                       
Crea0892  WRITE(IPU,'(46H  FREQ   TOTAL     H2O     CO2+ OZONE    TRACE,
Crea0892  1      49H  N2 CON  H2O CON MOL SCAT AER-HYD HNO3   AER-HYD)')
Crea0892  WRITE(IPR1,'(45H   FREQ  H2O     O3       CO2    CO       CH4,
Crea0892     1      47H     N2O    O2     NH3      NO     NO2      SO2,/
Crea08922    55H   1/CM  TRANS   TRANS    TRANS  TRANS    TRANS   TRANS,
Crea0892     3      39H  TRANS  TRANS    TRANS  TRANS    TRANS)')       
Crea0892      ELSEIF(IEMSCT.EQ.3)THEN                                   
Crea0892          WRITE(IPU,'(32H  FREQ   TRANS     SOL TR  SOLAR)')    
Crea0892      ELSE                                                      
Crea0892      WRITE(IPU,'(42H  FREQ   TRANS     ATMOS   PATH     SINGLE,
Crea0892     1      28H   GROUND DIRECT   TOTAL RAD)')                  
Crea0892      ENDIF                                                     
Crea0892      IF(NOPRNT.EQ.-1)THEN                                      
Crea0892          IF(IMULT.EQ.1)THEN                                    
Crea0892          WRITE(IPR1,'(37H        V   ALT1    UFLX        UFLXS,
Crea08921       50H       DFLX        DFLXS       DIRS          TRANS)')
Crea0892          ELSE                                                  
Crea0892         IF(IEMSCT.GT.0)WRITE(IPR1,'(23H        V   ALT1   ALT2,
Crea0892     1          30H    B(V,T)     DTAU        TAU)')            
Crea0892          ENDIF                                                 
Crea0892      ENDIF                                                     
      INDH2O=1                                                          
      INDO3 =1                                                          
      INDCO2=1                                                          
      INDCO =1                                                          
      INDCH4=1                                                          
      INDN2O=1                                                          
      INDO2 =1                                                          
      INDNH3=1                                                          
      INDNO =1                                                          
      INDNO2=1                                                          
      INDSO2=1                                                          
C                                                                       
C     BEGINNING OF FREQUENCY LOOP                                       
C                                                                       
C     "IVX" IS THE FREQUENCY AT WHICH TRANSMITTANCE WILL BE CALCULATED. 
C     DURING THE FIRST PASS, "IVX" AND "IV" MUST BE EQUAL.              
C                                                                       
   30 IVX=IVX+IDVX                                                      
      SALB = SPECALB(IVX)                                               
      EMISS = 1.0 - SALB                                                
      IF(IV.LT.IVX)THEN                                                 
          IV=IV+IDV5                                                    
          IVTEST=.TRUE.                                                 
      ELSE                                                              
          IVTEST=.FALSE.                                                
      ENDIF                                                             
C                                                                       
C     SET INTERPOLATION FRACTION.                                       
C                                                                       
      FRAC=FLOAT(IV-IVX)/IDV5                                           
      INIT=0                                                            
      IKLO=1                                                            
      IF(IEMISS.EQ.0)THEN                                               
          IKMAX=IKLO                                                    
      ELSEIF(IMULT.EQ.1)THEN                                            
C         FOR MULTIPLE SCATTERING SET IKMAX TO IMSMX                    
          IKMAX=IMSMX                                                   
      ELSE                                                              
C         IF NOT MULTIPLE SCATTERING, RESET IKMAX TO ORIGINAL VALUE     
          IKMAX=IKMX                                                    
      ENDIF                                                             
      ITZERO=0                                                          
      IPATH=1                                                           
      SUMV=0.                                                           
      TLOLD=1.                                                          
      IF(ICOUNT.EQ.50)THEN                                              
          ICOUNT=0                                                      
          IF(IEMSCT.EQ.0)THEN                                           
              WRITE(IPR,'(1H1,/33H   FREQ WAVELENGTH  TOTAL     H2O,    
     1          51H     CO2+     OZONE    TRACE  N2 CONT  H2O CONT MOL, 
     2          43H SCAT  AER-HYD  HNO3    AER-HYD  INTEGRATED,//       
     3          52H   1/CM  MICRONS    TRANS    TRANS    TRANS    TRANS,
     4          45H    TRANS   TRANS    TRANS    TRANS     TRANS,       
     5          30H   TRANS    ABS     ABSORPTION,/)')                  
          ELSEIF(IEMSCT.EQ.1)THEN                                       
              WRITE(IPR,'(1H1,20X,28HRADIANCE(WATTS/CM2-STER-XXX),/     
     1          8H0   FREQ,T10,6HWAVLEN,T19,14HATMOS RADIANCE,T39,      
     2          9H INTEGRAL,T49,5HTOTAL,/2X,6H(CM-1),T10,7H(MICRN),T19, 
     3          6H(CM-1),T29,7H(MICRN),T39,6H(CM-1),T49,5HTRANS,/)')    
          ELSEIF(IEMSCT.EQ.3)THEN                                       
              WRITE(IPR,'(1H1,22X,27HIRRADIANCE (WATTS/CM2-XXXX),/      
     1          7H0  FREQ,T11,6HWAVLEN,T23,11HTRANSMITTED,T45,5HSOLAR,  
     2          T61,10HINTEGRATED,T80,5HTOTAL,/2X,6H(CM-1),T10,         
     3          7H(MICRN),T20,6H(CM-1),T30,7H(MICRN),T40,6H(CM-1),T50,  
     4          7H(MICRN),T60,6HTRANS.,T70,5HSOLAR,T80,5HTRANS)')       
          ELSEIF(IMULT.EQ.0)THEN                                        
              WRITE(IPR,'(1H1,45X,28HRADIANCE(WATTS/CM2-STER-XXX),/     
     1          7H0  FREQ,T11,6HWAVLEN,T21,14HATMOS RADIANCE,T41,       
     2          14HPATH SCATTERED,T61,16HGROUND REFLECTED,T85,5HTOTAL,  
     3          T99,8HINTEGRAL,T110,5HTOTAL,/2X,6H(CM-1),T10,7H(MICRN), 
     4          T20,6H(CM-1),T30,7H(MICRN),T40,6H(CM-1),T50,7H(MICRN),  
     5          T60,6H(CM-1),T70,7H(MICRN),T80,6H(CM-1),T90,7H(MICRN),  
     6          T100,6H(CM-1),T110,5HTRANS,/)')                         
          ELSE                                                          
              WRITE(IPR,'(1H1,45X,28HRADIANCE(WATTS/CM2-STER-XXX),//    
     1          6H0 FREQ,T10,6HWAVLEN,T20,14HATMOS RADIANCE,T40,4HPATH, 
     2          19H SCATTERED RADIANCE,T69,25HGROUND REFLECTED RADIANCE,
     3          T100,14HTOTAL RADIANCE,T118,8HINTEGRAL,T127,5HTOTAL,/   
     4          T45,5HTOTAL,T59,6HS SCAT,T75,5HTOTAL,T89,6HDIRECT,/1X,  
     5          6H(CM-1),T9,7H(MICRN),T19,6H(CM-1),T29,7H(MICRN),T39,   
     6          6H(CM-1),T49,7H(MICRN),T59,6H(CM-1),T69,6H(CM-1),T79,   
     7          7H(MICRN),T89,6H(CM-1),T99,6H(CM-1),T109,7H(MICRN),T119,
     8          6H(CM-1),T127,5HTRANS,/)')                              
          ENDIF                                                         
      ENDIF                                                             
      TX(1)=1.                                                          
      TX(2)=1.                                                          
      TX(3)=1.                                                          
      DO 40 K=4,KMAX                                                    
   40 TX(K)=0.                                                          
C                                                                       
C     WHEN THE MODERATE RESOLUTION OPTION IS USED AND THE FWHM IS       
C     GREATER THAN THE BAND WIDTH, OUTPUT IS NOT GENERATED IN EVERY     
C     PASS THROUGH THE FREQUENCY LOOP.  THE COUNTER, "ICOUNT" IS        
C     INCREMENTED ONLY WHEN PRINTING IS ASSURED.                        
C                                                                       
      IF(IVTEST)THEN                                                    
          V=FLOAT(IV)                                                   
          IF(.NOT.MODTRN)THEN                                           
              CALL CXDTA(CP,V,IWLH2O,IWHH2O,CPH2O,INDH2O)               
              CPS(1)=CP                                                 
              CALL CXDTA(CP,V,IWLCO2,IWHCO2,CPCO2,INDCO2)               
              CPS(2)=CP                                                 
              CALL CXDTA(CP,V,IWLO3, IWHO3, CPO3, INDO3 )               
              CPS(3)=CP                                                 
              CALL CXDTA(CP,V,IWLN2O,IWHN2O,CPN2O,INDN2O)               
              CPS(4)=CP                                                 
              CALL CXDTA(CP,V,IWLCO, IWHCO, CPCO, INDCO )               
              CPS(5)=CP                                                 
              CALL CXDTA(CP,V,IWLCH4,IWHCH4,CPCH4,INDCH4)               
              CPS(6)=CP                                                 
              CALL CXDTA(CP,V,IWLO2, IWHO2, CPO2, INDO2 )               
              CPS(7)=CP                                                 
              CALL CXDTA(CP,V,IWLNO, IWHNO, CPNO, INDNO )               
              CPS(8)=CP                                                 
              CALL CXDTA(CP,V,IWLSO2,IWHSO2,CPSO2,INDSO2)               
              CPS(9)=CP                                                 
              CALL CXDTA(CP,V,IWLNO2,IWHNO2,CPNO2,INDNO2)               
              CPS(10)=CP                                                
              CALL CXDTA(CP,V,IWLNH3,IWHNH3,CPNH3,INDNH3)               
              CPS(11)=CP                                                
          ENDIF                                                         
C                                                                       
C         N2 CONTINUUM                                                  
C                                                                       
          CALL C4DTA(ABB(4),V)                                          
          CALL ABCDTA(IV)                                               
C                                                                       
C         WATER CONTINUUM                                               
C                                                                       
          CALL  SLF296(V,SH2OT0)                                        
          CALL  SLF260(V,SH2OT1)                                        
          CALL  FRN296(V,FH2O)                                          
          T0=296.                                                       
          T1=260.                                                       
          IF(SH2OT0.GT.0.)THEN                                          
C             CORRECTION TO SELF CONTINUUM (1 SEPT 85)                  
C             FACTOR OF 0.78 @ 1000                                     
              XH2O=1.-.2333*ALPHA2/((V-1050.)**2+ALPHA2)                
              SH2OT0=SH2OT0*XH2O                                        
              SH2OT1=SH2OT1*XH2O                                        
          ENDIF                                                         
C         PROTECT AGAINST EXPONENTIAL UNDERFLOW AT HIGH FREQUENCY       
          VTEMP=V/.6952                                                 
          IF(VTEMP/T1.GT.BIGEXP)THEN                                    
              RADFN0=V                                                  
              RADFN1=V                                                  
              FDG=0.                                                    
          ELSE                                                          
              XD=EXP(-VTEMP/T0)                                         
              RADFN0=V*(1.-XD)/(1.+XD)                                  
              XD=EXP(-VTEMP/T1)                                         
              RADFN1=V*(1.-XD)/(1.+XD)                                  
          ENDIF                                                         
CC        FDG=CF1*EXP(-CF2*V)                                           
          CALL FUDGE(V,FDG)                                             
          ABB(5)=SH2OT0*RADFN0                                          
          CALL C6DTA(ABB(6),V)                                          
          ABB(7)=0.                                                     
          CALL C8DTA(ABB(8),V)                                          
          ABB(9)=(SH2OT1*RADFN1)-(SH2OT0*RADFN0)                        
          ABB(10)=(FH2O+FDG)*RADFN0                                     
C                                                                       
C         HNO3 ABSORPTION CALCULATION                                   
C                                                                       
          IF(MODTRN)THEN                                                
              ABB(11)=0.                                                
          ELSE                                                          
              CALL HNO3(V,ABB(11))                                      
          ENDIF                                                         
          CALL AEREXT(V)                                                
          CALL HERTDA(ABB(17),V)                                        
          CALL O2CONT(V,SIGO20,SIGO2A,SIGO2B)                           
          IF(V.GT.49600.)CALL SCHRUN(V,CPS(7))                          
C                                                                       
C         DIFFUSE OZONE                                                 
C                                                                       
          ABBUV=0.                                                      
          IF(V.GE.40800.)THEN                                           
              CALL O3UV(V,C0)                                           
              ABB(8)=0.                                                 
          ELSEIF(V.GT.24370.)THEN                                       
              ABB(8)=0.                                                 
              CALL O3HHT0(V,C0)                                         
              CALL O3HHT1(V,CT1)                                        
              CALL O3HHT2(V,CT2)                                        
          ENDIF                                                         
      ENDIF                                                             
      V=IVX                                                             
C                                                                       
C     FOR EACH WAVENUMBER, AN INITIAL CALL (IK=0) TO BMOD IS REQUIRED.  
C                                                                       
      MSOFF=0                                                           
   50 IK=0                                                              
      IF(MODTRN)CALL BMOD(IK,IKMX,IPATH,IVX,MSOFF,MXFREQ)               
      TEB1=-99.                                                         
      IPATH=1                                                           
      TEB2SV=-99.                                                       
C                                                                       
C     BEGINNING OF LAYER LOOP                                           
C                                                                       
      TOTAL=1.                                                          
      DSTRN(0)=1.                                                       
      SUMMS=0.                                                          
C                                                                       
C     MSOFF IS A LAYER OFFSET PARAMETER EQUAL TO 0 FOR THE LINE OF      
C     SIGHT PATH AND EQUAL TO 68 FOR THE MULTIPLE SCATTERING VERTICAL   
C     PATH FROM GROUND TO SPACE.                                        
C                                                                       
      MSOFF=(IMULT-INIT)*68                                             
      DO 190 IK=IKLO,IKMAX                                              
          IKOFF=IK+MSOFF                                                
          IF(IEMISS.EQ.0)GOTO130                                        
C                                                                       
C         LOAD APPROPRIATE ABSORBER AMOUNTS INTO W(K)                   
C                                                                       
          IF(IEMSCT.NE.2)GOTO110                                        
   60     GOTO(70,90,110),IPATH                                         
C                                                                       
C         LOAD W(K) WITH THE FIRST SOLAR PATH ABSORBER AMOUNT           
C                                                                       
   70     MSOFF1=MSOFF+1                                                
          DO 80 K=1,KMAX                                                
   80     W(K)=WPATHS(MSOFF1,K)                                         
          IF(W(36).GE.0.)GOTO130                                        
C                                                                       
C         SUN CAN NOT BE SEEN                                           
C                                                                       
          TX(6)=0.                                                      
          TX(7)=0.                                                      
          TX(9)=0.                                                      
          TX(10)=0.                                                     
          IF(MSOFF.GT.0)THEN                                            
              IF(IK.GT.1)THEN                                           
                  ASYIK(IK-1)=0.                                        
                  ASYDM(IK-1)=1.                                        
              ENDIF                                                     
              ASYIK(IKMAX)=ASYIK(1)                                     
              ASYDM(IKMAX)=ASYDM(1)                                     
              DCONT(IK)=0.                                              
              DTX7(IK)=0.                                               
              DAERS(IK)=0.                                              
              DMOLS(IK)=0.                                              
              TAUT(IKMAX+1-IK)=0.                                       
              GOTO180                                                   
          ENDIF                                                         
C         TEST AGAINST ML INSERTED FOR ERRATA TO WORK                   
          IF(IK.LT.ML)CALL SSRAD(IPH,IK,ITZERO,IPATH,V,SUMSSR)          
          IPATH=2                                                       
   90     IKP1=IK+1                                                     
C                                                                       
C         LOAD W(K) WITH L PATH ABSORBER AMOUNT FOR MSOFF=0 AND WITH    
C         SOLAR PATH ABSORBER AMOUNT FOR MSOFF>0                        
C                                                                       
          IKOFF1=MSOFF+IKP1                                             
          DO 100 K=1,KMAX                                               
              W(K)=WPATHS(IKOFF1,K)                                     
              IF(MSOFF.EQ.0)W(K)=W(K)+WPATH(IK,K)                       
  100     CONTINUE                                                      
          IF(MSOFF.GT.0)THEN                                            
              IF(WPATHS(IKOFF1,36).GT.0.)GOTO130                        
              TX(6)=0.                                                  
              TX(7)=0.                                                  
              TX(9)=0.                                                  
              TX(10)=0.                                                 
              IF(IK.GT.1)THEN                                           
                  ASYIK(IK-1)=0.                                        
                  ASYDM(IK-1)=1.                                        
              ENDIF                                                     
              ASYIK(IKMAX)=ASYIK(1)                                     
              ASYDM(IKMAX)=ASYDM(1)                                     
              DCONT(IK)=0.                                              
              DTX7(IK)=0.                                               
              DAERS(IK)=0.                                              
              DMOLS(IK)=0.                                              
              TAUT(IKMAX+1-IK)=0.                                       
              GOTO180                                                   
          ENDIF                                                         
          IF(WPATHS(IKP1,36).GT.0.)GOTO130                              
C                                                                       
C         SUN CAN NOT BE SEEN                                           
C                                                                       
          TX(6)=0.                                                      
          TX(7)=0.                                                      
          TX(9)=0.                                                      
          TX(10)=0.                                                     
C         TEST AGAINST ML INSERTED FOR ERRATA TO WORK                   
          IF(IK.LT.ML)CALL SSRAD(IPH,IK,ITZERO,IPATH,V,SUMSSR)          
          IPATH=3                                                       
C                                                                       
C         LOAD W(K) WITH OPTICAL PATH ABSORBER AMOUNT                   
C                                                                       
  110     DO 120 K=1,KMAX                                               
  120     W(K)=WPATH(IKOFF,K)                                           
  130     CONTINUE                                                      
          IF(IVTEST)THEN                                                
              DO 140 K=3,16                                             
  140         TX(K)=0.                                                  
              EXT=XX1*W(7)+XX2*W(12)+XX3*W(13)+XX4*W(14)+XX5*W(16)      
              ABT=YY1*W(7)+YY2*W(12)+YY3*W(13)+YY4*W(14)+YY5*W(16)      
              IF(MSOFF.GT.0)THEN                                        
                  IF(IK.EQ.1)THEN                                       
                      W7D=WPATH(IKOFF,7)                                
                      W12D=WPATH(IKOFF,12)                              
                      W13D=WPATH(IKOFF,13)                              
                      W14D=WPATH(IKOFF,14)                              
                      W16D=WPATH(IKOFF,16)                              
                  ELSE                                                  
                      IKOFFM=IKOFF-1                                    
                      W7D=WPATH(IKOFF,7)-WPATH(IKOFFM,7)                
                      W12D=WPATH(IKOFF,12)-WPATH(IKOFFM,12)             
                      W13D=WPATH(IKOFF,13)-WPATH(IKOFFM,13)             
                      W14D=WPATH(IKOFF,14)-WPATH(IKOFFM,14)             
                      W16D=WPATH(IKOFF,16)-WPATH(IKOFFM,16)             
                  ENDIF                                                 
C                 ASYMMETRY FACTOR IS WEIGHTED AVERAGE                  
                  ASY=ZZ1*(XX1-YY1)*W7D+ZZ2*(XX2-YY2)*W12D+ZZ3*         
     1              (XX3-YY3)*W13D+ZZ4*(XX4-YY4)*W14D+ZZ5*(XX5-YY5)*W16D
              ENDIF                                                     
              SCT=EXT-ABT                                               
              TRAIN=1.                                                  
C                                                                       
C             ADD CONTRIBUTION OF CLOUDS AND RAIN                       
C                                                                       
              IF(W(3).NE.0.)THEN                                        
                  TMPRN=W(61)/W(3)                                      
                  IF(VTEMP.GE.TMPRN*BIGEXP)THEN                         
                      RFD=V                                             
                  ELSE                                                  
                      XD=EXP(-VTEMP/TMPRN)                              
                      RFD=V*(1.-XD)/(1.+XD)                             
                  ENDIF                                                 
                  RAINAV=(W(3)/W(62))**(1./.63)                         
                  TRAIN=TNRAIN(RAINAV,V,TMPRN,RFD)                      
                  IF(V.LT.250.)THEN                                     
                      PHASE=1                                           
                      IF(ICLD.GT.11)PHASE=2                             
                      DIST=1                                            
C                                                                       
C                     CALL SCATTERING ROUTINE TO OBTAIN ASYMMETRY       
C                     FACTOR AND RATIO OF ABSORPTION TO EXTINCTION DUE  
C                     TO RAIN WITHIN RANGE OF 19 TO 231 GHZ             
C                     EXTRAPOLATE ABOVE AND BELOW THAT FREQ RANGE       
C                                                                       
                      CALL RNSCAT(V,RAINAV,TMPRN,PHASE,DIST,IK1,CSSA,   
     1                  ASYMR,IENT)                                     
                      IENT=IENT+1                                       
                  ELSE                                                  
                      CSSA=.5                                           
                      ASYMR=.85                                         
                  ENDIF                                                 
                  RNEXPH=TRAIN*W(62)                                    
                  ABT=ABT+RNEXPH*CSSA                                   
                  SCT=SCT+RNEXPH*(1.-CSSA)                              
                  IF(MSOFF.GT.0)ASY=ASY+ASYMR*(1.-CSSA)*RNEXPH          
              ENDIF                                                     
C                                                                       
C             SET EXT DUE TO RAIN FOR LAYER                             
C                                                                       
              IF(MSOFF.GT.0)THEN                                        
                  DENOM=((XX1-YY1)*W7D+(XX2-YY2)*W12D+(XX3-YY3)*W13D+   
     1              (XX4-YY4)*W14D+(XX5-YY5)*W16D)                      
                  IF(W(3).NE.0.)DENOM = DENOM + (1.-CSSA)*RNEXPH        
                  TXOLD(1,IKOFF,IPATH)=TXNEW(1,IKOFF,IPATH)             
                  TXNEW(1,IKOFF,IPATH)=ASY                              
                  TXOLD(2,IKOFF,IPATH)=TXNEW(2,IKOFF,IPATH)             
                  TXNEW(2,IKOFF,IPATH)=DENOM                            
              ENDIF                                                     
              EXT=SCT+ABT                                               
              WO3=W(8)*.269                                             
              IF(V.GE.40800)THEN                                        
                  ABBUV=C0*WO3                                          
              ELSEIF(V.GT.24370.)THEN                                   
                  ABBUV=C0*(WO3+CT1*W(59)+CT2*W(60))                    
              ENDIF                                                     
              TX(4)=ABB(4)*W(4)                                         
              TX(5)=1.E-20*ABB(5)*W(5)                                  
              TX(6)=ABB(6)*W(6)                                         
              TX(7)=ABB(7)*W(7)                                         
              TX(8)=ABB(8)*W(8)                                         
              TX(9)=1.E-20*ABB(9)*W(9)                                  
              TX(10)=1.E-20*ABB(10)*W(10)                               
              TX(11)=ABB(11)*W(11)                                      
              TX(5)=TX(5)+TX(10)+TX(9)                                  
              SUM=ABBUV+TX(4)+TX(5)+TX(6)+TX(7)+TX(8)+TX(11)+EXT        
              TX(8)=TX(8)+ABBUV                                         
C                                                                       
C             STORE CUMULATIVE AEROSOL PARAMETERS FOR DIFFERENT         
C             VERTICAL REGIONS                                          
C                                                                       
              TX(10)=ABT                                                
              TX(7)=EXT                                                 
              IF(ICLD.EQ.20)THEN                                        
                  TX(16)=2*W(16)                                        
                  SUM=SUM+TX(16)                                        
              ENDIF                                                     
C                                                                       
C             OXYGEN                                                    
C                                                                       
              TX(58)=SIGO20*(W(63)+SIGO2A*(W(1)-220.*W(63))+SIGO2B*W(2))
C                                                                       
C             UV O2 HERZBERG CONTINUUM ABSORPTION CALCULATION           
C                                                                       
              TX(58)=W(58)*ABB(17)+TX(58)                               
C     ***************  ERRATA JUNE 21 89 NEXT CARD                      
CC            SUM=SUM+TX(58)                                            
C     ***************  END ERRATA                                       
              TX(3)=TX(58)                                              
C                                                                       
C             STORE CUMULATIVE OPTICAL THICKNESS PARAMETERS             
C                                                                       
              TXOLD(12,IKOFF,IPATH)=TXNEW(12,IKOFF,IPATH)               
              TXNEW(12,IKOFF,IPATH)=TX(4)+TX(5)+TX(8)+TX(11)+TX(58)     
              TXOLD(13,IKOFF,IPATH)=TXNEW(13,IKOFF,IPATH)               
              TXNEW(13,IKOFF,IPATH)=TX(7)                               
              TXOLD(14,IKOFF,IPATH)=TXNEW(14,IKOFF,IPATH)               
              TXNEW(14,IKOFF,IPATH)=TX(7)-TX(10)                        
              TXOLD(15,IKOFF,IPATH)=TXNEW(15,IKOFF,IPATH)               
              TXNEW(15,IKOFF,IPATH)=TX(6)                               
              TX(9)=SUM                                                 
              DO 150 K=3,11                                             
                  TXOLD(K,IKOFF,IPATH)=TXNEW(K,IKOFF,IPATH)             
CC                IF(TX(K).GT.20.)THEN                                  
CC                    TXNEW(K,IKOFF,IPATH)=2.06E-09                     
                   IF (TX(K).LE.BIGEXP)THEN                             
                      TXNEW(K,IKOFF,IPATH)=EXP(-TX(K))                  
                  ELSE                                                  
                      TXNEW(K,IKOFF,IPATH)=1./BIGNUM                    
                  ENDIF                                                 
  150         CONTINUE                                                  
              TXOLD(16,IKOFF,IPATH)=TXNEW(16,IKOFF,IPATH)               
CC            IF(TX(16).GT.20.)THEN                                     
CC                TXNEW(16,IKOFF,IPATH)=2.06E-09                        
              IF    (TX(16).LE.BIGEXP)THEN                              
                  TXNEW(16,IKOFF,IPATH)=EXP(-TX(16))                    
              ELSE                                                      
                  TXNEW(16,IKOFF,IPATH)=1./BIGNUM                       
              ENDIF                                                     
              TX(58)=TX(3)                                              
              TX(3)=1.                                                  
              IF(.NOT.MODTRN)THEN                                       
C                                                                       
C                 MOLECULAR ABSORBERS                                   
C                                                                       
                  DO 160 IMOL=1,11                                      
                      KP=KPOINT(IMOL)                                   
                      IF(CPS(IMOL).EQ.-20.0)THEN                        
                          TX(KP)=1.                                     
                      ELSE                                              
                          TX(KP)=DBLTX(W(IBND(IMOL)),CPS(IMOL),A(IMOL)) 
                      ENDIF                                             
  160             CONTINUE                                              
              ENDIF                                                     
          ENDIF                                                         
          DO 170 K=1,16                                                 
              STORE=TXNEW(K,IKOFF,IPATH)                                
  170     TX(K)=STORE+FRAC*(TXOLD(K,IKOFF,IPATH)-STORE)                 
          TX(58)=TX(3)                                                  
          TX(3)=1.                                                      
CC        IF(MODTRN)CALL BMOD(IK,IKMX,IPATH,IVX,MSOFF,MXFREQ)           
          IF(MODTRN)THEN                                                
               CALL BMOD(IK,IKMX,IPATH,IVX,MSOFF,MXFREQ)                
               TX(9) = TX(9)* TX(11)                                    
          ENDIF                                                         
C                                                                       
C         UNIF=UNIFORMLY MIXED GASES TRANSMITTANCE (DOUBLE EXPONENTIAL) 
C         TRACE=TRACE GASES TRANSMITTANCE (DOUBLE EXPONENTIAL MODELS)   
C                                                                       
          UNIF=TX(36)*TX(44)*TX(46)*TX(47)*TX(50)*TX(58)                
          TRACE=TX(52)*TX(54)*TX(55)*TX(56)                             
          IF(MSOFF.GT.0)THEN                                            
              IF(IK.GT.1)THEN                                           
                  ASYIK(IK-1)=TX(1)                                     
                  ASYDM(IK-1)=TX(2)                                     
              ENDIF                                                     
              ASYIK(IKMAX)=ASYIK(1)                                     
              ASYDM(IKMAX)=ASYDM(1)                                     
              DCONT(IK)=TX(12)                                          
              DTX7(IK)=TX(13)                                           
              DAERS(IK)=TX(14)                                          
              DMOLS(IK)=TX(15)                                          
              TAUT(IKMAX+1-IK)=UNIF*TRACE*TX(17)*TX(31)                 
          ENDIF                                                         
          TX(9)=TX(17)*UNIF*TX(31)*TX(9)*TRACE                          
          IF(IV.GE.13000)TX(31)=TX(8)                                   
C                                                                       
C         DSTRN IS CUMULATIVE SOLAR TRANSMISSION, USED IN CALCULATION   
C         OF SOLAR TRANSMISSION TO LAYER N                              
C                                                                       
  180     IF(IEMSCT.EQ.1)THEN                                           
              DSTRN(IK)=1.                                              
          ELSEIF(IPATH.EQ.1)THEN                                        
              DSTRN(0)=TX(9)                                            
          ELSEIF(IPATH.EQ.2)THEN                                        
              DSTRN(IK)=TX(9)                                           
          ENDIF                                                         
C                                                                       
C         INITIALIZE OMEGA0 FOR NO MULTIPLE SCATTERING CASES            
C                                                                       
          IF(IMULT.EQ.0)OMEGA0(IK)=0.                                   
          IF(IEMSCT.EQ.2)THEN                                           
C             TEST AGAINST ML INSERTED FOR ERRATA TO WORK               
              IF(MSOFF.EQ.0 .AND. IK.LT.ML)                             
     1          CALL SSRAD(IPH,IK,ITZERO,IPATH,V,SUMSSR)                
              IF(IPATH.NE.3)THEN                                        
                  IPATH=IPATH+1                                         
                  GOTO60                                                
              ENDIF                                                     
              IPATH=2                                                   
          ENDIF                                                         
          IF(IV.GE.13000)TX(3)=TX(8)                                    
          IF(IEMISS.EQ.0)GOTO200                                        
C                                                                       
C   FOR NO MULTIPLE SCATTERING, CALCULATE BLACK BODY FUNCTION,          
C   AS WELL AS RADIANCE ADDING FOR THERMAL                              
C                                                                       
          BBIK=BBFN(TBBY(IKOFF),V)                                      
          TLNEW=TX(9)                                                   
          DTAU=TLOLD-TLNEW                                              
          IF(IMULT.EQ.1)DTAU=TOTAL-TX(9)                                
          TOTAL=TX(9)                                                   
          IF(DTAU.LE.0.)DTAU=0.                                         
          IF(IMULT.EQ.0)THEN                                            
Crea0892              IF(NOPRNT.EQ.-1)THEN                              
Crea0892                  WRITE(IPR1,'(F10.0,2F7.2,1P2E12.5,0PF12.9)')  
Crea0892     1              V,AHT(IK),AHT(IK+1),BBIK,DTAU,TLNEW         
Crea0892              ENDIF                                             
              IF(DTAU.LT.1.E-5 .AND. TLNEW.LT.1.E-5)THEN                
Crea0892                  IF(NOPRNT.EQ.-1)                              
Crea08921             WRITE(IPR1,'(5X,5H-999.,T65,16HDTAU   EXIT LOOP)')
                  GOTO200                                               
              ENDIF                                                     
              SUMV=SUMV+BBIK*DTAU                                       
C                                                                       
C             RADIANCE / CONSERVATIVE SCATTERING                        
C                                                                       
          ELSE                                                          
              IF(INIT.EQ.0)GOTO190                                      
              N1=ML-IMAP(IK)+IOFF                                       
C     ***************  ERRATA JUNE 21 89 NEXT CARD                      
CC            IF(N1.GE.ML)GOTO190                                       
              IF(N1.GE.ML)N1 = ML - 1                                   
C     ***************  END ERRATA                                       
Crea0892              IF(NOPRNT.EQ.-1)THEN                              
Crea0892                  N=N1+1                                        
Crea0892          WRITE(IPR1,'(F10.0,F7.2,1P5E12.5,0PF10.5)')V,AHT(IK+1)
Crea0892     1            ,UMB(N),UMBS(N),DMB(N),DMBS(N),SUN*TX(9),TX(9)
Crea0892              ENDIF                                             
              IF(DTAU.LT.1.E-5 .AND. TX(9).LT.1.E-5)THEN                
Crea0892                  IF(NOPRNT.EQ.-1)                              
Crea08921           WRITE(IPR1,'(5X,5H-999.,T65,16HDTAU   EXIT LOOP)')  
                  GOTO200                                               
              ENDIF                                                     
              IF(QTHETA(IK).LT..5*PI)THEN                               
C                 UP                                                    
                  SMS=BBIK*(1.-OMEGA0(N1))+OMEGA0(N1)/PI*               
     1              (DMF(N1)*(1.-BET(IK))+UMF(N1)*BET(IK))              
                  SMSS=OMEGA0(N1)/PI*                                   
     1              (DMFS(N1)*(1.-BET(IK))+UMFS(N1)*BET(IK))            
              ELSE                                                      
C                 DOWN                                                  
                  SMS=BBIK*(1.-OMEGA0(N1))+OMEGA0(N1)/PI*               
     1              (UMF(N1)*(1.-BET(IK))+DMF(N1)*BET(IK))              
                  SMSS=OMEGA0(N1)/PI*                                   
     1              (UMFS(N1)*(1.-BET(IK))+DMFS(N1)*BET(IK))            
              ENDIF                                                     
              SUMV=SUMV+SMS*DTAU                                        
              SUMMS=SUMMS+SMSS*DTAU                                     
          ENDIF                                                         
          TLOLD=TLNEW                                                   
  190 CONTINUE                                                          
C                                                                       
C     END OF LAYER LOOP                                                 
C                                                                       
  200 CONTINUE                                                          
      IF(MSOFF.GT.0)THEN                                                
C         MSRAD RETURNS SOLAR AND THERMAL CONTRIBUTIONS TO RADIANCE     
C         AND THERMAL (FDNTRT) DIFFUSE FLUX FOR SURFACE REFLECTION.     
C         (THESE QUANTITIES IN COMMON /MSRD/)                           
          CALL MSRAD(IVX,V,ISOURC,IDAY,ANGLEM,SS,DMF,DMFS,UMF,UMFS)     
Crea0892     IF(NOPRNT.EQ.-1)WRITE(IPR1,'(F10.0,F7.2,1P5E12.5,0PF10.5)')
Crea0892     1      V,AHT(1),UMB(1),UMBS(1),DMB(1),DMBS(1),SUN,1.       
C                                                                       
C         IKMAX AND IKMAXP NEED BE DEFINED FOR VIEW TO SPACE            
C                                                                       
          IKMAX1=IKMAX-1                                                
          IKMAXP=IKMAX+1                                                
          COSBAR(IKMAX)=COSBAR(IKMAX1)                                  
          OMEGA0(IKMAX)=OMEGA0(IKMAX1)                                  
          UMF(IKMAX)=UMF(IKMAX1)                                        
          UMFS(IKMAX)=UMFS(IKMAX1)                                      
          DMFS(IKMAX)=DMFS(IKMAX1)                                      
          COSBAR(IKMAXP)=COSBAR(IKMAX1)                                 
          OMEGA0(IKMAXP)=OMEGA0(IKMAX1)                                 
          UMF(IKMAXP)=UMF(IKMAX1)                                       
          UMFS(IKMAXP)=UMFS(IKMAX1)                                     
          DMFS(IKMAXP)=DMFS(IKMAX1)                                     
          IKMAX=IKMX                                                    
          INIT=1                                                        
          DO 210 IK=1,IKMAX                                             
              N=ML-IMAP(IK)+IOFF                                        
C                                                                       
C             BET(N): BACKSCATTER FRACTION ALONG OPTICAL PATH AT LAYER N
C                                                                       
              COZEN=ABS(COS(QTHETA(IK)))                                
C                                                                       
C             CALCULATE BACKSCATTER PARAMETERS                          
C                                                                       
              IF(COSBAR(N).EQ.0.)THEN                                   
                  BET(IK)=.5                                            
              ELSE                                                      
                  BET(IK)=BETABS(COZEN,COSBAR(N))                       
              ENDIF                                                     
  210     CONTINUE                                                      
          BET(IKMAX+1)=.5                                               
C                                                                       
C         PERFORM ADDITIONAL LAYER LOOP FOR MULTIPLE SCATTERING         
C                                                                       
          GOTO50                                                        
      ENDIF                                                             
C                                                                       
C  THE VARIABLES "V", "UNIF", "TRACE", "SUMV", "SUMSSR", "SUMMS" AND    
C  "TEB1" ARE TEMPORARILY STORED IN "TX" SO THAT THEIR CONVOLUTION OVER 
C  THE TRIANGULAR SLIT CAN BE CALCULATED.                               
C                                                                       
      TX(2)=UNIF                                                        
      TX(3)=TRACE                                                       
      TX(8)=SUMV                                                        
      TX(12)=SUMSSR                                                     
      TX(13)=SUMMS                                                      
      TX(14)=TEB1                                                       
      DO 230 K=2,58                                                     
          TXK=TX(K)                                                     
          IP1=NWGT                                                      
          DO 220 I=NWGTM1,1,-1                                          
              SLIT(K,IP1)=SLIT(K,I)+WGT(IP1)*TXK                        
  220     IP1=I                                                         
          SLIT(K,1)=WGT(1)*TXK                                          
  230 TX(K)=SLIT(K,NWGT)                                                
C                                                                       
C  Do a similar convolution over surface albedo (SALB) and sky          
C  irradiance (FDNTRT)                                                  
C                                                                       
      DO I=NWGT,2,-1                                                    
          SLITALB(I) = SLITALB(I-1) + WGT(I)*SALB                       
          SLITSKY(I) = SLITSKY(I-1) + WGT(I)*FDNTRT                     
      END DO                                                            
      SLITALB(1) = WGT(1)*SALB                                          
      SLITSKY(1) = WGT(1)*FDNTRT                                        
C                                                                       
C     CHECK IF VALUES ARE TO BE PRINTED                                 
C                                                                       
      IF(IVX.LT.IWRITE)GOTO30                                           
      IWRITE=IWRITE+IDV                                                 
      IF(IWRITE.GT.IVXMAX)FACTOR=.5                                     
      ICOUNT=ICOUNT+1                                                   
C                                                                       
C     RENORMALIZE IF TRIANGULAR SLIT OVERLAPS WITH NEGATIVE FREQUENCIES 
C                                                                       
      IF(IVX.LT.NWGTM1)THEN                                             
          RENORM=1./(1.-.5*(NWGTM1-IVX)*(NWGTM1-IVX+1)*WNORM)           
          DO 240 K=2,58                                                 
  240     TX(K)=RENORM*TX(K)                                            
      ENDIF                                                             
      UNIF=TX(2)                                                        
      TRACE=TX(3)                                                       
      SUMV=TX(8)                                                        
      SUMSSR=TX(12)                                                     
      SUMMS=TX(13)                                                      
      TEB1=TX(14)                                                       
      SALB = SLITALB(NWGT)                                              
      EMISS = 1.0 - SALB                                                
      FDNTRT = SLITSKY(NWGT)                                            
      V=FLOAT(IVX-IWIDM1)                                               
      ALAM=1.0E+04/(V+.000001)                                          
      SUMA=SUMA+FACTOR*IDV*(1.0-TX(9))                                  
      IIII=IEMSCT+1                                                     
      ALTX9=BIGNUM                                                      
      IF(TX(9).GT.0.)ALTX9=-LOG(TX(9))                                  
      GOTO(250,260,260,270),IIII                                        
C                                                                       
C     TRANSMITTANCE ONLY                                                
C                                                                       
  250 TX(10)=1.-TX(10)                                                  
      TX(7)=TX(7)*TX(16)                                                
      WRITE(IPR,'(1X,F7.0,F8.3,11F9.4,F12.3)')V,ALAM,TX(9),TX(17),UNIF, 
     1  TX(31),TRACE,TX(4),TX(5),TX(6),TX(7),TX(11),TX(10),SUMA         
      TX(50)=TX(50)*TX(58)                                              
Crea0892RITE(IPR1,'(F7.0,11F8.4,1PE10.3)')V,TX(17),TX(31),TX(36),TX(44),
Crea0892     1  TX(46),TX(47),TX(50),TX(52),TX(54),TX(55),TX(56)        
Crea0892   WRITE(IPU,'(F7.0,11F8.4,1PE10.3)')V,TX(9),TX(17),UNIF,TX(31),
Crea0892     1  TRACE,TX(4),TX(5),TX(6),TX(7),TX(11),TX(10),ALTX9       
      WRITE (IPU,251) V,ALAM,TX(9),TX(17),TX(36),TX(44),TX(46),TX(47),  
     +                TX(50),TX(31),TX(52),TX(54),TX(55),TX(56),TX(11), 
     +                TX(4),TX(5),TX(6),TX(7),ALTX9                     
  251 FORMAT(F8.1,F11.5,F7.4,16F6.3,1PE10.3)                            
      TRANBUF(INDEX) = TX(9)                                            
      INDEX = INDEX + 1                                                 
      GOTO280                                                           
C                                                                       
C     ATMOSPHERIC RADIANCE INCLUDING EMISSION OF BOUNDARY ATTENUATED BY 
C     TOTAL TRANSMISSION                                                
C                                                                       
C     CALCULATE THERMAL RADIANCE CONTRIBUTION OF BOUNDARY AND ADD THE   
C     SCATTERED CONTRIBUTION TO THE THERMAL RADIANCE IF THE PATH        
C     INTERSECTS THE SURFACE                                            
C                                                                       
  260 IF(TBOUND.LE.0.)THEN                                              
          BBG=0.                                                        
      ELSE                                                              
          BBG=BBFN(TBOUND,V)*TX(9)*EMISS                                
Crea1191       IF(IMULT.EQ.1 .AND. H2.EQ.0.)BBG=BBG+SALB*FDNTRT*TX(9)/PI
          IF(IMULT.EQ.1 .AND. H2.EQ.ZM(1))BBG=BBG+SALB*FDNTRT*TX(9)/PI  
      ENDIF                                                             
C                                                                       
C   ADD THERMAL BOUNDARY AND MULTIPLE SCATTERED RADIANCE                
C                                                                       
      SUMV=SUMV+BBG                                                     
      SUMVV=SUMV                                                        
      IF(V.GT.0.)SUMV=(1.0E+04/V**2)*SUMV                               
      RADBUF(INDEX) = SUMVV                                             
      TRANBUF(INDEX) = TX(9)                                            
      SKYBUF(INDEX) = FDNTRT                                            
      INDEX = INDEX + 1                                                 
      IF(IEMSCT.EQ.1)THEN                                               
          RADSUM=RADSUM+IDV*FACTOR*SUMV                                 
          WRITE(IPR,'(1X,F7.0,F8.3,1P3E10.2,0PF9.4)')                   
     1      V,ALAM,SUMV,SUMVV,RADSUM,TX(9)                              
Crea0892     WRITE(IPU,'(F7.0,F8.4,1PE9.2,T96,E10.3)')V,TX(9),SUMV,ALTX9
          WRITE (IPU,265) V,ALAM,SUMVV,TX(9),ALTX9,FDNTRT               
  265     FORMAT(F8.1,F11.5,E14.5,F10.6,F10.5,E14.5)                    
          SUMT=SUMV                                                     
          SUMTT=SUMVV                                                   
      ELSE                                                              
C                                                                       
C         SOLAR SCATTERED RADIANCE                                      
C                                                                       
          CALL SOURCE(V,ISOURC,IDAY,ANGLEM,SS)                          
C                                                                       
C         MULTIPLY SUMSSR BY THE EXTRATERRESTRIAL SOURCE STRENGTH SS    
C                                                                       
          SUMSSS=SUMSSR*SS                                              
C                                                                       
C         CALCULATE TOTAL SINGLE SCATTERED + MULTIPLE SCATTERED SOLAR   
C         RADIANCE FOR EACH FREQUENCY IN (W/CM2-STER-MICROMETER)        
C                                                                       
          SUMSSR=SUMSSS+SUMMS                                           
          SUMS=0.                                                       
          SUMSS=0.                                                      
          IF(V.GT.0.)SUMS=(1.0E4/V**2)*SUMSSR                           
          IF(V.GT.0.)SUMSSS=(1.0E4/V**2)*SUMSSS                         
C                                                                       
C         RFLSOL IS GROUND-REFLECTED DIRECT SOURCE RADIANCE AND         
C                                                                       
          RFLSOL=0.                                                     
          RFLS=0.                                                       
          RFLSS=0.                                                      
          RFLSSS=0.                                                     
          IF(H2.LE.ZM(1) .AND. TEB1.GT.0)THEN                           
              IF(ANGSUN.GE.0.)RFLSSS=SS*TEB1*SALB*COS(ANGSUN*CA)/PI     
              RFLSOL=RFLSSS                                             
              IF(IMULT.EQ.1)RFLSOL=RFLSOL+SALB*FDNSRT*TX(9)/PI          
              IF(V.GT.0.)THEN                                           
                  STORE=1.E4/V**2                                       
                  RFLS=STORE*RFLSOL                                     
                  RFLSS=STORE*RFLSSS                                    
              ENDIF                                                     
          ENDIF                                                         
          SUMT=SUMV+SUMS+RFLS                                           
          SUMTT=SUMVV+SUMSSR+RFLSOL                                     
          RADSUM=RADSUM+IDV*FACTOR*SUMT                                 
          IF(IMULT.NE.1)THEN                                            
              WRITE(IPR,'(1X,F7.0,F8.3,1P9E10.2,0PF9.4)')V,ALAM,SUMV,   
     1          SUMVV,SUMS,SUMSSR,RFLS,RFLSOL,SUMT,SUMTT,RADSUM,TX(9)   
          ELSE                                                          
              WRITE(IPR,'(1X,F6.0,F8.3,1P11E10.2,0PF7.4)')              
     1          V,ALAM,SUMV,SUMVV,SUMS,SUMSSR,SUMSSS,RFLS,              
     2          RFLSOL,RFLSS,SUMT,SUMTT,RADSUM,TX(9)                    
          ENDIF                                                         
Crea0892          WRITE(IPU,'(F7.0,F8.4,1P6E9.2,0P2F8.4,T96,1PE10.3)')  
Crea08921     V,TX(9),SUMV,SUMS,SUMSSS,RFLS,RFLSS,SUMT,TEB1,TEB2SV,ALTX9
          WRITE (IPU,267) V,ALAM,TX(9),SALB,SUMVV,SUMSSR,RFLSOL,SUMTT,  
     +                    ALTX9                                         
  267     FORMAT(F8.1,F9.5,2F6.3,4E11.4,F7.3)                           
      ENDIF                                                             
      GOTO280                                                           
C                                                                       
C     DIRECTLY TRANSMITTED SOLAR IRRADIANCE IN WATTS/(CM2 MICROMETER)   
C                                                                       
  270 CALL SOURCE(V,ISOURC,IDAY,ANGLEM,SOLIL)                           
      SOLIV=0.                                                          
      IF(V.GT.0.)SOLIV=SOLIL*1.0E+4/V**2                                
      TSOLIV=SOLIV*TX(9)                                                
      TSOLIL=SOLIL*TX(9)                                                
      STSOL=STSOL+TSOLIV*IDV*FACTOR                                     
      SSOL=SSOL+SOLIV*IDV*FACTOR                                        
      WRITE(IPR,'(1X,F7.0,F8.3,1P6E10.2,0PF9.4)')                       
     1  V,ALAM,TSOLIV,TSOLIL,SOLIV,SOLIL,STSOL,SSOL,TX(9)               
Crea0892      WRITE(IPU,'(F7.0,F8.4,1P2E9.2,T96,E10.3)')                
Crea0892     1  V,TX(9),TSOLIV,SOLIV,ALTX9                              
      WRITE (IPU,275) V,ALAM,TSOLIL,SOLIL,TX(9),ALTX9                   
  275 FORMAT(F8.1,F11.5,1PE14.5,E14.5,0PF8.4,1PE10.3)                   
      RADBUF(INDEX) = TSOLIL                                            
      TRANBUF(INDEX) = TX(9)                                            
      INDEX = INDEX + 1                                                 
      SUMT=TSOLIV                                                       
      RADSUM=STSOL                                                      
  280 IF(IEMSCT.NE.0)THEN                                               
          IF(SUMT.GE.RADMAX)THEN                                        
              VRMAX=V                                                   
              RADMAX=SUMT                                               
          ENDIF                                                         
          IF(SUMT.LE.RADMIN)THEN                                        
              VRMIN=V                                                   
              RADMIN=SUMT                                               
          ENDIF                                                         
      ENDIF                                                             
      FACTOR=1.                                                         
      IF(IWRITE.LE.IVXMAX)GOTO30                                        
C                                                                       
C     END OF FREQUENCY LOOP                                             
C                                                                       
      IVX=INT(V+.5)                                                     
      AB=1.-SUMA/(IVX-IV1)                                              
      WRITE(IPR,'(27H0INTEGRATED ABSORPTION FROM,I5,3H TO,I5,7H CM-1 =, 
     1  F10.2,5H CM-1,/24H AVERAGE TRANSMITTANCE =,F6.4,/)')            
     2  IV1,IVX,SUMA,AB                                                 
      IF(IEMSCT.NE.0)THEN                                               
          IF(IEMSCT.EQ.3)THEN                                           
        WRITE(IPR,755)RADSUM,RADMIN,VRMIN,RADMAX,VRMAX                  
755     FORMAT('0INTEGRATED IRRADIANCE =' ,1PE11.3,' WATTS CM-2',       
     1      /' MINIMUM IRRADIANCE    =',E11.3,' WATTS CM-2',            
     2      ' AT',0PF11.1,' CM-1 ',/,'  MAXIMUM ',                      
     3      ' RADIANCE    =',1PE11.3,' WATTS CM-2  (CM-1)-1 AT',        
     4      0PF11.1,5H CM-1)                                            
          ELSE                                                          
          WRITE(IPR,'(22H0INTEGRATED RADIANCE =,1PE11.3,11H WATTS CM-2, 
     1      7H STER-1,/22H MINIMUM RADIANCE    =,E11.3,11H WATTS CM-2,  
     2      19H STER-1 (CM-1)-1 AT,0PF11.1,5H CM-1,/8H MAXIMUM          
     3      14H RADIANCE    =,1PE11.3,30H WATTS CM-2 STER-1 (CM-1)-1 AT,
     4      0PF11.1,5H CM-1)')RADSUM,RADMIN,VRMIN,RADMAX,VRMAX          
Crea0992  IF(IEMSCT.NE.3)WRITE(IPR,'(23H BOUNDARY TEMPERATURE =,F11.2,  
Crea09921      2H K,/22H BOUNDARY EMISSIVITY =,F12.3)')TBOUND,EMISS     
            WRITE(IPR,'(23H BOUNDARY TEMPERATURE =,F11.2,               
     1      2H K,/22H BOUNDARY EMISSIVITY =,F12.3)')TBOUND,EMISS        
         ENDIF                                                          
      ENDIF                                                             
      IF(MODTRN .AND. IV2.GT.MXFREQ)THEN                                
          IRPT=-4                                                       
          IV1=MXFREQ                                                    
      ELSE                                                              
          QFIRST = .TRUE.                                               
      ENDIF                                                             
      RETURN                                                            
      END                                                               
      SUBROUTINE FUDGE(V,SUMY)                                          
C                                                                       
C     TO CALCULATE A NEW FUDGE FACTOR BASED ON THE SUMS OF EXPONENTIALS 
C                                                                       
C     THIS FUNCTION IS WITHIN 5% OF THE ORIGINAL "FUDGE" BETWEEN 0 AND  
C     3000CM-1, PRESERVING THAT VALIDATION.                             
C     THE NEW FUNCTION IS 0.01 OF THE ORIGINAL NEAR 10000CM-1 (1.06NM), 
C     IN ACCORDANCE WITH THE MEASUREMENTS OF JAYCOR, FUNDED BY SDIO.    
C                                                                       
      Y0(V)=EXP(ALOG(3.159E-8)-(2.75E-4)*V)                             
      Y1(V)=EXP(ALOG(1.025*3.159E-8)-(2.75E-4)*V)                       
      Y2(V)=EXP(ALOG(8.97E-6)-(1.300E-3)*V)                             
C                                                                       
C     YO=Y0(V)                                                          
      YA=Y1(V)                                                          
      YB=Y2(V)                                                          
      YAINV=1/YA                                                        
      YBINV=1/YB                                                        
      SUMY=1./(1.*YAINV+1.*YBINV)                                       
      RETURN                                                            
      END                                                               
      SUBROUTINE VSA(IHAZE,VIS,CEILHT,DEPTH,ZINVHT,Z,RH,AHAZE,IH)       
C                                                                       
C     VERTICAL STRUCTURE ALGORITHM                                      
C                                                                       
C     FROM U.S. ARMY ATMOSPHERIC SCIENCES LAB                           
C     WHITE SANDS MISSILE RANGE, NM                                     
C                                                                       
C     CREATES A PROFILE OF AEROSOL DENSITY NEAR THE GROUND,INCLUDING    
C     CLOUDS AND FOG                                                    
C                                                                       
C     THESE PROFILES ARE AT 9 HEIGHTS BETWEEN 0 KM AND 2 KM             
C                                                                       
C                                                                       
C  ***VISIBILITY IS ASSUMED TO BE THE SURFACE VISIBILITY***             
C                                                                       
C     IHAZE  = THE TYPE OF AEROSOL                                      
C     VIS    = VISIBILITY IN KM AT THE SURFACE                          
C     CEILHT = THE CLOUD CEILING HEIGHT IN KM                           
C     DEPTH  = THE CLOUD/FOG DEPTH IN KM                                
C     ZINVHT = THE HEIGHT OF INVERSION OR BOUNDARY LAYER IN KM          
C                                                                       
C     VARIABLES USED IN VSA                                             
C                                                                       
C     ZC     = CLOUD CEILING HEIGHT IN M                                
C     ZT     = CLOUD DEPTH IN M                                         
C     ZINV   = INVERSION HEIGHT IN M                                    
C           SEE BELOW FOR MORE INFORMATION ABOUT ZC, ZT, AND ZINV       
C     D      = INITIAL EXTINCTION AT THE SURFACE (D=3.912/VIS-0.012)    
C     ZALGO  = THE DEPTH OF THE LAYER FOR THE ALGORITHM                 
C                                                                       
C     OUTPUT FROM VSA:                                                  
C                                                                       
C     Z      = HEIGHT IN KM                                             
C     RH     = RELATIVE HUMIDITY AT HEIGHT Z IN PERCENT                 
C     AHAZE  = EXTINCTION AT HEIGHT Z IN KM**-1                         
C     IH     = AEROSAL TYPE FOR HEIGHT Z                                
C     HMAX   = MAXIMUM HEIGHT IN KM USED IN VSA, NOT NECESSARILY 2.0 KM 
C                                                                       
C                                                                       
C     THE SLANT PATH CALCULATION USES THE FOLLOWING FUNCTION:           
C                                                                       
C                 EXT55=A*EXP(B*EXP(C*Z))                               
C                                                                       
C     WHERE 'Z' IS THE HEIGHT IN KILOMETERS,                            
C           'A' IS A FUNCTION OF EXT55 AT Z=0.0 AND IS ALWAYS POSITIVE, 
C           'B' AND 'C' ARE FUNCTIONS OF CLOUD CONDITIONS AND SURFACE   
C               VISIBILITY (EITHER A OR B CAN BE POSITIVE OR NEGATIVE), 
C           'EXT55' IS THE VISIBILE EXTINCTION COEFFICIENT IN KM**-1.   
C                                                                       
C     THEREFORE, THERE ARE 4 CASES DEPENDING ON THE SIGNS OF 'B' AND 'C'
C     CEILHT AND ZINVHT ARE USED AS SWITCHES TO DETERMINE WHICH CASE    
C     TO USE.  THE SURFACE EXTINCTION 'D' IS CALCULATED FROM THE        
C     VISIBILITY USING  D=3.912/VIS-0.012 AS FOLLOWS-                   
C                                                                       
C         CASE=1  FOG/CLOUD CONDITIONS                                  
C                 'B' LT 0.0, 'C' LT 0.0                                
C                 'D' GE 7.0   KM**-1                                   
C                 FOR A CLOUD 7.    KM**-1 IS THE BOUNDARY VALUE AT     
C                 THE CLOUD BASE AND 'Z' IS THE VERTICAL DISTANCE       
C                 INTO THE CLOUD.                                       
C                 VARIABLE USED:   DEPTH                                
C                 ** DEFAULT:  DEPTH OF FOG/CLOUD IS 0.2 KM WHEN        
C                              'DEPTH' IS 0.0                           
C                                                                       
C             =2  CLOUD CEILING PRESENT                                 
C                 'B' GT 0.0, 'C' GT 0.0                                
C                 VARIABLE USED:   CEILHT (MUST BE GE 0.0)              
C                 ** DEFAULTS:  CASE 2 - CEILHT IS CALCULATED FROM      
C                               SURFACE EXTINCTION                      
C                                                                       
C             =3  RADIATION FOG OR INVERSION OR BOUNDARY LAYER PRESENT  
C                 'B' LT 0.0, 'C' GT 0.0                                
C                 VIS LE 2.0 KM DEFAULTS TO A RADIATION FOG AT THE      
C                     GROUND AND OVERRIDES INPUT BOUNDARY AEROSOL TYPE  
C                 VIS GT 2.0 KM FOR AN INVERSION OR BOUNDARY LAYER      
C                     WITH INPUT BOUNDARY AEROSOL TYPE                  
C                 ** IHAZE=9 (RADIATION FOG) ALWAYS DEFAULTS TO A       
C                    RADIATION FOG NO MATTER WHAT THE VISIBILITY IS.    
C                 SWITCH VARIABLE: CEILHT (MUST BE LT 0.0)              
C                 VARIABLE USED:   ZINVHT (MUST BE GE 0.0)              
C                 ** CEILHT MUST BE LT 0.0 FOR ZINVHT TO BE USED **     
C                    HOWEVER, IF DEPTH IS GT 0.0 AND ZINVHT IS EQ 0.0,  
C                    THE PROGRAM WILL SUBSTITUTE DEPTH FOR ZINVHT.      
C                 ** DEFAULT:  FOR A RADIATION FOG ZINVHT IS 0.05 K     
C                              FOR AN INVERSION LAYER ZINVHT IS 2.0 KM  
C                                                                       
C           NOTE: IF IHAZE = 9, BUT VIS GT 2.0 KM RECOMEND              
C           THAT IHAZE DEFAULT TO RURAL AEROSOL                         
C                                                                       
C             =4  NO CLOUD CEILING, INVERSION LAYER, OR BOUNDARY        
C                 LAYER PRESENT, I.E. CLEAR SKIES                       
C                 EXTINCTION PROFILE CONSTANT WITH HEIGHT A SHORT       
C                 DISTANCE ABOVE THE SURFACE                            
C                                                                       
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1                                 
      DIMENSION Z(10),RH(10),AHAZE(10),IH(10)                           
      DIMENSION AA(2),CC(3),EE(4),A(2),B(2),C(2),FAC1(9),FAC2(9)        
      REAL KMTOM                                                        
      DATA AA/92.1,0.3981/,CC/-0.014,0.0125,-0.03 /,KMTOM/1000.0/       
C     THE LAST 3 VALUES OF EE BELOW ARE EXTINCTIONS FOR VISIBILITIES    
C     EQUAL TO 5.0, 23.0, AND 50.0 KM, RESPECTIVELY.                    
      DATA EE/7.0  ,0.7824,0.17009,0.012  /                             
      DATA FAC1/0.0,0.03,0.05,0.075,0.1,0.18,0.3,0.45,1.0/              
      DATA FAC2/0.0,0.03,0.1,0.18,0.3,0.45,0.6,0.78,1.0/                
      WRITE(IPR,599)                                                    
C                                                                       
C     UPPER LIMIT ON VERTICAL DISTANCE - 2 KM                           
      ZHIGH=2000.                                                       
      HMAX=ZHIGH                                                        
      IF(VIS.GT.0.0)GO TO 5                                             
C     DEFAULT FOR VISIBILITY DEPENDS ON THE VALUE OF IHAZE.             
      IF(IHAZE.EQ.8)VIS=0.2                                             
      IF(IHAZE.EQ.9)VIS=0.5                                             
      IF(IHAZE.EQ.2.OR.IHAZE.EQ.5)VIS=5.0                               
      IF(IHAZE.EQ.1.OR.IHAZE.EQ.4.OR.IHAZE.EQ.7)VIS=23.0                
      IF(IHAZE.EQ.6)VIS=50.0                                            
C     IF(IHAZE.EQ.3)VIS= OR IHAZE = 10 VIS IS DETERMINED ELSEWHERE      
   5  D=3.912/VIS-0.012                                                 
C                                                                       
      ZC=CEILHT*KMTOM                                                   
      ZT=DEPTH*KMTOM                                                    
      ZINV=ZINVHT*KMTOM                                                 
C     IHAZE=9 (RADIATION FOG) IS ALWAYS CALCULATED AS A RADIATION FOG.  
      IF(IHAZE.EQ.9)ZC=-1.0                                             
C     ALSO, CHECK TO SEE IF THE FOG DEPTH FOR A RADIATION FOG           
C     WAS INPUT TO DEPTH INSTEAD OF THE CORRECT VARIABLE ZINVHT.        
      IF(IHAZE.EQ.9.AND.ZT.GT.0.0.AND.ZINV.EQ.0.0)ZINV=ZT               
C                                                                       
C     'IC' DEFINES WHICH CASE TO USE.                                   
      IC=2                                                              
      IF(D.GE.EE(1).AND.ZC.GE.0.0)IC=1                                  
C                                                                       
      IF(ZC.LT.0.0.AND.IC.EQ.2)IC=3                                     
      IF(ZINV.LT.0.0.AND.IC.EQ.3)IC=4                                   
      K=1                                                               
      GO TO (10,20,40,50),IC                                            
C                                                                       
C     CASE 1:  DEPTH FOG/CLOUD; INCREASING EXTINCTION WITH HEIGHT FROM  
C              CLOUD/FOG BASE TO CLOUD/FOG TOP.                         
 10   CONTINUE                                                          
      IF(ZC.LT.HMAX.AND.IC.EQ.2)K=2                                     
C     IC=-1 WHEN A CLOUD IS PRESENT AND THE PATH GOES INTO IT.          
C     USE CASE 2 OR 2' BELOW CLOUD AND CASE 1 INSIDE IT.                
      IF(K.EQ.2)IC=(-1)                                                 
C     THE BASE OF THE CLOUD HAS AN EXTINCTION COEFFICIENT OF 7.0   KM-1.
      IF(K.EQ.2)D=EE(1)                                                 
      A(K)=AA(1)                                                        
C     IF THE SURFACE EXTINCTION IS GREATER THAN THE UPPER LIMIT OF 92.1 
C     KM**-1, RUN THE ALGORITHM WITH AN UPPER LIMIT OF 'D+10'.          
      IF(D.GE.AA(1))A(K)=D+10.0                                         
      C(K)=CC(1)                                                        
      IF(ZT.LE.0.0)WRITE(IPR  ,603)                                     
      IF(ZT.LE.0.0)WRITE(IPR  ,604)                                     
      IF(ZT.GT.0.0)WRITE(IPR  ,611)ZT                                   
C     IF THE DISTANCE FROM THE GROUND TO THE CLOUD/FOG TOP IS LESS      
C     THAN 2.0 KM, VSA WILL ONLY CALCULATE UP TO THE CLOUD TOP.         
      IF(ZT.LE.0.0)ZT=200.                                              
      HMAX=AMIN1(ZT+ZC,HMAX)                                            
      GO TO 60                                                          
C                                                                       
C     CASE 2:  CLEAR/HAZY/LIGHTLY FOGGY; INCREASING EXTINCTION WITH HEIG
C              UP TO THE CLOUD BASE.                                    
 20   A(K)=AA(2)                                                        
      E=EE(1)                                                           
      IF(ZC.EQ.0.0)WRITE(IPR  ,600)                                     
      IF(ZC.EQ.0.0)THEN                                                 
        EAK =  ALOG(E/A(K) )                                            
        DAK =  ALOG(D/A(K) )                                            
        ANUM = EAK / DAK                                                
        IF(ANUM . GT. 0) THEN                                           
              CEIL = ALOG(ANUM)/CC(2)                                   
         ELSE                                                           
               CEIL = 2000.                                             
          ENDIF                                                         
      ENDIF                                                             
CC    IF(ZC.EQ.0.0)CEIL=ALOG(ALOG(E/A(K))/(ALOG(D/A(K))))/CC(2)         
      IF(ZC.EQ.0.0)WRITE(IPR  ,602)CEIL                                 
      IF(ZC.GT.0.0)WRITE(IPR  ,610)ZC                                   
      IF(ZC.EQ.0.0)ZC=CEIL                                              
      F = (VIS * ZC/350.0)**2                                           
C                                                                       
C     F IS A SCALING FACTOR USED IN CASE 2                              
C                                                                       
      DF = D/F                                                          
      IF(DF .LT. 1.0E-5) THEN                                           
           A(K)=D - (D*D/(2.*F))                                        
      ELSE                                                              
           A(K) = F*(1.0 - EXP(-D/F))                                   
      ENDIF                                                             
C                                                                       
C     THE COEFFICIENT A IS RECALCULATED BASED UPON THE SCALING FACTOR   
C                                                                       
      GO TO 60                                                          
C                                                                       
C                                                                       
C     CASE 3:  NO CLOUD CEILING BUT A RADIATION FOG OR AN INVERSION     
C              OR BOUNDARY LAYER PRESENT; DECREASING EXTINCTION WITH    
C              HEIGHT UP TO THE HEIGHT OF THE FOG OR LAYER.             
 40   A(K)=D*1.1                                                        
      E=EE(3)                                                           
      IF(IHAZE.EQ.2.OR.IHAZE.EQ.5)E=EE(2)                               
      IF(IHAZE.EQ.6.OR.(VIS.GT.2.0.AND.IHAZE.NE.9))E=EE(4)              
      IF(E.GT.D)E=D*0.99999                                             
      IF(ZT.GT.0.0.AND.ZINV.EQ.0.0.AND.VIS.LE.2.0)ZINV=ZT               
      IF(ZINV.EQ.0.0.AND.VIS.GT.2.0.AND.IHAZE.NE.9)WRITE(IPR  ,601)     
      IF(ZINV.EQ.0.0.AND.(VIS.LE.2.0.OR.IHAZE.EQ.9))WRITE(IPR  ,605)    
      IF(ZINV.EQ.0.0.AND.(VIS.LE.2.0.OR.IHAZE.EQ.9))WRITE(IPR  ,604)    
      IF(ZINV.GT.0.0.AND.VIS.GT.2.0.AND.IHAZE.NE.9)WRITE(IPR  ,612)ZINV 
      IF(ZINV.GT.0.0.AND.(VIS.LE.2.0.OR.IHAZE.EQ.9))WRITE(IPR,614)ZINV  
      IF(ZINV.EQ.0.0.AND.VIS.GT.2.0.AND.IHAZE.NE.9)ZINV=2000            
      IF(ZINV.EQ.0.0.AND.(VIS.LE.2.0.OR.IHAZE.EQ.9))ZINV= 50            
      HMAX=AMIN1(ZINV,HMAX)                                             
      ZC=0.0                                                            
      GO TO 60                                                          
C                                                                       
C     CASE 4:  NO CLOUD CEILING OR INVERSION LAYER;                     
C              CONSTANT EXTINCTION WITH HEIGHT.                         
C                                                                       
50     A(K) = EE(4)                                                     
       C(K) = CC(3)                                                     
C                                                                       
60               B(K)=ALOG(D/A(K))                                      
      IF(IC.EQ.2)C(K)=ALOG(ALOG(E/A(K))/B(K))/ZC                        
      IF(IC.EQ.3)C(K)=ALOG(ALOG(E/A(K))/B(K))/ZINV                      
      IF(ZC.LT.HMAX.AND.K.EQ.1.AND.IC.EQ.2)GO TO 10                     
      IF(IC.EQ.2)HMAX=AMIN1(ZC,HMAX)                                    
      ZALGO=HMAX                                                        
      IF(IC.LT.0)ZALGO=ZC                                               
      WRITE(IPR  ,619)                                                  
      IF(IC.LT.0)K=1                                                    
C                                                                       
      DO 70 I=1,9                                                       
      IF(IC.LT.0.AND.I.EQ.5)K=2                                         
      IF(IC.LT.0.AND.I.EQ.5)ZALGO=HMAX-ZC                               
      Z(I)=ZALGO*(1.0-FAC2(10-I))                                       
      IF(IC.EQ.1)Z(I)=ZALGO*FAC1(I)                                     
      IF(IC.EQ.4)Z(I)=ZALGO*FLOAT(I-1)/8.0                              
      IF(IC.LT.0.AND.I.LT.5)Z(I)=ZALGO*(1.0-FAC2(11-2*I))               
      IF(IC.LT.0.AND.I.GE.5)Z(I)=ZALGO*FAC1(2*I-9)                      
C     IF(IC.LT.0.AND.(I.EQ.7.OR.I.EQ.8))Z(I)=ZALGO*FAC1(2*I-10)         
                 AHAZE(I)=A(K)*EXP(B(K)*EXP(C(K)*Z(I)))                 
      IF(IC.LE.0.AND.I.GE.5)Z(I)=Z(I)+ZC                                
      Z(I)=Z(I)/KMTOM                                                   
      RH(I)=6.953*ALOG(AHAZE(I))+86.407                                 
      IF(AHAZE(I).GE.EE(1))RH(I)=100.0                                  
      VISIB=3.912/(AHAZE(I)+0.012)                                      
      IH(I)=IHAZE                                                       
C     IF A RADIATION FOG IS PRESENT (I.E. VIS<=2.0 KM AND IC=3),        
C     IH IS SET TO 9 FOR ALL LEVELS.                                    
      IF(VISIB.LE.2.0.AND.IC.EQ.3)IH(I)=9                               
C     FOR A DEPTH FOG/CLOUD CASE, IH=8 DENOTING AN ADVECTION FOG.       
      IF(IC.EQ.1.OR.(IC.LT.0.AND.I.GE.5))IH(I)=8                        
      WRITE(IPR  ,620)Z(I),RH(I),AHAZE(I),VISIB,IH(I)                   
   70 CONTINUE                                                          
      HMAX=HMAX/KMTOM                                                   
      RETURN                                                            
C                                                                       
599   FORMAT('0 VERTICAL STRUCTURE ALGORITHM (VSA) USED')               
600   FORMAT(1H ,50X,28HCLOUD CEILING HEIGHT UNKNOWN)                   
601   FORMAT(1H ,50X,42HINVERSION OR BOUNDARY LAYER HEIGHT UNKNOWN,/,   
     1  1H ,50X,39HVSA WILL USE A DEFAULT OF 2000.0 METERS,/)           
605   FORMAT(1H ,50X,27HRADIATION FOG DEPTH UNKNOWN)                    
619   FORMAT(5X,10HHEIGHT(KM),5X,7HR.H.(%),5X,16HEXTINCTION(KM-1),      
     1   5X,15HVIS(3.912/EXTN),5X,5HIHAZE,/)                            
620   FORMAT(7X,F7.4,7X,F5.1,8X,E12.4,11X,F7.4,10X,I2)                  
602   FORMAT(1H ,39X,35HVSA WILL USE A CALCULATED VALUE OF ,F7.1,       
     1       7H METERS,/)                                               
603   FORMAT(1H ,50X,19HCLOUD DEPTH UNKNOWN)                            
604   FORMAT(1H ,50X,38HVSA WILL USE A DEFAULT OF 200.0 METERS,/)       
610   FORMAT(1H ,50X,24HCLOUD CEILING HEIGHT IS ,F9.1,7H METERS,/)      
611   FORMAT(1H ,50X,15HCLOUD DEPTH IS ,F14.1,7H METERS,/)              
612   FORMAT(1H ,50X,38HINVERSION OR BOUNDARY LAYER HEIGHT IS ,F7.1,    
     1 7H METERS,/)                                                     
614   FORMAT(1H ,50X,26HDEPTH OF RADIATION FOG IS ,F7.1,7H METERS,/)    
613   FORMAT(1H ,50X,43HTHERE IS NO INVERSION OR BOUNDARY LAYER OR ,    
     1 13HCLOUD PRESENT,/)                                              
      END                                                               
Crea0892      SUBROUTINE VSANSM(K,AHAZE,IHA1)                           
      SUBROUTINE VSANSM(K,AHAZE,IHA1,H2OFAC,CO2FAC,O3FAC,CH4FAC,O2FAC,  
     +                  SO2FAC)                                         
Crea0892      COMMON RELHUM(34),WHNO3(34),ICH(4),VH(17),TX(63),W(63)    
C     COMMON             WPATH(68, 63),TBBY(68)                         
Crea0892 COMMON IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12)
Crea0892      COMMON ABSC(5,47),EXTC(5,47),ASYM(5,47),VX2(47),AWCCON(5) 
      COMMON /UNLABEL/ RELHUM(34),WHNO3(34),ICH(4),VH(17),TX(63),W(63), 
     +        IMSMX,WPATH(102,63),TBBY(102),PATM(102),NSPEC,KPOINT(12), 
     +        ABSC(5,47),EXTC(5,47),ASYM(5,47),VX2(47),AWCCON(5)        
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1                                 
      COMMON /CNTRL/ KMAX,M,IKMAX,NL,ML,IKLO,ISSGEO,IMULT               
      COMMON /CARD1/ MODEL,ITYPE,IEMSCT,M1,M2,M3,IM,NOPRNT,TBOUND,SALB  
     1  ,MODTRN                                                         
      LOGICAL MODTRN                                                    
      COMMON /CARD1B/ JUNIT(15),WMOLI(12),WAIR1,JLOW                    
      COMMON /CARD2/ IHAZE,ISEASN,IVULCN,ICSTL,ICIR,IVSA,VIS,WSS,WHH,   
     1    RAINRT                                                        
      COMMON /ZVSALY/ ZVSA(10),RHVSA(10),AHVSA(10),IHVSA(10)            
      COMMON /NSINP/ ZMDL(40),PM(40),TM(40),WMDL(40,13)                 
C                                                                       
      COMMON /MDATA/  Z(50),P(50),T(50),WH(50),WCO2(50),WO(50),         
     X WN2O(50),WCO(50),WCH4(50),WO2(50),                               
     X CLD(50,7),RR(50,7)                                               
      COMMON /MDATA1/ WNO(50),WSO2(50),WNO2(50),WNH3(50),WAIR(50)       
      DIMENSION WMOL(13)                                                
C                                                                       
C     OUTPUT COMMON MDATA AND MDATA1                                    
C                                                                       
C                                                                       
C     MODEL 7 CODING                                                    
C     OLD LAYERS  AEROSOL RETURNED                                      
C     NEW LAYERS P,T,DP,AEROSOL                                         
C                                                                       
C                                                                       
C                                                                       
      JML=ML                                                            
      J=1                                                               
      KN=K                                                              
110   IF(KN.GT.10)GO TO 140                                             
      JL=J-1                                                            
      IF(JL.LT.1)JL=1                                                   
      JP=JL+1                                                           
      JLS = JL                                                          
      IF(ZVSA(KN).EQ.ZMDL  (JL))GO TO 140                               
      JLS = JP                                                          
      IF(ZVSA(KN).EQ.ZMDL  (JP))GO TO 140                               
      IF(ZVSA(KN).GT.ZMDL  (JL).AND.ZVSA(KN).LT.ZMDL  (JP))GO TO 115    
      IF(J. GE. JML) GO TO 115                                          
      J = J + 1                                                         
      GO TO 110                                                         
115   Z(K)=ZVSA(KN)                                                     
      DIF=ZMDL  (JP)-ZMDL  (JL)                                         
      DZ=ZVSA(KN)-ZMDL  (JL)                                            
      DLIN=DZ/DIF                                                       
      P(K)  = (PM(JP)-PM(JL))*DLIN+PM(JL)                               
      T(K)   =(TM(JP)-TM(JL))*DLIN+TM(JL)                               
      DO 120 KM = 1,13                                                  
      WMOL(KM)=(WMDL(JP,KM)-WMDL(JL,KM))*DLIN+WMDL(JL,KM)               
120   CONTINUE                                                          
      IHA1  =IHVSA(KN)                                                  
      AHAZE  =AHVSA(KN)                                                 
      FAC=(ZVSA(KN)-ZMDL  (JL))/DIF                                     
      IF(PM(JP).GT.0.0.AND.PM(JL).GT.0.) THEN                           
           P(K)  =PM(JL)*(PM(JP)/PM(JL))**FAC                           
      ENDIF                                                             
      IF(TM(JP).GT.0.0.AND.TM(JL).GT.0.) THEN                           
           T(K)   =TM(JL)*(TM(JP)/TM(JL))**FAC                          
      ENDIF                                                             
      DO 130 KM = 1,13                                                  
      IF(WMDL(JP,KM) .GT.0.0.AND.WMDL(JL,KM).GT.0.0) THEN               
           WMOL(KM)=(WMDL(JL,KM)*(WMDL(JP,KM))/WMDL(JL,KM))**FAC        
      ENDIF                                                             
130   CONTINUE                                                          
       WH(K)    = WMOL(1)                                               
       WCO2(K)  = WMOL(2)                                               
       WO(K)    = WMOL(3)                                               
       WN2O(K)  = WMOL(4)                                               
       WCO(K)   = WMOL(5)                                               
       WCH4(K)  = WMOL(6)                                               
       WO2(K)   = WMOL(7)                                               
       WNO(K)   = WMOL(8)                                               
       WSO2(K)  = WMOL(9)                                               
       WNO2(K)  = WMOL(10)                                              
       WNH3(K)  = WMOL(11)                                              
       WHNO3(K) = WMOL(12)                                              
       WAIR(K)  = WMOL(13)                                              
       WH(K)    = WH(K)*H2OFAC                                          
       WCO2(K)  = WCO2(K)*CO2FAC                                        
       WO(K)    = WO(K)*O3FAC                                           
       WO2(K)   = WO2(K)*O2FAC                                          
       WSO2(K)  = WSO2(K)*SO2FAC                                        
      RETURN                                                            
140   CONTINUE                                                          
      J = JLS                                                           
      IF(K.GT.10) THEN                                                  
         J = K - 10 + JLOW                                              
         IHA1  =0                                                       
         AHAZE  =0.                                                     
      ENDIF                                                             
      Z(K) = ZMDL(J)                                                    
      P(K)  =PM(J)                                                      
      T(K) = TM(J)                                                      
      DO 135 KM = 1,13                                                  
      WMOL(KM)= WMDL(J,KM)                                              
135   CONTINUE                                                          
       WH(K)    = WMOL(1)                                               
       WCO2(K)  = WMOL(2)                                               
       WO(K)    = WMOL(3)                                               
       WN2O(K)  = WMOL(4)                                               
       WCO(K)   = WMOL(5)                                               
       WCH4(K)  = WMOL(6)                                               
       WO2(K)   = WMOL(7)                                               
       WNO(K)   = WMOL(8)                                               
       WSO2(K)  = WMOL(9)                                               
       WNO2(K)  = WMOL(10)                                              
       WNH3(K)  = WMOL(11)                                              
       WHNO3(K) = WMOL(12)                                              
       WAIR(K)  = WMOL(13)                                              
       WH(K)    = WH(K)*H2OFAC                                          
       WCO2(K)  = WCO2(K)*CO2FAC                                        
       WO(K)    = WO(K)*O3FAC                                           
       WO2(K)   = WO2(K)*O2FAC                                          
       WSO2(K)  = WSO2(K)*SO2FAC                                        
      IF(KN.LE.9) IHA1  =IHVSA(KN)                                      
      IF(KN.LE.9)AHAZE  =AHVSA(KN)                                      
      RETURN                                                            
      END                                                               
      SUBROUTINE WATVAP(P,T)                                            
C*************************************************************          
C                                                                       
C        WRITTEN APR, 1985 TO ACCOMMODATE 'JCHAR' DEFINITIONS FOR       
C        UNIFORM DATA INPUT -                                           
C                                                                       
C     JCHAR    JUNIT                                                    
C                                                                       
C    " ",A       10    VOLUME MIXING RATIO (PPMV)                       
C        B       11    NUMBER DENSITY (CM-3)                            
C        C       12    MASS MIXING RATIO (GM(K)/KG(AIR))                
C        D       13    MASS DENSITY (GM M-3)                            
C        E       14    PARTIAL PRESSURE (MB)                            
C        F       15    DEW POINT TEMP (TD IN T(K)) - H2O ONLY           
C        G       16     "    "     "  (TD IN T(C)) - H2O ONLY           
C        H       17    RELATIVE HUMIDITY (RH IN PERCENT) - H2O ONLY     
C        I       18    AVAILABLE FOR USER DEFINITION                    
C        J       19    REQUEST DEFAULT TO SPECIFIED MODEL ATMOSPHERE    
C                                                                       
C     THIS SUBROUTINE COMPUTES THE WATERVAPOR NUMBER DENSITY (MOL CM-3) 
C     GIVE HUMIDITY  # TD = DEW POINT TEMP(K,C), RH = RELATIVE          
C     (PERCENT), PPH2O = WATER VAPOR PARTIAL PRESSURE (MB), DENH2O =    
C     WATER VAPOR MASS DENSITY (GM M-3),AMSMIX = MASS MIXING RATIO      
C     (GM/KG).                                                          
C                     THE FUNCTION DENSAT FOR THE SATURATION            
C     WATER VAPOR DENSITY OVER WATER IS ACCURATE TO BETTER THAN 1       
C     PERCENT FROM -50 TO +50 DEG C. (SEE THE LOWTRAN3 OR 5 REPORT)     
C                                                                       
C       'JUNIT' GOVERNS CHOICE OF UNITS -                               
C                                                                       
C***********************************************************************
      COMMON /IFIL/IRD,IPR,IPU,NPR,IPR1                                 
      COMMON /CARD1B/ JUNITP,JUNITT,JUNIT1(13),WMOL1(12),WAIR,JLOW      
      COMMON /CONSTN/ PZERO,TZERO,AVOGAD,ALOSMT,GASCON,PLANK,BOLTZ,     
     1    CLIGHT,ADCON,ALZERO,AVMWT,AIRMWT,AMWT(35)                     
      DATA C1/18.9766/,C2/-14.9595/,C3/-2.43882/                        
      DATA XLOSCH/2.6868E19/                                            
      DENSAT(ATEMP) = ATEMP*B*EXP(C1+C2*ATEMP+C3*ATEMP**2)*1.0E-6       
C*****                                                                  
      RHOAIR = ALOSMT*(P/PZERO)*(TZERO/T)                               
      PSS = P/PZERO                                                     
      A = TZERO/T                                                       
      WAIR = XLOSCH * PSS * A                                           
      B = AVOGAD/AMWT(1)                                                
      R = AIRMWT/AMWT(1)                                                
      JUNIT = JUNIT1(1)                                                 
      WMOL  = WMOL1(1)                                                  
      IF(JUNIT.NE.10) GO TO 110                                         
C*****GIVEN VOL. MIXING RATIO                                           
CC    WMOL1(1)=WMOL*RHOAIR*1.E-6                                        
      WTEM = WMOL * RHOAIR * 1.0E-6                                     
      GO TO 200                                                         
110   IF(JUNIT.NE.11) GO TO 120                                         
C*****GIVEN NUMBER DENSITY (CM-3)                                       
      WMOL1(1) = WMOL/(RHOAIR*1.E-6)                                    
      WTEM = WMOL                                                       
      GO TO 200                                                         
120   CONTINUE                                                          
      IF(JUNIT.NE.12) GO TO 130                                         
C*****GIVEN MASS MIXING RATIO (GM KG-1)                                 
CC    WMOL1(1) = R*WMOL*1.0E-3*RHOAIR                                   
      WTEM     = R*WMOL*1.0E-3*RHOAIR                                   
      WMOL1(1) = R*WMOL*1.0E+3                                          
      GO TO 200                                                         
130   CONTINUE                                                          
      IF(JUNIT.NE.13) GO TO 140                                         
C*****GIVEN MASS DENSITY (GM M-3)                                       
CC    WMOL1(1) = B*WMOL*1.0E-6                                          
      WTEM     = B*WMOL*1.0E-6                                          
      WMOL1(1) = B*WMOL /RHOAIR                                         
      GO TO 200                                                         
140   CONTINUE                                                          
      IF(JUNIT.NE.14) GO TO 150                                         
C*****GIVEN WATER VAPOR PARTIAL PRESSURE (MB)                           
CC    WMOL1(1) = ALOSMT*(WMOL/PZERO)*(TZERO/T)                          
      WTEM     = ALOSMT*(WMOL/PZERO)*(TZERO/T)                          
      WMOL1(1) = WTEM/(RHOAIR*1.E-6)                                    
      GO TO 200                                                         
150   CONTINUE                                                          
      IF(JUNIT.NE.15) GO TO 160                                         
C*****GIVEN DEWPOINT (DEG K)                                            
      ATD = TZERO/(WMOL)                                                
CC    WMOL1(1)= DENSAT(ATD)*(WMOL)/T                                    
      WTEM    = DENSAT(ATD)*(WMOL)/T                                    
      WMOL1(1) = WTEM/(RHOAIR*1.E-6)                                    
      GO TO 200                                                         
160   CONTINUE                                                          
      IF(JUNIT.NE.16) GO TO 170                                         
C*****GIVEN DEWPOINT (DEG C)                                            
      ATD = TZERO/(TZERO+WMOL)                                          
CC    WMOL1(1) = DENSAT(ATD)*(TZERO+WMOL)/T                             
      WTEM     = DENSAT(ATD)*(TZERO+WMOL)/T                             
      WMOL1(1) = WTEM/(RHOAIR*1.E-6)                                    
      GO TO 200                                                         
170   CONTINUE                                                          
      IF(JUNIT.NE.17) GO TO 199                                         
C*****GIVEN RELATIVE HUMIDITY (PERCENT)                                 
C     DENNUM = DENSAT(A)*(WMOL/100.0)/(1.0-(1.0-WMOL/100.0)*DENSAT(A)/  
C    1    RHOAIR)                                                       
CC    WMOL1(1) = DENSAT(A)*(WMOL/100.0)                                 
      WTEM     = DENSAT(A)*(WMOL/100.0)                                 
      WMOL1(1) = WTEM/(RHOAIR*1.E-6)                                    
      GO TO 200                                                         
 199   WRITE(IPR,951)JUNIT                                              
 951  FORMAT(/,'  **** ERROR IN WATVAP ****, JUNIT = ',I5)              
      STOP'JUNIT'                                                       
  200 CONTINUE                                                          
      WMOL1(1)=2.989E-23 *WMOL1(1) *WAIR                                
      DENST = DENSAT(A)                                                 
Crea0892      DENNUM = WMOL1(1)                                         
      DENNUM = WTEM                                                     
C     RHP = 100.0*(DENNUM/DENST)*((RHOAIR-DENST)/(RHOAIR-DENNUM))       
      RHP = 100.0*(DENNUM/DENST)                                        
   12 FORMAT(   8X,'RH = ',F6.2)                                        
      IF(RHP.LE.100.0) GO TO 230                                        
      WRITE(IPR,10) RHP                                                 
   10 FORMAT(/,' ********WARNING (FROM WATVAP) # RELATIVE HUMIDTY = ',  
     1    G10.3,' IS GREATER THAN 100 PERCENT')                         
  230 CONTINUE                                                          
      RETURN                                                            
      END                                                               
