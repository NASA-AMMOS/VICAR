      INCLUDE 'VICMAIN_FOR'
      SUBROUTINE MAIN44
C   18 Nov   1993 ...FFM... Made portable
C   15 APRIL 1987 ...FFM... Increase buffer size (fix FR 30176)
C   12 Jun 1986 ...FFM... Convert to Vicar2 I/O
c   14 Feb 1985 ...LWK... fix Vicar1* label processing; disable HALF/BYTE
c                         parameters
C   27 JUNE 1975...DAH...CHANGES FOR CONVERSION TO 360/OS
C   18 NOV 71 - JBS - FIX STUPID MISTAKE IN PREVIOUS UPDATE
C  10/6/71 JMM61     HALFWORD
C     PROGRAM TO INSERT MAP GRID
C     MFLAG=0.....MODULATED GRID WITH DEFAULTED VALUE 64
C     MFLAG=1.....MODULATED GRID WITH SPECIAL VALUE
C     MFLAG=2.....BLACK AND WHITE GRID
C     HMODE=0.....BYTE IMAGE
C     HMODE=1.....HALFWORD IMAGE

      CHARACTER*27  MSG1/'**** MAPGRID LINES TRUNATEd'/
      CHARACTER*30  MSG2/'**** MAPGRID SAMPLES TRUNCATEd'/
      CHARACTER*26  MSG3/'**** MAPGRID run COMPLETED'/
      CHARACTER*49  MSG4/'**** MAPGRID-REQUESTED AREA OUTSIDE INPUT PICT
     &URE'/
      LOGICAL XVPTST
      CHARACTER*32 TYPE
      CHARACTER*7 FMT 
      INTEGER*4 OUTUNIT
      INTEGER*2 LOUT(8000,2)
      INTEGER MAX,HMODE,HMAX,MOD
      INTEGER SSO,SLO,MFLAG
      INTEGER FORMAT
      DATA    MAX/255/,HMODE/0/,HMAX/511/
      DATA    MFLAG/0/

      CALL XVMESSAGE('MAPGRID version 18-Nov-93',' ')
C
C     OPEN INPUT DATA
      CALL XVUNIT(INUNIT,'INP',1,ISTATUS,' ')
      CALL XVOPEN(INUNIT,ISTATUS,'OPEN_ACT','SA','IO_ACT','SA',
     + 'U_FORMAT','HALF',' ') 
C
C     OPEN OUTPUT DATA
      CALL XVUNIT(OUTUNIT,'OUT',1,ISTATUS,' ')
      CALL XVOPEN(OUTUNIT,ISTATUS,'OP','WRITE','OPEN_ACT','SA',
     +'IO_ACT','SA','U_FORMAT','HALF',' ')
C
C     FIND OUT INPUT FORMAT
      CALL XVGET(INUNIT,ISTAT,'PIX_SIZE',IBYTPIX,'FORMAT',FMT,'TYPE',
     +TYPE,' ')
      IF (IBYTPIX .EQ. 2) HMODE=1 

C
C        'BLAC - BLACK AND WHITE GRID'
      IF (XVPTST('BLACK')) MFLAG=2
C
C        'MODU - MODULATED GRID WIRH SPECIFIED VALUE MOD
      CALL XVPARM('MODU',MOD,ICOUNT,IDEF,1)
      IF (IDEF .EQ. 0) MFLAG=1

C
C     ADJUST SIZE
      CALL XVSIZE(SLO,SSO,NLO,NSO,NLI,NSI)
      SSO=SSO-1
      IF((SSO+NSO).GT.NSI) THEN
          NSO=NSI-SSO
          CALL XVMESSAGE(MSG2,' ')
          IF(NSO.LE.0) CALL MABEND(MSG4)
      END IF
      SLO=SLO-1
      IF((SLO+NLO).GT.NLI) THEN
          NLO=NLI-SLO
          CALL XVMESSAGE(MSG1,' ')
          IF(NLO.LE.0) CALL MABEND(MSG4)
      END IF
      ISW=2
      SSO = SSO + 1
      SLO = SLO + 1
      FORMAT=1-HMODE
      IF(HMODE.EQ.1)MAX=HMAX
      IF(MFLAG.EQ.0)MOD=64
      IF(MFLAG.EQ.2)MOD=MAX
      IF(FORMAT.EQ.1)CALL XVMESSAGE('BYTE INPUT',' ')
      IF(HMODE.EQ.1)CALL XVMESSAGE('HALFWORD INPUT',' ')
      DO 20 I=1,NLO
      ISW=3-ISW
      CALL XVREAD(INUNIT,LOUT(1,ISW),ISTATUS,'LINE',SLO,'SAMP',SSO,
     +'NSAMPS',NSO,' ')
      SLO=0
    7 IF(25*(I/25).EQ.I) GO TO 13
      NTEST=(I+4)/5
      IF(2*(NTEST/2).EQ.NTEST) GO TO 10
      DO 8 J=25,NSO,50
      NLOG=LOUT(J,ISW)
    8 LOUT(J,ISW)=MIN0(NLOG+MOD,MAX)
      DO 80 J=50,NSO,50
      NLOG=LOUT(J,ISW)
   80 LOUT(J,ISW)=MAX0(NLOG-MOD,0)
   81 CONTINUE
      DO 9 J=100,NSO,100
      NLOG=LOUT(J,ISW)
    9 LOUT(J,ISW)=MAX0(NLOG-MOD,0)
      GO TO 19
   10 DO 11 J=25,NSO,50
      NLOG=LOUT(J,ISW)
   11 LOUT(J,ISW)=MAX0(NLOG-MOD,0)
      DO 110 J=50,NSO,50
      NLOG=LOUT(J,ISW)
  110 LOUT(J,ISW)=MIN0(NLOG+MOD,MAX)
  111 CONTINUE
      DO 12 J=100,NSO,100
      NLOG=LOUT(J,ISW)
   12 LOUT(J,ISW)=MIN0(NLOG+MOD,MAX)
      GO TO 19
   13 IF(100*(I/100).EQ.I) GO TO 16
      NTEST=I/25
      IF(2*(NTEST/2).EQ.NTEST) GO TO 150
      DO 14 J=1,NSO,10
      M=J+4
      DO 14 K=J,M
      NLOG=LOUT(K,ISW)
   14 LOUT(K,ISW)=MIN0(NLOG+MOD,MAX)
      DO 15 J=6,NSO,10
      M=J+4
      DO 15 K=J,M
      NLOG=LOUT(K,ISW)
   15 LOUT(K,ISW)=MAX0(NLOG-MOD,0)
      GO TO 81
  150 DO 151 J=1,NSO,10
      M=J+4
      DO 151 K=J,M
      NLOG=LOUT(K,ISW)
  151 LOUT(K,ISW)=MAX0(NLOG-MOD,0)
      DO 152 J=6,NSO,10
      M=J+4
      DO 152 K=J,M
      NLOG=LOUT(K,ISW)
  152 LOUT(K,ISW)=MIN0(NLOG+MOD,MAX)
      GO TO 111
   16 DO 17 J=1,NSO,10
      M=J+4
      DO 17 K=J,M
      NLOG=LOUT(K,ISW)
  17  LOUT(K,ISW)=MAX0(NLOG-MOD-MOD,0)
      DO 18 J=6,NSO,10
      M=J+4
      DO 18 K=J,M
      NLOG=LOUT(K,ISW)
   18 LOUT(K,ISW)=MIN0(NLOG+MOD+MOD,MAX)
   19 CONTINUE
      CALL XVWRIT(OUTUNIT,LOUT(1,ISW),ISTATUS,'NSAMPS',NSO,' ')
   20 CONTINUE
      CALL XVMESSAGE(MSG3,' ')
      RETURN
      END
