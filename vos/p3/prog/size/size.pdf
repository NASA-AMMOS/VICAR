PROCESS HELP=*
PARM INP     TYPE=STRING
PARM OUT     TYPE=STRING
PARM SIZE    TYPE=INTEGER COUNT=4   	DEFAULT=(1,1,0,0)
PARM NL      TYPE=INTEGER COUNT=0:1 	DEFAULT=0
PARM NS      TYPE=INTEGER COUNT=0:1 	DEFAULT=0
PARM AREA    TYPE=INTEGER COUNT=4   	DEFAULT=(1,1,0,0)
PARM NOIN    TYPE=KEYWORD COUNT=0:1 VALID=NOIN		DEFAULT=--
PARM ZOOM    TYPE=REAL    COUNT=0:1     DEFAULT=0.0
PARM LZOOM   TYPE=REAL    COUNT=0:1     DEFAULT=0.0
PARM SZOOM   TYPE=REAL    COUNT=0:1     DEFAULT=0.0
PARM SCALE   TYPE=REAL    COUNT=1	DEFAULT=1.0
PARM LIMITS  TYPE=INTEGER COUNT=0:2	DEFAULT=--
PARM OFORM   TYPE=KEYWORD COUNT=0:1 VALID=(BYTE,HALF,FULL,REAL)	DEFAULT=--
END-PROC
.TITLE
VICAR program SIZE
.HELP
PURPOSE:
SIZE is a VICAR applications program which may be used to magnify or compress
the size of an image and/or change its aspect ratio.  The program may also
be used to re-scale the input DN values and to change the data format
(e.g. byte-to-halfword).  Note, however, that if image size or aspect ratio
manipulation is not required, these latter two operations are more efficiently
accomplished via program C.

EXECUTION STATEMENT:

      SIZE  INP=IPIC  OUT=OPIC  user-parameters...

where IPIC is the input image and OPIC is the output image.  IPIC and OPIC
may be in byte, halfword (16-bit integer), fullword (32-bit integer), or
floating point (REAL*4) data format.  IPIC and OPIC may have different data
formats.
.page
OPERATION:

The input data format is determined from the input picture label.  The output
data format may be specified via the keyword OFORM.  If not specified, OPIC
will be output in the same data format as IPIC.

The magnification or compression (zoom) factor is specified via the VICAR
size field or by the ZOOM, LZOOM, or SZOOM parameters (see below).  
The zoom factor(s) is inserted as annotation in the output picture label.
.page
The AREA parameter may be used to restrict processing to an area of the
input image.  For example:

		SIZE  IDS  OPIC  ZOOM=-3  AREA=(10,10,100,100)
is equivalent to
		COPY  IPIC  IDS  (10,10,100,100)
		SIZE  IDS  OPIC  ZOOM=-3

SIZE performs its own interpolation (i.e. GEOM, et al, are not fetched).
Since it treats a special case of geometric transformation, the resulting
simplified algorithm is faster than the more general algorithm in GEOM.
See sections on image magnification and reduction below.
.page
If the output data format is different from the input format, data format
conversion is performed.  The image DNs may be optionally rescaled at this
point via parameter SCALE.  Note that rescaling may be necessary when
converting to a smaller data format (e.g. halfword-to-byte).  If a sample
value is outside to range of the output format (e.g. 0 to 255 DN for byte
data), the output DN will be truncated.  The output DN range may be
further limited via the LIMITS parameter.
.page
SPECIFYING THE SIZE OF THE OUTPUT IMAGE:

The size of the output image is specified either by entering the number of
lines and samples in the VICAR size field, or by specifying a magnification
or compression factor via the ZOOM, LZOOM, or SZOOM parameters:

Ex:  Enlarging a 3x3 image to a 9x9 image can be achieved in the
     following equivalent ways:
		SIZE  A  B  SIZE=(1,1,9,9)
        or      SIZE  A  B  NL=9  NS=9
	or	SIZE  A  B  ZOOM=3
        or      SIZE  A  B  LZOOM=3  SZOOM=3

.page
If the output image size is specified by entering the number of lines and
samples, then the ZOOM factor is determined by computing the ratio between
the output and input picture dimensions.  Independent ZOOM factors are
computed in the line and sample dimensions, and may result in a change in
the image aspect ratio:

	z1=NLO/NLI		z2=NSO/NSI

where the input image size is NLI x NSI and the output image size is NLO x NSO.
The computations are performed in floating point, so that the output picture
size is not necessarily a multiple of the input picture size (i.e. z1 and
z2 are floating-point numbers).

.page
The ZOOM factors may be specified via the ZOOM parameter,
		    ZOOM=z
where z1=z2=z, or independently via the LZOOM and SZOOM parameters:
		LZOOM=z1  SZOOM=z2

When the zoom factor is an integer, it is identical in function to the ZOOM
option in programs VIDS or IDX.  If z is positive, the input picture size
is multiplied by z.  If z is negative, the picture size is divided by -z.
Note that z=-2 is equivalent to z=0.5.

Specification of a zoom factor overrides the corresponding NL and/or NS values
in the VICAR SIZE field.  If a zoom factor is not specified the output picture
size defaults to the corresponding NL and/or NS value in the SIZE field.

.page
IMAGE MAGNIFICATION:

The following example illustrates how image magnification is treated. Let
the input picture A be a 3x3 image as follows:

			       2  5  8
			A  =   5  8 11
			       8 11 14

.page
The statement
		SIZE  A  B  SIZE=(1,1,9,9)  'NOIN
	or	SIZE  A  B  ZOOM=3  'NOIN

will produce a 9x9 output image B by replicating each input sample into a
3x3 pixel area:

		       2  2  2  5  5  5  8  8  8
		       2  2  2  5  5  5  8  8  8
		       2  2  2  5  5  5  8  8  8
		       5  5  5  8  8  8 11 11 11
		B  =   5  5  5  8  8  8 11 11 11
		       5  5  5  8  8  8 11 11 11
		       8  8  8 11 11 11 14 14 14
		       8  8  8 11 11 11 14 14 14
		       8  8  8 11 11 11 14 14 14
.page
The statement
		SIZE  A  B  SIZE=(1,1,9,9)  ZOOM=3

will produce a 9x9 output image by interpolating between the four nearest
neighbors and extrapolating around the picture borders.

		       0  1  2  3  4  5  6  7  8
		       1  2  3  4  5  6  7  8  9
		       2  3  4  5  6  7  8  9 10
		       3  4  5  6  7  8  9 10 11
		B  =   4  5  6  7  8  9 10 11 12
		       5  6  7  8  9 10 11 12 13
		       6  7  8  9 10 11 12 13 14
		       7  8  9 10 11 12 13 14 15
		       8  9 10 11 12 13 14 15 16
.page

As in the no-interpolation case above, each input sample has been "blown up"
to fill a 3x3 area.  However, because interpolation is performed, the input
sample values equal the output sample values only at the geometric centers
of these 3x3 areas.

Note that the magnified image output by SIZE differs slightly from what one
might obtain using GEOM, MGEOM, or GEOMA. The user may find it instructive
to attempt to achieve an identical result as the example above by using GEOM
or GEOMA.

.page
IMAGE COMPRESSION:

Image compression is treated as the functional inverse of image magnification.
Unless the keyword 'NOIN is specified, the compression is performed via area
averaging.  To illustrate, let picture B be the 9x9 image of our previous
example:

		       0  1  2  3  4  5  6  7  8
		       1  2  3  4  5  6  7  8  9
		       2  3  4  5  6  7  8  9 10
		       3  4  5  6  7  8  9 10 11
		B  =   4  5  6  7  8  9 10 11 12
		       5  6  7  8  9 10 11 12 13
		       6  7  8  9 10 11 12 13 14
		       7  8  9 10 11 12 13 14 15
		       8  9 10 11 12 13 14 15 16
.page
The statement:
		SIZE  B  C  ZOOM=-3

will cause each output pixel to be computed by averaging a 3x3 area of
the input image.  For example, output pixel (1,1) = (0+1+2+1+2+3+2+3+4)/9
The resulting output image C will be identical to our original input image A:

			       2  5  8
			C  =   5  8 11
			       8 11 14

The area averaging operation is extended to non-itegral zoom factors by
assigning fractional weights to samples around the area margins, and unit
weights to interior samples. The output sample is then the weighted samples
divided by the sum of their weights.
.page
If the keyword 'NOIN is specified,

		SIZE  IPIC  OPIC  ZOOM=-N  'NOIN

then no pixel interpolation is performed.  The output image is generated
by selecting every Nth image line from IPIC, and every Nth pixel of each of
these lines, begining with pixel (1,1).  Note that when the output picture
is several times smaller than the input picture, most of the samples in the
input image are ignored in the generation of the output image.

.page
  To illustrate, let picture B be
the 9x9 image of our previous example:

		       0  1  2  3  4  5  6  7  8
		       1  2  3  4  5  6  7  8  9
		       2  3  4  5  6  7  8  9 10
		       3  4  5  6  7  8  9 10 11
		B  =   4  5  6  7  8  9 10 11 12
		       5  6  7  8  9 10 11 12 13
		       6  7  8  9 10 11 12 13 14
		       7  8  9 10 11 12 13 14 15
		       8  9 10 11 12 13 14 15 16

.page
The statements:
		SIZE  B  C  ZOOM=-3  'NOIN
		SIZE  B  D  ZOOM=-3  'NOIN  AREA=(2,2,8,8)

will generate 3x3 output images C and D of the form:

		0  3  6		       2  5  8
	 C  =	3  6  9		D  =   5  8 11
		6  9 12		       8 11 14

Note the use of the AREA parameter to begin the resampling at a point other
than pixel (1,1).
.page

The input image may be compressed by a non-integral zoom factor r:

		SIZE  IPIC  OPIC  ZOOM=r  'NOIN

where r is a floating point number between 0 and 1.  Each output sample is
generated by determining where it comes from in the input image and selecting
the sample closest to this point.

.page
EXAMPLES:

Let the input image be a 100 x 100 byte picture. The following equivalent
statements will magnify the input image by a factor of 2.5:

		SIZE  A  B  SIZE=(1,1,250,250)
		SIZE  A  B  ZOOM=2.5

To blow up a 50x50 area from the center of the picture by a factor of 4:

		SIZE  A  B  ZOOM=4  AREA=(26,26,50,50)

To average all the lines of an image together, use

		SIZE  A  B  NL=1
.page

The following equivalent statements magnify the line direction by 2 and
shrinks the sample direction by 2:

		SIZE  A  B  SIZE=(1,1,200,50)
		SIZE  A  B  LZOOM=2  SZOOM=-2

.page
PROGRAM RESTRICTIONS:

Both IPIC and OPIC may be up to 70,000 pixels in width (sample size) and of
arbitrary length (line or vertical dimension).

The input image may be on tape or disk.  However, the output image must be on
random-access disk storage.


.LEVEL1
.VARI INP
Input image.
.VARI OUT
Output image.
.VARI SIZE
Output picture size.
.VARI NL
Output number of lines
picture.
.VARI NS
Output number of samples
picture.
.VARI OFORM
Output data format.
Valid keywords are BYTE, HALF,
FULL, or REAL.
.VARI AREA
Input image area to be SIZEd
.VARI NOIN
Specifies no interpolation.
.VARI ZOOM
Specifies the ZOOM factor.
.VARI LZOOM
Vertical zoom factor.
.VARI SZOOM
Horizontal zoom factor.
.VARI SCALE
Scale applied to output values.
.VARI LIMITS
Lower and upper limits of DN
range.
.LEVEL2
.VARI INP
    Ex:  INP=IPIC
where IPIC is the input image file specification.  IPIC may be
in byte, halfword (16-bit integer), fullword (32-bit integer), or floating
point (REAL*4) data format.  IPIC may be up to 20,000 pixels in width (sample
size) and of arbitrary length (line or vertical dimension), and may be
located on disk or magnetic tape.
.VARI OUT
    Ex:  OUT=OPIC
where OPIC is the output image file specification.  The output data format is
specified by the OFORM parameter.  OPIC may be up to 20,000 pixels in width
(sample size) and of arbitrary length (line or vertical dimension), and must
be located on random-access disk storage.
.VARI SIZE
    SIZE=(1,1,NL,NS) 
where NL and NS specify the number of lines and samples in the output image.
If the SIZE parameter is ommitted, the output image size should be specified
via the ZOOM, LZOOM, and/or SZOOM parameters.

    Ex: Enlarging a 3x3 image to a 9x9 image can be achieved in the
        following ways:

		SIZE  A  B  SIZE=(1,1,9,9)
        or      SIZE  A  B  NL=9  NS=9
	or	SIZE  A  B  ZOOM=3
        or      SIZE  A  B  LZOOM=3  SZOOM=3
.VARI NL
    NL=n
where n is an integer specifying the number of lines in the output image.
The parameters NL and NS may be used instead of the SIZE parameter to specify
the size of the output image.
.VARI NS
    NS=n
where n is an integer specifying the number of samples in the output image.
The parameters NL and NS may be used instead of the SIZE parameter to specify
the size of the output image.
NOTE: The same restrictions that pertain to the SIZE parameter also pertain
to NL and NS.(See HELP SIZE)
.VARI OFORM
Keyword OFORM specifies the data format of the output image.  Valid values
are BYTE for byte output, HALF for halfword (16-bit integer) output, FULL
for fullword (32-bit integer) output, and REAL for 32-bit floating-point
output.  If defaulted, the output data format is set equal to the input
data format.
.VARI AREA
    AREA=(SL,SS,NL,NS)
where SL, SS, NL, and NS are all integers specifying the starting line,
starting sample, number of lines, and number of samples, respectively, of
the input area. The input area defaults to (1,1,NLI,NSI) where NLI and NSI
are the number of lines and number of samples in the input image.
.VARI NOIN
NOIN specifies that no interpolation is to be performed.  A nearest
neighbor is used to compute each output sample value. The default is to
perform interpolation.
.VARI ZOOM
    ZOOM=z
where z is an integer or floating point number specifying the output image
size as a ratio of the input image size (the zoom factor).  The image size
is scaled by the factor z in both line and sample dimensions.  Note that
the line and sample zoom factors may be specified independently via the
LZOOM and SZOOM parameters.  I.e. ZOOM=2 is equivalent to LZOOM=2 SZOOM=2.

The zoom factor is identical in function as in VIDS or IDX. If z is
positive, the input picture size is multiplied by z.  If z is negative,
the picture size is divided by -z.  Note that z=-2 is equivalent to z=0.5.
Specification of a zoom factor overrides the corresponding NL and/or NS
values in the VICAR SIZE field.  If a zoom factor is not specified the
output picture size defaults to the corresponding NL and/or NS value in
the SIZE field.
.VARI LZOOM
    LZOOM=z
where z is an integer or floating point number specifying the magnification
or reduction factor of the image in the line (vertical) dimension.  If z is
positive, the line dimension is multiplied by z.  If z is negative, the line
dimension is divided by -z.  Note that z=-2 is equivalent to z=0.5.

Specifying LZOOM overrides the corresponding NL value in the VICAR SIZE
field.  If LZOOM is not specified the output line dimension defaults to the
corresponding NL value in the SIZE field.
.VARI SZOOM
    SZOOM=z
where z is an integer or floating point number specifying the magnification
or reduction factor of the image in the sample (horizontal) dimension.  If z
is positive, the sample dimension is multiplied by z.  If z is negative, the
sample dimension is divided by -z.  Note that z=-2 is equivalent to z=0.5.

Specifying SZOOM overrides the corresponding NS value in the VICAR SIZE
field.  If SZOOM is not specified the output line dimension defaults to the
corresponding NS value in the SIZE field.
.VARI SCALE
    SCALE=s
where s is an integer or floating point number specfying an optional
scaling to be applied to the output DN values: OUTDN=s*OUTDN.  If SCALE
is not specified, no scaling is performed.
.VARI LIMITS
  LIMITS=(I1,I2)
where I1 and I2 are integers specifying the lower and upper limits of the
output DN range. All DN's outside this range are set equal to ILO and IHI.
The defaults are 0 and 255 for byte output, -32768 and 32767 for halfword
output, and -2147483648 and 2147483647 for fullword data.  This DN range
check is applied to floating point output.
.END
