	INCLUDE 'VICMAIN_FOR'
	SUBROUTINE MAIN44
C
      IMPLICIT NONE
C
      INTEGER*4    I, ILOC, INUNIT, J, NBI,LBANDS,LSAMPS,
     1             NLI, NSI, STATUS, OUTUNIT, ISAMPS, LCNTR, 
     2             IBVAL(250),LGBVAL(250),LPBVAL(1024),ICNT,IDEF,
     3             JSTART,NCHAN,JCOUNT
      REAL*8       LGBSUM(250), ASAMPS(250), 
     1             LBMEAN(250),LSMEAN, LPSUM(1024), LPMEAN(1024)
      REAL         BUFIN(256000) 
      CHARACTER*3  INORG
      CHARACTER*4  FORMAT
C
C*****INITIALIZE VARIABLES
      DATA IBVAL,LGBVAL/250*0,250*0/
      DATA LGBSUM,ASAMPS,LBMEAN,LSMEAN 
     1     /250*0.0D0,250*0.0D0,250*0.0D0,0.0D0/
C
C  OPEN INPUT FILES 
C
      CALL XVUNIT(INUNIT,'INP',1,STATUS,' ')
      CALL XVOPEN(INUNIT,STATUS,'OPEN_ACT','SA','IO_ACT','SA',
     &            'U_FORMAT','REAL',' ')
C
      CALL XVGET(INUNIT,STATUS,'NL',NLI,'NS',NSI,'NB',NBI,'ORG',
     &           INORG,'FORMAT',FORMAT,' ')
      CALL XVPARM('JSTART',JSTART,ICNT,IDEF,' ')
      CALL XVPARM('NCHAN',NCHAN,ICNT,IDEF,' ')
      IF(NCHAN.EQ.0)NCHAN=NBI
C
C*****INITIALIZE THE COUNTERS AND ADDITIONAL PARAMETERS     
      ISAMPS=NSI*NCHAN
      LBANDS=NCHAN+1
      LSAMPS=LBANDS*NSI
      LCNTR=0
C
C*****OPEN OUTPUT DATA FILE 
      CALL XVUNIT(OUTUNIT,'OUT',1,STATUS,' ')
      CALL XVOPEN(OUTUNIT,STATUS,'OPEN_ACT','SA','IO_ACT','SA',
     &            'O_FORMAT','REAL','U_NB',LBANDS,
     &            'U_FORMAT','REAL','OP','WRITE','U_ORG','BIL',' ')
C
      CALL XVMESSAGE('USE FIT3D TO CONVERT YOUR OUTPUT DATA TO BYTE ',
     +               ' ')
      CALL XVMESSAGE('FOR DISPLAY OR TO SCALE YOUR OUTPUT DATA',' ')
      CALL XVMESSAGE(' ',' ')
C
C*****FIRST PASS - CALCULATE THE BAND AND SCENE MEANS 
C
      CALL XVMESSAGE(' First pass of two',' ')
      DO I = 1,NLI
        JCOUNT=JSTART 
        DO J = 1,NCHAN  
          ILOC=(NSI * (J-1)) + 1
          CALL XVREAD(INUNIT,BUFIN(ILOC),STATUS,'LINE',I,
     &                'SAMP',1,'NSAMPS',NSI,'BAND',JCOUNT,' ')
          JCOUNT = JCOUNT + 1
        ENDDO
        CALL LOGST1(BUFIN, NSI, NCHAN, ISAMPS, LGBSUM, 
     1              LGBVAL)
        LCNTR=LCNTR+1
      ENDDO
      CALL LSTAT2(LGBSUM, NSI, NCHAN, ASAMPS, LCNTR, LGBVAL, 
     1            LBMEAN, LSMEAN)
C
C*****SECOND PASS CALCULATE STATS ON LOG RESIDUAL DATA FOR 
C*****BYTE REDUCTION 
C
      LCNTR=0
      CALL XVMESSAGE(' Second pass of two',' ')
      DO I= 1,NLI
        JCOUNT=JSTART 
        DO J = 1,NCHAN  
          ILOC=(NSI * (J-1)) + 1
          CALL XVREAD(INUNIT,BUFIN(ILOC),STATUS,'LINE',I,
     &                'SAMP',1,'NSAMPS',NSI,'BAND',JCOUNT,' ')
          JCOUNT = JCOUNT + 1
        ENDDO
      CALL LOGRES(BUFIN, NSI, NCHAN, LSAMPS, LBMEAN, 
     1           LSMEAN, LPSUM, LPMEAN, LPBVAL, LBANDS, 
     2           LCNTR)
        DO J = 1,LBANDS 
          ILOC=(NSI * (J-1)) + 1
          CALL XVWRIT(OUTUNIT,BUFIN(ILOC),STATUS,' ')
        ENDDO
        LCNTR=LCNTR+1
      ENDDO
C
C  CLOSE FILES
C
      CALL XVCLOSE(INUNIT,STATUS,' ')
      CALL XVCLOSE(OUTUNIT,STATUS,' ')
      RETURN
      END
C
C*****SUBROUTINE TO FIND THE LOG SUM OF EACH BAND OF REAL 
C*****DATA 
C 
C*****CHECK IBVAL IS RESET TO ZERO IF CALCULATING REAL DATA AND 
C*****BYTE DATA STATS 
C 
      SUBROUTINE LOGST1(BUFIN, NSI, NCHAN, ISAMPS, LGBSUM, LGBVAL)
      REAL BUFIN(ISAMPS)
      REAL*8 LGBSUM(NCHAN)
      INTEGER LGBVAL(NCHAN)
C 
      JSTART = 1
      JEND = NSI
      DO I = 1, NCHAN
        DO J = JSTART, JEND
          IF (BUFIN(J) .GT. 0.0) THEN 
            LGBSUM(I) = (DLOG(DBLE(BUFIN(J)))) + LGBSUM(I)
          END IF 
          IF (BUFIN(J) .EQ. 0.0) LGBVAL(I) = LGBVAL(I) + 1
        ENDDO 
        JSTART = JSTART + NSI
        JEND = JEND + NSI
      ENDDO 
      RETURN 
      END 
C 
C*****SUBROUTINE TO CALCULATE THE LOG MEAN OF EACH BAND OF REAL 
C*****DATA 
      SUBROUTINE LSTAT2(LGBSUM, NSI, NCHAN, ASAMPS, LCNTR, LGBVAL, 
     1           LBMEAN, LSMEAN)
      REAL*8 LGBSUM(NCHAN), LBMEAN(NCHAN), ASAMPS(NCHAN), LSMEAN, 
     1       LSSUM
      INTEGER LGBVAL(NCHAN)
C 
C*****INITIALIZE ASAMPS,LBMEAN AND CALCULATE ASAMPS, THE NUMBER OF 
C*****GOOD VALUES PER CHANNEL 
C 
      DO I = 1, NCHAN
        ASAMPS(I) = 0.0D0
        ASAMPS(I) = (DFLOAT((NSI*LCNTR) - LGBVAL(I)))
        LBMEAN(I) = 0.0D0
      ENDDO 
C 
C*****CALCULATE THE LOG MEAN OF EACH BAND FROM THE LOG SUM OF EACH 
C*****BAND 
C 
      DO I = 1, NCHAN
        LBMEAN(I) = LGBSUM(I) / ASAMPS(I)
      ENDDO 
C 
C*****INITIALIZE LSSUM 
      LSSUM = 0.0D0
C 
C*****CALCULATE THE OVERALL LOG SCENE MEAN 
      DO I = 1, NCHAN
        LSSUM = LBMEAN(I) + LSSUM
      ENDDO 
      LSMEAN = 0.0D0
      LSMEAN = LSSUM / (DFLOAT(NCHAN))
C
      RETURN 
      END 

C*****SUBROUTINE TO CALCULATE LOG RESIDUALS 
      SUBROUTINE LOGRES(BUFIN, NSI, NCHAN, LSAMPS, LBMEAN, 
     1           LSMEAN, LPSUM, LPMEAN, LPBVAL, LBANDS,
     2           LCNTR)
      REAL*8 LBMEAN(NCHAN), LPSUM(NSI), LPMEAN(NSI), GBANDS, 
     1       LSMEAN 
      REAL   BUFIN(LSAMPS) 
      INTEGER LPBVAL(NSI)
C
C*****INITIALIZE REAL*8 VARIABLES
      DO I = 1, NSI
        LPSUM(I) = 0.0D0
        LPMEAN(I) = 0.0D0
        LPBVAL(I) = 0
      ENDDO
C
C*****INITIALIZE EXTRA CHANNEL
      K = (NCHAN*NSI) + 1
      DO I = 1, NSI
        BUFIN(K) = 0.0
        K = K + 1
      ENDDO
C  
C*****SET UP COUNTERS 
      K = 1
C*****CALCULATE THE SUM OF EACH PIXEL FOR NCHAN 
      DO J = 1, NSI
        L = J
        DO I = 1, NCHAN
          IF (BUFIN(L) .GT. 0.0) THEN 
            LPSUM(J) = (DLOG(DBLE(BUFIN(L)))) + LPSUM(J)
          ENDIF  
          IF (BUFIN(L) .LE. 0.0) THEN 
            LPBVAL(J) = LPBVAL(J) + 1
          ENDIF 
          L = L + NSI
        ENDDO 
      ENDDO 
C 
C*****CALCULATE THE MEAN OF EACH PIXEL FOR NCHAN 
      DO I = 1, NSI
        GBANDS = 0.0D0
        GBANDS = (DFLOAT(NCHAN - LPBVAL(I)))
        IF (GBANDS.LE.0.0D0)THEN
          LPMEAN(I) = 0.0D0
        ELSE   
          LPMEAN(I) = LPSUM(I) / GBANDS
        ENDIF
      ENDDO
C     
C*****SUBTRACT OFF THE LOG PIXEL MEAN AND LOG BAND MEAN AND ADD 
C*****THE LOG SCENE MEAN 
C 
      DO I = 1, NCHAN
        DO J = 1, NSI
          IF (BUFIN(K) .GT. 0.0 .AND. LPMEAN(J) .GT. 0.D0) THEN 
            BUFIN(K) =SNGL((DLOG(DBLE(BUFIN(K)))) - LBMEAN(I) 
     1                 - LPMEAN(J) + LSMEAN)
          ELSEIF(BUFIN(K) .LE. 0.0 .OR. LPMEAN(J) .EQ. 0.0D0)
     1    THEN 
            BUFIN(K) = 0.0
          ENDIF  
          K = K + 1
        ENDDO
      ENDDO
C 
C*****PUT THE LOG PIXEL MEAN INTO NCHAN+1 
      K = (NSI*NCHAN) + 1
      DO I = 1, NSI
        BUFIN(K) = SNGL(LPMEAN(I))
        K = K + 1
      ENDDO
C 
      RETURN 
      END
