process help=*
PARM INP TYPE=STRING COUNT=(1:20)
PARM OUT TYPE=STRING COUNT=1 

! Outputs for coordinate index output files
PARM IDX_OUT TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM ICM_OUT TYPE=STRING COUNT=(0:1) DEFAULT=--

PARM NAVTABLE TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM INPUT_RANGE TYPE=INTEGER COUNT=(0:2) DEFAULT=--
PARM BIAS  TYPE=REAL COUNT=(0:200) DEFAULT=--
PARM BRTCORR TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM AZOUT TYPE=REAL COUNT=(0:1) DEFAULT=--
PARM ELOUT TYPE=REAL COUNT=(0:1) DEFAULT=--
PARM TWIST TYPE=REAL COUNT=(0:1) DEFAULT=--
PARM OUTSIZE TYPE=INTEGER COUNT=(0:2) DEFAULT=--
PARM OUTOFF TYPE=REAL COUNT=(0:2) DEFAULT=--
PARM OUTPOS TYPE=REAL COUNT=(0:3) DEFAULT=--
PARM DELTAZ TYPE=REAL COUNT=(0:1) DEFAULT=--
PARM ZOOM TYPE=REAL COUNT=(0:2) DEFAULT=--
PARM SHIFT TYPE=KEYWORD VALID=("NOSHIFT", "SHIFT") DEFAULT=NOSHIFT
PARM BAND    TYPE=INTEGER COUNT=(0:1) DEFAULT=--
PARM NORMAL  TYPE=REAL COUNT=(0:3) DEFAULT=--
PARM GROUND  TYPE=REAL COUNT=(0:3) DEFAULT=--
PARM SURF_COORD TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM SURF_MESH TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM SURF_CSFILE TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM SURFACE TYPE=KEYWORD COUNT=(0:1) +
  VALID=("INFINITY","PLANE", "SPHERE1", "SPHERE2", "MESH") DEFAULT=--
PARM MAXNL TYPE=INTEGER COUNT=(0:1) VALID=(2:30000) DEFAULT=30000
PARM MAXNS TYPE=INTEGER COUNT=(0:1) VALID=(2:30000) DEFAULT=30000
PARM MAXFOV TYPE=REAL COUNT=(0:2) VALID=(0:180) DEFAULT=--
PARM NUMBER TYPE=KEYWORD VALID=("NUMBER","NONUMBER") DEFAULT="NONUMBER"
PARM NUMBER_DN TYPE=REAL DEFAULT=4096 COUNT=(1:32)
PARM NUMBER_ZOOM TYPE=INTEGER DEFAULT=1
PARM NUMBER_START TYPE=INTEGER DEFAULT=1
PARM FOOTPRT TYPE=KEYWORD VALID=("NOFOOTPRINT", "FOOTPRINT", "OVERLAP") +
	DEFAULT=NOFOOTPRINT
PARM FOOT_DN TYPE=REAL DEFAULT=4096 COUNT=(1:32)
PARM FOOT_RANGE TYPE=INTEGER COUNT=0:2 DEFAULT=--
PARM FOOT_COLOR TYPE=STRING COUNT=0:1 DEFAULT=--
PARM RAD TYPE=KEYWORD VALID=("RAD", "ZENITH_SCALED_RAD", "NORAD") DEFAULT=RAD
PARM DNSCALE TYPE=REAL DEFAULT=100.0
PARM DNSCALE_IN TYPE=KEYWORD COUNT=1 VALID=("AUTOSCALE", "RESCALE", "NOSCALE") DEFAULT=AUTOSCALE
PARM DNSCALE_OUT TYPE=KEYWORD COUNT=1 VALID=("STATIC", "DYNAMIC", "IDENTITY") DEFAULT=STATIC
PARM TAU TYPE=REAL DEFAULT=0.6
PARM CONFIG_PATH STRING DEFAULT="$MARS_CONFIG_PATH"
PARM MATCH_METHOD TYPE=STRING COUNT=(0:1) VALID=("LOOSE", "TIGHT") +
        DEFAULT=LOOSE
PARM MATCH_TOL TYPE=REAL COUNT=1 DEFAULT=.002
PARM POINT_METHOD TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM NOSITE TYPE=KEYWORD COUNT=(0:1) VALID=NOSITE DEFAULT=--

PARM USE_ALT_POINT TYPE=KEYWORD COUNT=(0:1) VALID=USE_ALT_POINT DEFAULT=--
PARM ALT_POS TYPE=REAL COUNT=(0:3) DEFAULT=--
PARM ALT_QUAT TYPE=REAL COUNT=(0:4) DEFAULT=--
PARM ALT_AXIS TYPE=REAL COUNT=(0:3) DEFAULT=--
PARM ALT_ANGLE TYPE=REAL COUNT=(0:1) DEFAULT=--

PARM INTERP TYPE=KEYWORD VALID=("INTERP", "NOINTERP") DEFAULT=INTERP

PARM BBOX TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM BBOX_COUNT TYPE=INTEGER COUNT=1 DEFAULT=3

PARM DATA_SET_NAME TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM DATA_SET_ID TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM RELEASE_ID TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM PRODUCT_ID TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM PRODUCER_ID TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM PRODUCER_INST TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM TARGET_NAME TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM TARGET_TYPE TYPE=STRING COUNT=(0:1) DEFAULT=--

PARM RSF TYPE=STRING COUNT=0:100 DEFAULT=--
PARM DEBUG_RSF TYPE=KEYWORD COUNT=0:1 VALID=DEBUG_RSF DEFAULT=--
PARM COORD TYPE=KEYWORD VALID=("FIXED", "INSTRUMENT", "SITE", "ROVER", +
	"LOCAL_LEVEL", "PIXL_TOOL", "PIXL_BASE", "PIXL_SENSOR") DEFAULT="FIXED"
PARM COORD_INDEX TYPE=INTEGER COUNT=0:10 DEFAULT=--
PARM FIXED_SITE TYPE=INTEGER COUNT=0:1 DEFAULT=--
PARM SOLUTION_ID TYPE=STRING COUNT=0:1 DEFAULT=--

!# parm inp(2-20) hints=default

END-PROC

.TITLE
VICAR program MARSMOS.

.HELP
PURPOSE:
To assemble multiple frames into a mosaic, using an output camera model
(derived from the input).  Thus the output will appear as though it was
taken by a similar camera with a much wider field of view.
Stereo pair mosaics will be rotated with epipolar lines coinciding with
picture lines, making them easy to view.  However, this means that spacecraft
tilt will be maintained, meaning that for pan/tilt lander cameras, the
horizon will not be level if the spacecraft is not level.

This is a multimission program derived from Mars Pathfinder's mpfmos.
It supports any mission, instrument, and camera model supported by the
Planetary Image Geometry (Pig) software suite.

Best results are obtained if the images are all taken from the same camera
at approximately the same position.

The program will optionally place an image number at the center of each
image in the output, to aid in identification of the images.  See NUMBER,
NUMBER_DN, NUMBER_ZOOM, and NUMBER_START.  It will also optionally draw a
"footprint" border around each image.  See FOOTPRT and FOOT_DN.

The program can accept a navigation file written by marsnav which will improve
the accuracy of the mosaic.

Radiometric correction is performed on the inputs by default; this may be
turned off via the RAD keyword parameter.

The program will work with color images if such are given as input and the
BAND parameter is not specified; the number of output bands will equal the
maximum number of bands across all inputs.  Images with less than that number
of bands will simply repeat the last available band (so you can mix bw and
color images).  If BANDS is specified, only that one single band is
processed and output.

EXECUTION:
There are two ways to present input images:
 
marsmos inp=(a.img,b.img,c.img,...) out=mos.img
or
marsmos inp=ascii_listoffiles out=mos.img

where ascii_listoffiles is a text file created by Sybase or an editor,
containing the list of filenames to include in the mosaic, one per record.
Up to 200 input images can be listed.

Additionally, marsnav may be used:

marsnav inp=ascii_listoffiles out=navtab search=25
marsmos inp=ascii_listoffiles out=mos.img navtable=navtab

USAGE:
Labels will be written to the output image specifying all parameters
needed in order to reproject the image, and to convert pixel coordinates
into XYZ view rays in the output coordinate system.  See ???? for
details on what the label items mean.

This mosaic program compensates for parallax and for lander 
translation and rotation.

.PAGE
OPERATION:
The program uses the appropriate camera model for each input image and
outputs a mosaic using a camera model derived from the first input (aligned
for stereo viewing).  Each pixel in the output is transformed from output
to input camera models in the following steps:
1. Each output pixel defines a unit vector.
2. We compute the intersection of this vector with a surface model.  This is
   normally a tilted plane, possibly with an offset from the origin of the
   spacecraft coordinate system (so the "ground" can be above or below the
   origin).
3. Then this ground point is ray traced back into the input camera images.
   We take the input images in order of input.
4. The first image is selected which can see the ground point.
5. The DN value in the selected input image is bilinearly interpolated
   and placed into the output location
Input images are loaded into memory 20 at a time.


.page
INDEX FILES:
Optionally, index (IDX and ICM) files can be output.  These collectively
identify what pixel from which input was used for each point in the mosaic.

The index file (IDX_OUT parameter) contains, for each pixel, a halfword
integer (16 bit signed) identifying which image the pixel came from.
0 indicates no value (black in the mosaic).  Numbers from 1-n match the
order of files in the input list file (or INP parameter, if a list file
isn't given).  For most mosaics, the file could be converted to byte using
CFORM (half is used to support more than 255 input files).

The ICM file (ICM_OUT parameter) is an Image Coregistration Map.  It is a
two-band float file containing the line, sample coordinate of the input
pixel used for the point.  This is the same basic format as correlation
maps such as MARSCOR3 produces, except that multiple images are involved
(thus the need for the index file).

.page
ALTERNATE POINTING:

Normally, marsmos "points" the output camera based on the first input.  Thus
the camera is related to that input.  This can be overridden via the
OUTPOS and AZOUT/ELOUT/TWIST parameters.  However, this gives somwhat
limited control and can lead to strange results in some cases.

The ALT_* parameters provide an alternate pointing mechanism.  Rather than
specifying pointing via az/el/twist, the camera is directly moved to the
specified position (ALT_POS) and orientation (ALT_QUAT or ALT_AXIS and
ALT_ANGLE).  This provides more control, but should be used cautiously
as the pose depends on how the camera was calibrated - you are moving
the camera from the current C point and identity quat directly to the
specified pose.  So it is ignoring the calibration quaternion.

If any alternate pointing is used, set -USE_ALT_POINT.  It is not
required that ALT_POS be set.  If a pos is not given, the camera C point is
used.  A quaternion (either via ALT_QUAT or ALT_AXIS/ALT_ANGLE) is required.

The use case for alternate pointing is the M20 PIXL trapezoid correction.
It may or may not be useful in other contexts.
.page
Bounding Boxes
--------------
Marsmos will optionally output a file containing bounding boxes for all of
the inputs.  This can be used to (approximately) see where each image is in
the mosaic.

Bounding boxes are created by taking the corners of each input, and some
number of points along the sides, and projecting them into the mosaic.  The
line and sample coordinates trace out a polygon on the mosaic.

Importantly, the bounding boxes are NOT min/max extents.

The number of points on each side is controlled by BBOX_COUNT.  The default
of 3 means that 3 points are projected along each side... 1/4, halfway, and
3/4 between the corners (the corners are always projected).  A BBOX_COUNT of
0 would project only the corners.  Points are evenly spread along the side.

The bounding box file (BBOX parameter) is the name to use for an output
comma-separated value (CSV) file.  The first column is the filename (minus
pathnames) of the input.  The second column is a WKT (Well-Known-Text) string
containing a polygon defining the (sample line) coordinates of the points going
around the edge.

Coordinates are 1-based, per standard VICAR convention (1,1 is the center
of the upper-left pixel).  The bounding box coordinates could well go
negative, or larger than the mosaic size, if the point is off the edge of the
mosaic.  Clipping is left to the user (it can be useful to know the actual
bounds irrespective of clipping).

There are two special cases to consider.  They cannot happen for the marsmos
perspective projection, but are retained for completeness as other projections
might.

Wrapped polygons.  The cyl, cylper, and sinusoidal projections can wrap around
in azimuth, with the left edge continuing on the right.  If a bounding box
polygon straddles the wrap point, then two lines are created in the bbox file
(with the same filename).  One has the polygon on the left side of the image,
the other has the equivalent polygon on the right.  They are identical, except
the sample values have been translated by the full 360-degree width of the
mosaic at that point (note, for sinusoidal projection this value varies per
line).  The second polygon is provided as a convenience to avoid users having
to figure out the wrapping.

Zenith/nadir polygons.  For the same projections (cyl/cylper/sin), if the
polygon encompasses the zenith or nadir, the polygon does not "close" normally.
In these situations, three extra points are added to the polygon to close it,
going vertically up or down to the mosaic edge.  This happens on both wraps
(zenith/nadir can only occur for wrapped polygons).  The end result is that
both wrapped polygons together encompass the area above or below the line of
edge points, depending on whether it's zenith or nadir.

.page

HISTORY:
  1994-04-30 J Lorre - 	Initial mpfmos
  1998-08    B. Deen - 	Multimission conversion
  2017-03-15 mjl,rgd - 	Added color support
  2020-05-01 wlb - 	Replaced sprintfs, initialized vars, removed unused vars.
  2020-05-05 youlu - 	Added -zenith_scaled_rad capabilities
                     	Added DNSCALE_IN, DNSCALE_OUT, and TAU parameters
  2020-11-17 E. Sarkissian - Added ICM_OUT and IDX_OUT parameters
  2021-08-06 rgd	Added ALT_* parameters
  2023-02-07 rgd	Added bounding boxes

COGNIZANT PROGRAMMER:  Bob Deen

.LEVEL1
.VARI INP
input image(s) or
file list.

.VARI OUT
Output image.

.VARI IDX_OUT
Optional output
index filename.

.VARI ICM_OUT
Optional output
coregistration coordinate
filename.

.VARI NAVTABLE
Corrected navigation
filename.

.VARI INPUT_RANGE
The range of inputs to
actually mosaic.

.VARI BIAS
Set of values to bias
each tile in the mosiac.

.VARI BRTCORR
Input file containing
brightness corrections.

.VARI AZOUT
Output image
Commanded azimuth.
See COORD.

.VARI ELOUT
Output image
Commanded elevation.
See COORD.

.VARI TWIST
Sets twist value
for output camera.

.VARI OUTSIZE
Overrides size of
output image.

.VARI OUTOFF
Overrides x/y offset
values for output.

.VARI OUTPOS
Overrides the camera
position.

.VARI DELTAZ
Moves the camera
in Z only.

.VARI ZOOM
Zoom factor for
mosaic.

.VARI SHIFT
Specifies whether camera
model should be shifted to
incorporate offsets.

.VARI BAND
The BSQ band number or
don't specify for all bands.

.VARI NORMAL
Surface normal vector.

.VARI GROUND
Surface ground point.

.VARI SURF_COORD
Coordinate system used to define
surface parameters.

.VARI SURFACE
The type of mars
surface to use INFINITY, PLANE, 
SPHERE1, SPHERE2, MESH.

.VARI SURF_MESH 
Mesh file for surface model

VARI SURF_CSFILE 
File containing CS for surface
model

.VARI MAXNL
Maximum # output
picture lines.

.VARI MAXNS
Maximum # output
picture samples.

.VARI NUMBER
Numbers the center of
each input.

.VARI NUMBER_DN
DN to use for the
input numbers.

.VARI NUMBER_ZOOM
Zoom factor for the
input numbers.

.VARI NUMBER_START
Where to start counting
the input numbers.

.VARI FOOTPRT
Draws footprints around
each image.

.VARI FOOT_DN
DN to use for the
footprint numbers.

.VARI FOOT_RANGE
Min and max image number in which
to draw footprints and numbers.

.VARI FOOT_COLOR
Text file indicating color to
use for footprints and numbers.

.VARI RAD
Turns on or off
radiometric correction.

.VARI TAU
atmospheric opacity

.VARI DNSCALE
DN scaling factor.

.VARI DNSCALE_IN
Selects the mode for
applying scaling parameters

.VARI DNSCALE_OUT
Selects the mode for
scaling outputs

.VARI DNSCALE
DN scaling factor.

.VARI CONFIG_PATH
Path used to find
configuration/calibration
files.

.VARI MATCH_METHOD
Specifies a method
for pointing corrections.

.VARI MATCH_TOL
Tolerance value for
matching pointing params
in pointing corrections file.

.VARI POINT_METHOD
Specifies a mission-
specific pointing
method to use

.VARI NOSITE
Disables coordinate
system sites.

.VARI BBOX
Bounding box filename

.VARI BBOX_COUNT
Number of points per edge
for a bounding box

.VARI DATA_SET_NAME
Specifies the full name given
to a data set or a data product.

.VARI DATA_SET_ID
Specifies a unique alphanumeric
identifier for a data set or data
product.

.VARI RELEASE_ID
Specifies the unique identifier
associated with the release to the
public of all or part of a data set.
The release number is associated with
the data set, not the mission.

.VARI PRODUCT_ID
Specifies a permanent, unique
identifier assigned to a data
product by its producer.

.VARI PRODUCER_ID
Specifies the unique identifier
of an entity associated with the
production a data set.

.VARI PRODUCER_INST
Specifies the full name of the
identity of an entity associated
with the production of a data set.

.VARI TARGET_NAME
Specifies a target.

.VARI TARGET_TYPE
Specifies the type of a named target.

.VARI INTERP
Turns on or off
the interpolation.

.VARI RSF
Rover State File(s) to use.

.VARI DEBUG_RSF
If enabled, this causes the internal database of RMC locations to be
printed out to the stdout log.  This is after the RSF files have been
loaded and the coordinate systems read from the input label(s).

.VARI COORD
Coordinate system to use
for parameters and projection frame.

.VARI COORD_INDEX
Coordinate system index for
some COORD/mission combos.

.VARI FIXED_SITE
Which site is FIXED for
rover missions.

.VARI SOLUTION_ID
Solution ID to use for
pointing correction.

.LEVEL2
.VARI INP
There are two options for describing input images.
 
Either:
List the image file names
 
Or:
provide an ascii file with the file names listed, one per record.

.VARI OUT
Output image containing the mosaic.

If BANDS is not specified, the output will have the same number of bands
as the input with the most bands, and all bands will be processed.  Inputs
with fewer than that many bands repeat their last band, so bw and color images
can be mixed.  If BANDS is specified, the output will have a single band.

.VARI IDX_OUT
Specifies the (optional) output filename for the index file.

The index file contains, for each pixel, a halfword integer (16 bit signed)
identifying which image the pixel came from.  0 indicates no value (black
in the mosaic).  Numbers from 1-n match the order of files in the input list
file (or INP parameter, if a list file isn't given).  For most mosaics, the
file could be converted to byte using CFORM (half is used to support more
than 255 input files).

.VARI ICM_OUT
Specifies the (optional) output filename for the ICM file.

The ICM file is an Image Coregistration Map.  It is a two-band float file
containing the line, sample coordinate of the input pixel used for the point.
This is the same basic format as correlation maps such as MARSCOR3 produces,
except that multiple images are involved (thus the need for the index file,
in IDX_OUT).

.VARI NAVTABLE
Corrected navigation filename.
If marsnav was run on the input images it created a table of corrected
pointing parameters. If you refer to this table using NAVTABLE it
will override the pointing parameters (e.g. azimuth and elevation) in the
picture labels, giving you a better registered mosaic.

.VARI INPUT_RANGE
The range of inputs to actually mosaic.  Normally all inputs are mosaicked.
However, if this parameter is specified, all inputs will be used to calculate
the output projection, but only the inputs in the specified range will be
mosaicked.  This allows the generation of a large mosaic to be spread out
over several nodes on a network, with a program like FASTMOS used to combine
all the outputs together.  Note that any underlays (annotation that goes
under the image) should be put on the *last* mosaic only for FASTMOS;
overlays (that show on top of everything) should be on all images (or at
least the first).

The input numbers are 1-based.  If only one number is specified, it is the
starting number; the end defaults to the # of inputs.

.VARI BIAS
Specifies values to multiply DN values of each input
picture. Defaults to 1.0 for each picture. For example, 
if there are five input images, then try
BIAS=(1.0, 1.33, 0.8, 1.90, 1.0)

BIAS is obsolete now; it has been replaced by BRTCORR.

.VARI BRTCORR
Specifies an input file containing brightness corrections.  This is an
XML file that comes from a program like marsbrt which contains correction
factors for each image.  These factors may be additive or multiplicative
constants to be applied to the image, or other corrections that may be
implemented in the future.

The BRTCORR mechanism is intended to replace BIAS.  Using them together
should be avoided because the labels will not reflect both (the BIAS
overrides).  If you do, however, the BRTCORR corrections are applied to
the data first, before BIAS.

.VARI AZOUT
The commanded "azimuth" of the output image. 
Defaults to the average input azimuth.
Measured in the coordinate system specified by COORD.

.VARI ELOUT
The commanded "elevation" of the output image. 
Defaults to the average input elevation.
Measured in the coordinate system specified by COORD.

.VARI TWIST
Sets the "twist" value for the output camera.  This is a rotation
applied about the pointing axis of the camera which has the effect of
rotating the output mosaic.  Measured in degrees, with positive resulting
in a counterclockwise rotation of the output mosaic (because it causes
a clockwise rotation of the camera).

Note that setting twist to 0 does not by any means guarantee a "flat
horizon" or anything else; most models have a natural twist to them,
which can be significant.

.VARI OUTSIZE
Overrides size of the output image.  Specifying OUTSIZE and OUTOFF will cause
the same projection to be generated even with different input images (normally
these values are derived from the input images).

.VARI OUTOFF
Overrides x/y offset values for output.  This offset is the distance from the
camera coordinate origin to the image origin (0-based) and affects where the
center of the projection falls in the output.  Specifying OUTOFF and OUTSIZE
will cause the same projection to be generated even with different input
images (normally these values are derived from the input images).

.VARI OUTPOS
Overrides the camera position.  This combined with AZOUT/ELOUT and TWIST
allow the mosaic to be generated from any point of view.  Note that severe
parallax can be introduced by changing the camera position.  See also DELTAZ.
Measured in the coordinate system specified by COORD.

.VARI DELTAZ
The DELTAZ value is added to the Z component of the camera position.
This can be more convenient than using OUTPOS in certain circumstances,
e.g. moving the camera up to achieve a vertical point of view (combined
with ELOUT), because you do not need to obtain the initial camera position
a priori.

If both OUTPOS and DELTAZ are specified, the effects are cumulative:  the
position is set to OUTPOS and then DELTAZ is applied.

.VARI ZOOM
Sets the zoom factor for the image.  A value of 1.0 results in the "natural"
size for the mosaic; 0.5 is half size, etc.

.VARI SHIFT
There are two different ways of handling a subframe (or superframe, in the
case of a mosaic) for current camera models.  The historical method has been
to use a "nominal" model and externally handle an offset from camera model
to physical file coordinates.  This is the intent of the Offset values, which
are automatically calculated but may be overridden via OUTOFF.

A newer method is to incorporate the shift (translation) represented by
these offsets into the camera model itself.  The offsets thus become 0.

If SHIFT is specified, this newer method is used.  The default setting
(NOSHIFT) retains the use of the offsets.

Note that the output mosaic should be identical in either case!  The only
difference will be in how the camera model in the label is formulated.

.VARI BAND
The BSQ input file band number. Default is to process all bands (e.g. color).
Providing a value will cause only that one band to be processed.

.VARI NORMAL
The local mars surface normal vector coordinate system specified by SURF_COORD 
parameter (defaults to surface fixed).
For most pan/tilt cameras, if the lander is not tilted this vector
would be: normal=(0,0,-1).  ie: x_component=0, y_component=0, z_component=-1.
This need not be a unit vector.  This vector is used to define the
surface plane to which image points are projected in order to minimize
parallax.
For SPHERE1/2 surface models, normal's first parameter is used to
denote sphere's radius.  Thus to describe sphere of radius R, user
would specify normal=(R, 0, 0).

.VARI GROUND
Any point on the surface, in coordinate system specified by SURF_COORD parameter
(defaults to surface fixed).  This defines where the tilted plane is in space.  
Although any point may be used, normally the point just "under" the origin is selected.
Defaults:
Mars Pathfinder:  (0.0, 0.0, 0.0)       (lander zero point is on the ground)
Mars 98 Lander:   (0.0, 0.0, 1.64)      (lander zero point is on top of deck)
MER           :   (0.0, 0.0, 0.294)
For MER images taken on top of the lander, the ground is roughly at (0.0, 0.0, 0.7)
For SPHERE1/2 surface models, GROUND parameter is used to denote sphere's
center.  
    
.VARI SURF_COORD
The coordinate system that surface parameters like GROUND and NORMAL are defined in.
For valid values refer to COORD parameter description.  The interpretation of the 
values is dependent on the mission. Defaults to surface fixed coordinate system.
Note that no validation is done for input strings because COORD is using the same
values.  So user needs to be extra careful in specifying SURF_COORD value.  For 
example COORD=local would be correctly interpreted to mean LOCAL_LEVEL because of
validation process.  On the other hand specifying SURF_COORD=local would lead
to underlying code treating the input value as invalid and reverting to default
which is FIXED frame.  So the values for SURF_COORD should be spelled exactly as
found in the list of valid values for COORD parameter.

.VARI SURFACE
The type of mars surface to use. The surface is used to intercept view rays
emanating from the cameras in order to model out parallax between the
stereo cameras. The options are surface=INFINITY which means no surface
is used, surface=PLANE (the default case). If surface = PLANE then the plane
is defined by the NORMAL and GROUND parameters.  For the cases when PLANE 
doesn't match local topography sufficiently well, here are two sphere surface
models: surface=SPHERE1 and surface=SPHERE2.  SPHERE1 is useful to model
convex surfaces like hills, it returns closest(first) ray-surface intersection 
point.  SPHERE2 is useful to model concave surfaces, like crater when the
camera point is outside looking in, it returns farthest(second) ray-surface 
intersection point.  For the case when camera is inside the sphere surface, 
like rover sitting in the crater, there is only a single intersection point
and SPHERE1 and SPHERE2 behave exactly the same. Last, MESH is a surface
model defined by a mesh file (.obj) which path is given with SURF_MESH.

.VARI SURF_MESH 
Mesh OBJ file to use as the surface model. For the mesh to be used,
SURFACE must be set to MESH. The coordinates of the mesh vertices can be 
expressed in any CS. However the mesh CS must be supplied via SURF_CSFILE.
If SURF_CSFILE is not used, then the mesh is assumed to be to the CS that
results from COORD or SURF_COORD

VARI SURF_CSFILE 
File name of a vicar file whose CS (contained in the labels) will be read and
assigned to the SURFACE model. The type of image and its content are of no
interest, we are just reading the CS. That CS will supersede any other surface 
CS definition (COORD or SURF_COORD). Its typical use is to supply a CS to a
given mesh file (expectedly the XYZ from which the mesh is computed from, but
doesn't have to). But SURF_CSFILE could be use to define a CS in which NORMAL 
and GROUND for a PLANE surface are expressed in.

.VARI MAXNL
Maximum # output picture lines.
Defaults to 30000.

.VARI MAXNS
Maximum # output picture samples.
Defaults to 30000.

.VARI NUMBER
Causes the program to place an ASCII number into the mosaic at the center of
where each input picture falls.  Numbers begin at 1 and increase in the
order of the filenames in the input.  This permits one to determine which
picture populated which part of the mosaic.  Defaults to NONUMBER.

The DN to use for the numbers is set by NUMBER_DN, and the zoom factor for
the numbers by NUMBER_ZOOM.

.VARI NUMBER_DN
The DN to use for the image numbers.  See NUMBER keyword.  Note, a
NUMBER_DN of 0 is transparent (i.e. ignored).  If the number of DN's supplied
is less than the number of bands, the last value is repeated as necessary.
See also FOOT_COLOR.

.VARI NUMBER_ZOOM
The zoom factor to use for the image numbers (i.e. how big the numbers are).
Must be a positive integer, 1 is the smallest possible.  See NUMBER keyword.

.VARI NUMBER_START
Specifies the starting point for the image numbers (i.e. the first input is
assigned this number for the image number overlays, and they increment from
there).  Normally this will be 1, but could be set differently if only part
of a larger mosaic is being generated.

.VARI FOOTPRT
Causes "footprints" to be drawn around each input image in the output
mosaic.  This is useful to show overlap of the images, and is often used
in conjunction with NUMBER.

There are three values:

NOFOOTPRINT - No footprint is displayed.  This is the default.
FOOTPRINT - Shows the footprint only where the edge of the image is "on top".
    Useful to see which image is laid down first.  If the DN (FOOT_DN) has
    insufficient contrast, the footprint may not be very visible, since it
    is interpolated like normal pixels.
OVERLAP - shows the entire footprints of all images, even if another image
    overlaps the edge of the input.  Useful to see how much overlap there is
    between images.  OVERLAP mode will slow down the program down somewhat,
    since the borders are drawn in after the mosaic is created (to ensure that
    all borders are drawn).

The DN to use for the footprints is set by FOOT_DN.  Note that the footprint
replaces (hides) the outer row of pixels in the image.

.VARI FOOT_DN
The DN to use for the footprints.  See FOOTPRT keyword.

FOOT_DN is an array, allowing color footprints to be created.  Each element
in FOOT_DN is used in sequence for the corresponding band.  If not enough
elements are present in FOOT_DN, the last value is repeated.  A value of 0
is treated as transparent, i.e. that band is not touched by the footprint.

So for a color mosaic with range 0-4095, FOOT_DN=4095 will plot footprints in
white, FOOT_DN=\(1,4095,4095\) will plot them in cyan, and
FOOT_DN=\(0,4095,4095\) will plot them in something between cyan and white,
dependeing on the image content of the first band.  Note that FOOT_DN is a
floating point number, so FOOT_DN=\(0.1,4095,4095\) on an integer image will
put a true 0 out for the red band without triggering the transparency check.

See also FOOT_COLOR.

.VARI FOOT_RANGE
Specifies the range over which footprints and numbers will be plotted.
The max is the same as FOOT_RANGE (the smaller of the two is used), but the
min provides more control.

.VARI FOOT_COLOR
The name of a text file that provides colors for the footprints and image
numbers.  The text file contains a dash-separated range of inputs (1-based),
a space, and then the three R,G,B components (comma-separated, no spaces) to
use for that number range.  If a certain image number is not found in this
file, it defaults to FOOT_DN or NUMBER_DN.

The file format must be exact (the parser is not robust).  Three components
are required at all times, regardless of the number of bands in the mosaic.

Example:

1-21 4095,1,1
22-31 4095,1,4095
32-108 2816,3136,3552
109-110 1,4095,4095
111-111 480,2304,4080
112-137 1,4095,1
138-139 1,1,4095
140-140 1,1,4095

.VARI TAU
Tau is a measure of atmospheric opacity.  The default for normal Mars conditions
is 0.6. Higher tau means more dust in the atmosphere.

.VARI RAD
Keyword paramter that selects radiometric correction mode of the input images.
RAD (the default) enables the correction (for missions/instruments which support
it); NORAD disables it; ZENITH_SCALED_RAD the radiometry you'd get if the sun
were at zenith on a clear day.  The scaling factor is a combination of solar
elevation and tau, and will have the effect of brightening up images that
were taken near sunset.

.VARI DNSCALE
DN scaling factor.  This factor is used to convert between physical
radiometric units (watts/(meter**2, steradian, micron)) and DN's for the
output mosaic.  The formula is:

true_radiance = offset + (factor * DN)

where "offset" is 0.0 in the current implementation, and "factor" is
1.0 / DNSCALE (making the formula equivalently:  offset + (DN / DNSCALE)).
The offset and factor (1.0/DNSCALE) are written to the output mosaic label.

.VARI DNSCALE_IN
Three-state keyword parameter to control whether or not to apply scaling
parameters to reconstruct floating point values.

RESCALE says to do the conversion, and reconstitute the float based on the
RADIANCE_* keywords.  Note that if there are no RADIANCE_* keywords,
this is a no-op, so it doesn't hurt to turn this on for non-scaled images.

NOSCALE says to not to the conversion.  This is what we do now.  If your
inputs are dynamically scaled, you'll probably get surprising results.

AUTOSCALE says to figure it out based on the DNSCALE_OUT parameter (see
DNSCALE_OUT for details) and -ZENITH_SCALED_RAD flag. If DNSCALE_OUT is STATIC,
then it is NOSCALE; if DNSCALE_OUT is DYNAMIC/IDENTIT or RAD=ZENITH_SCALED_RAD,
then it is RESCALE.

.VARI DNSCALE_OUT
Three-state keywork parameter to scale output DN values.

If -STATIC is enabled, then the value specified by DNSCALE will be used
as the DN scaling factor (note the unit scaling factor as well) for all
radiometric models supplied.

If -DYNAMIC is enabled, then the maximum responsivity value across all
radiometric models will be used as the DN scaling factor (note the unit
scaling factor as well).

If -IDENTITY is enabled, then no scaling will be applied.
 
.VARI CONFIG_PATH
A colon-separated list of directories in which to look for configuration
and calibration files.  Environment variables are allowed in the list
(and may themselves contain colon-separated lists).  The directories are
searched in order for each config/cal file when it is loaded.  This allows
multiple projectes to be supported simultaneously, and allows the user to
override any given config/cal file.  Note that the directory structure below
the directories specified in this path must match what the project expects.
For example, Mars 98 expects flat fields to be in a subdirectory named
"flat_fields" while Mars Pathfinder expects them to be directly in the
directory specified by the path (i.e. no intermediate subdirectories).

.VARI MATCH_METHOD
Specifies a method for pointing corrections.

Loose method matches with pointing parameters of the image.
Tight method matches with unique id of the image.

.VARI MATCH_TOL
Tolerance value for matching pointing parameters in the pointing corrections
file.  Used if MATCH_METHOD=LOOSE
Default value is pretty arbitrary, though seems to work well so far....

.VARI POINT_METHOD
Specifies a mission-specific pointing method to use.  Normally this
parameter is not used, in which case the "default" pointing methods
are used.  Some missions may have special, or alternate, pointing
methods available, which are indicated by this string (for example,
backlash models, using arm joint angles instead of x/y/z/az/el, etc).
A substring search is used, so multiple methods (where that makes sense)
can be specified by separating the keywords with commas.

Note that nav files created using one pointing method will most likely
not be compatible with a mosaic created using a different pointing method.

The methods available vary per mission, but some methods available at
the time of this writing are:

BACKLASH : Mars 98 SSI only.  Selects a backlash pointing model,
which adjusts the telemetered azimuth and elevation values based on
knowledge of the camera's mechanical backlash and the direction the
motor was travelling when the image was taken.

.VARI NOSITE
Disables all label-derived parameters to the Site mechanism which underlies
coordinate systems.  This forces all sites to be identical, with all rotations
and offsets set the same.  In the case of MPF or Mars 98, this disables
the lander quaternion and offset (sets them to identity and 0, respectively).
This option should not be used with images taken from different vantage
points (e.g. the spacecraft moved, or mixing a lander and a rover) or
invalid results will be obtained.  The use of this option invalidates the
Fixed coordinate frame; any values reported in the Fixed frame will not
correctly reflect the orientation of the lander/rover.

Obviously, this option should be rarely used; it is intended for when the
image labels defining the site are invalid or inconsistent.

.VARI BBOX
Specifies the filename to which the bounding box is written (see main help
text).  If this parameter is not supplied, no bounding box file is written.

.VARI BBOX_COUNT
Specifies how many points along each edge of the input file are projected for
the bounding box.  The corners are always projected; if BBOX_COUNT=0 that's
all you get.  The default of 3 projects 3 points along each edge (center, 1/4,
and 3/4 along the edge).

.VARI DATA_SET_NAME
The DATA_SET_NAME typically identifies the instrument that acquired the
data, the target of that instrument, and the processing level of the data.
This value is copied to the output label, property IDENTIFICATION,
keyword DATA_SET_NAME.

.VARI DATA_SET_ID
The DATA_SET_ID value for a given data set or product is constructed
according to flight project naming conventions.  In most cases the
DATA_SET_ID is an abbreviation of the DATA_SET_NAME.
This value is copied to the output label, property IDENTIFICATION,
keyword DATA_SET_ID.

.VARI RELEASE_ID
When a data set is released incrementally, such as every three months during
a mission, the RELEASE_ID is updated each time part of the data set is released.
For each mission(or host id if multiple spacecrafts), the first release of a data
set should have a value of "0001".
This value is copied to the output label, property IDENTIFICATION,
keyword RELEASE_ID.

.VARI PRODUCT_ID
Specifies a permanent, unique identifier assigned to a data product by
its producer. Most commonly, it is the filename minus the extension.
This value is copied to the output label, property IDENTIFICATION,
keyword PRODUCT_ID.

.VARI PRODUCER_ID
Specifies the unique identifier of an entity associated with the
production of a data set. This value is copied to the output label,
property IDENTIFICATION, keyword PRODUCER_ID.

.VARI PRODUCER_INST
Specifies the identity of a university, research center, NASA center or other
institution associated with the production of a data set.
This value is copied to the output label, property IDENTIFICATION, keyword
PRODUCER_INSTITUTION_NAME.

.VARI TARGET_NAME
Specifies a target.  The target may be a planet, satelite, ring, region, feature,
asteroid or comet.  This value is copied to the output label, property
IDENTIFICATION, keyword TARGET_NAME.

.VARI TARGET_TYPE
Specifies the type of a named target. This value is copied to the output
label, property IDENTIFICATION, keyword TARGET_NAME.

.VARI INTERP
Keyword parameter that turns on or off interpolation of the output
images pixel values.  INTERP (the default) enables the interpolation, 
while NOINTERP disables it.

.VARI RSF
Rover State File.  This is a list of filenames to load containing
Rover State information.  These files contain position and orientation
information for a rover (or other mobile spacecraft) at various sites.
They are in XML format.  See the "Rover Motion Counter (RMC) Master File SIS"
for details on these files.

Rover State Files have a priority order.  The files listed first have
the highest priority.

Environment variables may be used in the list.

For MER, if a directory is specified, then that directory is searched for
RMC Master files and any found are loaded.  The directory structure and
filename convention is covered in the RMC SIS.  The directory specified
is the one containing "master", so if <dir> is the name specified in the
RSF parameter, the following files will be searched for:

<dir>/master/<mission>_Master.svf
<dir>/master/<mission>_Site_<n>_Master.rvf

The name of each file loaded is printed to the stdout log for reference.

.VARI DEBUG_RSF
If enabled, this causes the internal database of RMC locations to be
printed out to the stdout log.  This is after the RSF files have been
loaded and the coordinate systems read from the input label(s).

.VARI COORD
The coordinate system in which mosaic is being projected and to use for 
the AZOUT and ELOUT parameters.
The interpretation of the values is dependent on the mission.  Some
representative missions are listed here:

Fixed - The Fixed frame (default).  This is the ultimate reference frame
    (see also FIXED_SITE for rover missions).
Instrument - The "natural" frame for the instrument (of the first input
    image).  MPF: Lander or Rover; M98: MVACS; MER: Rover.
Site - A major Site frame.  For rover missions, COORD_INDEX specifies which
    Site frame to use.  Non-rover missions treat this as Fixed.
Rover - An instance of the Rover frame.  For rover missions, COORD_INDEX
    specifies which instance of the rover frame to use.  Non-rover mission
    use the spacecraft frame (e.g. Lander for M98).
Local_Level - An instance of a Local Level frame.  This is typically
    coincident with the Rover frame (in XYZ) but oriented toward North
    like the Site and Fixed frames.  For MER, this is an instance of a
    Drive index move.

.VARI COORD_INDEX
The index specifies which instance of a coordinate system to use.  It is
currently applicable only to rover-based missions, but could have other
uses.  The index is equivalent to the Rover Motion Counter (RMC) for MER
and FIDO.

For MER/FIDO, there are many Site frames.  Each is numbered with a single
index.  For Site Frames, coord_index specifies which to use.  Likewise,
there are many Local_Level and Rover frames, corresponding to values of
the RMC.  The multiple instances of this frame are selected by COORD_INDEX.

Generally COORD_INDEX defaults sensibly so you don't usually need to
specify it.  It will default to the instance used by the first input.

.VARI FIXED_SITE
Specifies which major Site is the "Fixed" Site for this run.

Historically, MPF and M98 had a single "Surface Fixed" frame which never
moved, and which all other coordinate system frames were referenced to.
With the advent of long-range rovers (such as MER and FIDO), that became
insufficient.  The rover traverses far enough that errors in knowledge of
coordinate system offset and orientation become unacceptable.

For this reason, a system of major Sites was introduced.  Periodically
during the mission, a Site frame is declared.  This then becomes the
reference frame for all activities until the next Site is declared.
References are kept local, and errors don't propogate across Sites.

However, if images from more than one Site are combined together, the
Site's must be placed relative to each other.  Therefore a single reference
frame is still needed to combine different sites.

The FIXED_SITE parameter controls which of the major Site frames is
the reference ("fixed") site for this program run.  This fixed frame
can vary in different program runs, but is constant throughout one
execution.

If not specified, FIXED_SITE defaults to the minimum Site number (i.e.
lowest numbered, or earliest chronologically) used in all input images.
Normally this default is sufficient; rarely must FIXED_SITE be specified.

One or more Rover State Files must usually be specified in order to combine
image from more than one Site.  These describe the relationship between
sites.  See the RSF parameter.

.VARI SOLUTION_ID
Specifies which solution ID to use for pointng corrections.

There are potentially many different definitions for the same coordinate
system.  These are identified via a unique Solution ID.  If this parameter
is given, only the specified solution's definition is searched for. 

