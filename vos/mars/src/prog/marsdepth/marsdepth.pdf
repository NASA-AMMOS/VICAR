process help=*
PARM INP TYPE=STRING COUNT=(1:3)
PARM OUT TYPE=STRING COUNT=1


PARM TARGET_UVW TYPE=REAL COUNT=(0:3) DEFAULT=(0,0,-1)
PARM UVW_CS TYPE=STRING COUNT=(0:1) DEFAULT=SITE
PARM TARGET_XYZ TYPE=REAL COUNT=(0:3)
PARM XYZ_CS TYPE=STRING COUNT=(0:1) DEFAULT=SITE
PARM APPROACH TYPE=KEYWORD VALID=(NORMAL,APPROACH) DEFAULT=NORMAL
PARM PROTO_IMAGE TYPE=STRING COUNT=(0:1)
PARM STANDOFF TYPE=REAL COUNT=(0:1)
PARM BAD_DEPTH TYPE=REAL COUNT=1 DEFAULT=0.0
PARM FOV TYPE=REAL COUNT=(0:1) DEFAULT=30.0
PARM HIST_BINS TYPE=INTEGER COUNT=0:1 DEFAULT=0

PARM NAVTABLE TYPE=STRING COUNT=(0:1) DEFAULT=--

PARM CONFIG_PATH STRING DEFAULT="$MARS_CONFIG_PATH"
PARM POINT_METHOD TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM NOSITE TYPE=KEYWORD COUNT=(0:1) VALID=NOSITE DEFAULT=--

PARM DATA_SET_NAME TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM DATA_SET_ID TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM RELEASE_ID TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM PRODUCT_ID TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM PRODUCER_ID TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM PRODUCER_INST TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM TARGET_NAME TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM TARGET_TYPE TYPE=STRING COUNT=(0:1) DEFAULT=--

PARM RSF TYPE=STRING COUNT=0:100 DEFAULT=--
PARM DEBUG_RSF TYPE=KEYWORD COUNT=0:1 VALID=DEBUG_RSF DEFAULT=--
PARM COORD TYPE=KEYWORD VALID=("FIXED", "INSTRUMENT", "SITE", "ROVER", +
        "LOCAL_LEVEL") DEFAULT="ROVER"
PARM COORD_INDEX TYPE=INTEGER COUNT=0:10 DEFAULT=--
PARM FIXED_SITE TYPE=INTEGER COUNT=0:1 DEFAULT=--
PARM SOLUTION_ID TYPE=STRING COUNT=0:1 DEFAULT=--

END-PROC

.TITLE
VICAR program MARSDEPTH.

.HELP
PURPOSE:

MARSEDEPTH is used to compute the excursion of all points in an XYZ image
from a plane.  The program fits a plane to an input target XYZ point and an
input surface normal vector UVW at the target XYZ.  Then it computes the 
vertical distances of all points in the input XYZ image from the fitted plane.
The output is a one-band image of the distances. 

Optionally, the excursion (or depth) analysis can be limited to the FOV 
(Field Of View) of a camera. To limit the output image to the FOV of a
camera, the user must provide MARSDEPTH with two optional inputs:  a
"prototype" image from the camera s/he is interested in, and a stand-off
value.  The prototype image is used simply to build a camera model.  The 
camera model from the prototype image file is reoriented and repositioned 
based on the given target XYZ position, the surface normal vector UVW at 
the target, and the stand-off distance.   The camera model is repositioned
at (targetUVW * standoff + targetXYZ), and reorient along (-targetUVW) 
direction perpendicular to the fitted plane.  Then we mask off the results 
according to whether theyâ€™re in the image FOV of the adjusted camera model.  
The output image contains the deviations from the given plane for each pixel,
from which a histogram can be determined.

To use MARSEDEPTH without a camera model and FOV filtration (simpler use),
the user needs to provide the following:
  - An input XYZ image
  - The XYZ position of a target point
  - The coordinate system in which target XYZ is given (defaults to SITE)
  - The UVW surface normal at target point should be up looking
    (defaults to (0,0,-1)
  - The coordinate system in which target UVW is given (defaults to SITE)
  - The intended direction of the target UVW vector:  Set keyword -NORMAL
    to indicate target UVW is a surface normal up-looking vector.  Set 
    keyword -APPROACH to indicate that target UVW is a surface normal but
    down-looking vector.  Defaults to -NORMAL because target UVW vector
    defaults to the up-looking vector (0,0,-1).
Keep in mind that a plane fitted to a point and a vector has a positive
and a negative side.  The positive side of the plane is the side where the
vector is.  The other side is the negative side of the plane.  Therefore,
in the case of this simple use of MARSDEPTH with (0,0,-1) target UVW 
vector and -NORMAL keyword, all points below the fitted plain (the side
closer to Mars) will have negative distances, and all points above the
plain (the side closer to sky) will have positive values.  To negate the
results in the output file, you can trick the program by providing an
up-looking target UVW vector and setting -APPROACH keyword.  You may also
negate the results by setting the target UVW vector to a down-looking 
vector, such as (0,0,1), and setting the keyword -NORMAL.  

To use MARSDEPTH with a camera model and its FOV filtration, the user
needs to provide the information mentioned above plus the following:
  - a prototype image file for using its camera model
  - stand-off distance (defaults to 0.2 and ignored if no proto. image)
  - FOV limit in degrees (defaults to 30.0 and ignored if no proto. image)
The "trick" mentioned above (in the case of the simple use of MARSDEPTH
without any prototype image) is a requirement here with prototype image.
The reason is that with camera model we need the target UVW vector to be
the view direction of the camera, which should be downward.  Stand-off 
should always be a positive number.  Therefore, with an optional
prototype image for camera model we need either
  - an up-looking target UVW vector like (0,0,-1)/SITE, and
  - APPROACH keyword set (-APPROACH), and
  - stand-off > 0 
or
  - a down-looking target UVW vector like (0,0,1)/SITE, and
  - NORMAL keyword set (-NORAML), and
  - stand-off > 0.


EXECUTION:

marsdepth inp=data.xyz out=data.depth \
          target_xyz=\(<x>, <y>, <z>\) target_uvw=\(<x>, <y>, <z>\) \
          -site -normal
marsdepth inp=data.xyz out=data.depth \
          target_xyz=\(<x>, <y>, <z>\) target_uvw=\(<x>, <y>, <z>\) \
          xyz_cs=<target xyz coord type> uvw_cs=<target uvw coord type> \
          -site -normal
marsdepth inp=data.xyz out=data.depth \
          target_xyz=\(<x>, <y>, <z>\) target_uvw=\(<x>, <y>, <z>\) \
          -site -appraoch
marsdepth inp=data.xyz out=data.depth \
          target_xyz=\(<x>, <y>, <z>\) target_uvw=\(<x>, <y>, <z>\) \
          xyz_cs=<target xyz coord type> uvw_cs=<target uvw coord type> \
          -site -approach
marsdepth inp=data.xyz out=data.depth \
          target_xyz=\(<x>, <y>, <z>\) target_uvw=\(<x>, <y>, <z>\) \
          proto_image=<prototype image> standoff=0.2  FOV=30.0 \
          -site -approach
marsdepth inp=data.xyz out=data.depth \
          target_xyz=\(<x>, <y>, <z>\) target_uvw=\(<x>, <y>, <z>\) \
          xyz_cs=<target xyz coord type> uvw_cs=<target uvw coord type> \
          proto_image=<prototype image> standoff=0.2  FOV=30.0 \
          -site -approach
where:
data.xyz  is an input 3-band XYZ REAL image,
data_depth  is the output 1-band REAL image with depth information,
target_xyz  is a 3D XYZ coordinates of the target point,
target_uvw  is a 3D surface normal vector at the target point,
xyz_cs  is the coordinate type of the target_xyz point,
uvw_cs  is the coordinate type of the surface normal vector at the target,
-site  indicates using the SITE coordinate system,
-nomal  indicates that the provided target_uvw is in normal direction,
-approach  indicated that the provided target_uvw is in approach direction,
proto_image  is the optional input image used for its camera model,
stanfoff  is the stand-off distance for the camera model, and
fov  is the camera model FOV filtration limit in degrees.

In the first case, a plane is fitted to the target point (XYZ) and the 
surface normal at the XYZ. The values in the output image, are the distances
of their coresponding points from the input XYZ image to the fitted plane.
The positive side of the plane is where the normal vector is, and the other
side of the plave is the negative side.

The second case is similar to the first case, and the only difference is
that the coordinates types for both the target XYZ point an the surface
normal at the target point are given.  The coordinate types are given when
they are not the same as the default ones.

The third case is similar to the first case with the only difference being
-approach keyword set and not -normal.  In this case, the negative side of
the fitted plane is the side where the surface normal vector is, and the 
other side is the positive side.

The fourth case is similar to the second case with the only difference being
-approach keyword set and not -normal.  In this case, the negative side of
the fitted plane is the side where the surface normal vector is, and the 
other side is the positive side.

The fifth case is the third case with the added optional information (a
prototype image for its camera model, the stand-off distance and the FOV
filtration limit) to created a camera model Field Of View to eliminate
all the input image points outside of the FOV.

The sixth case is the fourth case with the added optional information (a
prototype image for its camera model, the stand-off distance and the FOV
filtration limit) to created a camera model Field Of View to eliminate
all the input image points outside of the FOV.

.PAGE
METHOD:

MARSEDEPTH is used to compute the excursion of all points in an XYZ image
from a plane.  The program fits a plane to an input target XYZ point and an
input surface normal vector UVW at the target XYZ.  Then it computes the 
vertical distances of all points in the input XYZ image from the fitted plane.
The output is a one-band image of the distances. 

The side of the plane pointed at by the surface normal vector is the positive
side of the plane, and the other side is the negative side of the plane.  The
distances on the positive side are positive, and the distances on the negative
side are negative.  If the -approach keyword is set, then the negative side of
the plane is the one pointed at by the surface normal vector, on the other
side is the positive side.

All the points is the input XYZ image file that are invalid, i.e. (0,0,0), are
ignored.  The points can additionally get filtered out based on the FOV of an
optional input camera model after being reoriented and repositioned.  Then all
the input XYZ image points outside of the FOV of the camera are ignored as
well.  When the optional camera model information are provided, the keyword
-approach should be set




.page
OUTPUT FORMAT:

The output is a 1-band file in REAL format.

Without the optional camera model, the points in the output file are the 
distances of their matching points in the input XYZ image from the fitted
plane.

With the optional camera model, the points in the output file are the
distances of their matching points in the input XYZ image from the camera
along the camera approach (the negative of the surface normal vector).

.PAGE

HISTORY:
2020-07-10 Initial marsdepth by E. Sarkissian, under the cognizance of
Bob Deen

.LEVEL1
.VARI INP
Input XYZ image.
Must be 1 3-band file
or (x,y,z) triplet.

.VARI OUT
Output file.
Must be 1 filename

.VARI TARGET_UVW
Surface normal vector, 
a (u,v,w) triplet, at
the target point.

.VARI UVW_CS
The coord. type of
the target UVW.

.VARI TARGET_XYZ
The target point, an
(x,y,z) triplet.

.VARI XYZ_CS
The coord. type of
the target point.

.VARY APPROACH
To choose surface
normal or its negative.

.VARI PROTO_IMAGE
A prototype image used
for its camera model.

.VARI STANDOFF
The distance of the 
modeled camera from
the target point.

.VARI BAD_DEPTH
Depth value for any
ignored XYZ image point.

.VARI FOV
Limit in degrees
on the FOV of the
camera model.

.VARI HIST_BINS
Number of bins for
depth histogram
data.

.VARI NAVTABLE
Corrected navigation
filename.

.VARI CONFIG_PATH
Path used to find
configuration/calibration
files.

.VARI POINT_METHOD
Specifies a mission-
specific pointing
method to use

.VARI NOSITE
Disables coordinate
system sites.

.VARI RSF
Rover State File(s) to use.

.VARI DEBUG_RSF
Turns on debugging of RSF
parameter.

.VARI COORD
Coordinate system to use.

.VARI COORD_INDEX
Coordinate system index for
some COORD/mission combos.

.VARI FIXED_SITE
Which site is FIXED for
rover missions.

.VARI SOLUTION_ID
Solution ID to use for
COORD_INDEX

.VARI DATA_SET_NAME
Specifies the full name given
to a data set or a data product.

.VARI DATA_SET_ID
Specifies a unique alphanumeric
identifier for a data set or data
product.

.VARI RELEASE_ID
Specifies the unique identifier
associated with the release to the
public of all or part of a data set.
The release number is associated with
the data set, not the mission.

.VARI PRODUCT_ID
Specifies a permanent, unique
identifier assigned to a data
product by its producer.

.VARI PRODUCER_ID
Specifies the unique identifier
of an entity associated with the
production a data set.

.VARI PRODUCER_INST
Specifies the full name of the
identity of an entity associated
with the production of a data set.

.VARI TARGET_NAME
Specifies a target.

.VARI TARGET_TYPE
Specifies the type of a named target.

.LEVEL2
.VARI INP
Input files contain the XYZ coordinates. If three filenames are given,
they all should be single band files each containing X, Y and Z values
in that order.  If only one filename is given, it should be a 3-band
file with bands in (X,Y,Z) order.

The input files are in REAL (float) format.

.VARI OUT
Output file containing the depth values.  It is in 1-band REAL (float)
format.  See "OUTPUT FORMAT" in the main help for the file format.

.VARI TARGET_UVW
The surface normal vector at a target point.  This should be a vector
normal to the surface at the target point, and it should be pointing
upward (from the surface to the sky).

.VARI UVW_CS
The coordinate system of the target UVW (the surface normal vector at
the target point).

.VARI TARGET_XYZ
The target point to which a plane is fited orthogonal to the target
surface normal vector, target_uvw.  The fitted plane is the reference
plane for depth analysis.

.VARI XYZ_CS
The coordinate system of the target XYZ point

.VARI APPROACH
This a keyword variable with two options to set: -approach or -normal.

One way of looking at this keyword is that it is used to understand 
the intended direction of the target normal vector target_uvw.  If the
target_uvw is a surface normal vector looking upward (more towards the 
sky), then we need to set the -normal option of the keyword.  If the 
target normal vector is downwards (more towards the planet) and in 
camera approach direction then we need to set the -approach option of
the keyword.

Another way of looking at this keyword is that it simply negates the
surface normal vector target_uvw.

.VARI PROTO_IMAGE
This parameter is optional, and it is used to input a prototype image
that we want to use its camera model for FOV filtration.  When a 
prototype image is provided, its camera model is reoriented along the 
approach direction of the target normal vector and repositioned right 
above the target point at the given stand-off distance.  Then all 
points in the input XTZ image that are not in the FOV of the 
reoriented and repositioned camera model are ignored, and no depth
analysis is done on them.

.VARI STANDOFF
This is a positive real number, and it is ignored if no prototype image
is provide (please, see PROTO_IMAGE).  STANDOFF is the desired distance 
between the repositioned camera model and the target XYZ point.

.VARI BAD_DEPTH
Any point from the input XYZ image file that is ignored for any reason,
its matching point in the output 1-band depth image is set to the value
provided through BAD_DEPTH parameter.

.VARI FOV
This is a positive number in degrees between 0 and 90 exclusive, and 
usually it is closer to [30, 45] interval.  FOV is ignored if no prototype 
image is provide (please, see PROTO_IMAGE).  FOV is used as a limit to
filterout points in the input XYZ image that are not in the Field-Of-View
of the reoriented and repositioned camera model from the prototype image
file.

.VARI HIST_BINS
This is an integer parameter.  If desired, marsdepth can compute some 
numerical histogram information on the depth analysis results.  To 
generate the textual histogram information, set HIST_BINS to a positive
integer number, where the integer number is the desired number of the
histogram bins.

.VARI CONFIG_PATH
A colon-separated list of directories in which to look for configuration
and calibration files.  Environment variables are allowed in the list
(and may themselves contain colon-separated lists).  The directories are
searched in order for each config/cal file when it is loaded.  This allows
multiple projects to be supported simultaneously, and allows the user to
override any given config/cal file.  Note that the directory structure below
the directories specified in this path must match what the project expects.
For example, Mars 98 expects flat fields to be in a subdirectory named
"flat_fields" while Mars Pathfinder expects them to be directly in the
directory specified by the path (i.e. no intermediate subdirectories).

.VARI POINT_METHOD
Specifies a mission-specific pointing method to use.  Normally this
parameter is not used, in which case the "default" pointing methods
are used.  Some missions may have special, or alternate, pointing
methods available, which are indicated by this string (for example,
backlash models, using arm joint angles instead of x/y/z/az/el, etc).
A substring search is used, so multiple methods (where that makes sense)
can be specified by separating the keywords with commas.

Note that nav files created using one pointing method will most likely
not be compatible with a mosaic created using a different pointing method.

The methods available vary per mission, but some methods available at
the time of this writing are:

BACKLASH : Mars 98 SSI only.  Selects a backlash pointing model,
which adjusts the telemetered azimuth and elevation values based on
knowledge of the camera's mechanical backlash and the direction the
motor was travelling when the image was taken.

.VARI NOSITE
Disables all label-derived parameters to the Site mechanism which underlies
coordinate systems.  This forces all sites to be identical, with all rotations
and offsets set the same.  In the case of MPF or Mars 98, this disables
the lander quaternion and offset (sets them to identity and 0, respectively).
This option should not be used with images taken from different vantage
points (e.g. the spacecraft moved, or mixing a lander and a rover) or
invalid results will be obtained.  The use of this option invalidates the
Fixed coordinate frame; any values reported in the Fixed frame will not
correctly reflect the orientation of the lander/rover.

Obviously, this option should be rarely used; it is intended for when the
image labels defining the site are invalid or inconsistent.

.VARI DATA_SET_NAME
The DATA_SET_NAME typically identifies the instrument that acquired the
data, the target of that instrument, and the processing level of the data.
This value is copied to the output label, property IDENTIFICATION,
keyword DATA_SET_NAME.

.VARI DATA_SET_ID
The DATA_SET_ID value for a given data set or product is constructed
according to flight project naming conventions.  In most cases the
DATA_SET_ID is an abbreviation of the DATA_SET_NAME.
This value is copied to the output label, property IDENTIFICATION,
keyword DATA_SET_ID.

.VARI RELEASE_ID
When a data set is released incrementally, such as every three months during
a mission, the RELEASE_ID is updated each time part of the data set is released.
For each mission(or host id if multiple spacecrafts), the first release of a data
set should have a value of "0001".
This value is copied to the output label, property IDENTIFICATION,
keyword RELEASE_ID.

.VARI PRODUCT_ID
Specifies a permanent, unique identifier assigned to a data product by
its producer. Most commonly, it is the filename minus the extension.
This value is copied to the output label, property IDENTIFICATION,
keyword PRODUCT_ID.

.VARI PRODUCER_ID
Specifies the unique identifier of an entity associated with the
production of a data set. This value is copied to the output label,
property IDENTIFICATION, keyword PRODUCER_ID.

.VARI PRODUCER_INST
Specifies the identity of a university, research center, NASA center or other
institution associated with the production of a data set.
This value is copied to the output label, property IDENTIFICATION, keyword
PRODUCER_INSTITUTION_NAME.

.VARI TARGET_NAME
Specifies a target.  The target may be a planet, satelite, ring, region, feature,
asteroid or comet.  This value is copied to the output label, property
IDENTIFICATION, keyword TARGET_NAME.

.VARI TARGET_TYPE
Specifies the type of a named target. This value is copied to the output
label, property IDENTIFICATION, keyword TARGET_NAME.

.VARI RSF
Rover State File.  This is a list of filenames to load containing
Rover State information.  These files contain position and orientation
information for a rover (or other mobile spacecraft) at various sites.
They are in XML format.  See the "Rover Motion Counter (RMC) Master File SIS"
for details on these files.

Rover State Files have a priority order.  The files listed first have
the highest priority.

Environment variables may be used in the list.

For MER, if a directory is specified, then that directory is searched for
RMC Master files and any found are loaded.  The directory structure and
filename convention is covered in the RMC SIS.  The directory specified
is the one containing "master", so if <dir> is the name specified in the
RSF parameter, the following files will be searched for:

<dir>/master/<mission>_Master.svf
<dir>/master/<mission>_Site_<n>_Master.rvf

The name of each file loaded is printed to the stdout log for reference.

.VARI DEBUG_RSF
If enabled, this causes the internal database of RMC locations to be
printed out to the stdout log.  This is after the RSF files have been
loaded and the coordinate systems read from the input label(s).

.VARI COORD
The coordinate system to use for the output roughness (really just determines
the unit of measurement).  The interpretation of the values is dependent on
the mission.  Some representative missions are listed here:

Fixed - The Fixed frame.  This is the ultimate reference frame
    (see also FIXED_SITE for rover missions).
Instrument - (default) The "natural" frame for the instrument 
    (of the first input image).  MPF: Lander or Rover; M98: MVACS; MER: Rover.
Site - A major Site frame.  For rover missions, COORD_INDEX specifies which
    Site frame to use.  Non-rover missions treat this as Fixed.
Rover - An instance of the Rover frame.  For rover missions, COORD_INDEX
    specifies which instance of the rover frame to use.  Non-rover mission
    use the spacecraft frame (e.g. Lander for M98).
Local_Level - An instance of a Local Level frame.  This is typically
    coincident with the Rover frame (in XYZ) but oriented toward North
    like the Site and Fixed frames.  For MER, this is an instance of a
    Drive index move.

.VARI COORD_INDEX
The index specifies which instance of a coordinate system to use.  It is
currently applicable only to rover-based missions, but could have other
uses.  The index is equivalent to the Rover Motion Counter (RMC) for MER
and FIDO.

For MER/FIDO, there are many Site frames.  Each is numbered with a single
index.  For Site Frames, coord_index specifies which to use.  Likewise,
there are many Local_Level and Rover frames, corresponding to values of
the RMC.  The multiple instances of this frame are selected by COORD_INDEX.

Generally COORD_INDEX defaults sensibly so you don't usually need to
specify it.  It will default to the instance used by the first input.

.VARI FIXED_SITE
Specifies which major Site is the "Fixed" Site for this run.

Historically, MPF and M98 had a single "Surface Fixed" frame which never
moved, and which all other coordinate system frames were referenced to.
With the advent of long-range rovers (such as MER and FIDO), that became
insufficient.  The rover traverses far enough that errors in knowledge of
coordinate system offset and orientation become unacceptable.

For this reason, a system of major Sites was introduced.  Periodically
during the mission, a Site frame is declared.  This then becomes the
reference frame for all activities until the next Site is declared.
References are kept local, and errors don't propogate across Sites.

However, if images from more than one Site are combined together, the
Site's must be placed relative to each other.  Therefore a single reference
frame is still needed to combine different sites.

The FIXED_SITE parameter controls which of the major Site frames is
the reference ("fixed") site for this program run.  This fixed frame
can vary in different program runs, but is constant throughout one
execution.

If not specified, FIXED_SITE defaults to the minimum Site number (i.e.
lowest numbered, or earliest chronologically) used in all input images.
Normally this default is sufficient; rarely must FIXED_SITE be specified.

One or more Rover State Files must usually be specified in order to combine
image from more than one Site.  These describe the relationship between
sites.  See the RSF parameter.

.VARI SOLUTION_ID
Specifies which solution ID to use when specifying the coordinate system.

There are potentially many different definitions for the same coordinate
system.  These are identified via a unique Solution ID.  If this parameter
is given, only the specified solution's definition is searched for.  Without
it, the "best" available solution is chosen.

It is extremely rare that this parameter should be needed.  The default
will be sufficient in almost every case.

Note that the current MER implementation requires that a value for COORD_INDEX
also be provided, in order for this parameter to take effect.

