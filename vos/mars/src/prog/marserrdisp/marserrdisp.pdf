process help=*
PARM INP TYPE=STRING COUNT=2
PARM OUT TYPE=STRING COUNT=(1:2)

PARM NAVTABLE TYPE=STRING COUNT=0:1 DEFAULT=--

PARM WSIZE TYPE=INTEGER COUNT=1 DEFAULT=25
PARM DISP_UNC TYPE=STRING COUNT=0:1 DEFAULT=--

PARM CORRCOEFF TYPE=STRING COUNT=0:1 DEFAULT=--
PARM LS_ORDER TYPE=INTEGER COUNT=1 DEFAULT=1

PARM WRITE_CM TYPE=KEYWORD VALID="WRITE_CM" COUNT=(0:1) DEFAULT=--

PARM CONFIG_PATH STRING DEFAULT="$MARS_CONFIG_PATH"
PARM MATCH_METHOD TYPE=STRING COUNT=(0:1) VALID=("LOOSE", "TIGHT") +
     DEFAULT=LOOSE
PARM MATCH_TOL TYPE=REAL COUNT=1 DEFAULT=.002
PARM POINT_METHOD TYPE=STRING COUNT=(0:1) DEFAULT=--

PARM DATA_SET_NAME TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM DATA_SET_ID TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM RELEASE_ID TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM PRODUCT_ID TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM PRODUCER_ID TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM PRODUCER_INST TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM TARGET_NAME TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM TARGET_TYPE TYPE=STRING COUNT=(0:1) DEFAULT=--

PARM RSF TYPE=STRING COUNT=0:100 DEFAULT=--
PARM DEBUG_RSF TYPE=KEYWORD COUNT=0:1 VALID=DEBUG_RSF DEFAULT=--
PARM COORD TYPE=KEYWORD VALID=("FIXED", "INSTRUMENT", "SITE", "ROVER", +
        "LOCAL_LEVEL", "RMECH") DEFAULT="FIXED"
PARM COORD_INDEX TYPE=INTEGER COUNT=0:10 DEFAULT=--
PARM FIXED_SITE TYPE=INTEGER COUNT=0:1 DEFAULT=--
PARM SOLUTION_ID TYPE=STRING COUNT=0:1 DEFAULT=--

END-PROC

.TITLE
VICAR program MARSERRDISP.

.HELP
PURPOSE:
Compute disparity line and sample errors from inverse scene activity coefficients
and compression.

The inputs for MARSERRDISP are 
- left and right stereo pair.  Left and right images may be of different dimensions.
- Optional: Correlation coefficient image, such as that created by the MARSCOR3 program,
            is an optional and is currently not used in calculations.

EXECUTION:

./marserrdisp  inp=\( left right \)  out=disparity_error  ls_order=least_sq_order  disp_unc=inv_scene_activity_coeff  point=cm=label

./marserrdisp  inp=\( left right \)  out=\( disparity_line_error disparity_sample_error \)  ls_order=least_sq_order  disp_unc=inv_scene_activity_coeff  point=cm=label

where:

left - input - the left eye image of a stereo pair
right - input - the corresponding right eye image of a stereo pair
disparity_error - output - 2-band file containing disparity line and sample errors
disparity_line_error - output - disparity line error 
disparity_samp_error - output - disparity sample error
inv_scene_activity_coeff - output - inverse scene activity coefficient

ls_order - specifies the order of the least squares fit (model). ls_order = 1 is the only
           supported choice.
corrcoeff - input - correlation coefficient image computed by marscor3 - currently not used

EXAMPLES:

MER FCAM:
./marserrdisp  inp=\( ~/MER_data/2F137291704RAL4406P1212L0M1.IMG ~/MER_data/2F137291704RAL4406P1212R0M1.IMG \)  out=disperr1.vic   disp_unc=disp_unc.vic  wsize=25  point=cm=label

MSL test:
./marserrdisp  inp=\( ~/marsxyz_data/FLA_406377036RADLF0010000FHAZ02504Z1.IMG ~/marsxyz_data/FRA_406377036RADLF0010000FHAZ02504Z1.IMG \)  out=disperr1.vic  disp_unc=disp_unc.vic  wsize=25  point=cm=label

MER NCAM:
./marserrdisp  inp=\( ~/Compression4/l3.IMG ~/Compression4/r3.IMG \)  out=disperr1.vic  disp_unc=disp_unc.vic  wsize=25  point=cm=label

.PAGE

METHOD:
MARSERRDISP computes disparity line and sample errors for each pixel.
The program calculates inverse scene activity coefficients and uses it together with
compression rate in order to compute the errors for each pixel.
Correlation coefficient map is not used.

Linear model (based on least squares fit) is used in order to map given 
inverse scene activity coefficients to disparity error values. The coefficients 
for the least squares model were computed using test images in a Matlab program.

Input file contents:

INP: left eye view, right eye view

The pixel data from the left image is used in order to calculate inverse 
scene activity (ISA) coefficients, and hence, the first input should be 
the left image.  The label information is used to determine the pointing 
and camera models.  The pixel data from the right image is NOT used.

CORRCOEFF: single-band file, containing correlation coefficients for each
pixel, and is generated by marscor3 program.  This input is optional, and
is currently not used for calculations.

Output file contents:

OUT: marserrdisp will generate either two separate one-band files 
  (disparity_line_error, disparity_sample_error), or a single 2-band file, depending 
  on the number of filenames given.

DISP_UNC: optional output containing inverse scene activity coefficients (ISA).
  ISA is used in the program to calculate disparity line and sample errors.  
  Smaller values of ISA suggest the scene has many features.
  Larger values suggest the scene is flat.


.PAGE

HISTORY:
  2003-01-13 I. Yanovsky and B. Deen - Initial marserrdisp
  2020-02-06 W. Bunch - IDS-7928 - corrected format strings to match args, cleaned up -Wall warnings, added test case.

COGNIZANT PROGRAMMER: I. Yanovsky

.LEVEL1
.VARI INP
Input images.
Must be 2.

.VARI OUT
Output files
(line_err,samp_err) double
or 1 2-band file.

.VARI CORRCOEFF
Input file.
Currently not used for calculations.
Must be 1 
single band file.

.VARI DISP_UNC
Output file
Must be 1 
single band file.

.VARI WSIZE
Specifies the window size 
for calculating DISP_UNC.

.VARI NAVTABLE
Corrected navigation
filename.

.VARI LS_ORDER
Specifies the order of the 
least squares model.
Currently, LS_ORDER = 1
is the only valid choice.

.VARI WRITE_CM
Writes the camera model
to the file.

.VARI CONFIG_PATH
Path used to find
configuration/calibration
files.

.VARI MATCH_METHOD
Specifies a method
for pointing corrections.

.VARI MATCH_TOL
Tolerance value for
matching pointing params
in pointing corrections file.

.VARI POINT_METHOD
Specifies a mission-
specific pointing
method to use

.VARI DATA_SET_NAME
Specifies the full name given
to a data set or a data product.

.VARI DATA_SET_ID
Specifies a unique alphanumeric
identifier for a data set or data
product.

.VARI RELEASE_ID
Specifies the unique identifier
associated with the release to the
public of all or part of a data set.
The release number is associated with
the data set, not the mission.

.VARI PRODUCT_ID
Specifies a permanent, unique
identifier assigned to a data
product by its producer.

.VARI PRODUCER_ID
Specifies the unique identifier
of an entity associated with the
production a data set.

.VARI PRODUCER_INST
Specifies the full name of the
identity of an entity associated
with the production of a data set.

.VARI TARGET_NAME
Specifies a target.

.VARI TARGET_TYPE
Specifies the type of a named target.

.VARI RSF
Rover State File(s) to use.

.VARI DEBUG_RSF
Turns on debugging of RSF
parameter.

.VARI COORD
Coordinate system to use.

.VARI COORD_INDEX
Coordinate system index for
some COORD/mission combos.

.VARI FIXED_SITE
Which site is FIXED for
rover missions.

.VARI SOLUTION_ID
Solution ID to use for
COORD_INDEX

.LEVEL2
.VARI INP
Two files containing the input stereo pair images.
The pixel data from the left image is used in order to calculate inverse 
scene activity (ISA) coefficients, and hence, the first input should be 
the left image.  The label information is used to determine the pointing 
and camera models.  The pixel data from the right image is NOT used.

.VARI OUT
Output files containing disparity line (lerr) and disparity sample (serr)
errors.  If two filenames are given, two separate 1-band files will be created,
one each for lerr and serr.  If only one filename is given, a single 2-band
file will be created, with bands in (lerr,serr) order.

The output files are in REAL (float) format.

.VARI NAVTABLE
Corrected navigation filename.
If marsnav was run on the input images it created a table of corrected
pointing parameters. If you refer to this table using NAVTABLE it
will override the pointing parameters (e.g. azimuth and elevation) in the
picture labels, giving different (and presumably better) output coordinates.

.VARI CORRCOEFF
Single-band input file containing correlation coefficients for each
pixel, and is generated by marscor3 program. This input is optional, and
is currently not used for calculations.

.VARI DISP_UNC
Optional output containing inverse scene activity (ISA) coefficients.
This file is created only for testing purposes.
Given image I, function ISA is calculated as:
ISA = 1/sum_i(gradient(I_i)), where sum is taken over pixels within
the search window.
Smaller values of ISA suggest the scene has many features (high scene
activity).  Larger values suggest the scene is flat (low scene activity).
ISA is used in the program to calculate disparity line and sample errors. 

.VARI WSIZE
Specifies the window size for calculating DISP_UNC.  Both height and width
of the window is equal to WSIZE.

.VARI LS_ORDER
Specifies the order of the least squares model to use in order to map given 
ISA coefficients to disparity error values.  Default is 1 (linear), which is 
currently the only valid choice. The coefficients for the least squares
model were computed using test images in a Matlab program.  

.VARI WRITE_CM
If specified, the program will write an updated camera model to the output
file.  This camera model is for the left image, as modified by the nav file.
The purpose of this is to be able to create a properly-labeled XYZ file
from unmodified FFL (linearized) files and a nav file, for the purpose of
pointing-correction of a mesh.

Note that point=cm=label should NOT be specified, as that will override the
nav file.  Also, you may need to specify point=cahv_fohv=xxx (often, "max"),
in order for the camera model to match the FFL.  Basically, whatever is given
to marscahv, should be given in this case as well.

.VARI CONFIG_PATH
A colon-separated list of directories in which to look for configuration
and calibration files.  Environment variables are allowed in the list
(and may themselves contain colon-separated lists).  The directories are
searched in order for each config/cal file when it is loaded.  This allows
multiple projectes to be supported simultaneously, and allows the user to
override any given config/cal file.  Note that the directory structure below
the directories specified in this path must match what the project expects.
For example, Mars 98 expects flat fields to be in a subdirectory named
"flat_fields" while Mars Pathfinder expects them to be directly in the
directory specified by the path (i.e. no intermediate subdirectories).

.VARI MATCH_METHOD
Specifies a method for pointing corrections.

Loose method matchs with pointing parameters of the image.
Tight method matchs with unique id of the image.

.VARI MATCH_TOL
Tolerance value for matching pointing parameters in the pointing corrections file.
Used if MATCH_METHOD=LOOSE
Default value is pretty arbitrary, though seems to work well so far....

.VARI POINT_METHOD
Specifies a mission-specific pointing method to use.  Normally this
parameter is not used, in which case the "default" pointing methods
are used.  Some missions may have special, or alternate, pointing
methods available, which are indicated by this string (for example,
backlash models, using arm joint angles instead of x/y/z/az/el, etc).
A substring search is used, so multiple methods (where that makes sense)
can be specified by separating the keywords with commas.

Note that nav files created using one pointing method will most likely
not be compatible with a mosaic created using a different pointing method.

The methods available vary per mission, but some methods available at
the time of this writing are:

BACKLASH : Mars 98 SSI only.  Selects a backlash pointing model,
which adjusts the telemetered azimuth and elevation values based on
knowledge of the camera's mechanical backlash and the direction the
motor was travelling when the image was taken.

.VARI DATA_SET_NAME
The DATA_SET_NAME typically identifies the instrument that acquired the
data, the target of that instrument, and the processing level of the data.
This value is copied to the output label, property IDENTIFICATION,
keyword DATA_SET_NAME.

.VARI DATA_SET_ID
The DATA_SET_ID value for a given data set or product is constructed
according to flight project naming conventions.  In most cases the
DATA_SET_ID is an abbreviation of the DATA_SET_NAME.
This value is copied to the output label, property IDENTIFICATION,
keyword DATA_SET_ID.

.VARI RELEASE_ID
When a data set is released incrementally, such as every three months during
a mission, the RELEASE_ID is updated each time part of the data set is released.
For each mission(or host id if multiple spacecrafts), the first release of a data
set should have a value of "0001".
This value is copied to the output label, property IDENTIFICATION,
keyword RELEASE_ID.

.VARI PRODUCT_ID
Specifies a permanent, unique identifier assigned to a data product by
its producer. Most commonly, it is the filename minus the extension.
This value is copied to the output label, property IDENTIFICATION,
keyword PRODUCT_ID.

.VARI PRODUCER_ID
Specifies the unique identifier of an entity associated with the
production of a data set. This value is copied to the output label,
property IDENTIFICATION, keyword PRODUCER_ID.

.VARI PRODUCER_INST
Specifies the identity of a university, research center, NASA center or other
institution associated with the production of a data set.
This value is copied to the output label, property IDENTIFICATION, keyword
PRODUCER_INSTITUTION_NAME.

.VARI TARGET_NAME
Specifies a target.  The target may be a planet, satelite, ring, region, feature,
asteroid or comet.  This value is copied to the output label, property
IDENTIFICATION, keyword TARGET_NAME.

.VARI TARGET_TYPE
Specifies the type of a named target. This value is copied to the output
label, property IDENTIFICATION, keyword TARGET_NAME.

.VARI RSF
Rover State File.  This is a list of filenames to load containing
Rover State information.  These files contain position and orientation
information for a rover (or other mobile spacecraft) at various sites.
They are in XML format.  See the "Rover Motion Counter (RMC) Master File SIS"
for details on these files.

Rover State Files have a priority order.  The files listed first have
the highest priority.

Environment variables may be used in the list.

For MER, if a directory is specified, then that directory is searched for
RMC Master files and any found are loaded.  The directory structure and
filename convention is covered in the RMC SIS.  The directory specified
is the one containing "master", so if <dir> is the name specified in the
RSF parameter, the following files will be searched for:

<dir>/master/<mission>_Master.svf
<dir>/master/<mission>_Site_<n>_Master.rvf

The name of each file loaded is printed to the stdout log for reference.

.VARI DEBUG_RSF
If enabled, this causes the internal database of RMC locations to be
printed out to the stdout log.  This is after the RSF files have been
loaded and the coordinate systems read from the input label(s).

.VARI COORD
The coordinate system to use for all input parameters and output values,
and the XYZ points themselves.  The interpretation of the values is dependent
on the mission.  Some representative missions are listed here:

Fixed - The Fixed frame (default).  This is the ultimate reference frame
    (see also FIXED_SITE for rover missions).
Instrument - The "natural" frame for the instrument (of the first input
    image).  MPF: Lander or Rover; M98: MVACS; MER: Rover.
Site - A major Site frame.  For rover missions, COORD_INDEX specifies which
    Site frame to use.  Non-rover missions treat this as Fixed.
Rover - An instance of the Rover frame.  For rover missions, COORD_INDEX
    specifies which instance of the rover frame to use.  Non-rover mission
    use the spacecraft frame (e.g. Lander for M98).  For MSL, this is the
    Rover Nav frame.
Local_Level - An instance of a Local Level frame.  This is typically
    coincident with the Rover frame (in XYZ) but oriented toward North
    like the Site and Fixed frames.  For MER, this is an instance of a
    Drive index move.
RMECH - For MSL, this is the Rover Mechanical frame.  It should not normally
    be used except for testing.

.VARI COORD_INDEX
The index specifies which instance of a coordinate system to use.  It is
currently applicable only to rover-based missions, but could have other
uses.  The index is equivalent to the Rover Motion Counter (RMC) for MER
and FIDO.

For MER/FIDO, there are many Site frames.  Each is numbered with a single
index.  For Site Frames, coord_index specifies which to use.  Likewise,
there are many Local_Level and Rover frames, corresponding to values of
the RMC.  The multiple instances of this frame are selected by COORD_INDEX.

Generally COORD_INDEX defaults sensibly so you don't usually need to
specify it.  It will default to the instance used by the first input.

.VARI FIXED_SITE
Specifies which major Site is the "Fixed" Site for this run.

Historically, MPF and M98 had a single "Surface Fixed" frame which never
moved, and which all other coordinate system frames were referenced to.
With the advent of long-range rovers (such as MER and FIDO), that became
insufficient.  The rover traverses far enough that errors in knowledge of
coordinate system offset and orientation become unacceptable.

For this reason, a system of major Sites was introduced.  Periodically
during the mission, a Site frame is declared.  This then becomes the
reference frame for all activities until the next Site is declared.
References are kept local, and errors don't propogate across Sites.

However, if images from more than one Site are combined together, the
Site's must be placed relative to each other.  Therefore a single reference
frame is still needed to combine different sites.

The FIXED_SITE parameter controls which of the major Site frames is
the reference ("fixed") site for this program run.  This fixed frame
can vary in different program runs, but is constant throughout one
execution.

If not specified, FIXED_SITE defaults to the minimum Site number (i.e.
lowest numbered, or earliest chronologically) used in all input images.
Normally this default is sufficient; rarely must FIXED_SITE be specified.

One or more Rover State Files must usually be specified in order to combine
image from more than one Site.  These describe the relationship between
sites.  See the RSF parameter.

.VARI SOLUTION_ID
Specifies which solution ID to use when specifying the coordinate system.

There are potentially many different definitions for the same coordinate
system.  These are identified via a unique Solution ID.  If this parameter
is given, only the specified solution's definition is searched for.  Without
it, the "best" available solution is chosen.

It is extremely rare that this parameter should be needed.  The default
will be sufficient in almost every case.

Note that the current MER implementation requires that a value for COORD_INDEX
also be provided, in order for this parameter to take effect.

