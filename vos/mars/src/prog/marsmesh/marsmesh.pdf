process help=*
PARM INP TYPE=STRING COUNT=(1:1)
PARM OUT TYPE=STRING COUNT=(1:1)
PARM IN_SKIN TYPE=STRING COUNT=(1:1) DEFAULT=--
PARM NAVTABLE TYPE=STRING COUNT=(0:1) DEFAULT=--

PARM BAND    TYPE=INTEGER COUNT=(0:1) DEFAULT=1
PARM MINX TYPE=REAL COUNT=(0:1) DEFAULT=--
PARM MINY TYPE=REAL COUNT=(0:1) DEFAULT=--
PARM MAXX TYPE=REAL COUNT=(0:1) DEFAULT=--
PARM MAXY TYPE=REAL COUNT=(0:1) DEFAULT=--

PARM RANGE_MIN TYPE=REAL COUNT=(0:1) DEFAULT=0.0
PARM RANGE_MID TYPE=REAL COUNT=(0:1) DEFAULT=--
PARM RANGE_MAX TYPE=REAL COUNT=(0:1) DEFAULT=100.0

PARM TILESIZE TYPE=REAL COUNT=0:1 DEFAULT=2000000.0;
PARM MAXGAP TYPE=INT COUNT=0:1 DEFAULT=2;

PARM TILE_DS_LVL_MAX TYPE=INTEGER COUNT=0:1 DEFAULT=0

PARM X_SUBSAMPLE TYPE=INTEGER COUNT=0:1 DEFAULT=1
PARM Y_SUBSAMPLE TYPE=INTEGER COUNT=0:1 DEFAULT=1
PARM LOD_LEVELS  TYPE=INTEGER COUNT=0:1 DEFAULT=1
PARM LINE_EXCL_MIN TYPE=INTEGER COUNT=0:1 DEFAULT=0
PARM LINE_EXCL_MAX TYPE=INTEGER COUNT=0:1 DEFAULT=0
PARM SAMPLE_EXCL_MIN TYPE=INTEGER COUNT=0:1 DEFAULT=0
PARM SAMPLE_EXCL_MAX TYPE=INTEGER COUNT=0:1 DEFAULT=0

PARM ADAPTIVE TYPE=KEYWORD COUNT=0:1 VALID=ADAPTIVE DEFAULT=--
PARM DO_NORMALS TYPE=KEYWORD COUNT=0:1 VALID=DO_NORMALS DEFAULT=--
PARM FORMAT TYPE=KEYWORD COUNT=0:1 VALID=("ALL","INVENTOR","OBJ") DEFAULT="ALL"
PARM USE_TILE_RES TYPE=KEYWORD COUNT=0:1 VALID=USE_TILE_RES DEFAULT=--

PARM MAX_ANGLE TYPE=REAL COUNT=0:1 DEFAULT=87.0;
PARM RES_MAX TYPE=INTEGER COUNT=0:1 DEFAULT=500000;
PARM RES_MIN TYPE=INTEGER COUNT=0:1 DEFAULT=40000;

PARM CORR TYPE=REAL COUNT=1 DEFAULT=0.25
PARM BASELINE TYPE=REAL COUNT=(0:1) DEFAULT=--
PARM ASPECT_RATIO TYPE=REAL COUNT=1 DEFAULT=0.25
PARM NUM_SIGMA TYPE=REAL COUNT=1 DEFAULT=1.0
PARM WFACTOR TYPE=REAL COUNT=1 DEFAULT=1.0

PARM MIN_WINDOW TYPE=INT COUNT=2 DEFAULT=(1,1)
PARM DENSITY TYPE=REAL COUNT=1 DEFAULT=1

PARM CONFIG_PATH STRING DEFAULT="$MARS_CONFIG_PATH"
PARM POINT_METHOD TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM NOSITE TYPE=KEYWORD COUNT=(0:1) VALID=NOSITE DEFAULT=--

PARM DATA_SET_NAME TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM DATA_SET_ID TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM RELEASE_ID TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM PRODUCT_ID TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM PRODUCER_ID TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM PRODUCER_INST TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM TARGET_NAME TYPE=STRING COUNT=(0:1) DEFAULT=--
PARM TARGET_TYPE TYPE=STRING COUNT=(0:1) DEFAULT=--

PARM RSF TYPE=STRING COUNT=0:100 DEFAULT=--
PARM DEBUG_RSF TYPE=KEYWORD COUNT=0:1 VALID=DEBUG_RSF DEFAULT=--
PARM COORD TYPE=KEYWORD VALID=("FIXED", "INSTRUMENT", "SITE", "ROVER", +
        "LOCAL_LEVEL", "RMECH") DEFAULT="FIXED"
PARM COORD_INDEX TYPE=INTEGER COUNT=0:10 DEFAULT=--
PARM FIXED_SITE TYPE=INTEGER COUNT=0:1 DEFAULT=--
PARM SOLUTION_ID TYPE=STRING COUNT=0:1 DEFAULT=--

END-PROC

.TITLE
VICAR program MARSMESH.

.HELP
PURPOSE:

MARSMESH generates polygon meshes from XYZ point clouds.

EXECUTION:

marsmesh inp=XYZ.img out=mesh.OBJ in_skin=IMAGE.img

where:
XYZ.img is 3-banded XYZ image
mesh.OBJ generated OBJ file
IMAGE.img The image that is used as texture map
.PAGE
METHOD:

MARSMESH outputs polygonized, texture-mapped mesh.

.PAGE

HISTORY:
  2018-03-21 O. Pariser - Initial marsmesh based on CRUMBS/SUMMITT code from John Wright
  2019-10-24 W. Bunch - Initialized some variables; cleaned up some -Wall warnings; Still a lot of
             warnings like "deleting object of abstract class type 'Foo' which has non-virtual destructor will 
             cause undefined behaviour"
  2020-04-30 W. Bunch - Replaced sprintfs.

COGNIZANT PROGRAMMER: O. Pariser

.LEVEL1
.VARI INP
XYZ image.

.VARI OUT
Output file currently only OBJ format is supported.

.VARI IN_SKIN
Image that is used at texture map.

.VARI NAVTABLE
Corrected navigation
filename.

.VARI RANGE
Maximum range in meters, measures from camera point.
.VARI BAND
The BSQ input file band number.  Defaults to 1.
.VARI MINX
Minimum extent of mosaic in X direction(meters).
.VARI MINY
Minimum extent of mosaic in Y direction(meters).
.VARI MAXX
Maximum extent of
mosaic in X direction
.VARI MAXY
Maximum extent of
mosaic in Y direction
.VARI NL
Number of Lines of the output.  Used when the extent is computed from input XYZs.
.VARI X_SUBSAMPLE
Subsample Factor in X direction for XYZ input.  Has to be a "power of 2" integer 
i.e. 1,2,4,8.... Default value is 1
.VARI Y_SUBSAMPLE
Subsample Factor in Y direction for XYZ input.  Has to be a "power of 2" integer i.e. 
i.e. 1,2,4,8.... If only downsampled factor in X direction is specified, Y subsample
factor will be set to match it.   
.VARI MAXGAP
Maximum XYZ line gap interpolation(in pixels)
.VARI LOD_LEVELS
Number of LOD Levels to generate in output files
.VARI MAX_ANGLE
Max angle between triangle face and view direction (deg)
.VARI CONFIG_PATH
Path used to find
configuration/calibration
files.

.VARI POINT_METHOD
Specifies a mission-
specific pointing
method to use

.VARI NOSITE
Disables coordinate
system sites.

.VARI RSF
Rover State File(s) to use.

.VARI DEBUG_RSF
Turns on debugging of RSF
parameter.

.VARI COORD
Coordinate system to use.

.VARI COORD_INDEX
Coordinate system index for
some COORD/mission combos.

.VARI FIXED_SITE
Which site is FIXED for
rover missions.

.VARI SOLUTION_ID
Solution ID to use for
COORD_INDEX

.VARI DATA_SET_NAME
Specifies the full name given
to a data set or a data product.

.VARI DATA_SET_ID
Specifies a unique alphanumeric
identifier for a data set or data
product.

.VARI RELEASE_ID
Specifies the unique identifier
associated with the release to the
public of all or part of a data set.
The release number is associated with
the data set, not the mission.

.VARI PRODUCT_ID
Specifies a permanent, unique
identifier assigned to a data
product by its producer.

.VARI PRODUCER_ID
Specifies the unique identifier
of an entity associated with the
production a data set.

.VARI PRODUCER_INST
Specifies the full name of the
identity of an entity associated
with the production of a data set.

.VARI TARGET_NAME
Specifies a target.

.VARI TARGET_TYPE
Specifies the type of a named target.

.LEVEL2
.VARI INP
XYZ image 
The input files are in REAL (float) format.

.VARI OUT
ASCII 3D File Format, currently only OBJ is supported.

.VARI CONFIG_PATH
A colon-separated list of directories in which to look for configuration
and calibration files.  Environment variables are allowed in the list
(and may themselves contain colon-separated lists).  The directories are
searched in order for each config/cal file when it is loaded.  This allows
multiple projects to be supported simultaneously, and allows the user to
override any given config/cal file.  Note that the directory structure below
the directories specified in this path must match what the project expects.
For example, Mars 98 expects flat fields to be in a subdirectory named
"flat_fields" while Mars Pathfinder expects them to be directly in the
directory specified by the path (i.e. no intermediate subdirectories).

.VARI POINT_METHOD
Specifies a mission-specific pointing method to use.  Normally this
parameter is not used, in which case the "default" pointing methods
are used.  Some missions may have special, or alternate, pointing
methods available, which are indicated by this string (for example,
backlash models, using arm joint angles instead of x/y/z/az/el, etc).
A substring search is used, so multiple methods (where that makes sense)
can be specified by separating the keywords with commas.

Note that nav files created using one pointing method will most likely
not be compatible with a mosaic created using a different pointing method.

The methods available vary per mission, but some methods available at
the time of this writing are:

.VARI NOSITE
Disables all label-derived parameters to the Site mechanism which underlies
coordinate systems.  This forces all sites to be identical, with all rotations
and offsets set the same.  In the case of MPF or Mars 98, this disables
the lander quaternion and offset (sets them to identity and 0, respectively).
This option should not be used with images taken from different vantage
points (e.g. the spacecraft moved, or mixing a lander and a rover) or
invalid results will be obtained.  The use of this option invalidates the
Fixed coordinate frame; any values reported in the Fixed frame will not
correctly reflect the orientation of the lander/rover.

Obviously, this option should be rarely used; it is intended for when the
image labels defining the site are invalid or inconsistent.

.VARI DATA_SET_NAME
The DATA_SET_NAME typically identifies the instrument that acquired the
data, the target of that instrument, and the processing level of the data.
This value is copied to the output label, property IDENTIFICATION,
keyword DATA_SET_NAME.

.VARI DATA_SET_ID
The DATA_SET_ID value for a given data set or product is constructed
according to flight project naming conventions.  In most cases the
DATA_SET_ID is an abbreviation of the DATA_SET_NAME.
This value is copied to the output label, property IDENTIFICATION,
keyword DATA_SET_ID.

.VARI RELEASE_ID
When a data set is released incrementally, such as every three months during
a mission, the RELEASE_ID is updated each time part of the data set is released.
For each mission(or host id if multiple spacecrafts), the first release of a data
set should have a value of "0001".
This value is copied to the output label, property IDENTIFICATION,
keyword RELEASE_ID.

.VARI PRODUCT_ID
Specifies a permanent, unique identifier assigned to a data product by
its producer. Most commonly, it is the filename minus the extension.
This value is copied to the output label, property IDENTIFICATION,
keyword PRODUCT_ID.

.VARI PRODUCER_ID
Specifies the unique identifier of an entity associated with the
production of a data set. This value is copied to the output label,
property IDENTIFICATION, keyword PRODUCER_ID.

.VARI PRODUCER_INST
Specifies the identity of a university, research center, NASA center or other
institution associated with the production of a data set.
This value is copied to the output label, property IDENTIFICATION, keyword
PRODUCER_INSTITUTION_NAME.

.VARI TARGET_NAME
Specifies a target.  The target may be a planet, satelite, ring, region, feature,
asteroid or comet.  This value is copied to the output label, property
IDENTIFICATION, keyword TARGET_NAME.

.VARI TARGET_TYPE
Specifies the type of a named target. This value is copied to the output
label, property IDENTIFICATION, keyword TARGET_NAME.

.VARI RSF
Rover State File.  This is a list of filenames to load containing
Rover State information.  These files contain position and orientation
information for a rover (or other mobile spacecraft) at various sites.
They are in XML format.  See the "Rover Motion Counter (RMC) Master File SIS"
for details on these files.

Rover State Files have a priority order.  The files listed first have
the highest priority.

Environment variables may be used in the list.

For MER, if a directory is specified, then that directory is searched for
RMC Master files and any found are loaded.  The directory structure and
filename convention is covered in the RMC SIS.  The directory specified
is the one containing "master", so if <dir> is the name specified in the
RSF parameter, the following files will be searched for:

<dir>/master/<mission>_Master.svf
<dir>/master/<mission>_Site_<n>_Master.rvf

The name of each file loaded is printed to the stdout log for reference.

.VARI DEBUG_RSF
If enabled, this causes the internal database of RMC locations to be
printed out to the stdout log.  This is after the RSF files have been
loaded and the coordinate systems read from the input label(s).

.VARI COORD
The coordinate system to use for the output UVW vectors.  The interpretation
of the values is dependent on the mission.  Some representative missions are
listed here:

Fixed - The Fixed frame.  This is the ultimate reference frame
    (see also FIXED_SITE for rover missions).
Instrument - (default) The "natural" frame for the instrument 
    (of the first input image).  MPF: Lander or Rover; M98: MVACS; MER: Rover.
Site - A major Site frame.  For rover missions, COORD_INDEX specifies which
    Site frame to use.  Non-rover missions treat this as Fixed.
Rover - An instance of the Rover frame.  For rover missions, COORD_INDEX
    specifies which instance of the rover frame to use.  Non-rover mission
    use the spacecraft frame (e.g. Lander for M98).  For MSL, this is the
    Rover Nav frame.
Local_Level - An instance of a Local Level frame.  This is typically
    coincident with the Rover frame (in XYZ) but oriented toward North
    like the Site and Fixed frames.  For MER, this is an instance of a
    Drive index move.
RMECH - for MSL, this is the Rover Mechanical frame.  It should not normally
    be used except for testing.

.VARI COORD_INDEX
The index specifies which instance of a coordinate system to use.  It is
currently applicable only to rover-based missions, but could have other
uses.  The index is equivalent to the Rover Motion Counter (RMC) for MER
and FIDO.

For MER/FIDO, there are many Site frames.  Each is numbered with a single
index.  For Site Frames, coord_index specifies which to use.  Likewise,
there are many Local_Level and Rover frames, corresponding to values of
the RMC.  The multiple instances of this frame are selected by COORD_INDEX.

Generally COORD_INDEX defaults sensibly so you don't usually need to
specify it.  It will default to the instance used by the first input.

.VARI FIXED_SITE
Specifies which major Site is the "Fixed" Site for this run.

Historically, MPF and M98 had a single "Surface Fixed" frame which never
moved, and which all other coordinate system frames were referenced to.
With the advent of long-range rovers (such as MER and FIDO), that became
insufficient.  The rover traverses far enough that errors in knowledge of
coordinate system offset and orientation become unacceptable.

For this reason, a system of major Sites was introduced.  Periodically
during the mission, a Site frame is declared.  This then becomes the
reference frame for all activities until the next Site is declared.
References are kept local, and errors don't propogate across Sites.

However, if images from more than one Site are combined together, the
Site's must be placed relative to each other.  Therefore a single reference
frame is still needed to combine different sites.

The FIXED_SITE parameter controls which of the major Site frames is
the reference ("fixed") site for this program run.  This fixed frame
can vary in different program runs, but is constant throughout one
execution.

If not specified, FIXED_SITE defaults to the minimum Site number (i.e.
lowest numbered, or earliest chronologically) used in all input images.
Normally this default is sufficient; rarely must FIXED_SITE be specified.

One or more Rover State Files must usually be specified in order to combine
image from more than one Site.  These describe the relationship between
sites.  See the RSF parameter.

.VARI SOLUTION_ID
Specifies which solution ID to use when specifying the coordinate system.

There are potentially many different definitions for the same coordinate
system.  These are identified via a unique Solution ID.  If this parameter
is given, only the specified solution's definition is searched for.  Without
it, the "best" available solution is chosen.

It is extremely rare that this parameter should be needed.  The default
will be sufficient in almost every case.

Note that the current MER implementation requires that a value for COORD_INDEX
also be provided, in order for this parameter to take effect.
