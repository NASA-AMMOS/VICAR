procedure
refgbl $echo
refgbl $autousage
refgbl $syschar

body
local dir string
let $autousage="none"
let _onfail="continue"
let $echo="yes"
 
!GENERAL TEST:
gen e1.img 200 200 sinc=0
gen e2.img 200 200 sinc=0 ival=2
gen e3.img 200 200 sinc=0 ival=4
ltgen e1.img ltf.out gres=(2,10,10) expo=(-1.0,0.,50.,66.67,100.) ni=3

!verify exposure and area in VICAR label.
label-list ltf.out

!This should return all zeros, because they are place holders for momgen
list ltf.out
 
momgen (e1.img,e2.img,e3.img) ltf.out 'DBUG expo=-1.
momgen (e1.img,e2.img,e3.img) ltf.out 'DBUG expo=0.
momgen (e1.img,e2.img,e3.img) ltf.out 'DBUG expo=50.
label-list ltf.out
list ltf.out (1,1,4,2) 
 
!CASSINI TEST:
if ($syschar(1)="UNIX")
   let dir = "/project/test_work/testdata/cassini/iss/"
   defcmd-replace typeit "ush cat"
else
   let dir = "wms_test_work:[testdata.cassini.iss]"
   defcmd-replace typeit "dcl type"
end-if
 
!---------------------------
! Make a test light transfer file which has exposure levels of
! 0,10,20,40 and each input frame was 10,110,210,410 dn respectively.
! Each level has 3 frames associated with it.
 
!Set dns to 10 and replicate - set exposure to 0
f2 &"dir"sum2.1 l1.a func=10
label-rep l1.a 'PROP property="CASSINI-ISS" item="EXPOSURE_DURATION=0"
copy l1.a l1.b
copy l1.a l1.c
 
!Set dns to 110 and replicate - set exposure to 10
f2 &"dir"sum2.1 l2.a func=110
label-rep l2.a 'PROP property="CASSINI-ISS" item="EXPOSURE_DURATION=10."
copy l2.a l2.b
copy l2.a l2.c
 
!Set dns to 210 and replicate - set exposure to 20
f2 &"dir"sum2.1 l3.a func=210
label-rep l3.a 'PROP property="CASSINI-ISS" item="EXPOSURE_DURATION=20."
copy l3.a l3.b
copy l3.a l3.c
 
!Set dns to 410 and replicate - set exposure to 40
f2 &"dir"sum2.1 l4.a func=410
label-rep l4.a 'PROP property="CASSINI-ISS" item="EXPOSURE_DURATION=40."
copy l4.a l4.b
copy l4.a l4.c
 
!Create list of the files created in SRCH format
createfile m.list
addtofile m.list "NEXT FILE=0001"
addtofile m.list "l1.a"
addtofile m.list "l1.b"
addtofile m.list "l1.c"
addtofile m.list "l2.a"
addtofile m.list "l2.b"
addtofile m.list "l2.c"
addtofile m.list "l3.a"
addtofile m.list "l3.b"
addtofile m.list "l3.c"
addtofile m.list "l4.a"
addtofile m.list "l4.b"
addtofile m.list "l4.c"
reset m.list
typeit m.list
 
!Initialize Light Transfer File
ltgen l1.a out=testltf.out list=m.list 'GRID

!Verify area and exposure on VICAR label
label-list testltf.out 
 
!Create list of the files for one exposure level in SRCH format
createfile m1.list
addtofile m1.list "NEXT FILE=0001"
addtofile m1.list "l1.a"
addtofile m1.list "l1.b"
addtofile m1.list "l1.c"
 
!Fill Light Transfer File with stats
momgen list=m1.list out=testltf.out 'DBUG
 
!check what MOMGEN did to the output file
!the record with exposure time = 0.0 should be filled
!word 1=#images (i*4), rest is r*4 stats
label-list testltf.out 
list testltf.out (1,1,4,2) 
 
!Repeat with override of exposure gotten from labels
!(it must be an exposure value that LTGEN knew about)
momgen list=m1.list out=testltf.out exp=10.
 
!check what MOMGEN did to the output file
!the records with exposure time = 0.0 & 10. should be filled
!word 1=#images (i*4), rest is r*4 stats
label-list testltf.out 
list testltf.out (1,1,4,2) 

if ($syschar(1)="UNIX")
   ush rm e1.*
   ush rm e2.*
   ush rm e3.*
   ush rm l1.*
   ush rm l2.*
   ush rm l3.*
   ush rm l4.*
   ush rm m.list
   ush rm m1.list
   ush rm *.out
else
   dcl del e1.*;*
   dcl del e2.*;*
   dcl del e3.*;*
   dcl del l1.*;*
   dcl del l2.*;*
   dcl del l3.*;*
   dcl del l4.*;*
   dcl del m.list;*
   dcl del m1.list;*
   dcl del *.out;*
end-if
end-proc

