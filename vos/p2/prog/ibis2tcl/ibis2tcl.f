C 2 JAN 1995 ...CRI... MSTP S/W CONVERSION (VICAR PORTING)
c 
C
	INCLUDE 'VICMAIN_FOR'

	SUBROUTINE MAIN44
	IMPLICIT NONE
	INCLUDE 'pgminc' 	       ! TAE CONSTANTS & PARAMETERS
	INTEGER  VBLOCK(xprdim)
	CHARACTER*3  VARNAME
	CHARACTER*72 STRING
        CHARACTER*7  IBISVRSN
        CHARACTER*80 S2DATA
        CHARACTER*5  S1DATA
	INTEGER	IBISLOC(400), VARTYPE(200)
	INTEGER	LOCCNT, LOCDEF, VARCNT, DUMMY, CLEN, NCOL
	INTEGER	ROW, COL, UNIT, STATUS, N,IBIS, IDATA
	REAL	RDATA
        real*8  ddata
	LOGICAL IBIS2

        IBIS2=.FALSE.

        CALL IFMESSAGE('IBIS2TCL version 2-FEB-00')
        CALL XVEACTION('SA',' ')

	CALL XVPARM ('IBISLOC', IBISLOC, LOCCNT, LOCDEF, 400)
	VARCNT = LOCCNT/2
	IF (LOCDEF .EQ. 1) THEN
	   CALL XVP('VARCNT', VARCNT, DUMMY)
	ENDIF
c
c       get the variable type
c
	CALL XVP ('VARTYPE', VARTYPE, DUMMY)

C		OPEN IBIS INTERFACE FILE
        CALL XVUNIT(UNIT, 'INP', 1, STATUS, ' ')

	CALL IBIS_FILE_OPEN(UNIT,IBIS,'READ',0,0,' ',' ',STATUS)
        IF (STATUS.NE.1) CALL IBIS_SIGNAL_U(UNIT,STATUS,1)
        CALL IBIS_FILE_GET(IBIS,'NC',NCOL,1,1)
        CALL IBIS_FILE_GET(IBIS,'NR',CLEN,1,1)
        CALL IBIS_FILE_GET(IBIS,'VERSION',IBISVRSN,1,1)

        IF (IBISVRSN(6:6).EQ.'2') IBIS2=.TRUE.

C		CALCULATE THE DEFAULT LOCATIONS
	IF (LOCDEF .EQ. 1) THEN
	   DO N = 1, VARCNT
	      IBISLOC(2*N-1) = INT((N-1)/NCOL) + 1
	      IBISLOC(2*N) = MOD(N-1,NCOL) + 1
	   ENDDO
	ENDIF

C		CREATE V-BLOCK
	CALL XQINI( VBLOCK, xprdim, xabort)

C		PUT THE VALUES IN THE V-BLOCK ONE AT A TIME
	DO N = 1, VARCNT

	   ROW = IBISLOC(2*N-1)
	   COL = IBISLOC(2*N)

           IF (N.LE.9) THEN            !assuming n .le. 25
	      WRITE (VARNAME,'(A1,I1)') 'V',N
           ELSE
	      WRITE (VARNAME,'(A1,I2)') 'V',N
           END IF

	   IF (ROW .GE. 1  .AND.  ROW .LE. CLEN
     +		   .AND.  COL .GE. 1  .AND.  COL .LE. NCOL) THEN
C
C DOUBLE
C
	      IF (VARTYPE(N) .LT. 0) THEN
	         CALL IBIS_COLUMN_READ(IBIS,DDATA,COL,ROW,1,STATUS)
                 IF (STATUS.NE.1) CALL IBIS_SIGNAL(IBIS,STATUS,1)
	         CALL XQDBLE(VBLOCK, VARNAME, 1, DDATA, xadd, STATUS)
C
C REAL
C
	      ELSE IF (VARTYPE(N) .EQ. 0) THEN
	         CALL IBIS_COLUMN_READ(IBIS,RDATA,COL,ROW,1,STATUS)
                 IF (STATUS.NE.1) CALL IBIS_SIGNAL(IBIS,STATUS,1)
	         CALL XQREAL(VBLOCK, VARNAME, 1, RDATA, xadd, STATUS)
C
C INTEGER
C
	      ELSE IF (VARTYPE(N) .EQ. 1) THEN
	         CALL IBIS_COLUMN_READ(IBIS,IDATA,COL,ROW,1,STATUS)
                 IF (STATUS.NE.1) CALL IBIS_SIGNAL(IBIS,STATUS,1)
	         CALL XQINTG (VBLOCK, VARNAME, 1,IDATA, xadd, STATUS)
C
C CHARACTERS
C
	      ELSE IF (VARTYPE(N) .EQ. 2) THEN
C
C 80 CHARACTERS
C
                 IF (IBIS2) THEN   ! up to 80 characters
	            CALL IBIS_COLUMN_READ(IBIS,S2DATA,COL,ROW,1,STATUS)
                    IF (STATUS.NE.1) CALL IBIS_SIGNAL(IBIS,STATUS,1)
		    CALL XQSTR (VBLOCK,VARNAME,1,S2DATA, xadd, STATUS)
C
C 4 CHARACTERS
C
                 ELSE       ! IBIS-1 4 characters only
                    CALL IBIS_COLUMN_SET(IBIS,'FORMAT','A4',COL,STATUS)
                    CALL IBIS_COLUMN_SET(IBIS,'U_FORMAT','A4',
     *                                   COL,STATUS)
	            CALL IBIS_COLUMN_READ(IBIS,S1DATA,COL,ROW,1,STATUS)
                    IF (STATUS.NE.1) CALL IBIS_SIGNAL(IBIS,STATUS,1)
		    CALL XQSTR(VBLOCK,VARNAME,1,S1DATA,xadd,STATUS)
                 END IF
C
C REAL TO INTEGER
C
	      ELSE
	         CALL IBIS_COLUMN_READ(IBIS,RDATA,COL,ROW,1,STATUS)
                 IF (STATUS.NE.1) CALL IBIS_SIGNAL(IBIS,STATUS,1)
	         CALL XQINTG (VBLOCK,VARNAME,1,NINT(RDATA),xadd,STATUS)
              ENDIF
	   ELSE
	      WRITE (STRING, '(A,I5,A,I2,A)') ' Location: (',ROW,
     +		     ',', COL,')  (row,column) does not exist.'
	      CALL XVMESSAGE (STRING,' ')
	   ENDIF
	ENDDO	

	CALL IBIS_FILE_CLOSE(IBIS,' ',STATUS)
        IF (STATUS.NE.1) CALL IBIS_SIGNAL_U(UNIT,STATUS,1)

	CALL XQINTG (VBLOCK, 'VNCOL', 1, NCOL, xadd, STATUS)
	CALL XQINTG (VBLOCK, 'VCLEN', 1, CLEN, xadd, STATUS)

	CALL XVQOUT( VBLOCK, STATUS)

	RETURN
	END
