process help=*
PARM INP TYPE=STRING COUNT=(1:3)
PARM OUT TYPE=STRING COUNT=(1:4)
PARM CIRCLE TYPE=REAL COUNT=(0:400) DEFAULT=--
PARM SN TYPE=REAL COUNT=(0:1) DEFAULT=--
PARM OPTIMIZE TYPE=KEYWORD COUNT=(0:1) VALID=(OPTIMIZE,NOOPT) DEFAULT=NOOPT
PARM COHERE TYPE=KEYWORD COUNT=(0:1) VALID=(COHERE,INCOHERE) DEFAULT=INCOHERE
PARM DEFOCUS TYPE=REAL COUNT=(0:1) DEFAULT=--
PARM FIND TYPE=REAL COUNT=(0:1) VALID=(.0001:1000.) DEFAULT=--
PARM ROTATE TYPE=KEYWORD COUNT=(0:1) VALID=(ROTATE,NOROTATE) DEFAULT=NOROTATE
PARM NOISE TYPE=REAL COUNT=(0:1) DEFAULT=--
PARM REFLAMDA TYPE=REAL COUNT=(0:1) DEFAULT=.55
PARM LAMDA TYPE=REAL COUNT=(0:1) DEFAULT=.55
PARM FULLWELL TYPE=REAL COUNT=(0:1) DEFAULT=0.0
PARM PHOTONS TYPE=REAL COUNT=(0:1) DEFAULT=0.0
PARM QE TYPE=REAL COUNT=(0:1) DEFAULT=1.0
PARM SCALE TYPE=REAL COUNT=(0:1) DEFAULT=0.0
PARM RING TYPE=REAL COUNT=(0,2) DEFAULT=(0.,0.)
PARM SPOKES TYPE=REAL COUNT=(0:6) DEFAULT=(0.,0.,0.,0.,0.,0.)
END-PROC
.TITLE
VICAR2 Program SPARSE to simulate the effect of a sparse aperture.
.HELP

PURPOSE

Sparse simulates the effect of a sparse aperture by constructing a complex
pupil, computing the OTF, and applying it to the input image.

It can also apply a wiener filter to correct for the effect of an aperture
(see the SN keyword).

EXECUTION

direct:

sparse inp=(in,junk,pupil) out=blurred  (Note: junk is ignored)
or
sparse inp=(in) out=blurred circle=(257,257,50,0)

inverse:

sparse inp=(blurred,reference,pupil) out=corrected 'optimize
or
sparse inp=(blurred,reference) out=corrected 'optimize
or
sparse inp=(blurred) out=corrected sn=45 circle=(257,257,50,0)

SOME CLARIFICATIONS:

Note on centering the pupil: 
The images must be a power of 2 in nl and ns. This means there is no center
pixel. We have defined the center at nl/2+1 and ns/2+1. For incoherent
imaging it doesen't matter. For coherent imaging it makes a big difference.

Note on the size of the pupil:
In the incoherent case no part of the filled pupil (aperture) may lie 
outside a circle centered in the pupil and having a radius of 1/4 the image
nl or ns. It is up to you to check for this condition.
The largest "filled aperture" would be created like this:
sparse inp=original.img out=blurred.img circle=(257,257,128,0)
if the picture were 512 by 512 pixels.

Note on simulating spectral bandwidth:
The program creates monochromatic images. To simulate a spectrum you must 
run the program many times and add the images. Each run will require you to 
scale the pupil in proportion to the wavelength.

Note on pupil phase errors:
The phase errors introduced are in units of wavelength. To simulate a spectrum
you will need to make many runs, each with a scaled phase error in proportion to
the wavelength, and add the results.

Note on wiener correction of color imagery:
If you have a broadband input image the psf is a function of color. To correct
for this you must correct for a family of psf's and later select locally
the best one based upon a the local color.

METHOD:

Incoherent case:
1. The pupil (aperture) is constructed.
2. The otf is the autocorrelation of the pupil.
3. The otf is multiplied by the fft of the image.
4. Inverse fft.

Coherent case:
1. The pupil (aperture) is constructed.
2. The otf is the pupil.
3. The otf is multiplied by the fft of the image.
4. Inverse fft.

If SN is specified, requiring a wiener filter, then

Incoherent case:
1. The pupil (aperture) is constructed.
2. The otf is the autocorrelation of the pupil.
3. The filter F=otf/(otf*otf+1/(sn*sn))
4. The filter F is multiplied by the fft of the image.
5. Inverse fft.

Coherent case:
1. The pupil (aperture) is constructed.
2. The otf is the pupil.
3. The filter F=conjg(otf)/(|otf|**2+1/(sn*sn))
3. The filter F is multiplied by the fft of the image.
4. Inverse fft.

RESTRICTIONS

Image must be of a power of 2.
Image <= 512*512 total pixels.

Cognizant Programmer:  JJ Lorre   November 1998

.LEVEL1
.VARIABLE INP
1. input image
2. reference image
3. pupil
.VARIABLE OUT
1. output image
2. pupil image (optional)
3. otf (optional)
4. psf (optional)
.VARIABLE CIRCLE
Sub apertures
line,sample,radius,piston
.VARIABLE RING
1. number of sub apertures,
2. radius
.VARIABLE SPOKES
1. number of spokes.
2. number of mirrors/spoke.
3. center hole radius.
4. radius of inner circle.
5. radius increase factor.
6. (optional) # circles in ring.
.VARIABLE SN
Wiener s/n ratio
.VARIABLE OPTIMIZE
Finds best SN value.
.VARIABLE COHERE
Coherent case
.VARIABLE DEFOCUS
Amount of defocus.
.VARIABLE FIND
To match signal to noise.
.VARIABLE ROTATE
smear rotate otf 180.
.VARIABLE NOISE
Add noise amount.
.VARIABLE REFLAMDA
Reference wavelength.
.VARIABLE LAMDA
Actual wavelength.
.VARIABLE FULLWELL
Electrons/ccd bin
.VARIABLE SCALE
pupil scale

.LEVEL2
.VARIABLE INP
1. input image to be blurred or deconvolved.
2. reference image. This is usually a deconvolved image made from a
   filled aperture (optional).
3. the pupil function which can be complex (optional).

.VARIABLE OUT
1. output image in same format as input image
2. the real part of the complex pupil (optional). 
3. the optical transfer function (optional).
4. the point spread function (optional).

.VARIABLE CIRCLE
To create round sub apertures in the empty pupil.
Sets of four numbers representing:
1. line coordinate of circle center,
2. sample coordinate of circle center,
3. radius of the circle in pixels.
4. piston phase error in wavelengths ( w ).
Circles are set to a complex amplitude of 1.
If the radius is positive the dn will be set to exp(0,w*twopi).
If the radius is negative the sign and phase are ignored and the circle 
dn is set to (0,0).
 So, circle=(100,100,50,0,100,100,-40,0) creates an annulus 10
pixels thick centered on 100 100.
Circles can be written onto the second input file if it exists.
See METHOD for centering things.

Note: circle data can also be entered as x,y,radius,phase.
 See the SCALE keyword.

.VARIABLE RING
A ring of equally spaced sub apertures can be created at the maximum permitted
diameter each of the same radius.
The first argument is the number of sub apertures.
The second argument is the sub aperture radius in pixels.
Example: ring=(13,4.0)

.VARIABLE SPOKES
Creates spokes
1. number of spokes.
2. number of mirrors/spoke.
3. center hole radius.
4. radius of inner circle.
5. radius increase factor.
6. (optional) number of circles in an outer ring.

.VARIABLE SN
The Wiener signal to noise of the image.
This causes SPARSE to treat the input image as a blurred image and to
apply the Wiener restoration filter:
otf/(|otf|**2 +1/(sn)**2)
If SN is not specified the program applies the otf directly to the input image
and no deconvolution is performed.
See OPTIMIZE keyword.

.VARIABLE OPTIMIZE
You have the option to permit SPARSE to determine the SN value for you and
to then use it to deconvolve the input image. In this mode you MUST provide
a second input file which acts as a reference image. This file should be
a restored image obtained by a filled aperture. Optimize finds that SN
value which minimizes the difference between the restoration and this
reference image.

.VARIABLE COHERE
Specifies that the system behaves coherently.
The default is INCOHERE (incoherent behavior).

.VARIABLE DEFOCUS
Amount of defocus expressed as the maximum deviation of a spherical wave
centered at the pupil location nl/2+1, ns/2+1, in wavelengths.
We assume the wave coincides with the pupil on a circle of radius nl/4, ns/4
from the center.
Example: defocus=0.5 gives a 0.5 wavelength of defocus from the ideal focus.

.VARIABLE FIND
Find specifies the signal to noise value of a filled aperture.
(you get this by running sparse once for a filled aperture and entering the
printed s/n ratio as FIND value)
SPARSE will compute the exposure relative to a filled aperture
required to produce a convolved image
with this signal to noise assuming that photon statitics are the sole cause of
noise in the output image.
There is no effect upon the image.

.VARIABLE ROTATE
Smear the otf by rotating it 180 degrees.
This simulates a rotating sparse aperture or linear array of apertures.
The initial pupil orientation doesen't matter.
The default is to not rotate.
Only implemented in the incoherent case.

.VARIABLE NOISE
Add shot noise such that the signal to noise in the output image is the 
specified value.
Example: noise=2.0
The default is to create a noiseless output image.

.VARIABLE FULLWELL
Add shot noise to the output image assuming that the mean dn of the input image
is at the full well ccd charge and that the full well ccd charge is
FULLWELL electrons.

Example: fullwell=10000, causes shot noise to be added in the following manner:
md=mean input picture dn value.
gain=(10000)/md
newdn=olddn+[sqrt(gain*olddn)*r]/gain
where r is a random number centered on 0 with a mean deviation of 1.

The default is to create a noiseless output image.

.VARIABLE PHOTONS
The number of input photons/pixel (not the number detected).
The fullwell in electrons = number of photons * QE 
then the fullwell is used to compute the gain as above.

The default is to create a noiseless output image.

.VARIABLE QE
Quantum efficiency of the detector. See PHOTONS keqword.
Defaults to 1.0

.VARIABLE REFLAMDA
Reference wavelength.
REFLAMDA, in conjunction with LAMDA permit the user to scale the pupil and to
scale the phase in order to easily simulate bandwidth effects.
The default is for LAMDA=REFLAMDA=0.55 microns.
If they are unequal then the ratio R=LAMDA/REFLAMDA is used to scale the pupil
and the phase in the pupil as follows:
Parameter specified sub pupil locations (relative to the image center) 
 are multiplied by 1/R.
Parameter specified sub pupil sizes are multiplied by 1/R.
Parameter specified sub pupil phases are multiplied by 1/R.

Warning: To keep the pupil from being expanded and running the risk of exceeding
the nl/2 and ns/2 limits I suggest that REFLAMDA <= LAMDA.

.VARIABLE LAMDA
Actual wavelength.
See description for REFLAMDA parameter.

.VARIABLE SCALE
The pupil scaling factor.
Defaults to zero.
If the "CIRCLE" parameter values are input as x,y,r,phase instead of as
line,sample,r,phase then the x,y,r values are scaled up to fill the largest
permitted aperture and are then converted to line,sample coordinates. The
computed scaling value is printed out. This is the default for scale=0.
If scale is not zero then the auto scaling to fill the aperture is not
performed but the SCALE value is used instead to scale the circles to some
other value. This is useful to scale many sets of apertures the same.
X,y values are detected from line,samp values by their negative values.

.END
