process help=*
PARM INP TYPE=STRING COUNT=(2:3)
PARM OUT TYPE=STRING COUNT=(1)
PARM RADIUS TYPE=INTEGER COUNT=(0:1) VALID=(1:17) DEFAULT=13
PARM MINPTS TYPE=INTEGER COUNT=(0:1) VALID=(1:1000) DEFAULT=4
PARM MAXPASS TYPE=INTEGER COUNT=(0:1) VALID=(1:100000) DEFAULT=4
END-PROC

.TITLE
VICAR program topomap

.HELP
PURPOSE:
To generate relative elevation maps from either a tracker3 MARK
file or a pair of MARSCORR line,sample DISPARITY files.
No knowledge of camera pointing is necessary. Only use this
program if you do not have spice information or camera models.
(See programs LSTOXYZ & TOTOPO if you do.)

EXECUTION:
tracker3 inp=image out=mark
tptedt2 inp=mark out=editedmark  ( optional )
topomap inp=(image,editedmark) out=topo
or
marscorr inp=(left,right) out=(linedisp,sampledisp)
topomap inp=(left,linedisp,sampledisp) out=topo

An output smoothing operation is advisable.

.PAGE

METHOD:
Processing steps are as follows:

1. Determine the epipolar direction from the greatest vector trend.

2. Compute the vector scalar component along the epipolar direction
   for each pixel in the MARK or DISPARITY file
   and place in the output image as a real dn value.

3. For each zero dn pixel (those values between input vectors) collect
   all the non zero pixels within RADIUS and, if the number is MINPTS
   or more, interpolate over the central pixel. Store these values
   until done with this iteration over the entire image.

4. Add the interpolated pixels to the output.

5. Go to step 3 MAXPASS times.

The first input image is only used to get the size of the output.

INTERPOLATION FORMULA:

Given a location (i,j), a set of N dn values DN(x,y), 
and a set of N weights R which are the squares of the distances
between (i,j) and (x,y),
we compute the DN value at (i,j) from:

         DN(x1,y1)    DN(x2,y2)           DN(xN,yN)
         ---------  + ---------  .....  + ---------
         R(x1,y1)     R(x2,y2)            R(xN,yN)
DN(i,j)=-------------------------------------------
             1            1                   1
         ---------  + ---------  .....  + ---------
         R(x1,y1)     R(x2,y2)            R(xN,yN)

HISTORY:
3-2001  J Lorre. 
COGNIZANT PROGRAMMER:  Jean Lorre

.LEVEL1
.VARI INP
1. image
2. mark file
or
1. image
2. line disparity
3. sample disparity

.VARI OUT
REAL topo image

.VARI RADIUS
Radius of circle
collecting points.
should be larger
than mark grid size.

.VARI MINPTS
Minimum number of points
within circle to permit
interpolation.

.VARI MAXPASS
Number of passes
through the image.

.LEVEL2
.VARI INP
Either two or three inputs.
1. image
2. mark file
or
1. image
2. line disparity
3. sample disparity

.VARI OUT
REAL topo image.

.VARI RADIUS
Radius of circle within which points are collected to be used to
interpolate over the central pixel (if it is zero).
RADIUS should be greater than the MARK grid size.

.VARI MINPTS
For interpolation to be performed a minimum of MINPTS must be
collected within the circle.

.VARI MAXPASS
Number of passes to be performed through the image. If no points
are interpolated then iteration ceases.

end-proc                                                                     
        
