!TSTLIST.PDF
procedure
refgbl $autousage
refgbl $syschar
refgbl $echo

body
let $autousage="none"
let _onfail="continue"
let $echo="yes"

enable-log

!This is a test of program LIST

!Test compatibility with 2D files
!First test the program on BYTE data (with auto type determination).
!exercise all parameter options on this data type (FORMAT=BYTE)
gen a.dat nl=5 ns=10 sinc=1
list a.dat size=(1,1,5,5) 'DUMP 'ZEROES 'NOUSRTIM
list a.dat size=(1,1,5,5) linc=2 sinc=2 space=2 'NOUSRTIM
list a.dat size=(1,1,5,5) 'DISPLAY 'NOUSRTIM

!Test FORMAT=HEX
gen a.dat nl=5 ns=10 sinc=1 ival=65
list a.dat size=(1,1,5,5) 'HEX 'NOUSRTIM

!Test HALFWORD format
gen a.dat nl=5 ns=10 'HALF sinc=1 ival=2000
list a.dat size=(1,1,5,10) 'NOUSRTIM

!Test FULLWORD format
gen a.dat nl=5 ns=40 'FULL sinc=1 ival=99999
list a.dat size=(1,1,5,20) 'NOUSRTIM

!Test REAL*4 format
gen a.dat nl=5 ns=40 'REAL4 sinc=100 linc=100 ival=99999
list a.dat size=(1,1,5,20) 'REAL4 'NOUSRTIM

!Test REAL*8 format
gen a.dat nl=5 ns=80 'REAL8 sinc=1 ival=1000
list a.dat size=(1,1,5,40) 'NOUSRTIM

!Test COMPLEX format
gen a.dat nl=8 ns=8 'REAL
cform a.dat b.dat oform=COMPLEX
list a.dat 'NOUSRTIM
list b.dat 'NOUSRTIM
list b.dat size=(2,2,7,7) 'NOUSRTIM

!Test format override capabilities
gen a.dat nl=5 ns=10 'HALF ival=16705
list a.dat 'NOUSRTIM
list a.dat 'BYTE ns=20 'NOUSRTIM
list a.dat 'HEX  ns=20 'NOUSRTIM
list a.dat 'HALF 'NOUSRTIM
list a.dat 'FULL 'NOUSRTIM

!Create a large image with three labels
gen a.dat ns=120 nl=120 ival=1
stretch a.dat b.dat linear=(0,255)
stretch b.dat a.dat linear=(0,255)

!List the labels
label-list a.dat 'NOUSRTIM

!Test LINC and SINC
list a.dat linc=8 sinc=2 'NOUSRTIM
list a.dat linc=8 sinc=3 'NOUSRTIM
list a.dat linc=8 sinc=4 'NOUSRTIM
list a.dat linc=8 sinc=5 'NOUSRTIM
list a.dat linc=8 sinc=6 'NOUSRTIM
list a.dat linc=8 sinc=8 'NOUSRTIM

!Test SIZE parameters and list by strips
list a.dat size=(1,1,20,15) 'NOUSRTIM
list a.dat size=(5,5,10,15) 'NOUSRTIM
list a.dat size=(11,11,20,90) 'NOUSRTIM

!This is a test for mixed formats
!***** source is BYTE
gen a.dat nl=22 ns=64 'BYTE
list a.dat 'NOUSRTIM
list a.dat 'HALF 'NOUSRTIM
list a.dat 'FULL 'NOUSRTIM

!***** source is HALF
gen a.dat nl=22 ns=32 'HALF
list a.dat 'NOUSRTIM
list a.dat 'FULL 'NOUSRTIM
list a.dat 'BYTE ns=64 'NOUSRTIM

!***** source is FULL
gen c.dat nl=22 ns=16 'FULL
list c.dat 'NOUSRTIM
list c.dat 'HALF  ns=32 'NOUSRTIM
list c.dat 'BYTE  ns=64 'NOUSRTIM

!***** test ZERO and DUMP
gen b.dat nl=2 ns=2 sinc=2
size b.dat a.dat zoom=30 'NOIN
list b.dat 'NOUSRTIM
list a.dat 'ZERO 'NOUSRTIM
list a.dat 'NOUSRTIM
list a.dat 'DUMP 'NOUSRTIM

!***** test input(L,S) --> output(L,S) algorithm bug
gen a.dat nl=3 ns=107
list a.dat ns=15 'NOUSRTIM
!  0 1 2 3 4 5 6 7 8  9  10 11 12 13 14
!  1 2 3 4 5 6 7 8 9  10 11 12 13 14 15
!  2 3 4 5 6 7 8 9 10 11 12 13 14 15 16

list a.dat ss=3 ns=1 'HALF 'NOUSRTIM
!  1284 = 5*256+4
!  1541 = 6*256+5
!  1798 = 7*256+6

list a.dat ss=3 ns=1 'FULL 'NOUSRTIM
!  185207048 = ((11*256+10)*256+ 9)*256+8
!  202050057 = ((12*256+11)*256+10)*256+9
!  218893066 = ((13*256+12)*256+11)*256+10

! Now test 3D files
gen a.dat nb=10 binc=100 linc=10 'HALF
list a.dat nb=2 'NOUSRTIM
list a.dat 'BIL sl=3 nl=2 'NOUSRTIM
list a.dat 'BIP sl=3 nl=2 sb=5 nb=3 'NOUSRTIM
gen a.dat nb=10 nl=5 binc=100 linc=10 'FULL 'BIL
list b.dat 'NOUSRTIM
list b.dat 'BSQ nb=2 ns=20 'HEX 'NOUSRTIM
list b.dat 'BIP nl=2 'DISPLAY 'NOUSRTIM
gen c.dat nb=10 nl=5 binc=100 linc=10 'REAL8 'BIP
list c.dat  ! should go in 2 strips 'NOUSRTIM
list c.dat 'BSQ nb=1 'NOUSRTIM
list c.dat 'BIL 'DUMP nl=2 'NOUSRTIM
gen a.dat nb=60 nl=2 ns=20 binc=100 linc=10 'HALF 'BIP
list a.dat 'NOEJECT 'NOUSRTIM
list a.dat 'NOEJECT 'DUMP 'BIL 'NOUSRTIM

! Test unlabeled files, the output should generate an ABEND
gen a.dat
label-remove a.dat b.dat
list b.dat 'NOUSRTIM

! Test unlabeled files with insize; this should NOT generate an ABEND
gen a.dat nl=100
label-remove a.dat b.dat
list b.dat insize=(50,10,2) 'NOUSRTIM
list b.dat insize=(10,10,10) sl=4 nl=5 ss=3 ns=3 sb=7 nb=2 'NOUSRTIM

!Testing REAL, DOUB and COMP real number formatting - see AR9635
!NOTE:  the output is easier to see on a terminal window with 132 columns

write "Testing BYTE - should be unchanged from unit test"
gen a.dat nl=5 ns=10 sinc=1
list a.dat size=(1,1,5,5) 'DUMP 'ZEROES 'NOUSRTIM
list a.dat size=(1,1,5,5) linc=2 sinc=2 space=2 'NOUSRTIM
list a.dat size=(1,1,5,5) 'DISPLAY 'NOUSRTIM

write "Testing HEX - should be unchanged from unit test"
!Test FORMAT=HEX
gen a.dat nl=5 ns=10 sinc=1 ival=65
list a.dat size=(1,1,5,5) 'HEX 'NOUSRTIM

write "Testing HALFWORD - should be unchanged from unit test"
!Test HALFWORD format
gen a.dat nl=5 ns=10 'HALF sinc=1 ival=2000
list a.dat size=(1,1,5,10) 'NOUSRTIM

write "Testing FULLWORD - should be unchanged from unit test"
!Test FULLWORD format
gen a.dat nl=5 ns=40 'FULL sinc=1 ival=99999
list a.dat size=(1,1,5,20) 'NOUSRTIM

write "Testing Single Precision real numbers using default precision"
!Test REAL*4 format
gen a.dat nl=5 ns=15 'REAL4 sinc=100 linc=100 ival=99999
list a.dat 'REAL4 'NOUSRTIM

write "Using different precision:"
list a.dat ndigits=2 'NOUSRTIM
list a.dat ndigits=3 'NOUSRTIM
list a.dat ndigits=6 'NOUSRTIM
list a.dat ndigits=7 'NOUSRTIM

write "Testing Double Precision real numbers using default precision"
!Test REAL*8 format
gen a.dat nl=5 ns=15 'REAL8 sinc=1 ival=1000
list a.dat 'NOUSRTIM

write "Using different precision:"
list a.dat ndigits=2 'NOUSRTIM
list a.dat ndigits=8 'NOUSRTIM
list a.dat ndigits=15 'NOUSRTIM
list a.dat ndigits=16 'NOUSRTIM

write "Testing Complex numbers using default precision"
!Test COMPLEX format
gen a.dat nl=8 ns=8 'REAL
cform a.dat b.dat oform=COMPLEX
list a.dat 'NOUSRTIM
list b.dat 'NOUSRTIM

write "Using different precision:"
list b.dat ndigits=2 'NOUSRTIM
list b.dat ndigits=3 'NOUSRTIM
list b.dat ndigits=6 'NOUSRTIM
list b.dat ndigits=7 'NOUSRTIM

ush rm *.dat

disable-log

end-proc
