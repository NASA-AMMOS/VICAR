C    02 MAY 1994 ...CRI... MSTP S/W CONVERSION (VICAR PORTING)
C   INSERT  -  SOURCE, HELP FILE AND PDF
C
C        'INSERT'   LINE INSERTION PROGRAM
C
      INCLUDE 'VICMAIN_FOR'
      SUBROUTINE MAIN44
      IMPLICIT INTEGER (A-Z)
      LOGICAL FILL,AVG,TRUNC,FIX,NOPRNT
      LOGICAL XVPTST
      INTEGER LINEAR(100),MAXCNT
      COMMON /C1/ FILL,AVG,TRUNC,FIX,NOPRNT,TNL,NL,NS,SL,SS,NPXL,NB,
     & NSI,IDN,WUNIT,RUNIT,LINEAR
      EXTERNAL WORK
      DATA MAXCNT /100/
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C        PARAMETERS
C     'LINE',I,J,K..   I,J,K ARE LINES TO BE INSERTED
C     'DN',N         INSERTED LINES TO HAVE DN OF N
C     'AVG'          INSERTED LINE TO BE AVG OF NEIGHBORS
C     'TRUNC'        OUTPUT TRUNCATED TO NL LINES
C     'NOFIX'       SUPPRESSES FIXING OF DROPPED LINES
C     'NOPRINT'     SUPPRESSES PRINTOUT
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C        DEFAULT PARAMETERS
      FILL= .FALSE.
      AVG= .TRUE.
      TRUNC= .FALSE.
      FIX= .TRUE.
      NOPRNT= .FALSE.
C
C----    GET PARAMETERS
C
      CALL IFMESSAGE ('INSERT version 02-MAY-94')
      CALL XVEACTION ('SA',' ')
      CALL XVPARM('LINE',LINEAR,NLINE,LINEDF,MAXCNT)
      IF (LINEDF.EQ.1) NLINE=0
      IF (LINEDF.EQ.1 .OR. NLINE.EQ.1)  GO TO 20
C  SORT LINES BY INCREASING LINE NUMBER:
      DO I = 1,NLINE-1
	DO J = I+1,NLINE
	  IF (LINEAR(I).EQ.LINEAR(J)) THEN
	    CALL XVMESSAGE('"LINE" MAY NOT CONTAIN REPEATED NUMBERS',' ')
	    CALL ABEND
	  ELSEIF (LINEAR(I).GT.LINEAR(J)) THEN
	    SAVE = LINEAR(I)
	    LINEAR(I) = LINEAR(J)
	    LINEAR(J) = SAVE
	  ENDIF
	ENDDO
      ENDDO
	  
20    AVG = .NOT.XVPTST('NOAVG')

      CALL XVPARM('DN',IDN,NDN,DNDF,100)
      IF (DNDF.EQ.0)  AVG = .FALSE.

      TRUNC = XVPTST('TRUNC')

      FIX = .NOT.XVPTST('NOFIX')

      NOPRNT= XVPTST('NOPRINT')

C----    OPEN DATA SETS
C
      CALL XVUNIT(RUNIT,'INP',1,STATUS,' ')
      CALL XVOPEN(RUNIT,STATUS,' ')
      CALL XVGET(RUNIT,STATUS,'PIX_SIZE',NPXL,'NS',NSI,' ')
      CALL XVSIZE(SL,SS,NL,NS,NLI,NSI)
      NB = NPXL*NS
      TNL= NL+NLINE
      IF (TRUNC)  TNL= NL

      CALL XVUNIT(WUNIT,'OUT',1,STATUS,' ')
      CALL XVOPEN(WUNIT,STATUS,'OP','WRITE','U_NL',TNL,'U_NS',NS,' ')
      IF (TNL.NE.NL) THEN
	CALL PRNT(4,1,TNL,'OUTPUT NL=.')
	CALL PRNT(4,1,NS,'OUTPUT NS=.')
      ENDIF

      CALL STACKA(4, WORK, 2, NB, NB)

      CALL XVCLOSE(RUNIT,STATUS,' ')
      CALL XVCLOSE(WUNIT,STATUS,' ')
      RETURN
      END

C*********************************************************

      SUBROUTINE WORK( BUF, L1, FILBUF, L2)
      IMPLICIT INTEGER*4 (A-Z)
      BYTE BUF(L1), FILBUF(L2)
      LOGICAL FILL,AVG,EOF,TRUNC,FIX,NOPRNT
      INTEGER LINEAR(100),TMP_BUF1(12),TMP_BUF2(12),IB,IA
      COMMON /C1/ FILL,AVG,TRUNC,FIX,NOPRNT,TNL,NL,NS,SL,SS,NPXL,NB,
     & NSI,IDN,WUNIT,RUNIT,LINEAR

      EOF = .FALSE.
C  LREAD IS THE NUMBER OF THE CURRENT INPUT LINE WRT SL
C  LWRIT IS THE NUMBER OF THE CORRESPONDING OUTPUT LINE
C  LCNT  IS THE NEXT NUMBER IN THE INSERTED LINE LIST
      LCNT= 1
      LREAD = 0
      LWRIT = 1

      IF (NPXL.EQ.1) THEN
        CALL XVTRANS_SET(TMP_BUF1,'BYTE','FULL',STAT)
	IF (STAT.NE.1) THEN
          CALL XVMESSAGE('BUFFER SETUP UNSUCCESSFUL',' ')
          CALL ABEND
        ENDIF
        CALL XVTRANS_SET(TMP_BUF2,'FULL','BYTE',STAT)
	IF (STAT.NE.1) THEN
          CALL XVMESSAGE('BUFFER SETUP UNSUCCESSFUL',' ')
          CALL ABEND
        ENDIF
      ELSE
        CALL XVTRANS_SET(TMP_BUF1,'HALF','FULL',STAT)
	IF (STAT.NE.1) THEN
          CALL XVMESSAGE('BUFFER SETUP UNSUCCESSFUL',' ')
          CALL ABEND
        ENDIF
        CALL XVTRANS_SET(TMP_BUF2,'FULL','HALF',STAT)
	IF (STAT.NE.1) THEN
          CALL XVMESSAGE('BUFFER SETUP UNSUCCESSFUL',' ')
          CALL ABEND
        ENDIF
      ENDIF

      IF (AVG)  GO TO 500
      DN = IDN
C  LOAD FILL BUFFER WITH SPECIFIED DN
        IF (NPXL.EQ.1) THEN
          CALL MVE(-5,NS,DN,FILBUF,0,1)
        ELSE
          CALL MVE(-6,NS,DN,FILBUF,0,1)
        ENDIF

C  MAIN LOOP:

500   IF (LREAD.LT.NL)  GO TO 510
      IF (LINEAR(LCNT).EQ.LWRIT)  GO TO 520
      RETURN
510   IF (LREAD.EQ.0 .AND. SL.NE.1) THEN
	CALL XVREAD(RUNIT,BUF,STATUS,'LINE',SL,'SAMP',SS,
     .	 'NSAMPS',NS,' ')
      ELSEIF (SS.NE.1 .OR. NSI.NE.NS) THEN
	CALL XVREAD(RUNIT,BUF,STATUS,'SAMP',SS,'NSAMPS',NS,' ')
      ELSE
	CALL XVREAD(RUNIT,BUF,STATUS,' ')
      ENDIF
      LREAD= LREAD+1
      IF (STATUS.EQ.-30) GO TO 650
      IF (STATUS.NE.1.AND. FIX)  GO TO 515
      IF (LINEAR(LCNT).NE.LWRIT)  GO TO 700
      GO TO 520

C  LINE TO BE INSERTED
515   LREAD = LREAD+1
520   LCNT = LCNT+1
      IF (.NOT.AVG)  GO TO 600
      IF (LWRIT.EQ.1)  CALL MVE(1,NB,BUF,FILBUF,1,1)
      JJ = 0
      DO 570 J=1,NS
        IF (NPXL.EQ.1) THEN
	  JJ = J
        ELSE
  	  JJ = J * 2 - 1
        ENDIF
        CALL XVTRANS(TMP_BUF1,BUF(JJ),IA,1)
        CALL XVTRANS(TMP_BUF1,FILBUF(JJ),IB,1)
	IB = 0.5*(IA+IB)+0.5
        CALL XVTRANS(TMP_BUF2,IB,FILBUF(JJ),1)
570   CONTINUE
600   IF (.NOT.NOPRNT) CALL PRNT(4,1,LWRIT,'LINE INSERTED.')
      CALL XVWRIT(WUNIT,FILBUF,STATUS,' ')
      LWRIT= LWRIT+1
      IF (LINEAR(LCNT).EQ.LWRIT)  GO TO 520
      IF (EOF) RETURN
      GO TO 700
C
C        FILL-IN BOTTOM OF PICTURE
650   EOF= .TRUE.
      IF (LINEAR(LCNT).NE.LWRIT)  GO TO 655
      CALL MVE(1,NB,FILBUF,BUF,1,1)
      GO TO 520
655   FILL= .TRUE.
      CALL MVE(1,NB,FILBUF,BUF,1,1)
675   IF (LWRIT.GT.TNL)  RETURN
      IF (.NOT.NOPRNT) CALL PRNT(4,1,LWRIT,'LINE INSERTED.')

C---- WRITE THE LINE

700   CONTINUE
      CALL XVWRIT(WUNIT,BUF,STATUS,' ')
      LWRIT = LWRIT+1
      IF (FILL)  GO TO 675
      IF (AVG)  CALL MVE(1,NB,BUF,FILBUF,1,1)
      GO TO 500

      END
