:
WILDCARDED_NAME=$1
TEMP_FILE_NAME=$2
MAX_FILE_NAMES_TO_FIND=$3
SEARCH_DIR=$4
#echo "1= "$1"  2= " $2"  3 = " $3" 4 = "$4"  0= " $0 "  arg" $# 

#check number of parameters input - UNIX file name expansion adds parameters
if [ $# != 4 ]
  then echo "Usage: parameters must be inp='xxx' localvar=yyy [name_lim=n] [directory='dd']" 1>&2
  exit 0
fi

#get this user
pwd > pwdf

#use "find" to search the specified directories and all subordinates for
#the wildcarded name and put those found in a temp file

find $SEARCH_DIR -name "$WILDCARDED_NAME" -type f -print > tmpfile.nawk

gawk ' BEGIN { own = "./" ; parent = "../" ;
       #print "own= "own "  parent= "parent;
       COUNT_OF_FILES = ARGV[2] ;
       if ( COUNT_OF_FILES == "" ) COUNT_OF_FILES = 512 ;
       getline pwdx < "pwdf" ; pwdx = pwdx "/" ; ARGV[2] = "" ; 
       numc = split (pwdx, pwd_array, "/");
       for (i = 2; i < numc - 1; i++) { 
         pwd_parent = pwd_parent pwd_array[i] "/" ;
       # print pwd_parent;
       }
       pwd_parent = "/" pwd_parent ;
       #print "pwdx= "pwdx  "  [2]=  "pwd_array[2] " count el= "numc ;
       }
       {
         if (index ($0,own) == 1)
            sub (own, pwdx) 
         else
            if (index ($0,parent) == 1)
                sub (parent, pwd_parent);
         if (NR <= COUNT_OF_FILES ) 
            print $1
         else
            exit}
        ' tmpfile.nawk > $TEMP_FILE_NAME $MAX_FILE_NAMES_TO_FIND 
rm tmpfile.nawk
exit 0

