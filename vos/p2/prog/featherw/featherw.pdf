process help=*
!  FILE NAMES      
!
PARM INP     TYPE=STRING   COUNT=(2:400)
PARM OUT     TYPE=STRING   COUNT=1
PARM COLS    TYPE=INTEGER  COUNT=(5:7)   DEFAULT=(1,2,3,4,5,6,7)
!
PARM SIZE    TYPE=INTEGER  COUNT=4       DEFAULT=(1,1,0,0)
PARM SL      TYPE=INTEGER  COUNT=1       DEFAULT=1
PARM SS      TYPE=INTEGER  COUNT=1       DEFAULT=1
PARM NL      TYPE=INTEGER  COUNT=1       DEFAULT=0
PARM NS      TYPE=INTEGER  COUNT=1       DEFAULT=0
!
PARM ADJUST   TYPE=KEYWORD  COUNT=1   DEFAULT=NOADJ +
      VALID=(NOADJ,FACTOR,ADD,ADDZMASK)
PARM DFEATHER TYPE=INTEGER  COUNT=1   DEFAULT=10     VALID=(2:50000)
PARM MOOREFAC TYPE=INTEGER  COUNT=1   DEFAULT=5      VALID=(1:199)
PARM MOOREMAX TYPE=KEYWORD  COUNT=(0:1)   DEFAULT=--     VALID=MOOREMAX
PARM MOOREPOW TYPE=REAL     COUNT=1   DEFAULT=1.0    VALID=(1.0:8.0)
PARM CLOUDOUT TYPE=INTEGER  COUNT=1   DEFAULT=0      VALID=(0:10000)
!
PARM RAMP     TYPE=KEYWORD  COUNT=1   DEFAULT=RAMP +
      VALID=(NORAMP,RAMP,READRAMP)
PARM RDKTHR   TYPE=INTEGER  COUNT=1   DEFAULT=10    VALID=(-32768:32767)
PARM RDIFFTHR TYPE=INTEGER  COUNT=1   DEFAULT=35    VALID=(1:32767)
PARM RMOORE   TYPE=INTEGER  COUNT=1   DEFAULT=5     VALID=(1:10000)
PARM GOREFAC  TYPE=REAL     COUNT=1   DEFAULT=0.6   VALID=(0.0:1.0)
PARM RCOLS    TYPE=INTEGER  COUNT=10  DEFAULT=(8,9,10,11,12,13,14,15,16,17)
PARM MOORENBL TYPE=INTEGER  COUNT=1   DEFAULT=0     VALID=(0:10000)
PARM INTERIOR TYPE=KEYWORD  COUNT=(0:1) DEFAULT=--  VALID=INTERIOR
!
PARM THRESH  TYPE=INTEGER  COUNT=1       DEFAULT=1        VALID=(-32768:32767)
PARM PROGRESS TYPE=KEYWORD COUNT=(0:1)   DEFAULT=--       VALID=PROGRESS
PARM EDGE    TYPE=KEYWORD  COUNT=(0:1)   DEFAULT=--       VALID=EDGE
PARM NTHRESH TYPE=INTEGER  COUNT=1       DEFAULT=0
PARM LTHRESH TYPE=INTEGER  COUNT=1       DEFAULT=0
PARM RTHRESH TYPE=INTEGER  COUNT=1       DEFAULT=0
PARM NSEQ    TYPE=INTEGER  COUNT=1       DEFAULT=8        VALID=(1:32767)
PARM NIBBLE  TYPE=INTEGER  COUNT=1       DEFAULT=4        VALID=(0:32767)
PARM LNIBBLE TYPE=INTEGER  COUNT=1       DEFAULT=0        VALID=(0:32767)
PARM RNIBBLE TYPE=INTEGER  COUNT=1       DEFAULT=0        VALID=(0:32767)
PARM NINCR   TYPE=INTEGER  COUNT=1       DEFAULT=1        VALID=(1:32767)
!
PARM GEOTIFF TYPE=KEYWORD COUNT=(0:1)   DEFAULT=--    VALID=GEOTIFF
PARM TOLER   TYPE=REAL    COUNT=1   DEFAULT=0.0000001 VALID=(0.0:1.0)
PARM IGNCASE TYPE=KEYWORD  COUNT=(0:1)   DEFAULT=--     VALID=IGNCASE
END-PROC
.TITLE
FEATHERW - Program for mosaicking images with Moore distance feathering, ramp version
.HELP
 PURPOSE:
Program FEATHERW takes input images and mosaics them to form an output image
with a gradual feathering in all directions of all image overlaps.
FEATHERW performs mosaicking by reading all of the input image files and 
combining them to form an output image according to the parameters for
edging, and an IBIS file for image placement.  In a typical application, the
output image is a composite picture made from two or more input images each
of which contains a portion of the overall picture.  There are special 
features for cloud (or glint) removal, for brightness correction, for
colossal mosaics via tiling, and for analyst error checking.

A special feature of this program is that tiepoints between frames that are
declared to be neighbors in the IBIS file are gathered.  The brightness difference
statistics are averaged and result in two additional corrections:

1.  The average difference (halved) to all neighbors is added to each frame as
    a constant.  The constant is reported in a column of the IBIS file.

2.  The remaining differences (halved) to each declared neighbor is added to
    each frame as an angled ramp or half-plane.  The half plane is "hinged",
    has a zero value, down or across the middle of the image.  At the edge
    of the image, it has a ramp height that is reported in the IBIS file.
    
The four ramps are merged in each quadrant of the image by an approximation to
angular interpolation.  For example, the 45 degree diagonal to the upper left
corner of the image would get half of its value from the left=facing ramp and
half from the top-facing ramp.  The approximation is to use

         y/(x+y) to approximate atan(y/x)/90
 and        
         x/(x+y) to approximate (90-atan(y/x))/90

for example, on the diagonal, x=y and all four formulas give .5

The constant and ramp corrections are applied after the ADJUST keyword corrections,
since it is best to apply them as a residual operation.  The feathering and
cloud removal are applied after the constant and ramp corrections.
.PAGE
 EXECUTION:
 
Note that the image files are first in the parameter sequence, and the last
input is an IBIS file.  The IBIS file contains master mosaicking information
on all of the images used in the INP parameter (at the least) and is
recommended to contain information on all images in the application, even if
this numbers in the tens of thousands.  The program limits at present (9/99)
has a limit of 400 inputs, and it opens and closes them as a narrow mosaicking
band passes from top to bottom of the output.  The number of files open over
the band cannot exceed the VICAR limit for number of files open at once.
The IBIS file contains the following information in columns that can be
parameter specified or defaulted.  The default column numbers are given here:

1.  The name of the image file in any order, with or without pathname.
    Only the part of the pathname/filename after the last \ or / is read
    for checking
2.  The offset SL of the image input (see GeoTIFF options below)
3.  The offset SS of the image input (see GeoTIFF options below)
4.  The NL of the image input (cannot be less as in FASTMOS) (see GeoTIFF options below)
5.  The NS of the image input (cannot be less as in FASTMOS) (see GeoTIFF options below)
6.  Input factor for brightness equalization formulas (only one as of 9/99)
7.  Reserved for more complex brightness equalization formulas

GeoTIFF Options:  If the images all have GeoTIFF labels and the 'GEOTIFF
keyword is given, then there are two possibilities:

The first is: if columns 2-5 contain non-zero values (only column 4 is
checked for 0), then the values are compared with values calculated from
the GeoTIFF labels or the nl,ns from the VICAR label.  Since the values
might calculate with a slight inaccuracy, the TOLER parameter is provided
with a default value of 1.e-7.  If a calculated offset exceeds the TOLER
parameter, this indicates that the files have an inaccurate mapping for
the purposes of mosaicking and do not have an integral offset.  All mappings
are checked for consistency (map projection type, zones, meridians,
etc.).

The second is: if columns 2-5 contain zero values (only column 4 is
checked for 0), then the values are calculated from the GeoTIFF labels
or the nl,ns from the VICAR label.  The only check is that the offsets
are integral values (within the parameter TOLER) and that the mappings
are consistent.  In particular, coverage checking is lost -- if an
image is listed in the IBIS file and touches the output quadrangle and
is not in the call to FEATHERW, then the error will not be caught.

When in the GeoTIFF case, a GeoTIFF label is calculated and written
for the output mosaicked image.

The IBIS file is used for two reasons.  First, the input of offsets is 
simplified.  Second, coverage can be checked.  The program will abort with
an error message if a mosaic is performed and an input file cannot be found
in the IBIS file.  The program will also abort with an error message if a
mosaic is performed and an file in the IBIS file touches the output area
and is not included in the INP parameter (this is why NL,NS is in the IBIS
file).  If a file is opened and its (NL,NS) does not agree with the IBIS
file, the program aborts.  In all of these cases, the file is named.

The size of the output image is determined by the number of lines and number 
of samples in the SIZE field if the SIZE field is entered by the user.  If the
SIZE field is not entered, the output file is the same size as the first image
file (see note above, this is the second input). The input images are not
required all to have the same size.  The data type of the input images may
either be byte or halfword data, but all of the input images must have the
same data type.  The data type is obtained from the VICAR label of the first 
input image.

For mosaicking, the program needs to know the locations in the output image 
of each of the input images.  This is done by giving the location in
the output image of each input image.  The locations are given in terms
of line number and pixel number within a line.  This is no longer given
by parameters, but must be placed in the columns of an IBIS file as discussed
above.  The offset value must be in the IBIS file unless GeoTIFF labels are
used.  An offset of (1,1) means that the upper left pixel of the offset image
would line up with the upper left pixel of the output image (assuming that
it also had a (sl,s) of (1,1) (the normal case).

An input image is not required to lie entirely within the boundaries of the
output image.  If the upper left hand corner of an input image is not within 
the boundaries of the output image, the location of the input image is given
by extending the numbering of lines and pixels beyond the boundaries of the
output image.  Thus negative numbers or zero would be used for the locations
of input images beginning to the left or above the boundaries of the output
image.  Input images are allowed to overlap, in fact, that is the motivation
for this program.

FEATHERW only has a default mode of overlap, namely, averaging.  The value at
a pixel will generally be the average of all values above the THRESH value
from images that cover the pixel.  But the averaging is modified by feathering
the edges of data as follows.  For each input, a MOORE DISTANCE ALGORITHM is
applied to data inside of the image so that the image is mirrored by a edge
distance image that gives distance from the edge of data above the THRESH 
value or the absolute edge of the input image (if the data goes fully to the
edge of the input image).  The MOORE DISTANCE ALGORITHM has to be applied
outside of the mosaic output image area, because an image edge some distance
from the mosaic output image area can contribute to a MOORE DISTANCE NUMBER
inside of the mosaic output image area.

for example, the image data

 16  16  16  16  16  16  16 
 16  16  16  16  16  16  16
 16  16  16  16  16  16  16
 16  16  16  16  16  16  16 
 16  16   0   0   0  16  16  
 
has the MOORE DISTANCE NUMBERS

 01  01  01  01  01  01  01 
 01  02  02  02  02  02  01
 01  02  02  02  02  02  01
 01  02  01  01  01  02  01 
 01  01   0   0   0  01  01  

The inputs are then weighted by the MOORE DISTANCE NUMBERS

   output = sum((Ith input pixel value)*(Ith MOORE DISTANCE NUMBER))
                  divided by sum(Ith MOORE DISTANCE NUMBER)
                  
The user inputs a parameter DFEATHER to set the distance that the MOORE
DISTANCE ALGORITHM will work.  Then all remaining inside numbers are set
to that value as a maximum.  If MOOREFAC is greater than one, the
value used is DFEATHER/MOOREFAC in tiles of size MOOREFAC x MOOREFAC, 
and also the DFEATHER will be adjusted slightly to a multiple of
MOOREFAC because of the tiling.  The net effect of MOOREFAC>1 is to
still feather to depth DFEATHER, but in coarser steps.

Increasing DFEATHER has two consequences.  First, the program will run
more slowly, probably sublinear to the size of this parameter.  Second,
the program will consume more memory space.  The virtual memory space in
bytes needed for image buffers and MOORE DISTANCE buffers is:

  6 x (max number of inputs open) x (max input NS) x DFEATHER / MOOREFAC**2

FEATHERV has two parameters to adjust the mathematics of the feathering
calculation.  MOOREMAX and MOOREPOW.  The choice here is affected by the
quality of image geometric registration.  If the images are not in perfect
registration, consider using MOOREMAX.  If MOOREMAX causes an undesirable
brightness edge, consider using MOOREPOW with a high number, lowering it
until the brightness edge disappears.
 
FEATHERW is written entirely in the C programming language and uses dynamic
memory allocation to avoid imposing any restrictions on the size of the
images. 

FEATHERW HAS BOTH THE OLD TYPES OF NIBBLING (SEE NEXT PARAGRAPH) AND
A NEW EDGING CAPABILITY BASED ON THE MOORE ALGORITHM.  The new edging
nibbles in a perpendicular direction to the edge of data in all
directions (the old nibble worked from the righ or left only).  Use 
the parameter MOORENBL to invoke this.  The default of 0 is no nibble,
a value of n nibbles all values where the MOORE distance from the edge
is n, etc.  To give a smooth transition, instead of starting at n+1,
the whole MOORE distance input is reduced by n so the MOORE distance
that is used in feathering still starts at 1.  Keep in mind that
MOOREFAC=3 means that a MOORENBL=1 will nibble 3 pixels from all
edges.

FEATHERW has an option for edging the input images prior to applying the
mosaicking mode.  Edging effectively removes the 'edges' of the input images
so that pixels in the 'edges' are not considered to be contained in their
images as far as the mosaicking process is concerned.  Several parameters
determine the precise effect of edging in any situation, but basically if
edging is selected, then each line of each input image is edged first on the
left and then on the right.  Edging means scanning through a line from one
end or another to the point at which the data numbers are greater than or
equal to a threshold value and then removing the pixels from the end of
the line up to a certain number of pixels beyond the point.  This is 
referred to as finding the edge of the scene data and nibbling-in a 
certain number of pixels beyond the edge.  Because of the line by 
line processing performed by the program, edging is only available
in the horizontal direction.  (Edging the top and bottom of images would
normally require an intermediate data set.)  Edging is typically used
to remove distortion around the edges of pictures that was caused by
interpolation, filtering, or other things.  NOTE THAT EDGING IS INCREASED
BY USE OF MOOREFAC.  A NIBBLE OF TWO AND A MOOREFAC OF THREE WILL RESULT
IN SIX PIXELS BEING REMOVED.

FEATHERW has a parameter named ADJUST that can take a column(s) in the
IBIS file as an adjustment to brightness on a per image basis.  See the
parameter description for more details.

RAMP CALCULATIONS

A special feature of this program is that tiepoints between frames that are
declared to be neighbors in the IBIS file are gathered.  The brightness difference
statistics are averaged and result in two additional corrections:

1.  The average difference (halved) to all neighbors is added to each frame as
    a constant.  The constant is reported in a column of the IBIS file.

2.  The remaining differences (halved) to each declared neighbor is added to
    each frame as an angled ramp or half-plane.  The half plane is "hinged",
    has a zero value, down or across the middle of the image.  At the edge
    of the image, it has a ramp height that is reported in the IBIS file.
    
The four ramps are merged in each quadrant of the image by an approximation to
angular interpolation.  For example, the 45 degree diagonal to the upper left
corner of the image would get half of its value from the left=facing ramp and
half from the top-facing ramp.  The approximation is to use

         y/(x+y) to approximate atan(y/x)/90
 and        
         x/(x+y) to approximate (90-atan(y/x))/90

for example, on the diagonal, x=y and all four formulas give .5

The constant and ramp corrections are applied after the ADJUST keyword corrections,
since it is best to apply them as a residual operation.  The feathering and
cloud removal are applied after the constant and ramp corrections.


The output image has the same data format  (byte or halfword) as the input 
images.  
.PAGE
TAE COMMAND LINE FORMAT
      The following command line formats show the major allowable forms:
      feather INP=(a...,ibis) OUT=b SIZE=(sl,ss,nl,ns) optional parameters
      feather INP=(a...,ibis) OUT=b  SL=sl SS=ss NL=nl NS=ns optional parameters
      feather (a...,ibis) b (sl,ss,nl,ns) optional parameters
      feather (a...,ibis) b optional parameters

      Here '(a...,ibis)' represents a list of one to 399 input image file
      names followed by an ibis file, and 'b' represents the output image file
      name.
The GeoTIFF options are:
      The following command line formats show the major allowable forms:
      feather INP=(a...,ibis,gtref) OUT=b SIZE=(sl,ss,nl,ns) optional parameters
      feather INP=(a...,ibis,gtref) OUT=b  SL=sl SS=ss NL=nl NS=ns optional parameters
      feather (a...,ibis,gtref) b (sl,ss,nl,ns) optional parameters
      feather (a...,ibis,gtref) b optional parameters

      Here '(a...,ibis,gtref)' represents a list of one to 398 input image file
      names followed by an ibis file, and then by a GeoTIFF reference image
      that defines the overall pixel space, and 'b' represents the output image file
      name.
.PAGE
EXAMPLES

See examples under program FASTMOS to learn more about the mosaicking process.
The major difference to note here is that SL,SS can be given for the mosaic
image space.
.PAGE
RESTRICTIONS
1. The input and output images must be byte or halfword data.
2. Plan carefully using the virtual memory limit formula

  6 x (max number of inputs open) x (max input NS) x DFEATHER / MOOREFAC**2

 OPERATION:

FEATHERW performs mosaicking on a line by line basis.  The offsetting of
input images is done at READ time.  However, the program has to read ahead
of the output line by distance DFEATHER to run the MOORE DISTANCE ALGORITHM.
This readahead buffer is called the "footprint" of the input.  The footprint
has to go above, to the right, to the left, and below the image output area
to get the MOORE DISTANCE NUMBERS.  Because the footprint buffers are large,
a rolling index scheme is used on them and on the MOORE DISTANCE BUFFERS.

Data in halfword format may include negative data numbers.  Negative data
numbers that do not meet the threshold criteria are ignored.
.PAGE

 TIMING: 

Will get back with this when some big cases are run.  Expect 3x slower
than FASTMOS.  Expect good behavior in the virtual memory (not a lot of
swapping).  

 ORIGINAL PROGRAMMER:    A. Zobrist          27 Oct 1999
 COGNIZANT PROGRAMMER:   Barbara McGuffie    27 Oct 1999
 
 REVISION HISTORY
  99-10-27    AZ   Initial version, named feather
  99-11-05    AZ   two pass version, named feather2
  99-11-18    AZ   ramps added to feather2
  99-11-18    AZ   halfword MOORE algorithm, named featherh
  99-11-28    AZ   all options rolled into featherh
  99-11-30    AZ   reduced resolution MOORE algorithm, named featherw
  00-04-16    AZ   GeoTIFF label use
  04-02-04    AZ   igncase added
Fri Jan 11 2008 wlb switched to USES_ANSI_C AND LIB_CARTO; misc cleanup  
  2022-08-10 B. Crocco afids to opensource (untested)
  
.LEVEL1
.VARIABLE INP
Input image file names
followed by the controlling
IBIS file, and an optional
GeoTIFF reference image
.VARIABLE OUT
Output image file name
.VARIABLE COLS
Columns of the IBIS file that
contain the mosaic information
.VARIABLE SIZE
Standard Vicar size field:
  (SL,SS,NL,NS)
You can enter SL,SS,NL,
and NS together as SIZE, OR
enter the SL,SS,NL, and NS
parameters separately.
.VARIABLE SL
Starting line number
(can window the output)
.VARIABLE SS
Starting sample number
(can window the output)
.VARIABLE NL
Number of lines output
.VARIABLE NS
Number of samples output
.VARIABLE THRESH
Threshold used for mosaicking.
.VARIABLE PROGRESS
Enter for progress reporting.
.VARIABLE EDGE
Enter for edging.
.VARIABLE NTHRESH
Threshold for edging on both
left and right.
.VARIABLE LTHRESH
Threshold for edging on left.
.VARIABLE RTHRESH
Threshold for edging on right.
.VARIABLE NSEQ
Number of sequential pixels
which must satisfying edging 
threshold criteria at edge of
scene data.
.VARIABLE NIBBLE
Number of pixels to remove
beyond edge of scene data for
edging on both left and right.
.VARIABLE LNIBBLE
Number of pixels to remove
beyond edge of scene data for
edging on left.
.VARIABLE RNIBBLE
Number of pixels to remove
beyond edge of scene data for
edging on right.
.VARIABLE NINCR
If NINCR=n, then scanning for
edge of scene data will check
every nth pixel.
.VARIABLE ADJUST
Set this to use IBIS columns
as a brightness adjustment
.VARIABLE DFEATHER
Feather width in pixels (div 2)
.VARIABLE MOOREFAC
Factor to reduce resolution of
MOORE algorithm, must be odd
.VARIABLE MOOREMAX
If selected, does not blend the
images, but takes 100% of image
with largest Moore number.
.VARIABLE MOOREPOW
Alternative to linear interp;
larger than 1.0 concentrates 
the feathering near the 50/50
Moore split
.VARIABLE CLOUDOUT
Brightness difference to
identify clouds or glint
for erasure
.VARIABLE RAMP
'RAMP - apply ramping procedure
'NORAMP - don't apply ramping
'READRAMP - apply previous ramp
      values from file
.VARIABLE RDKTHR
Discard tiepoints with either
image raw value below this
.VARIABLE RDIFFTHR
Discard tiepoints with diff
in adjusted values above this
.VARIABLE RMOORE
Moore distance to use for
gathering tiepoints
.VARIABLE GOREFAC
Means of adjusting ramp for
gores
.VARIABLE RCOLS
The IBIS columns to input 
neighbors for ramping and
to output the ramp parameters
.VARIABLE MOORENBL
Nibble using MOORE distance
up to this value
.VARIABLE INTERIOR
Allow interior values below
thresh to propagate feathering
.VARIABLE GEOTIFF
Use GeoTIFF labels from all
image inputs, including a
master reference as last input
.VARIABLE TOLER
Amount that GeoTIFF calculated
offsets can vary from integral
values
.VARIABLE IGNCASE
If selected, the character case
of the landsat files vs the
filenames in the ibis file is
ignored
.LEVEL2
.VARIABLE INP
The last required file is an IBIS file giving information on the input
files.  The columns of the file are usually:

1.  The name of the image file in any order, with or without pathname.
    Only the part of the pathname/filename after the last \ or / is read
    for checking
2.  The offset SL of the image input
3.  The offset SS of the image input
4.  The NL of the image input (must be exact, cannot be less as in FASTMOS)
5.  The NS of the image input (must be exact, cannot be less as in FASTMOS)
6.  Input factor for brightness equalization formulas (only one as of 9/99)
7.  Reserved for more complex brightness equalization formulas

the numbering of the columns can be changed by the parameter COLS.  See
parameter ADJUST for an explanation of column six.

The program limits at present (9/99):
1. 400 inputs
2. The number allowed by the system for simultaneous open (somewhere 
   between 67 and 100 according to one expert).
   The files are opened and closed as a narrow mosaicking band passes
   from top to bottom of the output.  The width of this band is DFEATHER.
   The number of files open over the band cannot exceed the VICAR
   or system limit for number of files open at once.  It is possible that
   a UNIX system call can enlarge this.

The optional GeoTIFF reference image, which is placed after the IBIS file,
is used in the following way:
1.  Its pixel referencing is a master for the mosaic.
2.  All other images will have offsets relative to the master.
3.  The SIZE or SL,SS,NL,NS parameters will be relative to the master.
4.  The offsets can be placed in the IBIS file, in which case they are
    checked against the GeoTIFF mappings.
5.  The offsets can be zero'd in the IBIS file, in which case they are
    calculated from the GeoTIFF mappings.  NL,NS columns must be zero'd
    for this to occur and they are also calculated.
6.  For this case, the 'GEOTIFF keyword must be given and all input images
    are required to have GeoTIFF labels.
.VARIABLE OUT
A major difference with program FASTMOS is that (SL,SS) can be used to 
window down into the mosaic.  See HELP level 2 under SL.
.VARIABLE COLS
The last file is an IBIS file giving information on the input files.  The
columns of the file are usually:

1.  The name of the image file in any order, with or without pathname.
    Only the part of the pathname/filename after the last \ or / is read
    for checking
2.  The offset SL of the image input
3.  The offset SS of the image input
4.  The NL of the image input (must be exact, cannot be less as in FASTMOS)
5.  The NS of the image input (must be exact, cannot be less as in FASTMOS)
6.  Input factor for brightness equalization formulas (only one as of 9/99)
7.  Reserved for more complex brightness equalization formulas

By using this parameter, the columns can be renumbered as the user desires.
.VARIABLE SIZE
If the SIZE field is not entered, the output image has the same size as the
first input image.  If the SIZE field is entered, the number of lines and
number of samples refer to the size of the output image.
.VARIABLE SL
The default is 1.  Setting it larger moves the "window" of the mosaic upwards
in line number and is the same as lowering all of the individual input SL's
by an equivalent amount.  This means that the mosaic can conveniently be done
in sections by setting (SL,SS,NL,NS) in a checkerboard fashion and then by
butting together the checkerboard pieces with the VICAR programs APPEND and
MSS.
.VARIABLE SS
The default is 1.  Setting it larger moves the "window" of the mosaic upwards
in sample number and is the same as lowering all of the individual input SS's
by an equivalent amount.  This means that the mosaic can conveniently be done
in sections by setting (SL,SS,NL,NS) in a checkerboard fashion and then by
butting together the checkerboard pieces with the VICAR programs APPEND and
MSS.
.VARIABLE MMODE
The mosaicking mode specifies how the output data number values are determined 
from the input data numbers.   The following rules apply for each of the 
modes.  If none of the input images have a data number value for a 
given pixel that is greater than or equal to the THRESH value, the 
output data number is the data number from the first input image if 
the pixel is contained in the first input image, and the output 
data number is L0 if the pixel is not contained in the first input image, where
L0 is 0 if THRESH is greater than 0, L0 is 0 if THRESH=0 and the data format 
is byte, and L0 is equal to THRESH-1 otherwise.  If
exactly one of the input images has a data number value for a given pixel that
is greater than or equal to the THRESH value, the output data number is the
data number from the one input image.  If more than one of the input images
have a data number value for a given pixel that is greater than or equal to the
THRESH value, the output data number is determined by the mosaicking mode. 

There are currently five modes to choose from.  They are listed by name below.
For each mode a description is given of how the output data number is 
determined when there is more than one input image having a data number value 
that is greater than or equal to the THRESH value for a given pixel.  The
default mode is OVERLAY.

OVERLAY  - The input images are checked against the THRESH value in the order
           in which they are entered by the user.  The first data number value
           found which meets the threshold criteria is used for the output
           image.  This means that the order in which the input files are 
           entered gives a priority to the data in the files.

AVERAGE  - The average of the values meeting the threshold criteria is used.
           The average is found by integer division with no rounding.

MOD      - When there are two values meeting the threshold criteria, the 
           average of the values is used.  When there are more than two 
           values meeting the threshold criteria, the value closest to the
           average is used.  This mode may be particularly useful when
           combining many images with high bit-error rates.

MAX      - The maximum of the values meeting the threshold criteria is used.

MIN      - The minimum of the values meeting the threshold criteria is used.
.VARIABLE THRESH
Only values greater than or equal to the THRESH threshold parameter are used
by the mosaicking mode in determining the data numbers for the output image.
The THRESH value is usually greater than 0 for mosaicking.  THRESH can be
set to 0 for cases such as averaging images.  The default value is 1.
(See Example 5 in the main help for details about the case of THRESH=0
for byte data.  Users may need to convert images to halfword to use THRESH=0
for mosaicking.  Other VICAR programs, such as INSECT may be an alternative.)

For halfword images for which negative DNs are considered valid, a negative
THRESH value may be used.  In this case, 0 is an inappropriate value for
representing the absence of image data.  When THRESH is less than 0, FEATHERW
uses an output DN of THRESH-1 to represent the absence of image data.
(If THRESH = -32768, -32768 is used to represent the absence of image data.)
This value is used as an output DN where the output pixel does not lie in one
of the input images.  (See the MMODE parameter.)
.VARIABLE PROGRESS
If the PROGRESS parameter is specified, FEATHERW prints a comment every 500th
line.  The default is to not print the progress.
.VARIABLE EDGE
If the EDGE parameter is specified, all input images are edged prior to
applying the mosaicking mode. No edging is the default.  'EDGE M U S T
be specified to invoke the edging algorithm.

ALSO NOTE THAT EDGING IS INCREASED BY THE USE OF MOOREFAC.  A NIBBLE OF
TWO AND A MOOREFAC OF THREE WILL RESULT IN SIX PIXELS BEING REMOVED.

If edging is selected, then each line of each input image is edged first on the
left and then on the right.  Edging means scanning through a line from one
end or another to the point at which the data numbers are greater than or
equal to a threshold value and then removing the pixels from the end of
the line up to a certain number of pixels beyond the point.  This is 
referred to as finding the edge of the scene data and nibbling in a 
certain number of pixels beyond the edge.  Because of the line by 
line processing performed by the program, edging is only available
in the horizontal direction.  (Edging the top and bottom of images would
normally require an intermediate data set.)  Edging is typically used
to remove distortion around the edges of pictures that was caused by
interpolation, filtering, or other things.

Several parameters are used to control the way that edging is done.  The 
parameters NTHRESH, LTHRESH, RTHRESH, NSEQ, and NINCR determine the location
of the edge of the scene data for lines of the input images.  The parameters
NIBBLE, LNIBBLE, and RNIBBLE determine how many pixels beyond the edge of 
the scene data are removed.

The edge of the scene data for a line is determined as follows.  The program
scans through the pixels of a line comparing the data numbers against the
edging threshold.  (Separate edging thresholds can be specified for scanning
from the left and scanning from the right using the LTHRESH and RTHRESH
parameters.  The NTHRESH parameter can be used to specify the same threshold
for scanning from the left and scanning from the right.)  The scanning begins
at one end of the line, and it checks successive pixels unless the NINCR
parameter is entered.  If NINCR is entered, the scanning checks only every
NINCRth pixel.  The program scans until it finds a group of NSEQ consecutive
(in terms of NINCR) pixels all of which have a data number greater than or
equal to the edging threshold.  The edge of the scene data is defined as the
first pixel (according to the direction of the scan) of that group.

The nibbling number is the number of pixels, starting with the edge of the
scene data, which are to be removed along with any pixels from the end of
the line to the edge of the scene data.  (If the nibbling number is zero, 
then just the pixels from the end of the line to the edge of the scene data
are removed.)  Separate nibbling numbers can be specified for scanning from 
the left and scanning from the right using the LNIBBLE and RNIBBLE parameters.
The NIBBLE parameter can be used to specify the same nibbling number for 
scanning from the left and scanning from the right.  

If no edge of the scene data is found when scanning, the entire line is 
removed.
.VARIABLE NTHRESH
The default for NTHRESH is THRESH.  (See also under EDGE.)
.VARIABLE LTHRESH
The default for LTHRESH is NTHRESH.  (See also under EDGE.)
.VARIABLE RTHRESH
The default for RTHRESH is NTHRESH.  (See also under EDGE.)
.VARIABLE NSEQ
The default for NSEQ is 8.  (See also under EDGE.)
.VARIABLE NIBBLE
The default for NIBBLE is 4.  (See also under EDGE.)

ALSO NOTE THAT EDGING IS INCREASED BY THE USE OF MOOREFAC.  A NIBBLE OF
TWO AND A MOOREFAC OF THREE WILL RESULT IN SIX PIXELS BEING REMOVED.
.VARIABLE LNIBBLE
The default for LNIBBLE is 4.  (See also under EDGE.)

ALSO NOTE THAT EDGING IS INCREASED BY THE USE OF MOOREFAC.  A NIBBLE OF
TWO AND A MOOREFAC OF THREE WILL RESULT IN SIX PIXELS BEING REMOVED.
.VARIABLE RNIBBLE
The default for RNIBBLE is 4.  (See also under EDGE.)

ALSO NOTE THAT EDGING IS INCREASED BY THE USE OF MOOREFAC.  A NIBBLE OF
TWO AND A MOOREFAC OF THREE WILL RESULT IN SIX PIXELS BEING REMOVED.
.VARIABLE NINCR
The default for NINCR is 1.  (See also under EDGE.)
.VARIABLE ADJUST
This keyword is defaulted to 'NOADJ which does no brightness adjustment.
Three kinds of adjustment can be performed using column 6 of the IBIS
file:

'FACTOR - All input images will be multiplied by the number in column 6
of the IBIS file as a brightness adjustment.  Note that there is a
mathematical risk of a one turing into a zero if the factor is less
than .5.  This would be significant if zero means "no data" for
mosaicking.

'ADD - All input images will be added to by the number in column 6
of the IBIS file as a brightness adjustment.

'ADDZMASK - All input images will be added to by the number in column 6
of the IBIS file as a brightness adjustment except that zeros/nonzeros
are preserved (pixels that were greater than 0 prior to the add are
compared to a minimum of 1, zeros remain at zero).  This is useful for
the case where zero means "no data" for mosaicking.

The adjustment is performed just prior to the output or the averaging for
output, so it does not affect the edging operations.  The cloud erasing
operation is done after this adjustment operation.
.VARIABLE DFEATHER
Width of feathering is the max distance of the MOORE DISTANCE ALGORITHM
measured in pixels.  The effective feathering will be twice this distance
because a large overlap will feather one image to its full MOORE DISTANCE
yielding a 50/50 averaging of the two images.  Then a reverse feather of 
the other image will take place.

A larger number will feather the inputs to a greater degree, but the program 
will use more time and memory.  Plan carefully using the virtual memory limit
formula

  6 x (max number of inputs open) x (max input NS) x DFEATHER / MOOREFAC**2

If MOOREFAC is greater than one, the value used is DFEATHER/MOOREFAC
in tiles of size MOOREFAC x MOOREFAC, and also the DFEATHER will be
adjusted slightly to a multiple of MOOREFAC because of the tiling.
The net effect of MOOREFAC>1 is to still feather to depth DFEATHER,
but in coarser steps.
.VARIABLE MOOREFAC
In the formula for storage:

  6 x (max number of inputs open) x (max input NS) x DFEATHER / MOOREFAC**2

DFEATHER increases storage linearly, and also increases compute time.  The
MOOREFAC reduces the resolution of the MOORE algorithm and decreases storage
quadratically, and also saves compute time.  Further, the ratio of
DFEATHER to MOOREFAC must be less than 65535.  

A good suggested value is a ratio of 50 to 100.  This will result in
100 to 200 steps of brightness in feathering from one image to the other.
If ramping is used, the need for feathering is reduced and a smaller
ratio can be used.

Keep in mind that increasing MOOREFAC does not decrease the feathering
distance in the images, it simply coarsens the number of steps in the
MOORE distance function.  The human eye probably cannot see more than
100 steps in the typical mosaicking situation.
.VARIABLE CLOUDOUT
If a pixel comes from multiple inputs and one of the inputs is brighter than
one of the others (which of the others is order dependent for three or more)
by this amount, then it is deleted from the averaging process.  This
correction is applied after the brightness adjustment (see keyword ADJUST).
.VARIABLE RAMP
'RAMP - apply ramping procedure;
   The first pass over the files calculates the ramp values to apply
   to each scene.  The second pass constructs ramps to smooth together
   the scenes.  The ramp values are written to the IBIS file.
'NORAMP - don't apply ramping
   A single pass smoothes together the scenes using the Moore distance
   interpolation only.  No ramp values are calculated. No ramp values
   are written to the IBIS file.
'READRAMP - apply previous ramp values from file
   This option requires an IBIS file with ramp values calculated from
   a previous run with the 'RAMP option.  The previous run can be on
   a reduced image... the ramp values are size-independent.  A single
   pass is performed like the second pass of the 'RAMP option, and
   no values are written to the IBIS file.
.VARIABLE RDKTHR
This is for throwing out unreliable water or shadow pixels in Landsat, or space,
shadow, etc. for planets.
.VARIABLE RDIFFTHR
This allows glimmer, seasonal variation, wetness, etc. to be discarded from
tiepoints.  It is applied after the adjust parameter correction.
.VARIABLE RMOORE
Tiepoints in overlap areas for an image are taken at a particular distance
inside of the neighbor image.  The Moore distance function is used to determine
when a pixel is that distance inside.  The unit of distance is the pixel.
By setting this parameter to 7 (for example) all pixels that are a distance
of 7 from the edge of non-0 data in the neighbor overlap will be used as tiepoints.

The tiepoints from different neighbor frames are kept separate in the tally,
so that brightness ramps can be constructed to each neighbor.  Neighbors are
specified in the IBIS file input (see parameter rcols).
.VARIABLE GOREFAC
The ramps are four half-images hinged horizontally and vertically in the middle 
of an image.  The difference with a neighbor (divided by 2) is the height of the 
ramp at the edge of the image.  But the data may actually start inside the
image with a zero gore of data at the edge.  This factor multiplies the height of
the half plane so that it applies better to the data.
.VARIABLE RCOLS
The ten columns in order are (using their default column numbers, which can be changed)

8.   An index of the images (any unique integer index will do)
9.   Right neighbor to ramp to, or 0 if no neighbor to the right (using the index
     of column 8)
10.  Bottom neighbor to ramp to, or 0 if no neighbor to the bottom (using the index
     of column 8)
11.  Left neighbor to ramp to, or 0 if no neighbor to the left (using the index
     of column 8)
12.  Top neighbor to ramp to, or 0 if no neighbor to the top (using the index
     of column 8)
13.  Constant calculated by the ramping procedure, add to this image
14.  Ramp constant calculated by the ramping procedure for right-facing ramp (a
     value of -999.0 means that there is no ramp in this direction##)
15.  Ramp constant calculated by the ramping procedure for bottom-facing ramp (a
     value of -999.0 means that there is no ramp in this direction##)
16.  Ramp constant calculated by the ramping procedure for left-facing ramp (a
     value of -999.0 means that there is no ramp in this direction##)
17.  Ramp constant calculated by the ramping procedure for top-facing ramp (a
     value of -999.0 means that there is no ramp in this direction##)

## A ramp of height zero is different than no ramp.  The ramp of height zero
would be interpolated with neighboring ramps, causing them to curve towards
zero.  No ramp (-999.0) would not be interpolated with neighboring ramps.
.VARIABLE GEOTIFF
GeoTIFF Options:  If the images all have GeoTIFF labels and the 'GEOTIFF
keyword is given, then there are two possibilities:

The first is: if columns 2-5 contain non-zero values (only column 4 is
checked for 0), then the values are compared with values calculated from
the GeoTIFF labels or the nl,ns from the VICAR label.  Since the values
might calculate with a slight inaccuracy, the TOLER parameter is provided
with a default value of 1.e-7.  If a calculated offset exceeds the TOLER
parameter, this indicates that the files have an inaccurate mapping for
the purposes of mosaicking and do not have an integral offset.  All mappings
are checked for consistency (map projection type, zones, meridians,
etc.).

The second is: if columns 2-5 contain zero values (only column 4 is
checked for 0), then the values are calculated from the GeoTIFF labels
or the nl,ns from the VICAR label.  The only check is that the offsets
are integral values (within the parameter TOLER) and that the mappings
are consistent.
.VARIABLE TOLER
The calculated value, if within TOLER of an integral value, will be converted 
to the integral value for purposes of mosaicking.
.VARIABLE MOORENBL
FEATHERW HAS BOTH THE OLD TYPES OF NIBBLING (SEE PARAM EDGE) AND
A NEW EDGING CAPABILITY BASED ON THE MOORE ALGORITHM.  The new edging
nibbles in a perpendicular direction to the edge of data in all
directions (the old nibble worked from the righ or left only).  Use 
the parameter MOORENBL to invoke this.  The default of 0 is no nibble,
a value of n nibbles all values where the MOORE distance from the edge
is n, etc.  To give a smooth transition, instead of starting at n+1,
the whole MOORE distance input is reduced by n so the MOORE distance
that is used in feathering still starts at 1.  Keep in mind that
MOOREFAC=3 means that a MOORENBL=1 will nibble 3 pixels from all
edges.
.VARIABLE INTERIOR
The default algorithm is set up to calculate distance from an outside
edge (typically the top, bottom, left, right) and feather these with
the neighbor edges.  By selecting the keyword 'INTERIOR, the Moore
distance will be calculated from any pixels less than thresh causing
feathering to take place at these interior points as well.  A possible
application of this is for feathering in a second image on top of 
an image that has had holes cut in it (say, cloud removal).
.VARIABLE MOOREMAX
This will help if the images do not register perfectly in the geometric (x,y)
sense.  A road that appears doubled in the overlap area will turn into a 
disjoint line.  The seam will be along the polyline where the Moore numbers
are at equality.  Do not use this parameter along with MOOREPOW.
FEATHERV has two parameters to adjust the mathematics of the feathering
calculation.  MOOREMAX and MOOREPOW.  The choice here is affected by the
quality of image geometric registration.  If the images are not in perfect
registration, consider using MOOREMAX.  If MOOREMAX causes an undesirable
brightness edge, consider using MOOREPOW with a high number, lowering it
until the brightness edge disappears.
.VARIABLE MOOREPOW
If set to a number greater thatn the default 1.0, the Moore distance values
will be taken to this power.  So the linear ratio of Moore numbers, say, 80
to 20 would be converted into 80**pow to 20**pow (or a pow
split

FEATHERV has two parameters to adjust the mathematics of the feathering
calculation.  MOOREMAX and MOOREPOW.  The choice here is affected by the
quality of image geometric registration.  If the images are not in perfect
registration, consider using MOOREMAX.  If MOOREMAX causes an undesirable
brightness edge, consider using MOOREPOW with a high number, lowering it
until the brightness edge disappears.
.END
