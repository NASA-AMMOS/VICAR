process help=*
PARM OUT TYPE=STRING COUNT=4
PARM PLANET     TYPE=(STRING,12) COUNT=1 +
 VALID=("phobos","deimos","gaspra") DEFAULT="phobos"
PARM PATH    TYPE=(STRING,80) COUNT=(0:1) +
   DEFAULT=/project/test_work/testdata/general
PARM NL TYPE=INTEGER COUNT=1 VALID=(2:2000) DEFAULT=100
PARM NS TYPE=INTEGER COUNT=1 VALID=(2:2000) DEFAULT=100
PARM NLW TYPE=INTEGER COUNT=(0,1) VALID=(1:37) DEFAULT=1
PARM NSW TYPE=INTEGER COUNT=(0,1) VALID=(1:73) DEFAULT=1
PARM TRIAXIAL TYPE=REAL COUNT=(0,3) DEFAULT=--
END-PROC

.TITLE
VICAR program EFGISO

.HELP
PURPOSE:
To create images of E F and G for the ISO (irregularly shaped object),
and an image of the object radius.
E F and G are used to compute the validity of conformal and authalic
map projections.
The planet models must conform to a standard grid and reside in a directory 
pointed to by the PATH keyword.

EXECUTION:
mapiso out=(E,F.G) planet=phobos nl=180 ns=360 

.PAGE
METHOD:
First the program reads the planet model file located in PATH.
This is an ascii table with west longitude, latitude, radius each 5 degrees.
All angles are planetocentric.

1> Construct a radius surface, which is a function of lat. and long.
   Two dimentional cubic spline interpolation is used here.
 
2> With the radius surface, the ISO can be constructed as
 
   X = r(lat, long) cos(lat)cos (long)
   Y = r(lat, long) cos(lat)sin (long)
   Z = r(lat, long) sin(lat)
 
3> From the cubic spline and the equations in (2), the partial derivatives 
can be calculated.
 
  X_lat, X_long, Y_lat, Y_long, Z_lat and Z_long.
 
4>
   E = (X_lat)(X_lat) + (Y_lat)(Y_lat) + (Z_lat)(Z_lat)
   F = (X_lat)(X_long) + (Y_lat)(Y_long) + (Z_lat)(Z_long)
   G = (X_long)(X_long) + (Y_long)(Y_long) + (Z_long)(Z_long)
 
To verify that the map projection is truly conformal or authalic the 
following constraint must be true, where:
EFG are measured on the ISO.
efg are mesured on the map projection of the ISO.

Conformal case:
E/e=G/g  and F/sqrt(EG)=f/sqrt(eg)
(note: f/sqrt(eg) is the cosine of the angle between meridians and latitudes)

Authalic case:
EG-FF=eg-ff and F/sqrt(EG)=f/sqrt(eg)
(note: ff is f*f)

HISTORY:
9-1-98  J Lorre. 
COGNIZANT PROGRAMMER:  Jean Lorre

REVISIONS:

2019-07-18 WLB - IDS-7923: replaced sprintf/zvmessage calls with xvnprintf. Misc cleanup.

.LEVEL1

.VARI OUT
Output images
E, F, G, Radius

.VARI NL
number lines in
output images.

.VARI NS
number samples in
output images.

.VARI PLANET
Planet name

.VARI PATH
Directory path for
planet models

.VARI NLW
Size of a smoothing filter.
Filter height in n-s direction.
Default is 1.

.VARI NSW
Size of a smoothing filter.
Filter  width in e-w direction.
Default is 1.

.VARI TRIAXIAL
Three radii: a,b,c
Overrides planet
model.

.LEVEL2

.VARI OUT
Output images. These represent the fundamental forms:
1. E
2. F
3. G
and radius:
4. Radius in km.

All outputs are in a rectangular projection with zero lat & lon at the center,
in west planetocentric longitude, north at the top, and covering the entire
planet.
All outputs are in REAL format.

.VARI NL
number lines in
output images.

.VARI NS
number samples in
output images.

.VARI PLANET
The planet or object name for whom E F G & R maps are to be generated..

.VARI PATH
The directory name where the planet models reside.

.VARI NLW
Size of a smoothing filter.
Filter height in n-s direction.
Each count is 5 degrees.
Largest value is 37 which spans +90 to -90.
Default is 1.
Must be odd.

.VARI NSW
Size of a smoothing filter.
Filter  width in e-w direction.
Each count is 5 degrees.
Largest value is 73 which spans 0 to 360.
Default is 1.
Must be odd.

.VARI TRIAXIAL
Three triaxial ellipsoid radii: a, b, and c. a > b > c.
This optional keyword will cause the radii in the planet model to be 
replaced by a triaxial ellipsoid of radii a b c (in km). Use the program
as one would ordinarily.
