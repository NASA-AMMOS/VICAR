procedure
refgbl $echo
! Jun 26, 2012 - RJB
! TEST SCRIPT FOR FASTCLAS
! tests BYTE, HALF images
!
! Vicar Programs:
!       gen size mss stats list ustats
! 
! parameters:
!   <none>
!
! Requires NO external test data: 
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

body
let _onfail="stop"
let $echo="yes"
!This is an MSS test file for FASTCLAS
!Gen needed files
gen a 10 10
gen b 10 10 sinc=2 linc=2
gen c 10 10 sinc=4 linc=4
gen d 2 2
size d dd (1,1,10,10)
mss (a,b,c) fast
mss (a,b,c,dd) fast1
!Run STATS to get statistics
stats (a,b,c) stat1 'noprint class1=(1,1,5,5) class2=(1,5,5,5)+
    class3=(5,1,5,5) class4=(5,5,5,5)
list stat1
!Run FASTCLAS (throw in CSIGMA and BAND for test)
let _onfail="continue"
let $echo="no"
write "The following should ABEND"
let $echo="yes"

fastclas (fast,stat1) fastout size=(1,1,10,10) mss=3 sigma=2.5 +
    csigma=(2,3,1.5) band=(1,2,3)

let $echo="no"
let _onfail="stop"
let $echo="yes"

fastclas (a,b,c,stat1) fastout size=(1,1,10,10) sigma=2.5 +
    csigma=(2,3,1.5) 

!List FASTCLAS output
list fastout
!Run FASTCLAS with PRIOR probabilities
fastclas (a,b,c,stat1) stat1out   sigma=3.0+
    prob=(.125,.237,.224,.414) mean=(3,2,144,3,3,168) 'check
!List file. This output may not look correct, but it is. The output
!listed is due to noise and number truncations and also due to the
!highly correlated training sets.
list stat1out
!Run FASTCLAS with other PRIOR probabilities
fastclas (a,b,c,dd,stat1) stat2out  sigma=3.0 prior=(4,2) +
    prob=(1,0.0,0.3,0.3,0.4,2,0.05,0.05,0.8,0.1) mean=(3,2,144,3,3,168) 
list stat2out
!Run FASTCLAS with check DONT parameter
fastclas (a,b,c,stat1) stat3out sigma=2.5 'dont
!List FASTCLAS output
list stat3out
let _onfail="stop"
let $echo="no"
write "PART 2 larger image from stats"
let $echo="yes"

gen gen1 nl=128 ns=128
gen gen2 nl=128 ns=128 sinc=2 linc=2
gen gen3 nl=128 ns=128 sinc=4 linc=4
gen gen4 nl=128 ns=128 sinc=6 linc=6 ival=4
!mss (gen1,gen2,gen3) mss1 (1,1,128,128)
!mss (gen1,gen2,gen3,gen4) mss2 (1,1,128,128)
!
!  First tests will check standard image format files
!
! Copy first band and scribe training areas on this image - noprint 
stats (gen1,gen2,gen3) (astat1,astat2) +
    class1=(1,1,32,32) class2=(96,1,32,32) class3=(96,96,32,32) +
    class4=(1,96,32,32)

fastclas (gen1,gen2,gen3,astat1) afastout sigma=2.5 

stats (gen1,gen2,gen3) astat1 hist=0 +
    class1=(1,1,32,32) class2=(96,1,32,32) class3=(96,96,32,32) +
    class4=(1,96,32,32)

fastclas (gen1,gen2,gen3,astat1) afastout sigma=2.0

goto skip1
stats mss1 (mstat1,mstat2) mss=3 vert=5 +
    class1=(1,1,32,32) class2=(96,1,32,32) class3=(96,96,32,32) +
    class4=(1,96,32,32) class5=(48,48,48,70,70,48,48,48)

fastclas (mss1,mstat1) mssout  mss=3 sigma=2.5 +
     csigma=(2,3,1.5) band=(1,2,3)

stats mss2 (mstat3,mstat4) mss=4 vert=5 +
    class1=(1,1,32,32) class2=(96,1,32,32) class3=(96,96,32,32) +
    class4=(1,96,32,32) class5=(48,48,48,70,70,48,48,48)

fastclas (mss2,mstat3) mssout  mss=4 sigma=2.5 +
     csigma=(2,3,1.5) band=(1,2,3,4)
skip1>
!list mssout
let $echo="no"
write "PART 3 - larger images - ustats"
let $echo="yes"
gen agenu 128 128
gen bgenu 128 128 linc=2 sinc=2
gen cgenu 128 128 linc=4 sinc=4
mss (agenu,bgenu,cgenu) mssu1

ustats (agenu,bgenu,cgenu) ustats1 (1,1,128,128) classes=6
ibis-list ustats1 'format 'group

fastclas (agenu,bgenu,cgenu,ustats1) ufastout sigma=2.5

ustats (agenu,bgenu,cgenu) ustats2 (1,1,128,128) classes=25 +
    linc=1 sinc=1 sinc=1 initial=5 clusters=50 exclude=0 +
    percent=0.0 notify=notify
ibis-list ustats2 'format 'group
 
fastclas (agenu,bgenu,cgenu,ustats2) ufastout2 sigma=3
!end-proc
!list ufastout
let $echo="no"
write "PART 4 - HALF images - stats"
let $echo="yes"
gen half1 nl=128 ns=128 format=half
gen half2 nl=128 ns=128 sinc=2 linc=2 format=half
gen half3 nl=128 ns=128 sinc=4 linc=4 format=half
gen half4 nl=128 ns=128 sinc=6 linc=6 ival=4 format=half

!mss (half1,half2,half3,half4) mssh2 (1,1,128,128)

stats (half1,half2,half3) (hstat1,hstat2) +
    class1=(1,1,32,32) class2=(96,1,32,32) class3=(96,96,32,32) +
    class4=(1,96,32,32)

fastclas (half1,half2,half3,hstat1) hfastout sigma=2.5

stats (half1,half2,half3) hstat1 hist=0 +
    class1=(1,1,32,32) class2=(96,1,32,32) class3=(96,96,32,32) +
    class4=(1,96,32,32)

fastclas (half1,half2,half3,hstat1) hfastout sigma=2.0

let $echo="no"
write "PART 5 - HALF images - ustats"
let $echo="yes"

ustats (half1,half2,half3) hustats1 (1,1,128,128) classes=6
ibis-list hustats1 'format 'group

fastclas (half1,half2,half3,hustats1) hufastout sigma=2.5

ustats (half1,half2,half3) hustats2 (1,1,128,128) classes=25 +
    linc=1 sinc=1 sinc=1 initial=5 clusters=50 exclude=0 +
    percent=0.0 notify=notify
ibis-list hustats2 'format 'group

fastclas (half1,half2,half3,ustats2) hufastout2 sigma=3

! clean up:
ush rm -f ?
ush rm -f dd
ush rm -f mssu1
ush rm -f fast
ush rm -f *fastout*
ush rm -f fast1
ush rm -f *stat1
ush rm -f ?stat2
ush rm -f stat?out
ush rm -f ustats?
ush rm -f hustats?
ush rm -f ?gen?
ush rm -f gen?
ush rm -f half?

let $echo="no"
end-proc
