procedure
refgbl $echo
refgbl $autousage
body
let _onfail="continue"
let $autousage="none"
let $echo="yes"
putmsg "2D files compatibility check" ""
gen a 10 10
list a
label-list a
copy a b
list b
label-list b
copy a b (3,3,3,3)
list b
label-list b
copy a b (5,5,10,10)
list b
label-list b
putmsg "3D BSQ files" ""
gen a 10 10 nb=5 org=bsq
copy a b
list b
label-list b
copy a b (3,3,3,3) (2,3)
list b
label-list b
putmsg "3D BIL files" ""
gen a 10 10 nb=5 org=bil
copy a b
list b
label-list b
copy a b (3,3,3,3) sb=2 nb=3
list b
label-list b
putmsg "3D BIP files" ""
gen a 10 10 nb=5 org=bip
copy a b
list b
label-list b
copy a b (3,3,3,3) (2,3)
list b
label-list b
!
!
! Now test the mode of COPY which copies binary items.
!
! First GEN a 3-D image.
!
gen a nl=5 ns=4 nb=3
!
! list the contents and the label.
!
list a
label-l a 'dump
!
!
! Now change certain label items to make the
! file have binary headers and a binary prefix.
!
label-replace a items="nb=2 nlb=5 ns=3 nbb=1" 'system
!
! List contents and label to show the difference.
!
list a
label-l a 'dump
!
! Now copy the file to show that in default mode
! COPY will drop the binary items.
!
copy a b
list b
label-l b 'dump
!
! Now copy with BINARY set on the COPY and
! show that the binary information has been
! retained. The dump of the label will show
! that the binary items are correct and that
! the appropriate data areas agree with the
! non-binary copy indicating that the binary
! items are consistent and allow the listing
! of the correct data areas.
!
copy a b 'binary
list b
label-l b 'dump
!
! test that the fix-up when a window is specified works:
copy a b 'binary size=(2,2,2,2)
list b
!
! Binary mode has been checked.
!
end-proc
