	INCLUDE 'VICMAIN_FOR'
	SUBROUTINE MAIN44
C
C  IBIS ROUTINE POLYREG
C
C  PURPOSE:  POLYREG PERFORMS A RIGID TRANSFORMATION OF A POLYGON 
C  CORRECT FOR DIFFERENCES IN SIZE, ROTATION, ASPECT, OR SKEW.  TH
C  IS MOST EASILY SPECIFIED BY GIVING THREE INPUT TIEPOINTS AND TH
C  PONDING OUTPUT TIEPOINTS.  ALTERNATIVELY, THE USER CAN SPECIFY 
C  PAIRS AND GIVE ADDITIONAL INFORMATION ON ASPECT RATIOS, AND COO
C  REVERSAL.
C  USER PARAMETERS:
C
C
C  ITIE,X1,Y1,X2,Y2 - SPECIFIES TWO TIEPOINTS IN THE INPUT PICTURE
C		NUMBERS MUST BE IN FLOATING POINT FORMAT.
C  ITIE,X1,Y1,X2,Y2,X3,Y3 - SPECIFIES THREE POINTS IN THE INPUT PI
C  OTIE,X1,Y1,X2,Y2 - SPECIFIES TWO TIEPOINTS IN THE OUTPUT PICTUR
C  OTIE,X1,Y1,X2,Y2,X3,Y3 - SPECIFIES THREE POINTS IN THE OUTPUT P
C  IUSIZE,R,S - GIVES THE ASPECT RATIO (R/S) OF THE INPUT COORDINA
C		R IS THE SIZE OF ONE UNIT IN THE FIRST COORDINATE, S 
C		OF ONE UNIT IN THE SECOND COORDINATE.  THIS PARAMETER
C		WHEN ONLY TWO TIEPOINTS ARE PROVIDED.
C  OUSIZE,R,S - GIVES THE ASPECT RATIO OF THE OUTPUT COORDINATE SY
C  FLIP -	USED FOR COORDINATE REVERSAL IN THE TWO POINT CASE.
C  IGNORE,X,Y - CAUSES ALL POINTS WITH THE VALUE X,Y TO BE IGNORED
C		TRANSFORMATION.  THE DEFAULT IS TO IGNORE 0.,0.
C
C   1-87  SXP   Modified to use DGELG to solve linear system of equations.
C   3-95  AS    (CRI) MSTP S/W CONVERSION (VICAR PORTING)

	IMPLICIT NONE
	LOGICAL FLIP, XVPTST, NOPRINT, ZERO, EOF
	REAL*8 TAB(6),WORK(6,6),IH,IW,OH,OW,L,S,R1,R2,THETA1,THETA2
        REAL*8 RATIO,V51,V52,ALPHA,R,XIGNOR,YIGNOR,T,L1,S1,THETA
	REAL*4 ITIARR(6),OTIARR(6),IUSARR(2),OUSARR(2),IGNARR(2)
	REAL*4 COORD1, COORD2, EXTRA(40)
        INTEGER NITIE,NOTIE,ITIEDF,OTIEDF,COUNT,IUSIDF,OUSIDF,SKIP
        INTEGER I,J,IER,STATUS,RDGR,WRGR,GETGR,PUTGR,CLGR,PRINTCOUNT
	CHARACTER*60	STRING

      DATA IH,IW,OH,OW/4*1.D0/

C
C     GET PARAMETERS
C
        CALL IFMESSAGE('POLYREG version 6-MAR-95')

	CALL XVPARM ('ITIE',ITIARR,NITIE,ITIEDF,6)
	CALL XVPARM ('OTIE',OTIARR,NOTIE,OTIEDF,6)
	CALL XVPARM ('IUSIZE',IUSARR,COUNT,IUSIDF,2)
	CALL XVPARM ('OUSIZE',OUSARR,COUNT,OUSIDF,2)
	CALL XVP ('SKIP', SKIP, COUNT)
	CALL XVP ('IGNORE', IGNARR, COUNT)
	NOPRINT = XVPTST('NOPRINT')
	FLIP = XVPTST ('FLIP')
	XIGNOR = DBLE(IGNARR(1))
	YIGNOR = DBLE(IGNARR(2))


C		 SET UP LINEAR EQUATIONS FOR SOLUTION

	IF (NITIE .NE. NOTIE) THEN
	    CALL MABEND('NUMBER OF ITIE MUST EQUAL NUMBER OF OTIE')
	ENDIF

	IF (IUSIDF.EQ.0) THEN
	    IH = DBLE(IUSARR(1))
	    IW = DBLE(IUSARR(2))
	ENDIF
	IF (OUSIDF.EQ.0) THEN
	    OH = DBLE(OUSARR(1))
	    OW = DBLE(OUSARR(2))
	ENDIF

	DO I=1,4
	    TAB(I) = DBLE(OTIARR(I))
	ENDDO
	IF (NOTIE.EQ.6) THEN
	    TAB(5) = DBLE(OTIARR(5))
	    TAB(6) = DBLE(OTIARR(6))
	ENDIF
	DO I=1,6
	    DO J=1,6
	        WORK(I,J) = 0.D0
	    ENDDO
	ENDDO
	WORK(1,1) = DBLE(ITIARR(1))
	WORK(1,2) = DBLE(ITIARR(2))
	WORK(3,1) = DBLE(ITIARR(3))
	WORK(3,2) = DBLE(ITIARR(4))
	WORK(2,3) = WORK(1,1)
	WORK(2,4) = WORK(1,2)
	WORK(4,3) = WORK(3,1)
	WORK(4,4) = WORK(3,2)
	WORK(1,5) = 1.D0
	WORK(2,6) = 1.D0
	WORK(3,5) = 1.D0
	WORK(4,6) = 1.D0
	IF (NITIE.EQ.6) THEN
	    WORK(5,5) = 1.D0
	    WORK(6,6) = 1.D0
	    WORK(5,1) = DBLE(ITIARR(5))
	    WORK(5,2) = DBLE(ITIARR(6))
	ENDIF
	WORK(6,3) = WORK(5,1)
	WORK(6,4) = WORK(5,2)
C  
C  SPECIAL CASE FOR TWO POINT POLYREG
C
	IF (NITIE .NE. 6) THEN
	    L = (WORK(3,1)-WORK(1,1))*IH
	    S = (WORK(3,2)-WORK(1,2))*IW
	    IF (FLIP) THEN
	      T = L
	      L = S
	      S = T
	    ENDIF
	    R1 = DSQRT(L*L+S*S)
	    THETA1 = DATAN2(L,S)
	    L = (TAB(3)-TAB(1))*OH
	    S = (TAB(4)-TAB(2))*OW
	    R2 = DSQRT(L*L+S*S)
	    THETA2 = DATAN2(L,S)
	    THETA = THETA2-THETA1
	    RATIO = R2/R1
	    V51 = WORK(1,1)-WORK(3,2)+WORK(1,2)
	    V52 = WORK(1,2)+WORK(3,1)-WORK(1,1)
	    ALPHA = DATAN2(V51,V52)+THETA
	    R = DSQRT(V51*V51+V52*V52)*RATIO
	    TAB(5) = R*DSIN(ALPHA)/OH
	    TAB(6) = R*DCOS(ALPHA)/OW
	    IF (FLIP) THEN
	      T = V51
	      V51 = V52
	      V52 = T
	    ENDIF
	    WORK(5,1) = V51/IH
	    WORK(5,2) = V52/IW
	    WORK(6,3) = WORK(5,1)
	    WORK(6,4) = WORK(5,2)
	ENDIF


	CALL DGELG (TAB,WORK,6,1,1.E-14,IER)
	IF (IER .NE. 0) THEN
	    CALL MABEND('SOLUTION FAILURE')
	ENDIF


C  OPEN THE INPUT AND OUTPUT GRAPHICS FILES

	STATUS = RDGR (1, 1, 2+SKIP)
        IF (STATUS .NE. 1) CALL SIGNALGR(1,STATUS,1)
	STATUS = WRGR (1, 2, 2+SKIP)
        IF (STATUS .NE. 1) CALL SIGNALGR(2,STATUS,1)


	PRINTCOUNT = 0
	IF (.NOT. NOPRINT) CALL XVMESSAGE 
     *     ('       INPUT COORDINATES           OUTPUT COORDINATES',' ')

C  TRANSFORM POINTS ACCORDING TO THE SOLUTION OF THE LINEAR EQUATION

	DO WHILE (.TRUE.)
	    STATUS = GETGR (1, ZERO, EOF, COORD1, COORD2, EXTRA)
            IF (STATUS .NE. 1) CALL SIGNALGR(1,STATUS,1)
	    IF (EOF) GOTO 290
	    L = DBLE(COORD1)
	    S = DBLE(COORD2)
	    IF (DABS(L-XIGNOR)+DABS(S-YIGNOR).GT.1.D-6) THEN
		L1 = L*TAB(1)+S*TAB(2)+TAB(5)
		S1 = L*TAB(3)+S*TAB(4)+TAB(6)
		COORD1 = SNGL(L1)
		COORD2 = SNGL(S1)
	    ENDIF
	    STATUS = PUTGR (2, COORD1, COORD2, EXTRA)
            IF (STATUS .NE. 1) CALL SIGNALGR(2,STATUS,1)

	    IF (.NOT. NOPRINT .AND. PRINTCOUNT .LT. 5) THEN
		WRITE (STRING, '(F12.3,1X,F12.3,4X,F12.3,1X,F12.3)')
     *				 L,S, COORD1, COORD2
		CALL XVMESSAGE (STRING,' ')
		PRINTCOUNT = PRINTCOUNT + 1
	    ENDIF
	ENDDO

290	CONTINUE
	STATUS = CLGR (1)
        IF (STATUS .NE. 1) CALL SIGNALGR(1,STATUS,1)
	STATUS = CLGR (2)
        IF (STATUS .NE. 1) CALL SIGNALGR(2,STATUS,1)

	RETURN
	END
