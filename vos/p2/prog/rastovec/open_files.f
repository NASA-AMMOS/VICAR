CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C Open POLYDESF, VERTICES and POLYINFO files.
C
      SUBROUTINE OPEN_FILES(NPOLY,NVERT,GR1)
      IMPLICIT NONE
      INTEGER*4 NPOLY,NVERT
      LOGICAL GR1

      COMMON/FILES/INFILE,LABELEDF,POLYDESF,SERLFILE,VERTICES,POLYINFO
      INTEGER*4 INFILE,LABELEDF,POLYDESF,SERLFILE,VERTICES,POLYINFO

      COMMON/IBIS_FILES/IBIS_PD,IBIS_S,IBIS_V,IBIS_PI
      INTEGER*4 IBIS_PD,IBIS_S,IBIS_V,IBIS_PI

      COMMON/IBIS_RECORDS/PD_REC,SERL_REC,V_REC,PI_REC
      INTEGER*4 PD_REC,SERL_REC,V_REC,PI_REC

      COMMON/CMAX/MAXPOLY,MAXVERT
      INTEGER MAXPOLY,MAXVERT

      INTEGER*4 I,NCOL,NROW,STATUS,COL(10)

      DO I=1,10
         COL(I) = I
      ENDDO

      NCOL = 2
      NROW = NPOLY
      CALL IBIS_FILE_OPEN(POLYDESF,IBIS_PD,'READ',NCOL,NROW,
     +  ' ',' ',STATUS)
      IF (STATUS.NE.1) CALL IBIS_SIGNAL(IBIS_PD,STATUS,1)
      CALL IBIS_RECORD_OPEN(IBIS_PD,PD_REC,' ',COL,NCOL,'FULL',STATUS)
      IF (STATUS.NE.1) CALL IBIS_SIGNAL(IBIS_PD,STATUS,1)

      NROW = NVERT
      CALL XVUNIT(VERTICES,'OUT',4,STATUS,' ')
      IF (GR1) THEN
         CALL WRGR(4,VERTICES,NCOL)
      ELSE
         CALL IBIS_FILE_OPEN(VERTICES,IBIS_V,'WRITE',NCOL,NROW,
     +		' ','ROW',STATUS)
         MAXVERT = NROW
         DO I=1,2
            CALL IBIS_COLUMN_SET(IBIS_V,'FORMAT','REAL',I,STATUS)
            IF (STATUS.NE.1) CALL IBIS_SIGNAL(IBIS_V,STATUS,1)
         ENDDO
         CALL IBIS_RECORD_OPEN(IBIS_V,V_REC,' ',COL,NCOL,'REAL',STATUS)
         IF (STATUS.NE.1) CALL IBIS_SIGNAL(IBIS_V,STATUS,1)
      ENDIF

      NCOL = 10
      NROW = NPOLY
      CALL XVUNIT(POLYINFO,'OUT',5,STATUS,' ')
      CALL IBIS_FILE_OPEN(POLYINFO,IBIS_PI,'WRITE',NCOL,NROW,
     +		' ','ROW',STATUS)
      IF (STATUS.NE.1) CALL IBIS_SIGNAL(IBIS_PI,STATUS,1)
      DO I=1,NCOL
         CALL IBIS_COLUMN_SET(IBIS_PI,'FORMAT','REAL',I,STATUS)
         IF (STATUS.NE.1) CALL IBIS_SIGNAL(IBIS_PI,STATUS,1)
      ENDDO
      CALL IBIS_RECORD_OPEN(IBIS_PI,PI_REC,' ',COL,NCOL,'REAL',STATUS)
      IF (STATUS.NE.1) CALL IBIS_SIGNAL(IBIS_PI,STATUS,1)
      RETURN
      END

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C Copy data for SERFILE into virtual array.
C
      SUBROUTINE READ_SERLFILE(NSEGS,NVERT,SERL,VXREF,XYA)
      IMPLICIT NONE
      INTEGER*4 NSEGS		!number of segments
      INTEGER*4 NVERT		!number of vertices
      INTEGER*4 SERL(4,NSEGS)
      INTEGER*4 VXREF(4,NVERT)
      INTEGER*2 XYA(2,NVERT)

      COMMON/FILES/INFILE,LABELEDF,POLYDESF,SERLFILE
      INTEGER*4 INFILE,LABELEDF,POLYDESF,SERLFILE

      COMMON/IBIS_FILES/IBIS_PD,IBIS_S
      INTEGER*4 IBIS_PD,IBIS_S

      INTEGER*4 STATUS,I,NCOL,NROW,COL(10),IB(10),RECORD
      INTEGER*4 ISTART,IEND,IRIGHT,ILEFT	!SERL data

      NCOL = 10
      NROW = NSEGS
      CALL IBIS_FILE_OPEN(SERLFILE,IBIS_S,'READ',NCOL,NROW,
     +          ' ','ROW',STATUS)
      IF (STATUS.NE.1) CALL IBIS_SIGNAL(IBIS_S,STATUS,1)

      DO I=1,10
         COL(I) = I
      ENDDO
      CALL IBIS_RECORD_OPEN(IBIS_S,RECORD,' ',COL,NCOL,'FULL',STATUS)
      IF (STATUS.NE.1) CALL IBIS_SIGNAL(IBIS_S,STATUS,1)

      DO 20 I=1,NSEGS
      CALL IBIS_RECORD_READ(RECORD,IB,I,STATUS)
      IF (STATUS.NE.1) CALL IBIS_SIGNAL(IBIS_S,STATUS,1)
      ISTART = IB(2)
      IEND = IB(3)
      IF (ISTART.LT.1 .OR. ISTART.GT.NVERT) GOTO 998
      IF (IEND.LT.1 .OR. IEND.GT.NVERT) GOTO 998
      IRIGHT = IB(4)
      ILEFT = IB(5)
      XYA(1,ISTART) = IB(6)
      XYA(2,ISTART) = IB(7)
      XYA(1,IEND) = IB(8)
      XYA(2,IEND) = IB(9)
      SERL(1,I) = ISTART
      SERL(2,I) = IEND
      SERL(3,I) = IRIGHT
      SERL(4,I) = ILEFT
      CALL CCP(ISTART,I,VXREF)	!Enter segments in vertex x-reference table
   20 CALL CCP(IEND,I,VXREF)

      CALL IBIS_FILE_CLOSE(IBIS_S,' ',STATUS)
      IF (STATUS.NE.1) CALL IBIS_SIGNAL(IBIS_S,STATUS,1)
      RETURN

  998 CALL MABEND('***Error in SERLFILE',' ')
      END

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C Deallocate and close files for polygon cycling
C
      SUBROUTINE CLOSE_FILES(NVERT2,NPOLY,GR1)
      IMPLICIT NONE
      INTEGER*4 NVERT2,NPOLY
      LOGICAL GR1

      COMMON/FILES/INFILE,LABELEDF,POLYDESF,SERLFILE,VERTICES,POLYINFO
      INTEGER*4 INFILE,LABELEDF,POLYDESF,SERLFILE,VERTICES,POLYINFO

      COMMON/IBIS_FILES/IBIS_PD,IBIS_S,IBIS_V,IBIS_PI
      INTEGER*4 IBIS_PD,IBIS_S,IBIS_V,IBIS_PI

      INTEGER*4 STATUS

      CALL IBIS_FILE_CLOSE(IBIS_PD,' ',STATUS)
      IF (STATUS.NE.1) CALL IBIS_SIGNAL(IBIS_PD,STATUS,1)
      
      IF (GR1) THEN
         CALL CLGR(VERTICES)
      ELSE
         CALL IBIS_FILE_SET(IBIS_V,'NR',NVERT2,STATUS)
         IF (STATUS.NE.1) CALL IBIS_SIGNAL(IBIS_V,STATUS,1)
         CALL IBIS_FILE_CLOSE(IBIS_V,' ',STATUS)
         IF (STATUS.NE.1) CALL IBIS_SIGNAL(IBIS_V,STATUS,1)
      ENDIF

      CALL IBIS_FILE_SET(IBIS_PI,'NR',NPOLY,STATUS)
      IF (STATUS.NE.1) CALL IBIS_SIGNAL(IBIS_PI,STATUS,1)
      CALL IBIS_FILE_CLOSE(IBIS_PI,' ',STATUS)
      IF (STATUS.NE.1) CALL IBIS_SIGNAL(IBIS_PI,STATUS,1)
      RETURN
      END
