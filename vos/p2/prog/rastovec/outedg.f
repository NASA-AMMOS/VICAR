CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C Form an edge and send it to the output file
C
      SUBROUTINE OUTEDG(IEDGE,IFV,ISV,IBEG,IEND,
     +		SERL,VXREF,XYA,IVBUF,IVPTR)
      IMPLICIT NONE
      INTEGER*4 IEDGE,IFV,ISV,IBEG,IEND
      INTEGER*4 SERL(4,1),VXREF(4,1)
      INTEGER*2 XYA(2,1)
      INTEGER*4 IVBUF(1)
      INTEGER*4 IVPTR(1)

      INTEGER*4 I,NSEG,ITSV,ITEV,IPOINT,IVRTX,IX,IY
      INTEGER*4 IRPOLY,IRCLAS,IRAREA
      INTEGER*4 ILPOLY,ILCLAS,ILAREA


      DO I=1,4
         NSEG = VXREF(I,ISV)
         NSEG = IABS(NSEG)
         ITSV = SERL(1,NSEG)
         ITEV = SERL(2,NSEG)
         IF (ITSV.EQ.IFV .AND. ITEV.NE.ISV) THEN
            IRPOLY = SERL(3,NSEG)
            ILPOLY = SERL(4,NSEG)
            GOTO 20
         ENDIF
         IF (ITSV.EQ.ISV .AND. ITEV.EQ.IFV) THEN
            ILPOLY = SERL(3,NSEG)
            IRPOLY = SERL(4,NSEG)
            GOTO 20
         ENDIF
      ENDDO

C     ....We should never fall through here
      CALL XVMESSAGE(' ABEND IN OUTEDG',' ')
      CALL ABEND

   20 IRPOLY = IABS(IRPOLY)
      ILPOLY = IABS(ILPOLY)
      CALL GET_POLYGON(IRPOLY,irclas,irarea)
      CALL GET_POLYGON(ILPOLY,ilclas,ilarea)
      IEDGE = IEDGE+1
C      CALL OEHDR(IEDGE,ILCLAS,ILPOLY,ILAREA,IRCLAS,IRPOLY,IRAREA,
C     +           IEND-IBEG+1,ODSRN)

      DO I=IBEG,IEND
         IPOINT = IVPTR(I)
         IVRTX = IVBUF(IPOINT)
         IX = XYA(1,IVRTX)
         IY = XYA(2,IVRTX)
CCC      CALL OEVR(IX,IY,ODSRN)
      ENDDO
      RETURN
      END
