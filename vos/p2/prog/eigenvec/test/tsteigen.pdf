procedure
  refgbl $echo
  refgbl $autousage
  RefGbl $SysChar

LOCAL DIR     TYPE=STRING
LOCAL UVBIMG  TYPE=STRING
LOCAL UVHIMG  TYPE=STRING
LOCAL VIOBIMG TYPE=STRING
LOCAL VIOHIMG TYPE=STRING
LOCAL BLUBIMG TYPE=STRING
LOCAL BLUHIMG TYPE=STRING
body

  IF ($SysChar(1)="VAX_VMS")
    Let DIR="wms_test_work:[testdata.mipl.vgr]"
  Else
    Let DIR="/project/test_work/testdata/mipl/vgr/"
  End-If
let $autousage="none"
let $echo="yes"
let UVBIMG= "&DIR"//"uvb.img"
let UVHIMG= "&DIR"//"uvh.img"
let VIOBIMG= "&DIR"//"viob.img"
let VIOHIMG= "&DIR"//"vioh.img"
let BLUBIMG= "&DIR"//"blub.img"
let BLUHIMG= "&DIR"//"bluh.img"
!
write " THIS IS A TEST FOR PROGRAM EIGENVEC"
write " TEST BYTE INPUT"
write " TEST PARM INC"
eigenvec INP=(&UVBIMG,&VIOBIMG,&BLUBIMG) INC=10
write " TEST PARM LINC"
eigenvec INP=(&UVBIMG,&VIOBIMG,&BLUBIMG) LINC=20
write " TEST PARM AREA"
eigenvec INP=(&UVBIMG,&VIOBIMG,&BLUBIMG) +
 AREA=(20,1,10,20,40,11,10,20)
write " TEST PARM EXCLUD"
eigenvec INP=(&UVBIMG,&VIOBIMG,&BLUBIMG) EXCLUD=11 +
 AREA=(20,1,10,20,40,11,10,20)
write " TEST PARM CORR"
eigenvec INP=(&UVBIMG,&VIOBIMG,&BLUBIMG) 'CORR INC=50
write " TEST PARM SIZE"
eigenvec INP=(&UVBIMG,&VIOBIMG,&BLUBIMG) SIZE=(11,11,20,20)
write " TEST HALFWORD DATA"
write " TEST PARM INC"
eigenvec INP=(&UVHIMG,&VIOHIMG,&BLUHIMG) INC=100
write " TEST PARM LINC"
eigenvec INP=(&UVHIMG,&VIOHIMG,&BLUHIMG) LINC=20
write " TEST PARM AREA"
eigenvec INP=(&UVHIMG,&VIOHIMG,&BLUHIMG) AREA=(400,1,10,10)
write " TEST PARM EXCLUD"
eigenvec INP=(&UVHIMG,&VIOHIMG,&BLUHIMG) EXCLUD=12 +
 AREA=(101,11,10,10,201,11,10,10)
write " TEST PARM CORR"
eigenvec INP=(&UVHIMG,&VIOHIMG,&BLUHIMG) INC=50 'CORR
write " TEST PARM SIZE"
eigenvec INP=(&UVHIMG,&VIOHIMG,&BLUHIMG) SIZE=(100,101,10,100)
write " TEST PARM DATA"
eigenvec NVAR=3 DATA=(1.,33.,179.,991.,127.3,0.,341.0,987.6,99.3,111.,123.,+
 50.,333.,15.,999.,1234.,378.,111.1,255.,678.,1911.)
mss INP=(&UVHIMG,&VIOHIMG,&BLUHIMG) OUT=eigen.msh
mss INP=(&UVBIMG,&VIOBIMG,&BLUBIMG) OUT=eigen.msb
write " TEST MSS MODE OF BYTE DATA"
write " TEST PARM INC"
eigenvec  eigen.msb MSS=3 INC=100
write " TEST PARM LINC"
eigenvec  eigen.msb MSS=3 LINC=20
write " TEST PARM AREA"
eigenvec  eigen.msb MSS=3 AREA=(101,1,10,10)
write " TEST PARM USE"
eigenvec  eigen.msb MSS=3 USE=(1,3) LINC=100
write " TEST PARM CORR AND AREA"
eigenvec  eigen.msb MSS=3 'CORR AREA=(101,1,10,10,201,11,10,10)
write " TEST PARM EXCLUD AND SIZE"
eigenvec  eigen.msb MSS=3 EXCLUD=8 SIZE=(11,11,10,10)
write " TEST MSS MODE OF HALFWORD DATA"
write " TEST PARM INC"
eigenvec  eigen.msh MSS=3 INC=100
write " TEST PARM LINC"
eigenvec  eigen.msh MSS=3 LINC=20 
write " TEST PARM AREA"
eigenvec  eigen.msh MSS=3 AREA=(101,1,10,10)
write " TEST PARM USE"
eigenvec  eigen.msh MSS=3 USE=(1,3) LINC=100
write " TEST PARM CORR AND AREA"
eigenvec  eigen.msh MSS=3 'CORR AREA=(101,1,10,10,201,11,10,10)
write " TEST PARM EXCLUD AND SIZE"
eigenvec  eigen.msh MSS=3 EXCLUD=8 SIZE=(11,11,10,10)
  let $echo="no"
end-proc
