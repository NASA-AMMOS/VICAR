procedure
refgbl $echo
refgbl $autousage
body
let $autousage = "none"
let _onfail="continue"
let $echo="yes"

!
!  THIS IS A TEST OF PROGRAM ADL
!
gen a1010   10 10
list a1010
!
!  make 2 flat images:
gen a0 nl=10 ns=10 ival=0  sinc=0 linc=0
list a0 'zero
gen a99 nl=10 ns=10 ival=99 sinc=0 linc=0
list a99
!
!  simplest case:  use adl to copy an image
!
adl a1010 b1010 add=(0  1,1  1,1)
write "Should get 0 differences on this and all other difpics in this pdf"
difpic (a1010 b1010)
!
!  simple case:  use adl to copy an image with SIZE field.
!
adl a1010 b1010 size=(3,2,7,8) add=(0  1,1  1,1)
copy a1010 c1010 size=(3,2,7,8) 
difpic (c1010 b1010)
!
!  maximal case:  125 values for ADD parameter (25 line segments)
!
gen b0 25 10 ival=0 linc=0 sinc=0
adl b0 b1 +
    add=(0  1,1  1,10        1  2,1  2,10           2  3,1  3,10   +
         3  4,1  4,10        4  5,1  5,10           5  6,1  6,10   +
         6  7,1  7,10        7  8,1  8,10           8  9,1  9,10   +
         9 10,1 10,10       10 11,1 11,10          11 12,1 12,10   +
        12 13,1 13,10       13 14,1 14,10          14 15,1 15,10 +
        15 16,1 16,10       16 17,1 17,10          17 18,1 18,10 +
        18 19,1 19,10       19 20,1 20,10          20 21,1 21,10 +
        21 22,1 22,10       22 23,1 23,10          23 24,1 24,10 +
        24 25,1 25,10 )
gen c1 25 10 sinc=0
difpic (b1 c1)
!
!  simple case:  one diagonal line
!
adl a0 b0 add=(1  1,2  10,1)
list b0
!
!  simple case:  one pixel with SIZE field.
!
adl a1010 b1010 size=(3,2,7,8) add=(1 3,2  3,2)
list b1010
!
!  simple case:  one horizontal line with DN truncation to 255.
!
adl a99 b99 add=(200  1,1  1,10)
list b99
!
!  simple case:  one vertical line with DN truncation to 0.
!
adl a99 b99 add=(-100  1,1  10,1)
list b99
!
!  combined case:  one horizontal line and one diagonal line
!
adl a99 b99 add=(200  1,1  1,10     -100  1,10  10,1)
list b99
!
!  maximal case:  125 values for ADD parameter (1 line segment 25 times)
!
adl a0 b0 +
    add=(1  1,1  10,1       1  1,1  10,1        1  1,1  10,1   +
         1  1,1  10,1       1  1,1  10,1        1  1,1  10,1   +
         1  1,1  10,1       1  1,1  10,1        1  1,1  10,1   +
         1  1,1  10,1       1  1,1  10,1        1  1,1  10,1   +
         1  1,1  10,1       1  1,1  10,1        1  1,1  10,1   +
         1  1,1  10,1       1  1,1  10,1        1  1,1  10,1   +
         1  1,1  10,1       1  1,1  10,1        1  1,1  10,1   +
         1  1,1  10,1       1  1,1  10,1        1  1,1  10,1   +
         1  1,1  10,1 )
list b0
!
!  maximal case:  12*1000 = 12000 pixels modified
!
gen a1000 12 1000 ival=0 linc=0 sinc=0
adl a1000 b1000 +
    add=(0  1,1  1,1000      1  2,1  2,1000         2  3,1  3,1000 +
         3  4,1  4,1000      4  5,1  5,1000         5  6,1  6,1000 +
         6  7,1  7,1000      7  8,1  8,1000         8  9,1  9,1000 +
         9 10,1 10,1000     10 11,1 11,1000        11 12,1 12,1000 )
gen c1000 12 1000 sinc=0
difpic (b1000  c1000)

!
!  3D Image test case
!
gen A3D1000 12 1000  3 ival=0 linc=0 sinc=0
adl A3D1000 B3D1000 +
    add=(0  1,1  1,1000      1  2,1  2,1000         2  3,1  3,1000 +
         3  4,1  4,1000      4  5,1  5,1000         5  6,1  6,1000 +
         6  7,1  7,1000      7  8,1  8,1000         8  9,1  9,1000 +
         9 10,1 10,1000     10 11,1 11,1000        11 12,1 12,1000 )
gen C3D1000 12 1000 3 sinc=0
difpic (B3D1000  C3D1000)
!

!
!  case of problematical size field
!
adl a1010 c1010 size=(5,5,4,4) add=(200,7,6,7,8)
list c1010

end-proc
