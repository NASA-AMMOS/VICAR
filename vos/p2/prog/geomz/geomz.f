       PROGRAM  geomz
C#######################################################################
C  NAME OF ROUTINE
C      geomz ( GEOM Z-values )
C
C  PURPOSE
C      THIS IS THE STANDARD MAIN PROGRAM USED FOR TAE/VICAR PROGRAMS.
C      THIS MODULE CALLS SUBROUTINE MAIN44 TO ENTER INTO THE BODY OF THE
C      PROGRAM.
C      Program "geomz" is a VICAR applications program which is used to 
C      perform rubber sheet vertical correction of images by a set of
C      points specified as parameters or in a parameter data set.
C  PREPARED FOR USE ON MIPL SYSTEM BY
C      STEVE POHORSKY   STERLING SOFTWARE/INFORMATICS     APRIL 1986
C  FOR
C      MIPL SOFTWARE DEVELOPMENT
C
C  ORIGINAL "geomz" PROGRAM BY
C      H. WILCZYNSKI
C
C  ENVIRONMENT
C      VAX 11       VMS  with TAE/VICAR2 EXECUTIVE       FORTRAN-77
C     
C  REVISION HISTORY
C     14 FEB 80   ...ALZ...   REPLACE CALL END BY RETURN
C     24 AUG 78    ...ALZ...   INITIAL RELEASE
C     4-86  SP   CONVERTED FROM IBM VICAR VERSION.
C     4-86  SP   REWROTE ENTIRE COMPUTATIONAL SECTION BECAUSE OF ERRORS AND
C                BECAUSE REQUESTOR WANTED CALL TO DGELG SUBROUTINE REMOVED.
C                THE IBM VERSION ALWAYS USED THE VALUE FROM THE INPUT 
C                PARAMETERS AS THE INITIAL VAL FOR A CELL OF THE IMAGE.
C                BILINEAR INTERPOLATION SHOULD BE USED INSTEAD SINCE THE 
C                FIRST PIXEL IN THE CELL MIGHT NOT BE AT THE TIEPOINT.
C                THIS IS THE CASE WHEN THE FOUR CORNERS OF THE IMAGE ARE NOT
C                TIEPOINTS.  THE IBM CODE COULD NOT HANDLE THE CASE WHERE
C                THE STARTING LINE AND SAMPLE DID NOT BELONG TO THE UPPER-LEFT
C                CELL, WHICH SHOULD BE THEORETICALLY ALLOWABLE. THE NEW
C                COMPUTATIONAL SECTION DOES NOT REQUIRE THAT THE SPACING
C                OF TIEPOINTS BE UNIFORM.  THE CHECK FOR UNIFORMITY WAS LEFT
C                IN TO LEAVE THE PROGRAM FUNCTIONALLY THE SAME.
C     5-86  SP   CHANGED ROUNDING TO USE NINT(VAL(IAH)) INSTEAD OF VAL(IAH)
C                IN THE FINAL ADD TO WORK(J).
C     5-95  VRU  ... CRI ... MSTP S/W CONVERSION (VICAR PORTING)
C  USER PARAMETERS:
C       IN,       INPUT IMAGE FILE 
C       OUT,      OUTPUT IMAGE (Z CORRECTION APPLIED)
C       NAH=N     THE INTEGER N DENOTES THE NUMBER OF AREAS HORIZONTALLY IN THE
C                 TIEPOINT GRID.
C       NAV=M     THE INTEGER M DENOTES THE NUMBER OF AREAS VERTICALLY IN THE
C                 TIEPOINT GRID.
C       TIEPOINT, INPUT GRID
C                 X1,Y1,DZ1,...,XN,YN,DZN   
C                 THE NUMBERS XI,YI,DZI SPECIFY THE POINTS OF
C                 A UNIFORM RECTANGULAR GRID. THE NUMBERS MAY BE REAL OR 
C                 INTEGER.  THE XI AND YI SPECIFY THE PIXEL LOCATION OF 
C                 THE TIEPOINT AND THE DZI SPECIFY THE DN SHIFT.
C      FIXVAL=V   THE INTEGER V INDICATES THAT ALL PIXELS OF VALUE V ARE TO
C                 BE UNCHANGED.
C  PROGRAM LIMITATIONS
C      SEE HLP FILE.
C  SUBROUTINES CALLED
C      MAIN44
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

        INCLUDE 'VICMAIN_FOR'
      SUBROUTINE MAIN44 
C#######################################################################
C  NAME OF ROUTINE
C     MAIN44 (name for top level subroutine by VICAR convention)
C
C  PURPOSE
C      MAIN44 performs rubber sheet vertical correction of images by a set
C      points specified as parameters or in a parameter data set.
C  CONVERTED FOR USE ON MIPL SYSTEM BY   
C      STEVE POHORSKY   STERLING SOFTWARE/INFORMATICS     APRIL 1986
C  FOR
C      MIPL SOFTWARE DEVELOPMENT
C  ENVIRONMENT
C      VAX 11       VMS  with TAE/VICAR EXECUTIVE       FORTRAN-77
C  CALLING SEQUENCE
C      Standard subroutine call and return.
C  CALLED BY
C      "geomz"
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      IMPLICIT INTEGER(A-Z)

      PARAMETER (DIM_PAR = 120000)         ! MAX OF 120,000/3 TIEPOINTS

      COMMON /COM/COEFF(200),PAR(DIM_PAR),WORK(60000)
     +,VAL(200),INCL(200),INCS(200),LVAL(200)
      REAL*4 LINES(3001), SAMPS(201)
      REAL VAL,INCL,INCS,LVAL
      REAL EPSX,EPSY, VALA, VALB, F1, F2, F3, F4
      INTEGER*2 WORK
      REAL  COEFF,RPAR(DIM_PAR),DXX,DX,DYY,DY
      CHARACTER*8 FORMAT
      DATA HALF/0/,IMAX/255/

C
C======================START OF EXECUTABLE CODE======================

      CALL IFMESSAGE('GEOMZ version 2-JAN-95')
      CALL XVEACTION('SA',' ')
C..OPEN INPUT FILE

      CALL XVUNIT(IUNIT,'INP',1,ISTAT, ' ')
      IRETURN = 1
      CALL XVSIGNAL(IUNIT, ISTAT, IRETURN)
      CALL XVOPEN(IUNIT,ISTAT, 'OP', 'READ', 'U_FORMAT','HALF', ' ')

      CALL XVSIZE( STLINE, STSAMP, NLINE, NSAMP, NLI, NSI)
      CALL XVGET(IUNIT,ISTAT,'FORMAT',FORMAT, ' ')
      IF(FORMAT.NE.'BYTE')   HALF = 1
      IF (HALF.EQ.1)         IMAX = 32767

C..GET PARAMETERS

      CALL XVP('NAH',NAH,COUNT)
      CALL XVP('NAV',NAV,COUNT)
      IF ( NAH .EQ. 0  .OR.  NAV .EQ. 0)   GOTO 999
      NAH1 = NAH+1
      NAV1 = NAV+1
      IF (NAH1*NAV1 .GT. DIM_PAR/3)
     &   CALL MABEND('ERROR: NAH*NAV TOO BIG.')

      CALL XVPARM('TIEPOINT',RPAR,COUNT,IDEF, DIM_PAR)
      IF (COUNT.NE.NAH1*NAV1*3)
     &   CALL MABEND('NUMBER OF TIEPOINTS DOES NOT MATCH NAH/NAV')
      PTR = 1

      CALL XVPARM( 'FIXVAL', FIXVAL, ICOUNT, IDEF, 1 )
      IF (ICOUNT .EQ. 0)  FIXVAL = 99999

C..OPEN THE OUTPUT FILE.

      CALL XVUNIT(OUNIT,'OUT',1,ISTAT, ' ')
      IRETURN = 1
      CALL XVSIGNAL(OUNIT, ISTAT, IRETURN)
      CALL XVOPEN(OUNIT, ISTAT, 'OP', 'WRITE', 'U_NL',NLINE,
     .        'U_NS',NSAMP, 'U_FORMAT','HALF', ' ' )

      DYY = RPAR(NAH1*3+PTR)-RPAR(PTR)
      DXX = RPAR(PTR+4)-RPAR(PTR+1)
      EPSX = DXX/1000.
      EPSY = DYY/1000.

C..MAKE SURE THE SPACING IS UNIFORM.

      DO 10 I=1,NAV1
      DO 20 J=1,NAH1
      IF(I.EQ.NAV1)GOTO 15
      IF(ABS(RPAR(NAH1*3+PTR)-RPAR(PTR)-DYY).GE.EPSY)GOTO 998
   15 IF(J.EQ.NAH1)GOTO 16
      IF(ABS(RPAR(PTR+4)-RPAR(PTR+1)-DXX).GE.EPSX) GOTO 998
   16 PTR = PTR+3
   20 CONTINUE
   10 CONTINUE

      ELINE = STLINE + NLINE - 1
      ESAMP = STSAMP + NSAMP - 1

C..STORE THE LINE AND SAMPLE NUMBERS FOR THE ROWS AND COLUMNS OF THE TIEPOINT
C..GRID.

      DO IAV = 1, NAV1
         LINES(IAV) = RPAR(1 + 3*NAH1* (IAV-1) )
      END DO

      DO IAH = 1, NAH1
         SAMPS(IAH) = RPAR(2 + 3* (IAH-1) )
      END DO

C..FIND THE GRID CELLS THAT CONTAIN (STLINE,STSAMP) AND (ELINE,ESAMP).
C..USUALLY THIS WILL BE THE FIRST AND THE LAST, AND WE WILL END UP WITH
C..   IAVBEG=IAHBEG=1  AND IAVEND=NAV AND IAHEND=NAH.

      IAVBEG = 2
      DO WHILE( LINES(IAVBEG) .LE. STLINE .AND. IAVBEG .LT. NAV1 )
         IAVBEG = IAVBEG+1
      END DO
      IAVBEG = IAVBEG-1

      IAVEND = NAV
      DO WHILE( LINES(IAVEND) .GE. ELINE .AND. IAVEND .GT. 1)
         IAVEND = IAVEND-1
      END DO

      IAHBEG = 2
      DO WHILE( SAMPS(IAHBEG) .LE. STSAMP .AND. IAHBEG .LT. NAH1 )
         IAHBEG = IAHBEG+1
      END DO
      IAHBEG = IAHBEG-1

      IAHEND = NAH
      DO WHILE( SAMPS(IAHEND) .GE. ESAMP .AND. IAHEND .GT. 1)
         IAHEND = IAHEND-1
      END DO

C..THIS IS NOT QUITE AN OUTER LINE LOOP WITH AN INNER SAMPLE LOOP.
C..WE LOOP OVER THE ROWS OF GRID CELLS. FOR EACH ROW WE COMPUTE THE 
C..TRANSFORMATIONS TO BE APPLIED AND THEN TRANSFORM THE LINES OF THE CELLS.
C..THIS PROCESSES THE LINES OF THE IMAGE IN CONSECUTIVE ORDER.

      DO IAV = IAVBEG, IAVEND
         IF (IAV .EQ. IAVBEG)  THEN
            LBEG = STLINE           ! BEGINNING AND ENDING LINES FOR THIS ROW.
         ELSE 
            LBEG = LEND+1
         END IF

         IF (IAV .EQ. IAVEND)  THEN
            LEND = ELINE
         ELSE 
            LEND = LINES(IAV+1)
         END IF

         DO IAH = IAHBEG, IAHEND
           IF (IAH .EQ. IAHBEG)  THEN
              SBEG = STSAMP        ! BEGINNING AND ENDING SAMPS FOR THIS COLUMN.
           ELSE 
              SBEG = SEND+1
           END IF

           IF (IAH .EQ. IAHEND)  THEN
              SEND = ESAMP
           ELSE 
              SEND = SAMPS(IAH+1)
           END IF

           DX = SAMPS(IAH+1) - SAMPS(IAH)
           DY = LINES(IAV+1) - LINES(IAV)

           PTR1 = 3 + 3*(IAH-1) + 3*NAH1* (IAV-1)

C..COMPUTE VAL(IAH), THE FIRST DZ VALUE FOR THIS CELL, BY USING BILINEAR
C..INTERPOLATION FROM THE VALUES (F1,F2,F3,F4) FOR THE FOUR TIEPOINTS FOR
C..THE CELL.

           F1 = RPAR( PTR1 )
           F2 = RPAR( PTR1 +3)
           F3 = RPAR( PTR1 +3*NAH1)
           F4 = RPAR( PTR1 +3*NAH1+3)

           VALA = F1 + (F2-F1) * (SBEG-SAMPS(IAH) ) / DX
           VALB = F3 + (F4-F3) * (SBEG-SAMPS(IAH) ) / DX

           VAL(IAH) = VALA + (VALB-VALA)* (LBEG-LINES(IAV))/DY

C..THE DZ VALUES FOR THE REST OF THE CELL WILL BE COMPUTED BY ADJUSTING
C..THE INITIAL VALUE BY A LINE INCREMENT (INCL) AT THE START OF EACH LINE
C..OF THE CELL AND ADJUSTING THE VALUE BY A SAMPLE INCREMENT (INCS) WITHIN
C..EACH LINE OF THE CELL.

           LVAL(IAH) = VAL(IAH)
           INCL(IAH) = (VALB-VALA) / DY
           COEFF(IAH) = ( F4-F2+F1-F3 ) / (DY*DX)
           INCS(IAH) = (F2-F1)/DX  +  COEFF(IAH) * ( LBEG-LINES(IAV) )

         END DO

C..NOW THE LINE LOOP FOR THIS ROW.

         DO LINE = LBEG,LEND

           IF ( LINE .EQ. STLINE )   THEN
             CALL XVREAD( IUNIT, WORK, ISTAT, 'LINE', STLINE, ' ' )
           ELSE
             CALL XVREAD( IUNIT, WORK, ISTAT, ' ' )
           END IF

C..LOOP THROUGH THE CELLS FOR THIS LINE.

           DO IAH = IAHBEG, IAHEND
             IF (IAH .EQ. IAHBEG)  THEN
                SBEG = STSAMP      ! BEGINNING AND ENDING SAMPS FOR THIS COLUMN.
             ELSE 
                SBEG = SEND+1
             END IF

             IF (IAH .EQ. IAHEND)  THEN
                SEND = ESAMP
             ELSE 
                SEND = SAMPS(IAH+1)
             END IF

C..LOOP THROUGH THE SAMPLES FOR EACH CELL.

             DO J = SBEG, SEND
                IF (WORK(J) .NE. FIXVAL)  THEN
                   DZ = NINT( VAL(IAH) )
                   IMVAL = WORK(J)+DZ
                   IF(IMVAL .LT. 0)IMVAL = 0
                   IF(IMVAL .GT. IMAX)IMVAL = IMAX
                   WORK(J) = IMVAL
                END IF
                VAL(IAH) = VAL(IAH) + INCS(IAH)
             END DO

C..SET UP FOR NEXT LINE OF THIS CELL.

             INCS(IAH) = INCS(IAH) + COEFF(IAH)
             VAL(IAH)  = LVAL(IAH) + INCL(IAH)
             LVAL(IAH) = VAL(IAH)

           END DO

           CALL XVWRIT(OUNIT, WORK(STSAMP), ISTAT, ' ')

        END DO
      END DO

      CALL XVCLOSE( IUNIT, ISTAT, ' ' )
      CALL XVCLOSE( OUNIT, ISTAT, ' ' )
      RETURN

  998 CALL XVMESSAGE('TIEPOINTS NOT EVENLY SPACED', ' ')
      CALL ABEND
  999 CALL XVMESSAGE('PARM ERROR', ' ')
      CALL ABEND
      RETURN
      END
