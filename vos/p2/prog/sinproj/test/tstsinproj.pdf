!------------------------------------------------------------------------------
!
!      TSTSINPROJ.PDF
!------------------------------------------------------------------------------
procedure
parm data string default = gendata  valid=(gendata,nodata)
refgbl $syschar  !! Glogal variable for VAX_VMS or UNIX test
refgbl $echo
refgbl $autousage
body
enable-log

let $autousage="none"
let _onfail="continue"
let $echo="no"
write " The Test Data are handeled for both VMS and UNIX in this PDF."
write " At present (October 1994), in order to run this program, the"
write " following data files MUST be created on the VAX-VMS system"
write " and then copied to the local directory on the UNIX system "
write " where the program resides.  The switch GENDATA must be set"
write " when running on the VAX-VMS system to generate the data. On" 
write " the UNIX system, the NODATA switch musr be set. The program"
write " BIN-INIT which generates the test files has not been ported "
write " for the UNIX system."
write " "
write " "
write " terr.out  "
write " wei.out"
write " "
write " "
let $echo="yes"
if (data = "gendata")
!---------------------------------------------------------------------------
let $echo="no"
write " Generation of GEN terrain"
let $echo="yes"
IF ($syschar(1) = "UNIX")
!   bin-init out=(terrain,weight)  +
!         filetype=gtei oformat=half +
!         lat_uc=90.0 lat_lc=-90.0 +
!         nl=128 ns=256 +
!         proj_lon=180.0 projsamp=128

   gen out=gen8x16.out +
      nl=8     ns=16  format=half+
      linc=1.0    sinc=1.0     binc=0.0     ival=1.0

   size inp=gen8x16.out out=size.out noin=noin zoom=16 

   label-switch inp=(terrain, size.out) +
                out=terr.out

   label-list terr.out 'nousrtim
   list terr.out linc=10 sinc=10 'nousrtim

   ush rm gen8x16.out
   ush rm size.out
!   ush rm terrain

   gen out=gen8x16.out +
       nl=8     ns=16  format=real+
       linc=1.0    sinc=1.0     binc=0.0     ival=1.0

   size inp=gen8x16.out out=size.out noin=noin zoom=16 

   label-switch inp=(weight, size.out) +
                out=wei.out

   label-list wei.out 'nousrtim
   list wei.out linc=10 sinc=10 'nousrtim

   ush rm wei.out
   ush rm gen8x16.out
   ush rm size.out
!   ush rm weight

ELSE !! Must be VAX_VMS
   barf
!   
   bin-init out=( v2$scratch:terrain, v2$scratch:weight )  +
         filetype=gtei  oformat=half  +
         lat_uc=90.0  lat_lc=-90.0  +
         nl=128   ns=256   +
         proj_lon=180.0  projsamp=128  

   gen out=v2$scratch:gen8x16.out +
      nl=8     ns=16  format=half+
      linc=1.0    sinc=1.0     binc=0.0     ival=1.0

   size inp=v2$scratch:gen8x16.out out=v2$scratch:size.out noin=noin zoom=16 

   label-switch inp=(v2$scratch:terrain, v2$scratch:size.out) +
                out=v2$scratch:terr.out

   dcl delete v2$scratch:gen8x16.out;*
   dcl delete v2$scratch:size.out;*
   dcl delete v2$scratch:terrain.*;*

   gen out=v2$scratch:gen8x16.out +
       nl=8     ns=16  format=real+
       linc=1.0    sinc=1.0     binc=0.0     ival=1.0

   size inp=v2$scratch:gen8x16.out out=v2$scratch:size.out noin=noin zoom=16

   label-switch inp=(v2$scratch:weight, v2$scratch:size.out) +
                out=v2$scratch:wei.out

   dcl delete v2$scratch:gen8x16.out;*
   dcl delete v2$scratch:size.out;*
   dcl delete v2$scratch:weight.*;*
!
END-IF !! End Test for VAX_VMS or UNIX for data initialization
!
   let _onfail="continue"
let $echo="no"
write " End generation of GEN terrain "
end-if !! End generation of GEN terrain
let $echo="no"
!------------------------------------------------------------------------------
write " Begin SINPROJ test PDF"
write " Test that default reprojecion of whole image works ... display tsta."
write " - it should look the same as terrain"
let $echo="yes"
let _onfail="continue"


IF ($syschar(1) = "UNIX")

   label-list terr.out 'nousrtim
   sinproj inp = terr.out out = tsta.out 
   label-list tsta.out 'nousrtim
   list tsta.out linc=10 sinc=20 'nousrtim

   !----------------------------------------------------------------------------
   let $echo="no"

   write " Test that default new projsamp and proj_lon are correct ... "
   write " projsamp should be 128 and proj_lon should be about 180.0"
   let $echo="yes"

   sinproj inp = terr.out out = tstb.out  +
           ss = 75 ns = 100 
   label-list tstb.out 'nousrtim
   list tstb.out linc=10 sinc=10 'nousrtim

   !----------------------------------------------------------------------------
   let $echo="no"
   write " This should produce an image similar to tstb.out,"
   write " there may be small differences if lon_cl, lon_cr, proj_lon, "
   write " ss, ns, and projsamp are compared between the two images because "
   write " tstb.out is specified by sample and tstc.out"
   write " is specified by longitude"
   let $echo="yes"

   sinproj inp = terr.out out = tstc.out  +
           lon_cl = 45  lon_cr = 90 
   label-list tstc.out 'nousrtim
   list tstc.out linc=10 sinc=2 'nousrtim

   sinproj inp = terr.out out = tstc2.out  +
           lon_cl = 90  lon_cr = 135 
   label-list tstc2.out 'nousrtim
   list tstc2.out linc=10 sinc=2 'nousrtim

   !----------------------------------------------------------------------------
   let $echo="no"
   write " Some other tests"
   let $echo="yes"

   sinproj inp = tstc.out out = tstd.out  +
                 sl = 25 nl = 100 
   label-list tstd.out 'nousrtim
   list tstd.out linc=10 sinc=2 'nousrtim
   
   sinproj inp = tstc.out out = tste.out  +
                 lat_uc=45 lat_lc=15 
   label-list tste.out 'nousrtim
   list tste.out linc=2 sinc=2 'nousrtim

   sinproj inp = tstc.out out = tstg.out projsamp=15 
   label-list tstg.out 'nousrtim
   list tstg.out linc=10 sinc=2 'nousrtim

   sinproj inp = tstc.out out = tsth.out proj_lon=80 
   label-list tsth.out 'nousrtim
   list tsth.out linc=10 sinc=2 'nousrtim

   !----------------------------------------------------------------------------
   let $echo="no"
   write " Test that some of the error messages work"
   let $echo="yes"

   sinproj inp = tstc.out out = tsth.out +
                 proj_lon=150 
   sinproj inp = terr.out out = tstx.out +
                 ss=50 lon_cl=45 
   sinproj inp = terr.out out = tstx.out +
                 ns=100 lon_cr=90 
   sinproj inp = terr.out out = tstx.out +
                 sl=50 lat_uc=45 
   sinproj inp = terr.out out = tstx.out +
                 nl=50 lat_lc=0 
   sinproj inp = terr.out out = tstx.out ss=0 
   sinproj inp = terr.out out = tstx.out projsamp=0 
   sinproj inp = terr.out out = tstx.out projsamp=-10 

   ush rm terr.out
   ush rm tsta.out
   ush rm tstb.out
   ush rm tstc.out
   ush rm tstc2.out
   ush rm tstd.out
   ush rm tste.out
   ush rm tstg.out
   ush rm tsth.out
!
ELSE !! Else must be VAX_VMS
!   
   label-list v2$scratch:terr.out
   sinproj inp = v2$scratch:terr.out out = v2$scratch:tsta.out 
   label-list v2$scratch:tsta.out

   !----------------------------------------------------------------------------
   let $echo="no"

   write " Test that default new projsamp and proj_lon are correct ... "
   write " projsamp should be 128 and proj_lon should be about 180.0"
   let $echo="yes"

   sinproj inp = v2$scratch:terr.out out = v2$scratch:tstb.out  +
           ss = 75 ns = 100 
   label-list v2$scratch:tstb.out

   !----------------------------------------------------------------------------
   let $echo="no"
   write " This should produce an image similar to v2$scratch:tstb.out,"
   write " there may be small differences if lon_cl, lon_cr, proj_lon, "
   write " ss, ns, and projsamp are compared between the two images because "
   write " v2$scratch:tstb.out is specified by sample and v2$scratch:tstc.out"
   write " is specified by longitude"
   let $echo="yes"

   sinproj inp = v2$scratch:terr.out out = v2$scratch:tstc.out  +
           lon_cl = 45  lon_cr = 90 
   label-list v2$scratch:tstc.out

   sinproj inp = v2$scratch:terr.out out = v2$scratch:tstc2.out  +
           lon_cl = 90  lon_cr = 135 
   label-list v2$scratch:tstc.out

   !----------------------------------------------------------------------------
   let $echo="no"
   write " Some other tests"
   let $echo="yes"

   sinproj inp = v2$scratch:tstc.out out = v2$scratch:tstd.out  +
                 sl = 25 nl = 100 
   label-list v2$scratch:tstd.out

   sinproj inp = v2$scratch:tstc.out out = v2$scratch:tste.out  +
                 lat_uc=45 lat_lc=15 
   label-list v2$scratch:tste.out

   sinproj inp = v2$scratch:tstc.out out = v2$scratch:tstg.out +
           projsamp=15 
   label-list v2$scratch:tstg.out

   sinproj inp = v2$scratch:tstc.out out = v2$scratch:tsth.out +
           proj_lon=80 
   label-list v2$scratch:tsth.out

   !----------------------------------------------------------------------------
   let $echo="no"
   write " Test that some of the error messages work"
   let $echo="yes"

   sinproj inp = v2$scratch:tstc.out out = v2$scratch:tsth.out +
                 proj_lon=150 
   sinproj inp = v2$scratch:terr.out out = v2$scratch:tstx.out +
                 ss=50 lon_cl=45 
   sinproj inp = v2$scratch:terr.out out = v2$scratch:tstx.out +
                 ns=100 lon_cr=90 
   sinproj inp = v2$scratch:terr.out out = v2$scratch:tstx.out +
                 sl=50 lat_uc=45 
   sinproj inp = v2$scratch:terr.out out = v2$scratch:tstx.out +
                 nl=50 lat_lc=0 
   sinproj inp = v2$scratch:terr.out out = v2$scratch:tstx.out +
                 ss=0 
   sinproj inp = v2$scratch:terr.out out = v2$scratch:tstx.out +
                 projsamp=0 
   sinproj inp = v2$scratch:terr.out out = v2$scratch:tstx.out +
                 projsamp=-10 

   dcl delete v2$scratch:tsta.out;*
   dcl delete v2$scratch:tstb.out;*
   dcl delete v2$scratch:tstc.out;*
   dcl delete v2$scratch:tstc2.out;*
   dcl delete v2$scratch:tstd.out;*
   dcl delete v2$scratch:tste.out;*
   dcl delete v2$scratch:tstg.out;*
   dcl delete v2$scratch:tsth.out;*
!
END-IF !! Test for VAX_VMS or UNIX
!
let $echo="no"
write " End SINPROJ test PDF"
disable-log
end-proc
