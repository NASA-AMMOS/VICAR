                Version 5C/16C

      ***********************************************************
      *                                                         *
      * VICAR Supervisor version 5C, TAE V5.2                   *
      *   Debugger is now supported on all platforms            *
      *   USAGE command now implemented under Unix              *
      *                                                         *
      * VRDI and VIDS now support X-windows and Unix            *
      * New X-windows display program: xvd (for all but VAX/VMS)*
      *                                                         *
      * VICAR Run-Time Library version 16C                      *
      *   '+' form of temp filename now avail. on all platforms *
      *   ANSI C now fully supported                            *
      *                                                         *
      * See B.Deen(RGD059) with problems                        *
      *                                                         *
      ***********************************************************

  --- Type NUT for the New User Tutorial ---

  --- Type MENU for a menu of available applications ---

*************************************************
THIS IS A TEST OF MODULE ROTATE2
We will rotate a gen'd image by -45 deg such that
shading should appear in the sample direction only
*************************************************
gen A nl=15 ns=15 ival=90
Beginning VICAR task gen
GEN Version 6
GEN task completed
list A
Beginning VICAR task list

   BYTE     samples are interpreted as   BYTE   data
 Task:GEN       User:wlb       Date_Time:Wed Dec 16 15:52:03 2015
     Samp     1       3       5       7       9      11      13      15
   Line
      1      90  91  92  93  94  95  96  97  98  99 100 101 102 103 104
      2      91  92  93  94  95  96  97  98  99 100 101 102 103 104 105
      3      92  93  94  95  96  97  98  99 100 101 102 103 104 105 106
      4      93  94  95  96  97  98  99 100 101 102 103 104 105 106 107
      5      94  95  96  97  98  99 100 101 102 103 104 105 106 107 108
      6      95  96  97  98  99 100 101 102 103 104 105 106 107 108 109
      7      96  97  98  99 100 101 102 103 104 105 106 107 108 109 110
      8      97  98  99 100 101 102 103 104 105 106 107 108 109 110 111
      9      98  99 100 101 102 103 104 105 106 107 108 109 110 111 112
     10      99 100 101 102 103 104 105 106 107 108 109 110 111 112 113
     11     100 101 102 103 104 105 106 107 108 109 110 111 112 113 114
     12     101 102 103 104 105 106 107 108 109 110 111 112 113 114 115
     13     102 103 104 105 106 107 108 109 110 111 112 113 114 115 116
     14     103 104 105 106 107 108 109 110 111 112 113 114 115 116 117
     15     104 105 106 107 108 109 110 111 112 113 114 115 116 117 118
rotate A B1 angle=-45.
ROTATE2	INP=@INP PDS=ZZPAR SIZE=@SIZE	SL=@SL	SS=@SS	NL=@NL	NS=@NS	 +
	ANGLE=@ANGLE	NOINTERP=@NOINTERP	 +
	LINE=@LINE	SAMPLE=@SAMPLE	CENTER=@CENTER
Beginning VICAR task ROTATE2
ROTATE2 version 2015-12-16
REGION (   1,    1,   15,   15) OF THE INPUT PICTURE IS ROTATED   -45.0 DEGREES ABOUT   8.0 ,   8.0
THE CENTER OF ROTATION IN THE OUTPUT PICTURE IS LOCATED AT PIXEL        8.0,     8.0
IF ($COUNT(OUT) = 0) RETURN
LGEOM INP=A OUT=B1 SIZE=@SIZE NL=@NL NS=@NS       +
   IDSNAM=@IDSNAM IDSNS=@IDSNS PARMS=ZZPAR
Beginning VICAR task LGEOM
END-PROC
list B1
Beginning VICAR task list

   BYTE     samples are interpreted as   BYTE   data
 Task:GEN       User:wlb       Date_Time:Wed Dec 16 15:52:03 2015
 Task:LGEOM     User:wlb       Date_Time:Wed Dec 16 15:52:04 2015
     Samp     1       3       5       7       9      11      13      15
   Line
      1       0   0   0   0   0 101 103 104 105 107   0   0   0   0   0
      2       0   0   0   0 100 101 103 104 105 107 108   0   0   0   0
      3       0   0   0  98 100 101 103 104 105 107 108 110   0   0   0
      4       0   0  97  98 100 101 103 104 105 107 108 110 111   0   0
      5       0  96  97  98 100 101 103 104 105 107 108 110 111 112   0
      6      94  96  97  98 100 101 103 104 105 107 108 110 111 112 114
      7      94  96  97  98 100 101 103 104 105 107 108 110 111 112 114
      8      94  96  97  98 100 101 103 104 105 107 108 110 111 112 114
      9      94  96  97  98 100 101 103 104 105 107 108 110 111 112 114
     10      94  96  97  98 100 101 103 104 105 107 108 110 111 112 114
     11       0  96  97  98 100 101 103 104 105 107 108 110 111 112   0
     12       0   0  97  98 100 101 103 104 105 107 108 110 111   0   0
     13       0   0   0  98 100 101 103 104 105 107 108 110   0   0   0
     14       0   0   0   0 100 101 103 104 105 107 108   0   0   0   0
     15       0   0   0   0   0 101 103 104 105 107   0   0   0   0   0
let $echo="no"
*************************************************
Shift the output center of rotation and use nointerp
*************************************************
rotate A B2 angle=-45. 'noin center=(8,4)
ROTATE2	INP=@INP PDS=ZZPAR SIZE=@SIZE	SL=@SL	SS=@SS	NL=@NL	NS=@NS	 +
	ANGLE=@ANGLE	NOINTERP=@NOINTERP	 +
	LINE=@LINE	SAMPLE=@SAMPLE	CENTER=@CENTER
Beginning VICAR task ROTATE2
ROTATE2 version 2015-12-16
REGION (   1,    1,   15,   15) OF THE INPUT PICTURE IS ROTATED   -45.0 DEGREES ABOUT   8.0 ,   8.0
THE CENTER OF ROTATION IN THE OUTPUT PICTURE IS LOCATED AT PIXEL        8.0,     4.0
IF ($COUNT(OUT) = 0) RETURN
LGEOM INP=A OUT=B2 SIZE=@SIZE NL=@NL NS=@NS       +
   IDSNAM=@IDSNAM IDSNS=@IDSNS PARMS=ZZPAR
Beginning VICAR task LGEOM
END-PROC
list B2
Beginning VICAR task list

   BYTE     samples are interpreted as   BYTE   data
 Task:GEN       User:wlb       Date_Time:Wed Dec 16 15:52:03 2015
 Task:LGEOM     User:wlb       Date_Time:Wed Dec 16 15:52:04 2015
     Samp     1       3       5       7       9      11      13      15
   Line
      1     100 102 102 104 106 106 108   0   0   0   0   0   0   0   0
      2     100 101 103 104 105 107 108 110   0   0   0   0   0   0   0
      3      99 101 103 104 105 107 109 109 111   0   0   0   0   0   0
      4     100 101 102 104 106 107 108 110 111 112   0   0   0   0   0
      5     100 101 102 104 106 107 108 110 111 112 114   0   0   0   0
      6      99 101 103 104 105 107 109 109 111 113 114 115   0   0   0
      7     100 101 103 104 105 107 108 110 111 113 114 115 117   0   0
      8     100 102 102 104 106 106 108 110 112 112 114 116 116 118   0
      9     100 101 103 104 105 107 108 110 111 113 114 115 117   0   0
     10      99 101 103 104 105 107 109 109 111 113 114 115   0   0   0
     11     100 101 102 104 106 107 108 110 111 112 114   0   0   0   0
     12     100 101 102 104 106 107 108 110 111 112   0   0   0   0   0
     13      99 101 103 104 105 107 109 109 111   0   0   0   0   0   0
     14     100 101 103 104 105 107 108 110   0   0   0   0   0   0   0
     15     100 102 102 104 106 106 108   0   0   0   0   0   0   0   0
let $echo="no"
*************************************************
Now lets rotate about (10,6) [104 dn]
 and make it end up at (3,3)....and in halfword
*************************************************
gen C nl=15 ns=15 ival=90 'half
Beginning VICAR task gen
GEN Version 6
GEN task completed
list C
Beginning VICAR task list

   HALF     samples are interpreted as HALFWORD data
 Task:GEN       User:wlb       Date_Time:Wed Dec 16 15:52:04 2015
     Samp       1     2     3     4     5     6     7     8     9    10    11    12    13    14    15
   Line
      1        90    91    92    93    94    95    96    97    98    99   100   101   102   103   104
      2        91    92    93    94    95    96    97    98    99   100   101   102   103   104   105
      3        92    93    94    95    96    97    98    99   100   101   102   103   104   105   106
      4        93    94    95    96    97    98    99   100   101   102   103   104   105   106   107
      5        94    95    96    97    98    99   100   101   102   103   104   105   106   107   108
      6        95    96    97    98    99   100   101   102   103   104   105   106   107   108   109
      7        96    97    98    99   100   101   102   103   104   105   106   107   108   109   110
      8        97    98    99   100   101   102   103   104   105   106   107   108   109   110   111
      9        98    99   100   101   102   103   104   105   106   107   108   109   110   111   112
     10        99   100   101   102   103   104   105   106   107   108   109   110   111   112   113
     11       100   101   102   103   104   105   106   107   108   109   110   111   112   113   114
     12       101   102   103   104   105   106   107   108   109   110   111   112   113   114   115
     13       102   103   104   105   106   107   108   109   110   111   112   113   114   115   116
     14       103   104   105   106   107   108   109   110   111   112   113   114   115   116   117
     15       104   105   106   107   108   109   110   111   112   113   114   115   116   117   118
rotate C D angle=-45. line=10 samp=6 center=(3,3)
ROTATE2	INP=@INP PDS=ZZPAR SIZE=@SIZE	SL=@SL	SS=@SS	NL=@NL	NS=@NS	 +
	ANGLE=@ANGLE	NOINTERP=@NOINTERP	 +
	LINE=@LINE	SAMPLE=@SAMPLE	CENTER=@CENTER
Beginning VICAR task ROTATE2
ROTATE2 version 2015-12-16
REGION (   1,    1,   15,   15) OF THE INPUT PICTURE IS ROTATED   -45.0 DEGREES ABOUT  10.0 ,   6.0
THE CENTER OF ROTATION IN THE OUTPUT PICTURE IS LOCATED AT PIXEL        3.0,     3.0
IF ($COUNT(OUT) = 0) RETURN
LGEOM INP=C OUT=D SIZE=@SIZE NL=@NL NS=@NS        +
  IDSNAM=@IDSNAM IDSNS=@IDSNS PARMS=ZZPAR
Beginning VICAR task LGEOM
END-PROC
list D
Beginning VICAR task list

   HALF     samples are interpreted as HALFWORD data
 Task:GEN       User:wlb       Date_Time:Wed Dec 16 15:52:04 2015
 Task:LGEOM     User:wlb       Date_Time:Wed Dec 16 15:52:04 2015
     Samp       1     2     3     4     5     6     7     8     9    10    11    12    13    14    15
   Line
      1       101   103   104   105   107   108   110   111   112   114   115   117     0     0     0
      2       101   103   104   105   107   108   110   111   112   114   115     0     0     0     0
      3       101   103   104   105   107   108   110   111   112   114     0     0     0     0     0
      4       101   103   104   105   107   108   110   111   112     0     0     0     0     0     0
      5       101   103   104   105   107   108   110   111     0     0     0     0     0     0     0
      6       101   103   104   105   107   108   110     0     0     0     0     0     0     0     0
      7       101   103   104   105   107   108     0     0     0     0     0     0     0     0     0
      8       101   103   104   105   107     0     0     0     0     0     0     0     0     0     0
      9         0   103   104   105     0     0     0     0     0     0     0     0     0     0     0
     10         0     0   104     0     0     0     0     0     0     0     0     0     0     0     0
let $echo="no"
