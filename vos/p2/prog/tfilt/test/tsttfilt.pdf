procedure
refgbl $echo
body
let _onfail="continue"
let $echo="yes"

GEN OUT=GEN NL=20 NS=17 ! generate a picture with byte format
LIST INP=GEN 'ZEROES ! check input data
tfilt INP=GEN OUT=(TEST1,X)  ! run tfilt - default all optional parameters
LIST INP=TEST1 'ZEROES
tfilt INP=GEN OUT=(TEST2,X) ! run tfilt with byte
LIST INP=TEST2 'ZEROES
! run tfilt with byte and nlw
tfilt INP=GEN OUT=(TEST4,X) NLW=3
LIST INP=TEST4  'ZEROES
! run tfilt with byte, nls and nsw
tfilt INP=GEN OUT=(TEST6,X) NLW=2 NSW=3
LIST INP=TEST6 'ZEROES
! run tfilt with byte, nls, nsw and thresh
tfilt INP=GEN OUT=(TEST7,X) NLW=2 NSW=3 THRESH=4
LIST INP=TEST7 'ZEROES
! run tfilt with nlw, nsw, thresh and high
tfilt INP=GEN OUT=(TEST8,X) NLW=3 NSW=3 THRESH=4 'HIGH
LIST INP=TEST8 'ZEROES
! run tfilt with thresh, scene
tfilt INP=GEN OUT=(TEST9,X) THRESH=3 'SCENE
LIST INP=TEST9 'ZEROES
tfilt INP=GEN OUT=(TEST10,X) NLW=4 'LOW !run tfilt with nlw and low
LIST INP=TEST10 'ZEROES
tfilt INP=GEN OUT=(TEST11,X) 'DIVIDE ! run tfilt with divide
LIST INP=TEST11 'ZEROES
! run tfilt with nlw and high - define boost,dctran, dclevel
tfilt INP=GEN OUT=(TEST12,X) NLW=2 'HIGH BOOST=2 DCTRAN=0.1 DCLEVEL=50.0
LIST INP=TEST12 'ZEROES
!run tfilt with nlw, nsw, and low - define boost  and offset
tfilt INP=GEN OUT=(TEST14,X) NLW=2 NSW=4 'LOW BOOST=2.00 OFFSET=20.
LIST INP=TEST14 'ZEROES

! run tfilt with halfword and nsw
GEN OUT=HGEN NL=20 NS=22 'HALF !generate a picture with halfword format
LIST INP=HGEN 'ZEROES
tfilt INP=HGEN OUT=(TEST3,X) ! run tfilt with halfword
LIST INP=TEST3 'ZEROES
tfilt INP=HGEN OUT=(TEST5,X) NSW=2
LIST INP=TEST5 'ZEROES
!run tfilt with halfword, nlw, nsw, thresh, scene, scale, dctran and dclevel
tfilt INP=HGEN OUT=(TEST13,X) NLW=2 NSW=2 THRESH=4 'SCENE +
 SCALE=200.0 DCTRAN=0.3 DCLEVEL=10
LIST  INP=TEST13  'ZEROES

! test multispectral option
GEN OUT=MGEN NL=20 NS=22 NB=10 'HALF ! generate a halfword multispectral file 
tfilt INP=MGEN OUT=(TEST15,X,Y) NLW=2 NSW=2 THRESH=4 'LOW
LIST  INP=TEST15 'ZEROES sinc=2 binc=2

! TEST FOR LARGE HALFWORD FILE, FULL DATA RANGE
Gen hgen_1 nl=500 ns=8000 Linc=20 Sinc=5 'Half
tfilt hgen_1 (test1_1,x) 'LOW
List test1_1 (1,1,10,10)
List test1_1 (1,6545,20,20)

! run tfilt with fullword
GEN OUT=HGEN NL=20 NS=22 'full
LIST INP=HGEN 'ZEROES
tfilt INP=HGEN OUT=(TEST3,X)
LIST INP=TEST3 'ZEROES
tfilt INP=HGEN OUT=(TEST3,X) 'high
LIST INP=TEST3 'ZEROES
tfilt INP=HGEN OUT=(TEST3,X) 'scene
LIST INP=TEST3 'ZEROES
tfilt INP=HGEN OUT=(TEST3,X) 'low
LIST INP=TEST3 'ZEROES


! run tfilt with real:
GEN OUT=HGEN NL=20 NS=22 'real
LIST INP=HGEN 'ZEROES
tfilt INP=HGEN OUT=(TEST3,X)
LIST INP=TEST3 'ZEROES
tfilt INP=HGEN OUT=(TEST3,X) 'high
LIST INP=TEST3 'ZEROES
tfilt INP=HGEN OUT=(TEST3,X) 'scene
LIST INP=TEST3 'ZEROES
tfilt INP=HGEN OUT=(TEST3,X) 'low
LIST INP=TEST3 'ZEROES

! clean up:
ush rm -f ?
ush rm -f TEST?
ush rm -f TEST??
ush rm -f GEN
ush rm -f ?GEN
ush rm -f hgen_1
ush rm -f test1_1

end-proc
