process help=*
 !
 PARM INP     TYPE=STRING COUNT=1
 PARM OUT     TYPE=STRING COUNT=1
 PARM SIZE    TYPE=INTEGER COUNT=0:4 DEFAULT=(1,1,0,0)
 PARM SL      TYPE=INTEGER COUNT=0:1 DEFAULT=1
 PARM SS      TYPE=INTEGER COUNT=0:1 DEFAULT=1
 PARM NL      TYPE=INTEGER COUNT=0:1 DEFAULT=0
 PARM NS      TYPE=INTEGER COUNT=0:1 DEFAULT=0
 PARM FORMAT  KEYWORD COUNT=0:1 VALID=HALF DEFAULT=--
 PARM INTERP  TYPE=KEYWORD COUNT=0:1 VALID=(NOIN,ZNOIN) DEFAULT=--
 PARM NAH TYPE=INTEGER,VALID=(1:200) default=1
 PARM NAV TYPE=INTEGER,VALID=(1:3000) default=1
 PARM HVARY KEYWORD COUNT=0:1 VALID=HVARY DEFAULT=--
 PARM TIEPOINT TYPE=REAL,COUNT=0:600 default=--
 PARM PARMS   TYPE=STRING  COUNT=0:1  DEFAULT=--
 !
 END-PROC
!
! HELP TEXT FOR MGEOM
.TITLE
MGEOM - Program to perform geometric transformations on images.
.HELP
PURPOSE
     MGEOM is a VICAR applications program which makes geometric
     changes in pictures.  It can be used for many purposes including
     correcting geometric distortion, increasing picture size, reducing 
     picture size, and rotating a picture.  The ported MGEOM uses a 
     different algorithm than the unported MGEOM and has different
     characteristics.  The following are the principal differences
     with respect to the programs LGEOM and GEOMA (note the difference
     with the claims of the unported MGEOM):

	1. MGEOM is NO LONGER as fast or faster.
	2. MGEOM and GEOMA are more accurate as of April 1996.
           LGEOM should have comparable accuracy soon after.
	3. Preparation of "sharp edges" for mosaicking appears to
           be available using ZNOIN (MGEOM) and NOIZ (LGEOM).
           It appears that LGEOM is better at this.
	5. No limits on size of input/output pictures in MGEOM.
	6. No limits on size of interpolation grid in MGEOM.
	7. MGEOM now has "bad cases" involving excessive rereading of files.

     The unported version of MGEOM had the following requirement:
	1. Maximum allowed rotation is 85 degrees.
     I do not believe this to be the case with the ported version.


CALL
     mgeom INPUT OUTPUT SIZE '(QUALIFIERS) TIEPOINT-GRID
  WHERE:
     INPUT          is the input data set.
     OUTPUT         is the output data set.
     SIZE           is a VICAR size field for the output file
     QUALIFIERS     consist of any of the following keywords:
          NOIN          no interpolation is to be done.
          ZNOIN         no interpolation for points with 0 DN.
     TIEPOINT-GRID      is a collection of parameters as follows:


     The TIEPOINT-GRID is a set of points describing the relation
of the output file to that of the input file using the keywords
NAH, NAV, and TIEPOINT.
   NAH=nah  NAV=nav
     tiepoint=(nl1,ns1,ol1,os1,nl2,ns2,ol2,os2,...
                   ...nlk,nsk,olk,osk)

where the grid is rectangular in the output image space, nah is
the number of grid cells horizontally (across the top in the sample
direction), nav is the number of grid cells vertically in the output
image space, the point pairs (nli,nsi,oli,osi) are line-sample
coordinates in the output (new) and input (old) spaces respectively.
the number of pairs k must equal (nah+1)*(nav+1).  The grid must be
perfectly rectangular in the output image space (the rows and
columns must be perfectly horizontal and vertical respectively).

The input image may either be byte or halfword data.  The data format is taken
from the VICAR label of the input file.  The output image has the same data 
format (byte or halfword) as the input image.  

The HELP for program GEOMA has additional details.

     For those used to the unported version, note that there used
to be an output file parameter, IDS.  I.e. you used to have to
specify an intermediate data set.  This is no longer the case
with MGEOM.  Also, for a non-uniform tie point grid, there used
to be an 'HVARY qualifier.  Non-uniform spacing of tie points is
no longer a special case, so the HVARY parameter is now obsolete.
However, for backwards compatability, you can still specify the
parameter; it will simply be ignored.

OPERATION

MGEOM uses a moderate amount of space in its calculation arrays.  The
program implements a recursive tiling scheme so that it only loads a
fraction of the input file into memory if the entire input file is too
large.  However, this tiling scheme should be transparent
to the user.

PERFORMANCE

Each cell of the tiepoint grid is a separate tile (or more than 1) in this 
algorithm with its own set of disk reads and writes.  For a typical tiepoint
grid, this may result in a large time (elapsed wall-clock time) spent on 
disk I/O.

For example, the following statistics were obtained on an Alpha (coda2) for
the case of a BYTE input image with a size of 1024 lines by 1024 samples and
a tiepoint grid with NAH=9=NAV (smaller than typical).

             CPU TIME     WALL-CLOCK (CONNECT) TIME
LGEOM          1.34s       2.89s
MGEOM          3.45s      22.75s

The number of disk reads and writes is proportional to NAH*NAV.  The defaults
from PICREG are NAH=20=NAV.
.PAGE
Restrictions
------------

Warning:  If "nl" or "ns" exceeds the grid corner tie points, the interpolation
algorithm may become unstable and cause the program to crash.  It is advised 
that the user limit the number of output lines and samples to the grid corner
tie point limits. 
.PAGE
Original Programmer: A. L. Zobrist, 6 Dec. 1979
Complete scratch rewrite: S.V. Hwan, 8 Nov. 1994
Current Cognizant Programmer: B. A. McGuffie
.LEVEL1
.VARI INP
Input file name
.VARI OUT
Output file name
.VARI SIZE
Standard VICAR Size Field
.VARI SL
Starting line for output
.VARI SS
Starting sample for output
.VARI NL
Number of lines for output
* See restrictions
.VARI NS
Number of samples for output
* See restrictions
.VARI INTERP
interpolation options
Valid: NOIN,ZNOIN
.VARI FORMAT
FORMAT is ignored.
.VARI NAH
number of grid
cells horizontally
.VARI NAV
number of grid
cells vertically
.VARI TIEPOINT
grid corner tiepoints in
rows NL1,NS1,OL1,OS1,...
.VARI PARMS
previously saved parameter dataset
.LEVEL2
.VARI INP
Input file name.  This parameter is input as:
     INP=innam
where "innam" is the input file name.
.VARI OUT
Output and intermediate file names. This parameter is input as:
     OUT=outnam
where:
"outnam" is the output file name, and

.VARI SIZE
The size field is specified with four arguments,
     SIZE=(a,b,c,d)
where:
a is the starting line number of the output picture.
b is the starting sample of the output picture.
c is the number of lines, and
d is the number of samples
For example, SIZE=(1,1,40,50)
would create an output picture of size 40 lines by 50 bytes.
The size field can be thought of as a window relative to the output
grid.  The first two values offset the window down and to the right
causing the features in the image to move up and to the left.
.VARI SL
SL can be used to specify the starting line of the output picture.
This is actually a coordinate relative to the output grid, therefore,
it offsets the output picture by (SL - 1.)  The default for SL is 1.
.VARI SS
SS can be used to specify the starting sample of the output picture.
This is actually a coordinate relative to the output grid, therefore,
it offsets the output picture by (SS - 1.)  The default for SS is 1.
.VARI NL
NL can be used in conjunction with NS in place of the SIZE
parameter to specify the size of the output picture.  It simply
represents the number of lines for output.
* See restrictions for more information
.VARI NS
NS can be used in conjunction with NS in place of the SIZE
parameter to specify the size of the output picture.  It simply
represents the number of bytes for output.
* See restrictions for more information
.VARI INTERP
This parameter has two valid keyword values: NOIN and ZNOIN.

NOIN means no interpolation.  The default method (used when neither keyword 
is specified) for computing the
DN values of the output picture is to use a bi-linear interpolation
on the four nearest neighbors in the input picture.  With NOIN, the
value of the nearest point is simply used.
For example, say a point in the output picture was determined
to have come from point (R,P) in the input picture.  Since R and P
are real values, we must somehow calculate a DN value for that
point.  Take IR and IP as the truncated values.  We then have
          VAL1                                 VAL2
           *                                    *
         (IR,IP)                              (IR,IP+1)
                     POINT
                       *
                     (R,P)
          VAL3                                 VAL4
           *                                    *
         (IR+1,IP)                           (IR+1,IP+1)
Here, POINT is the result of a bilinear interpolation using
VAL1, VAL2, VAL3, and VAL4.
If NOIN is specified, then POINT would be VAL1, the nearest
neighbor.

ZNOIN specifies that a four-point interpolation is done except
when one or more of the points used has a value equal to zero. 
In that case the nearest method is used.
This allows preparation of sharp edges (no interpolation rolloff)
for mosaicking.

.VARI FORMAT
The format is obtained from the input image label. 
.VARI NAH
the nah is number of grid cells horizontally, the number of tiepoints 
across is one larger (nah+1).
.VARI NAV
the nav is number of grid cells vertically, the number of tiepoints
vertically is one larger (nav+1).
.VARI TIEPOINT
There are four real numbers for each tiepoint , the first two are the
line-sample coordinate in the output, the second two are the line-sample
coordinate in the input which is mapped to the point in the output.  There must
be (nah+1)*(nav+1) tiepoints (quadruple)s aligned in a perfectly horizontal 
and vertical grid.
.VARI PARMS
A parameter data set containing the geom parameters.  This file should
have been written by a program which uses the XVP routines for writing
parameter data sets.  This is the most common means by which the parameters
NAH, NAV, and TIEPOINT are passed.
.END
