procedure
refgbl $echo
! Jun 26, 2012 - RJB
! TEST SCRIPT FOR STATS
! tests BYTE, HALF, FULL, REAL images
!
! Vicar Programs:
!       gen mss statplt
! 
! parameters:
!   <none>
!
! Requires NO external test data: 
!
!  the *.gpi data produced by statplt are gnuplot scripts
!
body
let _onfail="stop"
let $echo="yes"
!
!  Test script for Vicar routine STATS
!
gen stats.gn1 nl=128 ns=128
gen stats.gn2 nl=128 ns=128 sinc=2 linc=2
gen stats.gn3 nl=128 ns=128 sinc=4 linc=4
!
!  First tests will check standard image format files
!
! Copy first band and scribe training areas on this image
stats (stats.gn1,stats.gn2,stats.gn3) (stats.st1,stats.im1) 'noprint +
   class1=(1,1,32,32) class2=(96,1,32,32) class3=(96,96,32,32) +
   class4=(1,96,32,32)
! Print Histograms for the DN values in each training area
stats (stats.gn1,stats.gn2,stats.gn3) stats.st2 hist=0 +
   class1=(1,1,32,32) class2=(96,1,32,32) class3=(96,96,32,32) +
   class4=(1,96,32,32)
! Print Spectral Plot for all bands and classes
stats (stats.gn1,stats.gn2,stats.gn3) stats.st3 spec=0 +
   class1=(1,1,32,32) class2=(96,1,32,32) class3=(96,96,32,32) +
   class4=(1,96,32,32)
! Try out Vertice format
stats (stats.gn1,stats.gn2,stats.gn3) stats.st4 hist=0 vert=5 +
   class1=(1,1,32,32) class2=(96,1,32,32) class3=(96,96,32,32) +
   class4=(1,96,32,32) class5=(48,48,48,70,70,48,48,48)
!
!  Now check MSS format images
!
mss (stats.gn1,stats.gn2,stats.gn3) stats.mss (1,1,128,128)
let $echo="no"
let _onfail="continue"
write ""
write "MSS no longer supported"
write "following will ABEND"
write ""
let $echo="yes"
! Copy second band and scribe training areas on this image
stats stats.mss (stats.st10,stats.im10) mss=3 scribe=2 +
   class1=(1,1,32,32) class2=(96,1,32,32) class3=(96,96,32,32) +
   class4=(1,96,32,32)a
let _onfail="stop"
! Gather stats for first and third bands
!!stats stats.mss stats.st11 mss=3 band=(1,3) hist=0 'noprint +
!!   class1=(1,1,32,32) class2=(96,1,32,32) class3=(96,96,32,32) +
!!   class4=(1,96,32,32)
! Print spectral plots for second and third band for first and forth class
!!stats stats.mss stats.st12 mss=3 splot=(1,4) spec=(2,3) +
!!   class1=(1,1,32,32) class2=(96,1,32,32) class3=(96,96,32,32) +
!!   class4=(1,96,32,32)
! Try out Vertice format
!!stats stats.mss (stats.st13,stats.im13) mss=3 vert=5 +
!!   class1=(1,1,32,32) class2=(96,1,32,32) class3=(96,96,32,32) +
!!   class4=(1,96,32,32) class5=(48,48,48,70,70,48,48,48)
!
!! EXTRA DIAGNOSTICS - uncomment if you wish to try
!! DISPLAY SCRIBED IMAGES
!xvd  stats.im1 
!xvd stats.im10
!xvd stats.im13
!! PEFORM STATPLT on band pairs for stats.st1
statplt stats.st1 plotname=stats.st1a.eps bands=(1,2)
 ush gnuplot stats.st1a.eps.gpi
statplt stats.st1 plotname=stats.st1b.eps bands=(2,3)
 ush gnuplot stats.st1b.eps.gpi
statplt stats.st1 plotname=stats.st1c.eps bands=(1,3)
 ush gnuplot stats.st1c.eps.gpi
!!
!! MSS - STATPLT should be same for stats.st10
!statplt stats.st10 plotname=stats.st10a.eps bands=(1,2)
! ush gnuplot stats.st10a.eps.gpi
!statplt stats.st10 plotname=stats.st10b.eps bands=(2,3)
! ush gnuplot stats.st10b.eps.gpi
!statplt stats.st10 plotname=stats.st10c.eps bands=(1,3)
! ush gnuplot stats.st10c.eps.gpi
!statplt stats.st3 plotname=stats.st3.eps
! ush gnuplot stats.st3.eps.gpi

! clean up
ush rm -f stats.st*
ush rm -f stats.gn?
ush rm -f stats.im?
ush rm -f stats.mss

let $echo="no"
end-proc
