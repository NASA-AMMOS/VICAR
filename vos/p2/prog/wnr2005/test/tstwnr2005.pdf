procedure
refgbl $echo
body
let $echo="yes"

enable-log

!
! generate asymmetric point spread function
gen out=x.img nl=64 ns=64 linc=0 sinc=0
qsar inp=x.img out=y.img area=(1,1,1,7,50,1,7,3,1,50)
fft22 y.img ffty.img
!
! generate an image
qsar inp=x.img out=z.img area=(32,32,5,5,200)
fft22 z.img fftz.img
!
! blur the image
wnr2005 inp=(fftz.img,ffty.img) out=ffts.img 'direct
list ffty.img
fft22 inp=ffts.img out=blur.img 'inverse format=half
!xvd blur.img
!
! restore the image
wnr2005 inp=(ffts.img,ffty.img) out=fftss.img 'wiener
list ffty.img
fft22 inp=fftss.img out=restored.img 'inverse format=half
!xvd restored.img
!
! restoration using symmetric psf approximation.
wnr2005 inp=(ffts.img,fftz.img) out=fftss.img 'amplitude
list fftz.img
fft22 inp=fftss.img out=symmetricrestoration.img 'inverse format=half
!xvd symmetricrestoration.img
!
! create a restoration kernel
wnr2005 inp=(ffts.img,fftz.img) out=fftss.img 'ratio
list fftz.img
fft22 inp=fftss.img out=kernel.img 'inverse format=real
!xvd kernel.img
!
! deconvolve with the kernel
wnr2005 inp=(ffts.img,fftss.img) out=ffts.img 'direct
list fftss.img
fft22 inp=ffts.img out=restwk.img 'inverse format=half
!xvd restwk.img
!
!copy /scr/jjl/color/earth.green out=a.img sl=150 ss=150 nl=512 ns=512
!fft22 inp=a.img out=ffta.img
!gen out=x.img nl=512 ns=512 linc=0 sinc=0
!qsar inp=x.img out=y.img area=(1,1,5,5,50)
!fft22 y.img ffty.img
!wnr2005 inp=(ffta.img,ffty.img) out=fftblur.img 'direct
!fft22 inp=fftblur.img out=blur.img 'inverse
!wnr2005 inp=(fftblur.img,ffty.img) out=fftrest.img sn=20
!fft22 inp=fftrest.img out=rest.img 'inverse
!hist a.img
!hist blur.img
!hist rest.img

disable-log

end-proc
