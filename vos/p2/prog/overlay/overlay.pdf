process help=*
PARM INP      TYPE=STRING  COUNT=1
PARM OUT      TYPE=STRING  COUNT=1
PARM TARGET     TYPE=(STRING,12) COUNT=0:1			DEFAULT=--
PARM SPICEMODE  TYPE=KEYWORD     COUNT=0:1 VALID=(LOCAL,REMOTE) DEFAULT=--
PARM CKNAME     TYPE=(STRING,4)  COUNT=1			DEFAULT=DAVI
PARM CKID       TYPE=(STRING,4)  COUNT=1			DEFAULT=NONE
PARM USERID     TYPE=(STRING,3)  COUNT=0:1			DEFAULT=--
PARM GROUPID    TYPE=(STRING,3)  COUNT=0:1			DEFAULT=--
PARM INSTITUTE  TYPE=(STRING,4)  COUNT=1			DEFAULT=NONE
PARM CDATE      TYPE=(STRING,12) COUNT=1		DEFAULT=000000000000
PARM REQNUM     TYPE=(STRING,4)  COUNT=1			DEFAULT=NONE
PARM PURPOSE    TYPE=(STRING,4)  COUNT=1			DEFAULT=NONE
PARM PROGRAM    TYPE=(STRING,6)  COUNT=1			DEFAULT=*NONE*
PARM SPKID      TYPE=(STRING,4)  COUNT=1			DEFAULT=NONE
PARM SIZE     TYPE=INTEGER COUNT=4			DEFAULT=(1,1,0,0)
PARM SL       TYPE=INTEGER COUNT=0:1   VALID=(0:10000)  DEFAULT=1
PARM SS       TYPE=INTEGER COUNT=0:1   VALID=(0:10000)  DEFAULT=1
PARM NL       TYPE=INTEGER COUNT=0:1   VALID=(0:10000)  DEFAULT=0
PARM NS       TYPE=INTEGER COUNT=0:1   VALID=(0:10000)  DEFAULT=0
PARM MAXDN    TYPE=INTEGER		VALID=(0:32767)	DEFAULT=255
PARM AUTO     TYPE=KEYWORD COUNT=0:1   VALID=AUTO	DEFAULT=--
PARM NOGRID   TYPE=KEYWORD COUNT=0:1   VALID=NOGRID	DEFAULT=--
PARM LIMITS   TYPE=REAL    COUNT=4  VALID=-360.:360 DEFAULT=(-90.,90.,0.,360.)
PARM SUPPRESS TYPE=REAL	   COUNT=1     VALID=(0.:90.)	DEFAULT=80.
PARM DLA1     TYPE=REAL    COUNT=1     VALID=(.01:90.)	DEFAULT=15.
PARM DLA2     TYPE=REAL    COUNT=1     VALID=(.01:90.)	DEFAULT=15.
PARM DLO1     TYPE=REAL    COUNT=1     VALID=(.01:360.)	DEFAULT=15.
PARM DLO2     TYPE=REAL    COUNT=1     VALID=(.01:360.)	DEFAULT=30.
PARM GLATITUD TYPE=REAL    COUNT=0:181 VALID=(-90.:90.)	DEFAULT=--
PARM GLONGITU TYPE=REAL    COUNT=0:361 VALID=(0.:360.)	DEFAULT=--
PARM DN       TYPE=KEYWORD COUNT=0:1   VALID=(BLACK,WHITE)  DEFAULT=WHITE
PARM ALTERNAT TYPE=KEYWORD COUNT=0:1   VALID=ALTERNAT	DEFAULT=--
PARM NONUMBER TYPE=KEYWORD COUNT=0:1   VALID=NONUMBER	DEFAULT=--
PARM SCALEBAR TYPE=KEYWORD COUNT=0:1   VALID=(SCALEBAR,NOSCALE)	+
  DEFAULT=NOSCALE
PARM EXPAND   TYPE=INTEGER COUNT=1     VALID=(1:10)	DEFAULT=1
PARM EAST     TYPE=KEYWORD COUNT=0:1   VALID=EAST	DEFAULT=--
PARM DLATITUD TYPE=INTEGER COUNT=1     VALID=(1:181)	DEFAULT=1
PARM DLONGITU TYPE=INTEGER COUNT=1     VALID=(1:360)	DEFAULT=1
PARM LIMB     TYPE=KEYWORD COUNT=0:1   VALID=LIMB	DEFAULT=--
PARM DNLIMB   TYPE=INTEGER		VALID=(0:32767)	DEFAULT=128
PARM LSPACE   TYPE=REAL    		VALID=(0.2:20.) DEFAULT=0.8
PARM TERMINAT TYPE=KEYWORD COUNT=0:1   VALID=TERMINAT	DEFAULT=--
PARM TSPACE   TYPE=INTEGER		VALID=(1:20)    DEFAULT=1
PARM DNTERM   TYPE=INTEGER		VALID=(0:32767)	DEFAULT=64
PARM SUBSOL   TYPE=REAL    COUNT=0:2	VALID=(-360.:360.) DEFAULT=--
PARM LAT_TYPE KEYWORD VALID=(PGRAPHIC,PDETIC,PCENTRIC) DEFAULT=PCENTRIC
PARM MISSION  KEYWORD COUNT=0:1 VALID=("CASSINI", "GLL", "VGR-1", "VGR-2",+
 "MAR10", "VIKOR", "MAR-9","NOPRO") DEFAULT=--
PARM PRINT    TYPE=KEYWORD COUNT=0:1 VALID=PRINT	DEFAULT=--
END-PROC
.TITLE
VICAR program OVERLAY
.HELP
PURPOSE:

OVERLAY is a VICAR program which superimposes a latitude-longitude grid 
on a planetary image.  If the image is a perspective one ("object space"), 
then the option also exists to draw a limb and/or terminator.  The target
body is assumed to be a sphere or oblate-spheroid, as determined by its 
polar and equatorial radii.

    OVERLAY INP=PIC OUT=OPIC user-parameters

were PIC is an optional input image and OPIC is the output image.

PIC must have a standard VICAR map label, as generated by MAP3, PERSLAB,
or project-specific logging programs such as NIMSCMM.

The image must be in either byte or 16-bit integer (halfword) data format.

OPIC will be the same data format as PIC.  If PIC is omitted, then the
latitude-longitude grid will be displayed over a background of 0 DN and
the output data format will be byte.

The grid is normally displayed in west-longitude, planetocentric latitudes.
Note, however, that the grid overlay may be optionally displayed in east-
longitude (see EAST keyword).

If the image is in Perspective projection, then the option exists to draw
the limb or terminator.  In this case, the position of the Sun (specified
as the sub-solar point on the target body) must be available.  This can
either be supplied by the user with the SUBSOL parameter, or else retrieved
from the label if the input image is an unresampled product of one of the
supported set of flight projects.  (See HELP MISSION for a list of the
latter.)

.page
SPECIFYING THE LATITUDE-LONGITUDE GRID:

All latitudes must be planetocentric.  All longitudes must be entered as 
west-longitudes.

The latitude-longitude grid overlay is determined by specifying its limits
(minimum and maximum latitudes and longitudes), latitude and longitude
spacing, and contrast (black, white, or modulating grid lines), and the
size and spacing of the grid annotation.  Note that the grid can be turned
off altogether using the 'NOGRID keyword;  in this case, the user must
specifiy either LIMB or TERMINAT (or both), or the program will have
nothing to do and quit.

    (1) Grid limits:  The execution of OVERLAY can be speeded up by limiting
	the calculation of latitude and longitude lines to the region within
	the picture's field-of-view.  These limits may be specified explicitly
	via the LIMITS parameter.  Alternatively, the program can be asked
	to determine these limits automatically via the AUTO keyword.  The
	AUTO keyword should only be used for high-resolution frames, where
	the target-body completely fills the field-of-view.

	LIMITS=(r1,r2,r3,r4) - specifies the minimum latitude, maximum latitude,
			       minimum longitude, and maximum longitude boun-
			       daries of the grid overlay.
	'AUTO		     - determine latitude-longitude limits automatically

    (2) Grid spacing:  The grid spacing along latitude and longitude lines
	is specified via the DLA1, DLO1, DLA2, DLO2 parameters, where DLA1
	and DLO1 specify the spacing near the equator, and  DLA2 and DLO2
	specify the spacing near the poles.  The SUPPRESS parameter specifies
	the latitude boundary between the equatorial and polar regions.  The
	grid spacing (expressed in degrees) is usually increased in the polar
	region to prevent overcrowding of grid lines (the exceptions are the
        polar projections, for which the opposite holds true).  The default
        values for these parameters are only appropriate for image or object
        space full-disk (far-encounter) images.

	Alternatively, the latitude and longitude lines may be specified
	explicitly via the GLATITUD and GLONGITU parameters.

	SUPPRESS=r - latitude at which grid spacing switches from r1 to r2
	DLA1=r1	   - latitude spacing btwn grid lines, equatorward of r (deg)
	DLA2=r2    - latitude spacing btwn grid lines, poleward of r (deg)
	DLO1=r1    - longitude spacing btwn grid lines, equatorward of r (deg)
	DLO2=r2	   - longitude spacing btwn grid lines, poleward of r (deg)

	GLATITUD=(r1,r2,r3,...) - draws grid lines along latitudes r1,r2,r3,...
	GLONGITU=(r1,r2,r3,...) - draws grid lines along longitudes r1,r2,r3...
        'PRINT	   - prints grid intersections, etc. (massive printout)

    (3) Grid contrast:  The grid may be drawn in black, white, or data-
	dependent combination of the two, or the grid can ALTERNATe between
	black and white.

	MAXDN=n1     - specifies maximum DN of output
	'dn          - specifies DN of grid.  Valid values are WHITE (DN=n1)
		       and BLACK (DN=0)
	'ALTERNAT    - alternat DN of grid between black and white.

    (4) Grid annotation:

	'NONUMBER	- suppresses all grid annotations.
	'SCALEBAR	- adds scale bar to output image for km per pixel
	'EAST		- annotates grid using east-longitudes.
	EXPAND=n	- specifies scale factor for increasing size of 
			 annotations.
	DLATITUD=n	- annotates every nth grid intersection along latitude 
			 lines.
	DLONGITU=n	- annotates every nth grid intersection along longitude
			 lines.
.page
EXAMPLES:

  1)  OVERLAY  PIC  OPIC  GLAT=(-32.,-20.,-8.,0.,7.,19.,22.,30.) GLON=115.

      The target body is assumed to be Jupiter, and the grid lines have been 
      selected to mark several of Jupiter's belts and zones and the central 
      meridian.

  2)  MAP3  OUT=PIC  NL=1000  NS=1000  'JUPITER  'POLE  'ORTHO +
	LINE=1436.0  SAMP=671  LATI=-90.0  LONG=85.877  SCALE=75.0

      OVERLAY  PIC  OPIC DLA1=20  DLA2=10  DLO1=30  DLO2=60   SUPP=80. +
	DLAT=3  DLONG=4

      A latitude-longitude grid representing a polar-orthographic projection
      of the south-polar region of Jupiter will be drawn in white, over a
      black background.  Since there is no associated input image, the pro-
      jection information must be input manually to MAP3 in a preceding step.

      Between latitudes -80 and the equator, the latitude lines are spaced
      20 degrees apart (centered on the equator), and the longitude lines are
      spaced 30 degrees apart.  Poleward of -80 degrees, there will be no
      latitude lines and the longitude lines will be 60 degrees apart.

      The numbers denoting lat-long line intersections will be at every third
      latitude and every fourth longitude intersection.
.page
PARAMETERS FOR RETRIEVING CAMERA POINTING FROM SPICE:

The following parameters permit the user to retrieve a specific instance of
camera pointing from the SPICE kernels:

SPICEMODE specifies whether SPICE data is retrieved from LOCAL kernels or
or via the REMOTE SPICE server.  If defaulted, SPICEMODE is set to the value
of the environmental variable DEFAULTSPICE.

CKNAME and CKID are alternative ways to specify the C kernel to be used.  For
example, CKNAME=FARE or CKID=M904 specifies that MIPS_FARENC.CK is to be used.
When specified, the CKID parameter overrides the CKNAME parameter.  If the
camera pointing data is not found in the requested C kernel, the other C kernels
are searched.

Within a given C kernel, there may be a number of different versions of camera
pointing for a given image.  The segment identifier for each version contains
provenance information identifying the creator of the pointing data.  One or
more of the following parameters may be used to retrieve a specific instance of
camera pointing based upon this provenance information:

CDATE specifies the date and time the camera pointing was created.
REQNUM identifies the request number associated with the camera pointing.
PURPOSE identifies the purpose for creating the camera pointing.
PROGRAM identifies the program which created the camera pointing.
SPKID identifies the SP-kernel used to create the camera pointing.
USERID identifies the user who created the camera pointing.
GROUPID identifies the group which created the camera pointing.
INSTITUTE identifies the facility which created the camera pointing.

A complete list of CK and SPK IDs are located in the ASCII file assigned the
logical name (or environmental variable) KERNELDB.

The above parameters are optional, and if defaulted (or if no data is found for
the requested version), the program will attempt to locate the "best" data
available for the given image.  See the level 2 help (via the TAE tutor mode)
for further details.

Examples:  'LOCAL CKNAME=NAIF specifies that SPICE data be retrieved from
          local kernels using camera pointing from predicts or AACS telemetry.

           'REMOTE CKNAME=FARE INSTITUTE=MIPS SPKID=N015 USERID=ADC retrieves
          the camera pointing created by Amy Culver at MIPS using the SP kernel
          GLL_LONG_2.BSP from file MIPS_FARENC.CK via the SPICE server.  (whew!)

It takes longer to search for SPICE data on the basis of provenance
information.  If all provenance parameters are specified, for example, the
program first searches through all the C kernels for an exact match.  If no
match is found, the search is relaxed by removing the CDATE criteria.  If no
match is found, the REQNUM criteria is removed.  Etc.

.page
PROGRAM HISTORY

WRITTEN BY: JOEL MOSHER,   27 MARCH 1984
COGNIZANT PROGRAMMER: Gary Yagi
REVISIONS:
 FEB 23 84  JAM   Original OVERLAY created by modifying PHOTFUNC.
 MAR  2 84  JAM   Add no input picture option.
 MAR  7 84  JAM   Fixed errors in longitude lines removed redundant grid points
 MAR  8 84  JAM   Calculate points to put lat-lon numbers
 MAR 14 84  JAM   Added MODULATE, LINC, and SINC keywords.
 OCT 27 85  JAM   Convert to VICAR2
 MAR  1 86  JAM   Fixed error in no input mode, added MAPLAB
 MAR 10 86  JAM   Added FIXRECT
 MAY 17 86  JAM   Added GLAT,GLON, rewrote point & number selection algorithms.
 MAY 27 87  JAM   VICAR2 parameter processing.
 MAR 11 88  GMY   Major code reorganization and clean-up:
		    0) Rewrote Help File.
		    1) Modularized algorithms.
		    2) Fixed size field implementation.
		    3) Fixed TARGET parameter.
		    4) Fixed calculation of OM from C and ME.
		    5) Fixed extraction of subspacecraft point from SEDR.
		    6) Fixed extraction of radii from SEDR.
		    7) Removed all redundant parameters.
		    8) Replaced MODULATE algorithm with ALTERNATE algorithm.
		    9) Fixed no input image option.
		   10) Fixed annotation so equation is labeled.
		   11) Fixed spacing of annotation.
		   12) Fixed problem of extra grid line at SUPPRESS latitude.
 JUN 12 88  FFM  Rename parameter SEDR to SFILE.
 MAY 12 88  FFM  Incorporate SEDRSRC keyword.
 JUN 07 88  GMY  Fix processing of SIZE parameter.
 Jan 22 89  GMY  FRs 37250,37251,37298,42709,42701.
 Jul 19 89  MEM  Instead of drawing annotation at each intersection,
		        merely draw it once for every grid line.
 Jul 27 89  MEM  When the picture scale is specified, draw a scale bar
			in the lower left-hand corner.
 DEC    90  JJL  Conversion to project independent routines.
 Mar 30 92  JFM  Corrected handling of FINDLAT capture of constant latitudal
                 grid lines for Lambert Conformal Conic and Sinusoidal
		 projections near the poles, where projected image does not
		 file the image file (FR 66586).
 Apr 02 92  JFM  Scale in lower-left corner of output made optional (FR 66545).
 Apr 17 92  JFM  Longitude and latitude annotation placements check against
		 boundaries of image (FR 66549).
 May 26 92  JFM  SFILE parameter removed; HELP file slightly revised;
		 RADIUS, REQUATOR, RPOLE limits removed; Error in no input
	  	 image grid computation corrected (FR 68870, 75745, 76934).
 mar 93     jjl  Removed SFILE parameter
 feb    93  jjl  Added transverse mercator and perspective projections.
 OCT    94  LWK  Added LIMB/TERMINATOR options
 MAR    95  LWK  Made program portable.  Removed all SPICE/SEDR and label-
		processing code (except as needed to determine subsolar point),
		require input image to have map label.
 JUL    96  OAM  Modified to call getspice2 instead of getspice.
                 Included provenance parameters in overlay.pdf.
 jun 98  lwk  added code to get subsolar lat/lon from nims label;  fixed 
	calculation of terminator points:  allow for sections where limb is 
	out of image but terminator is in it;  added code to LIMBPT to stop 
	searching for point at suitable distance once the N.pole is reached 
	-- program was in an infinite loop here for one case;  non-visible 
	points were being selected for lat's where no limb is visible;  and
	if limb didn't reach to N.pole, terminator stopped too;  replaced 
	FIXRECT by CONVEVR, to ensure that *every* call to CONVEV is followed 
	by a fix-up for Rectangular projection;  added Planetographic option 
	for NIMS (LAT_TYP keyword);  fixed longitude lines so that they are 
	more likely to agree with the the numbers in the annotation and are
	always at integer locations (as long as DLO1/DLO2 are integer!)
 Jun98  RRP  Broke long statements into smaller one to make it compile
	under hp platform. AR-9644
 9oct00 lwk- remove lat_typ dependence for Simp.Cyl.
 Aug 02 GMY - Minor changes to compile on Linux:  Change & to * in subroutine
	calls.  Change all trig calls such as cosd(theta) to cos(theta*dtr)
17dec02 lwk - put in check for infinite loop in FINDLON similar to the
	one in FINDLAT
13feb03 lwk- merged my changes with RRP/GMY/KLEM's

.LEVEL1
.VARI INP
Input image.
.VARI OUT
Output image.
.VARI SIZE
Standard VICAR size field.
.VARI SL
Starting line
.vari SS
Starting sample
.vari NL
Number of lines
.VARI NS
Number of samples
.VARI MISSION
mission override or if
no input
.VARI LIMITS
(lat,lon) region to grid
minlat,maxlat,minlon,maxlon
.VARI AUTO
Automatically determines
lat,lon limits of image.
.VARI DLA1
The spacing of latitude lines
equatorward of SUPPRESS (deg)
.VARI DLA2
The spacing of latitude lines
poleward of SUPPRESS (deg)
.VARI DLO1
The spacing of longitude lines
equatorward of SUPPRESS (deg)
.VARI DLO2
The spacing of longitude lines
poleward of SUPPRESS (deg)
.VARI SUPPRESS
Latitude above which DLO2 and 
DLA2 values are used.
.VARI GLATITUD
Specifies latitude lines.
.VARI GLONGITU
Specifies longitude lines.
.VARI PRINT
Prints out grid intersections
(beware--massive printout)
.VARI DN
VALID=WHITE,BLACK
WHITE: Grid lines will be MAXDN
BLACK: Grid lines will be zero DN
.VARI ALTERNAT
Alternates Dn value of grid
between black and white.
.VARI MAXDN
Maximum DN value of
output image.
.VARI SCALEBAR
Adds kilometer per pixel
scale bar to output file
.VARI NONUMBER
Suppresses labeling of
grid intersections (with
lat-lon coordinates).
.VARI EAST
Longitude numbers on output
image will be EAST-longitude
.VARI EXPAND
Magnifies grid annotation
by integer factor
.VARI DLATITUD
DLAT=n causes every nth
intersection along latitude
lines to be labeled.
.VARI DLONGITU
DLON=n causes every nth
intersection along longitude
lines to be labeled.
.vari NOGRID
Suppress lat/long grid
(must specify LIMB or
TERMINAT)
.vari LIMB
draw planet limb?
.VARI LSPACE
spacing of limb points
.VARI TSPACE
spacing of terminator
points
.vari DNLIMB
DN for limb points
.vari TERMINAT
draw terminator?
.vari DNTERM
DN for terminator points
.vari SUBSOL
Subsolar lat/long (for
Terminator)
.vari LAT_TYPE
Planetographic/centric lat's?
.VARI TARGET
Optional 12-char string
Target name (planet,
  satellite, or asteroid)
.VARI SPICEMODE
Optional keyword
Location of SPICE kernels
(LOCAL or REMOTE)
.VARI CKNAME
Optional 4-char string
C-kernel name
.VARI CKID
Optional 4-char string
C-kernel ID
.VARI USERID
Optional 3-char string
User who created camera pointing
.VARI GROUPID
Optional 3-char string
Group which created camera pointing
.VARI INSTITUTE
Optional 4-char string
Facility which created camera pointing
.VARI PURPOSE
Optional 4-char string
Purpose for camera pointing
.VARI PROGRAM
Optional 6-char string
Program which created camera pointing
.VARI SPKID
Optional 4-char string
SP kernel for created camera pointing
.VARI REQNUM
Optional 4-char string
IPL request number for created camera pointing
.VARI CDATE
Optional 12-char string
Date and time camera pointing was created


.LEVEL2

.VARI INP
Input image file name.  The input must have a standard VICAR map label.

Any projection which is supported by the map-projection program MAP3 is 
also supported by OVERLAY.

.VARI OUT
Output image file name.  The output image will be the same data format as
the input image.  

.VARI SIZE
	SIZE=(sl,ss,nl,ns)
Specifies the VICAR size field: starting line, starting sample, number of
lines, and number of samples.  The output image will be nl x ns, where
pixel (1,1) corresponds to pixel (sl,ss) of the input.

.VARI SL
Starting line in input 

.VARI SS
Starting sample in input

.VARI NL
Number of lines

.VARI NS
Number of samples

.VARI MISSION
Specifies the mission if the input is not a standard label or if there
is no input image. Defaults to input label mission type.
Valid are: MAR-9 MAR10 VIKOR VGR-1 VGR-2 GLL NOPRO (for no project)

.VARI LIMITS
REAL--OPTIONAL
LIMITS=(r1,r2,r3,r4) specifies the minumum latitude, maximum latitude,
minimum longitude, and maximum longitude boundaries of the grid overlay.
This parameter is primarily used to speed up execution by limiting the
grid calculation to the planet area within the field-of-view of the
picture.

.VARI AUTO
KEYWORD--OPTIONAL
The keyword AUTO causes OVERLAY to automatically determine the latitude-
longitude boundaries of the image (see LIMITS parameter).

.VARI SUPPRESS
SUPP=r specifies the latitude above which DLO2 and DLA2 values are used
(instead of DLO1 and DLA1).  See DLA1, DLO1, DLA2, DLO2 parameters.

.VARI DLA1
REAL--OPTIONAL
DLA1=r specifies the spacing of latitude lines (in deg) equatorward of
SUPPRESS.

.VARI DLA2
REAL--OPTIONAL
DLA2=r specifies the spacing of latitude lines (in deg) poleward of SUPPRESS.
The spacing of latitude lines poleward of SUPPRESS

.VARI DLO1
REAL--OPTIONAL
DLO1=r specifies the spacing of longitude lines (in deg) equatorward of
SUPPRESS.

.VARI DLO2
REAL--OPTIONAL
DLO2=r specifies the spacing of longitude lines (in deg) poleward of SUPPRESS.

.VARI GLATITUD
REAL--OPTIONAL
GLATIDU=(r1,r2,r3,...) specifies that lines of constant latitude are to be
drawn at latitudes r1, r2, r3, etc.  Up to 181 latitudes may be specified.
This turns off the default grid.

.VARI GLONGITU
REAL--OPTIONAL
GLONGITU=(r1,r2,r3,...) specifies that lines of constant longitude are to be
drawn at longitudes r1, r2, r3, etc.  Up to 360 longitudes may be specified.
This turns off the default grid.

.VARI PRINT
KEYWORD--OPTIONAL
Causes the program to print out the following information at each grid
intersection of the image: TBD

.VARI MAXDN
INTEGER--OPTIONAL
MAXD=I3 where I3 is an integer specifying the maximum DN value of a grid
line.  The default is 255 for byte images and 32767 for halfword images.

.VARI DN
KEYWORD--OPTIONAL
Valid values are BLACK and WHITE, where WHITE causes white grid lines to
be drawn (DN=MAXDN), and BLACK causes black grid lines to be drawn (DN=0).
The default is WHITE.

.VARI ALTERNAT
Dn values of grid points are alternated between black and white.
This is not always successful, leading to less than pleasing results.

.VARI SCALEBAR
KEYWORD--OPTIONAL
Adds kilometer per pixel scale bar to output file; value taken from
DATA(7) of MAP label of input image file.

.VARI NONUMBER
KEYWORD--OPTIONAL
Suppresses latitude-longitude annotation of grid.

.VARI DLATITUD
INTEGER--OPTIONAL
DLAT=n annotates every nth grid intersection along latitude lines.

.VARI DLONGITU
DLON=n annotates every nth grid intersection along longitude lines.

.VARI EXPAND
INTEGER--OPTIONAL
EXPAND=n causes the latitude-longitude annotation to be magnified by
a factor of n.

.VARI EAST
KEYWORD--OPTIONAL
Causes the grid to be annotated using east-longitudes.

.VARI START
START=I6 where I6 is an integer specifying the first byte in the
GEOMA dataset which starts the tiepoints. This is the first word
after the TIEPTS keyword. The default is for the program to look
for tiepoints in the dataset or if the input picture is from a
standard project, a value is set.

.vari NOGRID
If this keyword is specified, the latitude/longitude grid is not drawn.
In this case, the user must specify either LIMB or TERMINAT (q.v.) (or
both), else the program will have nothing to do and quits.

.vari LIMB
This keyword specifies that the planet limb should be drawn in the image.
This option is only available in perspective map projection.

.VARI LSPACE
This specifies the approximate spacing of limb points (in pixels).
Setting it much below 1 should guarantee a solid limb.  Setting it to a
value greater than 1 should cause a dotted limb to be generated, although
this cannot be guaranteed to be regular.

Increasing the spacing will also reduce the number of limb points needed,
in case this proves to be a limiting factor.

.VARI TSPACE
This specifies the approximate spacing of terminator points. 
If TSPACE=1, then the spacing will be the same as that of the limb points
(see parameter LSPACE).  A larger value of TSPACE increase the spacing by
a corresponding factor, .e.g., TSPACE=3 means that every third point will
be used.  (It is not possible to reduce the spacing to less than that of
LSPACE.)

.vari DNLIMB
This specifies the DN to be used for limb points if 'LIMB has been
specified.

The default value in the PDF is 128, which is suitable for Byte images.
If the image is Halfword, then a value in the range (0,32767) should be
supplied.

.vari TERMINAT
This keyword specifies that the terminator (dividing line between the
illuninated and shadow regions) should be drawn in the image.
This option is only available in perspective map projection.
Also, this option requires that LIMB also be specified.

The default value in the PDF is 64, which is suitable for Byte images.
If the image is Halfword, then a value in the range (0,32767) should be
supplied.

.vari DNTERM
This specifies the DN to be used for terminator points if 'TERMINAT has 
been specified.

.vari SUBSOL
  SUBSOL = (latitude, longitude)

This parameter specifies the subsolar latitude & longitude to be used in
the computation of the Terminator (if the TERMINAT keyword has been
selected).  It is needed only for images for which no navigation data are 
available in the label.  

.var LAT_TYPE
 For planets that are not modelled as perfect spheres, this keyword
 controls the type of latitudes output by the program:

 LAT_TYPE = PCENTRIC specifes that latitudes are planetocentric, i.e.,
 determined by the vector from the planet center.

 LAT_TYPE = PGRAPHIC or PDETIC specify planetographic latitudes, which
 are measured with reference to the surface normal.

 The default is PCENTRIC, since this is the VICAR standard.

.VARI TARGET
Ex: TARGET=GANYMEDE specifies that GANYMEDE is the target in the input image.

The TARGET may be a planet, satellite, or asteroid.  If defaulted, the target
name is extracted from the VICAR label or determined by other TBD means.

A complete list of valid target names is located in the ASCII file assigned
the logical name (or environmental variable) BODY_IDS.

.VARI SPICEMODE
SPICEMODE=LOCAL specifies that SPICE data is to be retrieved from local
SPICE kernels.  SPICEMODE=REMOTE specifies that SPICE data is to be retrieved
via the SPICE server.  If SPICEMODE is defaulted, the logical name (or
environmental variable) DEFAULTSPICE is used to determine whether LOCAL or
REMOTE is used.  Note that if SPICE data is not found in LOCAL or REMOTE mode,
the other mode is attempted.

.VARI CKNAME
CKNAME is a four character string specifying the C-kernel to be used:

  CKNAME        C KERNEL
  --------      -------------
  DAVI          MIPS_DAVI.CK
  NAV           MIPS_NAV.CK
  FARE          MIPS_FARENC.CK
  NAV2          MIPS_NAV2.CK
  NEAR          MIPS_NEAR.CK
  AMOS          MIPS_AMOS.CK
  NAIF          the best NAIF kernel is used

If defaulted, the kernels are searched in the above order.

.VARI CKID
CKID is an alternative way to specify the prefered C-kernel (see CKNAME
parameter):

  CKID    CKNAME        C KERNEL
  ----    --------      -------------
  M906    DAVI          MIPS_DAVI.CK
  M905    NAV           MIPS_NAV.CK
  M904    FARE          MIPS_FARENC.CK
  M903    NAV2          MIPS_NAV2.CK
  M902    NEAR          MIPS_NEAR.CK
  M901    AMOS          MIPS_AMOS.CK
  varies  NAIF          there are a large number of these files

Ex:  CKID=M901 specifies the four character ID which uniquely identifies the
     C-kernel MIPS_AMOS.CK.

A complete list of the C-kernel IDs is located in the ASCII file assigned the
logical name (or environmental variable) KERNELDB.

If specified, CKID overrides the CKNAME parameter.

.VARI USERID
USERID is a three character string which identifies the user who created the
camera pointing.

Ex:  USERID=HBM identifies Helen Mortensen as the creator of the camera
     pointing.

.VARI GROUPID
GROUPID is a three character string which identifies the group which created the
camera pointing.

Ex:  GROUPID=040 identifies group 040 as the creator of the camera pointing.

.VARI INSTITUTE
INSTITUTE is a four character string identifying the facility which created
the camera pointing.

Ex:  INSTITUTE=MIPS specifies that MIPS created the camera pointing.

.VARI PURPOSE
PURPOSE is a four character string identifying the purpose of the observation
or the purpose of processing.  For example,
  PURPOSE=MOSA identifies the image as part of a mosaic sequence
  PURPOSE=COLO identifies the image as part of a color sequence

.VARI PROGRAM
PROGRAM is the first six characters of the program creating the camera pointing.

Ex:  PROGRAM=FARENC specifies that FARENC created the camera pointing.

.VARI SPKID
SPKID specifies the four character ID which uniquely identifies the
SP kernel used to create the camera pointing.  The SP-kernel IDs are located
in the ASCII file assigned the logical name (or environmental variable)
KERNELDB.

Ex:  SPKID=N015 specifies the SP kernel GLL_LONG_2.BSP

.VARI REQNUM
REQUNUM is a four character string identifying the IPL request number for
which the camera pointing was created.

Ex:  REQNUM=3456 identifies (somewhat) request number R123456

.VARI CDATE
Date and time the camera pointing was created in the form 'YEARMMDDHHMM'.

Ex:  CDATE=199602291200 specifies that the pointing was created at noon
     on February 29, 1996.

.end
