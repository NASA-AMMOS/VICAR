procedure help=*
    local $space$ int
   
    parm DISK		type=(string,80) default="SYS$DISK:"
    parm VAR_NAME	type=name default=$space$

refgbl $syschar
refgbl $echo
body
!let $echo="no"

if ($syschar(1) = "VAX_VMS")

  chkspace_vms inp=&DISK localvar=@VAR_NAME

else

  if (DISK = "SYS$DISK:")
    let DISK = "."
  end-if
  let _ONFAIL="CONTINUE"

#  ush ./chkspace_scr &DISK fout.chkspace  
# on delivery, comment out above line and replace with the one below:
  ush $R2LIB/chkspace_scr &DISK fout.chkspace  

  chkspace_unix inp=fout.chkspace localvar=@VAR_NAME 

#  ush rm -f fout.chkspace
#  ush rm -f errors

end-if

!# annot function="VICAR Utilities"
end-proc
!# annot keywords=("free blocks","parameter DISK",quotas)
.TITLE
Returns amount of available space on specified disk

.HELP
PURPOSE

   CHKSPACE returns the number of free blocks (512 bytes) available to this
user on a specific disk drive.  The amount returned is the amount left in
the user's quota if quotas are enabled, or the amount left on the disk, if  
no quotas are enabled.  If the parameter DISK is not a disk name, the
program will issue an error message and return 0 blocks.  If the parameter
DISK is not supplied, the current default disk is used. 
.if1 UNIX
Disk quotas are not used on UNIX devices.

   Important note:  CHKSPACE does not reserve the space or in anyway 
   assure that the same amount of space will be available at any time
   in the near future.  It is an advisory only.  

.page
EXECUTION

   CHKSPACE 
       - will return a message containing space left available on
       the current default disk.

   CHKSPACE disk 
       - will return a message containing the space available on
       the specified disk.

   CHKSPACE disk variable
       - will return a message containing the space available on
       the specified disk and will put the value in the specified
       TCL variable.  The variable must have been declared as an
       integer. (e.g. local vari int)
         
RESTRICTIONS

       None.

.page
MESSAGES
   
    CHKSPACE: Space constrained by disk space.
       Issued when the free space available is limited only be the
       number of blocks left on the disk.

.if VAX_VMS
    CHKSPACE: Space constrained by your disk quota.
       Issued when the free space available is limited by your 
       remaining disk quota.

    CHKSPACE: You have no disk quota on this disk.
       Issued when a disk has active quotas, but you do not have
       an authorized quota on the disk.
    
    CHKSPACE: This is the null device.
       Issued when the disk name provided is the null (infinite) device.
.ifend

    CHKSPACE: DISK name not valid.
       Issued when the disk name provided is not a disk device.

    CHKSPACE: nnn blocks available.
       Always issued to indicate the number of blocks available at
       this time.

WRITTEN BY:		T. C. Greer  26-FEB-1990
COGNIZANT PROGRAMMER:	Lucas Kamp
REVISION: 1  (26-FEB-1990)
          Made portable for UNIX   Richardson(CRI) 2-JAN-95
          As per FR85841, -a option on df removed because doesn't exist on
          Andes. chkspace.ush now works in any directory, not just root. 8/95
16-Feb-2011 -lwk- renamed chkspace.ush to chkspace_scr.sh and wrapped it in a 
	separate .com file, in order to ensure that it gets created with the
	proper protections upon system build;  added "-k" to df in chkspace_scr.ush, 
	since df has changed;  changed "nawk" to "awk" because Linux doesn't know 
	nawk.

.LEVEL1
.VARIABLE DISK
Name of the disk to check.
.VARIABLE VAR_NAME
Name of TCL variable to fill.
.LEVEL2
.VARIABLE DISK

Name of the disk on which to check the number of available blocks.

.if VAX_VMS
This name can be a device name, a logical name or a complete file
specification.  If a complete file specification is supplied, only
the device name is used from it.  
.elseif UNIX
This name can be a device name, a logical name, or "~", or ".".
.ifend
If the device name turns out to be a device other than a disk, CHKSPACE
returns an error message and sets the VAR_NAME (if supplied) to 0.

.VARIABLE VAR_NAME

Name of TCL variable to contain the number of available blocks. 

This variable must previously have been declared in the following 
manner:

       LOCAL vname INT

Where vname is the name of the variable.
.END
