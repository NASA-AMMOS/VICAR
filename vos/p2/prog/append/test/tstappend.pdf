procedure
refgbl $echo
body
let _onfail="continue"
let $echo="yes"

! BYTE + BYTE 
GEN        A1
LABEL-LIST A1
LIST       A1
GEN        B1
LABEL-LIST B1
LIST       B1
APPEND     (A1 B1) C
LABEL-LIST C
LIST       C

! HALF + HALF
GEN        A2 'HALF
LABEL-LIST A2
LIST       A2
GEN        B2 'HALF
LABEL-LIST B2
LIST       B2
APPEND     (A2 B2) C
LABEL-LIST C
LIST       C

! FULL + FULL
GEN        A4 'FULL
LABEL-LIST A4
LIST       A4
GEN        B4 'FULL
LABEL-LIST B4
LIST       B4
APPEND     (A4 B4) C
LABEL-LIST C
LIST       C

! REAL + REAL 
GEN        A7 'REAL4
LABEL-LIST A7
LIST       A7
GEN        B7 'REAL4
LABEL-LIST B7
LIST       B7
APPEND     (A7 B7) C
LABEL-LIST C
LIST       C

! DOUB + DOUB 
GEN        A8 'DOUB
LABEL-LIST A8
LIST       A8
GEN        B8 12 12 'DOUB
LABEL-LIST B8
LIST       B8
APPEND     (A8 B8) C
LABEL-LIST C
LIST       C

! COMP + COMP 
GEN        A9 'COMP
LABEL-LIST A9
LIST       A9
GEN        B9 4 4 'COMP
LABEL-LIST B9
LIST       B9
APPEND     (A9 B9) C
LABEL-LIST C
LIST       C

! BYTE + HALF
APPEND     (A1 B2) C
LABEL-LIST C
LIST       C

! HALF + FULL
APPEND     (A2 B4) C
LABEL-LIST C
LIST       C

! BYTE + HALF + FULL
APPEND     (A1 B2 B4) C
LABEL-LIST C
LIST       C

! BYTE + HALF + REAL
APPEND     (A1 B2 B7) C
LABEL-LIST C
LIST       C

! REAL + FULL
APPEND     (A7 B4) C
LABEL-LIST C
LIST       C

! DOUBLE + COMPLEX
! size should be 12 samples
APPEND     (B8 B9) C
LABEL-LIST C
LIST       C

! BYTE + REAL + DOUBLE
! size should be 12 samples
APPEND     (A1 B7 B8) C
LABEL-LIST C
LIST       C

! BYTE + COMPLEX
! should have 10 samples
APPEND     (A1 B9) C
LABEL-LIST C
LIST       C

end-proc
