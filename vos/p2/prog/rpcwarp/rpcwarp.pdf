procedure help=*
parm inp type=(string,99) count=2
parm out type=(string,99) count=1
parm ref type=(string,99) count=1
parm typref type=keyword count=(0:1) valid=(coverref,coverinp) +
     default=coverinp
parm interp type=keyword count=(0:1) valid=(noin,bilin) +
     default=bilin
parm nah type=int count=1 default=1000
parm nav type=int count=1 default=1000
parm gorewid type=int count=1 default=0
parm savegrid type=(string,99) count=0:1 default=""
parm memsize type=int default=300000000

local rpcimg type=(string,99)
local dted type=(string,99)
local finalgrid type=(string,99)
local gridout2 type=(string,99)
local gridout3 type=(string,99)

local tnl int
local tns int
local rminl real
local rmaxl real
local rmins real
local rmaxs real
local minl int
local maxl int
local mins int
local maxs int
local sl int
local ss int
local nl int
local ns int
local inpsize int

local tstring1 string
local tstring2 string

refgbl $echo
local version (string,10)
local org (string,10)
body
!let _onfail="continue"
let version="ibis-2"
let org="column"

let $echo="yes"


!  RPCWARP HANDYPROC

write "rpcwarp 04/26/07"

let rpcimg = inp(1)
let dted = inp(2)

gt2tcl &rpcimg val=tstring1 keyword="MODELPIXELSCALETAG" vtype=0 seq=1
gt2tcl &rpcimg val=tstring2 keyword="MODELTRANSFORMATIONTAG" vtype=0 seq=1
if (tstring1="-999" and tstring2="-999")
   copy &rpcimg xxxrpcwarpt1
   rpc2gtlb (xxxrpcwarpt1,&dted)
   let rpcimg = "xxxrpcwarpt1"
end-if

if (savegrid<>"")
   let finalgrid = "&savegrid" // "1"
else
   let finalgrid = "xxqqgrid31"
end-if

!  for the 'coverinp case only, we need the corner points.
!  map the input grid to the reference image space and get min-max
!  (which are not necessarily at the corners).
!  the grid is rectangular in the input space.

lab2tcl &rpcimg v1=tnl v2=tns keyword=(nl,ns) 'system
let inpsize = tnl*tns

if ("&typref"="coverinp")
   rpc2grid inp=(&rpcimg,&dted) out=xxqqgrid1 nah=30 nav=30 ncol=13
   gtproj2 (xxqqgrid1,&rpcimg,&ref) incol=(1,2) outcol=(6,7)
   pixmap (xxqqgrid1,&ref) mapcols=(6,7) pixcols=(8,9) 'maptopix
   
   mf3 xxqqgrid1 func=("c10=c8$@vmin(c10)$c11=c8$@vmax(c11)$", +
            "c12=c9$@vmin(c12)$c13=c9$@vmax(c13)")
   ibis2tcl xxqqgrid1 v1=rminl v2=rmaxl v3=rmins v4=rmaxs vartype=(-1,-1,-1,-1) +
    ibisloc=(1,10,1,11,1,12,1,13)
   let rminl=rminl+0.5
   let rmaxl=rmaxl+0.5
   let rmins=rmins+0.5
   let rmaxs=rmaxs+0.5
   let minl=$fix(rminl)-gorewid-2
   let maxl=$fix(rmaxl)+gorewid+2
   let mins=$fix(rmins)-gorewid-2
   let maxs=$fix(rmaxs)+gorewid+2
   !ibis-list xxqqgrid1 nr=32 'format
   write "input covers (&minl,&mins,&maxl,&maxs) in reference pixel space"
   let sl=minl
   let ss=mins
   let nl=maxl-minl+1
   let ns=maxs-mins+1
else
   lab2tcl &ref v1=tnl v2=tns keyword=(nl,ns) 'system
   let sl=1-gorewid
   let ss=1-gorewid
   let nl=tnl+gorewid*2
   let ns=tns+gorewid*2
end-if
write "geomv parameter (sl,ss,nl,ns) = (&sl,&ss,&nl,&ns)"

! now make the transformation grid, it is not rectangular in the output space
! gtproj2 can use any lon-lat image, gen one here
! may need to go to '96 geoid someday

gtgen out=xxqqgrid4 'tiecnvrt +
  geotiff=("ModelTiePointTag=(0,0,0,-110.,34.,0.0)", +
  "ModelTiePointTag=(0,100,0,-110.,33.,0.0)", +
  "ModelTiePointTag=(100,0,0,-109.,34.,0.0)", +
  "GTModelTypeGeoKey=2(ModelTypeGeographic)", +
  "GeogAngularUnitsGeoKey=9102(Angular_Degree)", +
  "GeographicTypeGeoKey=4326(GCS_WGS_84)", +
  "GTRasterTypeGeoKey=2(RasterPixelIsPoint)", +
  "GeogEllipsoidGeoKey=7030(Ellipse_WGS84)")

rpc2grid inp=(&rpcimg,&dted) out=xxqqgrid2 nah=&nah nav=&nav ncol=13
gtproj2 (xxqqgrid2,xxqqgrid4,&ref) incol=(1,2) outcol=(6,7)
pixmap (xxqqgrid2,&ref) mapcols=(6,7) pixcols=(8,9) 'maptopix

! tieconv makes rectangular in the output space (inverts the RPF)

let maxl = sl+nl
let maxs = ss+ns
tieconv xxqqgrid2 out=&finalgrid cols=(8,9,4,5) +
  nah=&nah nav=&nav minl=&sl mins=&ss maxl=&maxl maxs=&maxs 'geomv

geomv INP=(&rpcimg,&finalgrid,&ref) OUT=&out size=(&sl,&ss,&nl,&ns) +
       cols=(1,2,3,4) interp="&interp" vmemsize=&memsize

if (savegrid<>"")
   let gridout2 = "&savegrid" // "2"
   let gridout3 = "&savegrid" // "3"
   ibis-gen &gridout2 nc=4 nr=1 deffmt=DOUB
   mf3 &gridout2 f="c1=(&sl)$c2=(&ss)$c3=(&nl)$c4=(&ns)"
   gtcopy &ref &gridout3 nl=1 ns=1
end-if

end-proc
.TITLE
RPCWARP - Warp an RPC image to a new map projection using GeoTIFF labels.
.HELP
PURPOSE
     RPCWARP reads the GeoTIFF label of a "master" or "reference" image,
     then reads the rpc's in the GeoTIFF label of the input image.  It
     calculates a set of GEOMV parameters from these and then calls GEOMV
     to warp the input image to match the mapping of the "reference" image.
     
     1.  The keyword 'coverinp causes the procedure to map all of the
     input image to an output image that will just contain it.   The
     keyword gorewid allows the user to specify a zero-filled margin
     to make the output a little larger (or negative trims smaller).
	
     2.  The keyword 'coverref causes the procedure to map the input
     image to an output image that exactly matches the "reference" image.
     Some parts of the input can be lost, or huge areas of zero-fill
     could be added to make the images match.  The gorewid keyword has
     no effect.
	   
CALL
     rpcwarp INPUT OUTPUT REF '(QUALIFIERS) PARAMS
  WHERE:
     INPUT          is the input data set (must have a GeoTIFF label, with RPC).
     OUTPUT         is the output data set (will have a GeoTIFF label).
     REF            is the reference data set (must have a GeoTIFF label).
     QUALIFIERS     consist of any of the following keywords:
          COVERINP         smallest output that covers the input geographic area
          COVERREF         output exactly matches the reference image.
     PARAMS         interp,nah,nav,gorewid.

  
OPERATION

First, for the 'coverinp case only, the procedure calculates the
extrema of the input in the output pixel space.  For the 'coverref
case, the extrema are the boundaries of the reference image.

Then the procedure calculates (in an ibis file) a grid that is
rectangular in the output space using the extrema calculated above.
Then new columns are calculated using the GeoTIFF map projections
in the labels of the input and reference images yielding the grid
in the input image.  If there are no GeoTIFF map projections in the
label then one is calculated from the RPC's.  Then GEOMV is called
to calculate the result.

PERFORMANCE

The time will consist of the IBIS file grid generation and mapping
which could be minutes for a 1000 x 1000 grid plus the GEOMV time.
See the GEOMV document for GEOMV timing (a 4000 by 4000 image was
transformed by a 500 x 500 grid in 99 seconds on a SPARCstation 20.
Reducing the grid to 30 x 30 cut the time to 39 seconds.  This shows
that the use of a large grid doesn't penalize the time too much, 1999).

.PAGE
Restrictions
------------

The input image must have an RPC label (in the GeoTIFF property label).

The reference image must have a GeoTIFF label.


.PAGE
Original Programmer: A. L. Zobrist, 16 Mar, 2005
Current Cognizant Programmer: A. L. Zobrist
.LEVEL1
.VARI INP
Input file name with GeoTIFF
label with RPC's; DTED file
.VARI OUT
Output file name
.VARI REF
Reference file name with GeoTIFF
label
.VARI TYPREF
'COVERINP - output minimally
   covers the input data
'COVERREF - output matches
   the ref image exactly
.VARI NAH
Number of grid cells horiz.
.VARI NAV
Number of grid cells vert.
.VARI INTERP
interpolation options
Valid: NOIN,ZNOIN,BILIN
.VARI SAVEGRID
optional file to save geom grid
.VARI GOREWID
Added width of gores for
'coverinp case only
.VARI MEMSIZE
sets vmemsize for call
of geomv (q.v.)
.LEVEL2
.VARI INP
Input file name.  This parameter is input as:
     INP=innam
where "innam" is the input file name.
.VARI OUT
Output file name. This parameter is input as:
     OUT=outnam
where:
"outnam" is the output file name.VARI OUT
.VARI REF
reference file name. This parameter is input as:
     REF=refnam
where:
"refnam" is the reference file name.

This is a VICAR image that has a GeoTIFF label to specify a mapping.
It could be an image of a geographic area, or it could be a single 
pixel image that serves as the holder of the GeoTIFF mapping information
only.  In the latter case only the 'coverinp case would make sense.
.VARI INTERP
This parameter has three valid keyword values: NOIN and BILIN.

NOIN means no interpolation.   The default method (used when neither keyword 
is specified) for computing the
DN values of the output picture is to use a bi-linear interpolation
on the four nearest neighbors in the input picture.  With NOIN, the
value of the nearest point is simply used.
For example, say a point in the output picture was determined
to have come from point (R,P) in the input picture.  Since R and P
are real values, we must somehow calculate a DN value for that
point.  Take IR and IP as the truncated values.  We then have
          VAL1                                 VAL2
           *                                    *
         (IR,IP)                              (IR,IP+1)
                     POINT
                       *
                     (R,P)
          VAL3                                 VAL4
           *                                    *
         (IR+1,IP)                           (IR+1,IP+1)
Here, POINT is the result of a bilinear interpolation using
VAL1, VAL2, VAL3, and VAL4.
If NOIN is specified, then POINT would be VAL1, the nearest
neighbor.

ZNOIN specifies that a four-point interpolation is done except
when one or more of the points used has a value equal to zero. 
In that case the nearest method is used.
This allows preparation of sharp edges (no interpolation rolloff)
for mosaicking.

.VARI TYPREF
     1.  The keyword 'coverinp causes the procedure to map all of the
     input image to an output image that will just contain it.   The
     keyword gorewid allows the user to specify a zero-filled margin
     to make the output a little larger (or negative trims smaller).
	
     2.  The keyword 'coverref causes the procedure to map the input
     image to an output image that exactly matches the "reference" image.
     Some parts of the input can be lost, or huge areas of zero-fill
     could be added to make the images match.  The gorewid keyword has
     no effect in this case.
	   
.VARI GOREWID
Added width of gores for 'coverinp case only.  This number of pixel
columns or rows is added to all four sides.  Zero fill is used.
.END
