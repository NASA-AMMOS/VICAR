tclmath invals=(1.000000000000e+01,2.000000000000e+01,3.00+
0000000000e+01,4.000000000000e+01,5.000000000000e+01)    func=average outvals=outvals outcount=outnum
Beginning VICAR task tclmath
*** tclmath version 2016-06-09 ***
let $echo="no"
********************************
 TEST 1 - AVERAGE TEST
number of outputs = 1
average = 3.000000000000e+01
 
********************************

tclmath invals=(9.000000000000e+00,2.500000000000e+01,1.00+
0000000000e+02,2.250000000000e+02,2.000000000000e+00)   func=sqroot outvals=outvals outcount=outnum
Beginning VICAR task tclmath
*** tclmath version 2016-06-09 ***
let $echo="no"
********************************
TEST 2 - SQUARE ROOT TEST
number of outputs = 5
square root of 9.0 = 3.000000000000e+00
square root of 25.0 = 5.000000000000e+00
square root of 100.0 = 1.000000000000e+01
square root of 225.0 = 1.500000000000e+01
square root of 2.0 = 1.414213538170e+00
 
********************************

tclmath invals=(3.000000000000e+00,5.000000000000e+00,1.00+
0000000000e+01,1.500000000000e+01,2.000000000000e+00)   func=square outvals=outvals outcount=outnum
Beginning VICAR task tclmath
*** tclmath version 2016-06-09 ***
let $echo="no"
********************************
TEST 3 - SQUARE TEST
number of outputs = 5
square of 3.0 = 9.000000000000e+00
square of 5.0 = 2.500000000000e+01
square of 10.0 = 1.000000000000e+02
square of 15.0 = 2.250000000000e+02
square of 2.0 = 4.000000000000e+00
 
********************************

tclmath invals=(-1.200000000000e+01,1.0000+
00000000e+01,2.000000000000e+00)    func=square outvals=outvals outcount=outnum
Beginning VICAR task tclmath
*** tclmath version 2016-06-09 ***
let $echo="no"
********************************
TEST 4 - SQUARE TEST - RMS
number of outputs = 3
rms = 8.266666666667e+01

********************************

tclmath invals=(-1.200000000000e+01,1.000000000000e+01,2.+
000000000000e+00) func=square  	outvals=outvals outcount=outnum
Beginning VICAR task tclmath
*** tclmath version 2016-06-09 ***
let $echo="no"
********************************
TEST 5 - SQUARE TEST
number of outputs = 3
rms = 8.266666666667e+01

********************************

tclmath invals=(2.000000000000e+00,5.00000+
0000000e+00,1+
.000000000000e+01)     func=LOG      outvals=outvals outcount=outnum
Beginning VICAR task tclmath
*** tclmath version 2016-06-09 ***
let $echo="no"
********************************
TEST 6 - LOG 10  TEST
number of outputs = 3
log10 of 2.0 = 3.010300099850e-01
log10 of 5.0 = 6.989700198174e-01
log10 of 10.0 = 1.000000000000e+00

********************************

tclmath invals=(2.000000000000e+00,5.00000+
0000000e+00,1.00+
0000000000e+01)     func=NATLOG      outvals=outvals outcount=outnum
Beginning VICAR task tclmath
*** tclmath version 2016-06-09 ***
let $echo="no"
********************************
TEST 7 - NATURAL LOG (LN) TEST
number of outputs = 3
ln of 2.0 = 6.931471824646e-01
ln of 5.0 = 1.609437942505e+00
ln of 10.0 = 2.302585124969e+00

********************************

tclmath invals=(2.000000000000e+00,5.00000+
0000000e+00,1+
.000000000000e+01)     func=EXP      outvals=outvals outcount=outnum
Beginning VICAR task tclmath
*** tclmath version 2016-06-09 ***
let $echo="no"
********************************
TEST 8 - EXPONENTIAL TEST
number of outputs = 3
exp of 2.0 = 7.389056205750e+00
exp of 5.0 = 1.484131622314e+02
exp of 10.0 = 2.202646484375e+04

********************************

tclmath invals=(2.000000000000e+00,5.00000+
0000000e+00,1.+
000000000000e+01)     func=CUBE      outvals=outvals outcount=outnum
Beginning VICAR task tclmath
*** tclmath version 2016-06-09 ***
let $echo="no"
********************************
TEST 9 - CUBE TEST
number of outputs = 3
cube of 2.0 = 8.000000000000e+00
cube of 5.0 = 1.250000000000e+02
cube of 10.0 = 1.000000000000e+03

********************************


********************************
TEST 10 - INVALID FUNCTION TEST (NOOP)
[TAE-INVSTR] message

********************************

tclmath invals=(6.00000000+
0000e+00)     +
func=NOOP      outvals=outvals outcount=outnum
[TAE-INVSTR] Value not one of the acceptable strings defined for 'func'.;
 proc 'tsttclmath', line 294
continue
let $echo="no"

********************************
Successful FAILURE TEST
********************************

