1  MINMAX

2  PURPOSE

      MINMAX is a subroutine which scans an array
      for its algebraic minimum and maximum.
      MINMAXE is a subroutine which scans an array
      for its algebraic minimum and maximum, excluding a specified value.


2  CALLING SEQUENCE

  FORTRAN Calling Sequences:  
      CALL MINMAX(DCODE,N,BUF,MIN,MAX,IMIN,IMAX)
      CALL MINMAXE(DCODE,N,BUF, EXCLUDE, MIN,MAX,IMIN,IMAX)

  C Calling Sequences:        
      zminmax(dcode,n,buf,&min,&max,&imin,&imax);
      zminmaxe(dcode,n,buf, &exclude, &min,&max,&imin,&imax);

2  ARGUMENTS

      DCODE       is a data code which specifies the format of the input
                  array BUF.  (See table.)
      
      N           specifies the number of elements in the array.

      BUF         is the input array.

      EXCLUDE     value to be excluded in search for minimum and 
                  maximum. (MINMAXE ONLY.)

      MIN,MAX     are returned as the minimum and maximum values of BUF.
                  For MINMAXE, MIN and MAX are set to EXCLUDE if all of
                  the values in BUF are equal to EXCLUDE. This return value
		  should be the same type as the input array.  

      IMIN,IMAX   are arguments which are returned as the indices
                  pointing to the minimum and maximum values in buf.  In
                  case of a tie,  IMIN and IMAX will point to the first
                  occurrence of a minima or maxima.

      The arguments DCODE, N, IMIN and IMAX are Integer*4 quantities.  

      If BUF is an integer array (DCODE<=4), then MIN and MAX are returned as 
      INTEGER*4 quantities and EXCLUDE is also INTEGER*4.  
 
      If BUF is a REAL*4 floating point array, then MIN and MAX are returned 
      as REAL*4 quantities and EXCLUDE is also REAL*4.   

      If BUF is a REAL*8 floating point array, then MIN and MAX are returned 
      as REAL*8 quantities and EXCLUDE is also REAL*8. 

      If DCODE=10 (COMPLEX), then MINMAX finds the values of minimum and 
      maximum magnitude (Fortran CABS function) and returns these values 
      as REAL*4 values.  For DCODE=10, EXCLUDE is REAL*4 and it is the \
      magnitudes of the values in BUF that are compared against EXCLUDE.

      For zminmax and zminmaxe, dcode and n are passed by value. exclude is
      passed by address for zminmaxe, and is an int * for dcode <= 4 and is a
      float * for DCODE >4.

      The possible values of the data code are:

			DCODE        ARRAY TYPE
                        -----        ----------

                          1             BYTE (unsigned)
                          2             INTEGER*2
                          4             INTEGER*4
                          7             REAL*4
                          8             REAL*8
                         10             COMPLEX
  
2  HISTORY   
 
  Original Programmer: Gary Yagi, 1 September 1980
  Current Cognizant Programmer: Steve Pohorsky    21 April 1988
  Source Language: Fortran
  Ported to UNIX: Steve Pohorsky

	REVISION HISTORY

   4-88  SP   ADDED ZEXT CALLS TO CORRECT THE BYTE CASE, AND ADDED
	       COMPLEX CASE (DCODE=10).
              ADDED SUBROUTINE MINMAXE WHICH FINDS MIN AND MAX EXCLUDING
              A SPECIFIED VALUE.
  12-88  SP   CORRECTED MINMAXE TO HANDLE CASE WHERE BUFFER BEGINS WITH
              EXCLUDED VALUE.
   1-93  SP   Ported to UNIX; added C bridges; No more optional parameters.
              Changed to use fortport.fin as improved portability method.  
  12-98  BAM  Modified to handle R*8 IMIN,IMAX values.

2 OPERATION

     For fixed point arrays, MINMAX is equivalent to the following FORTRAN:

			MIN = BUF(1)
			MAX = BUF(1)
			IMIN = 1
			IMAX = 1
			IF (N.LT.MIN) RETURN
			DO 10 I = 2,N
          		IF (BUF(I.LT.MIN)) GO TO 5
			IF (BUF(I.LE.MAX)) GO TO 10
			MAX = BUF(I)
			IMAX = I
			GO TO 10
		    5   MIN = BUF(I)
			IMIN = I
		   10   CONTINUE



