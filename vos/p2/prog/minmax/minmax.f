	SUBROUTINE MINMAX(DCODE,N,BUF,MIN,MAX,IMIN,IMAX)

	INTEGER*4  BUF(*),MIN,MAX,IMIN,IMAX,DCODE,N

	IF ( DCODE.EQ.1 ) THEN
	        CALL BMINMAX( N, BUF, MIN, MAX,IMIN , IMAX)
	ELSE IF ( DCODE.EQ.2) THEN
		CALL I2MINMAX( N, BUF, MIN, MAX, IMIN,IMAX)
	ELSE IF ( DCODE.EQ.4) THEN
		CALL I4MINMAX( N, BUF, MIN, MAX, IMIN, IMAX)
	ELSE IF ( DCODE.EQ.7) THEN
		CALL R4MINMAX( N, BUF,  MIN, MAX, IMIN, IMAX )
	ELSE IF ( DCODE.EQ.8) THEN
		CALL R8MINMAX( N, BUF, MIN, MAX, IMIN, IMAX )
	ELSE IF ( DCODE.EQ.10) THEN
		CALL CMINMAX( N, BUF, MIN, MAX, IMIN, IMAX )
	ENDIF

 	RETURN
	END
	
	
	SUBROUTINE BMINMAX(N,BBUF, MIN, MAX, IMIN, IMAX)
C  BYTE ARRAY

        include  'fortport'  ! defines BYTE2INT.
	BYTE  BBUF(N)
	INTEGER*4 N,MAX,MIN,IMAX,IMIN,I, IVAL

	I = 1
	MIN = BYTE2INT( BBUF(I) )
	MAX = BYTE2INT( BBUF(I) )
	IMIN = I
	IMAX = I

	DO WHILE (I.LE.N)
                IVAL = BYTE2INT( BBUF(I) )
		IF (MIN.GT.IVAL)THEN
			MIN = IVAL
			IMIN = I
		ENDIF

		IF (MAX.LT.IVAL) THEN
			MAX = IVAL
			IMAX = I
		ENDIF
		I = I + 1


	ENDDO


	RETURN
	END

	SUBROUTINE I2MINMAX(N,I2BUF,MIN,MAX,IMIN,IMAX)
C INTEGER*2 ARRAY

	INTEGER*2 I2BUF(N)
	INTEGER*4 N,MIN,MAX,IMIN,IMAX,I

	I = 1
	MIN = I2BUF(I)
	MAX = I2BUF(I)
	IMIN = I
	IMAX = I

	DO WHILE (I.LE.N)
		IF (MIN.GT.I2BUF(I))THEN
			MIN = I2BUF(I)
			IMIN = I
		ENDIF

		IF (MAX.LT.I2BUF(I)) THEN
			MAX = I2BUF(I)
			IMAX = I
		ENDIF
		I = I + 1
	ENDDO


	RETURN 
	END

	SUBROUTINE I4MINMAX(N,I4BUF,MIN,MAX,IMIN,IMAX)
C  INTEGER*4 ARRAY

	INTEGER*4 N,I4BUF(N),MIN,MAX,IMIN,IMAX,I

	I = 1
	MIN = I4BUF(I)
	MAX = I4BUF(I)
	IMIN = I
	IMAX = I

	DO WHILE (I.LE.N)
		IF (MIN.GT.I4BUF(I))THEN
			MIN = I4BUF(I)
			IMIN = I
		ENDIF

		IF (MAX.LT.I4BUF(I)) THEN
			MAX = I4BUF(I)
			IMAX = I
		ENDIF
		I = I + 1
	ENDDO

	RETURN
	END


	SUBROUTINE R4MINMAX(N,R4BUF,RMIN,RMAX,IMIN,IMAX)
C REAL*4 ARRAY

	INTEGER*4  N,IMIN,IMAX,I
	REAL*4     R4BUF(N),RMIN,RMAX

	I = 1
	RMIN = R4BUF(I)
	RMAX = R4BUF(I)
	IMIN = I
	IMAX = I

	DO WHILE (I.LE.N)
		IF (RMIN.GT.R4BUF(I))THEN
			RMIN = R4BUF(I)
			IMIN = I
		ENDIF

		IF (RMAX.LT.R4BUF(I)) THEN
			RMAX = R4BUF(I)
			IMAX = I
		ENDIF
		I = I + 1
	ENDDO

	RETURN
	END


	SUBROUTINE R8MINMAX(N,R8BUF,RMIN,RMAX,IMIN,IMAX)
C  REAL*8 ARRAY
	
	INTEGER*4   N,I,IMIN,IMAX
	REAL*8      R8BUF(N)
	REAL*8      RMIN,RMAX
	
	I = 1
	RMIN = R8BUF(I)
	RMAX = R8BUF(I)
	IMIN = I
	IMAX = I

	DO WHILE (I.LE.N)
		IF (RMIN.GT.R8BUF(I))THEN
			RMIN = R8BUF(I)
			IMIN = I
		ENDIF

		IF (RMAX.LT.R8BUF(I)) THEN
			RMAX = R8BUF(I)
			IMAX = I
		ENDIF
		I = I + 1
	ENDDO


	RETURN
	END


	SUBROUTINE CMINMAX(N,CBUF,RMIN,RMAX,IMIN,IMAX)
C  COMPLEX ARRAY
	
	INTEGER*4   N,I,IMIN,IMAX
	COMPLEX     CBUF(N)
	REAL*4      RMIN,RMAX
	
	I = 1
	RMIN = CABS( CBUF(I) )
	RMAX = CABS( CBUF(I) )
	IMIN = I
	IMAX = I

	DO I = 2, N
                RVAL = CABS( CBUF(I) )
		IF (RMIN.GT.RVAL)THEN
			RMIN = RVAL
			IMIN = I
		ENDIF

		IF (RMAX.LT.RVAL) THEN
			RMAX = RVAL
			IMAX = I
		ENDIF
	ENDDO


	RETURN
	END
C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C 
	SUBROUTINE MINMAXE(DCODE,N,BUF, EXCLUDE,MIN,MAX,IMIN,IMAX)

	INTEGER*4  BUF(*),MIN,MAX,IMIN,IMAX,DCODE,N, EXCLUDE

	IF ( DCODE.EQ.1 ) THEN
	        CALL BMINMAXE( N, BUF, EXCLUDE, MIN, MAX,IMIN , IMAX)
	ELSE IF ( DCODE.EQ.2) THEN
		CALL I2MINMAXE( N, BUF, EXCLUDE, MIN, MAX, IMIN,IMAX)
	ELSE IF ( DCODE.EQ.4) THEN
		CALL I4MINMAXE( N, BUF, EXCLUDE, MIN, MAX, IMIN, IMAX)
	ELSE IF ( DCODE.EQ.7) THEN
		CALL R4MINMAXE( N, BUF, EXCLUDE,  MIN, MAX, IMIN, IMAX )
	ELSE IF ( DCODE.EQ.8) THEN
		CALL R8MINMAXE( N, BUF, EXCLUDE, MIN, MAX, IMIN, IMAX )
	ELSE IF ( DCODE.EQ.10) THEN
		CALL CMINMAXE( N, BUF, EXCLUDE, MIN, MAX, IMIN, IMAX )
	ENDIF

 	RETURN
	END
	
	
	SUBROUTINE BMINMAXE(N,BBUF, EXCLUDE, MINI, MAXI, IMIN, IMAX)
C  BYTE ARRAY

        include  'fortport'  ! defines BYTE2INT.
	BYTE  BBUF(N)
	INTEGER*4 N,MAXI,MINI,IMAX,IMIN,I, IVAL, EXCLUDE
C==================================================================

	I = 1

C...SEARCH FOR FIRST NON-EXCLUDED VALUE.

        DO WHILE (I .LE. N .AND. BYTE2INT(BBUF(I)) .EQ. EXCLUDE)
           I = I+1
        END DO

C...IF NO NON-EXCLUDED VALUE, USE THE FIRST.

        IF (I .GT. N) THEN
           MINI = BYTE2INT(BBUF(1))
           MAXI = BYTE2INT(BBUF(1))
           IMIN = 1
           IMAX = 1

C...ELSE SEARCH FOR MIN AND MAX STARTING AT FIRST NON-EXCLUDED VALUE.

        ELSE
           MINI = BYTE2INT(BBUF(I))
           MAXI = BYTE2INT(BBUF(I))
           IMIN = I
           IMAX = I
           I    = I+1

           DO WHILE (I.LE.N)
               IVAL = BYTE2INT( BBUF(I) )
               IF ( IVAL .NE. EXCLUDE )  THEN
		IF (MINI.GT.IVAL)THEN
			MINI = IVAL
			IMIN = I
		ENDIF

		IF (MAXI.LT.IVAL) THEN
			MAXI = IVAL
			IMAX = I
		ENDIF
               END IF
	       I = I + 1
           ENDDO
        END IF

	RETURN
	END

	SUBROUTINE I2MINMAXE(N,I2BUF, EXCLUDE,MINI,MAXI,IMIN,IMAX)
C INTEGER*2 ARRAY

	INTEGER*2 I2BUF(N)
	INTEGER*4 N,MINI,MAXI,IMIN,IMAX,I, EXCLUDE
C==================================================================

	I = 1

C...SEARCH FOR FIRST NON-EXCLUDED VALUE.

        DO WHILE (I .LE. N .AND. I2BUF(I) .EQ. EXCLUDE)
           I = I+1
        END DO

C...IF NO NON-EXCLUDED VALUE, USE THE FIRST.

        IF (I .GT. N) THEN
           MINI = I2BUF(1)
           MAXI = I2BUF(1)
           IMIN = 1
           IMAX = 1

C...ELSE SEARCH FOR MIN AND MAX STARTING AT FIRST NON-EXCLUDED VALUE.

        ELSE
           MINI = I2BUF(I)
           MAXI = I2BUF(I)
           IMIN = I
           IMAX = I
           I    = I+1

           DO WHILE (I.LE.N)
               IF ( I2BUF(I) .NE. EXCLUDE )  THEN
		IF (MINI.GT.I2BUF(I))THEN
			MINI = I2BUF(I)
			IMIN = I
		ENDIF

		IF (MAXI.LT.I2BUF(I)) THEN
			MAXI = I2BUF(I)
			IMAX = I
		ENDIF
               END IF
               I = I + 1
           ENDDO
        END IF

	RETURN 
	END

	SUBROUTINE I4MINMAXE(N,I4BUF, EXCLUDE,MINI,MAXI,IMIN,IMAX)
C  INTEGER*4 ARRAY

	INTEGER*4 N,I4BUF(N),MINI,MAXI,IMIN,IMAX,I, EXCLUDE

C==================================================================

	I = 1

C...SEARCH FOR FIRST NON-EXCLUDED VALUE.

        DO WHILE (I .LE. N .AND. I4BUF(I) .EQ. EXCLUDE)
           I = I+1
        END DO

C...IF NO NON-EXCLUDED VALUE, USE THE FIRST.

        IF (I .GT. N) THEN
           MINI = I4BUF(1)
           MAXI = I4BUF(1)
           IMIN = 1
           IMAX = 1

C...ELSE SEARCH FOR MIN AND MAX STARTING AT FIRST NON-EXCLUDED VALUE.

        ELSE
           MINI = I4BUF(I)
           MAXI = I4BUF(I)
           IMIN = I
           IMAX = I
           I    = I+1

           DO WHILE (I.LE.N)
               IF ( I4BUF(I) .NE. EXCLUDE )  THEN
		IF (MINI.GT.I4BUF(I))THEN
			MINI = I4BUF(I)
			IMIN = I
		ENDIF

		IF (MAXI.LT.I4BUF(I)) THEN
			MAXI = I4BUF(I)
			IMAX = I
		ENDIF
               END IF
               I = I + 1
           ENDDO
        END IF

	RETURN
	END


	SUBROUTINE R4MINMAXE(N,R4BUF, EXCLUDE,RMIN,RMAX,IMIN,IMAX)
C REAL*4 ARRAY

	INTEGER*4  N,IMIN,IMAX,I
	REAL*4     R4BUF(N),RMIN,RMAX, EXCLUDE

C==================================================================

	I = 1

C...SEARCH FOR FIRST NON-EXCLUDED VALUE.

        DO WHILE (I .LE. N .AND. R4BUF(I) .EQ. EXCLUDE)
           I = I+1
        END DO

C...IF NO NON-EXCLUDED VALUE, USE THE FIRST.

        IF (I .GT. N) THEN
           RMIN = R4BUF(1)
           RMAX = R4BUF(1)
           IMIN = 1
           IMAX = 1

C...ELSE SEARCH FOR MIN AND MAX STARTING AT FIRST NON-EXCLUDED VALUE.

        ELSE
           RMIN = R4BUF(I)
           RMAX = R4BUF(I)
           IMIN = I
           IMAX = I
           I    = I+1

           DO WHILE (I.LE.N)
               IF ( R4BUF(I) .NE. EXCLUDE )  THEN
		IF (RMIN.GT.R4BUF(I))THEN
			RMIN = R4BUF(I)
			IMIN = I
		ENDIF

		IF (RMAX.LT.R4BUF(I)) THEN
			RMAX = R4BUF(I)
			IMAX = I
		ENDIF
               END IF
               I = I + 1
           ENDDO
        END IF

	RETURN
	END


	SUBROUTINE R8MINMAXE(N,R8BUF,EXCLUDE,RMIN,RMAX,IMIN,IMAX)
C  REAL*8 ARRAY
	
	INTEGER*4   N,I,IMIN,IMAX
	REAL*8      R8BUF(N)
	REAL*8      RMIN,RMAX,EXCLUDE
	
C==================================================================

	I = 1

C...SEARCH FOR FIRST NON-EXCLUDED VALUE.

        DO WHILE (I .LE. N .AND. R8BUF(I) .EQ. EXCLUDE)
           I = I+1
        END DO

C...IF NO NON-EXCLUDED VALUE, USE THE FIRST.

        IF (I .GT. N) THEN
           RMIN = R8BUF(1)
           RMAX = R8BUF(1)
           IMIN = 1
           IMAX = 1

C...ELSE SEARCH FOR MIN AND MAX STARTING AT FIRST NON-EXCLUDED VALUE.

        ELSE
           RMIN = R8BUF(I)
           RMAX = R8BUF(I)
           IMIN = I
           IMAX = I
           I    = I+1

           DO WHILE (I.LE.N)
               IF ( R8BUF(I) .NE. EXCLUDE )  THEN
		IF (RMIN.GT.R8BUF(I))THEN
			RMIN = R8BUF(I)
			IMIN = I
		ENDIF

		IF (RMAX.LT.R8BUF(I)) THEN
			RMAX = R8BUF(I)
			IMAX = I
		ENDIF
               END IF
               I = I + 1
           ENDDO
        END IF


	RETURN
	END


	SUBROUTINE CMINMAXE(N,CBUF, EXCLUDE,RMIN,RMAX,IMIN,IMAX)
C  COMPLEX ARRAY
	
	INTEGER*4   N,I,IMIN,IMAX
	COMPLEX     CBUF(N)
	REAL*4      RMIN,RMAX, EXCLUDE
C==================================================================

	I = 1

C...SEARCH FOR FIRST NON-EXCLUDED VALUE.

        DO WHILE (I .LE. N .AND. CABS(CBUF(I)) .EQ. EXCLUDE)
           I = I+1
        END DO

C...IF NO NON-EXCLUDED VALUE, USE THE FIRST.

        IF (I .GT. N) THEN
           RVAL = CABS( CBUF(1) )
           RMIN = RVAL
           RMAX = RVAL
           IMIN = 1
           IMAX = 1

C...ELSE SEARCH FOR MIN AND MAX STARTING AT FIRST NON-EXCLUDED VALUE.

        ELSE
           RVAL = CABS( CBUF(I) )
           RMIN = RVAL
           RMAX = RVAL
           IMIN = I
           IMAX = I
           I    = I+1

           DO WHILE (I.LE.N)
               RVAL = CABS( CBUF(I) )
               IF ( RVAL .NE. EXCLUDE )  THEN
		IF (RMIN.GT.RVAL)THEN
			RMIN = RVAL
			IMIN = I
		ENDIF

		IF (RMAX.LT.RVAL) THEN
			RMAX = RVAL
			IMAX = I
		ENDIF
               END IF
               I = I + 1
           ENDDO
        END IF

	RETURN
	END
