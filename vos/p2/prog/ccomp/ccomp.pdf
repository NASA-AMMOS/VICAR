process help=*
PARM INP TYPE=(STRING) COUNT=1:2
PARM OUT TYPE=(STRING) COUNT=1:2
PARM SIZE TYPE=INTEGER COUNT=4 DEFAULT=(1,1,0,0)
PARM SL TYPE=INTEGER DEFAULT=1
PARM SS TYPE=INTEGER DEFAULT=1
PARM NL TYPE=INTEGER DEFAULT=0
PARM NS TYPE=INTEGER DEFAULT=0
PARM TRANS  TYPE=KEYWORD VALID=(POLAR,RECTANG) DEFAULT=POLAR
PARM DIRECT TYPE=KEYWORD VALID=(FORWARD,INVERSE) DEFAULT=FORWARD

!# annot function="Vicar Data Conversion"
!# annot keywords=(complex,transform,image,amplitude,phase,real,imaginary)

END-PROC
.TITLE
Converts images from complex to real data formats or vice-versa
.HELP
PURPOSE

    CCOMP converts images between complex pixel format and two real
format images.  Two types of transformation are possible (amplitude and phase)
or (real and imaginary).  The transformation may be done in either direction:
a complex image to two real images, or two real images to a complex image.


EXECUTION

    ccomp  IN.CMP  (OUT.AMP,OUT.PH)
    ccomp  IN.CMP  (OUT.RE, OUT.IM)  'RECT

    ccomp  (IN.AMP,IN.PH)  OUT.CMP    'POLAR 'INVERSE
    ccomp  (IN.RE, IN.IM)  OUT.CMP    'RECT  'INVERSE

'POLAR is the default transformation and 'FORWARD is the default direction.




Original Programmer:   Frank Evans         November 1986

Cognizant Programmer:  Frank Evans

Made portable for UNIX  RNR(CRI)           02-MAY-94

    Dec 18, 2012 - R. J. Bambery - Previous versions opened certain output
                            Files as COMPLEX, RTL standard is COMP. Now fixed.

.LEVEL1
.VARIABLE INP
For FORWARD mode:
  complex image
For INVERSE mode:
  (real and imaginary) or
  (amplitude and phase) images
.VARIABLE OUT
For FORWARD mode:
  (real and imaginary) or
  (amplitude and phase) images
For INVERSE mode:
  complex image
.VARIABLE SIZE
VICAR size field
.VARIABLE SL
Starting line
.VARIABLE SS
Starting sample
.VARIABLE NL
Number of lines
.VARIABLE NS
Number of samples
.VARIABLE TRANS
Keyword for the transformation:
'POLAR for amplitude and phase.
'RECTANG for real and imaginary.
.VARIABLE DIRECT
Keyword for the direction:
FORWARD for complex input.
INVERSE for complex output.
.END
