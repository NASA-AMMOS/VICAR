process help=*
PARM INP	TYPE = STRING   COUNT=1
PARM OUT	TYPE = STRING   COUNT=1
PARM NPTS       TYPE = INTEGER  COUNT=1	  DEFAULT = 6  VALID=(4:20)
PARM DISTANCE   TYPE = REAL     COUNT=1	  DEFAULT = 20. VALID=(1.:1000.)
PARM LENGTH     TYPE = REAL     COUNT=1	  DEFAULT = 1000. VALID=(.001:1001.)
PARM ANGLE      TYPE = REAL     COUNT=1	  DEFAULT = 30. VALID=(0.:180.)
PARM RANGE      TYPE = REAL     COUNT=1	  DEFAULT = 0.3 VALID=(0.:1.)
PARM BIAS       TYPE = REAL     COUNT=1	  DEFAULT = 3.0 VALID=(.001:1000.)
PARM BOTH       TYPE = KEYWORD  	  DEFAULT = EITHER +
               VALID=(BOTH,EITHER)
END-PROC
.TITLE
VICAR program TPTEDT2.

.HELP
PURPOSE:
Batch editor for automated removal of erroneous vectors (tiepoints)
from a mark file produced by TRACKER3.
The equivalent interactive program is TPTEDT.

.PAGE
EXECUTION:

TPTEDT2 may be executed in the following manner:

                TRACKER3 INP=(LEFT,RIGHT) OUT=A
		TPTEDT2 INP=A OUT=B PARAMS

where INP, OUT, SIZE, AND PARAMS are parameters and are explained in their
respective parameter section.

PROPER USAGE:

This algorithm uses neighborhood vectors to predict behavior at a
point. For this to make any sense the vector spacing in TRACKER
must be LESS than the correlation size or less than the eddy size
in the medium being analyzed. Too coarse a spacing will just 
produce junk. Good results require hundreds of vectors.

The keyword BIAS is important. Make certain you understand it.

.PAGE
OPERATION:

Tptedt2 edits mark file tiepoints.  The input tiepoints are stored in
memory. Each tiepoint (reference) is analyzed in the following manner:

1. 4 points are selected. These are the nearest points in each quadrant
   surrounding the reference tiepoint (in the left image).

2. Optionally additional points are selected from the closest points
   in any direction until the total neighborhood points is NPTS.

3. A least squares fit is made relating the left and right images
   using the NPTS points (exluding the reference tiepoint).

4. The right position of the reference tiepoint is computed using the
   left base position and the polynomial coefficients.

5. The vector length is computed for the reference and predicted
   reference tiepoint.

6. The vector angle is computed for the reference and predicted
   reference tiepoint.

7. The reference tiepoint is deleted if:
   A)  It's length departs excessively from the predicted value.
       If Lr is the  vector length and Lp is the predicted
       length then the tiepoint is deleted if:
       abs(Lr-Lp)/(Lr+Lp+BIAS) > RANGE
   B)  It's angle deviates excessively from the predicted value.
       If Ar is the vector angle and Ap is the predicted
       angle then the tiepoint is deleted if:
       abs(Ar-Ap)*Lr/(Lr+BIAS) > ANGLE

   NOTE: The default case deletes a tiepoint if either of the above
         criteria are violated. The BOTH keyword requires both criteria
         to be violated for the point to be deleted.


Notes: If NPTS=4 then only the quadrant points are used. Border points
       may not have 4 quadrant points and will never be deleted.

       If NPTS=4 equal weight is given to each point in the polynomial
       fit.

       If NPTS > 4 the fit will be least squares using weighting. The
       weight = DISTANCE/(d+1)   where d=the distance of each point
       from the reference point in pixels.

       The polynomial is of the form:
       Y=Ax+By+Cxy+D
       X=Ex+Fy+Gxy+H

EXAMPLE:

	 TPTEDT2 INP=A OUT=B NPTS=7 DISTANCE=10. ANGLE=15. RANGE=.5

.PAGE
HISTORY:

ORIGINALLY WRITTEN BY: J Lorre 3/30/93
COGNIZANT PROGRAMMER:  Jean Lorre

.LEVEL1
.VARI INP
STRING-input dataset.
.VARI OUT
STRING-output dataset.
.VARI NPTS
Number of fitted
tiepoints.
.VARI DISTANCE
Weighting distance
.VARI LENGTH
Max vector length
.VARI ANGLE
Permitted angle
deviation
.VARI RANGE
Permitted length
deviation.
.VARI BIAS
Permitted length 
deviation bias.
.VARI BOTH
Both range and
angle must be
violated.

.LEVEL2

.VARI INP
Input mark format tiepoints file created by program TRACKER.
Contains 4 word groups leftline,leftsample,rightline,rightsample.
real format 512 byte records. Bad points are zeroed out.

.VARI OUT
Identical to INP except deleted tiepoints are zeroed out.

.VARI NPTS
Number of tiepoints in the near vicinity of each tiepoint to use in
a least squares fit to predict that tiepoint from it's neighbors.
Must be between 4 and 20.

.VARI DISTANCE
Weighting distance used in weighting points according to their
distance.  Weight=DISTANCE/(d+1)  where d is the distance to each 
tiepoint in pixels.

.VARI LENGTH
The maximum vector length permitted. Any vector longer than this is rejected.

.VARI ANGLE
Maximum permitted angle deviation between the tiepoint vector and
the vector predicted from the neighboring tiepoint vectors.
In degrees.
       If Ar is the vector angle and Ap is the predicted
       angle then the tiepoint is deleted if:
       abs(Ar-Ap)*Lr/(Lr+BIAS) > ANGLE
See the BIAS keyword.

.VARI RANGE
Maximum permitted length deviation between the tiepoint vector and
the vector predicted from the neighboring tiepoint vectors.
This is a ratio between 0 and 1.
       If Lr is the  vector length and Lp is the predicted
       length then the tiepoint is deleted if:
       abs(Lr-Lp)/(Lr+Lp+BIAS) > RANGE
See the BIAS keyword.

.VARI BIAS
BIAS protects short vectors from being deleted. It should be set to
about the length of the shortest vectors which one considers to begin
to be immune from testing. 
For purposes of geoms or morphing a vector of nearly zero length does no harm.
Such a short vector really points nowhere and it's angle is meaningless. You
generally want to keep it.

.VARI BOTH
Both range and angle checks must be violated for a point to be deleted.
The default is to delete the tiepoint if either check fails.
.END
