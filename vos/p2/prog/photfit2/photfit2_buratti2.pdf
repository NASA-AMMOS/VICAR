procedure option=selftutor help=*

	parm ALBEDOt	 	 real count=0:1 		def=0.5 
	parm MIN_ALBEDOt	 real count=0:1 		def=0.0 
	parm MAX_ALBEDOt	 real count=0:1 		def=1.0 
	parm T_ALBEDOt	 	 real count=0:1 		def=0.3 
	parm B_VEVERKAt	 	 real count=0:1 		def=0.6
	parm MIN_B_VEVERKAt	 real count=0:1 		def=-3.0
	parm MAX_B_VEVERKAt	 real count=0:1 		def=3.0
	parm T_B_VEVERKAt	 real count=0:1 		def=0.05
	parm C_VEVERKAt	 	 real count=0:1 		def=-0.003
 	parm MIN_C_VEVERKAt	 real count=0:1 		def=-3.0
	parm MAX_C_VEVERKAt	 real count=0:1 		def=3.0
	parm T_C_VEVERKAt	 real count=0:1 		def=0.05
	parm E_BURATTIt	 	 real count=0:1			def=0.14
	parm MIN_E_BURATTIt	 real count=0:1 		def=0.0
	parm MAX_E_BURATTIt	 real count=0:1 		def=1.0
	parm T_E_BURATTIt	 real count=0:1 		def=0.3

	parm ALBEDO	 	real count=0:1 	def=-- 
	parm MIN_ALBEDO	 	real count=0:1 	def=-- 
	parm MAX_ALBEDO	 	real count=0:1 	def=-- 
	parm T_ALBEDO	 	real count=0:1 	def=-- 
	parm B_VEVERKA		real count=0:1 	def=--
	parm MIN_B_VEVERKA	real count=0:1  def=--
	parm MAX_B_VEVERKA	real count=0:1  def=--
	parm T_B_VEVERKA	real count=0:1 	def=--
	parm C_VEVERKA	 	real count=0:1 	def=--
	parm MIN_C_VEVERKA	real count=0:1 	def=--
	parm MAX_C_VEVERKA	real count=0:1 	def=--
	parm T_C_VEVERKA	real count=0:1 	def=--
	parm E_BURATTI	 	real count=0:1 	def=--
	parm MIN_E_BURATTI	real count=0:1 	def=--
	parm MAX_E_BURATTI	real count=0:1 	def=--
	parm T_E_BURATTI	real count=0:1 	def=--

	PARMSET name=photfit2_buratti2_sub help=*

		parm ALBEDO	 	real count=0:1 	def=-- 
		parm MIN_ALBEDO	 	real count=0:1 	def=-- 
		parm MAX_ALBEDO	 	real count=0:1 	def=-- 
		parm T_ALBEDO	 	real count=0:1 	def=-- 
		parm B_VEVERKA		real count=0:1 	def=--
		parm MIN_B_VEVERKA	real count=0:1  def=--
		parm MAX_B_VEVERKA	real count=0:1  def=--
		parm T_B_VEVERKA	real count=0:1 	def=--
		parm C_VEVERKA	 	real count=0:1 	def=--
		parm MIN_C_VEVERKA	real count=0:1 	def=--
		parm MAX_C_VEVERKA	real count=0:1 	def=--
		parm T_C_VEVERKA	real count=0:1 	def=--
		parm E_BURATTI	 	real count=0:1 	def=--
		parm MIN_E_BURATTI	real count=0:1 	def=--
		parm MAX_E_BURATTI	real count=0:1 	def=--
		parm T_E_BURATTI	real count=0:1 	def=--

	END-PROC

body

	if (_tutor=1)

	  restore-parm pho_buratti2.par



	  if ($count(ALBEDO)=0)
	 					let ALBEDOt=0.5
	  else
	 	let ALBEDOt=&ALBEDO
	  end-if

	  if ($count(MIN_ALBEDO)=0)
	 					let MIN_ALBEDOt=0.0
	  else
	 	let MIN_ALBEDOt=&MIN_ALBEDO
	  end-if

	  if ($count(MAX_ALBEDO)=0)
	 					let MAX_ALBEDOt=1.0
	  else
	 	let MAX_ALBEDOt=&MAX_ALBEDO
	  end-if

	  if ($count(T_ALBEDO)=0)
	 					let T_ALBEDOt=0.3
	  else
	 	let T_ALBEDOt=&ALBEDO
	  end-if


	  if ($count(B_VEVERKA)=0)
	 					let B_VEVERKAt=0.6
	  else
		let B_VEVERKAt=&B_VEVERKA
	  end-if

	  if ($count(MIN_B_VEVERKA)=0)
	 					let MIN_B_VEVERKAt=-3.0
	  else
		let MIN_B_VEVERKAt=&MIN_B_VEVERKA
	  end-if

	  if ($count(MAX_B_VEVERKA)=0)
	 					let MAX_B_VEVERKAt=3.0
	  else
		let MAX_B_VEVERKAt=&MAX_B_VEVERKA
	  end-if

	  if ($count(T_B_VEVERKA)=0)
	 					let T_B_VEVERKAt=0.05
	  else
		let T_B_VEVERKAt=&T_B_VEVERKA
	  end-if


	  if ($count(C_VEVERKA)=0)
	 					let C_VEVERKAt=-0.003
	  else
	 	let C_VEVERKAt=&C_VEVERKA
	  end-if

	  if ($count(MIN_C_VEVERKA)=0)
	 					let MIN_C_VEVERKAt=-3.0
	  else
	 	let MIN_C_VEVERKAt=&MIN_C_VEVERKA
	  end-if

	  if ($count(MAX_C_VEVERKA)=0)
	 					let MAX_C_VEVERKAt=3.0
	  else
	 	let MAX_C_VEVERKAt=&MAX_C_VEVERKA
	  end-if

	  if ($count(T_C_VEVERKA)=0)
	 					let T_C_VEVERKAt=0.05
	  else
	 	let T_C_VEVERKAt=&T_C_VEVERKA
	  end-if


	  if ($count(E_BURATTI)=0)
	 					let E_BURATTIt=0.14
	  else
	 	let E_BURATTIt=&E_BURATTI
	  end-if

	  if ($count(MIN_E_BURATTI)=0)
	 					let MIN_E_BURATTIt=0.0
	  else
	 	let MIN_ALBEDOt=&MIN_E_BURATTI
	  end-if

	  if ($count(MAX_E_BURATTI)=0)
	 					let MAX_E_BURATTIt=1.0
	  else
	 	let MAX_E_BURATTIt=&MAX_E_BURATTI
	  end-if

	  if ($count(T_E_BURATTI)=0)
	 					let T_E_BURATTIt=0.14
	  else
	 	let T_E_BURATTIt=&T_E_BURATTI
	  end-if



	 	
	   tutor photfit2_buratti2_sub      				+
		|restore=pho_buratti2.par, save=pho_buratti2.par|	+
		ALBEDO=&ALBEDOt	       		       			+
		MIN_ALBEDO=&MIN_ALBEDOt	       		       		+
		MAX_ALBEDO=&MAX_ALBEDOt	       		       		+
		T_ALBEDO=&T_ALBEDOt	       		       		+
		B_VEVERKA=&B_VEVERKAt      				+
		MIN_B_VEVERKA=&MIN_B_VEVERKAt      			+
		MAX_B_VEVERKA=&MAX_B_VEVERKAt      			+
		T_B_VEVERKA=&T_B_VEVERKAt      				+
		C_VEVERKA=&C_VEVERKAt					+
		MIN_C_VEVERKA=&MIN_C_VEVERKAt				+
		MAX_C_VEVERKA=&MAX_C_VEVERKAt				+
		T_C_VEVERKA=&T_C_VEVERKAt				+
		E_BURATTI=&E_BURATTIt					+
		MIN_E_BURATTI=&MIN_E_BURATTIt				+
		MAX_E_BURATTI=&MAX_E_BURATTIt				+
		T_E_BURATTI=&T_E_BURATTIt

	   return

	else
	   write " "
	   write "*********************************************************"
	   write " "
	   write " This program is only intended to be run "
	   write " as tutor from other programs needs "
	   write " photometric function parameters "
	   write " for the BURATTI2 function."
	   write " "
	   write "*********************************************************"
	   write " "
	end-if

end-proc

.title
'PHOTFIT2_BURATTI2' sub-menu'

.help

PURPOSE:

In this PDF, the user is asked for the parameters and there limits needed to 
fit Buratti's photometric function.

.page
MATHEMATICAL BACKGROUND :

bidirectional reflectance [1/str] :

r(i,e,g) = A * cos(i)/(cos(i)+cos(e)) * burf + (1 - A) * cos(i)

burf = ((1 - A) * 2/3 + A*E)*phi - (1 - A) * 2/3 * ((sin(phase) + (PI - phase) 
* cos(phase))/PI)

BURATTI2 approximation : 
phi = 1 + phase * (B + phase * C)

REFERENCE :
Bonnie Buratti, Voyager Disk Resolved Photometry of the Saturnian Satellites,
	Icarus, Vol. 59, p. 392-405, 
Bonnie Buratti, Joseph Veverka, Voyager Photometry of Europa,
	Icarus, Vol. 55, p. 93-110, 1983


.page
PROGRAMMER:

Friedel Oschuetz
Institute of Planetary Exploration
DLR
12484 Berlin (FRG)


.level1

.VARI ALBEDO
isotropic/unisotropic 
reflectance weight 

.VARI MIN_ALBEDO
Minimum of isotropic/unisotropic 
reflectance weight 

.VARI MAX_ALBEDO
Maximum of isotropic/unisotropic 
reflectance weight 

.VARI T_ALBEDO
Temperatur of isotropic/unisotropic 
reflectance weight 

.VARI B_VEVERKA 
Veverka parameter

.VARI MIN_B_VEVERKA 
Minimum of Veverka parameter

.VARI MAX_B_VEVERKA 
Maximum of Veverka parameter

.VARI T_B_VEVERKA 
Temperatur of Veverka parameter

.VARI C_VEVERKA
Veverka parameter

.VARI MIN_C_VEVERKA
Minimum of Veverka parameter

.VARI MAX_C_VEVERKA
Maximum of Veverka parameter

.VARI T_C_VEVERKA
Temperatur of Veverka parameter

.VARI E_BURATTI
Buratti's parameter

.VARI MIN_E_BURATTI
Minimum of Buratti's parameter

.VARI MAX_E_BURATTI
Maximum of Buratti's parameter

.VARI T_E_BURATTI
Temperatur of Buratti's parameter

.level2

.VARI ALBEDO
Weight of unisotropic and isotropic reflectance.

.VARI MIN_ALBEDO
This parameter gives the absolut lower limit of the weight of unisotropic and 
isotropic reflectance.
If a sulution guess falls out-of-bonds then the attemp will be aborted and 
a new guess attempted.

.VARI MAX_ALBEDO
This parameter gives the absolut upper limit of the weight of unisotropic and 
isotropic reflectance.
If a sulution guess falls out-of-bonds then the attemp will be aborted and 
a new guess attempted.

.VARI T_ALBEDO
This parameter gives temperatur for the weight of unisotropic and isotropic 
reflectance.
This parameter gives the range over which random guesses can be expected to 
vary at first:
    ALBEDO_NEW = T_ALBEDO * tan( PI * ran_num + PI/2 ).
As the system cools the range will constrict gradually :
	T_ALBEDO_NEW_* = T_ALBEDO_OLD_* * scale, 
scale depends of NUMTEN.

.VARI B_VEVERKA 
Parameter of the Veverka and Mosher photometric functions.

.VARI MIN_B_VEVERKA 
This parameter gives the absolut lower limit of the parameter of the Veverka 
and Mosher photometric functions.
If a sulution guess falls out-of-bonds then the attemp will be aborted and 
a new guess attempted.

.VARI MAX_B_VEVERKA 
This parameter gives the absolut upper limit of the parameter of the Veverka 
and Mosher photometric functions.
If a sulution guess falls out-of-bonds then the attemp will be aborted and 
a new guess attempted.

.VARI T_B_VEVERKA 
This parameter gives temperatur for the parameter of the Veverka and Mosher 
photometric functions.
This parameter gives the range over which random guesses can be expected to 
vary at first:
    B_VEVERKA_NEW = T_B_VEVERKA * tan( PI * ran_num + PI/2 ).
As the system cools the range will constrict gradually :
	T_B_VEVERKA_NEW_* = T_B_VEVERKA_OLD_* * scale, 
scale depends of NUMTEN.

.VARI C_VEVERKA
Parameter of the Veverka, Mosher and Buratti 
photometric functions.

.VARI MIN_C_VEVERKA
This parameter gives the absolut lower limit of the parameter of the Veverka, 
Mosher and Buratti photometric functions.
If a sulution guess falls out-of-bonds then the attemp will be aborted and 
a new guess attempted.

.VARI MAX_C_VEVERKA
This parameter gives the absolut upper limit of the parameter of the Veverka, 
Mosher and Buratti photometric functions.
If a sulution guess falls out-of-bonds then the attemp will be aborted and 
a new guess attempted.

.VARI T_C_VEVERKA
This parameter gives temperatur for the parameter of the parameter of the 
Veverka, Mosher and Buratti photometric functions.
This parameter gives the range over which random guesses can be expected to 
vary at first:
    C_VEVERKA_NEW = T_C_VEVERKA * tan( PI * ran_num + PI/2 ).
As the system cools the range will constrict gradually :
	T_C_VEVERKA_NEW_* = T_C_VEVERKA_OLD_* * scale, 
scale depends of NUMTEN.

.VARI E_BURATTI
Buratti's parameter for modification of the Veverka photometric function.

.VARI MIN_E_BURATTI
This parameter gives the absolut lower limit of the Buratti's parameter for 
modification of the Veverka photometric function.
If a sulution guess falls out-of-bonds then the attemp will be aborted and 
a new guess attempted.

.VARI MAX_E_BURATTI
This parameter gives the absolut upper limit of the Buratti's parameter for 
modification of the Veverka photometric function.
If a sulution guess falls out-of-bonds then the attemp will be aborted and 
a new guess attempted.

.VARI T_E_BURATTI
This parameter gives temperatur for the Buratti's parameter for modification of 
the Veverka photometric function.
This parameter gives the range over which random guesses can be expected to 
vary at first:
    E_BURATTI_NEW = T_E_BURATTI * tan( PI * ran_num + PI/2 ).
As the system cools the range will constrict gradually :
	T_E_BURATTI_NEW_* = T_E_BURATTI_OLD_* * scale, 
scale depends of NUMTEN.

.end
