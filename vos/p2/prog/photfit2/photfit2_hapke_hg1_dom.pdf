procedure option=selftutor help=*

	parm W_SOILt 		real count=0:1 			def=0.3
	parm MIN_W_SOILt 	real count=0:1 			def=0.0
	parm MAX_W_SOILt 	real count=0:1 			def=1.0
	parm T_W_SOILt 		real count=0:1 			def=0.2
	parm H_SHOEt		real count=0:1 			def=0.06
	parm MIN_H_SHOEt	real count=0:1 			def=0.0
	parm MAX_H_SHOEt	real count=0:1 			def=2.0
	parm T_H_SHOEt		real count=0:1 			def=0.2
	parm B_SHOEt		real count=0:1 			def=2.0
	parm MIN_B_SHOEt	real count=0:1 			def=0.0
	parm MAX_B_SHOEt	real count=0:1 			def=10.0
	parm T_B_SHOEt		real count=0:1 			def=1.0
	parm THETAt	 	real count=0:1 			def=20
	parm MIN_THETAt		real count=0:1 			def=0
	parm MAX_THETAt		real count=0:1 			def=60.0
	parm T_THETAt		real count=0:1 			def=6.0
	parm HG1_SOILt		real count=0:1 			def=-0.26
	parm MIN_HG1_SOILt	real count=0:1 			def=-1.0
	parm MAX_HG1_SOILt	real count=0:1 			def=1.0
	parm T_HG1_SOILt	real count=0:1 			def=0.2
    	parm H_CBOEt 		real count=0:1 			def=0.06
    	parm MIN_H_CBOEt 	real count=0:1 			def=0.0
    	parm MAX_H_CBOEt 	real count=0:1 			def=2.0
    	parm T_H_CBOEt 		real count=0:1 			def=0.2
    	parm B_CBOEt 		real count=0:1 			def=1.0
    	parm MIN_B_CBOEt 	real count=0:1 			def=0.0
    	parm MAX_B_CBOEt 	real count=0:1 			def=2.0
    	parm T_B_CBOEt 		real count=0:1 			def=0.2

	parm W_SOIL 	 	real count=0:1 def=--
	parm MIN_W_SOIL 	real count=0:1 def=--
	parm MAX_W_SOIL 	real count=0:1 def=--
	parm T_W_SOIL 	 	real count=0:1 def=--
	parm H_SHOE	 	real count=0:1 def=--
	parm MIN_H_SHOE	 	real count=0:1 def=--
	parm MAX_H_SHOE	 	real count=0:1 def=--
	parm T_H_SHOE	 	real count=0:1 def=--
	parm B_SHOE		real count=0:1 def=--
	parm MIN_B_SHOE		real count=0:1 def=--
	parm MAX_B_SHOE		real count=0:1 def=--
	parm T_B_SHOE		real count=0:1 def=--
	parm THETA	 	real count=0:1 def=--
	parm MIN_THETA	 	real count=0:1 def=--
	parm MAX_THETA	 	real count=0:1 def=--
	parm T_THETA	 	real count=0:1 def=--
	parm HG1_SOIL	 	real count=0:1 def=--
	parm MIN_HG1_SOIL	real count=0:1 def=--
	parm MAX_HG1_SOIL	real count=0:1 def=--
	parm T_HG1_SOIL	 	real count=0:1 def=--
    	parm H_CBOE 	 	real count=0:1 def=--
    	parm MIN_H_CBOE 	real count=0:1 def=--
    	parm MAX_H_CBOE 	real count=0:1 def=--
    	parm T_H_CBOE 	 	real count=0:1 def=--
    	parm B_CBOE 	 	real count=0:1 def=--
    	parm MIN_B_CBOE 	real count=0:1 def=--
    	parm MAX_B_CBOE 	real count=0:1 def=--
    	parm T_B_CBOE 	 	real count=0:1 def=--

	PARMSET name=pho_hapke_hg1_dom_sub help=*

		parm W_SOIL 	 	real count=0:1 def=--
		parm MIN_W_SOIL 	real count=0:1 def=--
		parm MAX_W_SOIL 	real count=0:1 def=--
		parm T_W_SOIL 	 	real count=0:1 def=--
		parm H_SHOE	 	real count=0:1 def=--
		parm MIN_H_SHOE	 	real count=0:1 def=--
		parm MAX_H_SHOE	 	real count=0:1 def=--
		parm T_H_SHOE	 	real count=0:1 def=--
		parm B_SHOE		real count=0:1 def=--
		parm MIN_B_SHOE		real count=0:1 def=--
		parm MAX_B_SHOE		real count=0:1 def=--
		parm T_B_SHOE		real count=0:1 def=--
		parm THETA	 	real count=0:1 def=--
		parm MIN_THETA	 	real count=0:1 def=--
		parm MAX_THETA	 	real count=0:1 def=--
		parm T_THETA	 	real count=0:1 def=--
		parm HG1_SOIL	 	real count=0:1 def=--
		parm MIN_HG1_SOIL	real count=0:1 def=--
		parm MAX_HG1_SOIL	real count=0:1 def=--
		parm T_HG1_SOIL	 	real count=0:1 def=--
    		parm H_CBOE 	 	real count=0:1 def=--
    		parm MIN_H_CBOE 	real count=0:1 def=--
    		parm MAX_H_CBOE 	real count=0:1 def=--
    		parm T_H_CBOE 	 	real count=0:1 def=--
    		parm B_CBOE 	 	real count=0:1 def=--
    		parm MIN_B_CBOE 	real count=0:1 def=--
    		parm MAX_B_CBOE 	real count=0:1 def=--
    		parm T_B_CBOE 	 	real count=0:1 def=--

	END-PROC

body

	if (_tutor=1)

	  restore-parm pho_hapke_hg1_dom.par


	  if ($count(W_SOIL)=0)
	 					let W_SOILt=0.3
	  else
		let W_SOILt=&W_SOIL
	  end-if

	  if ($count(MIN_W_SOIL)=0)
	 					let MIN_W_SOILt=0.0
	  else
		let MIN_W_SOILt=&MIN_W_SOIL
	  end-if

	  if ($count(MAX_W_SOIL)=0)
	 					let MAX_W_SOILt=1.0
	  else
		let MAX_W_SOILt=&MAX_W_SOIL
	  end-if

	  if ($count(T_W_SOIL)=0)
	 					let T_W_SOILt=0.2
	  else
		let T_W_SOILt=&T_W_SOIL
	  end-if


	  if ($count(H_SHOE)=0)
	 					let H_SHOEt=0.06
	  else
		let H_SHOEt=&H_SHOE
	  end-if

	  if ($count(MIN_H_SHOE)=0)
	 					let MIN_H_SHOEt=0.0
	  else
		let MIN_H_SHOEt=&MIN_H_SHOE
	  end-if

	  if ($count(MAX_H_SHOE)=0)
	 					Let MAX_H_SHOEt=2.0
	  else
		let MAX_H_SHOEt=&MAX_H_SHOE
	  end-if

	  if ($count(T_H_SHOE)=0)
	 					let T_H_SHOEt=0.2
	  else
		let T_H_SHOEt=&T_H_SHOE
	  end-if


	  if ($count(B_SHOE)=0)
	 					let B_SHOEt=2.0
	  else
		let B_SHOEt=&H_SHOE
	  end-if

	  if ($count(MIN_B_SHOE)=0)
	 					let MIN_B_SHOEt=0.0
	  else
		let MIN_B_SHOEt=&MIN_H_SHOE
	  end-if

	  if ($count(MAX_B_SHOE)=0)
	 					let MAX_B_SHOEt=10.0
	  else
		let MAX_B_SHOEt=&MAX_H_SHOE
	  end-if

	  if ($count(T_B_SHOE)=0)
	 					let T_B_SHOEt=1.0
	  else
		let T_B_SHOEt=&T_H_SHOE
	  end-if


	  if ($count(THETA)=0)
	 					let THETAt=20
	  else
		let THETAt=&THETA
	  end-if

	  if ($count(MIN_THETA)=0)
	 					let MIN_THETAt=0.0
	  else
		let MIN_THETAt=&MIN_THETA
	  end-if

	  if ($count(MAX_THETA)=0)
	 					let MAX_THETAt=60.0
	  else
		let MAX_THETAt=&MAX_THETA
	  end-if

	  if ($count(T_THETA)=0)
	 					let T_THETAt=6.0
	  else
		let T_THETAt=&T_THETA
	  end-if


	  if ($count(HG1_SOIL)=0)
	 					let HG1_SOILt=-0.26
	  else
		let HG1_SOILt=&HG1_SOIL
	  end-if

	  if ($count(MIN_HG1_SOIL)=0)
	 					let MIN_HG1_SOILt=-1.0
	  else
		let MIN_HG1_SOILt=&MIN_HG1_SOIL
	  end-if

	  if ($count(MAX_HG1_SOIL)=0)
	 					let MAX_HG1_SOILt=1.0
	  else
		let MAX_HG1_SOILt=&MAX_HG1_SOIL
	  end-if

	  if ($count(T_HG1_SOIL)=0)
	 					let T_HG1_SOILt=0.2
	  else
		let T_HG1_SOILt=&T_HG1_SOIL
	  end-if


	  if ($count(H_CBOE)=0)
	 					let H_CBOEt=0.06
	  else
		let H_SHOEt=&H_CBOE
	  end-if

	  if ($count(MIN_H_CBOE)=0)
	 					let MIN_H_CBOEt=0.0
	  else
		let MIN_H_SHOEt=&MIN_H_CBOE
	  end-if

	  if ($count(MAX_H_CBOE)=0)
	 					let MAX_H_CBOEt=2.0
	  else
		let MAX_H_SHOEt=&MAX_H_CBOE
	  end-if

	  if ($count(T_H_CBOE)=0)
	 					let T_H_CBOEt=0.2
	  else
		let T_H_SHOEt=&T_H_CBOE
	  end-if


	  if ($count(B_CBOE)=0)
	 					let B_CBOEt=1.0
	  else
		let B_CBOEt=&B_CBOE
	  end-if

	  if ($count(MIN_B_CBOE)=0)
	 					let MIN_B_CBOEt=0.0
	  else
		let MIN_B_CBOEt=&MIN_B_CBOE
	  end-if

	  if ($count(MAX_B_CBOE)=0)
	 					let MAX_B_CBOEt=10.0
	  else
		let MAX_B_CBOEt=&MAX_B_CBOE
	  end-if

	  if ($count(T_B_CBOE)=0)
	 					let T_B_CBOEt=10.0
	  else
		let T_B_CBOEt=&T_B_CBOE
	  end-if




	   tutor pho_hapke_hg1_dom_sub 					    +
		|restore=pho_hapke_hg1_dom.par, save=pho_hapke_hg1_dom.par| +
	    		W_SOIL=&W_SOILt					  +
	    		MIN_W_SOIL=&MIN_W_SOILt				  +
	    		MAX_W_SOIL=&MAX_W_SOILt				  +
	    		T_W_SOIL=&T_W_SOILt				  +
	   		H_SHOE=&H_SHOEt					  + 
	   		MIN_H_SHOE=&MIN_H_SHOEt				  + 
	   		MAX_H_SHOE=&MAX_H_SHOEt				  + 
	   		T_H_SHOE=&T_H_SHOEt				  + 
	   		B_SHOE=&B_SHOEt					  + 
	   		MIN_B_SHOE=&MIN_B_SHOEt				  + 
	   		MAX_B_SHOE=&MAX_B_SHOEt				  + 
	   		T_B_SHOE=&T_B_SHOEt				  + 
	    		THETA=&THETAt					  + 
	    		MIN_THETA=&MIN_THETAt				  + 
	    		MAX_THETA=&MAX_THETAt				  + 
	    		T_THETA=&T_THETAt				  + 
	    		HG1_SOIL=&HG1_SOILt 				  +
	    		MIN_HG1_SOIL=&MIN_HG1_SOILt			  + 
	    		MAX_HG1_SOIL=&MAX_HG1_SOILt 			  +
	    		T_HG1_SOIL=&T_HG1_SOILt	 			  +
	   		H_CBOE=&H_CBOEt					  + 
	   		MIN_H_CBOE=&MIN_H_CBOEt				  + 
	   		MAX_H_CBOE=&MAX_H_CBOEt				  + 
	   		T_B_CBOE=&T_B_CBOEt 				  +
	   		H_CBOE=&H_CBOEt					  + 
	   		MIN_B_CBOE=&MIN_B_CBOEt				  + 
	   		MAX_B_CBOE=&MAX_B_CBOEt				  + 
	   		T_H_CBOE=&T_H_CBOEt


	   return

	else
	   write " "
	   write "*********************************************************"
	   write " "
	   write " This program is only intended to be run "
	   write " as tutor from other programs needs "
	   write " photometric function parameters "
	   write " for the HAPKE_HG1_DOM function."
	   write " "
	   write "*********************************************************"
	   write " "
	end-if

end-proc

.title
'PHO_HAPKE_HG1_DOM' sub-menu (for photometry VICAR program)

.help

PURPOSE:

In this PDF, the user is asked for the parameters and there limits needed to 
fit the Hapke-1986-one-term-Henyey-Greenstein photometric function containing 
the coherent backscattering term in the form of Dominique 1992.
If a sulution guess falls out-of-bonds then the attemp will be aborted and 
a new guess attempted.

.page

MATHEMATICAL BACKGROUND :


bidirectional reflectance [1/str] :

r(i,e,g) = ...

REFERENCE :

Deborah Dominique, A Simple Method for Comparing Shadow-Hiding and Coherent 
  Backscatter Models of the Opposition Effect
  The 24th Annual Meeting of the Division for Planetary Sciences, 
  12-16 October 1992, Munich, Germany, 
  Bulletin of the American Astronomical Society, 
  Annual Report of the AAS, DPS Abstracts, 
  DDA/HAD Abstracts, Vol. 24, No. 3, 1992, p.958
Bruce Hapke, Coherent Backscatter and the Radar Characteristics of Outer Planet 
  Satellites,
  Icarus, Vol. 88, 407-417, 1990
Bruce Hapke, Bidirectional Reflectance Spectroscopy.
  3. Correction for Macroscopic Roughness
  Icarus, Vol. 59, p.41-59, 1984


PROGRAMMER:

Friedel Oschuetz
Institute of Planetary Exploration
DLR
12484 Berlin (FRG)

.level1

.VARI W_SOIL
Single-scattering albedo

.var MIN_W_SOIL 
Minimum of single-scattering albedo

.var MAX_W_SOIL 
Maximum of single-scattering albedo

.var T_W_SOIL 
Temperatur of tingle-scattering albedo

.var H_SHOE
Width of opposition surge

.var MIN_H_SHOE
Minimum of width of opposition surge

.var MAX_H_SHOE
Maximum of width of opposition surge

.var T_H_SHOE
Temperatur of width of opposition surge

.VARI B_SHOE
Opposition magnitude

.VARI MIN_B_SHOE
Minimum of opposition magnitude

.VARI MAX_B_SHOE
Maximum of opposition magnitude

.VARI T_B_SHOE
Temperatur of opposition magnitude

.var THETA
Topographic slope angle

.var MIN_THETA
Minimum of topographic slope angle

.var MAX_THETA
Maximum of topographic slope angle

.var T_THETA
Temperatur of topographic slope angle

.var HG1_SOIL
Henyey-Greenstein term

.var MIN_HG1_SOIL
Minimum of Henyey-Greenstein term

.var MAX_HG1_SOIL
Maximum of Henyey-Greenstein term

.var T_HG1_SOIL
Temperatur of Henyey-Greenstein term

.VARI H_CBOE
Width of opposition surge
due by coherent backscatter

.VARI MIN_H_CBOE
Minimum of width of opposition surge
due by coherent backscatter

.VARI MAX_H_CBOE
Maximum of width of opposition surge
due by coherent backscatter

.VARI T_H_CBOE
Temperatur of 
width of opposition surge
due by coherent backscatter

.VARI B_CBOE
Opposition magnitude
due by coherent backscatter

.VARI MIN_B_CBOE
Minimum of opposition magnitude
due by coherent backscatter

.VARI MAX_B_CBOE
Maximum of opposition magnitude
due by coherent backscatter

.VARI T_B_CBOE
Temperatur of 
opposition magnitude
due by coherent backscatter

.level2

.VARI W_SOIL
Single-scattering albedo of the soil particles. It characterizes the efficiency of an average particle to scatter and absorb light. 
One of the classical Hapke parameter.

.var MIN_W_SOIL 
This parameter gives the absolut lower limit of the single-scattering albedo of the soil particles. It characterizes the efficiency 
of an average particle to scatter and absorb light. 
If a sulution guess falls out-of-bonds then the attemp will be aborted and 
a new guess attempted.

.var MAX_W_SOIL 
This parameter gives the absolut upper limit of the single-scattering albedo of the soil particles. It characterizes the efficiency 
of an average particle to scatter and absorb light. 
If a sulution guess falls out-of-bonds then the attemp will be aborted and 
a new guess attempted.

.var T_W_SOIL 
This parameter gives temperatur for the single-scattering albedo of the soil 
particles. It characterizes the efficiency of an average particle to scatter 
and absorb light. 
This parameter gives the range over which random guesses can be expected to 
vary at first:
    W_SOIL_NEW = T_W_SOIL * tan( PI * ran_num + PI/2 ).
As the system cools the range will constrict gradually :
	T_W_SOIL_NEW_* = T_W_SOIL_OLD_* * scale, 
scale depends of NUMTEN.

.VARI H_SHOE
One of the classical Hapke parameter.
Parameter which characterizes the soil structure in the terms of porosity, particle-size distribution, and rate of compaction with depth (angular width of opposition surge due to shadowing). 

.var MIN_H_SHOE
This parameter gives the absolut lower limit of the parameter which characterizes the soil structure (angular width of the 
opposition surge due to shadowing). 
If a sulution guess falls out-of-bonds then the attemp will be aborted and 
a new guess attempted.

.var MAX_H_SHOE
This parameter gives the absolut upper limit of the parameter which characterizes the soil structure (angular width of the 
opposition surge due to shadowing). 
If a sulution guess falls out-of-bonds then the attemp will be aborted and 
a new guess attempted.

.var T_H_SHOE
This parameter gives temperatur for the parameter which characterizes the soil 
structure (angular width of the opposition surge due to shadowing). 
This parameter gives the range over which random guesses can be expected to 
vary at first:
    H_SHOE_NEW = T_H_SHOE * tan( PI * ran_num + PI/2 ).
As the system cools the range will constrict gradually :
	T_H_SHOE_NEW_* = T_H_SHOE_OLD_* * scale, 
scale depends of NUMTEN.

.VARI B_SHOE
One of the classical Hapke parameter. 
Opposition magnitude coefficient. The total amplitude of the opposition surge due to shadowing. It is the ratio of the light scattered from near the illuminated surface of the particle to the total amount of light scattered at zero phase : 
B_SHOE=S(0)/(W_SOIL*p(0))
with p(0) - soil phase function
S(0) - opposition surge amplitude term which characterizes the contribution of 
light scattered from near the front surface of individual particles at zero 
phase.
.page
For a true, shadow-hiding opposition effect, 0<=B_SHOE<=1.
However, there are several other phenomena that may also cause a surge in brightness at small phase angles. These including the following:
1) The coherent backscatter or weak photon localisation due to multiply 
   scattered light.
2) An single-particle opposition effect caused by complex porous agglomerates 
   ( soil phase function )
3) Glory caused by sperical particles ( soil phase function )
4) Internal reflections of transparent particles ( soil phase function )
   These various phenomena may be large enough to increase the opposition surge 
   by more than a factor of 2. This possibility may be taken into account by 
   allowing B_SHOE to be greater than 1.
 

.VARI MIN_B_SHOE
This parameter gives the absolut lower limit of the parameter which characterizes the opposition magnitude coefficient.
If a sulution guess falls out-of-bonds then the attemp will be aborted and 
a new guess attempted.

.VARI MAX_B_SHOE
This parameter gives the absolut upper limit of the parameter which characterizes theopposition magnitude coefficient.
If a sulution guess falls out-of-bonds then the attemp will be aborted and 
a new guess attempted.
 
.VARI T_B_SHOE
This parameter gives temperatur for the parameter which characterizes the 
opposition magnitude coefficient.
This parameter gives the range over which random guesses can be expected to 
vary at first:
    B_SHOE_NEW = T_B_SHOE * tan( PI * ran_num + PI/2 ).
As the system cools the range will constrict gradually :
	T_B_SHOE_NEW_* = T_B_SHOE_OLD_* * scale, 
scale depends of NUMTEN.

.VARI THETA
Average topographic slope angle of surface roughness at subresolution scale.
One of the classical Hapke parameter. 

.var MIN_THETA
This parameter gives the absolut lower limit of the average topographic slope angle of surface roughness at subresolution scale.
If a sulution guess falls out-of-bonds then the attemp will be aborted and 
a new guess attempted.

.var MAX_THETA
This parameter gives the absolut upper limit of the average topographic slope angle of surface roughness at subresolution scale.
If a sulution guess falls out-of-bonds then the attemp will be aborted and 
a new guess attempted.

.var T_THETA
This parameter gives temperatur for the average topographic slope angle of 
surface roughness at subresolution scale.
This parameter gives the range over which random guesses can be expected to 
vary at first:
    THETA_NEW = T_THETA * tan( PI * ran_num + PI/2 ).
As the system cools the range will constrict gradually :
	T_THETA_NEW_* = T_THETA_OLD_* * scale, 
scale depends of NUMTEN.

.VARI HG1_SOIL
Parameter of the first term of the Henyey-Greenstein soil particle 
phase function.
One of the classical Hapke parameter. 

.var MIN_HG1_SOIL
This parameter gives the absolut lower limit of the parameter of the first term of the Henyey-Greenstein soil particle 
phase function.
If a sulution guess falls out-of-bonds then the attemp will be aborted and 
a new guess attempted.

.var MAX_HG1_SOIL
This parameter gives the absolut upper limit of the parameter of the first term of the Henyey-Greenstein soil particle 
phase function.
If a sulution guess falls out-of-bonds then the attemp will be aborted and 
a new guess attempted.

.var T_HG1_SOIL
This parameter gives temperatur for the parameter of the first term of the 
Henyey-Greenstein soil particle phase function.
This parameter gives the range over which random guesses can be expected to 
vary at first:
    HG1_SOIL_NEW = T_HG1_SOIL * tan( PI * ran_num + PI/2 ).
As the system cools the range will constrict gradually :
	T_HG1_SOIL_NEW_* = T_HG1_SOIL_OLD_* * scale, 
scale depends of NUMTEN.

.VARI H_CBOE
Parameter of the coherent backscattering ( angular width of the opposition 
surge due to multiply scattered light).
H_CBOE=lambda/(2*pi*L)
lambda - wavelength
L - the free path of the phonon in the medium

.VARI MIN_H_CBOE
This parameter gives the absolut lower limit of the parameter of the coherent backscattering ( width of theopposition surge due 
to the backscatter ).

.VARI MAX_H_CBOE
This parameter gives the absolut upper limit of the parameter of the coherent backscattering ( width of theopposition surge due 
to the backscatter ).

.VARI T_H_CBOE
This parameter gives temperatur for the parameter of the coherent 
backscattering ( width of theopposition surge due to the backscatter ).
This parameter gives the range over which random guesses can be expected to 
vary at first:
    H_CBOE_NEW = T_H_CBOE * tan( PI * ran_num + PI/2 ).
As the system cools the range will constrict gradually :
	T_H_CBOE_NEW_* = T_H_CBOE_OLD_* * scale, 
scale depends of NUMTEN.

.VARI B_CBOE
Opposition magnitude coefficient of the coherent backscattering 
(height of opposition surge due to backscatter). 

.VARI MIN_B_CBOE
This parameter gives the absolut lower limit of the opposition magnitude coefficient of the coherent backscattering 
(height of opposition surge due to backscatter). 

.VARI MAX_B_CBOE
This parameter gives the absolut upper limit of the opposition magnitude coefficient of the coherent backscattering 
(height of opposition surge due to backscatter). 

.VARI T_B_CBOE
This parameter gives temperatur for the opposition magnitude coefficient of the 
coherent backscattering (height of opposition surge due to backscatter). 
This parameter gives the range over which random guesses can be expected to 
vary at first:
    B_CBOE_NEW = T_B_CBOE * tan( PI * ran_num + PI/2 ).
As the system cools the range will constrict gradually :
	T_B_CBOE_NEW_* = T_B_CBOE_OLD_* * scale, 
scale depends of NUMTEN.

.end
