PROCEDURE HELP=*
refgbl $autousage
refgbl $echo
refgbl $syschar
 
BODY

enable-log

let $autousage="none"
let _onfail="continue"
let $echo="yes"
 
LOCAL T1 STRING
LOCAL T2 INT
LOCAL T3 REAL
LOCAL EXP REAL 
local dir string
 
!create test data (i.e. create test label items)
gen a.img 10 10
label-add a.img ITEMS="TEST1='FIRST TEST STRING' TEST2=123 TEST3=4.56"
f2 a.img a.img func="in1"
label-add a.img ITEMS="TEST1='MIDDLE TEST STRING'"
f2 a.img a.img func="in1"
label-add a.img ITEMS="TEST1='LAST TEST STRING'"
 
!list test label
label-list a.img 'nousrtim
 
!test label item retrieval with GETLAB
!test LAB_ITEM=TEST1 ITM_TYPE=STRING MODE=LATEST
getlab inp=a.img lab_item=TEST1 itm_name=T1 itm_type=STRING +
   lab_type=HISTORY mode=LATEST
write "'T1' should equal 'LAST TEST STRING'"
write "T1: &T1"
 
!test LAB_ITEM=TEST2 ITM_TYPE=INT MODE=LATEST
getlab inp=a.img lab_item=TEST2 itm_name=T2 itm_type=INT +
   lab_type=HISTORY mode=LATEST
write "'T2' should equal '123'"
write "T2: &T2"

!test LAB_ITEM=TEST3 ITM_TYPE=REAL MODE=LATEST
getlab inp=a.img lab_item=TEST3 itm_name=T3 itm_type=REAL +
   lab_type=HISTORY mode=LATEST
write "'T3' should equal '4.56'"
write "T3: &T3"
 
!test LAB_ITEM=FORMAT ITM_TYPE=STRING MODE=SYSTEM
getlab inp=a.img lab_item=FORMAT itm_name=T1 itm_type=STRING +
   lab_type=SYSTEM mode=LATEST
write "'T1' should equal 'BYTE'"
write "T1: &T1"
 
!test LAB_ITEM=NL ITM_TYPE=INT MODE=SYSTEM
getlab inp=a.img lab_item=NL itm_name=T2 itm_type=INT +
   lab_type=SYSTEM mode=LATEST
write "'T2' should equal '10'"
write "T2: &T2"
 
!test LAB_ITEM=TEST1 ITM_TYPE=STRING MODE=EARLIEST
getlab inp=a.img lab_item=TEST1 itm_name=T1 itm_type=STRING +
   lab_type=HISTORY mode=EARLIEST
write "'T1' should equal 'FIRST TEST STRING'"
write "T1: &T1"
 
!test LAB_ITEM=TEST1 ITM_TYPE=STRING ITM_TASK=F2 ITM_INST=1 MODE=INSTANCE
getlab inp=a.img lab_item=TEST1 itm_name=T1 itm_type=STRING +
   itm_task=F2 itm_inst=1 lab_type=HISTORY mode=INSTANCE
write "'T1' should equal 'MIDDLE TEST STRING'"
write "T1: &T1"

write "Test correct handling of nonexistent label item."  
write "This case should generate an ABEND." 
getlab inp=a.img lab_item=BADTEST itm_name=T1 itm_type=STRING +
   lab_type=HISTORY mode=LATEST
 
!use GETLAB successfully to reset SFI and SKEY flags so previous ABEND does
!not cause test job to report failure.
getlab inp=a.img lab_item=TEST1 itm_name=T1 itm_type=STRING +
   lab_type=HISTORY mode=LATEST
write "T1: &T1"

! test case for retriving property label

!Set dns to 10 and replicate - set exposure to 0
f2 inp=data/sum2.1 out=l1.a func=10
label-rep l1.a 'PROP property="CASSINI-ISS" item="EXPOSURE_DURATION=0"
label-list l1.a 'nousrtim

getlab inp=l1.a lab_item="EXPOSURE_DURATION" itm_name=EXP lab_type=PROPERTY +
       itm_type=REAL itm_task="CASSINI-ISS"

write "EXP: &EXP"

! Test multivalued items.  Should report BB
label-add l1.a 'prop property="CASSINI-ISS" item="MULTIVAL=(AA,BB,CC)"
label-list l1.a 'nousrtim

getlab inp=l1.a lab_item="MULTIVAL" itm_name=T1 lab_type=PROPERTY itm_type=STRING itm_task="CASSINI-ISS" element=2
write "T1: &T1"

! Test multivalued string items where lengths differ
gen a.img
label-add a.img item="key=(abc,defgh)"

getlab a.img key itm_name=T1 element=1 itm_type=string
write "T1: &T1"

getlab a.img key itm_name=T1 element=2 itm_type=string
write "T1: &T1"

if ($syschar(1)="UNIX")
!   ush rm l1.*
   ush rm a.img
else
   dcl del l1.*;*
   dcl del a.img;*
end-if
 
WRITE "TEST OF GETLAB COMPLETE."
 
disable-log

ush rm l1.a

END-PROC
.title
TSTGETLAB -- Test PDF for GETLAB
.help
 
        Test Procedure:
                1) create test-label
                2) test label retrieval possibilities in GETLAB
                3) test error handling (non-existent label item)
.page

                Validation
 
        After each execution of GETLAB, the returned label value
        is displayed. This value should be compared with the
        expected value. Not all possible combinations of parameters
        to GETLAB are tested, but most expected uses of the PDF are.
.end

