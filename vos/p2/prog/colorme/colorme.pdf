process help=*
PARM INP TYPE=STRING COUNT=(0:3) DEFAULT=--
PARM OUT TYPE=STRING COUNT=3
PARM PATH  TYPE=STRING COUNT=1 +
   DEFAULT="/usr/local/share/calibration/"
!/home/cib/
PARM DEVICE  TYPE=STRING COUNT=1 +
  VALID=("mda","fujix","alps","temblor","wasatch","kodak168", +
  "kodak230","asutek","codonics","csi_1","ntsc","hdtv","octane", +
  "none") DEFAULT="none"
PARM MONITOR  TYPE=STRING COUNT=1 +
  VALID=("left","right","none") DEFAULT="none"
PARM NEAREST TYPE=INTEGER COUNT=(0:1) VALID=(5:30) DEFAULT=--
PARM THRESH TYPE=INTEGER COUNT=(0:1) DEFAULT=0
PARM XYY TYPE=REAL COUNT=3 DEFAULT=(.44,.4,30.) +
  VALID=(0.:1.,0.:1.,0.:100.)
PARM AREA TYPE=INTEGER COUNT=(0,4) DEFAULT=(0,0,0,0)
END-PROC

.TITLE
VICAR program colorme

.HELP
PURPOSE:
To convert uncalibrated rgb images into rgb images whose mean color is 
specified via a parameter.

EXECUTION:
typically:
colorme inp=(r,g,b) out=(ro,go,bo) device=alps monitor=left xyy=(.44,.4,35.)
or:
colorme inp=(r,b) out=(ro,go,bo) device=alps monitor=left xyy=(.44,.4,35.)
or:
colorme inp=(g) out=(ro,go,bo) device=alps monitor=left xyy=(.44,.4,35.)

WARNING:
The program lists the number of saturations. Every saturated pixel
is adjusted down in intensity to preserve the initial color balance.
To avoid this reduce the target Y tristimulus value (the
third value you specified with the XYY keyword) and try it again.
Y represents the scene brightness. 

.PAGE

METHOD:
   The program first computes the mean input rgb values above zero.
It then computes the target rgb values which resulted from the 
desired parameter xyY color for the specified device.
It then computes linear factors mapping the input dn's to the output such
that the mean input rgb's map to the target rgb's.

   The program reads in a calibration file for the specified device. This is 
an ascii file with data in records like this:
STEP#                Yn      x       y       R-DN    G-DN    B-DN
1               0.122616  0.278170  0.298730   0.0   0.0   0.0
2               1.267030  0.595390  0.329050  64.0   0.0   0.0
3               5.354223  0.627000  0.332000  128.0   0.0   0.0
4               12.874659  0.632610  0.333000  192.0   0.0   0.0

The first 3 records are skipped by the program so the first record read is:
1               0.122616  0.278170  0.298730   0.0   0.0   0.0

These correspond to a calibration giving the xyY values for a data cube of
all combinations of rgb dn values in some coarse interval like 32 or 64
dn steps. The file must end with a .2

   The method used is to create a 40 by 40 by 40 cube in Luv coordinates
spanning the range of xyY values in the calibration file. Each input pixel
in xyY is converted to Luv space and compared with the cube to see if
a mapping polynomial exists there. If it exists then the Luv value is
converted to rgb using the polynomial.
r=AL+Bu+Cv+D
g=EL+Fu+Gv+H
b=IL+Ju+Kv+M
If no polynomial exists it is computed and stored into the cube.
Equations (as above) are solved by least squares using the 8 nearest Luv
points (in the cube, one in each octant) to the cube coordinate.

Note:
This is not rigorous color processing. It is to be used when you don't know
anything but the average color of the result.

HISTORY:
6-30-96  J Lorre. 
COGNIZANT PROGRAMMER:  Jean Lorre

.LEVEL1
.VARI INP
1-3 input images
ordered as r g b.

.VARI OUT
3 Output images

.VARI DEVICE
Output device name

.VARI PATH
Path name for 
calibration files.

.VARI MONITOR
Whether the monitor is
left or right.

.VARI NEAREST
Nearest # points
for fitting

.VARI THRESH
Threshold for computing
mean input dn's.
dn_in > thresh.

.VARI XYY
target output color.
x is x chromaticity.
y is y chromaticity.
Y is Luminance Y

.VARI AREA
size field from which
to compute histogram

.LEVEL2
.VARI INP
One to Three input images in the order:
R G B
If only two are specified they represent R and B, G=(R+B)/2.
If only one is specified it represents G. R=G=B.

.VARI OUT
Three Output RGB images in the order:
1. Red dn value in BYTE format.
2. Green dn value in BYTE format.
3. Blue dn value in BYTE format.
These images are in DEVICE calibrated coordinates.

.VARI DEVICE
Target device name upon which the output RGB images are to be 
displayed.
  VALID=("mda","fujix","alps","temblor","wasatch","kodak168", +
  "kodak230","asutek","codonics","csi_1","ntsc","hdtv","octane", +
  "none") DEFAULT="none"
Defaults to none.

.VARI PATH
Path name for the location of color calibration files for the DEVICE.
Defaults to /usr/local/share/calibration/
Note the ending slash !

.VARI MONITOR
Whether the monitor is the left or the right one.
Specify left or right. Defaults to none.
Only used if the device is a TV monitor.
  VALID=("left","right","none") DEFAULT="none"

.VARI NEAREST
The nearest number of points in the color space to use for each least
squares fit mapping rgb dn values to Luv color coordinates. Defaults to
an internal table which is device dependent.
At the moment all devices use 8 points.
More points produces steadier colors but they are less accurate.

.VARI THRESH
Only dn values greater than thresh are used in computing the mean brightness
of each of the input images. Defaults to 0.
Useful if you have a background above zero which is unrelated to the image.

.VARI XYY
The target output color. Specify 3 numbers: x y Y.
x is x chromaticity.
y is y chromaticity.
Y is Luminance Y
Default is a color selected by the Viking Imaging Team for Mars.

.VARI AREA
size field from which to compute histogram in each image.
Defaults to entire input image.
