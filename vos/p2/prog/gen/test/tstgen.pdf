procedure
refgbl $echo
body
let _onfail="continue"
let $echo="yes"

enable-log

! THIS IS A TEST FILE FOR GEN
! THE FOLLOWING TESTS SHOW THE USE OF GEN WITH ONLY 2D DATA

! BYTE
GEN TGEN1 10 10 IVAL=50.5 SINC=10.5 LINC=-20.5
LIST TGEN1 'nousrtim
LABEL-LIST TGEN1 'nousrtim

! HALF
GEN TGEN1 10 20 'HALF IVAL=-100.5 SINC=0.0 LINC=0.0
LIST TGEN1 'nousrtim
LABEL-LIST TGEN1 'nousrtim

! FULL
GEN TGEN3 10 10 'FULL IVAL=0 SINC=20 LINC=-3
LIST TGEN3 'nousrtim
LABEL-LIST TGEN3 'nousrtim

! REAL
GEN TGEN3 10 10 'REAL IVAL=0.0 SINC=1.5 LINC=25.
LIST TGEN3 'nousrtim
LABEL-LIST TGEN3 'nousrtim

GEN TGEN3 10 10 'REAL4 IVAL=0.0 SINC=1.5 LINC=25.
LIST TGEN3 'nousrtim
LABEL-LIST TGEN3 'nousrtim

! DOUB
GEN TGEN3 10 10 'DOUB LINC=.1 SINC=.01
LIST TGEN3 NDIGITS=16 'nousrtim
LABEL-LIST TGEN3 'nousrtim

GEN TGEN3 10 10 'REAL8 LINC=.1 SINC=.01
LIST TGEN3 NDIGITS=16 'nousrtim
LABEL-LIST TGEN3 'nousrtim

GEN TGEN4 10 10 'DOUB IVAL=-1000 SINC=20 LINC=3
LIST TGEN4 'nousrtim
LABEL-LIST TGEN4 'nousrtim

! COMP
GEN TGEN1 10 10 IVAL=(10,-10) SINC=.5 LINC=(10,-10) 'COMP
LIST TGEN1 'nousrtim
LABEL-LIST TGEN1 'nousrtim

!THESE TESTS SHOW THE USE OF MOD
GEN TGEN1 10 10 MOD=10 LINC=3 SINC=2
LIST TGEN1 'nousrtim
LABEL-LIST TGEN1 'nousrtim

GEN TGEN1 10 10 MOD=1.5
LIST TGEN1 'nousrtim
LABEL-LIST TGEN1 'nousrtim

disable-log

ush rm TGEN1 TGEN3 TGEN4

end-proc
