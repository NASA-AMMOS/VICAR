      INCLUDE 'VICMAIN_FOR'
      SUBROUTINE MAIN44
C
C	MSSVIEW - MAKES SCATTER PLOTS OF MULTIDIMENSIONAL DATA IN MSS FORMAT
C
C
C	REVISION:  A		NEW
C
C	ORIGINAL PROGRAMMER:   FRANK EVANS	DECEMBER 1985
C
C	COGNIZANT PROGRAMMER:  KFE
C
C    5-SEP-94  ...AMS...  (CRI) MSTP S/W CONVERSION (VICAR PORTING)
C   14-APR-87  ...LWK...  MODS FOR PLANETARY IMAGES (AS IN CLUSAN)
C
C
      IMPLICIT    NONE
      INCLUDE     'fortport'
      INTEGER	  MAXNPNTS,MAXRECL
      PARAMETER   (MAXRECL = 60000)
      PARAMETER   (MAXNPNTS = 50000)
      INTEGER     BANDS(3)
      INTEGER	  MSS,CNT, NDIM, SL,SS,NL,NLI,NSI, NS, NPNTS, NSB, INCR
      INTEGER	  LINE,SAMP, N, SLW,SSW,NLW,NSW, NLOUT, NSOUT, RECL
      INTEGER     LOC, INTVAL, UNIT, STATUS, DEF, I, K
      INTEGER	  LINC, SINC, THRESHDEF
      REAL	  X(3,MAXNPNTS)
      REAL	  RBUF(MAXRECL)
      BYTE	  BUFFER(1000*1000), BYTEVAL
      REAL	  SLOPE1,OFFS1, SLOPE2,OFFS2, SLOPE3,OFFS3
      REAL	  VALUE, THRESH
      REAL	  MINX(3), MAXX(3)
      INTEGER	  NCHAR, CHARSIZE, LENGTH, POS
      BYTE        DOTMATRIX(6*4*80,7*4,3) 
      CHARACTER*80 STRING
      CHARACTER*32 LABEL(3)
      CHARACTER*60 OUTSTR


      CALL IFMESSAGE('MSSVIEW version 5-SEP-94')
      CALL XVEACTION('SA',' ')
C--			GET THE MSS FORMAT INFO
      CALL XVP('MSS',MSS,CNT)
      CALL XVPARM('BANDS',BANDS,NDIM,DEF,3)
      IF (DEF .EQ. 1) THEN
	 NDIM = MSS
	 DO I=1,NDIM
	    BANDS(I) = I
	 ENDDO
      ENDIF

C--			OPEN THE MSS FORMAT IMAGE FILE
      CALL XVUNIT(UNIT,'INP',1,STATUS,' ')
      CALL XVOPEN(UNIT,STATUS,'U_FORMAT','REAL',' ')

      CALL XVGET(UNIT,STATUS,'NS',RECL,' ')
      IF (RECL.GT.MAXRECL) CALL MABEND('RECORD LENGTH TOO LARGE')
      NSB = RECL/MSS

      CALL XVSIZE(SL,SS,NL,NS,NLI,NSI)
      IF (NS.EQ.RECL) NS = NS/MSS


C   LINC/SINC, THRESH PARAMS
      CALL XVPARM( 'INCR', INCR, CNT, DEF,1)
      IF (CNT.EQ.0) THEN
	 CALL XVPARM( 'LINC', LINC, CNT, DEF,1)
	 CALL XVPARM( 'SINC', SINC, CNT, DEF,1)
      ELSE
	 LINC = INCR
	 SINC = INCR
      ENDIF
      CALL XVPARM( 'THRESH', THRESH, CNT, THRESHDEF,1)

C--			READ IN ALL OF THE DATA POINTS
      NPNTS = 0
      DO LINE=1,NL,LINC
         CALL XVREAD(UNIT,RBUF,STATUS,'SAMP',SS,'LINE',LINE+SL-1,' ')
	 DO SAMP = 1,NS,SINC
	    IF (THRESHDEF .EQ. 0) THEN
	       DO N = 1,NDIM
		  IF (RBUF(SAMP+(BANDS(N)-1)*NSB).LT.THRESH)GO TO 100
	       ENDDO
	    ENDIF
	    NPNTS = NPNTS + 1
	    IF (NPNTS .GT. MAXNPNTS) THEN
	       CALL MABEND ('Maximum number of data points exceeded')
	    ENDIF
	    DO N = 1,NDIM
	       X(N,NPNTS) = RBUF(SAMP+(BANDS(N)-1)*NSB)
	    ENDDO
100	    CONTINUE
	 ENDDO
      ENDDO
      WRITE (OUTSTR, '(1X,A,I7)') 'NUMBER OF POINTS USED:', NPNTS
      CALL XVMESSAGE (OUTSTR,' ')
      CALL XVCLOSE(UNIT,STATUS,' ')


C--			GO THROUGH ALL THE DATA POINTS AND CALCULATE 
C-				THE MIN AND MAX FOR EACH DIMENSION
      DO N = 1,NDIM
	 MINX(N) = +1E20
	 MAXX(N) = -1E20
	 DO I = 1,NPNTS
	    MINX(N) = MIN(X(N,I),MINX(N))
	    MAXX(N) = MAX(X(N,I),MAXX(N))
	 ENDDO	
      ENDDO


C--			GET THE SIZE OF THE IMAGE AND CALCULATE THE
C-				BOX SIZE AND THE CHARACTER SIZE
      CALL XVP('NLOUT',NLOUT,CNT)
      CALL XVP('NSOUT',NSOUT,CNT)
      CHARSIZE =  INT( MIN(NLOUT,NSOUT) / 250)
      IF (CHARSIZE .EQ. 0)  CHARSIZE = 1
      NLW = NLOUT - 6* 7*CHARSIZE
      NSW = NSOUT - 6* 7*CHARSIZE
      SLW = 3* 7*CHARSIZE
      SSW = 3* 7*CHARSIZE

C--			COMPUTE THE SLOPES AND OFFSETS FOR FASTER OPERATION
      SLOPE1 =  NSW / (MAXX(1) - MINX(1))
      OFFS1 =  -SLOPE1 * MINX(1) + SSW
      SLOPE2 = -NLW / (MAXX(2) - MINX(2))
      OFFS2 =   -SLOPE2 * MINX(2) + NLW+SLW-1 - 1
      IF (NDIM .EQ. 3) THEN 
	 SLOPE3 =  150 / (MAXX(3) - MINX(3))
	 OFFS3 =  -SLOPE3 * MINX(3) + 100
      ENDIF


C--			PUT EACH DATA POINT INTO THE IMAGE
      DO I = 1,NPNTS
	 SAMP = SLOPE1*X(1,I) + OFFS1
	 LINE = SLOPE2*X(2,I) + OFFS2
	 LOC = NSOUT*LINE + SAMP
	 IF (NDIM .EQ. 3) THEN
	    VALUE = SLOPE3*X(3,I) + OFFS3
	    INTVAL = MAX(MIN( VALUE, 255.0), 0.0)
	 ELSE
	    INTVAL = 255
	 ENDIF
         BYTEVAL=INT2BYTE(INTVAL)
	 BUFFER(LOC) = BYTEVAL
      ENDDO


C--			DRAW THE BOX AROUND THE SCATTERGRAM
      INTVAL = 255
      BYTEVAL=INT2BYTE(INTVAL)
      DO SAMP = SSW-2, NSW+SSW
	 BUFFER(NSOUT*(SLW-3)+SAMP) = BYTEVAL
	 BUFFER(NSOUT*(NLW+SLW-1)+SAMP) = BYTEVAL
      ENDDO
      DO LINE = SLW-2, NLW+SLW
	 BUFFER(NSOUT*(LINE-1)+SSW-2) = BYTEVAL
	 BUFFER(NSOUT*(LINE-1)+NSW+SSW) = BYTEVAL
      ENDDO


      CALL XVP('LABELS',LABEL,CNT)
      NCHAR = MIN( NSW, NLW)/ (6*CHARSIZE)	! NUMBER OF CHAR ON LABEL

C--			FOR EACH OF THE 2 OR 3 LABELS  MAKE THE STRING
C-				AND TRANSLATE IT INTO DOT MATRIX FORM
      DO N = 1, NDIM
         STRING=' '
C-			CENTER THE LABEL IN THE STRING
	 LENGTH = LEN(LABEL(N))
	 DO WHILE (LABEL(N)(LENGTH:LENGTH) .EQ. ' ')
	    LENGTH = LENGTH - 1
	 ENDDO
	 POS = MAX( (NCHAR-LENGTH)/2, 9+1)
	 DO K = 1, LENGTH
	    STRING(POS+K:POS+K) = LABEL(N)(K:K)
	 ENDDO
C-			PUT THE MIN AND MAX INTO THE STRING
	 WRITE (STRING(1:9),'(F9.3)')MINX(N)
	 WRITE (STRING(NCHAR-8:NCHAR),'(F9.3)')MAXX(N)
C--			GET SEVEN ROWS OF THE DOT MATRIX FOR THE STRING
	 DO I = 0, 6
	    CALL TEXT (STRING, NCHAR, I, DOTMATRIX(1,I*CHARSIZE+1,N),
     +		       6*CHARSIZE,0)
C--			IF MULTIPLE HEIGHT THEN COPY THE ROW
	    DO K = 2, CHARSIZE
	       CALL MVE(1,6*CHARSIZE*NCHAR,DOTMATRIX(1,I*CHARSIZE+1,N),
     +			 DOTMATRIX(1,I*CHARSIZE+K,N),1,1)
	    ENDDO
	 ENDDO
      ENDDO
C--			PUT THE DOT MATRICES OF THE LABELS IN THE IMAGE
      DO I = 1,7*CHARSIZE
	 LOC = NSOUT*(NLOUT-2*7*CHARSIZE + I)
	 DO K = 1, NCHAR* 6*CHARSIZE
	    BUFFER(LOC+SSW + K) = DOTMATRIX(K,I,1)
	 ENDDO
      ENDDO
      DO K = 1,NCHAR* 6*CHARSIZE
	 LOC = NSOUT*(NLW+SLW - K)
	 DO I = 1,7*CHARSIZE
	    BUFFER(LOC+7*CHARSIZE + I) = DOTMATRIX(K,I,2)
	 ENDDO
      ENDDO
      IF (NDIM .EQ. 3) THEN
	 DO I = 1,7*CHARSIZE
	    LOC = NSOUT*(7*CHARSIZE + I)
	    DO K = 1, NCHAR* 6*CHARSIZE
	       BUFFER(LOC+SSW + K) = DOTMATRIX(K,I,3)
	    ENDDO
	 ENDDO
      ENDIF



C--			SAVE THE IMAGE
      CALL XVUNIT(UNIT,'OUT',1,STATUS,' ')
      CALL XVOPEN(UNIT,STATUS,'U_NL',NLOUT,'U_NS',NSOUT,'OP','WRITE',
     +	          'U_FORMAT','BYTE','O_FORMAT','BYTE',' ')

      DO LINE = 1,NLOUT
	 CALL XVWRIT(UNIT,BUFFER(NSOUT*(LINE-1)+1),STATUS,' ')
      ENDDO
      CALL XVCLOSE(UNIT,STATUS,' ')


      RETURN
      END
