tstccdrecip
translog INP=AFIDS_ROOT TRANS=afidsroot
if (afidsroot = "")
    ush ln -s /project/test_work/testdata/cassini/iss cas
else
end-if
  defcmd-replace typeit "ush cat"
f2 inp=cas/sum2.1 out=l1.a func=10
Beginning VICAR task f2
F2 version 26-Jul-11
F2 using hash table lookup
FUNCTION EVALUATED 26 TIMES
copy l1.a l1.b
Beginning VICAR task copy
 COPY VERSION 12-JUL-1993
copy l1.a l1.c
Beginning VICAR task copy
 COPY VERSION 12-JUL-1993
f2 inp=cas/sum2.1 out=l2.a func=910
Beginning VICAR task f2
F2 version 26-Jul-11
F2 using hash table lookup
FUNCTION EVALUATED 26 TIMES
label-rep l2.a 'prop property="CASSINI-ISS" item="EXPOSURE_DURATION=10.  +
            RADIANCE=100."
Beginning VICAR task label
LABEL version 15-Nov-2010
Keyword EXPOSURE_DURATION replaced
Keyword RADIANCE replaced
copy l2.a l2.b
Beginning VICAR task copy
 COPY VERSION 12-JUL-1993
copy l2.a l2.c
Beginning VICAR task copy
 COPY VERSION 12-JUL-1993
f2 inp=cas/sum2.1 out=l3.a func=960
Beginning VICAR task f2
F2 version 26-Jul-11
F2 using hash table lookup
FUNCTION EVALUATED 26 TIMES
label-rep l3.a 'prop property="CASSINI-ISS" item="EXPOSURE_DURATION=20.  +
            RADIANCE=50."
Beginning VICAR task label
LABEL version 15-Nov-2010
Keyword EXPOSURE_DURATION replaced
Keyword RADIANCE replaced
copy l3.a l3.b
Beginning VICAR task copy
 COPY VERSION 12-JUL-1993
copy l3.a l3.c
Beginning VICAR task copy
 COPY VERSION 12-JUL-1993
f2 inp=cas/sum2.1 out=l4.a func=985
Beginning VICAR task f2
F2 version 26-Jul-11
F2 using hash table lookup
FUNCTION EVALUATED 26 TIMES
label-rep l4.a 'prop property="CASSINI-ISS" item="EXPOSURE_DURATION=40.  +
            RADIANCE=25."
Beginning VICAR task label
LABEL version 15-Nov-2010
Keyword EXPOSURE_DURATION replaced
Keyword RADIANCE replaced
copy l4.a l4.b
Beginning VICAR task copy
 COPY VERSION 12-JUL-1993
copy l4.a l4.c
Beginning VICAR task copy
 COPY VERSION 12-JUL-1993
createfile l.list
refgbl  $syschar
write "CREATEFILE version 1-3-97"
CREATEFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  USH cp /dev/null  l.list
end-if
END-PROC
addtofile l.list "NEXT FILE=0001"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="NEXT FILE=0001"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile l.list "l1.a"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l1.a"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile l.list "l1.b"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l1.b"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile l.list "l1.c"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l1.c"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile l.list "l2.a"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l2.a"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile l.list "l2.b"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l2.b"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile l.list "l2.c"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l2.c"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile l.list "l3.a"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l3.a"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile l.list "l3.b"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l3.b"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile l.list "l3.c"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l3.c"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile l.list "l4.a"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l4.a"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile l.list "l4.b"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l4.b"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile l.list "l4.c"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l4.c"
Beginning VICAR task addtofil
end-if
END-PROC
reset l.list
Beginning VICAR task reset
ush cat l.list
ltgen l1.a out=test.ltf list=l.list 'grid
Beginning VICAR task ltgen
LTGEN Version 14-MAR-97
NUMBER OF FILES  =         12
NUMBER OF LEVELS =          4
MAX FRAMES/LEVEL =          3
NUMBER OF AREAS     =    100
NUMBER OF EXPOSURES =      4
EXPOSURES = 
            0.000E+00  1.000E+01  2.000E+01  4.000E+01
MAX FRAMES/LEVEL =           3
WRITING HALFWORD LIGHT TRANSFER FILE WITH
 NL (NREC) =           4
 NS        =         901
LTGEN task completed
momgen2 list=l.list ltfrcp=test.ltf
LOCAL (F,G,LUMS,EXS)      STRING
LOCAL (NLVL,I1,I2,I3,I,J) INTEGER
LOCAL (EXP,LM,X)          REAL
LOCAL EX                  REAL      COUNT=1:100
LOCAL LMS                 STRING    COUNT=1:100
if ($syschar(1)="UNIX")
   defcmd-replace typeit "ush cat"
else
end-if
reset l.list
Beginning VICAR task reset
nxt l.list F I1 I2 I3
Beginning VICAR task nxt
 Output 1 is l1.a
getlab l1.a lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
         itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
let EX(1)=EXP
getlab l1.a lab_item="RADIANCE" itm_name=LM 'PROPERTY+
         itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
let LUMS = "5.099999904633e+00"
let LMS(1)=LUMS
createfile list1.dat
refgbl  $syschar
write "CREATEFILE version 1-3-97"
CREATEFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  USH cp /dev/null  list1.dat
end-if
END-PROC
addtofile list1.dat "NEXT FILE=0001"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="NEXT FILE=0001"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile list1.dat "l1.a"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l1.a"
Beginning VICAR task addtofil
end-if
END-PROC
let J=1
loop
   nxt l.list F I1 I2 I3
Beginning VICAR task nxt
 Output 2 is l1.b
   if (F="END_OF_FILE") break
   getlab l1.b lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab l1.b lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "5.099999904633e+00"
   if (EXP=EX(J))
       let G="list"//"1"//".dat"
       addtofile list1.dat "l1.b"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l1.b"
Beginning VICAR task addtofil
end-if
END-PROC
   else
   end-if
end-loop
   nxt l.list F I1 I2 I3
Beginning VICAR task nxt
 Output 3 is l1.c
   if (F="END_OF_FILE") break
   getlab l1.c lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab l1.c lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "5.099999904633e+00"
   if (EXP=EX(J))
       let G="list"//"1"//".dat"
       addtofile list1.dat "l1.c"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l1.c"
Beginning VICAR task addtofil
end-if
END-PROC
   else
   end-if
end-loop
   nxt l.list F I1 I2 I3
Beginning VICAR task nxt
 Output 4 is l2.a
   if (F="END_OF_FILE") break
   getlab l2.a lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab l2.a lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "1.000000000000e+02"
   if (EXP=EX(J))
   else
       let J=J+1
       let EX(J)=EXP
       let LMS(J) = LUMS
       let G="list"//"2"//".dat"
       createfile list2.dat
refgbl  $syschar
write "CREATEFILE version 1-3-97"
CREATEFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  USH cp /dev/null  list2.dat
end-if
END-PROC
       addtofile list2.dat "NEXT FILE=0001"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="NEXT FILE=0001"
Beginning VICAR task addtofil
end-if
END-PROC
       addtofile list2.dat "l2.a"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l2.a"
Beginning VICAR task addtofil
end-if
END-PROC
   end-if
end-loop
   nxt l.list F I1 I2 I3
Beginning VICAR task nxt
 Output 5 is l2.b
   if (F="END_OF_FILE") break
   getlab l2.b lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab l2.b lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "1.000000000000e+02"
   if (EXP=EX(J))
       let G="list"//"2"//".dat"
       addtofile list2.dat "l2.b"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l2.b"
Beginning VICAR task addtofil
end-if
END-PROC
   else
   end-if
end-loop
   nxt l.list F I1 I2 I3
Beginning VICAR task nxt
 Output 6 is l2.c
   if (F="END_OF_FILE") break
   getlab l2.c lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab l2.c lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "1.000000000000e+02"
   if (EXP=EX(J))
       let G="list"//"2"//".dat"
       addtofile list2.dat "l2.c"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l2.c"
Beginning VICAR task addtofil
end-if
END-PROC
   else
   end-if
end-loop
   nxt l.list F I1 I2 I3
Beginning VICAR task nxt
 Output 7 is l3.a
   if (F="END_OF_FILE") break
   getlab l3.a lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab l3.a lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "5.000000000000e+01"
   if (EXP=EX(J))
   else
       let J=J+1
       let EX(J)=EXP
       let LMS(J) = LUMS
       let G="list"//"3"//".dat"
       createfile list3.dat
refgbl  $syschar
write "CREATEFILE version 1-3-97"
CREATEFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  USH cp /dev/null  list3.dat
end-if
END-PROC
       addtofile list3.dat "NEXT FILE=0001"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="NEXT FILE=0001"
Beginning VICAR task addtofil
end-if
END-PROC
       addtofile list3.dat "l3.a"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l3.a"
Beginning VICAR task addtofil
end-if
END-PROC
   end-if
end-loop
   nxt l.list F I1 I2 I3
Beginning VICAR task nxt
 Output 8 is l3.b
   if (F="END_OF_FILE") break
   getlab l3.b lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab l3.b lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "5.000000000000e+01"
   if (EXP=EX(J))
       let G="list"//"3"//".dat"
       addtofile list3.dat "l3.b"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l3.b"
Beginning VICAR task addtofil
end-if
END-PROC
   else
   end-if
end-loop
   nxt l.list F I1 I2 I3
Beginning VICAR task nxt
 Output 9 is l3.c
   if (F="END_OF_FILE") break
   getlab l3.c lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab l3.c lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "5.000000000000e+01"
   if (EXP=EX(J))
       let G="list"//"3"//".dat"
       addtofile list3.dat "l3.c"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l3.c"
Beginning VICAR task addtofil
end-if
END-PROC
   else
   end-if
end-loop
   nxt l.list F I1 I2 I3
Beginning VICAR task nxt
 Output 10 is l4.a
   if (F="END_OF_FILE") break
   getlab l4.a lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab l4.a lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "2.500000000000e+01"
   if (EXP=EX(J))
   else
       let J=J+1
       let EX(J)=EXP
       let LMS(J) = LUMS
       let G="list"//"4"//".dat"
       createfile list4.dat
refgbl  $syschar
write "CREATEFILE version 1-3-97"
CREATEFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  USH cp /dev/null  list4.dat
end-if
END-PROC
       addtofile list4.dat "NEXT FILE=0001"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="NEXT FILE=0001"
Beginning VICAR task addtofil
end-if
END-PROC
       addtofile list4.dat "l4.a"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l4.a"
Beginning VICAR task addtofil
end-if
END-PROC
   end-if
end-loop
   nxt l.list F I1 I2 I3
Beginning VICAR task nxt
 Output 11 is l4.b
   if (F="END_OF_FILE") break
   getlab l4.b lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab l4.b lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "2.500000000000e+01"
   if (EXP=EX(J))
       let G="list"//"4"//".dat"
       addtofile list4.dat "l4.b"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l4.b"
Beginning VICAR task addtofil
end-if
END-PROC
   else
   end-if
end-loop
   nxt l.list F I1 I2 I3
Beginning VICAR task nxt
 Output 12 is l4.c
   if (F="END_OF_FILE") break
   getlab l4.c lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab l4.c lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "2.500000000000e+01"
   if (EXP=EX(J))
       let G="list"//"4"//".dat"
       addtofile list4.dat "l4.c"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l4.c"
Beginning VICAR task addtofil
end-if
END-PROC
   else
   end-if
end-loop
   nxt l.list F I1 I2 I3
Beginning VICAR task nxt
 NXT encountered end of file
   if (F="END_OF_FILE") break
 break
   if (EXP=EX(J))
   end-if
end-loop
let NLVL=J
let $BECHO="NO"
write " NUMBER OF EXPOSURE LEVELS = 4"
 NUMBER OF EXPOSURE LEVELS = 4
write " "
 
write " "
 
write " EXPOSURE LEVEL ... EXPOSURE TIME ... RADIANCES"
 EXPOSURE LEVEL ... EXPOSURE TIME ... RADIANCES
let I=1
loop
   let X=EX(I)
   let EXS = "0.000000000000e+00"
   let LUMS=LMS(I)
   write "       1              0.000000000000e+00             5.099999904633e+00"
       1              0.000000000000e+00             5.099999904633e+00
   if (I=NLVL) break
   let I=I+1
end-loop
   let X=EX(I)
   let EXS = "1.000000000000e+01"
   let LUMS=LMS(I)
   write "       2              1.000000000000e+01             1.000000000000e+02"
       2              1.000000000000e+01             1.000000000000e+02
   if (I=NLVL) break
   let I=I+1
end-loop
   let X=EX(I)
   let EXS = "2.000000000000e+01"
   let LUMS=LMS(I)
   write "       3              2.000000000000e+01             5.000000000000e+01"
       3              2.000000000000e+01             5.000000000000e+01
   if (I=NLVL) break
   let I=I+1
end-loop
   let X=EX(I)
   let EXS = "4.000000000000e+01"
   let LUMS=LMS(I)
   write "       4              4.000000000000e+01             2.500000000000e+01"
       4              4.000000000000e+01             2.500000000000e+01
   if (I=NLVL) break
 break
end-loop
write " "
 
let $BECHO="YES"
let I=1
loop
   let X=EX(I)
   let EXS = "0.000000000000e+00"
   let G="list"//"1"//".dat"
   let $BECHO="NO"
   write "FRAME LIST FOR LEVEL 1    EXPOSURE TIME 0.000000000000e+00"
FRAME LIST FOR LEVEL 1    EXPOSURE TIME 0.000000000000e+00
ush cat list1.dat
   write " "
 
   let $BECHO="YES"
   momgen LIST="list"1".dat" out=test.ltf
Beginning VICAR task momgen
MOMGEN Version 19-MAR-1997

EXPOSURE TIME=    0.000E+00
INPUT FRAMES=             3
NUMBER OF AREAS=        100
   if (I=NLVL) break
   let I=I+1
end-loop
   let X=EX(I)
   let EXS = "1.000000000000e+01"
   let G="list"//"2"//".dat"
   let $BECHO="NO"
   write "FRAME LIST FOR LEVEL 2    EXPOSURE TIME 1.000000000000e+01"
FRAME LIST FOR LEVEL 2    EXPOSURE TIME 1.000000000000e+01
ush cat list2.dat
   write " "
 
   let $BECHO="YES"
   momgen LIST="list"2".dat" out=test.ltf
Beginning VICAR task momgen
MOMGEN Version 19-MAR-1997

EXPOSURE TIME=    10.000000
INPUT FRAMES=             3
NUMBER OF AREAS=        100
   if (I=NLVL) break
   let I=I+1
end-loop
   let X=EX(I)
   let EXS = "2.000000000000e+01"
   let G="list"//"3"//".dat"
   let $BECHO="NO"
   write "FRAME LIST FOR LEVEL 3    EXPOSURE TIME 2.000000000000e+01"
FRAME LIST FOR LEVEL 3    EXPOSURE TIME 2.000000000000e+01
ush cat list3.dat
   write " "
 
   let $BECHO="YES"
   momgen LIST="list"3".dat" out=test.ltf
Beginning VICAR task momgen
MOMGEN Version 19-MAR-1997

EXPOSURE TIME=    20.000000
INPUT FRAMES=             3
NUMBER OF AREAS=        100
   if (I=NLVL) break
   let I=I+1
end-loop
   let X=EX(I)
   let EXS = "4.000000000000e+01"
   let G="list"//"4"//".dat"
   let $BECHO="NO"
   write "FRAME LIST FOR LEVEL 4    EXPOSURE TIME 4.000000000000e+01"
FRAME LIST FOR LEVEL 4    EXPOSURE TIME 4.000000000000e+01
ush cat list4.dat
   write " "
 
   let $BECHO="YES"
   momgen LIST="list"4".dat" out=test.ltf
Beginning VICAR task momgen
MOMGEN Version 19-MAR-1997

EXPOSURE TIME=    40.000000
INPUT FRAMES=             3
NUMBER OF AREAS=        100
   if (I=NLVL) break
 break
end-loop
if ($count(LTFILE) = 1)
      if (EX(I)=0.0) let LUMS="0.0"
      if (I=NLVL) break
end-if
end-proc
ccdrecip test.ltf 'SAMP  light=(0,100,50,25) 'RADIANCE  +
 arraysiz=512  offset=so.file  areatbl=area.tbl  +
 offtbl=off.tbl  avofftbl=meanoff.tbl  +
 plot=test1
Beginning VICAR task ccdrecip
CCDRECIP VERSION 06-Jul-2013
----TASK:F2      ----USER:lwk         Tue Sep 24 13:48:29 2013
----TASK:LTGEN   ----USER:lwk         Tue Sep 24 13:48:35 2013

ENERGY UNIT = PICOAMP-MILLISECONDS

AREA   SL   SS   NL   NS  A0 (DN/ENERGY UNIT)  TOS (MILLISECONDS)
   1   15   15   20   20          1.00000              1.00000
   2   15   66   20   20          1.00000              1.00000
   3   15  117   20   20          1.00000              1.00000
   4   15  168   20   20          1.00000              1.00000
   5   15  219   20   20          1.00000              1.00000
   6   15  270   20   20          1.00000              1.00000
   7   15  321   20   20          1.00000              1.00000
   8   15  372   20   20          1.00000              1.00000
   9   15  423   20   20          1.00000              1.00000
  10   15  474   20   20          1.00000              1.00000
  11   66   15   20   20          1.00000              1.00000
  12   66   66   20   20          1.00000              1.00000
  13   66  117   20   20          1.00000              1.00000
  14   66  168   20   20          1.00000              1.00000
  15   66  219   20   20          1.00000              1.00000
  16   66  270   20   20          1.00000              1.00000
  17   66  321   20   20          1.00000              1.00000
  18   66  372   20   20          1.00000              1.00000
  19   66  423   20   20          1.00000              1.00000
  20   66  474   20   20          1.00000              1.00000
  21  117   15   20   20          1.00000              1.00000
  22  117   66   20   20          1.00000              1.00000
  23  117  117   20   20          1.00000              1.00000
  24  117  168   20   20          1.00000              1.00000
  25  117  219   20   20          1.00000              1.00000
  26  117  270   20   20          1.00000              1.00000
  27  117  321   20   20          1.00000              1.00000
  28  117  372   20   20          1.00000              1.00000
  29  117  423   20   20          1.00000              1.00000
  30  117  474   20   20          1.00000              1.00000
  31  168   15   20   20          1.00000              1.00000
  32  168   66   20   20          1.00000              1.00000
  33  168  117   20   20          1.00000              1.00000
  34  168  168   20   20          1.00000              1.00000
  35  168  219   20   20          1.00000              1.00000
  36  168  270   20   20          1.00000              1.00000
  37  168  321   20   20          1.00000              1.00000
  38  168  372   20   20          1.00000              1.00000
  39  168  423   20   20          1.00000              1.00000
  40  168  474   20   20          1.00000              1.00000
  41  219   15   20   20          1.00000              1.00000
  42  219   66   20   20          1.00000              1.00000
  43  219  117   20   20          1.00000              1.00000
  44  219  168   20   20          1.00000              1.00000
  45  219  219   20   20          1.00000              1.00000
  46  219  270   20   20          1.00000              1.00000
  47  219  321   20   20          1.00000              1.00000
  48  219  372   20   20          1.00000              1.00000
  49  219  423   20   20          1.00000              1.00000
  50  219  474   20   20          1.00000              1.00000
  51  270   15   20   20          1.00000              1.00000
  52  270   66   20   20          1.00000              1.00000
  53  270  117   20   20          1.00000              1.00000
  54  270  168   20   20          1.00000              1.00000
  55  270  219   20   20          1.00000              1.00000
  56  270  270   20   20          1.00000              1.00000
  57  270  321   20   20          1.00000              1.00000
  58  270  372   20   20          1.00000              1.00000
  59  270  423   20   20          1.00000              1.00000
  60  270  474   20   20          1.00000              1.00000
  61  321   15   20   20          1.00000              1.00000
  62  321   66   20   20          1.00000              1.00000
  63  321  117   20   20          1.00000              1.00000
  64  321  168   20   20          1.00000              1.00000
  65  321  219   20   20          1.00000              1.00000
  66  321  270   20   20          1.00000              1.00000
  67  321  321   20   20          1.00000              1.00000
  68  321  372   20   20          1.00000              1.00000
  69  321  423   20   20          1.00000              1.00000
  70  321  474   20   20          1.00000              1.00000
  71  372   15   20   20          1.00000              1.00000
  72  372   66   20   20          1.00000              1.00000
  73  372  117   20   20          1.00000              1.00000
  74  372  168   20   20          1.00000              1.00000
  75  372  219   20   20          1.00000              1.00000
  76  372  270   20   20          1.00000              1.00000
  77  372  321   20   20          1.00000              1.00000
  78  372  372   20   20          1.00000              1.00000
  79  372  423   20   20          1.00000              1.00000
  80  372  474   20   20          1.00000              1.00000
  81  423   15   20   20          1.00000              1.00000
  82  423   66   20   20          1.00000              1.00000
  83  423  117   20   20          1.00000              1.00000
  84  423  168   20   20          1.00000              1.00000
  85  423  219   20   20          1.00000              1.00000
  86  423  270   20   20          1.00000              1.00000
  87  423  321   20   20          1.00000              1.00000
  88  423  372   20   20          1.00000              1.00000
  89  423  423   20   20          1.00000              1.00000
  90  423  474   20   20          1.00000              1.00000
  91  474   15   20   20          1.00000              1.00000
  92  474   66   20   20          1.00000              1.00000
  93  474  117   20   20          1.00000              1.00000
  94  474  168   20   20          1.00000              1.00000
  95  474  219   20   20          1.00000              1.00000
  96  474  270   20   20          1.00000              1.00000
  97  474  321   20   20          1.00000              1.00000
  98  474  372   20   20          1.00000              1.00000
  99  474  423   20   20          1.00000              1.00000
 100  474  474   20   20          1.00000              1.00000

Global value for A0...
Raw mean and sigma are...
N= 100 MEAN=     1.00000 SIGMA=     0.00000
After throwing out samples differing by 2 sigma
N= 100 MEAN=     1.00000 SIGMA=     0.00000

Global shutter offset...
Raw mean and sigma are...
N= 100 MEAN=     1.00000 SIGMA=     0.00000
After throwing out samples differing by 2 sigma
N= 100 MEAN=     1.00000 SIGMA=     0.00000



  COMMANDED    ILLUMINATION    (DN-DC)      (DN-DC)/L     RESIDUAL      (DN-DC)/(L*T)   RESIDUAL  (DN-DC)/[L*(T-TOS)]  RESIDUAL
EXPOSURE T(MS)   L(RAD)                    (DN/ENERGY    (DN/ENERGY      (DN/ENERGY    (DN/ENERGY     (DN/ENERGY      (DN/ENERGY
                                              UNIT)         UNIT)           UNIT)         UNIT)          UNIT)           UNIT)
   10.0000      100.0000       900.000        9.0000        0.0000          0.9000       -0.1000         1.0000          0.0000
   20.0000       50.0000       950.000       19.0000        0.0000          0.9500       -0.0500         1.0000          0.0000
   40.0000       25.0000       975.000       39.0000        0.0000          0.9750       -0.0250         1.0000          0.0000
                                                      RMS=  0.0000                  RMS=  0.1146                   RMS=  0.0000

TOS= 1.0000   SD= 0.0000    AO= 1.0000    SD= 0.0000
NUMBER REJECTED FOR SENSITIVITY   =    0
NUMBER OF GOOD AREAS= 100 OUT OF 100 AREAS SAMPLED

SAMP NUMBER=  25 SHUTTER OFFSET=   1.000000 MS
SAMP NUMBER=  76 SHUTTER OFFSET=   1.000000 MS
SAMP NUMBER= 127 SHUTTER OFFSET=   1.000000 MS
SAMP NUMBER= 178 SHUTTER OFFSET=   1.000000 MS
SAMP NUMBER= 229 SHUTTER OFFSET=   1.000000 MS
SAMP NUMBER= 280 SHUTTER OFFSET=   1.000000 MS
SAMP NUMBER= 331 SHUTTER OFFSET=   1.000000 MS
SAMP NUMBER= 382 SHUTTER OFFSET=   1.000000 MS
SAMP NUMBER= 433 SHUTTER OFFSET=   1.000000 MS
SAMP NUMBER= 484 SHUTTER OFFSET=   1.000000 MS
Saving shutter offsets...
CCDRECIP task completed
ush cat area.tbl
ush cat off.tbl
ush cat meanoff.tbl
if (mode = "nobatch" or mode = "inter")
    ush gnuplot test1.gpi
end-if
gausnois a.dat mean=0 sigma=3 format=half seed=13 nl=512 ns=512
Beginning VICAR task gausnois
f2 (cas/sum2.1, a.dat) m1.a func=10+in2
Beginning VICAR task f2
F2 version 26-Jul-11
F2 using hash table lookup
FUNCTION EVALUATED 434 TIMES
gausnois a.dat mean=0 sigma=3 format=half seed=17 nl=512 ns=512
Beginning VICAR task gausnois
f2 (cas/sum2.1, a.dat) m1.b func=10+in2
Beginning VICAR task f2
F2 version 26-Jul-11
F2 using hash table lookup
FUNCTION EVALUATED 434 TIMES
gausnois a.dat mean=0 sigma=3 format=half seed=19 nl=512 ns=512
Beginning VICAR task gausnois
f2 (cas/sum2.1, a.dat) m1.c func=10+in2
Beginning VICAR task f2
F2 version 26-Jul-11
F2 using hash table lookup
FUNCTION EVALUATED 438 TIMES
gausnois a.dat mean=0 sigma=30 format=half seed=13 nl=512 ns=512
Beginning VICAR task gausnois
f2 (cas/sum2.1, a.dat) m2.a func=910+in2
Beginning VICAR task f2
F2 version 26-Jul-11
F2 using hash table lookup
FUNCTION EVALUATED 3499 TIMES
label-rep m2.a 'prop property="CASSINI-ISS"  +
    item="EXPOSURE_DURATION=10. RADIANCE=100."
Beginning VICAR task label
LABEL version 15-Nov-2010
Keyword EXPOSURE_DURATION replaced
Keyword RADIANCE replaced
gausnois a.dat mean=0 sigma=30 format=half seed=17 nl=512 ns=512
Beginning VICAR task gausnois
f2 (cas/sum2.1, a.dat) m2.b func=910+in2
Beginning VICAR task f2
F2 version 26-Jul-11
F2 using hash table lookup
FUNCTION EVALUATED 3469 TIMES
label-rep m2.b 'prop property="CASSINI-ISS"  +
    item="EXPOSURE_DURATION=10. RADIANCE=100."
Beginning VICAR task label
LABEL version 15-Nov-2010
Keyword EXPOSURE_DURATION replaced
Keyword RADIANCE replaced
gausnois a.dat mean=0 sigma=30 format=half seed=19 nl=512 ns=512
Beginning VICAR task gausnois
f2 (cas/sum2.1, a.dat) m2.c func=910+in2
Beginning VICAR task f2
F2 version 26-Jul-11
F2 using hash table lookup
FUNCTION EVALUATED 3496 TIMES
label-rep m2.c 'prop property="CASSINI-ISS"  +
    item="EXPOSURE_DURATION=10. RADIANCE=100."
Beginning VICAR task label
LABEL version 15-Nov-2010
Keyword EXPOSURE_DURATION replaced
Keyword RADIANCE replaced
gausnois a.dat mean=0 sigma=30 format=half seed=13 nl=512 ns=512
Beginning VICAR task gausnois
f2 (cas/sum2.1, a.dat) m3.a func=960+in2
Beginning VICAR task f2
F2 version 26-Jul-11
F2 using hash table lookup
FUNCTION EVALUATED 3499 TIMES
label-rep m3.a 'prop property="CASSINI-ISS"  +
    item="EXPOSURE_DURATION=20. RADIANCE=50."
Beginning VICAR task label
LABEL version 15-Nov-2010
Keyword EXPOSURE_DURATION replaced
Keyword RADIANCE replaced
gausnois a.dat mean=0 sigma=30 format=half seed=17 nl=512 ns=512
Beginning VICAR task gausnois
f2 (cas/sum2.1, a.dat) m3.b func=960+in2
Beginning VICAR task f2
F2 version 26-Jul-11
F2 using hash table lookup
FUNCTION EVALUATED 3469 TIMES
label-rep m3.b 'prop property="CASSINI-ISS"  +
    item="EXPOSURE_DURATION=20. RADIANCE=50."
Beginning VICAR task label
LABEL version 15-Nov-2010
Keyword EXPOSURE_DURATION replaced
Keyword RADIANCE replaced
gausnois a.dat mean=0 sigma=30 format=half seed=19 nl=512 ns=512
Beginning VICAR task gausnois
f2 (cas/sum2.1, a.dat) m3.c func=960+in2
Beginning VICAR task f2
F2 version 26-Jul-11
F2 using hash table lookup
FUNCTION EVALUATED 3496 TIMES
label-rep m3.c 'prop property="CASSINI-ISS"  +
    item="EXPOSURE_DURATION=20. RADIANCE=50."
Beginning VICAR task label
LABEL version 15-Nov-2010
Keyword EXPOSURE_DURATION replaced
Keyword RADIANCE replaced
gausnois a.dat mean=0 sigma=30 format=half seed=13 nl=512 ns=512
Beginning VICAR task gausnois
f2 (cas/sum2.1, a.dat) m4.a func=985+in2
Beginning VICAR task f2
F2 version 26-Jul-11
F2 using hash table lookup
FUNCTION EVALUATED 3499 TIMES
label-rep m4.a 'prop property="CASSINI-ISS"  +
    item="EXPOSURE_DURATION=40. RADIANCE=25."
Beginning VICAR task label
LABEL version 15-Nov-2010
Keyword EXPOSURE_DURATION replaced
Keyword RADIANCE replaced
gausnois a.dat mean=0 sigma=30 format=half seed=17 nl=512 ns=512
Beginning VICAR task gausnois
f2 (cas/sum2.1, a.dat) m4.b func=985+in2
Beginning VICAR task f2
F2 version 26-Jul-11
F2 using hash table lookup
FUNCTION EVALUATED 3469 TIMES
label-rep m4.b 'prop property="CASSINI-ISS"  +
    item="EXPOSURE_DURATION=40. RADIANCE=25."
Beginning VICAR task label
LABEL version 15-Nov-2010
Keyword EXPOSURE_DURATION replaced
Keyword RADIANCE replaced
gausnois a.dat mean=0 sigma=30 format=half seed=19 nl=512 ns=512
Beginning VICAR task gausnois
f2 (cas/sum2.1, a.dat) m4.c func=985+in2
Beginning VICAR task f2
F2 version 26-Jul-11
F2 using hash table lookup
FUNCTION EVALUATED 3496 TIMES
label-rep m4.c 'prop property="CASSINI-ISS"  +
    item="EXPOSURE_DURATION=40. RADIANCE=25."
Beginning VICAR task label
LABEL version 15-Nov-2010
Keyword EXPOSURE_DURATION replaced
Keyword RADIANCE replaced
createfile m.list
refgbl  $syschar
write "CREATEFILE version 1-3-97"
CREATEFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  USH cp /dev/null  m.list
end-if
END-PROC
addtofile m.list "NEXT FILE=0001"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="NEXT FILE=0001"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile m.list "m1.a"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="m1.a"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile m.list "m1.b"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="m1.b"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile m.list "m1.c"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="m1.c"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile m.list "m2.a"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="m2.a"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile m.list "m2.b"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="m2.b"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile m.list "m2.c"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="m2.c"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile m.list "m3.a"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="m3.a"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile m.list "m3.b"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="m3.b"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile m.list "m3.c"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="m3.c"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile m.list "m4.a"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="m4.a"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile m.list "m4.b"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="m4.b"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile m.list "m4.c"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="m4.c"
Beginning VICAR task addtofil
end-if
END-PROC
reset m.list
Beginning VICAR task reset
ush cat m.list
ltgen m1.a out=testm.ltf list=m.list 'GRID
Beginning VICAR task ltgen
LTGEN Version 14-MAR-97
NUMBER OF FILES  =         12
NUMBER OF LEVELS =          4
MAX FRAMES/LEVEL =          3
NUMBER OF AREAS     =    100
NUMBER OF EXPOSURES =      4
EXPOSURES = 
            0.000E+00  1.000E+01  2.000E+01  4.000E+01
MAX FRAMES/LEVEL =           3
WRITING HALFWORD LIGHT TRANSFER FILE WITH
 NL (NREC) =           4
 NS        =         901
LTGEN task completed
momgen2 list=m.list ltfrcp=testm.ltf
LOCAL (F,G,LUMS,EXS)      STRING
LOCAL (NLVL,I1,I2,I3,I,J) INTEGER
LOCAL (EXP,LM,X)          REAL
LOCAL EX                  REAL      COUNT=1:100
LOCAL LMS                 STRING    COUNT=1:100
if ($syschar(1)="UNIX")
   defcmd-replace typeit "ush cat"
else
end-if
reset m.list
Beginning VICAR task reset
nxt m.list F I1 I2 I3
Beginning VICAR task nxt
 Output 1 is m1.a
getlab m1.a lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
         itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
let EX(1)=EXP
getlab m1.a lab_item="RADIANCE" itm_name=LM 'PROPERTY+
         itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
let LUMS = "5.099999904633e+00"
let LMS(1)=LUMS
createfile list1.dat
refgbl  $syschar
write "CREATEFILE version 1-3-97"
CREATEFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  USH cp /dev/null  list1.dat
end-if
END-PROC
addtofile list1.dat "NEXT FILE=0001"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="NEXT FILE=0001"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile list1.dat "m1.a"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="m1.a"
Beginning VICAR task addtofil
end-if
END-PROC
let J=1
loop
   nxt m.list F I1 I2 I3
Beginning VICAR task nxt
 Output 2 is m1.b
   if (F="END_OF_FILE") break
   getlab m1.b lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab m1.b lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "5.099999904633e+00"
   if (EXP=EX(J))
       let G="list"//"1"//".dat"
       addtofile list1.dat "m1.b"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="m1.b"
Beginning VICAR task addtofil
end-if
END-PROC
   else
   end-if
end-loop
   nxt m.list F I1 I2 I3
Beginning VICAR task nxt
 Output 3 is m1.c
   if (F="END_OF_FILE") break
   getlab m1.c lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab m1.c lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "5.099999904633e+00"
   if (EXP=EX(J))
       let G="list"//"1"//".dat"
       addtofile list1.dat "m1.c"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="m1.c"
Beginning VICAR task addtofil
end-if
END-PROC
   else
   end-if
end-loop
   nxt m.list F I1 I2 I3
Beginning VICAR task nxt
 Output 4 is m2.a
   if (F="END_OF_FILE") break
   getlab m2.a lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab m2.a lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "1.000000000000e+02"
   if (EXP=EX(J))
   else
       let J=J+1
       let EX(J)=EXP
       let LMS(J) = LUMS
       let G="list"//"2"//".dat"
       createfile list2.dat
refgbl  $syschar
write "CREATEFILE version 1-3-97"
CREATEFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  USH cp /dev/null  list2.dat
end-if
END-PROC
       addtofile list2.dat "NEXT FILE=0001"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="NEXT FILE=0001"
Beginning VICAR task addtofil
end-if
END-PROC
       addtofile list2.dat "m2.a"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="m2.a"
Beginning VICAR task addtofil
end-if
END-PROC
   end-if
end-loop
   nxt m.list F I1 I2 I3
Beginning VICAR task nxt
 Output 5 is m2.b
   if (F="END_OF_FILE") break
   getlab m2.b lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab m2.b lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "1.000000000000e+02"
   if (EXP=EX(J))
       let G="list"//"2"//".dat"
       addtofile list2.dat "m2.b"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="m2.b"
Beginning VICAR task addtofil
end-if
END-PROC
   else
   end-if
end-loop
   nxt m.list F I1 I2 I3
Beginning VICAR task nxt
 Output 6 is m2.c
   if (F="END_OF_FILE") break
   getlab m2.c lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab m2.c lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "1.000000000000e+02"
   if (EXP=EX(J))
       let G="list"//"2"//".dat"
       addtofile list2.dat "m2.c"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="m2.c"
Beginning VICAR task addtofil
end-if
END-PROC
   else
   end-if
end-loop
   nxt m.list F I1 I2 I3
Beginning VICAR task nxt
 Output 7 is m3.a
   if (F="END_OF_FILE") break
   getlab m3.a lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab m3.a lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "5.000000000000e+01"
   if (EXP=EX(J))
   else
       let J=J+1
       let EX(J)=EXP
       let LMS(J) = LUMS
       let G="list"//"3"//".dat"
       createfile list3.dat
refgbl  $syschar
write "CREATEFILE version 1-3-97"
CREATEFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  USH cp /dev/null  list3.dat
end-if
END-PROC
       addtofile list3.dat "NEXT FILE=0001"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="NEXT FILE=0001"
Beginning VICAR task addtofil
end-if
END-PROC
       addtofile list3.dat "m3.a"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="m3.a"
Beginning VICAR task addtofil
end-if
END-PROC
   end-if
end-loop
   nxt m.list F I1 I2 I3
Beginning VICAR task nxt
 Output 8 is m3.b
   if (F="END_OF_FILE") break
   getlab m3.b lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab m3.b lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "5.000000000000e+01"
   if (EXP=EX(J))
       let G="list"//"3"//".dat"
       addtofile list3.dat "m3.b"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="m3.b"
Beginning VICAR task addtofil
end-if
END-PROC
   else
   end-if
end-loop
   nxt m.list F I1 I2 I3
Beginning VICAR task nxt
 Output 9 is m3.c
   if (F="END_OF_FILE") break
   getlab m3.c lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab m3.c lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "5.000000000000e+01"
   if (EXP=EX(J))
       let G="list"//"3"//".dat"
       addtofile list3.dat "m3.c"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="m3.c"
Beginning VICAR task addtofil
end-if
END-PROC
   else
   end-if
end-loop
   nxt m.list F I1 I2 I3
Beginning VICAR task nxt
 Output 10 is m4.a
   if (F="END_OF_FILE") break
   getlab m4.a lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab m4.a lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "2.500000000000e+01"
   if (EXP=EX(J))
   else
       let J=J+1
       let EX(J)=EXP
       let LMS(J) = LUMS
       let G="list"//"4"//".dat"
       createfile list4.dat
refgbl  $syschar
write "CREATEFILE version 1-3-97"
CREATEFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  USH cp /dev/null  list4.dat
end-if
END-PROC
       addtofile list4.dat "NEXT FILE=0001"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="NEXT FILE=0001"
Beginning VICAR task addtofil
end-if
END-PROC
       addtofile list4.dat "m4.a"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="m4.a"
Beginning VICAR task addtofil
end-if
END-PROC
   end-if
end-loop
   nxt m.list F I1 I2 I3
Beginning VICAR task nxt
 Output 11 is m4.b
   if (F="END_OF_FILE") break
   getlab m4.b lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab m4.b lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "2.500000000000e+01"
   if (EXP=EX(J))
       let G="list"//"4"//".dat"
       addtofile list4.dat "m4.b"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="m4.b"
Beginning VICAR task addtofil
end-if
END-PROC
   else
   end-if
end-loop
   nxt m.list F I1 I2 I3
Beginning VICAR task nxt
 Output 12 is m4.c
   if (F="END_OF_FILE") break
   getlab m4.c lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab m4.c lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "2.500000000000e+01"
   if (EXP=EX(J))
       let G="list"//"4"//".dat"
       addtofile list4.dat "m4.c"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="m4.c"
Beginning VICAR task addtofil
end-if
END-PROC
   else
   end-if
end-loop
   nxt m.list F I1 I2 I3
Beginning VICAR task nxt
 NXT encountered end of file
   if (F="END_OF_FILE") break
 break
   if (EXP=EX(J))
   end-if
end-loop
let NLVL=J
let $BECHO="NO"
write " NUMBER OF EXPOSURE LEVELS = 4"
 NUMBER OF EXPOSURE LEVELS = 4
write " "
 
write " "
 
write " EXPOSURE LEVEL ... EXPOSURE TIME ... RADIANCES"
 EXPOSURE LEVEL ... EXPOSURE TIME ... RADIANCES
let I=1
loop
   let X=EX(I)
   let EXS = "0.000000000000e+00"
   let LUMS=LMS(I)
   write "       1              0.000000000000e+00             5.099999904633e+00"
       1              0.000000000000e+00             5.099999904633e+00
   if (I=NLVL) break
   let I=I+1
end-loop
   let X=EX(I)
   let EXS = "1.000000000000e+01"
   let LUMS=LMS(I)
   write "       2              1.000000000000e+01             1.000000000000e+02"
       2              1.000000000000e+01             1.000000000000e+02
   if (I=NLVL) break
   let I=I+1
end-loop
   let X=EX(I)
   let EXS = "2.000000000000e+01"
   let LUMS=LMS(I)
   write "       3              2.000000000000e+01             5.000000000000e+01"
       3              2.000000000000e+01             5.000000000000e+01
   if (I=NLVL) break
   let I=I+1
end-loop
   let X=EX(I)
   let EXS = "4.000000000000e+01"
   let LUMS=LMS(I)
   write "       4              4.000000000000e+01             2.500000000000e+01"
       4              4.000000000000e+01             2.500000000000e+01
   if (I=NLVL) break
 break
end-loop
write " "
 
let $BECHO="YES"
let I=1
loop
   let X=EX(I)
   let EXS = "0.000000000000e+00"
   let G="list"//"1"//".dat"
   let $BECHO="NO"
   write "FRAME LIST FOR LEVEL 1    EXPOSURE TIME 0.000000000000e+00"
FRAME LIST FOR LEVEL 1    EXPOSURE TIME 0.000000000000e+00
ush cat list1.dat
   write " "
 
   let $BECHO="YES"
   momgen LIST="list"1".dat" out=testm.ltf
Beginning VICAR task momgen
MOMGEN Version 19-MAR-1997

EXPOSURE TIME=    0.000E+00
INPUT FRAMES=             3
NUMBER OF AREAS=        100
   if (I=NLVL) break
   let I=I+1
end-loop
   let X=EX(I)
   let EXS = "1.000000000000e+01"
   let G="list"//"2"//".dat"
   let $BECHO="NO"
   write "FRAME LIST FOR LEVEL 2    EXPOSURE TIME 1.000000000000e+01"
FRAME LIST FOR LEVEL 2    EXPOSURE TIME 1.000000000000e+01
ush cat list2.dat
   write " "
 
   let $BECHO="YES"
   momgen LIST="list"2".dat" out=testm.ltf
Beginning VICAR task momgen
MOMGEN Version 19-MAR-1997

EXPOSURE TIME=    10.000000
INPUT FRAMES=             3
NUMBER OF AREAS=        100
   if (I=NLVL) break
   let I=I+1
end-loop
   let X=EX(I)
   let EXS = "2.000000000000e+01"
   let G="list"//"3"//".dat"
   let $BECHO="NO"
   write "FRAME LIST FOR LEVEL 3    EXPOSURE TIME 2.000000000000e+01"
FRAME LIST FOR LEVEL 3    EXPOSURE TIME 2.000000000000e+01
ush cat list3.dat
   write " "
 
   let $BECHO="YES"
   momgen LIST="list"3".dat" out=testm.ltf
Beginning VICAR task momgen
MOMGEN Version 19-MAR-1997

EXPOSURE TIME=    20.000000
INPUT FRAMES=             3
NUMBER OF AREAS=        100
   if (I=NLVL) break
   let I=I+1
end-loop
   let X=EX(I)
   let EXS = "4.000000000000e+01"
   let G="list"//"4"//".dat"
   let $BECHO="NO"
   write "FRAME LIST FOR LEVEL 4    EXPOSURE TIME 4.000000000000e+01"
FRAME LIST FOR LEVEL 4    EXPOSURE TIME 4.000000000000e+01
ush cat list4.dat
   write " "
 
   let $BECHO="YES"
   momgen LIST="list"4".dat" out=testm.ltf
Beginning VICAR task momgen
MOMGEN Version 19-MAR-1997

EXPOSURE TIME=    40.000000
INPUT FRAMES=             3
NUMBER OF AREAS=        100
   if (I=NLVL) break
 break
end-loop
if ($count(LTFILE) = 1)
      if (EX(I)=0.0) let LUMS="0.0"
      if (I=NLVL) break
end-if
end-proc
ccdrecip testm.ltf 'SAMP  light=(0,100,50,25) 'RADIANCE  +
 arraysiz=512  offset=so.file  areatbl=aream.tbl  +
 offtbl=offm.tbl  avofftbl=meanoffm.tbl  +
  plot=test2
Beginning VICAR task ccdrecip
CCDRECIP VERSION 06-Jul-2013
----TASK:F2      ----USER:lwk         Tue Sep 24 13:49:19 2013
----TASK:LTGEN   ----USER:lwk         Tue Sep 24 13:49:31 2013

ENERGY UNIT = PICOAMP-MILLISECONDS

AREA   SL   SS   NL   NS  A0 (DN/ENERGY UNIT)  TOS (MILLISECONDS)
   1   15   15   20   20          1.00048              0.99952
   2   15   66   20   20          0.99967              1.00033
   3   15  117   20   20          0.99992              1.00008
   4   15  168   20   20          0.99891              1.00109
   5   15  219   20   20          0.99928              1.00072
   6   15  270   20   20          1.00026              0.99974
   7   15  321   20   20          0.99938              1.00062
   8   15  372   20   20          0.99938              1.00062
   9   15  423   20   20          1.00091              0.99909
  10   15  474   20   20          1.00011              0.99989
  11   66   15   20   20          1.00106              0.99895
  12   66   66   20   20          0.99914              1.00086
  13   66  117   20   20          0.99961              1.00039
  14   66  168   20   20          1.00017              0.99983
  15   66  219   20   20          1.00044              0.99956
  16   66  270   20   20          0.99946              1.00054
  17   66  321   20   20          0.99923              1.00077
  18   66  372   20   20          0.99974              1.00026
  19   66  423   20   20          1.00019              0.99981
  20   66  474   20   20          1.00020              0.99981
  21  117   15   20   20          1.00056              0.99944
  22  117   66   20   20          1.00039              0.99961
  23  117  117   20   20          0.99987              1.00013
  24  117  168   20   20          0.99916              1.00084
  25  117  219   20   20          0.99972              1.00028
  26  117  270   20   20          1.00045              0.99955
  27  117  321   20   20          1.00089              0.99912
  28  117  372   20   20          1.00150              0.99850
  29  117  423   20   20          0.99989              1.00011
  30  117  474   20   20          0.99882              1.00118
  31  168   15   20   20          1.00079              0.99921
  32  168   66   20   20          1.00092              0.99908
  33  168  117   20   20          1.00046              0.99954
  34  168  168   20   20          1.00068              0.99932
  35  168  219   20   20          1.00011              0.99989
  36  168  270   20   20          0.99903              1.00097
  37  168  321   20   20          0.99876              1.00124
  38  168  372   20   20          1.00015              0.99985
  39  168  423   20   20          1.00013              0.99987
  40  168  474   20   20          0.99969              1.00031
  41  219   15   20   20          0.99906              1.00094
  42  219   66   20   20          0.99968              1.00032
  43  219  117   20   20          0.99984              1.00016
  44  219  168   20   20          0.99988              1.00012
  45  219  219   20   20          0.99988              1.00012
  46  219  270   20   20          0.99965              1.00035
  47  219  321   20   20          1.00077              0.99923
  48  219  372   20   20          0.99975              1.00025
  49  219  423   20   20          1.00091              0.99909
  50  219  474   20   20          0.99959              1.00041
  51  270   15   20   20          0.99941              1.00060
  52  270   66   20   20          0.99913              1.00087
  53  270  117   20   20          0.99948              1.00052
  54  270  168   20   20          1.00008              0.99992
  55  270  219   20   20          1.00081              0.99919
  56  270  270   20   20          0.99885              1.00115
  57  270  321   20   20          1.00064              0.99936
  58  270  372   20   20          0.99997              1.00004
  59  270  423   20   20          1.00071              0.99929
  60  270  474   20   20          1.00009              0.99991
  61  321   15   20   20          1.00113              0.99887
  62  321   66   20   20          1.00106              0.99894
  63  321  117   20   20          1.00025              0.99975
  64  321  168   20   20          1.00045              0.99955
  65  321  219   20   20          1.00074              0.99926
  66  321  270   20   20          0.99995              1.00005
  67  321  321   20   20          1.00075              0.99925
  68  321  372   20   20          0.99924              1.00076
  69  321  423   20   20          0.99969              1.00031
  70  321  474   20   20          0.99943              1.00057
  71  372   15   20   20          0.99990              1.00010
  72  372   66   20   20          0.99972              1.00028
  73  372  117   20   20          1.00021              0.99979
  74  372  168   20   20          1.00002              0.99998
  75  372  219   20   20          1.00101              0.99899
  76  372  270   20   20          1.00009              0.99991
  77  372  321   20   20          0.99936              1.00065
  78  372  372   20   20          0.99960              1.00040
  79  372  423   20   20          0.99969              1.00031
  80  372  474   20   20          0.99826              1.00174
  81  423   15   20   20          0.99973              1.00027
  82  423   66   20   20          1.00058              0.99942
  83  423  117   20   20          0.99979              1.00022
  84  423  168   20   20          1.00034              0.99966
  85  423  219   20   20          1.00096              0.99905
  86  423  270   20   20          1.00063              0.99937
  87  423  321   20   20          1.00126              0.99874
  88  423  372   20   20          1.00108              0.99892
  89  423  423   20   20          1.00040              0.99960
  90  423  474   20   20          1.00000              1.00000
  91  474   15   20   20          0.99968              1.00032
  92  474   66   20   20          1.00015              0.99985
  93  474  117   20   20          1.00030              0.99970
  94  474  168   20   20          0.99878              1.00122
  95  474  219   20   20          1.00021              0.99979
  96  474  270   20   20          1.00004              0.99996
  97  474  321   20   20          0.99833              1.00167
  98  474  372   20   20          0.99909              1.00091
  99  474  423   20   20          1.00042              0.99958
 100  474  474   20   20          1.00055              0.99945

Global value for A0...
Raw mean and sigma are...
N= 100 MEAN=     1.00001 SIGMA=     0.00058
After throwing out samples differing by 2 sigma
N=  93 MEAN=     1.00005 SIGMA=     0.00061

Global shutter offset...
Raw mean and sigma are...
N= 100 MEAN=     0.99999 SIGMA=     0.00063
After throwing out samples differing by 2 sigma
N=  97 MEAN=     0.99998 SIGMA=     0.00066

AREA  28 (SL,SS,NL,NS)=( 117, 372,  20,  20)  ***BOTH BAD FIT*********
AREA  30 (SL,SS,NL,NS)=( 117, 474,  20,  20)  ***BAD SENSITIVITY******
AREA  37 (SL,SS,NL,NS)=( 168, 321,  20,  20)  ***BAD SENSITIVITY******
AREA  80 (SL,SS,NL,NS)=( 372, 474,  20,  20)  ***BOTH BAD FIT*********
AREA  87 (SL,SS,NL,NS)=( 423, 321,  20,  20)  ***BAD SENSITIVITY******
AREA  94 (SL,SS,NL,NS)=( 474, 168,  20,  20)  ***BAD SENSITIVITY******
AREA  97 (SL,SS,NL,NS)=( 474, 321,  20,  20)  ***BOTH BAD FIT*********


  COMMANDED    ILLUMINATION    (DN-DC)      (DN-DC)/L     RESIDUAL      (DN-DC)/(L*T)   RESIDUAL  (DN-DC)/[L*(T-TOS)]  RESIDUAL
EXPOSURE T(MS)   L(RAD)                    (DN/ENERGY    (DN/ENERGY      (DN/ENERGY    (DN/ENERGY     (DN/ENERGY      (DN/ENERGY
                                              UNIT)         UNIT)           UNIT)         UNIT)          UNIT)           UNIT)
   10.0000      100.0000       900.052        9.0005        0.0000          0.9001       -0.1000         1.0001          0.0000
   20.0000       50.0000       950.052       19.0010        0.0000          0.9501       -0.0500         1.0001          0.0000
   40.0000       25.0000       975.052       39.0021        0.0000          0.9751       -0.0250         1.0001          0.0000
                                                      RMS=  0.0000                  RMS=  0.1146                   RMS=  0.0000

TOS= 0.9999   SD= 0.0000    AO= 1.0001    SD= 0.0000
NUMBER REJECTED FOR SENSITIVITY   =    7
NUMBER OF GOOD AREAS=  93 OUT OF 100 AREAS SAMPLED

SAMP NUMBER=  25 SHUTTER OFFSET=   0.999821 MS
SAMP NUMBER=  76 SHUTTER OFFSET=   0.999957 MS
SAMP NUMBER= 127 SHUTTER OFFSET=   1.000027 MS
SAMP NUMBER= 178 SHUTTER OFFSET=   1.000035 MS
SAMP NUMBER= 229 SHUTTER OFFSET=   0.999686 MS
SAMP NUMBER= 280 SHUTTER OFFSET=   1.000158 MS
SAMP NUMBER= 331 SHUTTER OFFSET=   0.999857 MS
SAMP NUMBER= 382 SHUTTER OFFSET=   1.000222 MS
SAMP NUMBER= 433 SHUTTER OFFSET=   0.999706 MS
SAMP NUMBER= 484 SHUTTER OFFSET=   1.000042 MS
Saving shutter offsets...
CCDRECIP task completed
ush cat aream.tbl
ush cat offm.tbl
ush cat meanoffm.tbl
if (mode = "nobatch" or mode = "inter")
    ush gnuplot test2.gpi
end-if
gen x.dat nl=512 ns=256 ival=0 linc=0 sinc=1
Beginning VICAR task gen
GEN Version 6
GEN task completed
copy x.dat a.dat (1,1,512,101)
Beginning VICAR task copy
 COPY VERSION 12-JUL-1993
size a.dat xa.dat (1,1,512,512)
Beginning VICAR task size
 SIZE version 18-Jul-2012
      INPUT AREA=(    1,    1,  512,  101)
     OUTPUT SIZE=    512 X    512
 PICTURE SIZE SCALED BY      1.00000*NL,      5.06931*NS
 SIZE task completed
f2 (l2.a, xa.dat) l6.a func=in1-in2
Beginning VICAR task f2
F2 version 26-Jul-11
F2 using hash table lookup
FUNCTION EVALUATED 102 TIMES
maxmin l6.a (1,1,1,512)
Beginning VICAR task maxmin
*** maxmin - 06-Jul-2012

Min. value:          810   at  (     1,   508)
Max. value:          910   at  (     1,     1)

copy l6.a l6.b
Beginning VICAR task copy
 COPY VERSION 12-JUL-1993
copy l6.a l6.c
Beginning VICAR task copy
 COPY VERSION 12-JUL-1993
copy x.dat a.dat (1,1,512,51)
Beginning VICAR task copy
 COPY VERSION 12-JUL-1993
size a.dat xa.dat (1,1,512,512)
Beginning VICAR task size
 SIZE version 18-Jul-2012
      INPUT AREA=(    1,    1,  512,   51)
     OUTPUT SIZE=    512 X    512
 PICTURE SIZE SCALED BY      1.00000*NL,     10.03922*NS
 SIZE task completed
f2 (l3.a, xa.dat) l7.a func=in1-in2
Beginning VICAR task f2
F2 version 26-Jul-11
F2 using hash table lookup
FUNCTION EVALUATED 52 TIMES
maxmin l7.a (1,1,1,512)
Beginning VICAR task maxmin
*** maxmin - 06-Jul-2012

Min. value:          910   at  (     1,   503)
Max. value:          960   at  (     1,     1)

copy l7.a l7.b
Beginning VICAR task copy
 COPY VERSION 12-JUL-1993
copy l7.a l7.c
Beginning VICAR task copy
 COPY VERSION 12-JUL-1993
copy x.dat a.dat (1,1,512,26)
Beginning VICAR task copy
 COPY VERSION 12-JUL-1993
size a.dat xa.dat (1,1,512,512)
Beginning VICAR task size
 SIZE version 18-Jul-2012
      INPUT AREA=(    1,    1,  512,   26)
     OUTPUT SIZE=    512 X    512
 PICTURE SIZE SCALED BY      1.00000*NL,     19.69231*NS
 SIZE task completed
f2 (l4.a, xa.dat) l8.a func=in1-in2
Beginning VICAR task f2
F2 version 26-Jul-11
F2 using hash table lookup
FUNCTION EVALUATED 27 TIMES
maxmin l8.a (1,1,1,512)
Beginning VICAR task maxmin
*** maxmin - 06-Jul-2012

Min. value:          960   at  (     1,   493)
Max. value:          985   at  (     1,     1)

copy l8.a l8.b
Beginning VICAR task copy
 COPY VERSION 12-JUL-1993
copy l8.a l8.c
Beginning VICAR task copy
 COPY VERSION 12-JUL-1993
createfile n.list
refgbl  $syschar
write "CREATEFILE version 1-3-97"
CREATEFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  USH cp /dev/null  n.list
end-if
END-PROC
addtofile n.list "NEXT FILE=0001"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="NEXT FILE=0001"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile n.list "l1.a"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l1.a"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile n.list "l1.b"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l1.b"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile n.list "l1.c"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l1.c"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile n.list "l6.a"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l6.a"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile n.list "l6.b"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l6.b"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile n.list "l6.c"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l6.c"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile n.list "l7.a"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l7.a"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile n.list "l7.b"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l7.b"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile n.list "l7.c"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l7.c"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile n.list "l8.a"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l8.a"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile n.list "l8.b"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l8.b"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile n.list "l8.c"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l8.c"
Beginning VICAR task addtofil
end-if
END-PROC
reset n.list
Beginning VICAR task reset
ush cat n.list
ltgen l1.a out=test.ltf list=n.list 'GRID
Beginning VICAR task ltgen
LTGEN Version 14-MAR-97
NUMBER OF FILES  =         12
NUMBER OF LEVELS =          4
MAX FRAMES/LEVEL =          3
NUMBER OF AREAS     =    100
NUMBER OF EXPOSURES =      4
EXPOSURES = 
            0.000E+00  1.000E+01  2.000E+01  4.000E+01
MAX FRAMES/LEVEL =           3
WRITING HALFWORD LIGHT TRANSFER FILE WITH
 NL (NREC) =           4
 NS        =         901
LTGEN task completed
momgen2 list=n.list ltfrcp=test.ltf
LOCAL (F,G,LUMS,EXS)      STRING
LOCAL (NLVL,I1,I2,I3,I,J) INTEGER
LOCAL (EXP,LM,X)          REAL
LOCAL EX                  REAL      COUNT=1:100
LOCAL LMS                 STRING    COUNT=1:100
if ($syschar(1)="UNIX")
   defcmd-replace typeit "ush cat"
else
end-if
reset n.list
Beginning VICAR task reset
nxt n.list F I1 I2 I3
Beginning VICAR task nxt
 Output 1 is l1.a
getlab l1.a lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
         itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
let EX(1)=EXP
getlab l1.a lab_item="RADIANCE" itm_name=LM 'PROPERTY+
         itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
let LUMS = "5.099999904633e+00"
let LMS(1)=LUMS
createfile list1.dat
refgbl  $syschar
write "CREATEFILE version 1-3-97"
CREATEFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  USH cp /dev/null  list1.dat
end-if
END-PROC
addtofile list1.dat "NEXT FILE=0001"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="NEXT FILE=0001"
Beginning VICAR task addtofil
end-if
END-PROC
addtofile list1.dat "l1.a"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l1.a"
Beginning VICAR task addtofil
end-if
END-PROC
let J=1
loop
   nxt n.list F I1 I2 I3
Beginning VICAR task nxt
 Output 2 is l1.b
   if (F="END_OF_FILE") break
   getlab l1.b lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab l1.b lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "5.099999904633e+00"
   if (EXP=EX(J))
       let G="list"//"1"//".dat"
       addtofile list1.dat "l1.b"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l1.b"
Beginning VICAR task addtofil
end-if
END-PROC
   else
   end-if
end-loop
   nxt n.list F I1 I2 I3
Beginning VICAR task nxt
 Output 3 is l1.c
   if (F="END_OF_FILE") break
   getlab l1.c lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab l1.c lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "5.099999904633e+00"
   if (EXP=EX(J))
       let G="list"//"1"//".dat"
       addtofile list1.dat "l1.c"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l1.c"
Beginning VICAR task addtofil
end-if
END-PROC
   else
   end-if
end-loop
   nxt n.list F I1 I2 I3
Beginning VICAR task nxt
 Output 4 is l6.a
   if (F="END_OF_FILE") break
   getlab l6.a lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab l6.a lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "1.000000000000e+02"
   if (EXP=EX(J))
   else
       let J=J+1
       let EX(J)=EXP
       let LMS(J) = LUMS
       let G="list"//"2"//".dat"
       createfile list2.dat
refgbl  $syschar
write "CREATEFILE version 1-3-97"
CREATEFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  USH cp /dev/null  list2.dat
end-if
END-PROC
       addtofile list2.dat "NEXT FILE=0001"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="NEXT FILE=0001"
Beginning VICAR task addtofil
end-if
END-PROC
       addtofile list2.dat "l6.a"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l6.a"
Beginning VICAR task addtofil
end-if
END-PROC
   end-if
end-loop
   nxt n.list F I1 I2 I3
Beginning VICAR task nxt
 Output 5 is l6.b
   if (F="END_OF_FILE") break
   getlab l6.b lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab l6.b lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "1.000000000000e+02"
   if (EXP=EX(J))
       let G="list"//"2"//".dat"
       addtofile list2.dat "l6.b"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l6.b"
Beginning VICAR task addtofil
end-if
END-PROC
   else
   end-if
end-loop
   nxt n.list F I1 I2 I3
Beginning VICAR task nxt
 Output 6 is l6.c
   if (F="END_OF_FILE") break
   getlab l6.c lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab l6.c lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "1.000000000000e+02"
   if (EXP=EX(J))
       let G="list"//"2"//".dat"
       addtofile list2.dat "l6.c"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l6.c"
Beginning VICAR task addtofil
end-if
END-PROC
   else
   end-if
end-loop
   nxt n.list F I1 I2 I3
Beginning VICAR task nxt
 Output 7 is l7.a
   if (F="END_OF_FILE") break
   getlab l7.a lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab l7.a lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "5.000000000000e+01"
   if (EXP=EX(J))
   else
       let J=J+1
       let EX(J)=EXP
       let LMS(J) = LUMS
       let G="list"//"3"//".dat"
       createfile list3.dat
refgbl  $syschar
write "CREATEFILE version 1-3-97"
CREATEFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  USH cp /dev/null  list3.dat
end-if
END-PROC
       addtofile list3.dat "NEXT FILE=0001"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="NEXT FILE=0001"
Beginning VICAR task addtofil
end-if
END-PROC
       addtofile list3.dat "l7.a"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l7.a"
Beginning VICAR task addtofil
end-if
END-PROC
   end-if
end-loop
   nxt n.list F I1 I2 I3
Beginning VICAR task nxt
 Output 8 is l7.b
   if (F="END_OF_FILE") break
   getlab l7.b lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab l7.b lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "5.000000000000e+01"
   if (EXP=EX(J))
       let G="list"//"3"//".dat"
       addtofile list3.dat "l7.b"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l7.b"
Beginning VICAR task addtofil
end-if
END-PROC
   else
   end-if
end-loop
   nxt n.list F I1 I2 I3
Beginning VICAR task nxt
 Output 9 is l7.c
   if (F="END_OF_FILE") break
   getlab l7.c lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab l7.c lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "5.000000000000e+01"
   if (EXP=EX(J))
       let G="list"//"3"//".dat"
       addtofile list3.dat "l7.c"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l7.c"
Beginning VICAR task addtofil
end-if
END-PROC
   else
   end-if
end-loop
   nxt n.list F I1 I2 I3
Beginning VICAR task nxt
 Output 10 is l8.a
   if (F="END_OF_FILE") break
   getlab l8.a lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab l8.a lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "2.500000000000e+01"
   if (EXP=EX(J))
   else
       let J=J+1
       let EX(J)=EXP
       let LMS(J) = LUMS
       let G="list"//"4"//".dat"
       createfile list4.dat
refgbl  $syschar
write "CREATEFILE version 1-3-97"
CREATEFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  USH cp /dev/null  list4.dat
end-if
END-PROC
       addtofile list4.dat "NEXT FILE=0001"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="NEXT FILE=0001"
Beginning VICAR task addtofil
end-if
END-PROC
       addtofile list4.dat "l8.a"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l8.a"
Beginning VICAR task addtofil
end-if
END-PROC
   end-if
end-loop
   nxt n.list F I1 I2 I3
Beginning VICAR task nxt
 Output 11 is l8.b
   if (F="END_OF_FILE") break
   getlab l8.b lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab l8.b lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "2.500000000000e+01"
   if (EXP=EX(J))
       let G="list"//"4"//".dat"
       addtofile list4.dat "l8.b"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l8.b"
Beginning VICAR task addtofil
end-if
END-PROC
   else
   end-if
end-loop
   nxt n.list F I1 I2 I3
Beginning VICAR task nxt
 Output 12 is l8.c
   if (F="END_OF_FILE") break
   getlab l8.c lab_item="EXPOSURE_DURATION" itm_name=EXP 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   getlab l8.c lab_item="RADIANCE" itm_name=LM 'PROPERTY+
            itm_type=REAL itm_task="CASSINI-ISS"
Beginning VICAR task getlab
   let LUMS = "2.500000000000e+01"
   if (EXP=EX(J))
       let G="list"//"4"//".dat"
       addtofile list4.dat "l8.c"
refgbl  $syschar
write "ADDTOFILE version 1-3-97"
ADDTOFILE version 1-3-97
if ($syschar(1) = "VAX_VMS")
else
  addtofil INPUT=@INPUT STRING1="l8.c"
Beginning VICAR task addtofil
end-if
END-PROC
   else
   end-if
end-loop
   nxt n.list F I1 I2 I3
Beginning VICAR task nxt
 NXT encountered end of file
   if (F="END_OF_FILE") break
 break
   if (EXP=EX(J))
   end-if
end-loop
let NLVL=J
let $BECHO="NO"
write " NUMBER OF EXPOSURE LEVELS = 4"
 NUMBER OF EXPOSURE LEVELS = 4
write " "
 
write " "
 
write " EXPOSURE LEVEL ... EXPOSURE TIME ... RADIANCES"
 EXPOSURE LEVEL ... EXPOSURE TIME ... RADIANCES
let I=1
loop
   let X=EX(I)
   let EXS = "0.000000000000e+00"
   let LUMS=LMS(I)
   write "       1              0.000000000000e+00             5.099999904633e+00"
       1              0.000000000000e+00             5.099999904633e+00
   if (I=NLVL) break
   let I=I+1
end-loop
   let X=EX(I)
   let EXS = "1.000000000000e+01"
   let LUMS=LMS(I)
   write "       2              1.000000000000e+01             1.000000000000e+02"
       2              1.000000000000e+01             1.000000000000e+02
   if (I=NLVL) break
   let I=I+1
end-loop
   let X=EX(I)
   let EXS = "2.000000000000e+01"
   let LUMS=LMS(I)
   write "       3              2.000000000000e+01             5.000000000000e+01"
       3              2.000000000000e+01             5.000000000000e+01
   if (I=NLVL) break
   let I=I+1
end-loop
   let X=EX(I)
   let EXS = "4.000000000000e+01"
   let LUMS=LMS(I)
   write "       4              4.000000000000e+01             2.500000000000e+01"
       4              4.000000000000e+01             2.500000000000e+01
   if (I=NLVL) break
 break
end-loop
write " "
 
let $BECHO="YES"
let I=1
loop
   let X=EX(I)
   let EXS = "0.000000000000e+00"
   let G="list"//"1"//".dat"
   let $BECHO="NO"
   write "FRAME LIST FOR LEVEL 1    EXPOSURE TIME 0.000000000000e+00"
FRAME LIST FOR LEVEL 1    EXPOSURE TIME 0.000000000000e+00
ush cat list1.dat
   write " "
 
   let $BECHO="YES"
   momgen LIST="list"1".dat" out=test.ltf
Beginning VICAR task momgen
MOMGEN Version 19-MAR-1997

EXPOSURE TIME=    0.000E+00
INPUT FRAMES=             3
NUMBER OF AREAS=        100
   if (I=NLVL) break
   let I=I+1
end-loop
   let X=EX(I)
   let EXS = "1.000000000000e+01"
   let G="list"//"2"//".dat"
   let $BECHO="NO"
   write "FRAME LIST FOR LEVEL 2    EXPOSURE TIME 1.000000000000e+01"
FRAME LIST FOR LEVEL 2    EXPOSURE TIME 1.000000000000e+01
ush cat list2.dat
   write " "
 
   let $BECHO="YES"
   momgen LIST="list"2".dat" out=test.ltf
Beginning VICAR task momgen
MOMGEN Version 19-MAR-1997

EXPOSURE TIME=    10.000000
INPUT FRAMES=             3
NUMBER OF AREAS=        100
   if (I=NLVL) break
   let I=I+1
end-loop
   let X=EX(I)
   let EXS = "2.000000000000e+01"
   let G="list"//"3"//".dat"
   let $BECHO="NO"
   write "FRAME LIST FOR LEVEL 3    EXPOSURE TIME 2.000000000000e+01"
FRAME LIST FOR LEVEL 3    EXPOSURE TIME 2.000000000000e+01
ush cat list3.dat
   write " "
 
   let $BECHO="YES"
   momgen LIST="list"3".dat" out=test.ltf
Beginning VICAR task momgen
MOMGEN Version 19-MAR-1997

EXPOSURE TIME=    20.000000
INPUT FRAMES=             3
NUMBER OF AREAS=        100
   if (I=NLVL) break
   let I=I+1
end-loop
   let X=EX(I)
   let EXS = "4.000000000000e+01"
   let G="list"//"4"//".dat"
   let $BECHO="NO"
   write "FRAME LIST FOR LEVEL 4    EXPOSURE TIME 4.000000000000e+01"
FRAME LIST FOR LEVEL 4    EXPOSURE TIME 4.000000000000e+01
ush cat list4.dat
   write " "
 
   let $BECHO="YES"
   momgen LIST="list"4".dat" out=test.ltf
Beginning VICAR task momgen
MOMGEN Version 19-MAR-1997

EXPOSURE TIME=    40.000000
INPUT FRAMES=             3
NUMBER OF AREAS=        100
   if (I=NLVL) break
 break
end-loop
if ($count(LTFILE) = 1)
      if (EX(I)=0.0) let LUMS="0.0"
      if (I=NLVL) break
end-if
end-proc
ccdrecip test.ltf 'SAMP  light=(0,100,50,25) 'RADIANCE  +
 arraysiz=512  offset=so.file  areatbl=area.tbl  +
 offtbl=off.tbl  avofftbl=meanoff.tbl reject=0  +
 plot=test3
Beginning VICAR task ccdrecip
CCDRECIP VERSION 06-Jul-2013
----TASK:F2      ----USER:lwk         Tue Sep 24 13:48:29 2013
----TASK:LTGEN   ----USER:lwk         Tue Sep 24 13:50:16 2013

ENERGY UNIT = PICOAMP-MILLISECONDS

AREA   SL   SS   NL   NS  A0 (DN/ENERGY UNIT)  TOS (MILLISECONDS)
   1   15   15   20   20          1.00050              1.04748
   2   15   66   20   20          1.00035              1.14617
   3   15  117   20   20          1.00023              1.24501
   4   15  168   20   20          1.00020              1.34659
   5   15  219   20   20          1.00005              1.44536
   6   15  270   20   20          0.99995              1.54465
   7   15  321   20   20          0.99982              1.64414
   8   15  372   20   20          0.99975              1.74501
   9   15  423   20   20          0.99965              1.84407
  10   15  474   20   20          0.99950              1.94297
  11   66   15   20   20          1.00050              1.04748
  12   66   66   20   20          1.00035              1.14617
  13   66  117   20   20          1.00023              1.24501
  14   66  168   20   20          1.00020              1.34659
  15   66  219   20   20          1.00005              1.44536
  16   66  270   20   20          0.99995              1.54465
  17   66  321   20   20          0.99982              1.64414
  18   66  372   20   20          0.99975              1.74501
  19   66  423   20   20          0.99965              1.84407
  20   66  474   20   20          0.99950              1.94297
  21  117   15   20   20          1.00050              1.04748
  22  117   66   20   20          1.00035              1.14617
  23  117  117   20   20          1.00023              1.24501
  24  117  168   20   20          1.00020              1.34659
  25  117  219   20   20          1.00005              1.44536
  26  117  270   20   20          0.99995              1.54465
  27  117  321   20   20          0.99982              1.64414
  28  117  372   20   20          0.99975              1.74501
  29  117  423   20   20          0.99965              1.84407
  30  117  474   20   20          0.99950              1.94297
  31  168   15   20   20          1.00050              1.04748
  32  168   66   20   20          1.00035              1.14617
  33  168  117   20   20          1.00023              1.24501
  34  168  168   20   20          1.00020              1.34659
  35  168  219   20   20          1.00005              1.44536
  36  168  270   20   20          0.99995              1.54465
  37  168  321   20   20          0.99982              1.64414
  38  168  372   20   20          0.99975              1.74501
  39  168  423   20   20          0.99965              1.84407
  40  168  474   20   20          0.99950              1.94297
  41  219   15   20   20          1.00050              1.04748
  42  219   66   20   20          1.00035              1.14617
  43  219  117   20   20          1.00023              1.24501
  44  219  168   20   20          1.00020              1.34659
  45  219  219   20   20          1.00005              1.44536
  46  219  270   20   20          0.99995              1.54465
  47  219  321   20   20          0.99982              1.64414
  48  219  372   20   20          0.99975              1.74501
  49  219  423   20   20          0.99965              1.84407
  50  219  474   20   20          0.99950              1.94297
  51  270   15   20   20          1.00050              1.04748
  52  270   66   20   20          1.00035              1.14617
  53  270  117   20   20          1.00023              1.24501
  54  270  168   20   20          1.00020              1.34659
  55  270  219   20   20          1.00005              1.44536
  56  270  270   20   20          0.99995              1.54465
  57  270  321   20   20          0.99982              1.64414
  58  270  372   20   20          0.99975              1.74501
  59  270  423   20   20          0.99965              1.84407
  60  270  474   20   20          0.99950              1.94297
  61  321   15   20   20          1.00050              1.04748
  62  321   66   20   20          1.00035              1.14617
  63  321  117   20   20          1.00023              1.24501
  64  321  168   20   20          1.00020              1.34659
  65  321  219   20   20          1.00005              1.44536
  66  321  270   20   20          0.99995              1.54465
  67  321  321   20   20          0.99982              1.64414
  68  321  372   20   20          0.99975              1.74501
  69  321  423   20   20          0.99965              1.84407
  70  321  474   20   20          0.99950              1.94297
  71  372   15   20   20          1.00050              1.04748
  72  372   66   20   20          1.00035              1.14617
  73  372  117   20   20          1.00023              1.24501
  74  372  168   20   20          1.00020              1.34659
  75  372  219   20   20          1.00005              1.44536
  76  372  270   20   20          0.99995              1.54465
  77  372  321   20   20          0.99982              1.64414
  78  372  372   20   20          0.99975              1.74501
  79  372  423   20   20          0.99965              1.84407
  80  372  474   20   20          0.99950              1.94297
  81  423   15   20   20          1.00050              1.04748
  82  423   66   20   20          1.00035              1.14617
  83  423  117   20   20          1.00023              1.24501
  84  423  168   20   20          1.00020              1.34659
  85  423  219   20   20          1.00005              1.44536
  86  423  270   20   20          0.99995              1.54465
  87  423  321   20   20          0.99982              1.64414
  88  423  372   20   20          0.99975              1.74501
  89  423  423   20   20          0.99965              1.84407
  90  423  474   20   20          0.99950              1.94297
  91  474   15   20   20          1.00050              1.04748
  92  474   66   20   20          1.00035              1.14617
  93  474  117   20   20          1.00023              1.24501
  94  474  168   20   20          1.00020              1.34659
  95  474  219   20   20          1.00005              1.44536
  96  474  270   20   20          0.99995              1.54465
  97  474  321   20   20          0.99982              1.64414
  98  474  372   20   20          0.99975              1.74501
  99  474  423   20   20          0.99965              1.84407
 100  474  474   20   20          0.99950              1.94297

Global value for A0...
Raw mean and sigma are...
N= 100 MEAN=     1.00000 SIGMA=     0.00019
After throwing out samples differing by 2 sigma
N=  80 MEAN=     1.00000 SIGMA=     0.00012

Global shutter offset...
Raw mean and sigma are...
N= 100 MEAN=     1.49514 SIGMA=     0.28613
After throwing out samples differing by 2 sigma
N= 100 MEAN=     1.49514 SIGMA=     0.28613

AREA   1 (SL,SS,NL,NS)=(  15,  15,  20,  20)  ***BAD SENSITIVITY******
AREA  10 (SL,SS,NL,NS)=(  15, 474,  20,  20)  ***BAD SENSITIVITY******
AREA  11 (SL,SS,NL,NS)=(  66,  15,  20,  20)  ***BAD SENSITIVITY******
AREA  20 (SL,SS,NL,NS)=(  66, 474,  20,  20)  ***BAD SENSITIVITY******
AREA  21 (SL,SS,NL,NS)=( 117,  15,  20,  20)  ***BAD SENSITIVITY******
AREA  30 (SL,SS,NL,NS)=( 117, 474,  20,  20)  ***BAD SENSITIVITY******
AREA  31 (SL,SS,NL,NS)=( 168,  15,  20,  20)  ***BAD SENSITIVITY******
AREA  40 (SL,SS,NL,NS)=( 168, 474,  20,  20)  ***BAD SENSITIVITY******
AREA  41 (SL,SS,NL,NS)=( 219,  15,  20,  20)  ***BAD SENSITIVITY******
AREA  50 (SL,SS,NL,NS)=( 219, 474,  20,  20)  ***BAD SENSITIVITY******
AREA  51 (SL,SS,NL,NS)=( 270,  15,  20,  20)  ***BAD SENSITIVITY******
AREA  60 (SL,SS,NL,NS)=( 270, 474,  20,  20)  ***BAD SENSITIVITY******
AREA  61 (SL,SS,NL,NS)=( 321,  15,  20,  20)  ***BAD SENSITIVITY******
AREA  70 (SL,SS,NL,NS)=( 321, 474,  20,  20)  ***BAD SENSITIVITY******
AREA  71 (SL,SS,NL,NS)=( 372,  15,  20,  20)  ***BAD SENSITIVITY******
AREA  80 (SL,SS,NL,NS)=( 372, 474,  20,  20)  ***BAD SENSITIVITY******
AREA  81 (SL,SS,NL,NS)=( 423,  15,  20,  20)  ***BAD SENSITIVITY******
AREA  90 (SL,SS,NL,NS)=( 423, 474,  20,  20)  ***BAD SENSITIVITY******
AREA  91 (SL,SS,NL,NS)=( 474,  15,  20,  20)  ***BAD SENSITIVITY******
AREA 100 (SL,SS,NL,NS)=( 474, 474,  20,  20)  ***BAD SENSITIVITY******


  COMMANDED    ILLUMINATION    (DN-DC)      (DN-DC)/L     RESIDUAL      (DN-DC)/(L*T)   RESIDUAL  (DN-DC)/[L*(T-TOS)]  RESIDUAL
EXPOSURE T(MS)   L(RAD)                    (DN/ENERGY    (DN/ENERGY      (DN/ENERGY    (DN/ENERGY     (DN/ENERGY      (DN/ENERGY
                                              UNIT)         UNIT)           UNIT)         UNIT)          UNIT)           UNIT)
   10.0000      100.0000       850.495        8.5050        0.0000          0.8505       -0.1495         1.0000          0.0000
   20.0000       50.0000       925.245       18.5049        0.0000          0.9252       -0.0748         1.0000          0.0000
   40.0000       25.0000       962.625       38.5050        0.0001          0.9626       -0.0374         1.0000          0.0000
                                                      RMS=  0.0001                  RMS=  0.1713                   RMS=  0.0000

TOS= 1.4951   SD= 0.0001    AO= 1.0000    SD= 0.0000
NO REJECTION CRITERIA APPLIED
NUMBER OF GOOD AREAS= 100 OUT OF 100 AREAS SAMPLED

SAMP NUMBER=  25 SHUTTER OFFSET=   1.047477 MS
SAMP NUMBER=  76 SHUTTER OFFSET=   1.146170 MS
SAMP NUMBER= 127 SHUTTER OFFSET=   1.245006 MS
SAMP NUMBER= 178 SHUTTER OFFSET=   1.346588 MS
SAMP NUMBER= 229 SHUTTER OFFSET=   1.445356 MS
SAMP NUMBER= 280 SHUTTER OFFSET=   1.544648 MS
SAMP NUMBER= 331 SHUTTER OFFSET=   1.644145 MS
SAMP NUMBER= 382 SHUTTER OFFSET=   1.745007 MS
SAMP NUMBER= 433 SHUTTER OFFSET=   1.844074 MS
SAMP NUMBER= 484 SHUTTER OFFSET=   1.942971 MS
Saving shutter offsets...
CCDRECIP task completed
ush cat area.tbl
ush cat off.tbl
ush cat meanoff.tbl
ccdrecip test.ltf 'SAMP  light=(0,100,50,25) 'RADIANCE  +
 arraysiz=512  offset=so.file  areatbl=area.tbl  +
 offtbl=off.tbl  avofftbl=meanoff.tbl reject=0  +
 plot=test4 plotfmt=eps
Beginning VICAR task ccdrecip
CCDRECIP VERSION 06-Jul-2013
----TASK:F2      ----USER:lwk         Tue Sep 24 13:48:29 2013
----TASK:LTGEN   ----USER:lwk         Tue Sep 24 13:50:16 2013

ENERGY UNIT = PICOAMP-MILLISECONDS

AREA   SL   SS   NL   NS  A0 (DN/ENERGY UNIT)  TOS (MILLISECONDS)
   1   15   15   20   20          1.00050              1.04748
   2   15   66   20   20          1.00035              1.14617
   3   15  117   20   20          1.00023              1.24501
   4   15  168   20   20          1.00020              1.34659
   5   15  219   20   20          1.00005              1.44536
   6   15  270   20   20          0.99995              1.54465
   7   15  321   20   20          0.99982              1.64414
   8   15  372   20   20          0.99975              1.74501
   9   15  423   20   20          0.99965              1.84407
  10   15  474   20   20          0.99950              1.94297
  11   66   15   20   20          1.00050              1.04748
  12   66   66   20   20          1.00035              1.14617
  13   66  117   20   20          1.00023              1.24501
  14   66  168   20   20          1.00020              1.34659
  15   66  219   20   20          1.00005              1.44536
  16   66  270   20   20          0.99995              1.54465
  17   66  321   20   20          0.99982              1.64414
  18   66  372   20   20          0.99975              1.74501
  19   66  423   20   20          0.99965              1.84407
  20   66  474   20   20          0.99950              1.94297
  21  117   15   20   20          1.00050              1.04748
  22  117   66   20   20          1.00035              1.14617
  23  117  117   20   20          1.00023              1.24501
  24  117  168   20   20          1.00020              1.34659
  25  117  219   20   20          1.00005              1.44536
  26  117  270   20   20          0.99995              1.54465
  27  117  321   20   20          0.99982              1.64414
  28  117  372   20   20          0.99975              1.74501
  29  117  423   20   20          0.99965              1.84407
  30  117  474   20   20          0.99950              1.94297
  31  168   15   20   20          1.00050              1.04748
  32  168   66   20   20          1.00035              1.14617
  33  168  117   20   20          1.00023              1.24501
  34  168  168   20   20          1.00020              1.34659
  35  168  219   20   20          1.00005              1.44536
  36  168  270   20   20          0.99995              1.54465
  37  168  321   20   20          0.99982              1.64414
  38  168  372   20   20          0.99975              1.74501
  39  168  423   20   20          0.99965              1.84407
  40  168  474   20   20          0.99950              1.94297
  41  219   15   20   20          1.00050              1.04748
  42  219   66   20   20          1.00035              1.14617
  43  219  117   20   20          1.00023              1.24501
  44  219  168   20   20          1.00020              1.34659
  45  219  219   20   20          1.00005              1.44536
  46  219  270   20   20          0.99995              1.54465
  47  219  321   20   20          0.99982              1.64414
  48  219  372   20   20          0.99975              1.74501
  49  219  423   20   20          0.99965              1.84407
  50  219  474   20   20          0.99950              1.94297
  51  270   15   20   20          1.00050              1.04748
  52  270   66   20   20          1.00035              1.14617
  53  270  117   20   20          1.00023              1.24501
  54  270  168   20   20          1.00020              1.34659
  55  270  219   20   20          1.00005              1.44536
  56  270  270   20   20          0.99995              1.54465
  57  270  321   20   20          0.99982              1.64414
  58  270  372   20   20          0.99975              1.74501
  59  270  423   20   20          0.99965              1.84407
  60  270  474   20   20          0.99950              1.94297
  61  321   15   20   20          1.00050              1.04748
  62  321   66   20   20          1.00035              1.14617
  63  321  117   20   20          1.00023              1.24501
  64  321  168   20   20          1.00020              1.34659
  65  321  219   20   20          1.00005              1.44536
  66  321  270   20   20          0.99995              1.54465
  67  321  321   20   20          0.99982              1.64414
  68  321  372   20   20          0.99975              1.74501
  69  321  423   20   20          0.99965              1.84407
  70  321  474   20   20          0.99950              1.94297
  71  372   15   20   20          1.00050              1.04748
  72  372   66   20   20          1.00035              1.14617
  73  372  117   20   20          1.00023              1.24501
  74  372  168   20   20          1.00020              1.34659
  75  372  219   20   20          1.00005              1.44536
  76  372  270   20   20          0.99995              1.54465
  77  372  321   20   20          0.99982              1.64414
  78  372  372   20   20          0.99975              1.74501
  79  372  423   20   20          0.99965              1.84407
  80  372  474   20   20          0.99950              1.94297
  81  423   15   20   20          1.00050              1.04748
  82  423   66   20   20          1.00035              1.14617
  83  423  117   20   20          1.00023              1.24501
  84  423  168   20   20          1.00020              1.34659
  85  423  219   20   20          1.00005              1.44536
  86  423  270   20   20          0.99995              1.54465
  87  423  321   20   20          0.99982              1.64414
  88  423  372   20   20          0.99975              1.74501
  89  423  423   20   20          0.99965              1.84407
  90  423  474   20   20          0.99950              1.94297
  91  474   15   20   20          1.00050              1.04748
  92  474   66   20   20          1.00035              1.14617
  93  474  117   20   20          1.00023              1.24501
  94  474  168   20   20          1.00020              1.34659
  95  474  219   20   20          1.00005              1.44536
  96  474  270   20   20          0.99995              1.54465
  97  474  321   20   20          0.99982              1.64414
  98  474  372   20   20          0.99975              1.74501
  99  474  423   20   20          0.99965              1.84407
 100  474  474   20   20          0.99950              1.94297

Global value for A0...
Raw mean and sigma are...
N= 100 MEAN=     1.00000 SIGMA=     0.00019
After throwing out samples differing by 2 sigma
N=  80 MEAN=     1.00000 SIGMA=     0.00012

Global shutter offset...
Raw mean and sigma are...
N= 100 MEAN=     1.49514 SIGMA=     0.28613
After throwing out samples differing by 2 sigma
N= 100 MEAN=     1.49514 SIGMA=     0.28613

AREA   1 (SL,SS,NL,NS)=(  15,  15,  20,  20)  ***BAD SENSITIVITY******
AREA  10 (SL,SS,NL,NS)=(  15, 474,  20,  20)  ***BAD SENSITIVITY******
AREA  11 (SL,SS,NL,NS)=(  66,  15,  20,  20)  ***BAD SENSITIVITY******
AREA  20 (SL,SS,NL,NS)=(  66, 474,  20,  20)  ***BAD SENSITIVITY******
AREA  21 (SL,SS,NL,NS)=( 117,  15,  20,  20)  ***BAD SENSITIVITY******
AREA  30 (SL,SS,NL,NS)=( 117, 474,  20,  20)  ***BAD SENSITIVITY******
AREA  31 (SL,SS,NL,NS)=( 168,  15,  20,  20)  ***BAD SENSITIVITY******
AREA  40 (SL,SS,NL,NS)=( 168, 474,  20,  20)  ***BAD SENSITIVITY******
AREA  41 (SL,SS,NL,NS)=( 219,  15,  20,  20)  ***BAD SENSITIVITY******
AREA  50 (SL,SS,NL,NS)=( 219, 474,  20,  20)  ***BAD SENSITIVITY******
AREA  51 (SL,SS,NL,NS)=( 270,  15,  20,  20)  ***BAD SENSITIVITY******
AREA  60 (SL,SS,NL,NS)=( 270, 474,  20,  20)  ***BAD SENSITIVITY******
AREA  61 (SL,SS,NL,NS)=( 321,  15,  20,  20)  ***BAD SENSITIVITY******
AREA  70 (SL,SS,NL,NS)=( 321, 474,  20,  20)  ***BAD SENSITIVITY******
AREA  71 (SL,SS,NL,NS)=( 372,  15,  20,  20)  ***BAD SENSITIVITY******
AREA  80 (SL,SS,NL,NS)=( 372, 474,  20,  20)  ***BAD SENSITIVITY******
AREA  81 (SL,SS,NL,NS)=( 423,  15,  20,  20)  ***BAD SENSITIVITY******
AREA  90 (SL,SS,NL,NS)=( 423, 474,  20,  20)  ***BAD SENSITIVITY******
AREA  91 (SL,SS,NL,NS)=( 474,  15,  20,  20)  ***BAD SENSITIVITY******
AREA 100 (SL,SS,NL,NS)=( 474, 474,  20,  20)  ***BAD SENSITIVITY******


  COMMANDED    ILLUMINATION    (DN-DC)      (DN-DC)/L     RESIDUAL      (DN-DC)/(L*T)   RESIDUAL  (DN-DC)/[L*(T-TOS)]  RESIDUAL
EXPOSURE T(MS)   L(RAD)                    (DN/ENERGY    (DN/ENERGY      (DN/ENERGY    (DN/ENERGY     (DN/ENERGY      (DN/ENERGY
                                              UNIT)         UNIT)           UNIT)         UNIT)          UNIT)           UNIT)
   10.0000      100.0000       850.495        8.5050        0.0000          0.8505       -0.1495         1.0000          0.0000
   20.0000       50.0000       925.245       18.5049        0.0000          0.9252       -0.0748         1.0000          0.0000
   40.0000       25.0000       962.625       38.5050        0.0001          0.9626       -0.0374         1.0000          0.0000
                                                      RMS=  0.0001                  RMS=  0.1713                   RMS=  0.0000

TOS= 1.4951   SD= 0.0001    AO= 1.0000    SD= 0.0000
NO REJECTION CRITERIA APPLIED
NUMBER OF GOOD AREAS= 100 OUT OF 100 AREAS SAMPLED

SAMP NUMBER=  25 SHUTTER OFFSET=   1.047477 MS
SAMP NUMBER=  76 SHUTTER OFFSET=   1.146170 MS
SAMP NUMBER= 127 SHUTTER OFFSET=   1.245006 MS
SAMP NUMBER= 178 SHUTTER OFFSET=   1.346588 MS
SAMP NUMBER= 229 SHUTTER OFFSET=   1.445356 MS
SAMP NUMBER= 280 SHUTTER OFFSET=   1.544648 MS
SAMP NUMBER= 331 SHUTTER OFFSET=   1.644145 MS
SAMP NUMBER= 382 SHUTTER OFFSET=   1.745007 MS
SAMP NUMBER= 433 SHUTTER OFFSET=   1.844074 MS
SAMP NUMBER= 484 SHUTTER OFFSET=   1.942971 MS
Saving shutter offsets...
CCDRECIP task completed
ush gnuplot test4.eps.gpi
goto rm
if ($syschar(1) = "UNIX")
end-if
if ($syschar(1) = "UNIX")
end-if
  ush rm -f l.list
  ush rm -f m.list
  ush rm -f n.list
  ush rm -f cas
  ush rm -f test?.eps
  ush rm -f test*.gpi
  ush rm -f test*.asc
  ush rm -f list?.dat
  ush rm -f ?.dat
  ush rm -f xa.dat
  ush rm -f l?.?
  ush rm -f m?.?
  ush rm -f so.file
  ush rm -f *off*.tbl
  ush rm -f area*.tbl
  ush rm -f test*.ltf
end-proc
exit
slogoff
if ($RUNTYPE = "INTERACTIVE")
  if ($syschar(1) = "VAX_VMS")
  end-if
else
  if ($syschar(1) = "VAX_VMS")
  end-if
end-if
ulogoff
END-PROC
END-PROC
