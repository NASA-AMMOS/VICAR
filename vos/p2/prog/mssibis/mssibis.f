	INCLUDE 'VICMAIN_FOR'
	SUBROUTINE MAIN44
C
C	MSSIBIS - TRANSFERS DATA BETWEEN MSS FORMAT IMAGES AND 
C					IBIS TABULAR FILES
C
C       REVISION:  D            CRI             MARCH   1995
C               MSTP S/W CONVERSION (VICAR PORTING)
C
C	REVISION:  C		NILES RITTER    JANUARY 1990
C		FORMAT STRING PARAMETER CHANGED TO KEYWORD
C
C	REVISION:  B		NILES RITTER    OCTOBER 1988
C
C	ORIGINAL PROGRAMMER:   FRANK EVANS	OCTOBER 1986
C
C	COGNIZANT PROGRAMMER:  NDR
C
C
	IMPLICIT  NONE
	INTEGER	  MAXSAMPS
	PARAMETER (MAXSAMPS=32768)
	INTEGER	  INUNIT, IN2UNIT, OUTUNIT, IBIS, STATUS, COUNT, DEF
	INTEGER	  SL,SS,NL,NS, NLI,NSI, NSO, INC, RECORD
	INTEGER	  NSB, MSS, NBAND, NDIM
	INTEGER	  LINE,SAMP, N, I
	INTEGER	  CLEN, NCOL, DCOLS, ROW
	INTEGER   BANDS(40), COLS(40), BANDPTR(40)
	BYTE	  MASKBUF(MAXSAMPS)
	REAL	  BUFFER(MAXSAMPS)
	REAL	  ROWBUF(40), VLO, VHI
	LOGICAL	  XVPTST, CNVT, MASK, UPDATE
	CHARACTER*16  FORMAT
	CHARACTER*80  OUTNAME,INNAME(2)

	EXTERNAL RANGE

        CALL IFMESSAGE('MSSIBIS version 6-MAR-95')
	IF (XVPTST('TOIBIS')) THEN

C  ***************   MSS TO IBIS SECTION *******************


C--			GET THE PARAMETERS
	CALL XVP ('MSS', MSS, COUNT)
	CALL XVPARM ('BANDS', BANDS, NDIM, DEF, 40)
	IF (DEF .EQ. 1) THEN
	    NDIM = MSS
	    DO I = 1, NDIM
		BANDS(I) = I
	    ENDDO
	ENDIF

	CALL XVPARM ('COLS', COLS, DCOLS, DEF, 40)
	IF (DCOLS .LT. NDIM) THEN
	    DCOLS = NDIM
	    DO I = 1, DCOLS
		COLS(I) = I
	    ENDDO
	ENDIF
	CALL XVPARM ('NCOL', NCOL, COUNT, DEF, 1)
	IF (DEF .EQ. 1) THEN
	    NCOL = DCOLS
	    DO I = 1, DCOLS
		NCOL = MAX(COLS(I), NCOL)
	    ENDDO
	ENDIF
	NCOL = MAX( NCOL, NDIM)

	CALL XVP ('INC', INC, COUNT)


C--			OPEN THE MSS FORMAT IMAGE FILE
	CALL XVUNIT (INUNIT, 'INP', 1, STATUS,' ')
	CALL XVOPEN (INUNIT, STATUS, 'IO_ACT','SA','OPEN_ACT','SA',
     +			'U_FORMAT','REAL',' ')
	CALL XVSIZE (SL,SS, NL,NS, NLI,NSI)
	IF (NSI .GT. MAXSAMPS) CALL MABEND ('TOO MANY SAMPLES PER LINE')
	NSB = NSI/MSS
	NS = MIN (NS, NSB-SS+1)
	NL = MIN (NL, NLI-SL+1)

	CALL XVP ('INP', INNAME, COUNT)
	MASK =  (COUNT .EQ. 2)

	IF (MASK) THEN
	    CALL XVUNIT (IN2UNIT, 'INP', 2, STATUS,' ')
	    CALL XVOPEN (IN2UNIT, STATUS, 'IO_ACT','SA','OPEN_ACT','SA',
     +			      'U_FORMAT','BYTE',' ')
	    CLEN = 0
	    DO LINE = 1, NL, INC
		CALL XVREAD (IN2UNIT, MASKBUF, STATUS, 
     +			'SAMP',SS, 'LINE',LINE+SL-1,' ')
		DO SAMP = 1, NS, INC
		    IF (MASKBUF(SAMP) .NE. 0)  CLEN = CLEN + 1
		ENDDO
	    ENDDO
	ELSE

	    CLEN = INT((NS-1)/INC+1) * INT((NL-1)/INC+1)
	ENDIF

C			OPEN THE IBIS TABULAR FILE
        CALL XVUNIT(OUTUNIT, 'OUT', 1, STATUS, ' ')

	CALL IBIS_FILE_OPEN(OUTUNIT,IBIS,'WRITE',NCOL,CLEN,
     *                      ' ',' ',STATUS)
        IF (STATUS.NE.1) CALL IBIS_SIGNAL_U(OUTUNIT,STATUS,1)


        CALL IBIS_RECORD_OPEN(IBIS,RECORD,' ',
     *                        COLS,DCOLS,'REAL',STATUS)
        IF (STATUS.NE.1) CALL IBIS_SIGNAL(IBIS,STATUS,1)

	DO N = 1, NDIM
	    BANDPTR(N) = (BANDS(N)-1)*NSB
	ENDDO

C			TRANSFER THE DATA TO THE IBIS FILE
	ROW = 1
	DO LINE = 1, NL, INC
	    CALL XVREAD (INUNIT, BUFFER, STATUS, 
     +			'SAMP',SS, 'LINE',LINE+SL-1,' ')
	    IF (MASK) THEN
		CALL XVREAD (IN2UNIT, MASKBUF, STATUS, 
     +			'SAMP',SS, 'LINE',LINE+SL-1,' ')
		DO SAMP = 1, NS, INC
		    IF (MASKBUF(SAMP) .NE. 0) THEN
			DO N = 1, NDIM
			    ROWBUF(N) = BUFFER(SAMP+BANDPTR(N))
			ENDDO
	                CALL IBIS_RECORD_WRITE(RECORD,ROWBUF,ROW,STATUS)
                        IF (STATUS.NE.1) CALL IBIS_SIGNAL(IBIS,STATUS,1)
			ROW = ROW + 1
		    ENDIF
		ENDDO
	    ELSE
		DO SAMP = 1, NS, INC
		    DO N = 1, NDIM
			ROWBUF(N) = BUFFER(SAMP+BANDPTR(N))
		    ENDDO
                    CALL IBIS_RECORD_WRITE(RECORD,ROWBUF,ROW,STATUS)
                    IF (STATUS.NE.1) CALL IBIS_SIGNAL(IBIS,STATUS,1)
		    ROW = ROW + 1
		ENDDO
	    ENDIF
	ENDDO

        CALL IBIS_RECORD_CLOSE(RECORD,STATUS)
        IF (STATUS.NE.1) CALL IBIS_SIGNAL(IBIS,STATUS,1)
	CALL XVCLOSE (INUNIT,STATUS,' ')
	IF (MASK)  CALL XVCLOSE (IN2UNIT,STATUS,' ')
	CALL IBIS_FILE_CLOSE (IBIS,' ',STATUS)
        IF (STATUS.NE.1) CALL IBIS_SIGNAL_U(OUTUNIT,STATUS,1)


	ELSE
C  ***************   IBIS TO MSS SECTION *******************




C--			OPEN THE IBIS TABULAR FILE
        CALL XVUNIT(INUNIT, 'INP', 1, STATUS, ' ')
	CALL IBIS_FILE_OPEN(INUNIT,IBIS,'READ',0,0,' ',' ',STATUS)
        IF (STATUS.NE.1) CALL IBIS_SIGNAL_U(INUNIT,STATUS,1)
        CALL IBIS_FILE_GET(IBIS,'NC',NCOL,1,1)
        CALL IBIS_FILE_GET(IBIS,'NR',CLEN,1,1)


C--			GET THE PARAMETERS
	CALL XVPARM ('COLS', COLS, DCOLS, DEF, 40)
	IF (DEF .EQ. 1) THEN
	    DCOLS = NCOL
	    DO I = 1, DCOLS
		COLS(I) = I
	    ENDDO
	ENDIF
	NDIM = DCOLS

	CALL XVPARM ('MSS', MSS, COUNT, DEF, 1)
	IF (DEF .EQ. 1)  MSS = NDIM
	MSS = MAX (MSS, NDIM)
	CALL XVPARM ('BANDS', BANDS, NBAND, DEF, 40)
	IF (NBAND .LT. NDIM) THEN
	    DO I = 1, NDIM
		BANDS(I) = I
	    ENDDO
	ELSE
	    DO I = 1, NDIM
		MSS = MAX(BANDS(I), MSS)
	    ENDDO
	ENDIF

	UPDATE = XVPTST('UPDATE')
	IF( UPDATE ) THEN
	 CALL XVPARM('OUT',OUTNAME,COUNT,DEF,1)
	 CALL XVUNIT(OUTUNIT,'   ',1,STATUS,'U_NAME',OUTNAME,' ')
	 CALL XVOPEN(OUTUNIT,STATUS,'OP','UPDATE','IO_ACT','SA',
     +     'OPEN_ACT','SA', 'U_FORMAT','REAL',' ')
	 CALL XVPARM ('NS', NS, COUNT, DEF, 1)
	 IF (DEF .EQ. 1)  CALL XVGET(OUTUNIT,STATUS,'NS',NS,' ') 
	 CALL XVPARM ('NL', NL, COUNT, DEF, 1)
	 IF (DEF .EQ. 1)  CALL XVGET(OUTUNIT,STATUS,'NL',NL,' ') 
	 CALL XVGET (OUTUNIT,STATUS,'FORMAT', FORMAT,' ')

	 NL = MIN (NL, INT(CLEN/NS))
	 NSB = NS
	 NSO = MSS*NS

	ELSE  !New Output file
	 CALL XVSIZE (SL,SS, NL,NS, NLI,NSI)
	 IF (NS .EQ. 0) THEN
	   CALL XVPARM ('NS', NS, COUNT, DEF, 1)
	   IF (DEF .EQ. 1)  NS = INT(SQRT(FLOAT(CLEN)))
	 ENDIF
	 IF (NL .EQ. 0) THEN
	   CALL XVPARM ('NL', NL, COUNT, DEF, 1)
	   IF (DEF .EQ. 1)  NL = INT(CLEN/NS)
	 ENDIF
	 CALL XVP ('FORMAT', FORMAT, COUNT)

	 NL = MIN (NL, INT(CLEN/NS))
	 NSB = NS
	 NSO = MSS*NS

C--			OPEN THE MSS FORMAT IMAGE FILE
	 CALL XVUNIT (OUTUNIT, 'OUT', 1, STATUS,' ')
	 CALL XVOPEN (OUTUNIT, STATUS, 'IO_ACT','SA','OPEN_ACT','SA',
     +			'U_FORMAT','REAL', 'OP','WRITE', 
     +			'U_NL',NL, 'U_NS',NSO, 'O_FORMAT',FORMAT,' ')

	ENDIF  

	IF (FORMAT(1:4) .EQ. 'BYTE') THEN
	    VLO = 0.0
	    VHI = 255.0
	ELSEIF (FORMAT(1:4) .EQ. 'HALF') THEN
	    VLO = -32768.0
	    VHI = 32767.0
	ELSEIF (FORMAT(1:4) .EQ. 'FULL') THEN
	    VLO = -2.14748E9
	    VHI = 2.14748E9
	ENDIF
	IF (FORMAT(1:4) .EQ. 'REAL') THEN
	    CNVT = .FALSE.
	ELSE
	    CNVT = .TRUE.
	ENDIF




C--			READ IN ALL OF THE DATA POINTS
	DO N = 1, NDIM
	    BANDPTR(N) = (BANDS(N)-1)*NSB
	ENDDO
        CALL IBIS_RECORD_OPEN(IBIS,RECORD,' ',
     &                        COLS,DCOLS,'REAL',STATUS)
        IF (STATUS.NE.1) CALL IBIS_SIGNAL_U(INUNIT,STATUS,1)

	ROW = 1
	DO LINE = 1, NL
	    IF (UPDATE) CALL XVREAD(OUTUNIT, BUFFER,STATUS,
     &                              'LINE',LINE,' ')
	    DO SAMP = 1, NS
	        CALL IBIS_RECORD_READ(RECORD, ROWBUF, ROW, STATUS)
                IF (STATUS.NE.1) CALL IBIS_SIGNAL_U(IBIS,STATUS,1)
		DO N = 1, NDIM
		    BUFFER(SAMP+BANDPTR(N)) = ROWBUF(N) 
		ENDDO
		ROW = ROW + 1
	    ENDDO
	    IF (CNVT)  CALL RANGE (BUFFER, NSO, VLO, VHI)
	    CALL XVWRIT (OUTUNIT, BUFFER, STATUS,' ')
	ENDDO

    	CALL IBIS_FILE_CLOSE (IBIS,' ',STATUS)
        IF (STATUS.NE.1) CALL IBIS_SIGNAL_U(INUNIT,STATUS,1)
	CALL XVCLOSE (OUTUNIT,STATUS,' ')


	ENDIF


	RETURN
	END




	SUBROUTINE RANGE (RBUF, NS, VLO, VHI)
	INTEGER NS, SAMP
	REAL	RBUF(1), VLO, VHI

	DO SAMP = 1, NS
	    V = RBUF(SAMP)
	    IF (V .LT. VLO) V = VLO
	    IF (V .GT. VHI) V = VHI
	    RBUF(SAMP) = V + 0.5
	ENDDO

	RETURN
	END
