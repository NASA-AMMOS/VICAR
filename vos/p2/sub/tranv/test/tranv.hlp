1 TRANV

Converts from line,sample to lat,long and the reverse for map projections

  FORTRAN Calling Sequence:  CALL TRANV(IND,ITYPE,M,XC,ZC,TH,TH1,TH2,LAM,F,CAS,
                                        LINE,SAMPLE,LAT,LONG,RP,RE,PSI)
  C Calling Sequence:        ztranv(&ind,itype,m,xc,zc,th,th1,th2,lam,f,cas,
                                    &line,&sample,&lat,&long,rp,re,psi);

  Arguments: 
	 IND   The returned flag value from the call.  
       ITYPE   Specifies the type of projection being converted.
	   M   Specifies the type of conversion being attempted
	  XC   Special sample point (pixels)
	  ZC   Special line point (pixels)
	  TH   Special latitude point (degrees)
	  TH1  Latitude of special parallel or
  		special oblique longitude (degrees)
	  TH2  Latitude of special parallel (degrees)
	  LAM  Special longitude west (degrees)
	  F    Scale (Km/pixel)
	  CAS  Visible pole flag (+1.D0:North, -1.D0:South)
	  LINE Line value of point (pixels)
	  SAMP Sample value of point (pixels)
	  LAT  Latitude (degrees)
	  LONG Longitude (degrees west)
	  RP   Polar radius (Km)
	  RE   Equatorial Radius (Km)
	  PSI  North angle

2 Arguments

  The only output arguments are IND, and depending on the mode (M), either
  LINE and SAMP, or LAT and LONG.  Accordingly for ztranv, the call should
  have a & for ind, line, samp, lat, and long as shown in the C calling 
  sequence, or they should be declared as pointers: int * for ind, float *
  for the other four.  For ztranv, the other arguments are passed by value.

  IND   I*4 The returned flag value from the call.  TRANV will return zero for
        a normal execution and a one for a point off the planet.
  ITYPE  I*4 Specifies the type of projection being converted.
	1 - Polar Orthopgraphic
	2 - Oblique Orthographic
	3 - Polar Stereographic
	4 - Oblique Stereographic
	5 - Lambert
	6 - Mercator
	9 - Normal Cylindrical
	10 - Simple Cylindrical
  	11 - Oblique Simple Cylindrical
  	12 - Sinusoidal Equal Area
  	13 - Oblique Sinusoidal
        14 - Mollweide
	15 - Transverse Mercator
  M     I*4 Specifies the type of conversion being attempted:
        1) Direct - latitude & longitude to line & sample
        2) Inverse - line & sample to latitude and longitude
  XC   R*8 Special sample point (pixels)
  ZC   R*8 Special line point (pixels)
  TH   R*8 Special latitude point (degrees)
  TH1  R*8 Latitude of special parallel or
  		 special oblique longitude (degrees)
  TH2  R*8 Latitude of special parallel (degrees)
  LAM  R*8 Special longitude west (degrees)
  F    R*8 Scale (Km/pixel)
  CAS  R*8 Visible pole flag (+1.D0:North, -1.D0:South)
  LINE R*4 Line value of point (pixels)
  SAMP R*4 Sample value of point (pixels)
  LAT  R*4 Latitude (degrees)
  LONG R*4 Longitude (degrees west)
  RP   R*8 Polar radius (Km)
  RE   R*8 Equatorial Radius (Km)
  PSI  R*8 North angle

Usage of these arguments for projection types 1-10 are described in the
documentation for program MAP2. 

Type 11 is an oblique simple cylindrical projection of a sphere of radius,
RE, with scale of F at the oblique equator.  The upper axis of the
projection is located at latitude, PHI, and longitude, LAM.  The center of
the projection is TH1 degrees to the left of the projected north pole and
is located at line, ZC, and sample, XC. 

Type 12 is a sinusoidal equal area projection of the authalic sphere, with
scale of F along the equator.  The center of the projection is at
longitude, LAM, and the equator.  The point at latitude, TH, and
longitude, LAM, is located at line, ZC, and sample, XC.  This projection
will run an order of magnitude faster if RE is set equal to RP. 

Type 13 is an oblique sinusoidal equal area projection of the authalic
sphere, with scale of F along the oblique equator.  The upper pole of the
projection is located at latitude, PHI, and longitude, LAM.  The center of
the projection is TH1 degrees to the left of the projected north pole and
is located at line, ZC, and sample, XC.  This projection will run an order
of magnitude faster if RE is set equal to RP. 

2 Restrictions

  RP must be <= RE.

2 History

  Original Programmer: J. J. LORRE (6-16-77)
  Current Cognizant Programmer: J. J. Lorre
  Source Language: FORTRAN
  Ported to UNIX:  Steve Pohorsky
  Revisions:
  05-Jun-1998 RRP  Initialize all uninitialized variables. AR-9644
  11-sep-1995 LWK  add check for |LAT|=90 in Mercator, which causes log(0)
		on Alpha (but not on the VAX!)
  28-JAN-1993 SP   CHANGED CORRECTION of 13 FEB 1986 TO USE 1.D0 INSTEAD OF
                   .99999 SINCE INVALID ARG ONLY COMES FROM LAMBAR>1.D0.
                   CORECTED BOP BY DECLARING ARGS TO BE DOUBLE PRECISION.
  22  JAN 93  SP   Ported to UNIX; Added ztranv for calls from C.
   1  JUL 91  JJL  Changes to: sinusoidal,oblique sinusoidal,mollweide,
                               simple cylindrical,oblique simple cylindrical,
                               transverse mercator.
                   To include: Authalic latitudes and conformal latitudes.
   1  JUN 91  JJL  Test file upgrade
   23 DEC 89  MAG  add mollweide projection
   10 JUN 88  RMB  ADD TYPE 13
   20 MAR 87  RMB  ADD TYPES 11 AND 12
   26 MAR 86  LWK  FIX BUG WHEN M=2 AND LAT/LONG NOT INITIALIZED
   13 FEB 86  JAM  Prevent dacos(1.00) invalid arg to math lib
   25 SEP 85  JAM  FIX BACK OF PLANET TEST FOR POLAR ORTH
   21 JUL 85  JAM  INCLUDE BACK OF PLANET (BOP) TEST FOR ORTH, PORTH
    7 JUL 85  JAM  FIX ERROR IN POLAR STERO WHEN POINT IS ON SAME LINE AS POLE
                   IN INVERSE CASE
   30 JUN 85  JAM  Correct degeneracy in Polar Orth and Lambert in calulating
                   lat and long when point is at "special" point
   30 MAR 85  JAM  FIX DATAN2(0.,0.) ERROR IN POLAR ORTH, LAMBERT CASES.
   25 MAR 84  JAM  FIX DIVIDE BY ZERO IN THEG FOR POLAR STEREO
                   FIX IT TO RESOLVE DEGENERACY WHEN LINE,SAMP ARE AT CENTER OF
                   PROJ FOR POLAR STER.
                   PUT IN CODE TO MAKE COSDEL=0 WHEN SINDEL=1 OR -1
                   PUT IN CODE TO INSURE LONGITUDE RETURNED IN POLAR ORTH IS
                   LESS THAN 360
   17 MAR 84  JAM  PUT IN FIX TO MAKE 4TH ARGUMENT TO PHIG NONZERO TO AVOID
                   ZERO DIVIDE
   21 MAY 83  JAM  CONVERTED TO VAX   
   12 OCT 81  JAM  MADE CHANGE TO CALCULATION OF SAMPLE IN RECT PROJ

