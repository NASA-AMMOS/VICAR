
1 VICAR ROUTINE GPDS_REPLACE_COLUMN_VALUE

PURPOSE

GPDS_REPLACE_COLUMN_VALUE is a MIPS PDS utility to replace a value in a 
specific column and row of a standard PDS table file of fixed record length.

CALLING SEQUENCE

	#include "gpdsroutines.h"

	main44 ()
	{

	AGGREGATE 	*label_ptr;
	char 	*table_file_name;
	char 	*label_file_name;
	int 	record_number;
	char 	*keyword_name;
	int 	item_number;
	char	formatted_value[];
	int 	status_flag;

	...
	
	label_ptr = gpds_open_file( label_file_name, &status_flag );

	... 

	gpds_replace_column_value( label_ptr, table_file_name, 
			record_number, keyword_name, item_number,
			formatted_value, &status_flag );
	...

	gpds_close_file( label_ptr );
	
	...
	
	}

INPUT

	label_ptr 	(AGGREGATE data type)

	This is the pointer to the PDS specific ODL tree which represents
	the label in the file. This value is passed on to other GPDS routines
	that read or write PDS label values.

	table_file_name	(pointer to character)

	This is a complete pathname for the PDS standard, PDS labeled table
	file that is to be read or searched.

	record_number	(integer)
	
	This is the number of the table record (row) that is to be referenced.

	keyword_name	(pointer to character string)
	
	This is the name of the PDS keyword that identifies the COLUMN
	of the PDS table in which a value is to be replaced.

	item_number	(integer)

	This is the number which references which value element of a set
	is desired to be returned. (e.g. FORMAT = {'BYTE','CHAR','REAL'}
	where 'BYTE' is item number 1 of the FORMAT values. 'CHAR' is item
	number 2 of the FORMAT values, and 'REAL' is item number 3.)

	formatted_value	(character string)

	This is the formatted character string of the value to replace the
	existing value in a column in the PDS table. Maximum length of
	character string is 257, in keeping with the PDS standard. This
	should be a null terminated character string value.

OUTPUT

	status_flag 	(integer)

	This is an indicator of the success or failure of the opening of the
	file for reading or writing of the PDS label. The following are the
	meanings of the returned values:

	0	successful writing of column value

	-1	failure in finding necessary label information to proceed
		with writing of column value to table file
	
	-2	error in opening table file (argument table_file_name)

	-3	invalid record number passed (argument record). Either
		zero, negative or greater than the maximum number of records
		in table file

	-4	invalid item number passed (argument item_number). Either
		zero, negative or greater than the maximum number of items
		in column object

	-5	memory allocation error for buffer to hold table file's
		row values
	
2 BACKGROUND

This routine is based on the PDS Label Library of the PDS Toolbox, version 5.2
dated September 27, 1991. Refer to PDS Label Library User's Guide, D-8922
for reference to software called in this source.

2 HISTORY

Programmer: 		Justin McNeill, Jr.
Cognizant programmer:	Justin McNeill, Jr.
Written:		August 1993
Revisions:

Aug. 10, 98  ...RRP... Made it ANSI compatiable so it can be compiled on
                       HP.
