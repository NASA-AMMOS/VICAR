1 LUT

  LUT - byte translation using lookup table.  Primary application is
    linear contrast enhancement (stretching) of byte images.

  Calling sequence:   CALL LUT( NS, IBUF, TAB, OBUF)
  All arguments are required.

  Arguments:  

	integer*4  NS      Number of bytes to be translated
	byte       IBUF    Buffer containing bytes to be translated
	byte       TAB     Lookup table (must contain 256 byte entries)
	byte       OBUF    Buffer to contain translated bytes. 

2 History

  Original Programmer:  L.W.Kamp,  25 June 1985
  Current Cognizant Programmer: Gary Yagi
  Source Language: FORTRAN

  This routine was written as partial support for the IBM
  subroutine LUT (by J.J.Lorre), which was in Assembler and
  was able to process halfword data as well as byte.  The
  current implementation will be upgraded when time permits.

  The routine was first coverted to FORTRAN by LWK and later re-written
  in MACRO by GMY.

  12/7/1992 LUT was reconverted to FORTRAN by M. O'Shaughnessy and 
  ported to the UNIX platform.  LUT now runs on both VAX/VMS and UNIX
  platforms, but is currently only callable by FORTRAN.
