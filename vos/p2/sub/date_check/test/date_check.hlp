1 Help for date_check subroutines:

The date_check subroutines are a set of date-utility-subroutines to
assist in verifying date formats and ranges.  Its purpose is to assist the
Year2000 compliance conversion project.

C Bridges:
 
   int zchk_year (int year);
   :: subroutine to check for 4-digit year number (i.e. YYYY format)
 
   int zchk_range (int min, int max, int number);
   :: subroutine to check the input number is between min and max.
 
   int zchk_month (int month);
   :: subroutine to check month number is in MM format and within 1-12 range.
 
   int zchk_leap (int year);
   :: subroutine to check for leap year.  It returns (1) if the given year is a
   :: leap year.
 
   int zchk_day (int year, int month, int day);
   :: subroutine to check for day of the month.
 
   int zchk_hour (int hour);
   :: subroutine to check the hour number is in hh format and within the right
   :: range.
 
   int zchk_minute (int minute);
   :: subroutine to check the minute number is in mm format and within the
   :: right range.
 
   int zchk_second (int second);
   :: subroutine to check the second number is in ss format and within the
   :: right range.
 
   int zchk_msec (int msec);
   :: subroutine to check for millisecond number is between 0-999.
 
   int zchk_julian (int year, int julian);
   :: subroutine to check the input julian day with respect to the given year.
 
   int zchk_scet_date (int *date_buf);
   :: subroutine to verify the scet date in (YYYY,DDD,hh,mm,ss,mm) format and
   :: within the correct range.
 
   int zchk_std_date (int *date_buf);
   :: subroutine to verify the standard date in (YYYY,MM,DD,hh,mm,ss,mm)
   :: format and within the correct range.


FORTAN Bridges:

   INTEGER*4 YEAR, MONTH, DAY, JULIAN
   INTEGER*4 HOUR, MINUTE, SECOND, MSEC
   INTEGER*4 SCET_DATE(6), STD_DATE(7)
   INTEGER*4 MIN, MAX, NUM, STATUS
   ... 
   CALL CHK_YEAR   (YEAR, STATUS)
   CALL CHK_RANGE  (MIN, MAX, NUM, STATUS)
   CALL CHK_MONTH  (MONTH, STATUS)
   CALL CHK_LEAP   (YEAR, STATUS)
   CALL CHK_DAY    (YEAR, MONTH, DAY, STATUS)
   CALL CHK_HOUR   (HOUR, STATUS)
   CALL CHK_MINUTE (MINUTE, STATUS)
   CALL CHK_SECOND (SECOND, STATUS)
   CALL CHK_MSEC   (MSEC, STATUS)
   CALL CHK_JULIAN (YEAR, JULIAN, STATUS)
   CALL CHK_SCET_DATE (SCET_DATE, STATUS)
   CALL CHK_STD_DATE  (STD_DATE, STATUS)
   ...

 
2 History:
 
   Original Programmer: Thomas Huang, March 23, 1998
   Source Language: C
   Revision history: New


   April 8, 1998     Thomas Huang     Corrected Fortran-bridge problem.

