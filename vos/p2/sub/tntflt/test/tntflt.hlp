1 TNTFLT

  Filtering subroutine.

  Calling Sequence:  TNTFLT( DCODE, N, A, B, NSW)

  Arguments: DCODE  -  input, integer  -  in/output data types
             N  -  input, integer  -  number of elements
             A  -  input, any data type  -  input array
             B  -  output, any data type  -  output array
             NSW  -  input, integer  -  number of weights

  Original Programmer: L. W. Kamp, 21 Feb. 1984
  Current Cognizant Programmer: L. W. Kamp
  Original Source Language: Macro
  Current Source Language: Fortran  10 Sep 1993
  Ported to Unix: D. D. Knight 10 Sep 1993

2 OPERATION

 The input array A is convolved with a filter of |NSW| elements, with 
 weights of the form:

   1, 2, 3, ..., n-1, n, n-1, ..., 3, 2, 1.  (|NSW| = 2*n+1).

 NSW must be odd. If NSW is positive then the result is normalized, if
 negative, then normalization is suppressed. Output elements on the
 edges are computed by assuming that the first and last input elements
 are repeated indefinitely.  

3 ARGUMENTS

  DCODE (integer) specifies data types:
        =1,   A is byte         B is byte
        =2,   A is halfword     B is halfword
        =3,   A is byte         B is halfword
        =4,   A is fullword     B is fullword
        =5,   A is byte         B is fullword
        =6,   A is halfword     B is fullword
        =7,   A is real*4       B is real*4
        =8,   A is real*8       B is real*8
        =9,   A is real*4       B is real*8
      negative values -3, -5, -6 and -9 reverse of above

   N (integer) specifies the number of elements in the input and output
    vectors.

   A is the input vector, containing N elements. Its data type must agree
    with the DCODE specified.

   B is the output vector containing N filtered elements. Its data type
    must agree with the DCODE specified.

   NSW is the number of filter weights. NSW must be odd, but may be positive
    or negative (the latter suppresses normalization).

