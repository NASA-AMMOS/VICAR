1  CONVEV - Converts from line, sample to latitude, longitude and the reverse.

FORTRAN Calling Sequence:

   INTEGER*4 IND	!Return status: 0=Success, 1=Point off planet
   REAL*4 DATA(40)	!Map projection or navigation data.  See below.
   REAL*4 LINE,SAMP	!Line,sample coordinates
   REAL*4 LAT		!Latitude (degrees)
   REAL*4 LON		!Longitude (degrees west)
   INTEGER*4 MODE	! 1=LAT,LON to LINE,SAMP, 2= LINE,SAMP to LAT,LON
   INTEGER*4 CONV(2216) !Geometric correcton parameters

   CALL CONVEV(IND,DATA,DATA,LINE,SAMP,LAT,LON,MODE,CONV)


C Calling Sequence:

   int ind;		/* Return status: 0=Success, 1=Point off planet */
   float data[40];	/* Map projection or navigation data.  See below */
   float line,samp;	/* Line,sample coordinates */
   float lat;		/* Latitude (degrees) */
   float lon;		/* Longitude (degrees west) */
   int mode;		/* 1=LAT,LON to LINE,SAMP, 2= LINE,SAMP to LAT,LON */
   int conv[2216];	/* Geometric correcton parameters */

   zconvev(&ind,data,data,&line,&samp,&lat,&lon,mode,conv);

   Note the & for all scalar arguments except for the mode argument
   denoting the passing by address.

2  ARGUMENTS

   DATA - 40 word buffer containing map projection or nagivation data.
   The exact contents of DATA is determined by the projection type (located
   in DATA(39)).
       
   If the projection type is a map projection, the table below
   is filled. All the data values are input although some may 
   be modified by CONVEV.

	DATA(1) = special sample point             R*4
	DATA(2) = special line point               R*4
	DATA(3) = special latitude point           R*4
	DATA(4) = latitude of spec parallel        R*4
  		or spec oblique longitude (deg)
	DATA(5) = latitude of spec parallel  (deg) R*4
	DATA(6) = special longitude (west) (deg)   R*4
	DATA(7) = scale (km/pixel)                 R*4
	DATA(8) = visible pole  1=N -1=S           R*4
	DATA(9) = north angle                      R*4
	DATA(25)= polar radius (KM)                R*4
	DATA(26)= equatorial radius (KM)           R*4
	DATA(39)= projection type                  I*4
		1=Polar Orthographic 	2=Oblique Orthographic
		3=Polar Stereographic   4=Oblique Stereographic
		5=Lambert Conformal     6=Mercator
		7=Raw Uncorrected Image 8=Geometrically Corrected Image
		9=Normal Cylindrical   10=Simple Cylindrical
 	       11=Oblique Simple Cyl   12=Sinusoidal Equal Area
  	       13=Oblique Sinusoidal   14=Mollweide
               15=Transverse Mercator  16=Perspective
  	
    If the projection type is 7,8 or 16 (Image, object or perspective)
    the following table should be filled on input:
        
        DATA(1)  OM matrix           r*8 words 1-18
        DATA(19) RS vector           r*8 words 19-24
        DATA(25) polar radius        r*4 kilometers
        DATA(26) equatorial radius   r*4 kilometers
        DATA(27) focal length        r*4 millimeters
        DATA(28) optical axis line   r*4 object space pixels
        DATA(29) optical axis sample r*4 object space pixels
        DATA(30) scale               r*4 object space pixels/millimeter
        data(31)-data(37) not used
        DATA(38) distance of planet from spacecraft r*4 kilometers
        DATA(39) integer as above

   CONV is ignored unless DATA(39)=7, image-space (in which case CONV can be
   of length 1).  The following applies to image-space only:

   CONV is the geometric correcton parameters, as created by the GEOMAV
   subroutine.  This buffer is used by subroutine TRITRA to convert image
   line-sample values from raw (image-space) coordinates to geometrically
   corrected (object-space coordinates) or vice-versa.  This type of correction
   is applicable to removing vidicon camera distortions.

   For Galileo SSI, CONV(1)-CONV(2) contain the CHARACTER*5 project name
   'GLL  ', and CONV(3) contains the camera serial number.  (Both of these
   values are as returned by routine GETPROJ).  The remainder of the buffer
   is ignored.  Galileo uses an optical distortion model since there is no
   measurable distortion in the CCD.

   When converting from line-sample to latitude-longitude (MODE=2), CONVEV will
   first remove the geometric distortion by calling CONVISOS.  (CONVISOS in
   turn calls TRITRA for vidicon cameras, or GLLGCOR for the Galileo SSI.)
   IPPCOV is then called to convert to latitude-longitude.

   When converting from latitude-longitude to line-sample (MODE=1), CORCAV is
   called to convert to line-sample coordinates in object-space.  CONVISOS is
   then called to convert to image-space coordinates.


2  HISTORY

     Original Programmer: J. J. Lorre, 16 June 1977
     Current Cognizant Programmer: J J Lorre
     Source Language: Fortran
     Ported to UNIX:  Steve Pohorsky
     Revisions: 
       30-Nov-1985 ...JAM... return IND=1 for point behind planet
                             in MODE=1 image & object space.
       13-Apr-1986 ...jam... CALL MERCPATCH & RECTPATCH, added more
                             digits to PI.
       20-Mar-1987 ...RMB... added types 11 and 12
       10-Jun-1988 ...RMB... added type 13
       25 oct   89    jjl    added project in conv words 1-2 for GLL
       1  June  91    jjl    many changes to clean up logic. new test
      22  JAN 93      SP     Ported to UNIX; Added zconvev for calls from C.
                             Added MVE calls to align data for OM and RS.

2  Subroutines called:

      TRANV, CONVISOS, CORCAV, IPPCOV, MERCPATCH, RECTPATCH
