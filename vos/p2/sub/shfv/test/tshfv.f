      INCLUDE 'VICMAIN_FOR'
      SUBROUTINE MAIN44
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     THIS IS A TEST FOR MODULE SHFV      C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      CALL XVMESSAGE(' ',' ')
      CALL XVMESSAGE('**THIS IS A TEST OF MODULE SHFV**',' ')
      CALL PARTA
      CALL PARTB       
      CALL PARTC       
      CALL TZSHFV      ! TEST C INTERFACE
      RETURN
      END

      SUBROUTINE PARTA
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C  RUN THROUGH ALL OF THE DATA TYPES  C
C  I.E. BYTE, HALF AND FULL WORD,     C
C  SHIFTING LEFT ALL THE WAY          C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      CALL XVMESSAGE(' ',' ')
      CALL XVMESSAGE('**PARTA:  ARITHMETIC SHIFT LEFT TEST',' ')

      CALL XVMESSAGE('**SHIFT A BYTE VALUE 0 THROUGH 8 BITS',' ')
      CALL SHFVX(1, 15, 1)    ! 15 = '0000000F'X

      CALL XVMESSAGE('**SHIFT A HALFWORD VALUE 0 THROUGH 16 BITS',' ')
      CALL SHFVX(2, 15, 1)    ! 15 = '0000000F'X

      CALL XVMESSAGE('**SHIFT A FULLWORD VALUE 0 THROUGH 32 BITS',' ')
      CALL SHFVX(4, 15, 1)    ! 15 = '0000000F'X

      RETURN
      END

      SUBROUTINE PARTB
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C  RUN THROUGH ALL OF THE DATA TYPES  C
C  I.E. BYTE, HALF AND FULL WORD,     C
C  SHIFTING RIGHT ALL THE WAY         C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      CALL XVMESSAGE(' ',' ')
      CALL XVMESSAGE('**PARTB:  ARITHMETIC SHIFT RIGHT TEST',' ')

      CALL XVMESSAGE('**SHIFT A BYTE VALUE 0 THROUGH 8 BITS',' ')
      CALL SHFVX(1, 128, -1)         ! 128 = '00000080'X

      CALL XVMESSAGE('**SHIFT A HALFWORD VALUE 0 THROUGH 16 BITS',' ')
      CALL SHFVX(2, -32768, -1)      ! -32768 = 'FFFF8000'X

      CALL XVMESSAGE('**SHIFT A FULLWORD VALUE 0 THROUGH 32 BITS',' ')
      CALL SHFVX(4, -2147483648, -1) ! -2147483648 = '80000000'X

      RETURN
      END

      SUBROUTINE PARTC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C  SHIFT AN ENTIRE ARRAY OF EACH DATA TYPE AND PRINT THE RESULTS    C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      BYTE       B(0:15)             !BYTE VARIABLES
      INTEGER*2  H(0:15)             !HALFWORD VARIABLE
      INTEGER*4  F(0:15)             !FULLWORD VARIABLE
      CHARACTER  CARD*80            !PRINT BUFFER

      CALL XVMESSAGE(' ',' ')
      CALL XVMESSAGE(
     .    '**PARTC: ARITHMETIC SHIFT ARRAYS OF EACH DATA TYPE',' ')

C--CREATE THE ARRAYS
      N  = 15
      DO I=0,N
         K    = I+1
         B(I) = K
         H(I) = K
         F(I) = K
      ENDDO

C--PRINT OUT ORIGIONAL VALUES TO BE SHIFTED
      CALL XVMESSAGE(' ',' ')
      CALL XVMESSAGE('**FULLWORD VERSION OF VALUES TO BE SHIFTED',' ')
 
      NBLK = N/4 + 1 
      J1 = 0
      DO J=1,NBLK            !FULLWORD VERSION DATA
         J2 = MIN(N,J1+3)
         WRITE(CARD, 120) (F(I),I=J1,J2)
         CALL XVMESSAGE(CARD, ' ')
         J1 = J1 + 4
      ENDDO

C--SHIFT BY FOUR BITS
      CALL SHFV(1, N+1, 4, B,1)   !BYTE
      CALL SHFV(2, N+1, 4, H,1)   !HALF
      CALL SHFV(4, N+1, 4, F,1)   !FULL

C--PRINT OUT THE ARRAYS IN BLOCKS OF FOUR ELEMENTS PER LINE
      CALL XVMESSAGE(' ',' ')
      CALL XVMESSAGE('**SHIFT BYTE ARRAY BY 4-BITS',' ')

      J1 = 0
      DO J=1,NBLK         !BYTE DATA
         J2 = MIN(N,J1+3)
         WRITE(CARD, 100) (B(I),I=J1,J2)
         CALL XVMESSAGE(CARD, ' ')
         J1 = J1 + 4
      ENDDO

      CALL XVMESSAGE(' ',' ')
      CALL XVMESSAGE('**SHIFT HALFWORD ARRAY BY 4-BITS',' ')

      J1 = 0
      DO J=1,NBLK           !HALFWORD DATA
         J2 = MIN(N,J1+3)
         WRITE(CARD, 110) (H(I),I=J1,J2)
         CALL XVMESSAGE(CARD, ' ')
         J1 = J1 + 4
      ENDDO

      CALL XVMESSAGE(' ',' ')
      CALL XVMESSAGE('**SHIFT FULLWORD ARRAY BY 4-BITS',' ')

      J1 = 0
      DO J=1,NBLK            !FULLWORD DATA
         J2 = MIN(N,J1+3)
         WRITE(CARD, 120) (F(I),I=J1,J2)
         CALL XVMESSAGE(CARD, ' ')
         J1 = J1 + 4
      ENDDO

      RETURN
 100  FORMAT(4Z10.2)
 110  FORMAT(4Z10.4)
 120  FORMAT(4Z10.8)
      END

      SUBROUTINE SHFVX(ICODE, IVAL, ISHIFT)

      include  'fortport'  ! DEFINES INT2BYTE

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C  TAKE AN INITIAL VALUE (IVAL) AND SHIFT IT ARITHMETICALLY THROUGH C
C  A RANGE OF BIT COUNTS USING ONE OF THE GIVEN FORMATS CONTROLLED  C
C  BY (ICODE). SHIFT LEFT WHEN  ISHIFT = +1 AND SHIFT RIGHT WHEN    C
C  ISHIFT = -1. PRINT THE RESULTS. TEST INCLUDES THE PATHOLOGICAL   C
C  CASE WHERE THE BIT COUNT = 0.                                    C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      BYTE       B(0:8)               !BYTE VARIABLES
      INTEGER*2  H(0:16)              !HALFWORD VARIABLE
      INTEGER*4  F(0:32)              !FULLWORD VARIABLE
      CHARACTER  CARD*80            !PRINT BUFFER

      CALL XVMESSAGE(' ',' ')
      WRITE(CARD, 125) ICODE, IVAL, ISHIFT
      CALL XVMESSAGE(CARD, ' ')

      K     = IVAL
      N     = ICODE*8
      DO I=0,N
         IF(ICODE .EQ. 1) THEN   
            B(I) = INT2BYTE(K)
            CALL SHFV(ICODE, 1, ISHIFT*I, B(I),1) 
         ENDIF
         IF(ICODE .EQ. 2) THEN   
            H(I) = K
            CALL SHFV(ICODE, 1, ISHIFT*I, H(I),1) 
         ENDIF
         IF(ICODE .EQ. 4) THEN   
            F(I) = K
            CALL SHFV(ICODE, 1, ISHIFT*I, F(I),1) 
         ENDIF
      ENDDO

      NBLK = N/4 + 1
      J1 = 0
      DO J=1,NBLK
         J2 = MIN(N,J1+3)
         IF(ICODE .EQ. 1) WRITE(CARD, 100) (B(I),I=J1,J2)
         IF(ICODE .EQ. 2) WRITE(CARD, 110) (H(I),I=J1,J2)
         IF(ICODE .EQ. 4) WRITE(CARD, 120) (F(I),I=J1,J2)
         CALL XVMESSAGE(CARD, ' ')
         J1 = J1 + 4
      ENDDO

      RETURN
 100  FORMAT(4Z10.2)
 110  FORMAT(4Z10.4)
 120  FORMAT(4Z10.8)
 125  FORMAT('DCODE =', I3,
     :       2X, 'IVAL  =', Z10.8,
     :       2X, 'ISHIFT=', I5)
      END
