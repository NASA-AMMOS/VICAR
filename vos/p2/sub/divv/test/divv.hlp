1 DIVV

PURPOSE: Divides the elements of two arrays

 Fortran calling sequence:  CALL DIVV(DCODE, N, A, B, INCA, INCB)
 C Calling Sequence:        zdivv(dcode, n, a, b, inca, incb);
 
  INCA and INCB are REQUIRED arguments. (dcode, n, inca, and incb are
  passed by value for zdivv.)

PARAMETERS:

      DCODE= Data types for A and B (See table next page)
      A    = Input array
      B    = Input and output array. 
             On output B(i) = B(i)/A(i)   [i=1,..,N]
      N    = The number of elements in A and B
      INCA   (input, integer)           A array index increment
      INCB   (input, integer)           B array index increment



 
         TABLE OF AVAILABLE DATA TYPES FOR A AND B 
       ====================================================
       DCODE   A     B                DCODE   A     B 
       ====================================================
        1     byte  byte               6     half  full
        2     half  half               7     real  real
        3     byte  half               8     doub  double
        4     full  full               9     real  double
        5     byte  full
       ====================================================         
       Negative values  of DCODE (-1,-9) reverse data types
       for A and B

2 NOTES

HISTORY
  Original Programmer:  G.M. Yagi  02/04/75
  Converted to Vax by:  L.W. Kamp  12/15/82
  Current Cog Progr:    L.W. Kamp
  Ported to UNIX:       Steve Pohorsky

 REVISION HISTORY:                                          
   3-26-93  ..SP....  Made portable for UNIX - Adapted from ASU version.
                      Added zdivv for calls from C.  
                      Changed OPTIONAL PARAMETERS to REQUIRED PARAMETERS
                      FOR PORTABILITY.
   9-9-93   ..SP....  Casted unsigned char to int in a few places where
                      ANSI C compiler was giving a warning. (See SPARC
                      Compiler C Transition Guide.)

DESCRIPTION

  This routine divides the elements of two given arrays A and B.  On output  
  B(i) = B(i)/A(i). The two arrays may be any of the data types listed in the
  table for DCODE, which controls the assumed combination of data types.
  NO checking for division by zero is done.


  The calling sequence:

       CALL DIVV(DCODE, N, A, B, INCA, INCB)

  Is equivalent to the following code:

       I = 1
       J = 1
       DO K=1,N
          B(J) = B(J)/A(I)
          I    = I + INCA
          J    = J + INCB
       ENDDO

  Where all arguments are INTEGER*4 except for the arrays whose
  data types are controlled by the data code DCODE.
