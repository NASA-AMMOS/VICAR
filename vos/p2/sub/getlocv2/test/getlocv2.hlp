1 GETLOCV2

    GETLOCV2 subroutine to extract reseau locations for VGR

2 USAGE

  Calling Sequence:  Call GETLOCV2(ibis,nrows,buf,fdata,lret)
 
c     Arguments: ibis = ibis file # from ibis_file_open call (input)
c                nrows = # of rows in the reseau file (input)
c                buf = nasty remnant from original code
c                      this array has 5 variables that are in common
c                      in the main and are as follows:
c                      frame,camera,filter,year and day - sorry about that
c                      (input)
c                fdata = array containing reseau locations (returned)
c                lret = error flag (returned)
c                       0 = good
c                       1 = error occurred


2 HISTORY

  Original Programmer: Gary Yagi, 20 April 1978
  Current Cognizant Programmer: Barbara McGuffie
  Source Language: Fortran

2 OPERATION

	This subroutine (along with PUTLOC) is designed to standardize 
        the manner in which records in the reseau location files are 
        read, stored and updated.  When reading or updating the file, 
        the following conventions should be observed:

	1. Entries are uniquely stored by frame number and camera serial
	   number (i.e. there may be two or more records with the same
	   frame number, but no more than one per camera.

	2. Any zero entry in the frame table FTBL corresponds to an unused
	   record.


	3. When a record is added or deleted from the file, this sequence 
	   should be followed:

		a. INITIALIZING THE FILE.  Before the file can be read
		   or updated, the following steps must be executed:
			i. open the file with ibis_file_open
			   with repositioning.
		       ii. get the number of rows in the file via
                           ibis_file_get
		b. READING A RESEAU RECORD.  The reseau locations for a 
		   specified frame number and camera serial number are read
		   from the file as follows:
		   	i. set BUF(1) =  frame number
		       ii. set BUF(2) =  camera serial number
		      iii. call GETLOCV2
		   GETLOCV2 will search the directory for the specified frame
		   and camera.  If BUF(2) = 0, then the first entry with the
		   matching frame number is used.  If an entry is found, then
		   GETLOCV2 will read the corresponding reseau location record.
		   Frame number, camera, filter, year and day are stored in
                   BUF(1) thru BUF(5). Reseau location information is stored in
		   fdata(1) through fdata(404). If no entry is found in the 
                   file, then GETLOCV2 returns lret as 1 - error condition.
		c. STORING A RESEAU RECORD.  The reseau locations for a spec-
		   ified frame number and camera serial number are stored into
		   the file as follows:
			i. close the file and open for update
		       ii. set BUF(1) = frame number
		      iii. set BUF(2) = camera serial number
		       iv. call PUTLOCV2
		   PUTLOCV2 will search the directory for the specified frame
		   and camera.  If an entry is found, then the information 
		   contained in BUF is written into the corresponding reseau
		   record location in the file, overwriting any old informa-
		   tion.  If no entry is found then the information is stored 
                   in the next row in the file.

3 WARNING

	   Extreme care must be exercised when using PUTLOCV2 to ensure
	   that the file is not inadvertantly destroyed through 
	   improper use of these routines.  It is requested that 
	   anyone using these routines to update the files please 
	   consult the author first.


3 BUFFERS

	BUF(1) = FRAME NUMBER
	BUF(2) = CAMERA NUMBER
	BUF(3) = FILTER
	BUF(4) = YEAR
	BUF(5) = DAY
	     .      				
	FDATA(1) = RES(1,1)
        FDATA(404) = RES(202,2)

3 EXAMPLE

	The following VICAR program reads a reseau location record from
	the reseau location file, changes the filter and date information,
	and re-writes the record into the file.

	Frame, camera, filter, year, and day information is held in JDATA 
        and reseau location record is held in RES.

		Subroutine main44
		implicit integer (a-z)
                integer jdata(5)
                real res(2,202)


		call xvunit( in, 'INP', 1, status)
		call xvopen( in, status)
                call ibis_file_open(in,ibis,'read',409,99999,
     -                        format,0,status)
                if ( status .ne. 1 ) call ibis_signal_u(in2,status,1)
                icount = ibis_file_get(ibis,'nr',nrows,1,1) ! get nrows
                if ( nrows .lt. 0 ) call ibis_signal(ibis,icount,1)
		frame = 1875
		camera = 4
                jdata(1) = frame
                jdata(2) = camera	
   	        call getlocv2(ibis,nrows,jdata,res,iret)
                if ( iret .eq. 1 ) go to 999
		filter = 4
		year = 77
		day = 1
                jdata(3) = filter                
                jdata(4)
		call putlocv2(in,ibis,nrows,jdata,res)
                call ibis_file_close(ibis,' ',status)
		return
	990	call abend
		end
