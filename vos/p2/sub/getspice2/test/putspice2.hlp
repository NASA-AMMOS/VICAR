1 PUTSPICE2

VICAR subroutine PUTSPICE2 stores camera pointing data for an image.  The
routine is currently limited to Galileo.  Voyager implementation to follow.

PUTSPICE2 extracts information input via user parameters to set up the call to
PUTSPICE95.  It then calls PUTSPICE95 and returns the status from that call.

FORTRAN calling sequence:

    CHARACTER*4 CKNAME		!NAIF,FARE,NAV,NAV2,DAVI,AMOS, or NEAR
    CHARACTER*6 PROGRAM		!first 6 characters of program name
    INTEGER*4 IND		!status returned by PUTSPICE95
    REAL*8 BUF(100)		!SPICE buffer input to PUTSPICE95
    INTEGER*4 IBUF(200)
    EQUIVALENCE (BUF,IBUF)

    CALL PUTSPICE2(CKNAME,PROGRAM,BUF,ind)

  All arguments are inputs except for the return status.

C calling sequence:

    #include "xvmaininc.h"
    #include "ftnbridge.h"
    #include "spiceinc.h"
    char ckname[5];
    char program[7];
    buf_union_typ  *buf;
    int ind;

    ind = zputspice2(ckname,program,buf);

  All arguments are inputs.

In addition, the calling program must have the following parameters defined in
its PDF:  SPICEMODE, INSTITUTE, PURPOSE, REQNUM, CDATE, and GROUPID.  It is strongly
urged that the parameter definitions and accompanying help text be copied from
TPUTSPICE2.PDF, located in GETSPICE2.COM.

2 INPUT ARGUMENTS:

  CKNAME determines the C kernels into which the camera pointing will be stored:

    CKNAME	C KERNEL
    --------    -------------
    DAVI	MIPS_DAVI.CK
    NAV		MIPS_NAV.CK
    FARE	MIPS_FARENC.CK
    NAV2	MIPS_NAV2.CK
    NEAR	MIPS_NEAR.CK
    AMOS	MIPS_AMOS.CK

  PROGRAM = first 6 characters of the calling program.
  BUF = 100 element double precision SPICE buffer to be passed to PUTSPICE95.
        See the help for routine GETSPICE95 for a full description of BUF.
  
  OUTPUT ARGUMENTS:

    IND = status of call
             1 = Success
             0 = Failure
            -1 = Unrecognizable Project Id
            -2 = Error Opening Kernel File
            -3 = Cannot Update NAIF KERNEL
            -4 = Error Packing Seg. Descriptor
            -5 = Error Starting New Array
            -6 = Error Adding New Array
            -7 = Daf-file Not Close Properly
            -8 = Bad User Input Data

2 OPERATION

Before calling PUTSPICE2, the following elements of BUF must be correctly
filled:

  IBUF(1) = spacecraft ID consistent with NAIF convention (GLL=-77,
            VGR-1= -31, VGR-2= -32)
  IBUF(2) = instrument (ISSN = VGR NA, ISSW=VGR WA, SSI=GLL camera)
  IBUF(3)-IBUF(9) = spacecraft event time
  IBUF(179)-IBUF(181) = target name

Normally, these buffer locations are set by retrieving the predict SPICE data
via a previous call to GETSPICE2.

Also, the improved camera pointing must be stored in BUF(41)-BUF(49).

PUTSPICE2 uses the SPICEMODE parameter to determine whether to store the
improved camera pointing in local SPICE kernels or via the remote SPICE server.
If SPICEMODE is defaulted, the value of the logical name DEFAULTSPICE is used.

PUTSPICE2 also retrieves the INSTITUTE, PURPOSE, PROGRAM, REQNUM, CDATE, and
GROUPID parameters.  If INSTITUTE is defaulted, the value of the logical name
VICAR_SITE is used.  On VAX-VMS, the GROUPID parameter is ignored.  The
group ID is automatically extracted from the last 3 characters of the user ID.
If GROUPID is defaulted on UNIX, the value of the environment variable GROUPID
is used.

The above data is stored in BUF as follows:

  IBUF(11) = CKNAME (e.g. FARE)
  IBUF(169)-IBUF(171) = CDATE  (e.g. 199603151213)
  IBUF(173) = PURPOSE (e.g. COLOr reconstruction)
  IBUF(174)-IBUF(175) = PROGRAM (e.g. FARENC)
  IBUF(176) = REQNUM  (e.g. 0123)
  IBUF(177) = USERID  (e.g. GMY)
  IBUF(178) = GROUPID (e.g. 059)
  IBUF(189) = INSTITUTE (e.g. MIPS)

PUTSPICE95 is then called.  The C-matrix is copied from BUF and stored as a
segment in the C-kernel, along with the spacecraft ID.  The provenance
information is transferred from BUF and stored in the 40 character segment ID
as follows:

                               1         2         3         4
  Segment ID column:  1234567890123456789012345678901234567890
  Contents:           MIPSCOLOFARENCN0150123199603151213GMY059

2 HISTORY

  Original progammer:  Gary Yagi, Mar 25, 1996
  Current cognizant programmer:  Gary Yagi
  Revisions:  New
