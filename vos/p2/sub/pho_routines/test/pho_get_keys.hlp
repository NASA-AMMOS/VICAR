================================================================================
VICAR SUBROUTINE			phoGetKeys
================================================================================

Purpose:		Returns the number and a list of all parameter 
			keywords that are valid for the current 
			photometric function 

================================================================================

Function:		First, determines the current photometric 
			function from to photometric data object;  
			second, retrieves the number of parameters for
			this function;  
			third retrieves the list of parameter keyword names.
			It is the responsibility of the calling 
			program to allocate sufficient memory to hold 
			the array that will be returned.  
			Only in C: if the program is called with no 
			allocation for the keyword array, the routine 
			will return the number of keywords (num_kwd) only.  
			The user can then allocate memory and make a 
			second call to the routine. 
			Alternatively, the user can allocate the 
			arrays to their maximum length, which in C is 
			phoMAX_PARAM_PER_FUNC* (phoMAX_KEYWD_LENGTH+1) 
			(these constants are defined in pho.h and pho.fin).

================================================================================

Requirements and Dependencies:

Libraries and subroutines
required to run routine:	

Necessary include files
for calling routine 
or program:			pho.h (for C routines )
				pho.fin (for FORTRAN routines )

Other requirements: 		need to run routine phoInit, phoSetFunc first

Main programs from which
subroutine will be called:	general application software and 
				higher-level subroutines

================================================================================

Interfaces: Input / Output Parameters:

Calling Sequence:		

	calling from C:		include "pho.h"
				PHO PHO_DATA;
				char *keywords;
				int num_kwd, status;
				...
				status = phoGetKeys( PHO_DATA, 0,&num_kwd );
				keywords = (char *)malloc( num_kwd *
				( phoMAX_KEYWD_LENGTH+1 ) * sizeof(char));
				status = phoGetKeys( PHO_DATA, keywords,
				&num_kwd );

	calling from FORTRAN:	INCLUDE 'pho'
				CHARACTER*(PHO_MAX_KEYWD_LENGTH) 
			*	keywords(PHO_MAX_PARAM_PER_FUNC)
				INTEGER PHO_DATA, num_kwd, status
				...
				call pho_get_keys( PHO_DATA, keywords, 
			*	num_kwd, status )

Necessary include files
from calling routine 
or program:			pho.h (for C routines)
				pho.fin (for FORTRAN routines )

Parameters:
	
	Name		Type		In/Out	Description

	PHO_DATA	PHO_STRUCT	Input	Address of the photometric 
						data object

	keywords		char	Output	array of keywords
		[num_kwd]*[phoMAX_KEYWD_LENGTH+1]

	num_kwd	 	int	 	Input	number of keywords 
					/Output

	status		int		Output	Error status:
						phoSUCCESS - success : 
							list of keywords 
							returned
						phoFUNC_NOT_SET failed : 
							photometric function 
							not set in the 
							pho_object

================================================================================
Background and References:
================================================================================

Other Information:

	Software Platforms:		VICAR (VMS/UNIX)

	Hardware Platforms:		No particular hardware required;
					tested on ....

	Programming Language:		ANSI-C 
					ANSI-FORTRAN bridge

	Specification by:		Friedel Oschuetz, DLR

	Initial Version :		Lucas Kamp, JPL

	Cognizant Programmer:		Friedel Oschuetz

	Date of Specification:		Jan. '94

	Time Estimated for 
	Routine Development: 		1 day

	Estimate of Delivery Date:

	History:			Lucas Kamp, Jan. '94 : Original
					Friedel Oschuetz, March '94 : 
						possibility to return only the 
						number of keywords (without 
						responsibility of memory 
						allocation for the keyword list) 
================================================================================

