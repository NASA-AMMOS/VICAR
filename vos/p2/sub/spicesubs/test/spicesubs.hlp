1 spicesubs

  SPICESUBS contains common subroutines which provide basic functions
  helpful in using NAIF SPICE. The following subroutines are provided:

         get_body_ids           - returns s/c, target, and central body
                                  integer identifiers given s/c and
                                  target names

         get_body               - returns body name or body identifier
                                  given the other

         eul2mat                - converts RA, DEC, and TWIST to matrix
                                  
         chgvec                 - rotates a double precision vector
                                  between two reference frames

         chgmat                 - rotates a double precision 3*3 matrix
                                  from between J2000 and B1950 reference
                                  frames

         combine_scet           - combines scet from 6 short integers
                                  used by catalog to format used by SPICE

         split_scet             - splits scet from format used by SPICE
                                  to six short integers used by catalog

         get_latlon             - returns latitude and longitude given
                                  body radius and vector in bodyfixed
                                  coordinates

         load_spice             - loads current kernels

         massage_string         - reformats string adding null terminator
                                  and removing trailing spaces

         summarize_spk          - creates structure containing summary
                                  of an SP kernel

         summarize_spk          - creates structure containing summary
                                  of a C kernel

         get_basics             - gets the basics from SPICE

         get_kdb                - loads kernel database

2 get_body_ids

  Purpose:   This subroutine returns spacecraft, target, and central
             body integer identifiers given spacecraft and target names.

  C Calling sequence:   #include "spices89.h"
                      integer status;
                      char    		craft[LEN_CRAFT+1];
                      char     		target[LEN_TARGET+1];
                      body_id_typ	ids;

                      status = get_body_ids(craft, target, &ids);

  Input:    craft  - null terminated ascii string
            target - null terminated ascii string 

  Output:   ids:
              sc_id      - NAIF/SPICE integer identifier for spacecraft
              target_id  - NAIF/SPICE integer identifier for target
              center_id  - NAIF/SPICE integer identifier for central body
              sunid_id   - NAIF/SPICE integer identifier for the sun

  Status returns:   1 = all is OK
                    0 = invalid spacecraft or target name or
                        file containing all is inaccessible

2 get_body

  Purpose:   This subroutine returns the body name or NAIF/SPICE 
             integer identifier for a body, given the other.

  C Calling sequence:   #include "spices89.h"
                      int      status;
                      char     target[LEN_TARGET+1];
                      int      target_id;

                      status = get_body(BODY_ID, &target_id, target);

  Input:    int       - set to BODY_ID if you want the identifier
                         or to BODY_NAME if you want the ascii name

            target     - null terminated ascii string 
              or
            target_id  - target integer identifier

  Output:   target     - null terminated ascii string 
              or
            target_id  - target integer identifier

  Status returns:   1 = all is OK
                    0 = invalid body name or body identifier or
                        file containing all is inaccessible

2 eul2mat

  Purpose:   This subroutine converts input right ascension, declination,
             and twist into a matrix.

  C Calling sequence:   #include "spices89.h"
                      	double   ra;
                      	double   dec;
                      	double   twist;
                      	double   c_matrix[9];

                      	zeul2mat(ra, dec, twist, &c_matrix);

  Input:    ra    - right ascension
            dec   - declination
            twist - twist angle

  Output:   c_matrix - output C matrix

  Status returns:   none

2 chgvec

  Purpose:   Rotates a double precision vector between two
             reference frames.

  C Calling sequence:	#include "spices89.h"
                     	double   in_vec[3];
                     	double   out_vec[3];
                     	int      in_ref;
                     	int      out_ref;

                     	chgvec (in_vec, in_ref, out_ref, &out_vec);

  Input:     in_vec  -  vector to rotate
             in_ref  - reference frame of vector to rotate
             out_ref - reference frame of rotated vector

  Output:    out_vec - rotated vector

  Status returns:   none

2 chgmat

  Purpose:   Rotates a double precision 3*3 matrix between J2000 and
             EME1950 reference frames.
  C Calling sequence:  	#include "spices89.h"
			int to, from;
                     	double   matrix[9];

                     	chgmat (from, to, &matrix);

  Input:     from - 	reference frame you have
             to   - 	reference frame desired
	            	matrix in J2000 reference frame

  Output:    matrix in B1950 reference frame

  Status returns:   none

2 combine_scet

  Purpose:   This subroutine combines the scet from six input short
             integers found in the catalog into a format acceptable 
             to NAIF/SPICE routines.

  C Calling sequence:	#include "spices89.h"
                      	short    year;
                      	short    day;
                      	short    hour;
                      	short    minute;
                      	short    second;
                      	short    milli;
                      	char     scet[LEN_SCET+1];

                      	combine_scet(year, day, hour, minute, second,
                        	milli, scet);

  Input:    short integers of year, day, hour, minute, second, millisec
            of scet found in catalog

  Output:   scet - in format acceptable to NAIF/SPICE

  Status returns:   none

2 split_scet

  Purpose:   This subroutine splits the scet in a format acceptable 
             to NAIF/SPICE routines into six input short integers found
             in the catalog.

  C Calling sequence:	#include "spices89.h"
                      	short    year;
                      	short    day;
                      	short    hour;
                      	short    minute;
                      	short    second;
                      	short    milli;
                      	char     scet[LEN_SCET+1];

                      	split_scet(scet, &year, &day, &hour, &minute, 
                        	&second, &milli);

  Input:    scet - in format acceptable to NAIF/SPICE

  Output:   short integers of year, day, hour, minute, second, millisec
            of scet found in catalog

  Status returns:   none

2 get_latlon

  Purpose:   This subroutine returns the planetocentric latitiude and 
             west longitude of the intersection of an input vector in 
             bodyfixed coordinates with the body.

  C Calling sequence:	#include "spices89.h"
                      	radii_typ radius;
                      	double	from_to_bodyfixed[3];
                      	double	lat;
                      	double	lon;

                      	get_latlon(radius, from_to_bodyfixed,
                        	&lat, &lon);

  Input:    radius - semi major, semi minor, and polar radii of body
            from_to_bodyfixed - vector

  Output:   lat - planetocentric latitude of intersection
            lon - west longitude of intersection

  Status returns:   none

2 load_spice

  Purpose:   This subroutine loads available kernels.

  C Calling sequence:	#include "spices89.h"
                      	int status;

                      	status = load_spice();

  Input:    spacecraft id - NAIF's own version of spacecraft number

  Status returns:   1 = all is OK
                    0 = SPICE routine failure

2 massage_string

  Purpose:   This subroutine reformats an input string by adding
             a null terminator, removing trailing spaces and changing
             text to uppercase.

  C Calling sequence:	#include "spices89.h"
                      	char     in_target[LEN_TARGET+1];
                      	char     target[LEN_TARGET+1];

                      	massage_string(target, in_target, LEN_TARGET);

  Input:    in_target  - character string of fortran or catalog origin
                         which is missing some important attributes

            LEN_TARGET - length of in_target

  Output:   target     - null terminated, uppercase, and 'trailing spaces
                         removed' string of length 1 greater than LEN_TARGET
                         (need room for that null character)

  Status returns:   none

2 summarize_spk

  Purpose:   This subroutine loops through an open (with dafopn) SPK
             kernel extracting the body and/or spacecraft name along
             with beginning ephemeris time and ending ephemeris time
             for each segment.

  C Calling sequence:	#include "spices89.h"
                      	int      handle;
                      	spk_summary_typ	summ;

                      	summarize_spk(handle, &summ);

  Input:    handle    - handle of kernel file returned by DAFOPN
                        call

  Output:   summ      - a structure containing spacecraft and body
                        counts as well as ephemeris time periods
                        for each body and spacecraft (see spiceinc.h)

  Status returns:   none

2 summarize_ck

  Purpose:   This subroutine loops through an open (with DAFOPN) CK
             kernel extracting the spacecraft and instrument name along
             with beginning ephemeris time and ending ephemeris time
             for each array.

  C Calling sequence:	#include "spices89.h"
                      	int      handle;
                      	ck_summary_typ	summ;

                      	summarize_ck(handle, &summ);

  Input:    handle    - handle of kernel file returned by DAFOPN
                        call

  Output:   summ      - a structure containing an array count and
                        spacecraft and instrument data for each array
                        as well as ephemeris time periods 

  Status returns:   none

2 get_basics

  Purpose:   This subroutine calculates basic vectors and angles
             which can be used for further calculations.

  C Calling sequence:	#include "spices89.h"
                      	body_id_typ     ids;
                      	int             instr;
                      	double          etime;
		      	double	      	sclk;
		      	double	      	sclk_tol;
                      	char            system;
                      	basics_typ      basics;
		      	double	      	c_matrix[9];
		      	double	      	c_av[3];

            		status = get_basics(ids, instr, etime, sclk, 
				sclk_tol, system, &basics, &c_matrix, &c_av);

  Input:    ids - body ids returned from get_body_ids
            instr - instrument id as defined in spiceinc.h
            etime - ephemeris time
	    sclk - encoded spacecraft-clock
	    sclk_tol - encoded spacecraft-clock tolerance
            system - system of interest

  Output:   basics - a structure containing vectors necessary
                     and angles for further calculations
	    c_matrix - camera pointing matrix
	    c_av - camera angular velocity vector

  Status returns:   INSUFF_EPHEMERIS
                    INSUFF_POINTING
                    SUCCESS

2 get_kdb

  Purpose:   This subroutine retrieves data from kernel database KERNELDB
             to a kernel buffer.

  C Calling sequence:	#include "spices89.h"
                      	extern	kernel_db_typ	kernel_db[MAX_KERNELS];
                      	extern	int		kernel_count;

                      	status = get_kdb();

  Input:    none

  Output:   kernel_db    - a structure containing currently defined data
                           about available SPICE kernels

            kernel_count - the number of kernels in kernel_db

  Status returns:   1 = all is OK
                    0 = incorrect data in kernel database

2 History

Original programmer: Sheila Tews, 17 Aug 89
Cognizant programmer: Gary Yagi, 7 Nov 90
Source language:     C
Revisions:
  27 Jun 94  T.Truong Ported to ALPHA-VMS:
                      comment out vwait
                      changed #define USES_C to #define USES_ANSI_C
                      added length variable in massage_string
  18 Nov 93  T.Truong Ported to UNIX:
		      removed descr1,descr2,descr3,init_spice.
		      rewrote get_kdb from fortran to c.
  01 Apr 92  G.Yagi   Modify GET_BODY_IDS for GASPRA
  07 Nov 90  G.Yagi   Modify for changes in C-kernel format and Sept
		      NAIF SPICE delivery.  Changed test file to test
		      Galileo rather than Voyager (because of the
		      C-kernel changes, GET_BASICS no longer works
		      on the obsolete Voyager C-kernels).
  08 Nov 90  G.Yagi   Restored basics data structure to original form
			(since it is used to define catalog record).
  10 Nov 90  G.Yagi   Modified entry point SUMMARIZE_CK for new C-kernel
		      format.

  12 Jun 96  S. Le    Made the following changes to "tspicesubs.c" to
		      get it to compile correctly:
			1/ main44() ---changed to---> void main44()
			2/ zreset() ---changed to---> void zreset1()
