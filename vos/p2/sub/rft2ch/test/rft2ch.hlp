1 RFT2CH

	Ported to UNIX:  T. L. Truong			25 June 1993
	Original programmer:  J. J. Lorre		1 April 1979
	Current cognizant programmer:  C. C. Avis	1 Jan. 1984

2 PURPOSE

	To compute 1-D and 2-D real FFT's in core.  RFT2CH calls RFT2,
	DFFT, and REALTR.

2 CALL SEQUENCE
	
  FORTRAN calling sequence and parameters:

	call rft2ch(BUF,M,N,MODE)
 
   where:
   integer*4 M	- no. of lines in the data matrix to be transformed
   integer*4 N	- no. of samples in the data matrix to be transformed
   integer*4 MODE- direction of the transform:  1 = direct
					       -1 = inverse
   real*4 BUF	- contains data to be transformed.  The data should be formated
		as REAL*4 data.  The transform will be organized differently 
		for 1-D and 2-D arrays as follows:

		M = 1 (1-D):  BUF must be of length N/2 + 1 complex values.
			The transform is organized as pairs of floating point 
			values, (real,imaginary).
		M > 1 (2-D):  BUF must be of dimension (N,M+2), in the 
			FORTRAN sense, of real data values.  The odd lines 
			contain the real values and the even lines the 
			imaginery values.

  C calling sequence and parameters:

	rft2ch(BUF,M,N,MODE)

   where:
   int M	- no. of lines in the data matrix to be transformed
   int N	- no. of samples in the data matrix to be transformed
   int MODE	- direction of the transform:  1 = direct
					      -1 = inverse
   float *BUF	-  contains data to be transformed.  The data should be 
		formated as floating point data.  The transform will be 
		organized differently for 1-D and 2-D rays as follows:

                M = 1 (1-D):  BUF must be of length N/2 + 1 complex values.
                        The transform is organized as pairs of floating point 
                        values, (real,imaginary).
		M > 1 (2-D):  BUF must be of dimension [M+2] [N], in the 
                        C sense, of real data values.

2 METHOD

	The data to be transformed as well as the inverse-transformed data
	comprises the first N fullword in the 1-D case, and the first NxM
	fullwords in the 2-D case.  When the inverse transform is computed,
	the data will be scaled slightly differently.  In order to return the
	data to its original scale, one must divide it by the following values:
 	  1-D :  2*N
	  2-D :  2*N*M
	N and M need not be powers of 2.  For more details, see RFT2 help.

