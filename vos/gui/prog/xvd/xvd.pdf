procedure help=*
parm inp string count=(0:3) default=--
parm options string default=""
refgbl $syschar
body
local f string
local files string
let files = ""
if ($count(inp) >= 1)
   let f = inp(1)
   let files = "&f"
end-if
if ($count(inp) >= 2)
   let f = inp(2)
   let files = "&files &f"
end-if
if ($count(inp) >= 3)
   let f = inp(3)
   let files = "&files &f"
end-if

if ($syschar(1) = "UNIX")
   ush $GUILIB/xvd &options &files &
else
   dcl spawn/nowait xvd &options &files
end-if
end-proc
.title
VICAR program xvd
.help
The xvd program is an X-windows display program.  It is intended as the main
display of the GUI, and to eventually replace VIDS.

Complete documentation for xvd is available on-line at:
<http://www-mipl.jpl.nasa.gov/Xvd_1.0/Xvd/Xvd.html>
or via clicking on the various Help options in the program.

xvd is an interactive, X-windows program.  Before using it, you must have
set up the X display connection.  On a Unix machine, this is typically done
via "setenv DISPLAY" while on VMS it is typically done via "set disp/create".
Consult system documentation for details on establishing an X connection, or
refer to the on-line tutorial in Mosaic at
<http://www-mipl.jpl.nasa.gov/wstutor/set_x_display.html>
Please note that the X display must be set up outside of the VICAR environment.
.page
Running the program:

The xvd program may be run either from within VICAR, or directly from
the shell or DCL.  In order to run it from the shell (in Unix), make sure
"$GUILIB" is in your path, or specify it explicitly:

	% $GUILIB/xvd image.red image.grn image.blu

From VMS, "xvd" is automatically defined for you:

	$ xvd image.red image.grn image.blu
.page
From VICAR, usage conforms to standard VICAR input file conventions:

	VICAR> xvd (image.red,image.grn,image.blu)

xvd can handle 0 to 3 filenames, and abbreviations and band specifications
(in parentheses after the filename) are allowed.  See the Mosaic help for
complete documentation.

Command-line options may be given to the program via the "options" parameter;
see the help for that parameter for details.

.level1
.vari inp
Input file(s)
.vari options
Command-line options
.level2
.vari inp
Zero to three input files.  A B&W image has one input file, a color image
typically has three input files in the order (red, green, blue), or a single
3-band input file.

If a filename starts with a ".", the previous name is stripped of its
extension, and the given extension is used instead.  This allows files to
be specified using abbreviations:

	xvd (/usr/local/images/io.red .grn .blu)

In addition, a band number in parentheses may follow any filename, but there
must not be any spaces.  You may have to quote the string.

Filename and especially band selection is much easier using the Open...
dialog box in the program.

.vari options
Various command-line options can be given to the program.  Typical options
might be a -display to redirect the display somewhere, or a -xrm to set a
resource.  See the on-line help for details.

One trouble spot with TAE is when you need to quote strings.  For example,
a -xrm specification has to be of the form:  -xrm "resource: value"  where the
double quotes are actually present in the string submitted to DCL or the
shell.  Specifying such resources is unfortunately platform-dependent.
Unix will accept single quotes (usually), while VMS requires double quotes.
You can double the quotes for VMS, however, this doesn't work on Unix.
For example:

Unix:
	xvd /usr/local/images/io.red opt="-xrm '*imageZoom: -2'"

VMS:
	xvd images:io.red opt="-xrm ""*imageZoom: -2"""
.end
